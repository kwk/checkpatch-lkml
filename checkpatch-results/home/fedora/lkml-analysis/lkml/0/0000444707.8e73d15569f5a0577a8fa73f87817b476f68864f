WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
diff -urN linux-2.5.28/include/asm-i386/spinlock.h linux/include/asm-i386/spinlock.h

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#53: FILE: include/asm-i386/spinlock.h:135:
+static inline void _raw_spin_lock_bit(int nr, unsigned long * lock)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#68: FILE: include/asm-i386/spinlock.h:150:
+static inline void _raw_spin_unlock_bit(int nr, unsigned long * lock)

ERROR:SPACING: space required before the open parenthesis '('
#135: FILE: include/linux/spinlock.h:50:
+} while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#141: FILE: include/linux/spinlock.h:56:
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#156: FILE: include/linux/spinlock.h:99:
+#define spin_lock_init(lock)		do { (void)(lock); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#156: FILE: include/linux/spinlock.h:99:
+#define spin_lock_init(lock)		do { (void)(lock); } while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#157: FILE: include/linux/spinlock.h:100:
+#define _raw_spin_lock(lock)		(void)(lock) /* no "unused variable" */

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#158: FILE: include/linux/spinlock.h:101:
+#define spin_is_locked(lock)		((void)(lock), 0)

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

ERROR:SPACING: space required before the open parenthesis '('
#160: FILE: include/linux/spinlock.h:103:
+#define spin_unlock_wait(lock)		do { (void)(lock); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#160: FILE: include/linux/spinlock.h:103:
+#define spin_unlock_wait(lock)		do { (void)(lock); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#161: FILE: include/linux/spinlock.h:104:
+#define _raw_spin_unlock(lock)		do { (void)(lock); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#161: FILE: include/linux/spinlock.h:104:
+#define _raw_spin_unlock(lock)		do { (void)(lock); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#163: FILE: include/linux/spinlock.h:106:
+#define _raw_spin_lock_bit(nr, lock)	do { (void)(lock); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#163: FILE: include/linux/spinlock.h:106:
+#define _raw_spin_lock_bit(nr, lock)	do { (void)(lock); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#164: FILE: include/linux/spinlock.h:107:
+#define _raw_spin_unlock_bit(nr, lock)	do { (void)(lock); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#164: FILE: include/linux/spinlock.h:107:
+#define _raw_spin_unlock_bit(nr, lock)	do { (void)(lock); } while(0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000444707.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 7 warnings, 0 checks, 118 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000444707.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
