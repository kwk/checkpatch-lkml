WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#71: 
--- linux-2.6-working.orig/arch/arm/Kconfig	2006-01-19 17:41:46.000000000 +0000

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#109: FILE: drivers/can/Kconfig:3:
+config CAN
+        tristate "CAN support"
+        depends on NET
+        help
+          Controller Area Network (CAN) is a serial bus network used in
+          industrial and automotive control and monitoring applications.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#130: FILE: drivers/can/Makefile:2:
+EXTRA_CFLAGS += -DDEBUG

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#139: FILE: drivers/can/can.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#157: FILE: drivers/can/can.c:19:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#161: FILE: drivers/can/can.c:23:
+	struct can_device *can = to_can_device(cdev);
+	return sprintf(buf, "%d\n", can->get_bit_rate(can));

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#172: FILE: drivers/can/can.c:34:
+	bit_rate = simple_strtoul(buf, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please don't use multiple blank lines
#180: FILE: drivers/can/can.c:42:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#205: FILE: drivers/can/can.c:67:
+struct can_device * __init_or_module

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#206: FILE: drivers/can/can.c:68:
+can_device_alloc(struct device *dev, unsigned size)

WARNING:INDENTED_LABEL: labels should not be indented
#256: FILE: drivers/can/can.c:118:
+  error_class:

WARNING:INDENTED_LABEL: labels should not be indented
#258: FILE: drivers/can/can.c:120:
+  error_net:

WARNING:INDENTED_LABEL: labels should not be indented
#279: FILE: drivers/can/can.c:141:
+  error:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#292: FILE: include/linux/can/can.h:1:
+/*

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#349: FILE: include/linux/can/can.h:58:
+	uint8_t data[CAN_FRAME_MAX_DATA_LEN];

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#377: FILE: include/linux/can/can.h:86:
+struct can_device * can_device_alloc(struct device *dev, unsigned size);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#377: FILE: include/linux/can/can.h:86:
+struct can_device * can_device_alloc(struct device *dev, unsigned size);

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: include/linux/can/can.h:92:
+        return class_get_devdata(&can->cdev);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: include/linux/can/can.h:92:
+        return class_get_devdata(&can->cdev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: include/linux/can/can.h:97:
+        class_set_devdata(&can->cdev, data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: include/linux/can/can.h:97:
+        class_set_devdata(&can->cdev, data);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000112057.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 14 warnings, 3 checks, 339 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000112057.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
