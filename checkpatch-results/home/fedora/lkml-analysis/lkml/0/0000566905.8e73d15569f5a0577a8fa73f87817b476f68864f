WARNING:TYPO_SPELLING: 'reproducable' may be misspelled - perhaps 'reproducible'?
#68: 
Is it reproducable? If so, could you try with this patch?
      ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#83: 
diff -ur --exclude-from /home/axboe/cdrom/exclude /opt/kernel/linux-2.4.0-test11-pre2/drivers/cdrom/cdrom.c linux/drivers/cdrom/cdrom.c

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#83: 
diff -ur --exclude-from /home/axboe/cdrom/exclude /opt/kernel/linux-2.4.0-test11-pre2/drivers/cdrom/cdrom.c linux/drivers/cdrom/cdrom.c

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#84: 
--- /opt/kernel/linux-2.4.0-test11-pre2/drivers/cdrom/cdrom.c	Mon Oct 16 21:58:51 2000

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#134: FILE: drivers/cdrom/cdrom.c:791:
+		cgc.cmd[4] = cgc.cmd[8] = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#142: FILE: drivers/cdrom/cdrom.c:975:
+	cgc->timeout = 5*HZ;
 	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#163: FILE: drivers/cdrom/cdrom.c:1896:
+	if ((ubuf = cgc->buffer)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cgc->buffer"
#165: FILE: drivers/cdrom/cdrom.c:1898:
+		if (cgc->buffer == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sense"
#337: FILE: drivers/ide/ide-cd.c:336:
+	if (sense == NULL || pc->quiet)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#340: FILE: drivers/ide/ide-cd.c:339:
+	switch (sense->sense_key) {
+		case NO_SENSE: case RECOVERED_ERROR:
[...]
+		case NOT_READY:
[...]
+		case UNIT_ATTENTION:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#464: FILE: drivers/ide/ide-cd.c:1132:
+#if 0

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#527: FILE: drivers/ide/ide-cd.c:1873:
+	lba_to_msf(lba_end-1, &pc.c[6], &pc.c[7], &pc.c[8]);
 	                  ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#536: FILE: drivers/ide/ide-cd.c:1917:
+		printk("No timeout from %p, setting default\n", __builtin_return_address(0));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#579: FILE: drivers/ide/ide-cd.c:1999:
+		printk("Play from track %d to %d\n", ti->cdti_trk0, ti->cdti_trk1);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#587: FILE: drivers/ide/ide-cd.c:2013:
+		printk("lba %lu to lba %lu\n", lba_start, lba_end);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#646: FILE: drivers/scsi/constants.c:779:
+	printk("Non-extended sense class %d code 0x%0x\n", sense_class, code);

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#713: FILE: drivers/scsi/sr.c:663:
+	cgc->stat = sr_do_ioctl(MINOR(cdi->dev), cgc->cmd, cgc->buffer, cgc->buflen, cgc->quiet, cgc->data_direction, cgc->sense);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#725: FILE: drivers/scsi/sr.h:39:
+int sr_do_ioctl(int, unsigned char *, void *, unsigned, int, int, struct request_sense *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#725: FILE: drivers/scsi/sr.h:39:
+int sr_do_ioctl(int, unsigned char *, void *, unsigned, int, int, struct request_sense *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#725: FILE: drivers/scsi/sr.h:39:
+int sr_do_ioctl(int, unsigned char *, void *, unsigned, int, int, struct request_sense *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#725: FILE: drivers/scsi/sr.h:39:
+int sr_do_ioctl(int, unsigned char *, void *, unsigned, int, int, struct request_sense *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#725: FILE: drivers/scsi/sr.h:39:
+int sr_do_ioctl(int, unsigned char *, void *, unsigned, int, int, struct request_sense *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#725: FILE: drivers/scsi/sr.h:39:
+int sr_do_ioctl(int, unsigned char *, void *, unsigned, int, int, struct request_sense *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#725: FILE: drivers/scsi/sr.h:39:
+int sr_do_ioctl(int, unsigned char *, void *, unsigned, int, int, struct request_sense *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_sense *' should also have an identifier name
#725: FILE: drivers/scsi/sr.h:39:
+int sr_do_ioctl(int, unsigned char *, void *, unsigned, int, int, struct request_sense *);

WARNING:LONG_LINE: line length of 139 exceeds 100 columns
#737: FILE: drivers/scsi/sr_ioctl.c:37:
+int sr_do_ioctl(int target, unsigned char *sr_cmd, void *buffer, unsigned buflength, int quiet, int readwrite, struct request_sense *sense)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#737: FILE: drivers/scsi/sr_ioctl.c:37:
+int sr_do_ioctl(int target, unsigned char *sr_cmd, void *buffer, unsigned buflength, int quiet, int readwrite, struct request_sense *sense)

CHECK:CAMELCASE: Avoid CamelCase: <SRpnt>
#748: FILE: drivers/scsi/sr_ioctl.c:137:
+		memcpy(sense, SRpnt->sr_sense_buffer, sizeof(*sense));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#842: FILE: drivers/scsi/sr_vendor.c:135:
+	if (0 == (rc = sr_do_ioctl(minor, cmd, buffer, sizeof(*modesel), 0, SCSI_DATA_WRITE, NULL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#842: FILE: drivers/scsi/sr_vendor.c:135:
+	if (0 == (rc = sr_do_ioctl(minor, cmd, buffer, sizeof(*modesel), 0, SCSI_DATA_WRITE, NULL))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#842: FILE: drivers/scsi/sr_vendor.c:135:
+	if (0 == (rc = sr_do_ioctl(minor, cmd, buffer, sizeof(*modesel), 0, SCSI_DATA_WRITE, NULL))) {
 		scsi_CDs[minor].device->sector_size = blocklength;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000566905.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 22 warnings, 6 checks, 740 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000566905.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
