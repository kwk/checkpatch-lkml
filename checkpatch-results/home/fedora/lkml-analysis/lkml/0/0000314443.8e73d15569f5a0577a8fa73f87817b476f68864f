WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
and monotonic clock. Plus there some code rearrangements, and stuff I grabbed

WARNING:TYPO_SPELLING: 'loosing' may be misspelled - perhaps 'losing'?
#53: 
stopped complaining about loosing sync...
                          ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#82: 
--- a/arch/i386/kernel/time.c	Mon Jan  5 00:47:14 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: arch/i386/kernel/time.c:376:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#111: FILE: arch/i386/kernel/time.c:381:
+static unsigned int  ref_freq = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#112: FILE: arch/i386/kernel/time.c:382:
+static unsigned long loops_per_jiffy_ref = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#115: FILE: arch/i386/kernel/time.c:385:
+static unsigned long cpu_khz_ref = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: arch/i386/kernel/time.c:389:
+^I^I       ^I^I void *data)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#119: FILE: arch/i386/kernel/time.c:389:
+^I^I       ^I^I void *data)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: arch/i386/kernel/time.c:389:
+static int time_cpufreq_notifier(struct notifier_block *nb, unsigned long val,
+		       		 void *data)

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#134: FILE: arch/i386/kernel/time.c:404:
+		cpu_data[freq->cpu].loops_per_jiffy = cpufreq_scale(loops_per_jiffy_ref, ref_freq, freq->new);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: arch/i386/kernel/time.c:421:
+        return cpufreq_register_notifier(&time_cpufreq_notifier_block, CPUFREQ_TRANSITION_NOTIFIER);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/i386/kernel/time.c:421:
+        return cpufreq_register_notifier(&time_cpufreq_notifier_block, CPUFREQ_TRANSITION_NOTIFIER);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: arch/i386/kernel/timers/common.c:18:
+unsigned long __init tsc_2_quotient(unsigned long tsc_start[], unsigned long tsc_end[], $

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#186: FILE: arch/i386/kernel/timers/common.c:31:
+		:"=a" (tsc_delta_low), "=d" (tsc_delta_high)
 		^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#187: FILE: arch/i386/kernel/timers/common.c:32:
+		:"g" (tsc_start[0]), "g" (tsc_start[1]),
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#199: FILE: arch/i386/kernel/timers/common.c:44:
+		:"=a" (result), "=d" (remain)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#200: FILE: arch/i386/kernel/timers/common.c:45:
+		:"r" (tsc_delta_low), "0" (0), "1" (calibrate_time));
 		^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: arch/i386/kernel/timers/common.c:81:
+^I/* $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#358: FILE: arch/i386/kernel/timers/common.c:125:
+	unsigned seq;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: arch/i386/kernel/timers/common.c:126:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: arch/i386/kernel/timers/common.c:144:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#387: FILE: arch/i386/kernel/timers/common.c:146:
+	do
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#428: FILE: arch/i386/kernel/timers/common.c:181:
+	unsigned long eax=0, edx=1000;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#428: FILE: arch/i386/kernel/timers/common.c:181:
+	unsigned long eax=0, edx=1000;
 	                        ^

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#447: FILE: arch/i386/kernel/timers/common.c:195:
+			printk("Detected %lu.%03lu MHz processor.\n", cpu_khz / 1000, cpu_khz % 1000);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#447: FILE: arch/i386/kernel/timers/common.c:195:
+			printk("Detected %lu.%03lu MHz processor.\n", cpu_khz / 1000, cpu_khz % 1000);

ERROR:CODE_INDENT: code indent should use tabs where possible
#460: FILE: arch/i386/kernel/timers/common.c:208:
+        struct cpufreq_freqs *freq = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: arch/i386/kernel/timers/common.c:208:
+        struct cpufreq_freqs *freq = data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: arch/i386/kernel/timers/common.c:209:
+        unsigned long new_cpu_khz;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: arch/i386/kernel/timers/common.c:209:
+        unsigned long new_cpu_khz;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: arch/i386/kernel/timers/common.c:211:
+        write_seqlock_irq(&xtime_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: arch/i386/kernel/timers/common.c:211:
+        write_seqlock_irq(&xtime_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#464: FILE: arch/i386/kernel/timers/common.c:212:
+        if (!ref_freq) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: arch/i386/kernel/timers/common.c:212:
+        if (!ref_freq) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#465: FILE: arch/i386/kernel/timers/common.c:213:
+                ref_freq = freq->old;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: arch/i386/kernel/timers/common.c:213:
+                ref_freq = freq->old;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: arch/i386/kernel/timers/common.c:215:
+                cpu_khz_ref = cpu_khz;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: arch/i386/kernel/timers/common.c:215:
+                cpu_khz_ref = cpu_khz;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#468: FILE: arch/i386/kernel/timers/common.c:216:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: arch/i386/kernel/timers/common.c:216:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: arch/i386/kernel/timers/common.c:218:
+        if ((val == CPUFREQ_PRECHANGE  && freq->old < freq->new) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: arch/i386/kernel/timers/common.c:218:
+        if ((val == CPUFREQ_PRECHANGE  && freq->old < freq->new) ||$

ERROR:CODE_INDENT: code indent should use tabs where possible
#471: FILE: arch/i386/kernel/timers/common.c:219:
+            (val == CPUFREQ_POSTCHANGE && freq->old > freq->new)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: arch/i386/kernel/timers/common.c:219:
+            (val == CPUFREQ_POSTCHANGE && freq->old > freq->new)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: arch/i386/kernel/timers/common.c:223:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: arch/i386/kernel/timers/common.c:223:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: arch/i386/kernel/timers/common.c:224:
+        write_sequnlock_irq(&xtime_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: arch/i386/kernel/timers/common.c:224:
+        write_sequnlock_irq(&xtime_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: arch/i386/kernel/timers/common.c:225:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: arch/i386/kernel/timers/common.c:225:
+        return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#481: FILE: arch/i386/kernel/timers/common.c:229:
+        .notifier_call  = tsc_cpufreq_notifier$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: arch/i386/kernel/timers/common.c:229:
+        .notifier_call  = tsc_cpufreq_notifier$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#598: FILE: arch/i386/kernel/timers/timer_cyclone.c:151:
+^Iif (!use_cyclone) return -ENODEV; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#598: FILE: arch/i386/kernel/timers/timer_cyclone.c:151:
+	if (!use_cyclone) return -ENODEV; 

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#669: FILE: arch/i386/kernel/timers/timer_cyclone.c:206:
+		while (stall--) barrier();

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#696: FILE: arch/i386/kernel/timers/timer_cyclone.c:236:
+^I.name = ^I^I"cyclone",$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#697: FILE: arch/i386/kernel/timers/timer_cyclone.c:237:
+^I.init = ^I^Iinit_cyclone, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#697: FILE: arch/i386/kernel/timers/timer_cyclone.c:237:
+^I.init = ^I^Iinit_cyclone, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#698: FILE: arch/i386/kernel/timers/timer_cyclone.c:238:
+^I.mark_offset = ^I^Imark_offset_cyclone, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#698: FILE: arch/i386/kernel/timers/timer_cyclone.c:238:
+^I.mark_offset = ^I^Imark_offset_cyclone, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#699: FILE: arch/i386/kernel/timers/timer_cyclone.c:239:
+^I.get_offset = ^I^Iget_offset_cyclone,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#702: FILE: arch/i386/kernel/timers/timer_cyclone.c:241:
+^I.delay = ^I^Idelay_cyclone,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#782: FILE: arch/i386/kernel/timers/timer_hpet.c:92:
+ ^Iunsigned long offset, temp, hpet_current;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#782: FILE: arch/i386/kernel/timers/timer_hpet.c:92:
+ ^Iunsigned long offset, temp, hpet_current;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#782: FILE: arch/i386/kernel/timers/timer_hpet.c:92:
+ ^Iunsigned long offset, temp, hpet_current;$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#785: FILE: arch/i386/kernel/timers/timer_hpet.c:95:
+	last_offset = ((unsigned long long)last_tsc_high<<32)|last_tsc_low;
 	                                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#785: FILE: arch/i386/kernel/timers/timer_hpet.c:95:
+	last_offset = ((unsigned long long)last_tsc_high<<32)|last_tsc_low;
 	                                                     ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hpet_last != 0'
#803: FILE: arch/i386/kernel/timers/timer_hpet.c:113:
+	if (unlikely(((offset - hpet_last) > hpet_tick) && (hpet_last != 0))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LINE_SPACING: Missing a blank line after declarations
#805: FILE: arch/i386/kernel/timers/timer_hpet.c:115:
+		int lost_ticks = (offset - hpet_last) / hpet_tick;
+		jiffies_64 += lost_ticks;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#822: FILE: arch/i386/kernel/timers/timer_hpet.c:132:
+	ASM_MUL64_REG(temp, tsc_delay_at_last_interrupt,
+			hpet_usec_quotient, tsc_delay_at_last_interrupt);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#858: FILE: arch/i386/kernel/timers/timer_hpet.c:173:
+#define CALIBRATE_CNT_HPET ^I(5 * hpet_tick)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#859: FILE: arch/i386/kernel/timers/timer_hpet.c:174:
+#define CALIBRATE_TIME_HPET ^I(5 * KERNEL_TICK_USEC)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#876: FILE: arch/i386/kernel/timers/timer_hpet.c:191:
+^Iif (result && tsc_hpet_quotient_ptr) $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#882: FILE: arch/i386/kernel/timers/timer_hpet.c:197:
+static int __init init_hpet(char* override)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#901: FILE: arch/i386/kernel/timers/timer_hpet.c:215:
+static int __init init_tsc_hpet(char* override)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#908: FILE: arch/i386/kernel/timers/timer_hpet.c:222:
+		printk(KERN_ERR "Warning: clock= override failed. Defaulting to tsc-hpet\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#914: FILE: arch/i386/kernel/timers/timer_hpet.c:227:
+		printk("Using TSC for gettimeofday\n");

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#956: FILE: arch/i386/kernel/timers/timer_hpet.c:253:
+^I.name = ^I^I"tsc-hpet",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#959: FILE: arch/i386/kernel/timers/timer_hpet.c:256:
+^I.get_offset = ^I^Iget_offset_tsc,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#961: FILE: arch/i386/kernel/timers/timer_hpet.c:258:
+^I.delay = ^I^Idelay_tsc,$

CHECK:SPACING: No space is necessary after a cast
#1015: FILE: arch/i386/kernel/timers/timer_pm.c:95:
+	last_tsc_offset = ((unsigned long long) last_tsc_high << 32) | last_tsc_low;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1102: FILE: arch/i386/kernel/timers/timer_pm.c:152:
+^I.monotonic_clock ^I= monotonic_clock_tsc,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1103: FILE: arch/i386/kernel/timers/timer_pm.c:153:
+^I.delay ^I^I^I= delay_tsc,$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1310: FILE: arch/i386/kernel/timers/timer_tsc.c:114:
+	tsc_delay_at_last_interrupt = (count + LATCH/2) / LATCH;
 	                                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1317: FILE: arch/i386/kernel/timers/timer_tsc.c:120:
+	if (lost && abs(delay - tsc_delay_at_last_interrupt) > (900000/HZ))
 	                                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1444: FILE: arch/i386/kernel/timers/timer_tsc.c:127:
+^Iif (override[0] && strncmp(override, "tsc", 3)) $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1514: FILE: arch/i386/kernel/timers/timer_tsc.c:196:
+^I.name = ^I^I"tsc",$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1516: FILE: arch/i386/kernel/timers/timer_tsc.c:198:
+^I.mark_offset =^I^Imark_offset_tsc, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1520: FILE: arch/i386/kernel/timers/timer_tsc.c:201:
+^I.delay = ^I^Idelay_tsc,$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1529: FILE: include/asm-i386/timer.h:27:
+extern void init_cpu_khz(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1556: FILE: include/asm-i386/timer_common.h:1:
+#ifndef _ASMi386_TIMER_COMMON_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:CAMELCASE: Avoid CamelCase: <_ASMi386_TIMER_COMMON_H>
#1556: FILE: include/asm-i386/timer_common.h:1:
+#ifndef _ASMi386_TIMER_COMMON_H

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1571: FILE: include/asm-i386/timer_common.h:16:
+extern unsigned long calibrate_tsc(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1572: FILE: include/asm-i386/timer_common.h:17:
+extern unsigned long get_offset_tsc(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1573: FILE: include/asm-i386/timer_common.h:18:
+extern unsigned long long monotonic_clock_tsc(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1574: FILE: include/asm-i386/timer_common.h:19:
+extern void delay_tsc(unsigned long loops);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1576: FILE: include/asm-i386/timer_common.h:21:
+extern unsigned long tsc_2_quotient(unsigned long[], unsigned long[], unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long[]' should also have an identifier name
#1576: FILE: include/asm-i386/timer_common.h:21:
+extern unsigned long tsc_2_quotient(unsigned long[], unsigned long[], unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long[]' should also have an identifier name
#1576: FILE: include/asm-i386/timer_common.h:21:
+extern unsigned long tsc_2_quotient(unsigned long[], unsigned long[], unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1576: FILE: include/asm-i386/timer_common.h:21:
+extern unsigned long tsc_2_quotient(unsigned long[], unsigned long[], unsigned long);

WARNING:INLINE: plain inline is preferred over __inline__
#1596: FILE: include/asm-i386/timer_common.h:41:
+static __inline__ void set_cyc2ns_scale(unsigned long cpu_mhz)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1598: FILE: include/asm-i386/timer_common.h:43:
+        cyc2ns_scale = (1000 << CYC2NS_SCALE_FACTOR)/cpu_mhz;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1598: FILE: include/asm-i386/timer_common.h:43:
+        cyc2ns_scale = (1000 << CYC2NS_SCALE_FACTOR)/cpu_mhz;$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1598: FILE: include/asm-i386/timer_common.h:43:
+        cyc2ns_scale = (1000 << CYC2NS_SCALE_FACTOR)/cpu_mhz;
                                                     ^

WARNING:INLINE: plain inline is preferred over __inline__
#1601: FILE: include/asm-i386/timer_common.h:46:
+static __inline__ unsigned long long cycles_2_ns(unsigned long long cyc)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1603: FILE: include/asm-i386/timer_common.h:48:
+        return (cyc * cyc2ns_scale) >> CYC2NS_SCALE_FACTOR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1603: FILE: include/asm-i386/timer_common.h:48:
+        return (cyc * cyc2ns_scale) >> CYC2NS_SCALE_FACTOR;$

WARNING:INLINE: plain inline is preferred over __inline__
#1606: FILE: include/asm-i386/timer_common.h:51:
+static __inline__ unsigned long tsc_2_usecs(unsigned long tsc)

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#1611: FILE: include/asm-i386/timer_common.h:56:
+		:"=a" (tsc), "=d" (usecs)
 		^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1612: FILE: include/asm-i386/timer_common.h:57:
+                :"rm" (tsc_quotient), "0" (tsc));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1612: FILE: include/asm-i386/timer_common.h:57:
+                :"rm" (tsc_quotient), "0" (tsc));$

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#1612: FILE: include/asm-i386/timer_common.h:57:
+                :"rm" (tsc_quotient), "0" (tsc));
                 ^

WARNING:INLINE: plain inline is preferred over __inline__
#1617: FILE: include/asm-i386/timer_common.h:62:
+static __inline__ void tsc_update_monotonic_base(unsigned long long last_offset)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000314443.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 47 errors, 51 warnings, 16 checks, 1483 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000314443.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
