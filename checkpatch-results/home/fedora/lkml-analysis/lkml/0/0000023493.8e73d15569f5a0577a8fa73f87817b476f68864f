WARNING:TYPO_SPELLING: 'targetted' may be misspelled - perhaps 'targeted'?
#29: 
Code is targetted at the Versatile development board.
        ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#42: FILE: sound/arm/aaci.c:21:
+#if defined(CONFIG_ARM_AMBA_DMA) && defined(CONFIG_ARCH_VERSATILE) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#43: FILE: sound/arm/aaci.c:22:
+# include <linux/dma-mapping.h>^I$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#54: FILE: sound/arm/aaci.c:37:
no DMA for this architecture */ 

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: sound/arm/aaci.c:169:
+#if defined(CONFIG_ARM_AMBA_DMA) && defined(CONFIG_ARCH_VERSATILE) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: sound/arm/aaci.c:171:
+/* $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#84: FILE: sound/arm/aaci.c:178:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#85: FILE: sound/arm/aaci.c:179:
+	struct amba_device *	client	= devid;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#86: FILE: sound/arm/aaci.c:180:
+^Istruct amba_dma_data *^Idata ^I= &(client->dma_data);$

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#86: FILE: sound/arm/aaci.c:180:
+	struct amba_dma_data *	data 	= &(client->dma_data);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around client->dma_data
#86: FILE: sound/arm/aaci.c:180:
+	struct amba_dma_data *	data 	= &(client->dma_data);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#87: FILE: sound/arm/aaci.c:181:
+^Isnd_card_t *^I^Icard ^I= amba_get_drvdata(client);$

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#87: FILE: sound/arm/aaci.c:181:
+	snd_card_t *		card 	= amba_get_drvdata(client);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#88: FILE: sound/arm/aaci.c:182:
+^Istruct aaci *^I^Iaaci ^I= card->private_data;$

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#88: FILE: sound/arm/aaci.c:182:
+	struct aaci *		aaci 	= card->private_data;

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#89: FILE: sound/arm/aaci.c:183:
+	struct aaci_runtime *	tsfr	= &aaci->playback;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#92: FILE: sound/arm/aaci.c:186:
+^Idata->irq_pre(0);^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#97: FILE: sound/arm/aaci.c:191:
+		tsfr->ptr += aaci->fifosize/2;
 		                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#98: FILE: sound/arm/aaci.c:192:
+		if (tsfr->ptr >= tsfr->end) {
+			tsfr->ptr = tsfr->start;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: sound/arm/aaci.c:195:
+^I^I$

ERROR:SPACING: space required before the open brace '{'
#104: FILE: sound/arm/aaci.c:198:
+		if(tsfr->bytes <= 0){

ERROR:SPACING: space required before the open parenthesis '('
#104: FILE: sound/arm/aaci.c:198:
+		if(tsfr->bytes <= 0){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: sound/arm/aaci.c:207:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: sound/arm/aaci.c:215:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: sound/arm/aaci.c:403:
+^I/* $

ERROR:SPACING: space required before the open brace '{'
#193: FILE: sound/arm/aaci.c:451:
+	if(MAX_DMA_CHANNELS != aacirun->dma_chan){

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#193: FILE: sound/arm/aaci.c:451:
+	if(MAX_DMA_CHANNELS != aacirun->dma_chan){

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:SPACING: space required before the open parenthesis '('
#193: FILE: sound/arm/aaci.c:451:
+	if(MAX_DMA_CHANNELS != aacirun->dma_chan){

WARNING:LINE_SPACING: Missing a blank line after declarations
#196: FILE: sound/arm/aaci.c:454:
+		unsigned long flags;
+		flags = claim_dma_lock();

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: sound/arm/aaci.c:456:
+^I^Iaacirun->dma_chan = MAX_DMA_CHANNELS; $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#201: FILE: sound/arm/aaci.c:459:
+	} else {
[...]
+ 	free_irq(aaci->dev->irq[0], aaci);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#202: FILE: sound/arm/aaci.c:460:
+	} else {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: sound/arm/aaci.c:461:
+# endif $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: sound/arm/aaci.c:462:
+#endif^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: sound/arm/aaci.c:464:
+ ^Ifree_irq(aaci->dev->irq[0], aaci);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#206: FILE: sound/arm/aaci.c:464:
+ ^Ifree_irq(aaci->dev->irq[0], aaci);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: sound/arm/aaci.c:464:
+ ^Ifree_irq(aaci->dev->irq[0], aaci);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: sound/arm/aaci.c:470:
+# endif $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#214: FILE: sound/arm/aaci.c:471:
+#endif^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: sound/arm/aaci.c:472:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#219: FILE: sound/arm/aaci.c:475:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#255: FILE: sound/arm/aaci.c:514:
+	err = devdma_hw_alloc((struct device *)aaci->dev, substream,
+			 params_buffer_bytes(params));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: sound/arm/aaci.c:532:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: sound/arm/aaci.c:536:
+ * Finalize the linked list $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#284: FILE: sound/arm/aaci.c:552:
+	if(aaci->fifo_irq_attached){
[...]
FIFO interrupt

ERROR:SPACING: space required before the open brace '{'
#284: FILE: sound/arm/aaci.c:552:
+	if(aaci->fifo_irq_attached){

ERROR:SPACING: space required before the open parenthesis '('
#284: FILE: sound/arm/aaci.c:552:
+	if(aaci->fifo_irq_attached){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: sound/arm/aaci.c:553:
+^I^I/* $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#291: FILE: sound/arm/aaci.c:558:
+	} else {
[...]
(CONFIG_ARCH_VERSATILE_PB)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#292: FILE: sound/arm/aaci.c:559:
+	} else {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: sound/arm/aaci.c:560:
+#ifdef CONFIG_ARM_AMBA_DMA $

WARNING:TYPO_SPELLING: 'interrrupts' may be misspelled - perhaps 'interrupts'?
#299: FILE: sound/arm/aaci.c:565:
+		 *	Try for DMA, if fails fall back to fifo interrrupts
 		  	                                        ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: sound/arm/aaci.c:568:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: sound/arm/aaci.c:570:
+^I^I * - if so release any assigned channel & re-acquire:- $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: sound/arm/aaci.c:571:
+^I^I * If using the pl080 controller and a different $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: sound/arm/aaci.c:572:
+^I^I * DMA buffer has been allocated $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: sound/arm/aaci.c:575:
+^I^Iif(MAX_DMA_CHANNELS != aacirun->dma_chan){ $

ERROR:SPACING: space required before the open brace '{'
#310: FILE: sound/arm/aaci.c:575:
+		if(MAX_DMA_CHANNELS != aacirun->dma_chan){ 

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#310: FILE: sound/arm/aaci.c:575:
+		if(MAX_DMA_CHANNELS != aacirun->dma_chan){ 

ERROR:SPACING: space required before the open parenthesis '('
#310: FILE: sound/arm/aaci.c:575:
+		if(MAX_DMA_CHANNELS != aacirun->dma_chan){ 

WARNING:LINE_SPACING: Missing a blank line after declarations
#312: FILE: sound/arm/aaci.c:577:
+			unsigned long flags;
+			flags = claim_dma_lock();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: sound/arm/aaci.c:579:
+^I^I^Iaacirun->dma_chan = MAX_DMA_CHANNELS; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: sound/arm/aaci.c:584:
+ ^I^I/* The DMA interrupt is requested as shared, it may be$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#319: FILE: sound/arm/aaci.c:584:
+ ^I^I/* The DMA interrupt is requested as shared, it may be$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: sound/arm/aaci.c:584:
+ ^I^I/* The DMA interrupt is requested as shared, it may be$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#321: FILE: sound/arm/aaci.c:585:
+ 		/* The DMA interrupt is requested as shared, it may be
+		if(!request_irq(IRQ_DMAINT, aaci_dma_irq,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#327: FILE: sound/arm/aaci.c:589:
+			/* Acquired the DMA interrupt, now request a channel
+			int i;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#333: FILE: sound/arm/aaci.c:594:
+			aaci->dev->dma_data.packet_size = aaci->fifosize/2;
 			                                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: sound/arm/aaci.c:595:
+^I^I^I/* $

ERROR:SPACING: space required before the open brace '{'
#340: FILE: sound/arm/aaci.c:600:
+			for(i = 0; i < MAX_DMA_CHANNELS; i++){

ERROR:SPACING: space required before the open parenthesis '('
#340: FILE: sound/arm/aaci.c:600:
+			for(i = 0; i < MAX_DMA_CHANNELS; i++){

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#341: FILE: sound/arm/aaci.c:601:
+			for(i = 0; i < MAX_DMA_CHANNELS; i++){
+

ERROR:SPACING: space required before the open brace '{'
#342: FILE: sound/arm/aaci.c:602:
+				if(!dma_channel_active(i)){

ERROR:SPACING: space required before the open parenthesis '('
#342: FILE: sound/arm/aaci.c:602:
+				if(!dma_channel_active(i)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: sound/arm/aaci.c:603:
+^I^I^I^I ^Iset_dma_mode (i, DMA_TO_DEVICE);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#343: FILE: sound/arm/aaci.c:603:
+^I^I^I^I ^Iset_dma_mode (i, DMA_TO_DEVICE);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#343: FILE: sound/arm/aaci.c:603:
+				 	set_dma_mode (i, DMA_TO_DEVICE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#344: FILE: sound/arm/aaci.c:604:
+					set_dma_addr (i,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#346: FILE: sound/arm/aaci.c:605:
+					set_dma_addr (i,
+					set_dma_count(i,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: sound/arm/aaci.c:605:
+					set_dma_addr (i,
runtime->dma_bytes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: sound/arm/aaci.c:606:
+					set_dma_count(i,
+

ERROR:SPACING: space required before the open parenthesis '('
#349: FILE: sound/arm/aaci.c:607:
+					if(!(ret = request_dma(i,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#349: FILE: sound/arm/aaci.c:607:
+					if(!(ret = request_dma(i,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: sound/arm/aaci.c:608:
+					if(!(ret = request_dma(i,
+						aacirun->dma_chan = i;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#355: FILE: sound/arm/aaci.c:612:
+
+				}

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#358: FILE: sound/arm/aaci.c:615:
+			if(MAX_DMA_CHANNELS == aacirun->dma_chan)

ERROR:SPACING: space required before the open parenthesis '('
#358: FILE: sound/arm/aaci.c:615:
+			if(MAX_DMA_CHANNELS == aacirun->dma_chan)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#362: FILE: sound/arm/aaci.c:619:
+			printk(KERN_ERR "aaci.c::aaci_pcm_prepare() Couldn't

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: sound/arm/aaci.c:627:
+^I ^Iret = request_irq(aaci->dev->irq[0], aaci_irq, SA_INTERRUPT,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#371: FILE: sound/arm/aaci.c:627:
+^I ^Iret = request_irq(aaci->dev->irq[0], aaci_irq, SA_INTERRUPT,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: sound/arm/aaci.c:628:
+^I ^I^I^IDRIVER_NAME, aaci);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#372: FILE: sound/arm/aaci.c:628:
+^I ^I^I^IDRIVER_NAME, aaci);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#373: FILE: sound/arm/aaci.c:629:
+^I ^Iaaci->fifo_irq_attached = !ret;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#373: FILE: sound/arm/aaci.c:629:
+^I ^Iaaci->fifo_irq_attached = !ret;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: sound/arm/aaci.c:631:
+#ifdef CONFIG_ARM_AMBA_DMA $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: sound/arm/aaci.c:634:
+^I^I} $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: sound/arm/aaci.c:644:
+ * Must be atomic$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: sound/arm/aaci.c:645:
+ */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#399: FILE: sound/arm/aaci.c:752:
+#ifdef CONFIG_ARM_AMBA_DMA $

ERROR:SPACING: space required before the open brace '{'
#404: FILE: sound/arm/aaci.c:756:
+	if(MAX_DMA_CHANNELS != aacirun->dma_chan){

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#404: FILE: sound/arm/aaci.c:756:
+	if(MAX_DMA_CHANNELS != aacirun->dma_chan){

ERROR:SPACING: space required before the open parenthesis '('
#404: FILE: sound/arm/aaci.c:756:
+	if(MAX_DMA_CHANNELS != aacirun->dma_chan){

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#405: FILE: sound/arm/aaci.c:757:
+		struct aaci* aaci = aacirun->substream->private_data;

WARNING:LINE_SPACING: Missing a blank line after declarations
#406: FILE: sound/arm/aaci.c:758:
+		struct aaci* aaci = aacirun->substream->private_data;
+		disable_dma(aacirun->dma_chan);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: sound/arm/aaci.c:759:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: sound/arm/aaci.c:760:
+^I^I * Disable DMA on the AACI by clearing the 'DMAEnable' bit. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: sound/arm/aaci.c:761:
+^I^I */^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#412: FILE: sound/arm/aaci.c:763:
+	} else {
[...]
 	ie = readl(aacirun->base + AACI_IE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#421: FILE: sound/arm/aaci.c:772:
+#ifdef CONFIG_ARM_AMBA_DMA $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#426: FILE: sound/arm/aaci.c:776:
+
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#439: FILE: sound/arm/aaci.c:794:
+#ifdef CONFIG_ARM_AMBA_DMA $

ERROR:SPACING: space required before the open brace '{'
#448: FILE: sound/arm/aaci.c:802:
+	if(MAX_DMA_CHANNELS != aacirun->dma_chan){

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#448: FILE: sound/arm/aaci.c:802:
+	if(MAX_DMA_CHANNELS != aacirun->dma_chan){

ERROR:SPACING: space required before the open parenthesis '('
#448: FILE: sound/arm/aaci.c:802:
+	if(MAX_DMA_CHANNELS != aacirun->dma_chan){

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#449: FILE: sound/arm/aaci.c:803:
+		struct aaci* aaci = aacirun->substream->private_data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#451: FILE: sound/arm/aaci.c:805:
+^I^I * Set the 'DMAEnable' bit in the AACI PrimeCell. $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#456: FILE: sound/arm/aaci.c:809:
+	} else {
[...]
 	ie = readl(aacirun->base + AACI_IE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#466: FILE: sound/arm/aaci.c:819:
+#ifdef CONFIG_ARM_AMBA_DMA $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#471: FILE: sound/arm/aaci.c:823:
+
+	}

ERROR:CODE_INDENT: code indent should use tabs where possible
#494: FILE: sound/arm/aaci.c:977:
+ ^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#494: FILE: sound/arm/aaci.c:977:
+ ^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: sound/arm/aaci.c:977:
+ ^I/*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#496: FILE: sound/arm/aaci.c:979:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#496: FILE: sound/arm/aaci.c:979:
+ ^I */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#505: FILE: sound/arm/aaci.c:1046:
+#ifdef CONFIG_ARM_AMBA_DMA $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#506: FILE: sound/arm/aaci.c:1047:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#512: FILE: sound/arm/aaci.c:1052:
+ ^Iaaci->capture.dma_chan = MAX_DMA_CHANNELS;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#512: FILE: sound/arm/aaci.c:1052:
+ ^Iaaci->capture.dma_chan = MAX_DMA_CHANNELS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: sound/arm/aaci.c:1052:
+ ^Iaaci->capture.dma_chan = MAX_DMA_CHANNELS;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: sound/arm/aaci.h:212:
+#ifdef CONFIG_ARM_AMBA_DMA $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#565: FILE: sound/arm/aaci.h:213:
+^Idmach_t ^I^Idma_chan;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#588: FILE: sound/arm/aaci.h:251:
+#define TIME_TO_RESPOND		42	/* 42us = ~2 frames at
+					/* This should give the AC'97 codec

ERROR:TRAILING_WHITESPACE: trailing whitespace
#590: FILE: sound/arm/aaci.h:252:
+^I^I^I^I^I/* sufficient time to respond */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#590: FILE: sound/arm/aaci.h:252:
+					/* This should give the AC'97 codec
+					/* sufficient time to respond */ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#591: FILE: sound/arm/aaci.h:253:
+#ifdef CONFIG_ARM_AMBA_DMA $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#592: FILE: sound/arm/aaci.h:254:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#593: FILE: sound/arm/aaci.h:255:
+ * DMA only possible on audio channel 1 $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000023493.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 80 errors, 42 warnings, 15 checks, 538 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000023493.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
