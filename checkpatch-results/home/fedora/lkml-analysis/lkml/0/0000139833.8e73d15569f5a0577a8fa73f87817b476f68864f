CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: fs/ntfs/attrib.c:1897:
+s64 ntfs_attr_extend_allocation(ntfs_inode *ni, s64 new_alloc_size,
+		const s64 new_data_size, const s64 data_start)

WARNING:SPLIT_STRING: quoted string split across lines
#145: FILE: fs/ntfs/attrib.c:1918:
+	ntfs_debug("Entering for i_ino 0x%lx, attribute type 0x%x, "
+			"old_allocated_size 0x%llx, "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#146: FILE: fs/ntfs/attrib.c:1919:
+			"old_allocated_size 0x%llx, "
+			"new_allocated_size 0x%llx, new_data_size 0x%llx, "

WARNING:SPLIT_STRING: quoted string split across lines
#147: FILE: fs/ntfs/attrib.c:1920:
+			"new_allocated_size 0x%llx, new_data_size 0x%llx, "
+			"data_start 0x%llx.", vi->i_ino,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#148: FILE: fs/ntfs/attrib.c:1921:
+			(unsigned)le32_to_cpu(ni->type),

CHECK:CAMELCASE: Avoid CamelCase: <NInoNonResident>
#159: FILE: fs/ntfs/attrib.c:1932:
+	if (NInoNonResident(ni)) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#165: FILE: fs/ntfs/attrib.c:1938:
+	BUG_ON(new_data_size >= 0 && new_data_size > new_alloc_size);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPLIT_STRING: quoted string split across lines
#176: FILE: fs/ntfs/attrib.c:1949:
+				ntfs_error(vol->sb, "Cannot extend allocation "
+						"of inode 0x%lx, attribute "

WARNING:SPLIT_STRING: quoted string split across lines
#177: FILE: fs/ntfs/attrib.c:1950:
+						"of inode 0x%lx, attribute "
+						"type 0x%x, because the new "

WARNING:SPLIT_STRING: quoted string split across lines
#178: FILE: fs/ntfs/attrib.c:1951:
+						"type 0x%x, because the new "
+						"allocation would exceed the "

WARNING:SPLIT_STRING: quoted string split across lines
#179: FILE: fs/ntfs/attrib.c:1952:
+						"allocation would exceed the "
+						"maximum allowed size for "

WARNING:SPLIT_STRING: quoted string split across lines
#180: FILE: fs/ntfs/attrib.c:1953:
+						"maximum allowed size for "
+						"this attribute type.",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#181: FILE: fs/ntfs/attrib.c:1954:
+						vi->i_ino, (unsigned)

WARNING:SPLIT_STRING: quoted string split across lines
#185: FILE: fs/ntfs/attrib.c:1958:
+				ntfs_error(vol->sb, "Cannot extend allocation "
+						"of inode 0x%lx, attribute "

WARNING:SPLIT_STRING: quoted string split across lines
#186: FILE: fs/ntfs/attrib.c:1959:
+						"of inode 0x%lx, attribute "
+						"type 0x%x, because this "

WARNING:SPLIT_STRING: quoted string split across lines
#187: FILE: fs/ntfs/attrib.c:1960:
+						"type 0x%x, because this "
+						"attribute type is not "

WARNING:SPLIT_STRING: quoted string split across lines
#188: FILE: fs/ntfs/attrib.c:1961:
+						"attribute type is not "
+						"defined on the NTFS volume.  "

WARNING:SPLIT_STRING: quoted string split across lines
#189: FILE: fs/ntfs/attrib.c:1962:
+						"defined on the NTFS volume.  "
+						"Possible corruption!  You "

WARNING:SPLIT_STRING: quoted string split across lines
#190: FILE: fs/ntfs/attrib.c:1963:
+						"Possible corruption!  You "
+						"should run chkdsk!",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#191: FILE: fs/ntfs/attrib.c:1964:
+						vi->i_ino, (unsigned)

CHECK:CAMELCASE: Avoid CamelCase: <NInoAttr>
#202: FILE: fs/ntfs/attrib.c:1975:
+	if (!NInoAttr(ni))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: fs/ntfs/attrib.c:2023:
+	err = ntfs_attr_lookup(ni->type, ni->name, ni->name_len,
+			CASE_SENSITIVE, vcn, NULL, 0, ctx);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#261: FILE: fs/ntfs/attrib.c:2034:
+	BUG_ON(NInoNonResident(ni));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: fs/ntfs/attrib.c:2043:
+	if (new_alloc_size < vol->mft_record_size &&
+			!ntfs_attr_record_resize(m, a,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#279: FILE: fs/ntfs/attrib.c:2052:
+			BUG_ON(new_data_size < attr_len);

WARNING:SPLIT_STRING: quoted string split across lines
#315: FILE: fs/ntfs/attrib.c:2088:
+			ntfs_error(vol->sb, "Cannot extend allocation of "
+					"inode 0x%lx, attribute type 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#316: FILE: fs/ntfs/attrib.c:2089:
+					"inode 0x%lx, attribute type 0x%x, "
+					"because the conversion from resident "

WARNING:SPLIT_STRING: quoted string split across lines
#317: FILE: fs/ntfs/attrib.c:2090:
+					"because the conversion from resident "
+					"to non-resident attribute failed "

WARNING:SPLIT_STRING: quoted string split across lines
#318: FILE: fs/ntfs/attrib.c:2091:
+					"to non-resident attribute failed "
+					"with error code %i.", vi->i_ino,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#319: FILE: fs/ntfs/attrib.c:2092:
+					(unsigned)le32_to_cpu(ni->type), err);

WARNING:SPLIT_STRING: quoted string split across lines
#331: FILE: fs/ntfs/attrib.c:2104:
+			ntfs_error(vol->sb, "Not enough space in the mft "
+					"record/on disk for the non-resident "

WARNING:SPLIT_STRING: quoted string split across lines
#332: FILE: fs/ntfs/attrib.c:2105:
+					"record/on disk for the non-resident "
+					"attribute value.  This case is not "

WARNING:SPLIT_STRING: quoted string split across lines
#333: FILE: fs/ntfs/attrib.c:2106:
+					"attribute value.  This case is not "
+					"implemented yet.");

WARNING:SPLIT_STRING: quoted string split across lines
#336: FILE: fs/ntfs/attrib.c:2109:
+			ntfs_error(vol->sb, "This attribute type may not be "
+					"non-resident.  This case is not "

WARNING:SPLIT_STRING: quoted string split across lines
#337: FILE: fs/ntfs/attrib.c:2110:
+					"non-resident.  This case is not "
+					"implemented yet.");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#341: FILE: fs/ntfs/attrib.c:2114:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#352: FILE: fs/ntfs/attrib.c:2125:
+	if (ni->type == AT_ATTRIBUTE_LIST ||
+			ni->type == AT_STANDARD_INFORMATION) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#370: FILE: fs/ntfs/attrib.c:2143:
+	BUG_ON(!NInoNonResident(ni));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#372: FILE: fs/ntfs/attrib.c:2145:
+		BUG_ON(vcn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#384: FILE: fs/ntfs/attrib.c:2157:
+	if ((start >= 0 && start <= allocated_size) || ni->type != AT_DATA ||
+			!NVolSparseEnabled(vol) || NInoSparseDisabled(ni))

CHECK:CAMELCASE: Avoid CamelCase: <NVolSparseEnabled>
#384: FILE: fs/ntfs/attrib.c:2157:
+			!NVolSparseEnabled(vol) || NInoSparseDisabled(ni))

CHECK:CAMELCASE: Avoid CamelCase: <NInoSparseDisabled>
#384: FILE: fs/ntfs/attrib.c:2157:
+			!NVolSparseEnabled(vol) || NInoSparseDisabled(ni))

WARNING:SPLIT_STRING: quoted string split across lines
#389: FILE: fs/ntfs/attrib.c:2162:
+	ntfs_debug("Inserting holes is not-implemented yet.  Falling back to "
+			"allocating real clusters instead.");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: fs/ntfs/attrib.c:2172:
+	if (unlikely(!rl || rl->lcn == LCN_RL_NOT_MAPPED ||
+			(rl->lcn == LCN_ENOENT && rl > ni->runlist.rl &&

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#400: FILE: fs/ntfs/attrib.c:2173:
+			(rl-1)->lcn == LCN_RL_NOT_MAPPED))) {
 			   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#408: FILE: fs/ntfs/attrib.c:2181:
+				ntfs_error(vol->sb, "Cannot extend allocation "
+						"of inode 0x%lx, attribute "

WARNING:SPLIT_STRING: quoted string split across lines
#409: FILE: fs/ntfs/attrib.c:2182:
+						"of inode 0x%lx, attribute "
+						"type 0x%x, because the "

WARNING:SPLIT_STRING: quoted string split across lines
#410: FILE: fs/ntfs/attrib.c:2183:
+						"type 0x%x, because the "
+						"mapping of a runlist "

WARNING:SPLIT_STRING: quoted string split across lines
#411: FILE: fs/ntfs/attrib.c:2184:
+						"mapping of a runlist "
+						"fragment failed with error "

WARNING:SPLIT_STRING: quoted string split across lines
#412: FILE: fs/ntfs/attrib.c:2185:
+						"fragment failed with error "
+						"code %i.", vi->i_ino,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#413: FILE: fs/ntfs/attrib.c:2186:
+						(unsigned)le32_to_cpu(ni->type),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#439: FILE: fs/ntfs/attrib.c:2212:
+	rl2 = ntfs_cluster_alloc(vol, allocated_size >> vol->cluster_size_bits,
+			(new_alloc_size - allocated_size) >>

WARNING:SPLIT_STRING: quoted string split across lines
#446: FILE: fs/ntfs/attrib.c:2219:
+			ntfs_error(vol->sb, "Cannot extend allocation of "
+					"inode 0x%lx, attribute type 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#447: FILE: fs/ntfs/attrib.c:2220:
+					"inode 0x%lx, attribute type 0x%x, "
+					"because the allocation of clusters "

WARNING:SPLIT_STRING: quoted string split across lines
#448: FILE: fs/ntfs/attrib.c:2221:
+					"because the allocation of clusters "
+					"failed with error code %i.", vi->i_ino,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#449: FILE: fs/ntfs/attrib.c:2222:
+					(unsigned)le32_to_cpu(ni->type), err);

WARNING:SPLIT_STRING: quoted string split across lines
#459: FILE: fs/ntfs/attrib.c:2232:
+			ntfs_error(vol->sb, "Cannot extend allocation of "
+					"inode 0x%lx, attribute type 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#460: FILE: fs/ntfs/attrib.c:2233:
+					"inode 0x%lx, attribute type 0x%x, "
+					"because the runlist merge failed "

WARNING:SPLIT_STRING: quoted string split across lines
#461: FILE: fs/ntfs/attrib.c:2234:
+					"because the runlist merge failed "
+					"with error code %i.", vi->i_ino,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#462: FILE: fs/ntfs/attrib.c:2235:
+					(unsigned)le32_to_cpu(ni->type), err);

WARNING:SPLIT_STRING: quoted string split across lines
#467: FILE: fs/ntfs/attrib.c:2240:
+			ntfs_error(vol->sb, "Failed to release allocated "
+					"cluster(s) in error code path.  Run "

WARNING:SPLIT_STRING: quoted string split across lines
#468: FILE: fs/ntfs/attrib.c:2241:
+					"cluster(s) in error code path.  Run "
+					"chkdsk to recover the lost "

WARNING:SPLIT_STRING: quoted string split across lines
#469: FILE: fs/ntfs/attrib.c:2242:
+					"chkdsk to recover the lost "
+					"cluster(s).");

CHECK:CAMELCASE: Avoid CamelCase: <NVolSetErrors>
#470: FILE: fs/ntfs/attrib.c:2243:
+			NVolSetErrors(vol);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#481: FILE: fs/ntfs/attrib.c:2254:
+	BUG_ON(!rl2);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#482: FILE: fs/ntfs/attrib.c:2255:
+	BUG_ON(!rl2->length);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#483: FILE: fs/ntfs/attrib.c:2256:
+	BUG_ON(rl2->lcn < LCN_HOLE);

WARNING:SPLIT_STRING: quoted string split across lines
#491: FILE: fs/ntfs/attrib.c:2264:
+			ntfs_error(vol->sb, "Cannot extend allocation of "
+					"inode 0x%lx, attribute type 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#492: FILE: fs/ntfs/attrib.c:2265:
+					"inode 0x%lx, attribute type 0x%x, "
+					"because determining the size for the "

WARNING:SPLIT_STRING: quoted string split across lines
#493: FILE: fs/ntfs/attrib.c:2266:
+					"because determining the size for the "
+					"mapping pairs failed with error code "

WARNING:SPLIT_STRING: quoted string split across lines
#494: FILE: fs/ntfs/attrib.c:2267:
+					"mapping pairs failed with error code "
+					"%i.", vi->i_ino,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#495: FILE: fs/ntfs/attrib.c:2268:
+					(unsigned)le32_to_cpu(ni->type), err);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#504: FILE: fs/ntfs/attrib.c:2277:
+		BUG_ON(err != -ENOSPC);

WARNING:SPLIT_STRING: quoted string split across lines
#513: FILE: fs/ntfs/attrib.c:2286:
+			ntfs_error(vol->sb, "Not enough space in the mft "
+					"record for the extended attribute "

WARNING:SPLIT_STRING: quoted string split across lines
#514: FILE: fs/ntfs/attrib.c:2287:
+					"record for the extended attribute "
+					"record.  This case is not "

WARNING:SPLIT_STRING: quoted string split across lines
#515: FILE: fs/ntfs/attrib.c:2288:
+					"record.  This case is not "
+					"implemented yet.");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#521: FILE: fs/ntfs/attrib.c:2294:
+	err = ntfs_mapping_pairs_build(vol, (u8*)a +

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#527: FILE: fs/ntfs/attrib.c:2300:
+			ntfs_error(vol->sb, "Cannot extend allocation of "
+					"inode 0x%lx, attribute type 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#528: FILE: fs/ntfs/attrib.c:2301:
+					"inode 0x%lx, attribute type 0x%x, "
+					"because building the mapping pairs "

WARNING:SPLIT_STRING: quoted string split across lines
#529: FILE: fs/ntfs/attrib.c:2302:
+					"because building the mapping pairs "
+					"failed with error code %i.", vi->i_ino,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#530: FILE: fs/ntfs/attrib.c:2303:
+					(unsigned)le32_to_cpu(ni->type), err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: fs/ntfs/attrib.c:2323:
+		err = ntfs_attr_lookup(ni->type, ni->name, ni->name_len,
+				CASE_SENSITIVE, 0, NULL, 0, ctx);

CHECK:CAMELCASE: Avoid CamelCase: <NInoSparse>
#569: FILE: fs/ntfs/attrib.c:2342:
+	if (NInoSparse(ni) || NInoCompressed(ni)) {

CHECK:CAMELCASE: Avoid CamelCase: <NInoCompressed>
#569: FILE: fs/ntfs/attrib.c:2342:
+	if (NInoSparse(ni) || NInoCompressed(ni)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#569: FILE: fs/ntfs/attrib.c:2342:
+	if (NInoSparse(ni) || NInoCompressed(ni)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#574: FILE: fs/ntfs/attrib.c:2347:
+	} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#579: FILE: fs/ntfs/attrib.c:2352:
+		BUG_ON(new_data_size <

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: fs/ntfs/attrib.c:2365:
+	ntfs_debug("Done, new_allocated_size 0x%llx.",
+			(unsigned long long)new_alloc_size);

WARNING:SPLIT_STRING: quoted string split across lines
#597: FILE: fs/ntfs/attrib.c:2370:
+		ntfs_error(vol->sb, "Cannot complete extension of allocation "
+				"of inode 0x%lx, attribute type 0x%x, because "

WARNING:SPLIT_STRING: quoted string split across lines
#598: FILE: fs/ntfs/attrib.c:2371:
+				"of inode 0x%lx, attribute type 0x%x, because "
+				"lookup of first attribute extent failed with "

WARNING:SPLIT_STRING: quoted string split across lines
#599: FILE: fs/ntfs/attrib.c:2372:
+				"lookup of first attribute extent failed with "
+				"error code %i.", vi->i_ino,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#600: FILE: fs/ntfs/attrib.c:2373:
+				(unsigned)le32_to_cpu(ni->type), err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#605: FILE: fs/ntfs/attrib.c:2378:
+	if (ntfs_attr_lookup(ni->type, ni->name, ni->name_len, CASE_SENSITIVE,
+			allocated_size >> vol->cluster_size_bits, NULL, 0,

WARNING:SPLIT_STRING: quoted string split across lines
#608: FILE: fs/ntfs/attrib.c:2381:
+		ntfs_error(vol->sb, "Failed to find last attribute extent of "
+				"attribute in error code path.  Run chkdsk to "

WARNING:SPLIT_STRING: quoted string split across lines
#609: FILE: fs/ntfs/attrib.c:2382:
+				"attribute in error code path.  Run chkdsk to "
+				"recover.");

CHECK:BRACES: braces {} should be used on all arms of this statement
#617: FILE: fs/ntfs/attrib.c:2390:
+		if (NInoSparse(ni) || NInoCompressed(ni)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#621: FILE: fs/ntfs/attrib.c:2394:
+		} else

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#634: FILE: fs/ntfs/attrib.c:2407:
+	ctx->attr->data.non_resident.highest_vcn = cpu_to_sle64(

WARNING:SPLIT_STRING: quoted string split across lines
#640: FILE: fs/ntfs/attrib.c:2413:
+		ntfs_error(vol->sb, "Failed to release allocated cluster(s) "
+				"in error code path.  Run chkdsk to recover "

WARNING:SPLIT_STRING: quoted string split across lines
#641: FILE: fs/ntfs/attrib.c:2414:
+				"in error code path.  Run chkdsk to recover "
+				"the lost cluster(s).");

WARNING:SPLIT_STRING: quoted string split across lines
#654: FILE: fs/ntfs/attrib.c:2427:
+		ntfs_error(vol->sb, "Failed to %s in error code path.  Run "
+				"chkdsk to recover.", IS_ERR(m) ?

WARNING:SPLIT_STRING: quoted string split across lines
#663: FILE: fs/ntfs/attrib.c:2436:
+			ntfs_error(vol->sb, "Failed to restore attribute "
+					"record in error code path.  Run "

WARNING:SPLIT_STRING: quoted string split across lines
#664: FILE: fs/ntfs/attrib.c:2437:
+					"record in error code path.  Run "
+					"chkdsk to recover.");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#669: FILE: fs/ntfs/attrib.c:2442:
+			if (ntfs_mapping_pairs_build(vol, (u8*)a + le16_to_cpu(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#669: FILE: fs/ntfs/attrib.c:2442:
+			if (ntfs_mapping_pairs_build(vol, (u8*)a + le16_to_cpu(

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'a->data.non_resident.mapping_pairs_offset'
#671: FILE: fs/ntfs/attrib.c:2444:
+					a->data.non_resident.
+					mapping_pairs_offset), attr_len -

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'a->data.non_resident.mapping_pairs_offset'
#673: FILE: fs/ntfs/attrib.c:2446:
+					le16_to_cpu(a->data.non_resident.
+					mapping_pairs_offset), rl2, ll, -1,

WARNING:SPLIT_STRING: quoted string split across lines
#676: FILE: fs/ntfs/attrib.c:2449:
+				ntfs_error(vol->sb, "Failed to restore "
+						"mapping pairs array in error "

WARNING:SPLIT_STRING: quoted string split across lines
#677: FILE: fs/ntfs/attrib.c:2450:
+						"mapping pairs array in error "
+						"code path.  Run chkdsk to "

WARNING:SPLIT_STRING: quoted string split across lines
#678: FILE: fs/ntfs/attrib.c:2451:
+						"code path.  Run chkdsk to "
+						"recover.");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#710: FILE: fs/ntfs/attrib.h:108:
+extern s64 ntfs_attr_extend_allocation(ntfs_inode *ni, s64 new_alloc_size,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#711: FILE: fs/ntfs/attrib.h:109:
+extern s64 ntfs_attr_extend_allocation(ntfs_inode *ni, s64 new_alloc_size,
+		const s64 new_data_size, const s64 data_start);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000139833.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 84 warnings, 26 checks, 658 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000139833.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
