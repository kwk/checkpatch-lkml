WARNING:LEADING_SPACE: please, no spaces at the start of a line
#50: FILE: scripts/lxdialog/yesno.c:46:
+    int i, x, y, key = 0, answer = 0, button = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#54: FILE: scripts/lxdialog/yesno.c:49:
+    wchar_t *wtitle, *yes, *Yes, *no, *No;$

CHECK:CAMELCASE: Avoid CamelCase: <Yes>
#54: FILE: scripts/lxdialog/yesno.c:49:
+    wchar_t *wtitle, *yes, *Yes, *no, *No;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <No>
#54: FILE: scripts/lxdialog/yesno.c:49:
+    wchar_t *wtitle, *yes, *Yes, *no, *No;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: scripts/lxdialog/yesno.c:51:
+    const char *yes, *Yes, *no, *No;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#75: FILE: scripts/lxdialog/yesno.c:123:
+	if (yes && (yes[0] == key))
+	    answer = 'y';

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'yes[0] == key'
#75: FILE: scripts/lxdialog/yesno.c:123:
+	if (yes && (yes[0] == key))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#77: FILE: scripts/lxdialog/yesno.c:125:
+	if (Yes && (Yes[0] == key))
+	    answer = 'Y';

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'Yes[0] == key'
#77: FILE: scripts/lxdialog/yesno.c:125:
+	if (Yes && (Yes[0] == key))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#79: FILE: scripts/lxdialog/yesno.c:127:
+	if (no && (no[0] == key))
+	    answer = 'n';

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'no[0] == key'
#79: FILE: scripts/lxdialog/yesno.c:127:
+	if (no && (no[0] == key))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#81: FILE: scripts/lxdialog/yesno.c:129:
+	if (No && (No[0] == key))
+	    answer = 'N';

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'No[0] == key'
#81: FILE: scripts/lxdialog/yesno.c:129:
+	if (No && (No[0] == key))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#84: FILE: scripts/lxdialog/yesno.c:132:
+	free (yes);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#85: FILE: scripts/lxdialog/yesno.c:133:
+	free (Yes);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#86: FILE: scripts/lxdialog/yesno.c:134:
+	free (no);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#87: FILE: scripts/lxdialog/yesno.c:135:
+	free (No);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#89: FILE: scripts/lxdialog/yesno.c:137:
+	if (answer)
+	    key = answer;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: scripts/lxdialog/menubox.c:192:
+    int answer = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: scripts/lxdialog/menubox.c:197:
+    wchar_t *yes, *Yes, *no, *No;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: scripts/lxdialog/menubox.c:199:
+    const char *yes, *Yes, *no, *No;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#128: FILE: scripts/lxdialog/menubox.c:559:
+	if (yes && (yes[0] == key))
+	    answer = 'y';

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'yes[0] == key'
#128: FILE: scripts/lxdialog/menubox.c:559:
+	if (yes && (yes[0] == key))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#130: FILE: scripts/lxdialog/menubox.c:561:
+	if (Yes && (Yes[0] == key))
+	    answer = 'Y';

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'Yes[0] == key'
#130: FILE: scripts/lxdialog/menubox.c:561:
+	if (Yes && (Yes[0] == key))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#132: FILE: scripts/lxdialog/menubox.c:563:
+	if (no && (no[0] == key))
+	    answer = 'n';

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'no[0] == key'
#132: FILE: scripts/lxdialog/menubox.c:563:
+	if (no && (no[0] == key))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#134: FILE: scripts/lxdialog/menubox.c:565:
+	if (No && (No[0] == key))
+	    answer = 'N';

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'No[0] == key'
#134: FILE: scripts/lxdialog/menubox.c:565:
+	if (No && (No[0] == key))

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: scripts/lxdialog/menubox.c:568:
+        free (yes);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: scripts/lxdialog/menubox.c:568:
+        free (yes);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#137: FILE: scripts/lxdialog/menubox.c:568:
+        free (yes);

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: scripts/lxdialog/menubox.c:569:
+        free (Yes);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: scripts/lxdialog/menubox.c:569:
+        free (Yes);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#138: FILE: scripts/lxdialog/menubox.c:569:
+        free (Yes);

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: scripts/lxdialog/menubox.c:570:
+        free (no);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: scripts/lxdialog/menubox.c:570:
+        free (no);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#139: FILE: scripts/lxdialog/menubox.c:570:
+        free (no);

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: scripts/lxdialog/menubox.c:571:
+        free (No);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: scripts/lxdialog/menubox.c:571:
+        free (No);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#140: FILE: scripts/lxdialog/menubox.c:571:
+        free (No);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#142: FILE: scripts/lxdialog/menubox.c:573:
+	if (answer)
+	    key = answer;

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: scripts/lxdialog/menubox.c:575:
+    ^Iswitch (key) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#144: FILE: scripts/lxdialog/menubox.c:575:
+    ^Iswitch (key) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: scripts/lxdialog/menubox.c:575:
+    ^Iswitch (key) {$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000167945.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 30 warnings, 10 checks, 96 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000167945.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
