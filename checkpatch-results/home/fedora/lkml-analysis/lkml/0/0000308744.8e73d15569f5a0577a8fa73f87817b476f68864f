WARNING:TYPO_SPELLING: 'funcion' may be misspelled - perhaps 'function'?
#43: 
funcion declaration. Andrew Morton has confirmed this and has applied
^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#55: FILE: include/linux/efi.h:300:
+extern unsigned long __init efi_get_time(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#56: FILE: include/linux/efi.h:301:
+extern int __init efi_set_rtc_mmss(unsigned long nowtime);

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#58: FILE: include/linux/efi.h:302:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: include/linux/sched.h:672:
+extern void FASTCALL(__mmdrop(struct mm_struct *));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#89: FILE: include/linux/bio.h:233:
+extern int bio_phys_segments(struct request_queue *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_queue *' should also have an identifier name
#89: FILE: include/linux/bio.h:233:
+extern int bio_phys_segments(struct request_queue *, struct bio *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#89: FILE: include/linux/bio.h:233:
+extern int bio_phys_segments(struct request_queue *, struct bio *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#90: FILE: include/linux/bio.h:234:
+extern int bio_hw_segments(struct request_queue *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_queue *' should also have an identifier name
#90: FILE: include/linux/bio.h:234:
+extern int bio_hw_segments(struct request_queue *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#90: FILE: include/linux/bio.h:234:
+extern int bio_hw_segments(struct request_queue *, struct bio *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#109: FILE: include/linux/elevator.h:98:
+extern int elv_rq_merge_ok(struct request *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#109: FILE: include/linux/elevator.h:98:
+extern int elv_rq_merge_ok(struct request *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#109: FILE: include/linux/elevator.h:98:
+extern int elv_rq_merge_ok(struct request *, struct bio *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#110: FILE: include/linux/elevator.h:99:
+extern int elv_try_merge(struct request *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#110: FILE: include/linux/elevator.h:99:
+extern int elv_try_merge(struct request *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#110: FILE: include/linux/elevator.h:99:
+extern int elv_try_merge(struct request *, struct bio *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#111: FILE: include/linux/elevator.h:100:
+extern int elv_try_last_merge(request_queue_t *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#111: FILE: include/linux/elevator.h:100:
+extern int elv_try_last_merge(request_queue_t *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#111: FILE: include/linux/elevator.h:100:
+extern int elv_try_last_merge(request_queue_t *, struct bio *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#127: FILE: include/linux/ide.h:1419:
+extern u32 ide_read_24(ide_drive_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#133: FILE: include/linux/ide.h:1420:
+extern void SELECT_DRIVE(ide_drive_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#134: FILE: include/linux/ide.h:1421:
+extern void SELECT_INTERRUPT(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#134: FILE: include/linux/ide.h:1421:
+extern void SELECT_INTERRUPT(ide_drive_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#135: FILE: include/linux/ide.h:1422:
+extern void SELECT_MASK(ide_drive_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#135: FILE: include/linux/ide.h:1422:
+extern void SELECT_MASK(ide_drive_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#135: FILE: include/linux/ide.h:1422:
+extern void SELECT_MASK(ide_drive_t *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#136: FILE: include/linux/ide.h:1423:
+extern void QUIRK_LIST(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#136: FILE: include/linux/ide.h:1423:
+extern void QUIRK_LIST(ide_drive_t *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000308744.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 15 warnings, 13 checks, 67 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000308744.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
