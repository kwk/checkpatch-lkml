WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#50: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#55: FILE: usr/include/arch/alpha/klibc/archconfig.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#76: FILE: usr/include/arch/alpha/klibc/archsetjmp.h:1:
+/*

WARNING:NEW_TYPEDEFS: do not add new typedefs
#106: FILE: usr/include/arch/alpha/klibc/archsetjmp.h:31:
+typedef struct __jmp_buf jmp_buf[1];

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#115: FILE: usr/include/arch/alpha/klibc/archsignal.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#135: FILE: usr/include/arch/alpha/klibc/archstat.h:1:
+#ifndef _KLIBC_ARCHSTAT_H

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#143: FILE: usr/include/arch/alpha/klibc/archstat.h:9:
+	__stdev64	(st_dev);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#145: FILE: usr/include/arch/alpha/klibc/archstat.h:11:
+	unsigned long	st_ino;
+	__stdev64	(st_rdev);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#145: FILE: usr/include/arch/alpha/klibc/archstat.h:11:
+	__stdev64	(st_rdev);

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: usr/include/arch/alpha/klibc/archstat.h:25:
+  ^Ilong^I^I__unused[3];$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#159: FILE: usr/include/arch/alpha/klibc/archstat.h:25:
+  ^Ilong^I^I__unused[3];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: usr/include/arch/alpha/klibc/archstat.h:25:
+  ^Ilong^I^I__unused[3];$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#169: FILE: usr/include/arch/alpha/klibc/archsys.h:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#179: FILE: usr/include/arch/alpha/klibc/archsys.h:11:
+/* Alpha has some bizarre Tru64-derived system calls which return two
+   different values in $0 and $20(!), respectively.  The standard

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#181: FILE: usr/include/arch/alpha/klibc/archsys.h:13:
+   return value have the wrong clobbers. */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#183: FILE: usr/include/arch/alpha/klibc/archsys.h:15:
+#define _syscall0_dual0(type, name)                                     \
+type name(void)                                                         \
+{                                                                       \
+        long _sc_ret, _sc_err;                                          \
+        {                                                               \
+                register long _sc_0 __asm__("$0");                      \
+                register long _sc_19 __asm__("$19");                    \
+                register long _sc_20 __asm__("$20");                    \
+                                                                        \
+                _sc_0 = __NR_##name;                                    \
+                __asm__("callsys"                                       \
+                        : "=r"(_sc_0), "=r"(_sc_19), "=r" (_sc_20)      \
+                        : "0"(_sc_0)                                    \
+                        : _syscall_clobbers);                           \
+                _sc_ret = _sc_0, _sc_err = _sc_19; (void)(_sc_20);      \
+        }                                                               \
+        _syscall_return(type);                                          \
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: usr/include/arch/alpha/klibc/archsys.h:18:
+        long _sc_ret, _sc_err;                                          \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: usr/include/arch/alpha/klibc/archsys.h:18:
+        long _sc_ret, _sc_err;                                          \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: usr/include/arch/alpha/klibc/archsys.h:19:
+        {                                                               \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: usr/include/arch/alpha/klibc/archsys.h:19:
+        {                                                               \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: usr/include/arch/alpha/klibc/archsys.h:20:
+                register long _sc_0 __asm__("$0");                      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: usr/include/arch/alpha/klibc/archsys.h:20:
+                register long _sc_0 __asm__("$0");                      \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: usr/include/arch/alpha/klibc/archsys.h:21:
+                register long _sc_19 __asm__("$19");                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: usr/include/arch/alpha/klibc/archsys.h:21:
+                register long _sc_19 __asm__("$19");                    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: usr/include/arch/alpha/klibc/archsys.h:22:
+                register long _sc_20 __asm__("$20");                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: usr/include/arch/alpha/klibc/archsys.h:22:
+                register long _sc_20 __asm__("$20");                    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: usr/include/arch/alpha/klibc/archsys.h:23:
+                                                                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: usr/include/arch/alpha/klibc/archsys.h:23:
+                                                                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: usr/include/arch/alpha/klibc/archsys.h:24:
+                _sc_0 = __NR_##name;                                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: usr/include/arch/alpha/klibc/archsys.h:24:
+                _sc_0 = __NR_##name;                                    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: usr/include/arch/alpha/klibc/archsys.h:25:
+                __asm__("callsys"                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: usr/include/arch/alpha/klibc/archsys.h:25:
+                __asm__("callsys"                                       \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: usr/include/arch/alpha/klibc/archsys.h:26:
+                        : "=r"(_sc_0), "=r"(_sc_19), "=r" (_sc_20)      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: usr/include/arch/alpha/klibc/archsys.h:26:
+                        : "=r"(_sc_0), "=r"(_sc_19), "=r" (_sc_20)      \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: usr/include/arch/alpha/klibc/archsys.h:27:
+                        : "0"(_sc_0)                                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: usr/include/arch/alpha/klibc/archsys.h:27:
+                        : "0"(_sc_0)                                    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: usr/include/arch/alpha/klibc/archsys.h:28:
+                        : _syscall_clobbers);                           \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: usr/include/arch/alpha/klibc/archsys.h:28:
+                        : _syscall_clobbers);                           \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: usr/include/arch/alpha/klibc/archsys.h:29:
+                _sc_ret = _sc_0, _sc_err = _sc_19; (void)(_sc_20);      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: usr/include/arch/alpha/klibc/archsys.h:29:
+                _sc_ret = _sc_0, _sc_err = _sc_19; (void)(_sc_20);      \$

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#197: FILE: usr/include/arch/alpha/klibc/archsys.h:29:
+                _sc_ret = _sc_0, _sc_err = _sc_19; (void)(_sc_20);      \

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: usr/include/arch/alpha/klibc/archsys.h:30:
+        }                                                               \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: usr/include/arch/alpha/klibc/archsys.h:30:
+        }                                                               \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: usr/include/arch/alpha/klibc/archsys.h:31:
+        _syscall_return(type);                                          \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: usr/include/arch/alpha/klibc/archsys.h:31:
+        _syscall_return(type);                                          \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: usr/include/arch/alpha/klibc/archsys.h:37:
+        long _sc_ret, _sc_err;                                          \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: usr/include/arch/alpha/klibc/archsys.h:37:
+        long _sc_ret, _sc_err;                                          \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: usr/include/arch/alpha/klibc/archsys.h:38:
+        {                                                               \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: usr/include/arch/alpha/klibc/archsys.h:38:
+        {                                                               \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: usr/include/arch/alpha/klibc/archsys.h:39:
+                register long _sc_0 __asm__("$0");                      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: usr/include/arch/alpha/klibc/archsys.h:39:
+                register long _sc_0 __asm__("$0");                      \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: usr/include/arch/alpha/klibc/archsys.h:40:
+                register long _sc_19 __asm__("$19");                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: usr/include/arch/alpha/klibc/archsys.h:40:
+                register long _sc_19 __asm__("$19");                    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: usr/include/arch/alpha/klibc/archsys.h:41:
+                register long _sc_20 __asm__("$20");                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: usr/include/arch/alpha/klibc/archsys.h:41:
+                register long _sc_20 __asm__("$20");                    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: usr/include/arch/alpha/klibc/archsys.h:42:
+                                                                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: usr/include/arch/alpha/klibc/archsys.h:42:
+                                                                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: usr/include/arch/alpha/klibc/archsys.h:43:
+                _sc_0 = __NR_##name;                                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: usr/include/arch/alpha/klibc/archsys.h:43:
+                _sc_0 = __NR_##name;                                    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: usr/include/arch/alpha/klibc/archsys.h:44:
+                __asm__("callsys"                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: usr/include/arch/alpha/klibc/archsys.h:44:
+                __asm__("callsys"                                       \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: usr/include/arch/alpha/klibc/archsys.h:45:
+                        : "=r"(_sc_0), "=r"(_sc_19), "=r" (_sc_20)      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: usr/include/arch/alpha/klibc/archsys.h:45:
+                        : "=r"(_sc_0), "=r"(_sc_19), "=r" (_sc_20)      \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: usr/include/arch/alpha/klibc/archsys.h:46:
+                        : "0"(_sc_0)                                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: usr/include/arch/alpha/klibc/archsys.h:46:
+                        : "0"(_sc_0)                                    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: usr/include/arch/alpha/klibc/archsys.h:47:
+                        : _syscall_clobbers);                           \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: usr/include/arch/alpha/klibc/archsys.h:47:
+                        : _syscall_clobbers);                           \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: usr/include/arch/alpha/klibc/archsys.h:48:
+                _sc_ret = _sc_20, _sc_err = _sc_19; (void)(_sc_0);      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: usr/include/arch/alpha/klibc/archsys.h:48:
+                _sc_ret = _sc_20, _sc_err = _sc_19; (void)(_sc_0);      \$

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#216: FILE: usr/include/arch/alpha/klibc/archsys.h:48:
+                _sc_ret = _sc_20, _sc_err = _sc_19; (void)(_sc_0);      \

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: usr/include/arch/alpha/klibc/archsys.h:49:
+        }                                                               \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: usr/include/arch/alpha/klibc/archsys.h:49:
+        }                                                               \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: usr/include/arch/alpha/klibc/archsys.h:50:
+        _syscall_return(type);                                          \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: usr/include/arch/alpha/klibc/archsys.h:50:
+        _syscall_return(type);                                          \$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#228: FILE: usr/include/arch/alpha/machine/asm.h:1:
+/*

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#237: FILE: usr/include/arch/alpha/machine/asm.h:10:
+#define v0	$0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#238: FILE: usr/include/arch/alpha/machine/asm.h:11:
+#define t0	$1

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#239: FILE: usr/include/arch/alpha/machine/asm.h:12:
+#define t1	$2

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#240: FILE: usr/include/arch/alpha/machine/asm.h:13:
+#define t2	$3

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#241: FILE: usr/include/arch/alpha/machine/asm.h:14:
+#define t3	$4

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#242: FILE: usr/include/arch/alpha/machine/asm.h:15:
+#define t4	$5

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#243: FILE: usr/include/arch/alpha/machine/asm.h:16:
+#define t5	$6

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#244: FILE: usr/include/arch/alpha/machine/asm.h:17:
+#define t6	$7

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#245: FILE: usr/include/arch/alpha/machine/asm.h:18:
+#define t7	$8

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#246: FILE: usr/include/arch/alpha/machine/asm.h:19:
+#define s0	$9

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#247: FILE: usr/include/arch/alpha/machine/asm.h:20:
+#define s1	$10

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#248: FILE: usr/include/arch/alpha/machine/asm.h:21:
+#define s2	$11

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#249: FILE: usr/include/arch/alpha/machine/asm.h:22:
+#define s3	$12

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#250: FILE: usr/include/arch/alpha/machine/asm.h:23:
+#define s4	$13

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#251: FILE: usr/include/arch/alpha/machine/asm.h:24:
+#define s5	$14

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#252: FILE: usr/include/arch/alpha/machine/asm.h:25:
+#define fp	$15

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#253: FILE: usr/include/arch/alpha/machine/asm.h:26:
+#define a0	$16

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#254: FILE: usr/include/arch/alpha/machine/asm.h:27:
+#define a1	$17

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#255: FILE: usr/include/arch/alpha/machine/asm.h:28:
+#define a2	$18

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#256: FILE: usr/include/arch/alpha/machine/asm.h:29:
+#define a3	$19

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#257: FILE: usr/include/arch/alpha/machine/asm.h:30:
+#define a4	$20

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#258: FILE: usr/include/arch/alpha/machine/asm.h:31:
+#define a5	$21

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#259: FILE: usr/include/arch/alpha/machine/asm.h:32:
+#define t8	$22

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#260: FILE: usr/include/arch/alpha/machine/asm.h:33:
+#define t9	$23

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#261: FILE: usr/include/arch/alpha/machine/asm.h:34:
+#define t10	$24

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#262: FILE: usr/include/arch/alpha/machine/asm.h:35:
+#define t11	$25

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#263: FILE: usr/include/arch/alpha/machine/asm.h:36:
+#define ra	$26

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#264: FILE: usr/include/arch/alpha/machine/asm.h:37:
+#define t12	$27		/* t12 and pv are both used for $27 */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#265: FILE: usr/include/arch/alpha/machine/asm.h:38:
+#define pv	$27		/* t12 and pv are both used for $27 */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#266: FILE: usr/include/arch/alpha/machine/asm.h:39:
+#define at	$28

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#267: FILE: usr/include/arch/alpha/machine/asm.h:40:
+#define gp	$29

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#268: FILE: usr/include/arch/alpha/machine/asm.h:41:
+#define sp	$30

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#269: FILE: usr/include/arch/alpha/machine/asm.h:42:
+#define zero	$31

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#394: FILE: usr/klibc/arch/alpha/crt0.S:1:
+#

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#422: FILE: usr/klibc/arch/alpha/divide.c:1:
+#include <stdint.h>

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#427: FILE: usr/klibc/arch/alpha/divide.c:6:
+typedef uint64_t uint;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#428: FILE: usr/klibc/arch/alpha/divide.c:7:
+typedef int64_t sint;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#430: FILE: usr/klibc/arch/alpha/divide.c:9:
+typedef uint32_t uint;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#431: FILE: usr/klibc/arch/alpha/divide.c:10:
+typedef int32_t sint;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#435: FILE: usr/klibc/arch/alpha/divide.c:14:
+typedef sint xint;

CHECK:SPACING: No space is necessary after a cast
#476: FILE: usr/klibc/arch/alpha/divide.c:55:
+	v = (xint) (REM ? num : quot);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#487: FILE: usr/klibc/arch/alpha/pipe.S:1:
+#

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#531: FILE: usr/klibc/arch/alpha/setjmp.S:1:
+#

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#612: FILE: usr/klibc/arch/alpha/syscall.S:1:
+#

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#644: FILE: usr/klibc/arch/alpha/sysdual.S:1:
+#

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000065116.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 63 errors, 52 warnings, 5 checks, 575 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000065116.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
