WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#58: 
     2: extended variant (binary compatible to v0 on everything except M68K)

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#98: 
Thanks to Arthur Corliss, Albert Cahalan and Ragnar Kjørstad for their
                                                      ^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#183: FILE: include/linux/acct.h:72:
+struct acct_v3
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: include/linux/acct.h:132:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: include/linux/acct.h:132:
+ $

WARNING:NEW_TYPEDEFS: do not add new typedefs
#238: FILE: include/linux/acct.h:136:
+typedef struct acct_v3 acct_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#246: FILE: include/linux/acct.h:144:
+typedef struct acct acct_t;

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#260: FILE: include/linux/acct.h:158:
+#if (HZ % AHZ)==0
               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#263: FILE: include/linux/acct.h:161:
+# define jiffies_to_AHZ(x) ((clock_t) jiffies_64_to_AHZ((u64) x))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#270: FILE: include/linux/acct.h:168:
+#elseif (HZ % AHZ)==0

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#270: FILE: include/linux/acct.h:168:
+#elseif (HZ % AHZ)==0
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: include/linux/acct.h:174:
+       return x;$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#310: FILE: kernel/acct.c:305:
+#if ACCT_VERSION==1 || ACCT_VERSION==2
                 ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#310: FILE: kernel/acct.c:305:
+#if ACCT_VERSION==1 || ACCT_VERSION==2
                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:WxV)
#323: FILE: kernel/acct.c:318:
+#define MAXEXP2         ((1 <<EXPSIZE2) - 1)    /* Maximum exponent. */
                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#327: FILE: kernel/acct.c:322:
+        int exp, rnd;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: kernel/acct.c:322:
+        int exp, rnd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: kernel/acct.c:324:
+        exp = (value > (MAXFRACT2>>1));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: kernel/acct.c:324:
+        exp = (value > (MAXFRACT2>>1));$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#329: FILE: kernel/acct.c:324:
+        exp = (value > (MAXFRACT2>>1));
                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: kernel/acct.c:325:
+        rnd = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: kernel/acct.c:325:
+        rnd = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: kernel/acct.c:326:
+        while (value > MAXFRACT2) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: kernel/acct.c:326:
+        while (value > MAXFRACT2) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: kernel/acct.c:327:
+                rnd = value & 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: kernel/acct.c:327:
+                rnd = value & 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: kernel/acct.c:328:
+                value >>= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: kernel/acct.c:328:
+                value >>= 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#334: FILE: kernel/acct.c:329:
+                exp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: kernel/acct.c:329:
+                exp++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: kernel/acct.c:330:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: kernel/acct.c:330:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: kernel/acct.c:332:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: kernel/acct.c:333:
+         * If we need to round up, do it (and handle overflow correctly).$

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: kernel/acct.c:334:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: kernel/acct.c:335:
+        if (rnd && (++value > MAXFRACT2)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: kernel/acct.c:335:
+        if (rnd && (++value > MAXFRACT2)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: kernel/acct.c:336:
+                value >>= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: kernel/acct.c:336:
+                value >>= 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: kernel/acct.c:337:
+                exp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: kernel/acct.c:337:
+                exp++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: kernel/acct.c:338:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: kernel/acct.c:338:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: kernel/acct.c:340:
+        if (exp > MAXEXP2) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: kernel/acct.c:340:
+        if (exp > MAXEXP2) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: kernel/acct.c:341:
+                /* Overflow. Return largest representable number instead. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: kernel/acct.c:342:
+                return (1ul << (MANTSIZE2+EXPSIZE2-1)) - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: kernel/acct.c:342:
+                return (1ul << (MANTSIZE2+EXPSIZE2-1)) - 1;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#347: FILE: kernel/acct.c:342:
+                return (1ul << (MANTSIZE2+EXPSIZE2-1)) - 1;
                                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#347: FILE: kernel/acct.c:342:
+                return (1ul << (MANTSIZE2+EXPSIZE2-1)) - 1;
                                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: kernel/acct.c:343:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: kernel/acct.c:343:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: kernel/acct.c:344:
+                return (value & (MAXFRACT2>>1)) | (exp << (MANTSIZE2-1));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: kernel/acct.c:344:
+                return (value & (MAXFRACT2>>1)) | (exp << (MANTSIZE2-1));$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#349: FILE: kernel/acct.c:344:
+                return (value & (MAXFRACT2>>1)) | (exp << (MANTSIZE2-1));
                                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#349: FILE: kernel/acct.c:344:
+                return (value & (MAXFRACT2>>1)) | (exp << (MANTSIZE2-1));
                                                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: kernel/acct.c:345:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: kernel/acct.c:345:
+        }$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#354: FILE: kernel/acct.c:349:
+#if ACCT_VERSION==3
                 ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#360: FILE: kernel/acct.c:355:
+	unsigned exp = 190;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#361: FILE: kernel/acct.c:356:
+	unsigned u;

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#363: FILE: kernel/acct.c:358:
+	if (value==0) return 0;
 	         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#363: FILE: kernel/acct.c:358:
+	if (value==0) return 0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open brace '{'
#364: FILE: kernel/acct.c:359:
+	while ((s64)value > 0){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: kernel/acct.c:365:
+} $

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#402: FILE: kernel/acct.c:406:
+#if ACCT_VERSION==3
                 ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#409: FILE: kernel/acct.c:412:
+#if ACCT_VERSION==1 || ACCT_VERSION==2
                 ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#409: FILE: kernel/acct.c:412:
+#if ACCT_VERSION==1 || ACCT_VERSION==2
                                    ^

CHECK:SPACING: No space is necessary after a cast
#413: FILE: kernel/acct.c:416:
+	ac.ac_etime_lo = (u16) etime;

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#424: FILE: kernel/acct.c:425:
+#if ACCT_VERSION==2
                 ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#427: FILE: kernel/acct.c:428:
+#if ACCT_VERSION==1 || ACCT_VERSION==2
                 ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#427: FILE: kernel/acct.c:428:
+#if ACCT_VERSION==1 || ACCT_VERSION==2
                                    ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#432: FILE: kernel/acct.c:433:
+#if ACCT_VERSION==3
                 ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000278313.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 39 errors, 25 warnings, 9 checks, 334 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000278313.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
