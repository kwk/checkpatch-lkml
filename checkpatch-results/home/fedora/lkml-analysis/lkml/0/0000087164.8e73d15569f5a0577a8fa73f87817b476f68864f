WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# size org/*.ko new/*.ko | sort -t/ -k2

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: drivers/char/drm/drm_memory.c:146:
+drm_map_t *drm_lookup_map(unsigned long offset,
+					unsigned long size, drm_device_t * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#95: FILE: drivers/char/drm/drm_memory.c:146:
+					unsigned long size, drm_device_t * dev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#102: FILE: drivers/char/drm/drm_memory.c:153:
+		r_list = (drm_map_list_t *) list;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#107: FILE: drivers/char/drm/drm_memory.c:158:
+		if (map->offset <= offset
+		    && (offset + size) <= (map->offset + map->size))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: drivers/char/drm/drm_memory.c:165:
+void *agp_remap(unsigned long offset, unsigned long size,
+			      drm_device_t * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#114: FILE: drivers/char/drm/drm_memory.c:165:
+			      drm_device_t * dev)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#130: FILE: drivers/char/drm/drm_memory.c:181:
+		if (agpmem->bound <= offset
+		    && (agpmem->bound + (agpmem->pages << PAGE_SHIFT)) >=

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: drivers/char/drm/drm_memory.c:233:
+void *drm_ioremap(unsigned long offset, unsigned long size,
+				drm_device_t * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#165: FILE: drivers/char/drm/drm_memory.c:233:
+				drm_device_t * dev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: drivers/char/drm/drm_memory.c:246:
+void *drm_ioremap_nocache(unsigned long offset,
+					unsigned long size, drm_device_t * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#178: FILE: drivers/char/drm/drm_memory.c:246:
+					unsigned long size, drm_device_t * dev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: drivers/char/drm/drm_memory.c:258:
+void drm_ioremapfree(void *pt, unsigned long size,
+				   drm_device_t * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#190: FILE: drivers/char/drm/drm_memory.c:258:
+				   drm_device_t * dev)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#198: FILE: drivers/char/drm/drm_memory.c:266:
+	if (drm_core_has_AGP(dev) && dev->agp && dev->agp->cant_use_aperture
+	    && ((unsigned long)pt >= VMALLOC_START

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#199: FILE: drivers/char/drm/drm_memory.c:267:
+	    && ((unsigned long)pt >= VMALLOC_START
+		&& (unsigned long)pt < VMALLOC_END)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: drivers/char/drm/drm_memory.h:64:
+drm_map_t *drm_lookup_map(unsigned long offset,
+					unsigned long size, drm_device_t * dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#257: FILE: drivers/char/drm/drm_memory.h:64:
+					unsigned long size, drm_device_t * dev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: drivers/char/drm/drm_memory.h:67:
+void *agp_remap(unsigned long offset, unsigned long size,
+			      drm_device_t * dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#287: FILE: drivers/char/drm/drm_memory.h:67:
+			      drm_device_t * dev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: drivers/char/drm/drm_memory.h:100:
+void *drm_ioremap(unsigned long offset, unsigned long size,
+				drm_device_t * dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#319: FILE: drivers/char/drm/drm_memory.h:100:
+				drm_device_t * dev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: drivers/char/drm/drm_memory.h:103:
+void *drm_ioremap_nocache(unsigned long offset,
+					unsigned long size, drm_device_t * dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#343: FILE: drivers/char/drm/drm_memory.h:103:
+					unsigned long size, drm_device_t * dev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: drivers/char/drm/drm_memory.h:106:
+void drm_ioremapfree(void *pt, unsigned long size,
+				   drm_device_t * dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#348: FILE: drivers/char/drm/drm_memory.h:106:
+				   drm_device_t * dev);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000087164.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 1 warnings, 15 checks, 255 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000087164.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
