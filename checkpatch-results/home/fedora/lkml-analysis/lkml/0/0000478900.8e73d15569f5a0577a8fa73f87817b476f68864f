WARNING:TYPO_SPELLING: 'signficantly' may be misspelled - perhaps 'significantly'?
#46: 
>    this patch can be cleaned up signficantly - delete rcudata.h 
                                  ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'signficantly' may be misspelled - perhaps 'significantly'?
#50: 
>    use RCU, why bother ? This simplifies the patch signficantly
                                                     ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'schduler' may be misspelled - perhaps 'scheduler'?
#55: 
>    of O(1) schduler, so my hack goes away.
             ^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#70: 
diff -urN linux-2.5.3/include/linux/rcudata.h linux-2.5.3-rcu/include/linux/rcudata.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#74: FILE: include/linux/rcudata.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#88: FILE: include/linux/rcudata.h:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#89: FILE: include/linux/rcudata.h:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: include/linux/rcudata.h:21:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#103: FILE: include/linux/rcudata.h:30:
+ * ^I^Ihttp://lse.sourceforge.net/locking/rcupdate.html$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#117: FILE: include/linux/rcudata.h:44:
+typedef long rcu_batch_t;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: include/linux/rcudata.h:48:
+ * $

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: include/linux/rcudata.h:79:
+        /*$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: include/linux/rcudata.h:80:
+         * Per-CPU variables used by the write side of the read-copy update$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: include/linux/rcudata.h:81:
+         * mechanism.  See kernel/rcupdate.c.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: include/linux/rcudata.h:82:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: include/linux/rcudata.h:83:
+        long              last_qsctr;^I /* value of qsctr at beginning */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: include/linux/rcudata.h:83:
+        long              last_qsctr;^I /* value of qsctr at beginning */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: include/linux/rcudata.h:84:
+                                         /* of last rcu interval. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: include/linux/rcudata.h:85:
+        rcu_batch_t       batch;         /* Batch # for current RCU batch */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: include/linux/rcudata.h:85:
+        rcu_batch_t       batch;         /* Batch # for current RCU batch */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: include/linux/rcudata.h:87:
+        struct list_head  nxtlist;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: include/linux/rcudata.h:87:
+        struct list_head  nxtlist;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: include/linux/rcudata.h:88:
+        struct list_head  curlist;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: include/linux/rcudata.h:88:
+        struct list_head  curlist;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: include/linux/rcudata.h:89:
+        struct list_head  donelist;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: include/linux/rcudata.h:89:
+        struct list_head  donelist;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#170: FILE: include/linux/rcudata.h:97:
+#define RCU_qsctr(cpu) ^I^I(rcu_data[(cpu)].qsctr)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#171: FILE: include/linux/rcudata.h:98:
+#define RCU_last_qsctr(cpu) ^I(rcu_data[(cpu)].last_qsctr)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#172: FILE: include/linux/rcudata.h:99:
+#define RCU_batch(cpu) ^I^I(rcu_data[(cpu)].batch)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#173: FILE: include/linux/rcudata.h:100:
+#define RCU_nxtlist(cpu) ^I(rcu_data[(cpu)].nxtlist)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#174: FILE: include/linux/rcudata.h:101:
+#define RCU_curlist(cpu) ^I(rcu_data[(cpu)].curlist)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#175: FILE: include/linux/rcudata.h:102:
+#define RCU_donelist(cpu) ^I(rcu_data[(cpu)].donelist)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#176: FILE: include/linux/rcudata.h:103:
+#define RCU_tasklet(cpu) ^I(rcu_data[(cpu)].tasklet)$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#187: FILE: include/linux/rcupdate.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: include/linux/rcupdate.h:2:
+ * Read-Copy Update mechanism for mutual exclusion $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#201: FILE: include/linux/rcupdate.h:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#202: FILE: include/linux/rcupdate.h:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: include/linux/rcupdate.h:21:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#215: FILE: include/linux/rcupdate.h:29:
+ * ^I^Ihttp://lse.sourceforge.net/locking/rcupdate.html$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: include/linux/rcupdate.h:39:
+ * Callback structure for use with call_rcu(). $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'head' - possible side-effects?
#234: FILE: include/linux/rcupdate.h:48:
+#define RCU_HEAD(head) struct rcu_head head = RCU_HEAD_INIT(head)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#235: FILE: include/linux/rcupdate.h:49:
+#define INIT_RCU_HEAD(ptr) do { \
+	INIT_LIST_HEAD(&(ptr)->list); (ptr)->func = NULL; (ptr)->arg = NULL; \
+} while (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#239: FILE: include/linux/rcupdate.h:53:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#240: FILE: include/linux/rcupdate.h:54:
+extern void call_rcu(struct rcu_head *head, void (*func)(void *arg), void *arg);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#241: FILE: include/linux/rcupdate.h:55:
+extern void synchronize_kernel(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#251: FILE: include/linux/sched.h:164:
+extern int task_idle(task_t *p);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#277: FILE: kernel/rcupdate.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#291: FILE: kernel/rcupdate.c:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#292: FILE: kernel/rcupdate.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#297: FILE: kernel/rcupdate.c:21:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#306: FILE: kernel/rcupdate.c:30:
+ * ^I^Ihttp://lse.sourceforge.net/locking/rcupdate.html$

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#315: FILE: kernel/rcupdate.c:39:
+#include <asm/atomic.h>

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#316: FILE: kernel/rcupdate.c:40:
+#include <asm/bitops.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: kernel/rcupdate.c:52:
+static unsigned long^Ircu_cpumask = 0; ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#328: FILE: kernel/rcupdate.c:52:
+static unsigned long^Ircu_cpumask = 0; ^I$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#328: FILE: kernel/rcupdate.c:52:
+static unsigned long	rcu_cpumask = 0; 	

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#330: FILE: kernel/rcupdate.c:54:
+static unsigned long	rcu_active_cpumask = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#332: FILE: kernel/rcupdate.c:56:
+static struct timer_list rcu_timer;^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#378: FILE: kernel/rcupdate.c:102:
+	if (RCU_BATCH_LT(rcu_maxbatch, newbatch)) {
+		rcu_maxbatch = newbatch;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rcu_cpumask != 0'
#381: FILE: kernel/rcupdate.c:105:
+	if (RCU_BATCH_LT(rcu_maxbatch, rcu_curbatch) || (rcu_cpumask != 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#381: FILE: kernel/rcupdate.c:105:
+	if (RCU_BATCH_LT(rcu_maxbatch, rcu_curbatch) || (rcu_cpumask != 0)) {
+		return;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#396: FILE: kernel/rcupdate.c:120:
+	if (!test_bit(cpu, &rcu_cpumask)) {
+		return;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: kernel/rcupdate.c:124:
+^I/* $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#409: FILE: kernel/rcupdate.c:133:
+	if (RCU_qsctr(cpu) == RCU_last_qsctr(cpu)) {
+		return;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#448: FILE: kernel/rcupdate.c:172:
+^I^Iif (!rcu_timer_active && $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: kernel/rcupdate.c:201:
+^I/* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#479: FILE: kernel/rcupdate.c:203:
+         * call_rcu() will anyway reschedule the tasklet so if the$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#489: FILE: kernel/rcupdate.c:213:
+	if (!list_empty(&RCU_donelist(cpu))) {
+		rcu_invoke_callbacks(&RCU_donelist(cpu));
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#505: FILE: kernel/rcupdate.c:229:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#511: FILE: kernel/rcupdate.c:235:
+	for (cpu = 0; cpu < smp_num_cpus; cpu++) {
+		up(&krcud_sema(cpu));
+	}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#536: FILE: kernel/rcupdate.c:260:
+
+}

WARNING:TYPO_SPELLING: 'dameon' may be misspelled - perhaps 'daemon'?
#540: FILE: kernel/rcupdate.c:264:
+ * Per-CPU RCU dameon. It runs at an absurdly high priority so
                ^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#544: FILE: kernel/rcupdate.c:268:
+static int krcud(void * __bind_cpu)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#546: FILE: kernel/rcupdate.c:270:
+	int bind_cpu = *(int *) __bind_cpu;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#550: FILE: kernel/rcupdate.c:274:
+        current->policy = SCHED_FIFO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: kernel/rcupdate.c:274:
+        current->policy = SCHED_FIFO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#551: FILE: kernel/rcupdate.c:275:
+        current->rt_priority = 1001 + sys_sched_get_priority_max(SCHED_FIFO);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: kernel/rcupdate.c:275:
+        current->rt_priority = 1001 + sys_sched_get_priority_max(SCHED_FIFO);$

WARNING:CONSIDER_COMPLETION: consider using a completion
#559: FILE: kernel/rcupdate.c:283:
+	sema_init(&krcud_sema(cpu), 0);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#564: FILE: kernel/rcupdate.c:288:
+		while (down_interruptible(&krcud_sema(cpu)));

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: No space is necessary after a cast
#576: FILE: kernel/rcupdate.c:300:
+		if (kernel_thread(krcud, (void *) &cpu,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#578: FILE: kernel/rcupdate.c:302:
+^I^I^Iprintk(KERN_ERR "spawn_krcud() failed for cpu %d\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#578: FILE: kernel/rcupdate.c:302:
+			printk(KERN_ERR "spawn_krcud() failed for cpu %d\n", 

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'spawn_krcud', this function's name, in a string
#578: FILE: kernel/rcupdate.c:302:
+			printk(KERN_ERR "spawn_krcud() failed for cpu %d\n", 

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#579: FILE: kernel/rcupdate.c:303:
+			printk(KERN_ERR "spawn_krcud() failed for cpu %d\n", 
+									cpu);

CHECK:BRACES: Unbalanced braces around else statement
#580: FILE: kernel/rcupdate.c:304:
+		else {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#581: FILE: kernel/rcupdate.c:305:
+			while (!krcud_task(cpu_logical_map(cpu))) {
+				schedule();
+			}

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#601: FILE: kernel/rcupdate.c:325:
+	for (i = 0; i < NR_CPUS; i++) {

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#636: FILE: kernel/rcupdate.c:360:
+__initcall(rcu_init);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#638: FILE: kernel/rcupdate.c:362:
+EXPORT_SYMBOL(call_rcu);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#639: FILE: kernel/rcupdate.c:363:
+EXPORT_SYMBOL(synchronize_kernel);

ERROR:CODE_INDENT: code indent should use tabs where possible
#655: FILE: kernel/sched.c:689:
+ ^IRCU_qsctr(prev->cpu)++;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#655: FILE: kernel/sched.c:689:
+ ^IRCU_qsctr(prev->cpu)++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#655: FILE: kernel/sched.c:689:
+ ^IRCU_qsctr(prev->cpu)++;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000478900.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 36 errors, 45 warnings, 13 checks, 577 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000478900.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
