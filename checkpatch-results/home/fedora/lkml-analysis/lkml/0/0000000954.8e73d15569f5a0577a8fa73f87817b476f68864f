CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#91: FILE: include/linux/pagemap.h:18:
+extern int pagecache_ratio_sysctl_handler(struct ctl_table *, int,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#91: FILE: include/linux/pagemap.h:18:
+extern int pagecache_ratio_sysctl_handler(struct ctl_table *, int,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#91: FILE: include/linux/pagemap.h:18:
+extern int pagecache_ratio_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#91: FILE: include/linux/pagemap.h:18:
+extern int pagecache_ratio_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#91: FILE: include/linux/pagemap.h:18:
+extern int pagecache_ratio_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#91: FILE: include/linux/pagemap.h:18:
+extern int pagecache_ratio_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#91: FILE: include/linux/pagemap.h:18:
+extern int pagecache_ratio_sysctl_handler(struct ctl_table *, int,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: include/linux/pagemap.h:19:
+extern int pagecache_ratio_sysctl_handler(struct ctl_table *, int,
+			struct file *, void __user *, size_t *, loff_t *);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#103: FILE: include/linux/sysctl.h:205:
+	VM_PAGECACHE_RATIO=36,  /* Percent memory is used as page cache */
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#143: FILE: mm/filemap.c:116:
+unsigned int pagecache_limit = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#146: FILE: mm/filemap.c:119:
+#define PAGECACHE_RECLAIM_THRESHOLD 64 /* Call reclaim after exceeding
+					  the limit by this threshold */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#146: FILE: mm/filemap.c:119:
+					  the limit by this threshold */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: mm/filemap.c:132:
+int pagecache_ratio_sysctl_handler(ctl_table *table, int write,
+	struct file *file, void __user *buffer, size_t *length, loff_t *ppos)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#178: FILE: mm/filemap.c:151:
+	 * is what we really want to target */

ERROR:SPACING: space prohibited after that open parenthesis '('
#179: FILE: mm/filemap.c:152:
+	if ( pagecache_limit && current_pagecache > pagecache_limit)

WARNING:LINE_SPACING: Missing a blank line after declarations
#189: FILE: mm/filemap.c:162:
+	unsigned long ret;
+	nr_pages = check_pagecache_overlimit();

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#196: FILE: mm/filemap.c:169:
+__initcall(setup_pagecache_limit);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#226: FILE: mm/vmscan.c:48:
 
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#238: FILE: mm/vmscan.c:74:
+	int reclaim_pagecache_only;  /* Set when called from
+					pagecache controller */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#238: FILE: mm/vmscan.c:74:
+					pagecache controller */

WARNING:LINE_SPACING: Missing a blank line after declarations
#352: FILE: mm/vmscan.c:1569:
+			unsigned long nr_to_scan = nr_pages - ret;
+			sc.nr_scanned = 0;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#362: FILE: mm/vmscan.c:1579:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000000954.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 14 warnings, 5 checks, 262 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000000954.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
