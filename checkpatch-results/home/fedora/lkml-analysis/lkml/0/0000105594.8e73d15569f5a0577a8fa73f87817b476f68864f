WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#45: FILE: drivers/isdn/gigaset/i4l.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#60: FILE: drivers/isdn/gigaset/i4l.c:16:
+ * Version: $Id: i4l.c,v 1.3.2.9 2006/02/04 18:28:16 hjlipp Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#66: FILE: drivers/isdn/gigaset/i4l.c:22:
+/* == Handling of I4L IO ============================================================================*/

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <driverID>
#83: FILE: drivers/isdn/gigaset/i4l.c:39:
+static int writebuf_from_LL(int driverID, int channel, int ack, struct sk_buff *skb)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#87: FILE: drivers/isdn/gigaset/i4l.c:43:
+	unsigned len;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#88: FILE: drivers/isdn/gigaset/i4l.c:44:
+	unsigned skblen;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#90: FILE: drivers/isdn/gigaset/i4l.c:46:
+	if (!(cs = gigaset_get_cs_by_id(driverID))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: drivers/isdn/gigaset/i4l.c:78:
+	dbg(DEBUG_MCMD, "skb: len=%u, skblen=%u: %02x %02x", len, skblen,
+	     (unsigned) skb->head[0], (unsigned) skb->head[1]);

CHECK:SPACING: No space is necessary after a cast
#122: FILE: drivers/isdn/gigaset/i4l.c:78:
+	     (unsigned) skb->head[0], (unsigned) skb->head[1]);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#122: FILE: drivers/isdn/gigaset/i4l.c:78:
+	     (unsigned) skb->head[0], (unsigned) skb->head[1]);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#122: FILE: drivers/isdn/gigaset/i4l.c:78:
+	     (unsigned) skb->head[0], (unsigned) skb->head[1]);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#130: FILE: drivers/isdn/gigaset/i4l.c:86:
+	unsigned len;

CHECK:SPACING: No space is necessary after a cast
#138: FILE: drivers/isdn/gigaset/i4l.c:94:
+	len = (unsigned char) skb->head[0] |

CHECK:SPACING: No space is necessary after a cast
#139: FILE: drivers/isdn/gigaset/i4l.c:95:
+	      (unsigned) (unsigned char) skb->head[1] << 8;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#139: FILE: drivers/isdn/gigaset/i4l.c:95:
+	      (unsigned) (unsigned char) skb->head[1] << 8;

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#148: FILE: drivers/isdn/gigaset/i4l.c:104:
+		response.parm.length = len;
 		         ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#149: FILE: drivers/isdn/gigaset/i4l.c:105:
+		bcs->cs->iif.statcallb(&response);
 		         ^^^

WARNING:SPLIT_STRING: quoted string split across lines
#191: FILE: drivers/isdn/gigaset/i4l.c:147:
+		dbg(DEBUG_ANY, "ISDN_CMD_DIAL (driver: %d, channel: %ld, "
+		    "phone: %s,ownmsn: %s, si1: %d, si2: %d)",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#193: FILE: drivers/isdn/gigaset/i4l.c:149:
+		    cntrl->parm.setup.phone, cntrl->parm.setup.eazmsn,
 		           ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#193: FILE: drivers/isdn/gigaset/i4l.c:149:
+		    cntrl->parm.setup.phone, cntrl->parm.setup.eazmsn,
 		                                    ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#194: FILE: drivers/isdn/gigaset/i4l.c:150:
+		    cntrl->parm.setup.si1, cntrl->parm.setup.si2);
 		           ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#194: FILE: drivers/isdn/gigaset/i4l.c:150:
+		    cntrl->parm.setup.si1, cntrl->parm.setup.si2);
 		                                  ^^^^

CHECK:SPACING: No space is necessary after a cast
#197: FILE: drivers/isdn/gigaset/i4l.c:153:
+			err("invalid channel (%d)", (int) cntrl->arg);

WARNING:SIZEOF_PARENTHESIS: sizeof *sp should be sizeof(*sp)
#208: FILE: drivers/isdn/gigaset/i4l.c:164:
+		sp = kmalloc(sizeof *sp, GFP_ATOMIC);

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#214: FILE: drivers/isdn/gigaset/i4l.c:170:
+		*sp = cntrl->parm.setup;
 		             ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: drivers/isdn/gigaset/i4l.c:173:
+^I^I^I               atomic_read(&bcs->at_state.seq_index),$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: drivers/isdn/gigaset/i4l.c:173:
+		if (!gigaset_add_event(cs, &bcs->at_state, EV_DIAL, sp,
+			               atomic_read(&bcs->at_state.seq_index),

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: drivers/isdn/gigaset/i4l.c:174:
+^I^I^I               NULL)) {$

CHECK:SPACING: No space is necessary after a cast
#232: FILE: drivers/isdn/gigaset/i4l.c:188:
+			err("invalid channel (%d)", (int) cntrl->arg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: drivers/isdn/gigaset/i4l.c:193:
+^I^I^I               EV_ACCEPT, NULL, 0, NULL)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: drivers/isdn/gigaset/i4l.c:193:
+		if (!gigaset_add_event(cs, &cs->bcs[cntrl->arg].at_state,
+			               EV_ACCEPT, NULL, 0, NULL)) {

CHECK:SPACING: No space is necessary after a cast
#251: FILE: drivers/isdn/gigaset/i4l.c:207:
+		    "ISDN_CMD_HANGUP (channel: %d)", (int) cntrl->arg);

CHECK:SPACING: No space is necessary after a cast
#255: FILE: drivers/isdn/gigaset/i4l.c:211:
+			    (unsigned) cntrl->arg);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#255: FILE: drivers/isdn/gigaset/i4l.c:211:
+			    (unsigned) cntrl->arg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: drivers/isdn/gigaset/i4l.c:216:
+^I^I^I               EV_HUP, NULL, 0, NULL)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: drivers/isdn/gigaset/i4l.c:216:
+		if (!gigaset_add_event(cs, &cs->bcs[cntrl->arg].at_state,
+			               EV_HUP, NULL, 0, NULL)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#270: FILE: drivers/isdn/gigaset/i4l.c:226:
+	case ISDN_CMD_CLREAZ:               /* Do not signal incoming signals */ //FIXME
+		dbg(DEBUG_ANY, "ISDN_CMD_CLREAZ");

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#273: FILE: drivers/isdn/gigaset/i4l.c:229:
+	case ISDN_CMD_SETEAZ:               /* Signal incoming calls for given MSN */ //FIXME
+		dbg(DEBUG_ANY,

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#275: FILE: drivers/isdn/gigaset/i4l.c:231:
+		    cntrl->driver, cntrl->arg, cntrl->parm.num);
 		                                      ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: drivers/isdn/gigaset/i4l.c:235:
+		dbg(DEBUG_ANY, "ISDN_CMD_SETL2 (Channel: %ld, Proto: %lx)",
+		     cntrl->arg & 0xff, (cntrl->arg >> 8));

CHECK:SPACING: No space is necessary after a cast
#283: FILE: drivers/isdn/gigaset/i4l.c:239:
+			    (unsigned) cntrl->arg & 0xff);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#283: FILE: drivers/isdn/gigaset/i4l.c:239:
+			    (unsigned) cntrl->arg & 0xff);

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: drivers/isdn/gigaset/i4l.c:244:
+^I^I                       EV_PROTO_L2, NULL, cntrl->arg >> 8,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: drivers/isdn/gigaset/i4l.c:245:
+^I^I                       NULL)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: drivers/isdn/gigaset/i4l.c:255:
+		dbg(DEBUG_ANY, "ISDN_CMD_SETL3 (Channel: %ld, Proto: %lx)",
+		     cntrl->arg & 0xff, (cntrl->arg >> 8));

CHECK:SPACING: No space is necessary after a cast
#303: FILE: drivers/isdn/gigaset/i4l.c:259:
+			    (unsigned) cntrl->arg & 0xff);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#303: FILE: drivers/isdn/gigaset/i4l.c:259:
+			    (unsigned) cntrl->arg & 0xff);

CHECK:SPACING: No space is necessary after a cast
#319: FILE: drivers/isdn/gigaset/i4l.c:275:
+			err("invalid channel (%d)", (int) cntrl->arg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#352: FILE: drivers/isdn/gigaset/i4l.c:308:
+		err("unknown command %d from LL",
+		     cntrl->command);

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#366: FILE: drivers/isdn/gigaset/i4l.c:322:
+	cs->iif.statcallb(&command);
 	    ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#376: FILE: drivers/isdn/gigaset/i4l.c:332:
+	bcs->cs->iif.statcallb(&command);
 	         ^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#382: FILE: drivers/isdn/gigaset/i4l.c:338:
+	unsigned proto;

ERROR:SPACING: space prohibited before that close square bracket ']'
#411: FILE: drivers/isdn/gigaset/i4l.c:367:
+	length[AT_DIAL ] = 1 + strlen(sp->phone) + 1 + 1;

ERROR:SPACING: space prohibited before that close square bracket ']'
#413: FILE: drivers/isdn/gigaset/i4l.c:369:
+	length[AT_MSN  ] = l ? 6 + l + 1 + 1 : 0;

ERROR:SPACING: space prohibited before that close square bracket ']'
#414: FILE: drivers/isdn/gigaset/i4l.c:370:
+	length[AT_BC   ] = 5 + strlen(bc) + 1 + 1;

ERROR:SPACING: space prohibited before that close square bracket ']'
#416: FILE: drivers/isdn/gigaset/i4l.c:372:
+	length[AT_ISO  ] = 6 + 1 + 1 + 1; /* channel: 1 character */

ERROR:SPACING: space prohibited before that close square bracket ']'
#417: FILE: drivers/isdn/gigaset/i4l.c:373:
+	length[AT_TYPE ] = 6 + 1 + 1 + 1; /* call type: 1 character */

ERROR:SPACING: space prohibited before that close square bracket ']'
#418: FILE: drivers/isdn/gigaset/i4l.c:374:
+	length[AT_HLC  ] = 0;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#423: FILE: drivers/isdn/gigaset/i4l.c:379:
+		if (length[i] &&

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#434: FILE: drivers/isdn/gigaset/i4l.c:390:
+			 "D%s\r", sp->phone+2);
 			                   ^

ERROR:SPACING: space prohibited before that close square bracket ']'
#444: FILE: drivers/isdn/gigaset/i4l.c:400:
+	snprintf(bcs->commands[AT_BC   ], length[AT_BC   ], "^SBC=%s\r", bc);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#446: FILE: drivers/isdn/gigaset/i4l.c:402:
+	snprintf(bcs->commands[AT_ISO  ], length[AT_ISO  ], "^SISO=%u\r", (unsigned)bcs->channel + 1);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#446: FILE: drivers/isdn/gigaset/i4l.c:402:
+	snprintf(bcs->commands[AT_ISO  ], length[AT_ISO  ], "^SISO=%u\r", (unsigned)bcs->channel + 1);

ERROR:SPACING: space prohibited before that close square bracket ']'
#446: FILE: drivers/isdn/gigaset/i4l.c:402:
+	snprintf(bcs->commands[AT_ISO  ], length[AT_ISO  ], "^SISO=%u\r", (unsigned)bcs->channel + 1);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#453: FILE: drivers/isdn/gigaset/i4l.c:409:
+	unsigned proto;

ERROR:SPACING: space prohibited before that close square bracket ']'
#470: FILE: drivers/isdn/gigaset/i4l.c:426:
+	length[AT_DIAL ] = 0;

ERROR:SPACING: space prohibited before that close square bracket ']'
#471: FILE: drivers/isdn/gigaset/i4l.c:427:
+	length[AT_MSN  ] = 0;

ERROR:SPACING: space prohibited before that close square bracket ']'
#472: FILE: drivers/isdn/gigaset/i4l.c:428:
+	length[AT_BC   ] = 0;

ERROR:SPACING: space prohibited before that close square bracket ']'
#474: FILE: drivers/isdn/gigaset/i4l.c:430:
+	length[AT_ISO  ] = 6 + 1 + 1 + 1; /* channel: 1 character */

ERROR:SPACING: space prohibited before that close square bracket ']'
#475: FILE: drivers/isdn/gigaset/i4l.c:431:
+	length[AT_TYPE ] = 0;

ERROR:SPACING: space prohibited before that close square bracket ']'
#476: FILE: drivers/isdn/gigaset/i4l.c:432:
+	length[AT_HLC  ] = 0;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#481: FILE: drivers/isdn/gigaset/i4l.c:437:
+		if (length[i] &&

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#489: FILE: drivers/isdn/gigaset/i4l.c:445:
+	snprintf(bcs->commands[AT_ISO  ], length[AT_ISO  ], "^SISO=%u\r", (unsigned) bcs->channel + 1);

CHECK:SPACING: No space is necessary after a cast
#489: FILE: drivers/isdn/gigaset/i4l.c:445:
+	snprintf(bcs->commands[AT_ISO  ], length[AT_ISO  ], "^SISO=%u\r", (unsigned) bcs->channel + 1);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#489: FILE: drivers/isdn/gigaset/i4l.c:445:
+	snprintf(bcs->commands[AT_ISO  ], length[AT_ISO  ], "^SISO=%u\r", (unsigned) bcs->channel + 1);

ERROR:SPACING: space prohibited before that close square bracket ']'
#489: FILE: drivers/isdn/gigaset/i4l.c:445:
+	snprintf(bcs->commands[AT_ISO  ], length[AT_ISO  ], "^SISO=%u\r", (unsigned) bcs->channel + 1);

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#502: FILE: drivers/isdn/gigaset/i4l.c:458:
+	response.parm.setup.si1 = 0;	/* default: unknown */
 	         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#503: FILE: drivers/isdn/gigaset/i4l.c:459:
+	response.parm.setup.si2 = 0;
 	         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#504: FILE: drivers/isdn/gigaset/i4l.c:460:
+	response.parm.setup.screen = 0;	//FIXME how to set these?
 	         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#505: FILE: drivers/isdn/gigaset/i4l.c:461:
+	response.parm.setup.plan = 0;
 	         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#508: FILE: drivers/isdn/gigaset/i4l.c:464:
+		response.parm.setup.si1 = 1;
 		         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#511: FILE: drivers/isdn/gigaset/i4l.c:467:
+		response.parm.setup.si1 = 7;
 		         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#514: FILE: drivers/isdn/gigaset/i4l.c:470:
+		response.parm.setup.si1 = 1;
 		         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#517: FILE: drivers/isdn/gigaset/i4l.c:473:
+		response.parm.setup.si1 = 1;
 		         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#518: FILE: drivers/isdn/gigaset/i4l.c:474:
+		response.parm.setup.si2 = 2;
 		         ^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#524: FILE: drivers/isdn/gigaset/i4l.c:480:
+	if (at_state->str_var[STR_NMBR]) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#525: FILE: drivers/isdn/gigaset/i4l.c:481:
+		strncpy(response.parm.setup.phone, at_state->str_var[STR_NMBR],
 		                 ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#526: FILE: drivers/isdn/gigaset/i4l.c:482:
+			sizeof response.parm.setup.phone - 1);
 			                ^^^^

WARNING:SIZEOF_PARENTHESIS: sizeof response.parm.setup.phone should be sizeof(response.parm.setup.phone)
#526: FILE: drivers/isdn/gigaset/i4l.c:482:
+			sizeof response.parm.setup.phone - 1);

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#527: FILE: drivers/isdn/gigaset/i4l.c:483:
+		response.parm.setup.phone[sizeof response.parm.setup.phone - 1] = 0;
 		         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#527: FILE: drivers/isdn/gigaset/i4l.c:483:
+		response.parm.setup.phone[sizeof response.parm.setup.phone - 1] = 0;
 		                                          ^^^^

WARNING:SIZEOF_PARENTHESIS: sizeof response.parm.setup.phone should be sizeof(response.parm.setup.phone)
#527: FILE: drivers/isdn/gigaset/i4l.c:483:
+		response.parm.setup.phone[sizeof response.parm.setup.phone - 1] = 0;

CHECK:BRACES: Unbalanced braces around else statement
#528: FILE: drivers/isdn/gigaset/i4l.c:484:
+	} else

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#529: FILE: drivers/isdn/gigaset/i4l.c:485:
+		response.parm.setup.phone[0] = 0;
 		         ^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#530: FILE: drivers/isdn/gigaset/i4l.c:486:
+	if (at_state->str_var[STR_ZCPN]) {
[...]
+	} else
[...]

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#531: FILE: drivers/isdn/gigaset/i4l.c:487:
+		strncpy(response.parm.setup.eazmsn, at_state->str_var[STR_ZCPN],
 		                 ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#532: FILE: drivers/isdn/gigaset/i4l.c:488:
+			sizeof response.parm.setup.eazmsn - 1);
 			                ^^^^

WARNING:SIZEOF_PARENTHESIS: sizeof response.parm.setup.eazmsn should be sizeof(response.parm.setup.eazmsn)
#532: FILE: drivers/isdn/gigaset/i4l.c:488:
+			sizeof response.parm.setup.eazmsn - 1);

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#533: FILE: drivers/isdn/gigaset/i4l.c:489:
+		response.parm.setup.eazmsn[sizeof response.parm.setup.eazmsn - 1] = 0;
 		         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#533: FILE: drivers/isdn/gigaset/i4l.c:489:
+		response.parm.setup.eazmsn[sizeof response.parm.setup.eazmsn - 1] = 0;
 		                                           ^^^^

WARNING:SIZEOF_PARENTHESIS: sizeof response.parm.setup.eazmsn should be sizeof(response.parm.setup.eazmsn)
#533: FILE: drivers/isdn/gigaset/i4l.c:489:
+		response.parm.setup.eazmsn[sizeof response.parm.setup.eazmsn - 1] = 0;

CHECK:BRACES: Unbalanced braces around else statement
#534: FILE: drivers/isdn/gigaset/i4l.c:490:
+	} else

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#535: FILE: drivers/isdn/gigaset/i4l.c:491:
+		response.parm.setup.eazmsn[0] = 0;
 		         ^^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#548: FILE: drivers/isdn/gigaset/i4l.c:504:
+	retval = cs->iif.statcallb(&response);
 	             ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#578: FILE: drivers/isdn/gigaset/i4l.c:534:
+	isdn_if *iif = &cs->iif;
 	         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#578: FILE: drivers/isdn/gigaset/i4l.c:534:
+	isdn_if *iif = &cs->iif;
 	                    ^^^

WARNING:SIZEOF_PARENTHESIS: sizeof iif->id should be sizeof(iif->id)
#584: FILE: drivers/isdn/gigaset/i4l.c:540:
+	if (snprintf(iif->id, sizeof iif->id, "%s_%u", isdnid, cs->minor_index)

WARNING:SIZEOF_PARENTHESIS: sizeof iif->id should be sizeof(iif->id)
#585: FILE: drivers/isdn/gigaset/i4l.c:541:
+	    >= sizeof iif->id)

WARNING:LONG_LINE_COMMENT: line length of 123 exceeds 100 columns
#589: FILE: drivers/isdn/gigaset/i4l.c:545:
+	iif->channels = cs->channels;                        /* I am supporting just one channel *//* I was supporting...*/

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#606: FILE: drivers/isdn/gigaset/i4l.c:562:
+	if (!register_isdn(iif))
 	                   ^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000105594.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 62 warnings, 24 checks, 567 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000105594.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
