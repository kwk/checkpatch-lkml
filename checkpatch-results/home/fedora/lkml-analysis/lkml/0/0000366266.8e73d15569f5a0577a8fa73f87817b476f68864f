WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
diff -urN -X dontdiff linux-2.5.70-mm2/arch/ia64/ia32/binfmt_elf32.c linux-2.5.70-mm2.install_new_page/arch/ia64/ia32/binfmt_elf32.c

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#64: FILE: arch/ia64/ia32/binfmt_elf32.c:60:
+ia32_install_shared_page (struct mm_struct *mm, struct vm_area_struct *vma, unsigned long address, int write_access, pmd_t *pmd)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#64: FILE: arch/ia64/ia32/binfmt_elf32.c:60:
+ia32_install_shared_page (struct mm_struct *mm, struct vm_area_struct *vma, unsigned long address, int write_access, pmd_t *pmd)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#84: FILE: arch/sparc64/mm/hugetlbpage.c:637:
+hugetlb_nopage(struct mm_struct * mm, struct vm_area_struct *vma, unsigned long address, int write_access, pmd_t * pmd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#84: FILE: arch/sparc64/mm/hugetlbpage.c:637:
+hugetlb_nopage(struct mm_struct * mm, struct vm_area_struct *vma, unsigned long address, int write_access, pmd_t * pmd)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#84: FILE: arch/sparc64/mm/hugetlbpage.c:637:
+hugetlb_nopage(struct mm_struct * mm, struct vm_area_struct *vma, unsigned long address, int write_access, pmd_t * pmd)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#113: FILE: drivers/char/agp/alpha-agp.c:26:
+	if (pa == (unsigned long)-EINVAL) return VM_FAULT_SIGBUS; /* no translation */

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#144: FILE: drivers/char/drm/drmP.h:623:
+extern int DRM(vm_nopage)(struct mm_struct *mm, struct vm_area_struct *vma,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#146: FILE: drivers/char/drm/drmP.h:625:
+extern int DRM(vm_shm_nopage)(struct mm_struct *mm, struct vm_area_struct *vma,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#149: FILE: drivers/char/drm/drmP.h:628:
+extern int DRM(vm_dma_nopage)(struct mm_struct *mm, struct vm_area_struct *vma,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#152: FILE: drivers/char/drm/drmP.h:631:
+extern int DRM(vm_sg_nopage)(struct mm_struct *mm, struct vm_area_struct *vma,

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#202: FILE: drivers/char/drm/drm_vm.h:134:
+	if (address > vma->vm_end) return VM_FAULT_SIGBUS; /* Disallow mremap */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#203: FILE: drivers/char/drm/drm_vm.h:135:
+^Iif (!map)    ^I^I   return VM_FAULT_OOM;  /* Nothing allocated */$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#203: FILE: drivers/char/drm/drm_vm.h:135:
+	if (!map)    		   return VM_FAULT_OOM;  /* Nothing allocated */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#239: FILE: drivers/char/drm/drm_vm.h:235:
+	if (!dma)		   return VM_FAULT_SIGBUS; /* Error */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#240: FILE: drivers/char/drm/drm_vm.h:236:
+	if (address > vma->vm_end) return VM_FAULT_SIGBUS; /* Disallow mremap */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#241: FILE: drivers/char/drm/drm_vm.h:237:
+	if (!dma->pagelist)	   return VM_FAULT_OOM ; /* Nothing allocated */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#269: FILE: drivers/char/drm/drm_vm.h:263:
+	if (!entry)                return VM_FAULT_SIGBUS; /* Error */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#270: FILE: drivers/char/drm/drm_vm.h:264:
+	if (address > vma->vm_end) return VM_FAULT_SIGBUS; /* Disallow mremap */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#271: FILE: drivers/char/drm/drm_vm.h:265:
+	if (!entry->pagelist)      return VM_FAULT_OOM ; /* Nothing allocated */

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#294: FILE: drivers/ieee1394/dma.c:188:
+dma_region_pagefault(struct mm_struct *mm, struct vm_area_struct *area, unsigned long address, int write_access, pmd_t *pmd)

CHECK:SPACING: No space is necessary after a cast
#318: FILE: drivers/ieee1394/dma.c:205:
+	page = vmalloc_to_page((void*) kernel_virt_addr);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#318: FILE: drivers/ieee1394/dma.c:205:
+	page = vmalloc_to_page((void*) kernel_virt_addr);

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#365: FILE: drivers/scsi/sg.c:1125:
+sg_vma_nopage(struct mm_struct *mm, struct vm_area_struct *vma, unsigned long addr, int write_access, pmd_t *pmd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#405: FILE: drivers/sgi/char/graphics.c:215:
+sgi_graphics_nopage (struct mm_struct *mm, struct vm_area_struct *vma,

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#450: FILE: include/linux/mm.h:145:
+	int (*nopage)(struct mm_struct * mm, struct vm_area_struct * area, unsigned long address, int write_access, pmd_t *pmd);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#450: FILE: include/linux/mm.h:145:
+	int (*nopage)(struct mm_struct * mm, struct vm_area_struct * area, unsigned long address, int write_access, pmd_t *pmd);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#450: FILE: include/linux/mm.h:145:
+	int (*nopage)(struct mm_struct * mm, struct vm_area_struct * area, unsigned long address, int write_access, pmd_t *pmd);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#473: FILE: include/linux/mm.h:399:
+int shmem_nopage(struct mm_struct * mm, struct vm_area_struct * vma,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#473: FILE: include/linux/mm.h:399:
+int shmem_nopage(struct mm_struct * mm, struct vm_area_struct * vma,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#474: FILE: include/linux/mm.h:400:
+		 unsigned long address, int write_access, pmd_t * pmd);

WARNING:LONG_LINE: line length of 155 exceeds 100 columns
#482: FILE: include/linux/mm.h:418:
+extern int install_new_page(struct mm_struct *mm, struct vm_area_struct *vma, unsigned long address, int write_access, pmd_t *pmd, struct page * new_page);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#482: FILE: include/linux/mm.h:418:
+extern int install_new_page(struct mm_struct *mm, struct vm_area_struct *vma, unsigned long address, int write_access, pmd_t *pmd, struct page * new_page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#482: FILE: include/linux/mm.h:418:
+extern int install_new_page(struct mm_struct *mm, struct vm_area_struct *vma, unsigned long address, int write_access, pmd_t *pmd, struct page * new_page);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#491: FILE: include/linux/mm.h:557:
+int filemap_nopage(struct mm_struct *, struct vm_area_struct *, unsigned long, int, pmd_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#491: FILE: include/linux/mm.h:557:
+int filemap_nopage(struct mm_struct *, struct vm_area_struct *, unsigned long, int, pmd_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#491: FILE: include/linux/mm.h:557:
+int filemap_nopage(struct mm_struct *, struct vm_area_struct *, unsigned long, int, pmd_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#491: FILE: include/linux/mm.h:557:
+int filemap_nopage(struct mm_struct *, struct vm_area_struct *, unsigned long, int, pmd_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pmd_t *' should also have an identifier name
#491: FILE: include/linux/mm.h:557:
+int filemap_nopage(struct mm_struct *, struct vm_area_struct *, unsigned long, int, pmd_t *);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#514: FILE: mm/filemap.c:1016:
+int filemap_nopage(struct mm_struct * mm, struct vm_area_struct * area, unsigned long address, int write_access, pmd_t * pmd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#514: FILE: mm/filemap.c:1016:
+int filemap_nopage(struct mm_struct * mm, struct vm_area_struct * area, unsigned long address, int write_access, pmd_t * pmd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#514: FILE: mm/filemap.c:1016:
+int filemap_nopage(struct mm_struct * mm, struct vm_area_struct * area, unsigned long address, int write_access, pmd_t * pmd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#514: FILE: mm/filemap.c:1016:
+int filemap_nopage(struct mm_struct * mm, struct vm_area_struct * area, unsigned long address, int write_access, pmd_t * pmd)

WARNING:LONG_LINE: line length of 143 exceeds 100 columns
#610: FILE: mm/memory.c:1399:
+install_new_page(struct mm_struct *mm, struct vm_area_struct *vma, unsigned long address, int write_access, pmd_t *pmd, struct page * new_page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#610: FILE: mm/memory.c:1399:
+install_new_page(struct mm_struct *mm, struct vm_area_struct *vma, unsigned long address, int write_access, pmd_t *pmd, struct page * new_page)

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#626: FILE: mm/shmem.c:939:
+int shmem_nopage(struct mm_struct *mm, struct vm_area_struct *vma, unsigned long address, int write_access, pmd_t *pmd)

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#635: FILE: mm/shmem.c:952:
+		return (error == -ENOMEM)? VM_FAULT_OOM: VM_FAULT_SIGBUS;
 		                         ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#635: FILE: mm/shmem.c:952:
+		return (error == -ENOMEM)? VM_FAULT_OOM: VM_FAULT_SIGBUS;
 		                                       ^

WARNING:LONG_LINE: line length of 141 exceeds 100 columns
#663: FILE: sound/core/pcm_native.c:2701:
+static int snd_pcm_mmap_status_nopage(struct mm_struct *mm, struct vm_area_struct *area, unsigned long address, int write_access, pmd_t *pmd)

WARNING:LONG_LINE: line length of 142 exceeds 100 columns
#681: FILE: sound/core/pcm_native.c:2755:
+static int snd_pcm_mmap_control_nopage(struct mm_struct *mm, struct vm_area_struct *area, unsigned long address, int write_access, pmd_t *pmd)

WARNING:LONG_LINE: line length of 139 exceeds 100 columns
#699: FILE: sound/core/pcm_native.c:2821:
+static int snd_pcm_mmap_data_nopage(struct mm_struct *mm, struct vm_area_struct *area, unsigned long address, int write_access, pmd_t *pmd)

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#720: FILE: sound/oss/emu10k1/audio.c:973:
+static int emu10k1_mm_nopage (struct mm_struct * mm, struct vm_area_struct * vma, unsigned long address, int write_access, pmd_t * pmd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#720: FILE: sound/oss/emu10k1/audio.c:973:
+static int emu10k1_mm_nopage (struct mm_struct * mm, struct vm_area_struct * vma, unsigned long address, int write_access, pmd_t * pmd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#720: FILE: sound/oss/emu10k1/audio.c:973:
+static int emu10k1_mm_nopage (struct mm_struct * mm, struct vm_area_struct * vma, unsigned long address, int write_access, pmd_t * pmd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#720: FILE: sound/oss/emu10k1/audio.c:973:
+static int emu10k1_mm_nopage (struct mm_struct * mm, struct vm_area_struct * vma, unsigned long address, int write_access, pmd_t * pmd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#720: FILE: sound/oss/emu10k1/audio.c:973:
+static int emu10k1_mm_nopage (struct mm_struct * mm, struct vm_area_struct * vma, unsigned long address, int write_access, pmd_t * pmd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#753: FILE: sound/oss/via82cxxx_audio.c:1849:
+static int via_mm_nopage (struct mm_struct *mm, struct vm_area_struct * vma,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#753: FILE: sound/oss/via82cxxx_audio.c:1849:
+static int via_mm_nopage (struct mm_struct *mm, struct vm_area_struct * vma,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#764: FILE: sound/oss/via82cxxx_audio.c:1866:
+		DPRINTK ("EXIT, returning VM_FAULT_SIGBUS\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#770: FILE: sound/oss/via82cxxx_audio.c:1870:
+		DPRINTK ("EXIT, returning VM_FAULT_OOM\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#780: FILE: sound/oss/via82cxxx_audio.c:1898:
+	DPRINTK ("EXIT, installing page %p for cpuaddr %lXh\n",

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000366266.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 28 errors, 27 warnings, 6 checks, 633 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000366266.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
