Use of uninitialized value $typo_fix in ucfirst at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3363.
WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
# ./mtr -d /dev/hdc -f full

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# ./mtr -d /dev/hdc -p

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
# ./mtr -d /dev/hdc -s

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
# ./mtr -d /dev/hdc -f restart

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#85: 
# mkudffs --media-type=cdrw -b 2048 /dev/hdc

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#120: 
diff -ur -X /usr/src/exclude /opt/kernel/linux-2.4.19-pre4/drivers/cdrom/cdrom.c linux/drivers/cdrom/cdrom.c

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#120: 
diff -ur -X /usr/src/exclude /opt/kernel/linux-2.4.19-pre4/drivers/cdrom/cdrom.c linux/drivers/cdrom/cdrom.c

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#121: 
--- /opt/kernel/linux-2.4.19-pre4/drivers/cdrom/cdrom.c	Fri Nov 16 19:14:08 2001

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cdi"
#222: FILE: drivers/cdrom/cdrom.c:449:
+	if (cdi == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#253: FILE: drivers/cdrom/cdrom.c:484:
+	struct event_header *eh = (struct event_header *) buffer;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#278: FILE: drivers/cdrom/cdrom.c:509:
+	printk("cdrom: %sstarting format\n", cont ? "Re" : "");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#308: FILE: drivers/cdrom/cdrom.c:539:
+		printk("cdrom: bgformat failed\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#352: FILE: drivers/cdrom/cdrom.c:583:
+		printk("cdrom: issuing MRW bgformat suspend\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#411: FILE: drivers/cdrom/cdrom.c:642:
+	printk("cdrom open: mrw_status '%s'\n", mrw_format_status[di.mrw_status]);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#439: FILE: drivers/cdrom/cdrom.c:670:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#458: FILE: drivers/cdrom/cdrom.c:698:
+		printk("cdrom: %s opening for WRITE\n", current->comm);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#496: FILE: drivers/cdrom/cdrom.c:807:
+	if (CDROM_CAN(CDC_LOCK) && (cdi->options & CDO_LOCK)) {
 			cdo->lock_door(cdi, 1);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#597: FILE: drivers/cdrom/cdrom.c:2644:
+EXPORT_SYMBOL(cdrom_get_media_event);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#606: FILE: drivers/cdrom/cdrom.c:2741:
+	pos += sprintf(info+pos, "\nCan read MRW:");
 	                   ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#607: FILE: drivers/cdrom/cdrom.c:2742:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
+	    pos += sprintf(info+pos, "\t\t%d", CDROM_CAN(CDC_MRW) != 0);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#607: FILE: drivers/cdrom/cdrom.c:2742:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#607: FILE: drivers/cdrom/cdrom.c:2742:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	                    ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#607: FILE: drivers/cdrom/cdrom.c:2742:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	                        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#607: FILE: drivers/cdrom/cdrom.c:2742:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#607: FILE: drivers/cdrom/cdrom.c:2742:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	                                  ^

CHECK:CAMELCASE: Avoid CamelCase: <topCdromPtr>
#607: FILE: drivers/cdrom/cdrom.c:2742:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cdi"
#607: FILE: drivers/cdrom/cdrom.c:2742:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#608: FILE: drivers/cdrom/cdrom.c:2743:
+	    pos += sprintf(info+pos, "\t\t%d", CDROM_CAN(CDC_MRW) != 0);
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#610: FILE: drivers/cdrom/cdrom.c:2745:
+	pos += sprintf(info+pos, "\nCan write MRW:");
 	                   ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#611: FILE: drivers/cdrom/cdrom.c:2746:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
+	    pos += sprintf(info+pos, "\t\t%d", CDROM_CAN(CDC_MRW_W) != 0);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#611: FILE: drivers/cdrom/cdrom.c:2746:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#611: FILE: drivers/cdrom/cdrom.c:2746:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	                    ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#611: FILE: drivers/cdrom/cdrom.c:2746:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	                        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#611: FILE: drivers/cdrom/cdrom.c:2746:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#611: FILE: drivers/cdrom/cdrom.c:2746:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	                                  ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cdi"
#611: FILE: drivers/cdrom/cdrom.c:2746:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#612: FILE: drivers/cdrom/cdrom.c:2747:
+	    pos += sprintf(info+pos, "\t\t%d", CDROM_CAN(CDC_MRW_W) != 0);
 	                       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#645: FILE: drivers/ide/ide-cd.c:707:
+				printk("ide-cd: cmd 0x%x timed out\n",pc->c[0]);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#645: FILE: drivers/ide/ide-cd.c:707:
+				printk("ide-cd: cmd 0x%x timed out\n",pc->c[0]);
 				                                     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#815: FILE: drivers/ide/ide-cd.c:2213:
+		printk("%02x.%02x.%02x\n", pc.sense->sense_key, pc.sense->asc, pc.sense->ascq);

CHECK:SPACING: No space is necessary after a cast
#927: FILE: drivers/ide/ide-cd.c:2609:
+	cdi->handle = (ide_drive_t *) drive;

CHECK:SPACING: No space is necessary after a cast
#935: FILE: drivers/ide/ide-cd.c:2617:
+	fh = (struct feature_header *) buffer;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#940: FILE: drivers/ide/ide-cd.c:2622:
+			printk("ide-cd: MRW feature desc size wrong (%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#941: FILE: drivers/ide/ide-cd.c:2623:
+			printk("ide-cd: MRW feature desc size wrong (%d)\n",
+				be32_to_cpu(fh->data_len));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#961: FILE: drivers/ide/ide-cd.c:2676:
+^Iif (CDROM_CONFIG_FLAGS (drive)->nec260 || $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#961: FILE: drivers/ide/ide-cd.c:2676:
+	if (CDROM_CONFIG_FLAGS (drive)->nec260 || 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#962: FILE: drivers/ide/ide-cd.c:2677:
+	    !strcmp(drive->id->model,"STINGRAY 8422 IDE 8X CD-ROM 7-27-95")) {
 	                            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1001: FILE: drivers/ide/ide-cd.c:2774:
+		printk(" CD-MR%s",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1002: FILE: drivers/ide/ide-cd.c:2775:
+		printk(" CD-MR%s",
+		CDROM_CONFIG_FLAGS(drive)->mrw_w ? "W" : "");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1190: FILE: include/linux/cdrom.h:821:
+extern int exit_cdrom(struct cdrom_device_info *cdi);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1201: FILE: include/linux/cdrom.h:859:
+typedef struct discinformation {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1210: FILE: include/linux/cdrom.h:882:
+        __u8 reserved2^I^I^I: 2;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1210: FILE: include/linux/cdrom.h:882:
+        __u8 reserved2^I^I^I: 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1217: FILE: include/linux/cdrom.h:888:
+        __u8 reserved2^I^I^I: 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1217: FILE: include/linux/cdrom.h:888:
+        __u8 reserved2^I^I^I: 2;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1226: FILE: include/linux/cdrom.h:905:
+typedef struct trackinformation {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1286: FILE: include/linux/cdrom.h:1133:
+extern int cdrom_get_disc_info(kdev_t dev, disc_information *di);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1287: FILE: include/linux/cdrom.h:1134:
+extern int cdrom_get_track_info(kdev_t dev, __u16 track, __u8 type,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1289: FILE: include/linux/cdrom.h:1136:
+extern int cdrom_get_media_event(struct cdrom_device_info *cdi, struct media_event_desc *med);

WARNING:TYPO_SPELLING: 'MSDOS' may be misspelled - perhaps ''?
#1308: FILE: include/linux/ide.h:270:
+ * this limit (possible with 512 byte blocksizes, eg. MSDOS f/s), so handling
                                                       ^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000468366.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 28 warnings, 17 checks, 1133 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000468366.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
