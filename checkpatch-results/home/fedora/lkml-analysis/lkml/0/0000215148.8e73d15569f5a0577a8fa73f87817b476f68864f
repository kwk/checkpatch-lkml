WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
UserReclaimable - These are userspace pages that are easily reclaimable. Right

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#76: FILE: fs/buffer.c:1138:
+	page = find_or_create_page(inode->i_mapping, index,
+					GFP_NOFS | __GFP_USERRCLM);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#86: FILE: fs/buffer.c:3002:
+						   gfp_flags|__GFP_KERNRCLM);
 						            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: fs/dcache.c:719:
+^I^I^I  ^I  GFP_KERNEL|__GFP_KERNRCLM);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#99: FILE: fs/dcache.c:719:
+^I^I^I  ^I  GFP_KERNEL|__GFP_KERNRCLM);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: fs/dcache.c:719:
+	dentry = kmem_cache_alloc(dentry_cache,
+			  	  GFP_KERNEL|__GFP_KERNRCLM);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#99: FILE: fs/dcache.c:719:
+			  	  GFP_KERNEL|__GFP_KERNRCLM);
 			  	            ^

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#111: FILE: fs/ext2/super.c:140:
+	ei = (struct ext2_inode_info *)kmem_cache_alloc(ext2_inode_cachep, SLAB_KERNEL|__GFP_KERNRCLM);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#111: FILE: fs/ext2/super.c:140:
+	ei = (struct ext2_inode_info *)kmem_cache_alloc(ext2_inode_cachep, SLAB_KERNEL|__GFP_KERNRCLM);
 	                                                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#123: FILE: fs/ext3/super.c:437:
+	ei = kmem_cache_alloc(ext3_inode_cachep, SLAB_NOFS|__GFP_KERNRCLM);
 	                                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#135: FILE: fs/ntfs/inode.c:321:
+			SLAB_NOFS|__GFP_KERNRCLM);
 			         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#145: FILE: fs/ntfs/inode.c:347:
+					    SLAB_NOFS|__GFP_KERNRCLM);
 					             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#167: FILE: include/linux/gfp.h:50:
+			__GFP_NOFAIL|__GFP_NORETRY|__GFP_NO_GROW|__GFP_COMP| \
 			            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#167: FILE: include/linux/gfp.h:50:
+			__GFP_NOFAIL|__GFP_NORETRY|__GFP_NO_GROW|__GFP_COMP| \
 			                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#167: FILE: include/linux/gfp.h:50:
+			__GFP_NOFAIL|__GFP_NORETRY|__GFP_NO_GROW|__GFP_COMP| \
 			                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#167: FILE: include/linux/gfp.h:50:
+			__GFP_NOFAIL|__GFP_NORETRY|__GFP_NO_GROW|__GFP_COMP| \
 			                                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#168: FILE: include/linux/gfp.h:51:
+			__GFP_USERRCLM|__GFP_KERNRCLM)
 			              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: include/linux/mmzone.h:139:
+  ^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#201: FILE: include/linux/mmzone.h:139:
+  ^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: include/linux/mmzone.h:139:
+  ^I/*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: include/linux/mmzone.h:146:
+  ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#208: FILE: include/linux/mmzone.h:146:
+  ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: include/linux/mmzone.h:147:
+ ^Istruct free_area^Ifree_area_lists[ALLOC_TYPES][MAX_ORDER];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#209: FILE: include/linux/mmzone.h:147:
+ ^Istruct free_area^Ifree_area_lists[ALLOC_TYPES][MAX_ORDER];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: include/linux/mmzone.h:147:
+ ^Istruct free_area^Ifree_area_lists[ALLOC_TYPES][MAX_ORDER];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: include/linux/mmzone.h:155:
+ ^Istruct free_area^Ifree_area_global;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#217: FILE: include/linux/mmzone.h:155:
+ ^Istruct free_area^Ifree_area_global;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: include/linux/mmzone.h:155:
+ ^Istruct free_area^Ifree_area_global;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: include/linux/mmzone.h:157:
+ ^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#219: FILE: include/linux/mmzone.h:157:
+ ^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: include/linux/mmzone.h:157:
+ ^I/*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: include/linux/mmzone.h:158:
+ ^I * This map tracks what each 2^MAX_ORDER sized block has been used for.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#220: FILE: include/linux/mmzone.h:158:
+ ^I * This map tracks what each 2^MAX_ORDER sized block has been used for.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: include/linux/mmzone.h:166:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#228: FILE: include/linux/mmzone.h:166:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: include/linux/mmzone.h:168:
+ ^Iunsigned long^I^I*free_area_usemap;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#230: FILE: include/linux/mmzone.h:168:
+ ^Iunsigned long^I^I*free_area_usemap;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: include/linux/mmzone.h:168:
+ ^Iunsigned long^I^I*free_area_usemap;$

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#243: FILE: mm/page_alloc.c:51:
+int global_steal=0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#243: FILE: mm/page_alloc.c:51:
+int global_steal=0;
                 ^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#244: FILE: mm/page_alloc.c:52:
+int global_refill=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#244: FILE: mm/page_alloc.c:52:
+int global_refill=0;
                  ^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#245: FILE: mm/page_alloc.c:53:
+int kernnorclm_count=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#245: FILE: mm/page_alloc.c:53:
+int kernnorclm_count=0;
                     ^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#246: FILE: mm/page_alloc.c:54:
+int kernrclm_count=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#246: FILE: mm/page_alloc.c:54:
+int kernrclm_count=0;
                   ^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#247: FILE: mm/page_alloc.c:55:
+int userrclm_count=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#247: FILE: mm/page_alloc.c:55:
+int userrclm_count=0;
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: mm/page_alloc.c:67:
+       { ALLOC_KERNNORCLM, ALLOC_KERNRCLM,   ALLOC_USERRCLM },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: mm/page_alloc.c:68:
+       { ALLOC_KERNRCLM,   ALLOC_KERNNORCLM, ALLOC_USERRCLM },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: mm/page_alloc.c:69:
+       { ALLOC_USERRCLM,   ALLOC_KERNNORCLM, ALLOC_KERNRCLM }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#264: FILE: mm/page_alloc.c:72:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#284: FILE: mm/page_alloc.c:132:
+static int get_pageblock_type(struct page *page) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#290: FILE: mm/page_alloc.c:138:
+	if (test_bit(bitidx,zone->free_area_usemap)) return ALLOC_KERNRCLM;
 	                   ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#290: FILE: mm/page_alloc.c:138:
+	if (test_bit(bitidx,zone->free_area_usemap)) return ALLOC_KERNRCLM;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#293: FILE: mm/page_alloc.c:141:
+	if (test_bit(bitidx+1, zone->free_area_usemap)) return ALLOC_USERRCLM;
 	                   ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#293: FILE: mm/page_alloc.c:141:
+	if (test_bit(bitidx+1, zone->free_area_usemap)) return ALLOC_USERRCLM;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#298: FILE: mm/page_alloc.c:146:
+static void set_pageblock_type(struct page *page, int type) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#303: FILE: mm/page_alloc.c:151:
+	int bitidx = pageidx * 2;
+	bit1 = bit2 = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#303: FILE: mm/page_alloc.c:151:
+	bit1 = bit2 = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#307: FILE: mm/page_alloc.c:155:
+		clear_bit(bitidx+1, zone->free_area_usemap);
 		                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#313: FILE: mm/page_alloc.c:161:
+		set_bit(bitidx+1, zone->free_area_usemap);
 		              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#318: FILE: mm/page_alloc.c:166:
+	clear_bit(bitidx+1, zone->free_area_usemap);
 	                ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#320: FILE: mm/page_alloc.c:168:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#364: FILE: mm/page_alloc.c:337:
+	if (order >= MAX_ORDER-1) {
 	                      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around zone->free_area_global
#365: FILE: mm/page_alloc.c:338:
+		area = &(zone->free_area_global);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#398: FILE: mm/page_alloc.c:510:
+	int global_split=0;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#402: FILE: mm/page_alloc.c:514:
+	int retry_count=0;
 	               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#403: FILE: mm/page_alloc.c:515:
+	int retry_count=0;
+	if (flags & __GFP_USERRCLM) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#407: FILE: mm/page_alloc.c:519:
+	}
+	else if (flags & __GFP_KERNRCLM) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#432: FILE: mm/page_alloc.c:547:
+	if (!global_split && !list_empty(&(zone->free_area_global.free_list))){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around zone->free_area_global.free_list
#432: FILE: mm/page_alloc.c:547:
+	if (!global_split && !list_empty(&(zone->free_area_global.free_list))){

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: mm/page_alloc.c:556:
+		list_add(&page->lru,
+			&(zone->free_area_lists[alloctype][MAX_ORDER-1].free_list));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#441: FILE: mm/page_alloc.c:556:
+			&(zone->free_area_lists[alloctype][MAX_ORDER-1].free_list));
 			                                            ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around zone->free_area_lists[alloctype][MAX_ORDER-1].free_list
#441: FILE: mm/page_alloc.c:556:
+			&(zone->free_area_lists[alloctype][MAX_ORDER-1].free_list));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#443: FILE: mm/page_alloc.c:558:
+		global_split=1;
 		            ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#457: FILE: mm/page_alloc.c:572:
+	if (retry_count != ALLOC_TYPES) goto retry;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#497: FILE: mm/page_alloc.c:639:
+	for (type=0; type < ALLOC_TYPES; type++) {
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#508: FILE: mm/page_alloc.c:647:
+				for (i=0; i < (1<<order); i++)
 				      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#508: FILE: mm/page_alloc.c:647:
+				for (i=0; i < (1<<order); i++)
 				                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#509: FILE: mm/page_alloc.c:648:
+					SetPageNosaveFree(pfn_to_page(start_pfn+i));
 					                                       ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#546: FILE: mm/page_alloc.c:809:
+		free_pages -= (

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#568: FILE: mm/page_alloc.c:1361:
+			for (type=0; type < ALLOC_TYPES; type++) {
 			         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#582: FILE: mm/page_alloc.c:1662:
+ ^Iint type;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#582: FILE: mm/page_alloc.c:1662:
+ ^Iint type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: mm/page_alloc.c:1662:
+ ^Iint type;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#583: FILE: mm/page_alloc.c:1663:
+ ^Istruct free_area *area;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#583: FILE: mm/page_alloc.c:1663:
+ ^Istruct free_area *area;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: mm/page_alloc.c:1663:
+ ^Istruct free_area *area;$

WARNING:TYPO_SPELLING: 'Initialse' may be misspelled - perhaps 'Initialise'?
#585: FILE: mm/page_alloc.c:1665:
+ 	/* Initialse the three size ordered lists of free_areas */
  	   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#585: FILE: mm/page_alloc.c:1665:
+ ^I/* Initialse the three size ordered lists of free_areas */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#585: FILE: mm/page_alloc.c:1665:
+ ^I/* Initialse the three size ordered lists of free_areas */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: mm/page_alloc.c:1665:
+ ^I/* Initialse the three size ordered lists of free_areas */$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#586: FILE: mm/page_alloc.c:1666:
+	for (type=0; type < ALLOC_TYPES; type++) {
 	         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#595: FILE: mm/page_alloc.c:1675:
+ ^I/* Initialise the global pool of 2^size pages */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#595: FILE: mm/page_alloc.c:1675:
+ ^I/* Initialise the global pool of 2^size pages */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: mm/page_alloc.c:1675:
+ ^I/* Initialise the global pool of 2^size pages */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#596: FILE: mm/page_alloc.c:1676:
+ ^IINIT_LIST_HEAD(&zone->free_area_global.free_list);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#596: FILE: mm/page_alloc.c:1676:
+ ^IINIT_LIST_HEAD(&zone->free_area_global.free_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: mm/page_alloc.c:1676:
+ ^IINIT_LIST_HEAD(&zone->free_area_global.free_list);$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#597: FILE: mm/page_alloc.c:1677:
+	zone->free_area_global.nr_free=0;
 	                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#625: FILE: mm/page_alloc.c:1809:
+		memset((unsigned long *)zone->free_area_usemap,
+				ALLOC_KERNNORCLM, usemapsize);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#627: FILE: mm/page_alloc.c:1811:
+		printk(KERN_DEBUG "  %s zone: %lu pages, %lu real pages, usemap size:%lu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#628: FILE: mm/page_alloc.c:1812:
+		printk(KERN_DEBUG "  %s zone: %lu pages, %lu real pages, usemap size:%lu\n",
+				zone_names[j], size, realsize, usemapsize);

ERROR:CODE_INDENT: code indent should use tabs where possible
#651: FILE: mm/page_alloc.c:1894:
+ ^I/* Show global fragmentation statistics */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#651: FILE: mm/page_alloc.c:1894:
+ ^I/* Show global fragmentation statistics */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: mm/page_alloc.c:1894:
+ ^I/* Show global fragmentation statistics */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#652: FILE: mm/page_alloc.c:1895:
+  ^Ifor (zone = node_zones; zone - node_zones < MAX_NR_ZONES; ++zone) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#652: FILE: mm/page_alloc.c:1895:
+  ^Ifor (zone = node_zones; zone - node_zones < MAX_NR_ZONES; ++zone) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: mm/page_alloc.c:1895:
+  ^Ifor (zone = node_zones; zone - node_zones < MAX_NR_ZONES; ++zone) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#653: FILE: mm/page_alloc.c:1896:
+  ^I^Iif (!zone->present_pages)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#653: FILE: mm/page_alloc.c:1896:
+  ^I^Iif (!zone->present_pages)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: mm/page_alloc.c:1896:
+  ^I^Iif (!zone->present_pages)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#654: FILE: mm/page_alloc.c:1897:
+  ^I^I^Icontinue;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#654: FILE: mm/page_alloc.c:1897:
+  ^I^I^Icontinue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#654: FILE: mm/page_alloc.c:1897:
+  ^I^I^Icontinue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#656: FILE: mm/page_alloc.c:1899:
+  ^I^Ispin_lock_irqsave(&zone->lock, flags);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#656: FILE: mm/page_alloc.c:1899:
+  ^I^Ispin_lock_irqsave(&zone->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: mm/page_alloc.c:1899:
+  ^I^Ispin_lock_irqsave(&zone->lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#657: FILE: mm/page_alloc.c:1900:
+ ^I^Iseq_printf(m, "Node %d, zone %8s", pgdat->node_id, zone->name);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#657: FILE: mm/page_alloc.c:1900:
+ ^I^Iseq_printf(m, "Node %d, zone %8s", pgdat->node_id, zone->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#657: FILE: mm/page_alloc.c:1900:
+ ^I^Iseq_printf(m, "Node %d, zone %8s", pgdat->node_id, zone->name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#658: FILE: mm/page_alloc.c:1901:
+ ^I^Iunsigned long nr_bufs = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#658: FILE: mm/page_alloc.c:1901:
+ ^I^Iunsigned long nr_bufs = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: mm/page_alloc.c:1901:
+ ^I^Iunsigned long nr_bufs = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#659: FILE: mm/page_alloc.c:1902:
+ ^I^Ifor (order = 0; order < MAX_ORDER-1; ++order) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#659: FILE: mm/page_alloc.c:1902:
+ ^I^Ifor (order = 0; order < MAX_ORDER-1; ++order) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#659: FILE: mm/page_alloc.c:1902:
+ 		unsigned long nr_bufs = 0;
+ 		for (order = 0; order < MAX_ORDER-1; ++order) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#659: FILE: mm/page_alloc.c:1902:
+ ^I^Ifor (order = 0; order < MAX_ORDER-1; ++order) {$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#659: FILE: mm/page_alloc.c:1902:
+ 		for (order = 0; order < MAX_ORDER-1; ++order) {
  		                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#660: FILE: mm/page_alloc.c:1903:
+ ^I^I^Inr_bufs = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#660: FILE: mm/page_alloc.c:1903:
+ ^I^I^Inr_bufs = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: mm/page_alloc.c:1903:
+ ^I^I^Inr_bufs = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#662: FILE: mm/page_alloc.c:1905:
+ ^I^I^Ifor (type=0; type < ALLOC_TYPES; type++) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#662: FILE: mm/page_alloc.c:1905:
+ ^I^I^Ifor (type=0; type < ALLOC_TYPES; type++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#662: FILE: mm/page_alloc.c:1905:
+ ^I^I^Ifor (type=0; type < ALLOC_TYPES; type++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#662: FILE: mm/page_alloc.c:1905:
+ 			for (type=0; type < ALLOC_TYPES; type++) {
  			         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#663: FILE: mm/page_alloc.c:1906:
+ ^I^I^I^Ilist_for_each(elem, &(zone->free_area_lists[type][order].free_list))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#663: FILE: mm/page_alloc.c:1906:
+ ^I^I^I^Ilist_for_each(elem, &(zone->free_area_lists[type][order].free_list))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: mm/page_alloc.c:1906:
+ ^I^I^I^Ilist_for_each(elem, &(zone->free_area_lists[type][order].free_list))$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around zone->free_area_lists[type][order].free_list
#663: FILE: mm/page_alloc.c:1906:
+ 				list_for_each(elem, &(zone->free_area_lists[type][order].free_list))

ERROR:CODE_INDENT: code indent should use tabs where possible
#664: FILE: mm/page_alloc.c:1907:
+ ^I^I^I^I^I++nr_bufs;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#664: FILE: mm/page_alloc.c:1907:
+ ^I^I^I^I^I++nr_bufs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: mm/page_alloc.c:1907:
+ ^I^I^I^I^I++nr_bufs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#665: FILE: mm/page_alloc.c:1908:
+ ^I^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#665: FILE: mm/page_alloc.c:1908:
+ ^I^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: mm/page_alloc.c:1908:
+ ^I^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#666: FILE: mm/page_alloc.c:1909:
+ ^I^I^Iseq_printf(m, "%6lu ", nr_bufs);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#666: FILE: mm/page_alloc.c:1909:
+ ^I^I^Iseq_printf(m, "%6lu ", nr_bufs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#666: FILE: mm/page_alloc.c:1909:
+ ^I^I^Iseq_printf(m, "%6lu ", nr_bufs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#667: FILE: mm/page_alloc.c:1910:
+ ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#667: FILE: mm/page_alloc.c:1910:
+ ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: mm/page_alloc.c:1910:
+ ^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#669: FILE: mm/page_alloc.c:1912:
+ ^I^I/* Scan global list */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#669: FILE: mm/page_alloc.c:1912:
+ ^I^I/* Scan global list */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: mm/page_alloc.c:1912:
+ ^I^I/* Scan global list */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#670: FILE: mm/page_alloc.c:1913:
+ ^I^Inr_bufs = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#670: FILE: mm/page_alloc.c:1913:
+ ^I^Inr_bufs = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#670: FILE: mm/page_alloc.c:1913:
+ ^I^Inr_bufs = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#671: FILE: mm/page_alloc.c:1914:
+ ^I^Ilist_for_each(elem, &(zone->free_area_global.free_list))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#671: FILE: mm/page_alloc.c:1914:
+ ^I^Ilist_for_each(elem, &(zone->free_area_global.free_list))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#671: FILE: mm/page_alloc.c:1914:
+ ^I^Ilist_for_each(elem, &(zone->free_area_global.free_list))$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around zone->free_area_global.free_list
#671: FILE: mm/page_alloc.c:1914:
+ 		list_for_each(elem, &(zone->free_area_global.free_list))

ERROR:CODE_INDENT: code indent should use tabs where possible
#672: FILE: mm/page_alloc.c:1915:
+ ^I^I^I++nr_bufs;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#672: FILE: mm/page_alloc.c:1915:
+ ^I^I^I++nr_bufs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: mm/page_alloc.c:1915:
+ ^I^I^I++nr_bufs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#673: FILE: mm/page_alloc.c:1916:
+ ^I^Iseq_printf(m, "%6lu ", nr_bufs);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#673: FILE: mm/page_alloc.c:1916:
+ ^I^Iseq_printf(m, "%6lu ", nr_bufs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: mm/page_alloc.c:1916:
+ ^I^Iseq_printf(m, "%6lu ", nr_bufs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#675: FILE: mm/page_alloc.c:1918:
+ ^I^Ispin_unlock_irqrestore(&zone->lock, flags);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#675: FILE: mm/page_alloc.c:1918:
+ ^I^Ispin_unlock_irqrestore(&zone->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: mm/page_alloc.c:1918:
+ ^I^Ispin_unlock_irqrestore(&zone->lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#676: FILE: mm/page_alloc.c:1919:
+ ^I^Iseq_putc(m, '\n');$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#676: FILE: mm/page_alloc.c:1919:
+ ^I^Iseq_putc(m, '\n');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: mm/page_alloc.c:1919:
+ ^I^Iseq_putc(m, '\n');$

ERROR:CODE_INDENT: code indent should use tabs where possible
#677: FILE: mm/page_alloc.c:1920:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#677: FILE: mm/page_alloc.c:1920:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: mm/page_alloc.c:1920:
+ ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#679: FILE: mm/page_alloc.c:1922:
+ ^I/* Show statistics for each allocation type */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#679: FILE: mm/page_alloc.c:1922:
+ ^I/* Show statistics for each allocation type */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#679: FILE: mm/page_alloc.c:1922:
+ ^I/* Show statistics for each allocation type */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#680: FILE: mm/page_alloc.c:1923:
+ ^Iseq_printf(m, "\nPer-allocation-type statistics");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#680: FILE: mm/page_alloc.c:1923:
+ ^Iseq_printf(m, "\nPer-allocation-type statistics");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#680: FILE: mm/page_alloc.c:1923:
+ ^Iseq_printf(m, "\nPer-allocation-type statistics");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#680: FILE: mm/page_alloc.c:1923:
+ 	seq_printf(m, "\nPer-allocation-type statistics");

ERROR:CODE_INDENT: code indent should use tabs where possible
#681: FILE: mm/page_alloc.c:1924:
+ ^Ifor (zone = node_zones; zone - node_zones < MAX_NR_ZONES; ++zone) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#681: FILE: mm/page_alloc.c:1924:
+ ^Ifor (zone = node_zones; zone - node_zones < MAX_NR_ZONES; ++zone) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: mm/page_alloc.c:1924:
+ ^Ifor (zone = node_zones; zone - node_zones < MAX_NR_ZONES; ++zone) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#682: FILE: mm/page_alloc.c:1925:
+ ^I^Iif (!zone->present_pages)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#682: FILE: mm/page_alloc.c:1925:
+ ^I^Iif (!zone->present_pages)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: mm/page_alloc.c:1925:
+ ^I^Iif (!zone->present_pages)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#683: FILE: mm/page_alloc.c:1926:
+ ^I^I^Icontinue;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#683: FILE: mm/page_alloc.c:1926:
+ ^I^I^Icontinue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: mm/page_alloc.c:1926:
+ ^I^I^Icontinue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#685: FILE: mm/page_alloc.c:1928:
+ ^I^Ispin_lock_irqsave(&zone->lock, flags);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#685: FILE: mm/page_alloc.c:1928:
+ ^I^Ispin_lock_irqsave(&zone->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: mm/page_alloc.c:1928:
+ ^I^Ispin_lock_irqsave(&zone->lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#686: FILE: mm/page_alloc.c:1929:
+ ^I^Iunsigned long nr_bufs = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#686: FILE: mm/page_alloc.c:1929:
+ ^I^Iunsigned long nr_bufs = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: mm/page_alloc.c:1929:
+ ^I^Iunsigned long nr_bufs = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#687: FILE: mm/page_alloc.c:1930:
+ ^I^Ifor (type=0; type < ALLOC_TYPES; type++) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#687: FILE: mm/page_alloc.c:1930:
+ ^I^Ifor (type=0; type < ALLOC_TYPES; type++) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#687: FILE: mm/page_alloc.c:1930:
+ 		unsigned long nr_bufs = 0;
+ 		for (type=0; type < ALLOC_TYPES; type++) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#687: FILE: mm/page_alloc.c:1930:
+ ^I^Ifor (type=0; type < ALLOC_TYPES; type++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#687: FILE: mm/page_alloc.c:1930:
+ 		for (type=0; type < ALLOC_TYPES; type++) {
  		         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#688: FILE: mm/page_alloc.c:1931:
+ ^I^I^Iseq_printf(m, "\nNode %d, zone %8s, type %10s",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#688: FILE: mm/page_alloc.c:1931:
+ ^I^I^Iseq_printf(m, "\nNode %d, zone %8s, type %10s",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#688: FILE: mm/page_alloc.c:1931:
+ ^I^I^Iseq_printf(m, "\nNode %d, zone %8s, type %10s",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#689: FILE: mm/page_alloc.c:1932:
+ ^I^I^I^I^Ipgdat->node_id, zone->name,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#689: FILE: mm/page_alloc.c:1932:
+ ^I^I^I^I^Ipgdat->node_id, zone->name,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#689: FILE: mm/page_alloc.c:1932:
+ 			seq_printf(m, "\nNode %d, zone %8s, type %10s",
+ 					pgdat->node_id, zone->name,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: mm/page_alloc.c:1932:
+ ^I^I^I^I^Ipgdat->node_id, zone->name,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#690: FILE: mm/page_alloc.c:1933:
+ ^I^I^I^I^Itype_names[type]);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#690: FILE: mm/page_alloc.c:1933:
+ ^I^I^I^I^Itype_names[type]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: mm/page_alloc.c:1933:
+ ^I^I^I^I^Itype_names[type]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#691: FILE: mm/page_alloc.c:1934:
+  ^I^I^Istruct list_head *elem;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#691: FILE: mm/page_alloc.c:1934:
+  ^I^I^Istruct list_head *elem;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: mm/page_alloc.c:1934:
+  ^I^I^Istruct list_head *elem;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#692: FILE: mm/page_alloc.c:1935:
+ ^I^I^Ifor (order = 0; order < MAX_ORDER; ++order) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#692: FILE: mm/page_alloc.c:1935:
+ ^I^I^Ifor (order = 0; order < MAX_ORDER; ++order) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: mm/page_alloc.c:1935:
+ ^I^I^Ifor (order = 0; order < MAX_ORDER; ++order) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#693: FILE: mm/page_alloc.c:1936:
+ ^I^I^I^Inr_bufs = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#693: FILE: mm/page_alloc.c:1936:
+ ^I^I^I^Inr_bufs = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: mm/page_alloc.c:1936:
+ ^I^I^I^Inr_bufs = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#695: FILE: mm/page_alloc.c:1938:
+ ^I^I^I^Ilist_for_each(elem, &(zone->free_area_lists[type][order].free_list))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#695: FILE: mm/page_alloc.c:1938:
+ ^I^I^I^Ilist_for_each(elem, &(zone->free_area_lists[type][order].free_list))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: mm/page_alloc.c:1938:
+ ^I^I^I^Ilist_for_each(elem, &(zone->free_area_lists[type][order].free_list))$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around zone->free_area_lists[type][order].free_list
#695: FILE: mm/page_alloc.c:1938:
+ 				list_for_each(elem, &(zone->free_area_lists[type][order].free_list))

ERROR:CODE_INDENT: code indent should use tabs where possible
#696: FILE: mm/page_alloc.c:1939:
+ ^I^I^I^I^I++nr_bufs;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#696: FILE: mm/page_alloc.c:1939:
+ ^I^I^I^I^I++nr_bufs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: mm/page_alloc.c:1939:
+ ^I^I^I^I^I++nr_bufs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#697: FILE: mm/page_alloc.c:1940:
+ ^I^I^I^Iseq_printf(m, "%6lu ", nr_bufs);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#697: FILE: mm/page_alloc.c:1940:
+ ^I^I^I^Iseq_printf(m, "%6lu ", nr_bufs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: mm/page_alloc.c:1940:
+ ^I^I^I^Iseq_printf(m, "%6lu ", nr_bufs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#698: FILE: mm/page_alloc.c:1941:
+ ^I^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#698: FILE: mm/page_alloc.c:1941:
+ ^I^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: mm/page_alloc.c:1941:
+ ^I^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#699: FILE: mm/page_alloc.c:1942:
+  ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#699: FILE: mm/page_alloc.c:1942:
+  ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: mm/page_alloc.c:1942:
+  ^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#701: FILE: mm/page_alloc.c:1944:
+ ^I^I/* Scan global list */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#701: FILE: mm/page_alloc.c:1944:
+ ^I^I/* Scan global list */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: mm/page_alloc.c:1944:
+ ^I^I/* Scan global list */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#702: FILE: mm/page_alloc.c:1945:
+ ^I^Iseq_printf(m, "\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#702: FILE: mm/page_alloc.c:1945:
+ ^I^Iseq_printf(m, "\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#702: FILE: mm/page_alloc.c:1945:
+ ^I^Iseq_printf(m, "\n");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#702: FILE: mm/page_alloc.c:1945:
+ 		seq_printf(m, "\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#703: FILE: mm/page_alloc.c:1946:
+ ^I^Iseq_printf(m, "Node %d, zone %8s, type %10s",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#703: FILE: mm/page_alloc.c:1946:
+ ^I^Iseq_printf(m, "Node %d, zone %8s, type %10s",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: mm/page_alloc.c:1946:
+ ^I^Iseq_printf(m, "Node %d, zone %8s, type %10s",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#704: FILE: mm/page_alloc.c:1947:
+ ^I^I^I^I^Ipgdat->node_id, zone->name,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#704: FILE: mm/page_alloc.c:1947:
+ ^I^I^I^I^Ipgdat->node_id, zone->name,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#704: FILE: mm/page_alloc.c:1947:
+ 		seq_printf(m, "Node %d, zone %8s, type %10s",
+ 					pgdat->node_id, zone->name,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: mm/page_alloc.c:1947:
+ ^I^I^I^I^Ipgdat->node_id, zone->name,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#705: FILE: mm/page_alloc.c:1948:
+ ^I^I^I^I^I"MAX_ORDER");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#705: FILE: mm/page_alloc.c:1948:
+ ^I^I^I^I^I"MAX_ORDER");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: mm/page_alloc.c:1948:
+ ^I^I^I^I^I"MAX_ORDER");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#706: FILE: mm/page_alloc.c:1949:
+ ^I^Inr_bufs = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#706: FILE: mm/page_alloc.c:1949:
+ ^I^Inr_bufs = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#706: FILE: mm/page_alloc.c:1949:
+ ^I^Inr_bufs = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#707: FILE: mm/page_alloc.c:1950:
+ ^I^Ilist_for_each(elem, &(zone->free_area_global.free_list))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#707: FILE: mm/page_alloc.c:1950:
+ ^I^Ilist_for_each(elem, &(zone->free_area_global.free_list))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: mm/page_alloc.c:1950:
+ ^I^Ilist_for_each(elem, &(zone->free_area_global.free_list))$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around zone->free_area_global.free_list
#707: FILE: mm/page_alloc.c:1950:
+ 		list_for_each(elem, &(zone->free_area_global.free_list))

ERROR:CODE_INDENT: code indent should use tabs where possible
#708: FILE: mm/page_alloc.c:1951:
+ ^I^I^I++nr_bufs;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#708: FILE: mm/page_alloc.c:1951:
+ ^I^I^I++nr_bufs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#708: FILE: mm/page_alloc.c:1951:
+ ^I^I^I++nr_bufs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#709: FILE: mm/page_alloc.c:1952:
+ ^I^Iseq_printf(m, "%6lu ", nr_bufs);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#709: FILE: mm/page_alloc.c:1952:
+ ^I^Iseq_printf(m, "%6lu ", nr_bufs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: mm/page_alloc.c:1952:
+ ^I^Iseq_printf(m, "%6lu ", nr_bufs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#711: FILE: mm/page_alloc.c:1954:
+  ^I^Ispin_unlock_irqrestore(&zone->lock, flags);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#711: FILE: mm/page_alloc.c:1954:
+  ^I^Ispin_unlock_irqrestore(&zone->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: mm/page_alloc.c:1954:
+  ^I^Ispin_unlock_irqrestore(&zone->lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#712: FILE: mm/page_alloc.c:1955:
+  ^I^Iseq_putc(m, '\n');$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#712: FILE: mm/page_alloc.c:1955:
+  ^I^Iseq_putc(m, '\n');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: mm/page_alloc.c:1955:
+  ^I^Iseq_putc(m, '\n');$

ERROR:CODE_INDENT: code indent should use tabs where possible
#713: FILE: mm/page_alloc.c:1956:
+  ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#713: FILE: mm/page_alloc.c:1956:
+  ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: mm/page_alloc.c:1956:
+  ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#715: FILE: mm/page_alloc.c:1958:
+ ^I/* Show bean counters */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#715: FILE: mm/page_alloc.c:1958:
+ ^I/* Show bean counters */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: mm/page_alloc.c:1958:
+ ^I/* Show bean counters */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#716: FILE: mm/page_alloc.c:1959:
+ ^Iseq_printf(m, "\nGlobal beancounters\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#716: FILE: mm/page_alloc.c:1959:
+ ^Iseq_printf(m, "\nGlobal beancounters\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: mm/page_alloc.c:1959:
+ ^Iseq_printf(m, "\nGlobal beancounters\n");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#716: FILE: mm/page_alloc.c:1959:
+ 	seq_printf(m, "\nGlobal beancounters\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#717: FILE: mm/page_alloc.c:1960:
+ ^Iseq_printf(m, "Global steals:     %d\n", global_steal);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#717: FILE: mm/page_alloc.c:1960:
+ ^Iseq_printf(m, "Global steals:     %d\n", global_steal);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: mm/page_alloc.c:1960:
+ ^Iseq_printf(m, "Global steals:     %d\n", global_steal);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#718: FILE: mm/page_alloc.c:1961:
+ ^Iseq_printf(m, "Global refills:    %d\n", global_refill);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#718: FILE: mm/page_alloc.c:1961:
+ ^Iseq_printf(m, "Global refills:    %d\n", global_refill);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: mm/page_alloc.c:1961:
+ ^Iseq_printf(m, "Global refills:    %d\n", global_refill);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#719: FILE: mm/page_alloc.c:1962:
+ ^Iseq_printf(m, "KernNoRclm allocs: %d\n", kernnorclm_count);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#719: FILE: mm/page_alloc.c:1962:
+ ^Iseq_printf(m, "KernNoRclm allocs: %d\n", kernnorclm_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: mm/page_alloc.c:1962:
+ ^Iseq_printf(m, "KernNoRclm allocs: %d\n", kernnorclm_count);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#720: FILE: mm/page_alloc.c:1963:
+ ^Iseq_printf(m, "KernRclm allocs:   %d\n", kernrclm_count);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#720: FILE: mm/page_alloc.c:1963:
+ ^Iseq_printf(m, "KernRclm allocs:   %d\n", kernrclm_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#720: FILE: mm/page_alloc.c:1963:
+ ^Iseq_printf(m, "KernRclm allocs:   %d\n", kernrclm_count);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#721: FILE: mm/page_alloc.c:1964:
+ ^Iseq_printf(m, "UserRclm allocs:   %d\n", userrclm_count);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#721: FILE: mm/page_alloc.c:1964:
+ ^Iseq_printf(m, "UserRclm allocs:   %d\n", userrclm_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: mm/page_alloc.c:1964:
+ ^Iseq_printf(m, "UserRclm allocs:   %d\n", userrclm_count);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#722: FILE: mm/page_alloc.c:1965:
+ ^Iseq_printf(m, "%-10s Fallback count: %d\n", type_names[0],$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#722: FILE: mm/page_alloc.c:1965:
+ ^Iseq_printf(m, "%-10s Fallback count: %d\n", type_names[0],$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: mm/page_alloc.c:1965:
+ ^Iseq_printf(m, "%-10s Fallback count: %d\n", type_names[0],$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#723: FILE: mm/page_alloc.c:1966:
+ 	seq_printf(m, "%-10s Fallback count: %d\n", type_names[0],
+						    fallback_count[0]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#724: FILE: mm/page_alloc.c:1967:
+ ^Iseq_printf(m, "%-10s Fallback count: %d\n", type_names[1],$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#724: FILE: mm/page_alloc.c:1967:
+ ^Iseq_printf(m, "%-10s Fallback count: %d\n", type_names[1],$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: mm/page_alloc.c:1967:
+ ^Iseq_printf(m, "%-10s Fallback count: %d\n", type_names[1],$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#725: FILE: mm/page_alloc.c:1968:
+ 	seq_printf(m, "%-10s Fallback count: %d\n", type_names[1],
+						    fallback_count[1]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#726: FILE: mm/page_alloc.c:1969:
+ ^Iseq_printf(m, "%-10s Fallback count: %d\n", type_names[2],$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#726: FILE: mm/page_alloc.c:1969:
+ ^Iseq_printf(m, "%-10s Fallback count: %d\n", type_names[2],$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: mm/page_alloc.c:1969:
+ ^Iseq_printf(m, "%-10s Fallback count: %d\n", type_names[2],$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#727: FILE: mm/page_alloc.c:1970:
+ 	seq_printf(m, "%-10s Fallback count: %d\n", type_names[2],
+						    fallback_count[2]);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#729: FILE: mm/page_alloc.c:1972:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000215148.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 106 errors, 166 warnings, 42 checks, 611 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000215148.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
