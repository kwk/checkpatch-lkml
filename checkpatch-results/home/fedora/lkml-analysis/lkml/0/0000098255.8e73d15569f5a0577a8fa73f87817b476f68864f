ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#143: FILE: include/asm-generic/timeofday.h:23:
+				cycle_t offset_base, struct clocksource* clock);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#146: FILE: include/asm-generic/timeofday.h:25:
+# define arch_update_vsyscall_gtod(x,y,z) do { } while(0)
                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#146: FILE: include/asm-generic/timeofday.h:25:
+# define arch_update_vsyscall_gtod(x,y,z) do { } while(0)
                                       ^

ERROR:SPACING: space required before the open parenthesis '('
#146: FILE: include/asm-generic/timeofday.h:25:
+# define arch_update_vsyscall_gtod(x,y,z) do { } while(0)

WARNING:LINE_SPACING: Missing a blank line after declarations
#232: FILE: include/linux/clocksource.h:147:
+	u64 ret = (u64)cycles;
+	ret = (ret * cs->mult) >> cs->shift;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: include/linux/clocksource.h:165:
+static inline s64 cyc2ns_rem(struct clocksource *cs, cycle_t cycles,
+					u64* rem)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#243: FILE: include/linux/clocksource.h:165:
+					u64* rem)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: include/linux/clocksource.h:191:
+static inline void calculate_clocksource_interval(struct clocksource *c,
+						unsigned long length_nsec)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#297: FILE: include/linux/clocksource.h:198:
+	tmp += c->mult/2;
 	              ^

ERROR:SPACING: space required before the open parenthesis '('
#301: FILE: include/linux/clocksource.h:202:
+	if(c->interval_cycles == 0)

WARNING:LONG_LINE: line length of 191 exceeds 100 columns
#313: FILE: include/linux/clocksource.h:207:
+	printk("requested: %lu  calculated %llu ns %llu cyc error: %lld\n", length_nsec, c->interval_snsecs>>c->shift, c->interval_cycles, (s64)length_nsec - (c->interval_snsecs>>c->shift) );

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#313: FILE: include/linux/clocksource.h:207:
+	printk("requested: %lu  calculated %llu ns %llu cyc error: %lld\n", length_nsec, c->interval_snsecs>>c->shift, c->interval_cycles, (s64)length_nsec - (c->interval_snsecs>>c->shift) );

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#313: FILE: include/linux/clocksource.h:207:
+	printk("requested: %lu  calculated %llu ns %llu cyc error: %lld\n", length_nsec, c->interval_snsecs>>c->shift, c->interval_cycles, (s64)length_nsec - (c->interval_snsecs>>c->shift) );
 	                                                                                                   ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#313: FILE: include/linux/clocksource.h:207:
+	printk("requested: %lu  calculated %llu ns %llu cyc error: %lld\n", length_nsec, c->interval_snsecs>>c->shift, c->interval_cycles, (s64)length_nsec - (c->interval_snsecs>>c->shift) );
 	                                                                                                                                                                         ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#313: FILE: include/linux/clocksource.h:207:
+	printk("requested: %lu  calculated %llu ns %llu cyc error: %lld\n", length_nsec, c->interval_snsecs>>c->shift, c->interval_cycles, (s64)length_nsec - (c->interval_snsecs>>c->shift) );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#316: FILE: include/linux/clocksource.h:210:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#317: FILE: include/linux/clocksource.h:211:
+static inline s64 snsec2nsec_rem(u64 snsec, u32 shift, u64* rem)

WARNING:LINE_SPACING: Missing a blank line after declarations
#320: FILE: include/linux/clocksource.h:214:
+	s64 ret = snsec >> shift;
+	if(rem)

ERROR:SPACING: space required before the open parenthesis '('
#320: FILE: include/linux/clocksource.h:214:
+	if(rem)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#321: FILE: include/linux/clocksource.h:215:
+		*rem = snsec & ((1<<shift)-1);
 		                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#321: FILE: include/linux/clocksource.h:215:
+		*rem = snsec & ((1<<shift)-1);
 		                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: include/linux/clocksource.h:236:
+static inline u64 cyc2sns_fixed_error(struct clocksource *clock,
+				cycle_t *cycles, u64 ntp_interval, s64* error)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#351: FILE: include/linux/clocksource.h:236:
+				cycle_t *cycles, u64 ntp_interval, s64* error)

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#370: FILE: include/linux/clocksource.h:254:
+	static int saved_adj = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#397: FILE: include/linux/clocksource.h:272:
+static inline s64 make_ntp_adj(struct clocksource *clock,
+				cycles_t cycles_delta, s64* error)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#397: FILE: include/linux/clocksource.h:272:
+				cycles_t cycles_delta, s64* error)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#401: FILE: include/linux/clocksource.h:276:
+	if (*error  > (s64)clock->interval_cycles / 2 ) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#409: FILE: include/linux/clocksource.h:284:
+	} else if ((-(*error))  > (s64)clock->interval_cycles/2) {
 	                                                     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#421: FILE: include/linux/clocksource.h:296:
 
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#438: FILE: kernel/time/timeofday.c:47:
+#define INTERVAL_LEN ((PERIODIC_INTERVAL_MS)*1000000)
                                             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#496: FILE: kernel/time/timeofday.c:491:
 
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#508: FILE: kernel/time/timeofday.c:508:
+  ^I/* nanoseconds left-shifted by clock->shift */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#508: FILE: kernel/time/timeofday.c:508:
+  ^I/* nanoseconds left-shifted by clock->shift */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: kernel/time/timeofday.c:508:
+  ^I/* nanoseconds left-shifted by clock->shift */$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#519: FILE: kernel/time/timeofday.c:517:
+	struct clocksource* next;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#532: FILE: kernel/time/timeofday.c:526:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#540: FILE: kernel/time/timeofday.c:534:
+	ntp_interval = shift_right(ntp_interval,
+				(SHIFT_USEC + 20 - clock->shift));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#541: FILE: kernel/time/timeofday.c:535:
+	ntp_interval = (((s64)INTERVAL_LEN)<<clock->shift) + ntp_interval;
 	                                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#557: FILE: kernel/time/timeofday.c:551:
+	delta_nsec = snsec2nsec_rem(shifted_nsecs, clock->shift,
+					 &shifted_nsecs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#637: FILE: kernel/time/timeofday.c:607:
+			delta_nsec = cyc2ns_rem(&old_clock, cycle_delta,
+						 &shifted_nsecs);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000098255.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 6 warnings, 19 checks, 581 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000098255.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
