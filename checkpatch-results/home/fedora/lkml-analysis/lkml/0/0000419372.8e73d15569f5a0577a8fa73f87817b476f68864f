WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#40: FILE: net/pcmcia/axnet_cs.c:14:
+    axnet_cs.c 1.26 2002/02/17 23:30:21$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#40: FILE: net/pcmcia/axnet_cs.c:14:
+    axnet_cs.c 1.26 2002/02/17 23:30:21
                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#40: FILE: net/pcmcia/axnet_cs.c:14:
+    axnet_cs.c 1.26 2002/02/17 23:30:21
                            ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#40: FILE: net/pcmcia/axnet_cs.c:14:
+    axnet_cs.c 1.26 2002/02/17 23:30:21
                                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#40: FILE: net/pcmcia/axnet_cs.c:14:
+    axnet_cs.c 1.26 2002/02/17 23:30:21
                                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#123: FILE: net/pcmcia/axnet_cs.c:84:
+#define DEBUG(n, args...) if (pc_debug>(n)) printk(KERN_DEBUG args)

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#123: FILE: net/pcmcia/axnet_cs.c:84:
+#define DEBUG(n, args...) if (pc_debug>(n)) printk(KERN_DEBUG args)
                                       ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#123: FILE: net/pcmcia/axnet_cs.c:84:
+#define DEBUG(n, args...) if (pc_debug>(n)) printk(KERN_DEBUG args)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: net/pcmcia/axnet_cs.c:138:
+    int^I^I^Iflags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: net/pcmcia/axnet_cs.c:217:
+    axdev_init(dev);$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#167: FILE: net/pcmcia/axnet_cs.c:309:
+	{E8390_RXOFF|0x40, EN0_RXCR},	/* 0x60  Set to monitor */
 	            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: net/pcmcia/axnet_cs.c:403:
+    link->conf.Present = 0x63;$

CHECK:CAMELCASE: Avoid CamelCase: <Present>
#208: FILE: net/pcmcia/axnet_cs.c:403:
+    link->conf.Present = 0x63;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ConfigIndex>
#217: FILE: net/pcmcia/axnet_cs.c:424:
+	link->conf.ConfigIndex = 0x05;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: net/pcmcia/axnet_cs.c:464:
+    if (!get_prom(link)) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#229: FILE: net/pcmcia/axnet_cs.c:465:
+	printk(KERN_NOTICE "axnet_cs: this is not an AX88190 card!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#230: FILE: net/pcmcia/axnet_cs.c:466:
+	printk(KERN_NOTICE "axnet_cs: use pcnet_cs instead.\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: net/pcmcia/axnet_cs.c:485:
+    if (inb(dev->base_addr + AXNET_TEST) != 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: net/pcmcia/axnet_cs.c:487:
+    else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: net/pcmcia/axnet_cs.c:490:
+    printk(KERN_INFO "%s: Asix AX88%d90: io %#3lx, irq %d, hw_addr ",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#245: FILE: net/pcmcia/axnet_cs.c:490:
+    printk(KERN_INFO "%s: Asix AX88%d90: io %#3lx, irq %d, hw_addr ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: net/pcmcia/axnet_cs.c:491:
+    printk(KERN_INFO "%s: Asix AX88%d90: io %#3lx, irq %d, hw_addr ",
+		dev->name, ((info->flags & IS_AX88790) ? 7 : 1),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: net/pcmcia/axnet_cs.c:496:
+    if (info->flags & IS_AX88790)$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#259: FILE: net/pcmcia/axnet_cs.c:504:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#260: FILE: net/pcmcia/axnet_cs.c:505:
+    /* Maybe PHY is in power down mode. (PPD_SET = 1) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: net/pcmcia/axnet_cs.c:506:
+       Bit 2 of CCSR is active low. */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#261: FILE: net/pcmcia/axnet_cs.c:506:
+    /* Maybe PHY is in power down mode. (PPD_SET = 1) 
+       Bit 2 of CCSR is active low. */ 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#261: FILE: net/pcmcia/axnet_cs.c:506:
+       Bit 2 of CCSR is active low. */ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: net/pcmcia/axnet_cs.c:507:
+    if (i == 32) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: net/pcmcia/axnet_cs.c:509:
+ ^ICardServices(AccessConfigurationRegister, link->handle, &reg);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#264: FILE: net/pcmcia/axnet_cs.c:509:
+ ^ICardServices(AccessConfigurationRegister, link->handle, &reg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: net/pcmcia/axnet_cs.c:509:
+ ^ICardServices(AccessConfigurationRegister, link->handle, &reg);$

CHECK:CAMELCASE: Avoid CamelCase: <CardServices>
#264: FILE: net/pcmcia/axnet_cs.c:509:
+ 	CardServices(AccessConfigurationRegister, link->handle, &reg);

CHECK:CAMELCASE: Avoid CamelCase: <AccessConfigurationRegister>
#264: FILE: net/pcmcia/axnet_cs.c:509:
+ 	CardServices(AccessConfigurationRegister, link->handle, &reg);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#265: FILE: net/pcmcia/axnet_cs.c:510:
+	for (i = 0; i < 32; i++) {
+	    j = mdio_read(dev->base_addr + AXNET_MII_EEP, i, 1);

WARNING:TABSTOP: Statements should start on a tabstop
#267: FILE: net/pcmcia/axnet_cs.c:512:
+	    if ((j != 0) && (j != 0xffff)) break;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'j != 0'
#267: FILE: net/pcmcia/axnet_cs.c:512:
+	    if ((j != 0) && (j != 0xffff)) break;

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'j != 0xffff'
#267: FILE: net/pcmcia/axnet_cs.c:512:
+	    if ((j != 0) && (j != 0xffff)) break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#267: FILE: net/pcmcia/axnet_cs.c:512:
+	    if ((j != 0) && (j != 0xffff)) break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: net/pcmcia/axnet_cs.c:514:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: net/pcmcia/axnet_cs.c:698:
+    return ax_open(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: net/pcmcia/axnet_cs.c:710:
+    ax_close(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: net/pcmcia/axnet_cs.c:761:
+    ax_interrupt(irq, dev_id, regs);$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#386: FILE: net/pcmcia/axnet_cs.c:950:
+	The author may be reached as becker@scyld.com, or C/O
 	                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <The>
#386: FILE: net/pcmcia/axnet_cs.c:950:
+	The author may be reached as becker@scyld.com, or C/O

CHECK:CAMELCASE: Avoid CamelCase: <Scyld>
#387: FILE: net/pcmcia/axnet_cs.c:951:
+	Scyld Computing Corporation

CHECK:CAMELCASE: Avoid CamelCase: <Computing>
#387: FILE: net/pcmcia/axnet_cs.c:951:
+	Scyld Computing Corporation

CHECK:CAMELCASE: Avoid CamelCase: <Corporation>
#387: FILE: net/pcmcia/axnet_cs.c:951:
+	Scyld Computing Corporation

CHECK:CAMELCASE: Avoid CamelCase: <Severn>
#388: FILE: net/pcmcia/axnet_cs.c:952:
+	410 Severn Ave., Suite 210

CHECK:CAMELCASE: Avoid CamelCase: <Ave>
#388: FILE: net/pcmcia/axnet_cs.c:952:
+	410 Severn Ave., Suite 210

CHECK:CAMELCASE: Avoid CamelCase: <Suite>
#388: FILE: net/pcmcia/axnet_cs.c:952:
+	410 Severn Ave., Suite 210

CHECK:CAMELCASE: Avoid CamelCase: <Annapolis>
#389: FILE: net/pcmcia/axnet_cs.c:953:
+	Annapolis MD 21403

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: net/pcmcia/axnet_cs.c:988:
+    "8390.c:v1.10cvs 9/23/94 Donald Becker (becker@scyld.com)\n";$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#439: FILE: net/pcmcia/axnet_cs.c:1084:
+		printk(KERN_EMERG "%s: ax_open passed a non-existent device!\n", dev->name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ax_open', this function's name, in a string
#439: FILE: net/pcmcia/axnet_cs.c:1084:
+		printk(KERN_EMERG "%s: ax_open passed a non-existent device!\n", dev->name);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: net/pcmcia/axnet_cs.c:1122:
+        unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: net/pcmcia/axnet_cs.c:1122:
+        unsigned long flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: net/pcmcia/axnet_cs.c:1124:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#484: FILE: net/pcmcia/axnet_cs.c:1125:
+         *      Hold the page lock during close$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#484: FILE: net/pcmcia/axnet_cs.c:1125:
+        /*
+         *      Hold the page lock during close

ERROR:CODE_INDENT: code indent should use tabs where possible
#485: FILE: net/pcmcia/axnet_cs.c:1126:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#488: FILE: net/pcmcia/axnet_cs.c:1129:
+        AX88190_init(dev, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: net/pcmcia/axnet_cs.c:1129:
+        AX88190_init(dev, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: net/pcmcia/axnet_cs.c:1131:
+        netif_stop_queue(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: net/pcmcia/axnet_cs.c:1131:
+        netif_stop_queue(dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#491: FILE: net/pcmcia/axnet_cs.c:1132:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: net/pcmcia/axnet_cs.c:1132:
+        return 0;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#558: FILE: net/pcmcia/axnet_cs.c:1296:
+	dev_kfree_skb (skb);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#575: FILE: net/pcmcia/axnet_cs.c:1315:
+static void ax_interrupt(int irq, void *dev_id, struct pt_regs * regs)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#616: FILE: net/pcmcia/axnet_cs.c:1777:
+  ^I^Ioutb_p(E8390_RXCONFIG | 0x58, e8390_base + EN0_RXCR);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#616: FILE: net/pcmcia/axnet_cs.c:1777:
+  ^I^Ioutb_p(E8390_RXCONFIG | 0x58, e8390_base + EN0_RXCR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: net/pcmcia/axnet_cs.c:1777:
+  ^I^Ioutb_p(E8390_RXCONFIG | 0x58, e8390_base + EN0_RXCR);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#619: FILE: net/pcmcia/axnet_cs.c:1779:
+  ^I^Ioutb_p(E8390_RXCONFIG | 0x48, e8390_base + EN0_RXCR);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#619: FILE: net/pcmcia/axnet_cs.c:1779:
+  ^I^Ioutb_p(E8390_RXCONFIG | 0x48, e8390_base + EN0_RXCR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: net/pcmcia/axnet_cs.c:1779:
+  ^I^Ioutb_p(E8390_RXCONFIG | 0x48, e8390_base + EN0_RXCR);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#622: FILE: net/pcmcia/axnet_cs.c:1781:
+  ^I^Ioutb_p(E8390_RXCONFIG | 0x40, e8390_base + EN0_RXCR);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#622: FILE: net/pcmcia/axnet_cs.c:1781:
+  ^I^Ioutb_p(E8390_RXCONFIG | 0x40, e8390_base + EN0_RXCR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: net/pcmcia/axnet_cs.c:1781:
+  ^I^Ioutb_p(E8390_RXCONFIG | 0x40, e8390_base + EN0_RXCR);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#657: FILE: net/pcmcia/axnet_cs.c:1810:
+		printk(version_8390);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#689: FILE: net/pcmcia/axnet_cs.c:1861:
+	outb_p(E8390_RXOFF|0x40, e8390_base + EN0_RXCR); /* 0x60 */
 	                  ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419372.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 41 warnings, 23 checks, 624 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419372.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
