CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'status == 0'
#45: FILE: arch/ppc64/kernel/ras.c:203:
+	if ((status == 0) && (rtas_elog->severity >= RTAS_SEVERITY_ERROR_SYNC))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rtas_elog->severity >= RTAS_SEVERITY_ERROR_SYNC'
#45: FILE: arch/ppc64/kernel/ras.c:203:
+	if ((status == 0) && (rtas_elog->severity >= RTAS_SEVERITY_ERROR_SYNC))

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#56: FILE: arch/ppc64/kernel/rtasd.c:49:
+static int full_rtas_msgs = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type > 0'
#73: FILE: arch/ppc64/kernel/rtasd.c:72:
+	if ((type > 0) && (type < 11))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type < 11'
#73: FILE: arch/ppc64/kernel/rtasd.c:72:
+	if ((type > 0) && (type < 11))

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#76: FILE: arch/ppc64/kernel/rtasd.c:75:
+	switch (type) {
+		case RTAS_TYPE_EPOW:
[...]
+		case RTAS_TYPE_PLATFORM:
[...]
+		case RTAS_TYPE_IO:
[...]
+		case RTAS_TYPE_INFO:
[...]
+		case RTAS_TYPE_DEALLOC:
[...]
+		case RTAS_TYPE_DUMP:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#103: FILE: arch/ppc64/kernel/rtasd.c:115:
+		printk(RTAS_DEBUG "%d -------- %s begin --------\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#116: FILE: arch/ppc64/kernel/rtasd.c:128:
+				n = sprintf(buffer, "RTAS %d:", i/perline);
 				                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#135: FILE: arch/ppc64/kernel/rtasd.c:132:
+				n += sprintf(buffer+n, " ");
 				                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#138: FILE: arch/ppc64/kernel/rtasd.c:134:
+			n += sprintf(buffer+n, "%02x", (unsigned char)buf[i]);
 			                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#141: FILE: arch/ppc64/kernel/rtasd.c:136:
+			if (j == (perline-1))
 			                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#142: FILE: arch/ppc64/kernel/rtasd.c:137:
+				printk(KERN_DEBUG "%s\n", buffer);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#151: FILE: arch/ppc64/kernel/rtasd.c:142:
+		printk(RTAS_DEBUG "%d -------- %s end ----------\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#156: FILE: arch/ppc64/kernel/rtasd.c:147:
+		printk(RTAS_DEBUG "event: %d, Type: %s, Severity: %d\n",

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#178: FILE: arch/ppc64/kernel/rtasd.c:539:
+__setup("rtasmsgs=", rtasmsgs_setup);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000259259.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 4 warnings, 9 checks, 283 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000259259.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
