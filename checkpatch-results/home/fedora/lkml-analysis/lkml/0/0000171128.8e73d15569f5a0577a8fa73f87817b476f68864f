WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
UML process.  This ensures that any changed LDTs are inherited.  This is done

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#58: FILE: arch/um/include/sysdep-i386/stub.h:13:
+extern void stub_clone_handler(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#73: FILE: arch/um/include/sysdep-i386/stub.h:28:
+	return(ret);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#79: FILE: arch/um/include/sysdep-i386/stub.h:34:
+	return(stub_syscall2(syscall, arg1, arg2));

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#86: FILE: arch/um/include/sysdep-i386/stub.h:41:
+	return(stub_syscall3(syscall, arg1, arg2, arg3));

WARNING:LINE_SPACING: Missing a blank line after declarations
#93: FILE: arch/um/include/sysdep-i386/stub.h:48:
+	long ret;
+	__asm__("movl %0, %%eax; " : : "g" (syscall) : "%eax");

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#102: FILE: arch/um/include/sysdep-i386/stub.h:57:
+	return(ret);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#119: FILE: arch/um/include/sysdep-x86_64/stub.h:14:
+extern void stub_clone_handler(void);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#134: FILE: arch/um/include/sysdep-x86_64/stub.h:29:
+	return(ret);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#140: FILE: arch/um/include/sysdep-x86_64/stub.h:35:
+	return(stub_syscall2(syscall, arg1, arg2));

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#147: FILE: arch/um/include/sysdep-x86_64/stub.h:42:
+	return(stub_syscall3(syscall, arg1, arg2, arg3));

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#155: FILE: arch/um/include/sysdep-x86_64/stub.h:50:
+	return(stub_syscall4(syscall, arg1, arg2, arg3, arg4));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#172: FILE: arch/um/include/time_user.h:13:
+extern void prepare_timer(void * ptr);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#172: FILE: arch/um/include/time_user.h:13:
+extern void prepare_timer(void * ptr);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#202: FILE: arch/um/kernel/skas/clone.c:1:
+#include <sched.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#217: FILE: arch/um/kernel/skas/clone.c:16:
+void __attribute__ ((__section__ (".__syscall_stub")))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".__syscall_stub") over __attribute__((__section__(".__syscall_stub")))
#217: FILE: arch/um/kernel/skas/clone.c:16:
+void __attribute__ ((__section__ (".__syscall_stub")))

CHECK:SPACING: No space is necessary after a cast
#221: FILE: arch/um/kernel/skas/clone.c:20:
+	struct stub_data *from = (struct stub_data *) UML_CONFIG_STUB_DATA;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: arch/um/kernel/skas/clone.c:22:
+^Ierr = stub_syscall2(__NR_clone, CLONE_PARENT | CLONE_FILES | SIGCHLD, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: arch/um/kernel/skas/clone.c:23:
+^I^I^I    UML_CONFIG_STUB_DATA + PAGE_SIZE / 2 - $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#226: FILE: arch/um/kernel/skas/clone.c:25:
+^Iif(err != 0) $

ERROR:SPACING: space required before the open parenthesis '('
#226: FILE: arch/um/kernel/skas/clone.c:25:
+	if(err != 0) 

ERROR:SPACING: space required before the open parenthesis '('
#230: FILE: arch/um/kernel/skas/clone.c:29:
+	if(err)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: arch/um/kernel/skas/clone.c:31:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: arch/um/kernel/skas/clone.c:32:
+^Ierr = stub_syscall3(__NR_setitimer, ITIMER_VIRTUAL, $

CHECK:SPACING: No space is necessary after a cast
#234: FILE: arch/um/kernel/skas/clone.c:33:
+			    (long) &from->timer, 0);

ERROR:SPACING: space required before the open parenthesis '('
#235: FILE: arch/um/kernel/skas/clone.c:34:
+	if(err)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#254: FILE: arch/um/kernel/skas/include/skas.h:35:
+extern int copy_context_skas0(unsigned long stack, int pid);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: arch/um/kernel/skas/include/stub-data.h:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#263: FILE: arch/um/kernel/skas/include/stub-data.h:1:
+/* 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cur_mm != NULL'
#299: FILE: arch/um/kernel/skas/mmu.c:120:
+		if((cur_mm != NULL) && (cur_mm != &init_mm))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cur_mm != &init_mm'
#299: FILE: arch/um/kernel/skas/mmu.c:120:
+		if((cur_mm != NULL) && (cur_mm != &init_mm))

ERROR:SPACING: space required before the open parenthesis '('
#299: FILE: arch/um/kernel/skas/mmu.c:120:
+		if((cur_mm != NULL) && (cur_mm != &init_mm))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cur_mm"
#299: FILE: arch/um/kernel/skas/mmu.c:120:
+		if((cur_mm != NULL) && (cur_mm != &init_mm))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#300: FILE: arch/um/kernel/skas/mmu.c:121:
+^I^I^Imm_id->u.pid = copy_context_skas0(stack, $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#302: FILE: arch/um/kernel/skas/mmu.c:123:
+		else mm_id->u.pid = start_userspace(stack);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#330: FILE: arch/um/kernel/skas/process.c:301:
 
+

CHECK:SPACING: No space is necessary after a cast
#336: FILE: arch/um/kernel/skas/process.c:307:
+	struct stub_data *data = (struct stub_data *) current_stack;

CHECK:SPACING: No space is necessary after a cast
#337: FILE: arch/um/kernel/skas/process.c:308:
+	struct stub_data *child_data = (struct stub_data *) new_stack;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: arch/um/kernel/skas/process.c:317:
+^I^I^I^I      .timer^I= ((struct itimerval) $

CHECK:SPACING: No space is necessary after a cast
#346: FILE: arch/um/kernel/skas/process.c:317:
+				      .timer	= ((struct itimerval) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: arch/um/kernel/skas/process.c:318:
+^I^I^I^I^I           { { 0, 1000000 / hz() },$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#353: FILE: arch/um/kernel/skas/process.c:324:
+				(unsigned long) stub_clone_handler -

CHECK:SPACING: No space is necessary after a cast
#354: FILE: arch/um/kernel/skas/process.c:325:
+				(unsigned long) &__syscall_stub_start;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: arch/um/kernel/skas/process.c:326:
+^Iregs[REGS_SP_INDEX] = UML_CONFIG_STUB_DATA + PAGE_SIZE - $

ERROR:SPACING: space required before the open parenthesis '('
#358: FILE: arch/um/kernel/skas/process.c:329:
+	if(err < 0)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'copy_context_skas0', this function's name, in a string
#359: FILE: arch/um/kernel/skas/process.c:330:
+		panic("copy_context_skas0 : PTRACE_SETREGS failed, "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#360: FILE: arch/um/kernel/skas/process.c:331:
+		panic("copy_context_skas0 : PTRACE_SETREGS failed, "
+		      "pid = %d, errno = %d\n", pid, errno);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required before the open parenthesis '('
#371: FILE: arch/um/kernel/skas/process.c:342:
+	if(pid < 0)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'copy_context_skas0', this function's name, in a string
#372: FILE: arch/um/kernel/skas/process.c:343:
+		panic("copy_context_skas0 - stub-parent reports error %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'copy_context_skas0', this function's name, in a string
#380: FILE: arch/um/kernel/skas/process.c:351:
+		panic("copy_context_skas0 - stub-child reports error %d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: arch/um/kernel/skas/process.c:354:
+^Iif (ptrace(PTRACE_OLDSETOPTIONS, pid, NULL, $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'copy_context_skas0', this function's name, in a string
#385: FILE: arch/um/kernel/skas/process.c:356:
+		panic("copy_context_skas0 : PTRACE_SETOPTIONS failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#386: FILE: arch/um/kernel/skas/process.c:357:
+		panic("copy_context_skas0 : PTRACE_SETOPTIONS failed, "
+		      "errno = %d\n", errno);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#402: FILE: arch/um/kernel/time.c:51:
+void prepare_timer(void * ptr)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#404: FILE: arch/um/kernel/time.c:53:
+	int usec = 1000000/hz();
 	                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#418: FILE: arch/um/kernel/time.c:164:
+^Iset_handler(SIGVTALRM, (__sighandler_t) alarm_handler, $

CHECK:SPACING: No space is necessary after a cast
#418: FILE: arch/um/kernel/time.c:164:
+	set_handler(SIGVTALRM, (__sighandler_t) alarm_handler, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#419: FILE: arch/um/kernel/time.c:165:
+^I^I    SA_ONSTACK | SA_RESTART, SIGUSR1, SIGIO, SIGWINCH, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: arch/um/kernel/time.c:167:
+^Iset_handler(SIGALRM, (__sighandler_t) alarm_handler, $

CHECK:SPACING: No space is necessary after a cast
#423: FILE: arch/um/kernel/time.c:167:
+	set_handler(SIGALRM, (__sighandler_t) alarm_handler, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#424: FILE: arch/um/kernel/time.c:168:
+^I^I    SA_ONSTACK | SA_RESTART, SIGUSR1, SIGIO, SIGWINCH, $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000171128.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 32 errors, 12 warnings, 18 checks, 324 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000171128.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
