WARNING:LINE_SPACING: Missing a blank line after declarations
#82: FILE: arch/ia64/ia32/sys_ia32.c:2433:
+	int i;
+	for (i = 0; i < info->ngroups; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#84: FILE: arch/ia64/ia32/sys_ia32.c:2435:
+		short group;
+		group = (short)GRP_AT(info, i);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#85: FILE: arch/ia64/ia32/sys_ia32.c:2436:
+		if (copy_to_user(grouplist+i, &group, sizeof(group)))
 		                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#95: FILE: arch/ia64/ia32/sys_ia32.c:2446:
+	int i;
+	for (i = 0; i < info->ngroups; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#97: FILE: arch/ia64/ia32/sys_ia32.c:2448:
+		short group;
+		if (copy_from_user(&group, grouplist+i, sizeof(group)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#97: FILE: arch/ia64/ia32/sys_ia32.c:2448:
+		if (copy_from_user(&group, grouplist+i, sizeof(group)))
 		                                    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#195: FILE: arch/s390/kernel/compat_linux.c:195:
+	int i;
+	for (i = 0; i < info->ngroups; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#197: FILE: arch/s390/kernel/compat_linux.c:197:
+		u16 group;
+		group = (u16)GRP_AT(info, i);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#198: FILE: arch/s390/kernel/compat_linux.c:198:
+		if (copy_to_user(grouplist+i, &group, sizeof(group)))
 		                          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#207: FILE: arch/s390/kernel/compat_linux.c:207:
+	int i;
+	for (i = 0; i < info->ngroups; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#209: FILE: arch/s390/kernel/compat_linux.c:209:
+		u16 group;
+		if (copy_from_user(&group, grouplist+i, sizeof(group)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#209: FILE: arch/s390/kernel/compat_linux.c:209:
+		if (copy_from_user(&group, grouplist+i, sizeof(group)))
 		                                    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#294: FILE: arch/sparc64/kernel/sys_sparc32.c:212:
+	int i;
+	for (i = 0; i < info->ngroups; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#296: FILE: arch/sparc64/kernel/sys_sparc32.c:214:
+		u16 group;
+		group = (u16)GRP_AT(info, i);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#297: FILE: arch/sparc64/kernel/sys_sparc32.c:215:
+		if (copy_to_user(grouplist+i, &group, sizeof(group)))
 		                          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#306: FILE: arch/sparc64/kernel/sys_sparc32.c:224:
+	int i;
+	for (i = 0; i < info->ngroups; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#308: FILE: arch/sparc64/kernel/sys_sparc32.c:226:
+		u16 group;
+		if (copy_from_user(&group, grouplist+i, sizeof(group)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#308: FILE: arch/sparc64/kernel/sys_sparc32.c:226:
+		if (copy_from_user(&group, grouplist+i, sizeof(group)))
 		                                    ^

ERROR:SPACING: space required before the open parenthesis '('
#448: FILE: fs/nfsd/nfs4state.c:247:
+	for(i = 0; i < SVC_CRED_NGROUPS; i++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#461: FILE: fs/proc/array.c:179:
+	for (g = 0; g < min(p->group_info->ngroups,NGROUPS_SMALL); g++)
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#462: FILE: fs/proc/array.c:180:
+		buffer += sprintf(buffer, "%d ", GRP_AT(p->group_info,g));
 		                                                     ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#794: FILE: include/linux/sched.h:341:
+#define get_group_info(info) do { \
+	atomic_inc(&(info)->usage); \
+} while (0);

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#794: FILE: include/linux/sched.h:341:
+#define get_group_info(info) do { \
+	atomic_inc(&(info)->usage); \
+} while (0);

do {} while(0) macros should not have a trailing semicolon.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'info' - possible side-effects?
#798: FILE: include/linux/sched.h:345:
+#define put_group_info(info) do { \
+	if (atomic_dec_and_test(&(info)->usage)) \
+		groups_free(info); \
+} while (0)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#807: FILE: include/linux/sched.h:354:
+#define GRP_AT(gi, i) ((gi)->blocks[(i)/NGROUPS_BLOCK][(i)%NGROUPS_BLOCK])
                                        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#807: FILE: include/linux/sched.h:354:
+#define GRP_AT(gi, i) ((gi)->blocks[(i)/NGROUPS_BLOCK][(i)%NGROUPS_BLOCK])
                                                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#807: FILE: include/linux/sched.h:354:
+#define GRP_AT(gi, i) ((gi)->blocks[(i)/NGROUPS_BLOCK][(i)%NGROUPS_BLOCK])

CHECK:LINE_SPACING: Please don't use multiple blank lines
#809: FILE: include/linux/sched.h:356:
+
+

WARNING:SPACING: Unnecessary space before function pointer arguments
#843: FILE: include/linux/security.h:1099:
+	int (*task_setgroups) (struct group_info *group_info);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#852: FILE: include/linux/security.h:1649:
+static inline int security_task_setgroups (struct group_info *group_info)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#855: FILE: include/linux/security.h:1651:
+	return security_ops->task_setgroups (group_info);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#864: FILE: include/linux/security.h:2277:
+static inline int security_task_setgroups (struct group_info *group_info)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#941: FILE: kernel/sys.c:1084:
+	nblocks = (gidsetsize/NGROUPS_BLOCK) + (gidsetsize%NGROUPS_BLOCK?1:0);
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#941: FILE: kernel/sys.c:1084:
+	nblocks = (gidsetsize/NGROUPS_BLOCK) + (gidsetsize%NGROUPS_BLOCK?1:0);
 	                                                  ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#941: FILE: kernel/sys.c:1084:
+	nblocks = (gidsetsize/NGROUPS_BLOCK) + (gidsetsize%NGROUPS_BLOCK?1:0);
 	                                                                ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#941: FILE: kernel/sys.c:1084:
+	nblocks = (gidsetsize/NGROUPS_BLOCK) + (gidsetsize%NGROUPS_BLOCK?1:0);
 	                                                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#942: FILE: kernel/sys.c:1085:
+	info = kmalloc(sizeof(*info) + nblocks*sizeof(gid_t *), GFP_USER);
 	                                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#953: FILE: kernel/sys.c:1096:
+		int i;
+		for (i = 0; i < nblocks; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#955: FILE: kernel/sys.c:1098:
+			gid_t *b;
+			b = (void *)__get_free_page(GFP_USER);

WARNING:LINE_SPACING: Missing a blank line after declarations
#958: FILE: kernel/sys.c:1101:
+				int j;
+				for (j = 0; j < i; j++)

WARNING:LINE_SPACING: Missing a blank line after declarations
#973: FILE: kernel/sys.c:1116:
+		int i;
+		for (i = 0; i < info->nblocks; i++)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#990: FILE: kernel/sys.c:1133:
+		if (copy_to_user(grouplist+off, info->blocks[i], len))
 		                          ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#999: FILE: kernel/sys.c:1142:
+static int groups_from_user(struct group_info *info, gid_t __user *grouplist)
+ {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1000: FILE: kernel/sys.c:1143:
+ {$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1009: FILE: kernel/sys.c:1152:
+		if (copy_from_user(info->blocks[i], grouplist+off, len))
 		                                             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1032: FILE: kernel/sys.c:1175:
+			gid_t tmp = GRP_AT(info, base + stride);
+			while (left >= 0 && tmp < GRP_AT(info, left)) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1033: FILE: kernel/sys.c:1176:
+				GRP_AT(info, left) = GRP_AT(info, left+stride);
 				                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1053: FILE: kernel/sys.c:1196:
+		int mid = (left+right)/2;
 		               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1053: FILE: kernel/sys.c:1196:
+		int mid = (left+right)/2;
 		                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1055: FILE: kernel/sys.c:1198:
+		int cmp = grp - GRP_AT(info, mid);
+		if (cmp > 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1186: FILE: kernel/uid16.c:111:
+static int groups16_to_user(old_gid_t __user *grouplist,
+    struct group_info *info)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1186: FILE: kernel/uid16.c:111:
+    struct group_info *info)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1189: FILE: kernel/uid16.c:114:
+	int i;
+	for (i = 0; i < info->ngroups; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1191: FILE: kernel/uid16.c:116:
+		old_gid_t group;
+		group = (old_gid_t)GRP_AT(info, i);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1192: FILE: kernel/uid16.c:117:
+		if (copy_to_user(grouplist+i, &group, sizeof(group)))
 		                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1199: FILE: kernel/uid16.c:124:
+static int groups16_from_user(struct group_info *info,
+    old_gid_t __user *grouplist)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1199: FILE: kernel/uid16.c:124:
+    old_gid_t __user *grouplist)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1202: FILE: kernel/uid16.c:127:
+	int i;
+	for (i = 0; i < info->ngroups; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1204: FILE: kernel/uid16.c:129:
+		old_gid_t group;
+		if (copy_from_user(&group, grouplist+i, sizeof(group)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1204: FILE: kernel/uid16.c:129:
+		if (copy_from_user(&group, grouplist+i, sizeof(group)))
 		                                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1355: FILE: security/dummy.c:533:
+static int dummy_task_setgroups (struct group_info *group_info)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000332964.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 32 warnings, 25 checks, 1099 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000332964.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
