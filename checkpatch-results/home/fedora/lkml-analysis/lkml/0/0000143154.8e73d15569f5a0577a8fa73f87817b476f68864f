ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#53: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3140:
+static void vscsi_target_release(struct kobject *kobj) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#55: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3142:
+		container_of(kobj,struct vdev,kobj);
 		                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#55: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3142:
+		container_of(kobj,struct vdev,kobj);
 		                             ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#59: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3146:
+static void vscsi_bus_release(struct kobject *kobj) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#61: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3148:
+		container_of(kobj,struct vbus,kobj);
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#61: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3148:
+		container_of(kobj,struct vbus,kobj);
 		                             ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#65: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3152:
+static void set_num_targets(struct vbus* vbus, long value)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#68: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3155:
+		container_of(vbus->kobj.parent, struct device , kobj);
 		                                              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#78: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3165:
+		int i;
+		for (i = cur_num_targets; i < value; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#79: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3166:
+			tmpdev = (struct vdev *)kmalloc(sizeof(struct vdev),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tmpdev)...) over kmalloc(sizeof(struct vdev)...)
#79: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3166:
+			tmpdev = (struct vdev *)kmalloc(sizeof(struct vdev),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LINE_SPACING: Missing a blank line after declarations
#112: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3199:
+		int i;
+		for (i = cur_num_targets - 1; i >= value; i--)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#112: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3199:
+		for (i = cur_num_targets - 1; i >= value; i--)
+		{

WARNING:LINE_SPACING: Missing a blank line after declarations
#143: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3230:
+		int i;
+		for (i = cur_num_buses; i < value; i++) {

CHECK:SPACING: No space is necessary after a cast
#144: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3231:
+			tmpbus = (struct vbus *) kmalloc(sizeof(struct vbus),

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#144: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3231:
+			tmpbus = (struct vbus *) kmalloc(sizeof(struct vbus),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tmpbus)...) over kmalloc(sizeof(struct vbus)...)
#144: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3231:
+			tmpbus = (struct vbus *) kmalloc(sizeof(struct vbus),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "adapter->vbus[i]"
#160: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3247:
+			if (adapter->vbus[i] != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#177: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3264:
+		int i, j, active_target;
+		for (i = cur_num_buses - 1; i >= value; i--) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3275:
+				err("Can't remove bus%d, target%d active\n",
+					i, active_target);

WARNING:SPACING: space prohibited before semicolon
#189: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3276:
+				return ;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#212: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3299:
+static ssize_t vscsi_target_show(struct kobject * kobj,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#213: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3300:
+				 struct attribute * attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#213: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3300:
+				 struct attribute * attr, char * buf)

CHECK:BRACES: braces {} should be used on all arms of this statement
#225: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3312:
+	if (attr == &vscsi_target_device_attr)
[...]
+	else if (attr == &vscsi_target_active_attr)
[...]
+	else if (attr == &vscsi_target_ro_attr)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#231: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3318:
+	else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#233: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3320:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#241: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3328:
+static ssize_t vscsi_target_store(struct kobject * kobj,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#242: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3329:
+				  struct attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#243: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3330:
+				  const char * buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#251: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3338:
+	long value = simple_strtol(buf, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:BRACES: braces {} should be used on all arms of this statement
#258: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3345:
+	if (attr == &vscsi_target_device_attr) {
[...]
+	} else if (attr == &vscsi_target_active_attr) {
[...]
+	} else if (attr == &vscsi_target_ro_attr)
[...]
+	else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#260: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3347:
+		int i;
+		spin_lock_irqsave(&adapter->lock, flags);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#261: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3348:
+		i  = strlcpy(vdev->device_name, buf, TARGET_MAX_NAME_LEN);

WARNING:LINE_SPACING: Missing a blank line after declarations
#269: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3356:
+			int rc;
+			if (!vdev->disabled) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#285: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3372:
+		BUG();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#290: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3377:
+static struct attribute * vscsi_target_attrs[] = {

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#297: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3384:
+static struct sysfs_ops vscsi_target_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#309: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3396:
+static ssize_t vscsi_bus_show(struct kobject * kobj,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#310: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3397:
+			      struct attribute * attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#310: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3397:
+			      struct attribute * attr, char * buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#313: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3400:
+	struct vbus *vbus = container_of(kobj, struct vbus, kobj);
+	return sprintf(buf, "%d\n", atomic_read(&vbus->num_targets));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#316: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3403:
+static ssize_t vscsi_bus_store(struct kobject * kobj, struct attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#316: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3403:
+static ssize_t vscsi_bus_store(struct kobject * kobj, struct attribute * attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#317: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3404:
+static ssize_t vscsi_bus_store(struct kobject * kobj, struct attribute * attr,
+const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#317: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3404:
+const char * buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#320: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3407:
+	long value = simple_strtol(buf, NULL, 10);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#332: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3419:
+static struct attribute * vscsi_bus_attrs[] = {

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#337: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3424:
+static struct sysfs_ops vscsi_bus_ops = {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#349: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3436:
+static ssize_t vscsi_dev_bus_show(struct device * dev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#351: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3438:
+				  char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#359: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3446:
+static ssize_t vscsi_dev_sector_show(struct device * dev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#361: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3448:
+				     char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#369: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3456:
+static ssize_t vscsi_dev_bus_store(struct device * dev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#371: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3458:
+				   const char * buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#373: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3460:
+	long value = simple_strtol(buf, NULL, 10);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#382: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3469:
+static ssize_t vscsi_dev_sector_store(struct device * dev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#384: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3471:
+				      const char * buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#386: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3473:
+	long value = simple_strtol(buf, NULL, 10);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#398: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3485:
+static ssize_t vscsi_dev_debug_store(struct device * dev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#400: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3487:
+				     const char * buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#402: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3489:
+	long value = simple_strtol(buf, NULL, 10);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#408: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3495:
+static ssize_t vscsi_dev_debug_show(struct device * dev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#410: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3497:
+				    char * buf)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'vscsi_dev_debug_show' to 'debug_show' 'vscsi_dev_debug_store' to 'debug_store'
#413: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3500:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'vscsi_dev_bus_show' to 'num_buses_show' 'vscsi_dev_bus_store' to 'num_buses_store'
#416: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3503:
+static DEVICE_ATTR(num_buses, 0644, vscsi_dev_bus_show, vscsi_dev_bus_store);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'vscsi_dev_sector_show' to 'max_sectors_show' 'vscsi_dev_sector_store' to 'max_sectors_store'
#417: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3504:
+static DEVICE_ATTR(max_sectors, 0644, vscsi_dev_sector_show,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#431: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3518:
+static struct attribute * vscsi_stats_attrs[] = {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#443: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3530:
+static ssize_t vscsi_stats_show(struct kobject * kobj,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#444: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3531:
+				struct attribute * attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#444: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3531:
+				struct attribute * attr, char * buf)

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#446: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3533:
+	struct server_adapter *adapter= container_of(kobj,
 	                              ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#474: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3561:
+	BUG();

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#478: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3565:
+static struct sysfs_ops vscsi_stats_ops = {

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#505: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3641:
+	adapter->stats_kobj.ktype = & ktype_vscsi_stats;
 	                            ^

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#544: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3695:
 static struct vio_device_id ibmvscsis_device_table[] __devinitdata = {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000143154.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 41 errors, 26 warnings, 9 checks, 507 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000143154.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
