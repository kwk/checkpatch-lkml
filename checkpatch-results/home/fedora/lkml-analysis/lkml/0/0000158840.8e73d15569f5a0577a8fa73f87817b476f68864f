WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
* struct file cleanup : the very large file_ra_state is now allocated only on demand, using a dedicated "filp_ra_cache" slab.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#86: FILE: include/linux/fs.h:1483:
+extern struct file * get_empty_filp(int need_read_ahead);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#86: FILE: include/linux/fs.h:1483:
+extern struct file * get_empty_filp(int need_read_ahead);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#97: FILE: include/linux/fs.h:1518:
+extern void file_ra_state_init(struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#97: FILE: include/linux/fs.h:1518:
+extern void file_ra_state_init(struct file *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#107: FILE: include/linux/fs.h:1550:
+	return (struct file_ra_state *)(f+1);
 	                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#115: FILE: include/linux/fs.h:1557:
+				get_ra_state(filp),
 				             ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#140: FILE: mm/readahead.c:39:
+	struct file_ra_state *ra = get_ra_state(file);
+	ra->ra_pages = file->f_mapping->host->i_mapping->backing_dev_info->ra_pages;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#233: FILE: fs/file_table.c:85:
+	memset(f, 0, need_read_ahead ? sizeof(struct file) + sizeof(struct file_ra_state) : sizeof(struct file));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#275: FILE: fs/dcache.c:1738:
+	filp_ra_cachep = kmem_cache_create("filp_ra", sizeof(struct file) + sizeof(struct file_ra_state), 0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: fs/dcache.c:1739:
+	filp_ra_cachep = kmem_cache_create("filp_ra", sizeof(struct file) + sizeof(struct file_ra_state), 0,
+			SLAB_HWCACHE_ALIGN|SLAB_PANIC, filp_ctor, filp_dtor);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#276: FILE: fs/dcache.c:1739:
+			SLAB_HWCACHE_ALIGN|SLAB_PANIC, filp_ctor, filp_dtor);
 			                  ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#310: FILE: kernel/futex.c:664:
+	filp = get_empty_filp(FILP_NO_READ_AHEAD);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#348: FILE: fs/inotify.c:868:
+	filp = get_empty_filp(FILP_NO_READ_AHEAD);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#381: FILE: drivers/infiniband/core/uverbs_main.c:370:
+	filp = get_empty_filp(FILP_NO_READ_AHEAD);
 	^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000158840.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 9 warnings, 5 checks, 279 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000158840.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
