WARNING:TYPO_SPELLING: 'havent' may be misspelled - perhaps 'haven't'?
#39: 
havent been part of the discussions around the IO stalls issue take a look
^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#	           ChangeSet	1.1023  -> 1.1024

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#	drivers/ide/ide-probe.c	1.17    -> 1.18

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#	include/linux/pagemap.h	1.19    -> 1.20

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#	      kernel/ksyms.c	1.72    -> 1.73

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#	include/linux/elevator.h	1.5     -> 1.6

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#	drivers/block/ll_rw_blk.c	1.45    -> 1.46

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#	include/linux/blkdev.h	1.23    -> 1.24

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#	 fs/reiserfs/inode.c	1.47    -> 1.48

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#	        mm/filemap.c	1.81    -> 1.82

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#	drivers/scsi/scsi_lib.c	1.16    -> 1.17

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#	 drivers/scsi/scsi.c	1.17    -> 1.18

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#	         fs/buffer.c	1.86    -> 1.87

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
# 03/07/05	mason@suse.com	1.1024

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
# [PATCH] Fix potential IO hangs and increase interactiveness during heavy IO

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
# io-stalls-10:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
# ===== drivers/block/ll_rw_blk.c 1.45 vs edited =====

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#78: 
--- a/drivers/block/ll_rw_blk.c	Tue Jul  8 17:03:41 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#91: FILE: drivers/block/ll_rw_blk.c:184:
+		printk("blk_cleanup_queue: leaked sectors (%d)\n", atomic_read(&q->nr_sectors));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#111: FILE: drivers/block/ll_rw_blk.c:231:
+void blk_queue_throttle_sectors(request_queue_t * q, int active)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: drivers/block/ll_rw_blk.c:427:
+ ^I^Ilist_add(&rq->queue, &q->rq.free);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#143: FILE: drivers/block/ll_rw_blk.c:427:
+ ^I^Ilist_add(&rq->queue, &q->rq.free);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: drivers/block/ll_rw_blk.c:427:
+ ^I^Ilist_add(&rq->queue, &q->rq.free);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: drivers/block/ll_rw_blk.c:428:
+ ^I^Iq->rq.count++;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#144: FILE: drivers/block/ll_rw_blk.c:428:
+ ^I^Iq->rq.count++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/block/ll_rw_blk.c:428:
+ ^I^Iq->rq.count++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: drivers/block/ll_rw_blk.c:433:
+ ^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#149: FILE: drivers/block/ll_rw_blk.c:433:
+ ^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: drivers/block/ll_rw_blk.c:433:
+ ^I/*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: drivers/block/ll_rw_blk.c:434:
+ ^I * Wakeup waiters after both one quarter of the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#150: FILE: drivers/block/ll_rw_blk.c:434:
+ ^I * Wakeup waiters after both one quarter of the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: drivers/block/ll_rw_blk.c:435:
+ ^I * max-in-fligh queue and one quarter of the requests$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#151: FILE: drivers/block/ll_rw_blk.c:435:
+ ^I * max-in-fligh queue and one quarter of the requests$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: drivers/block/ll_rw_blk.c:436:
+ ^I * are available again.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#152: FILE: drivers/block/ll_rw_blk.c:436:
+ ^I * are available again.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: drivers/block/ll_rw_blk.c:437:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#153: FILE: drivers/block/ll_rw_blk.c:437:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: drivers/block/ll_rw_blk.c:442:
+ ^Iq->batch_sectors = max_queue_sectors / 4;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#158: FILE: drivers/block/ll_rw_blk.c:442:
+ ^Iq->batch_sectors = max_queue_sectors / 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: drivers/block/ll_rw_blk.c:442:
+ ^Iq->batch_sectors = max_queue_sectors / 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: drivers/block/ll_rw_blk.c:444:
+ ^Iq->max_queue_sectors = max_queue_sectors;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#160: FILE: drivers/block/ll_rw_blk.c:444:
+ ^Iq->max_queue_sectors = max_queue_sectors;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: drivers/block/ll_rw_blk.c:444:
+ ^Iq->max_queue_sectors = max_queue_sectors;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: drivers/block/ll_rw_blk.c:446:
+ ^IBUG_ON(!q->batch_sectors);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#162: FILE: drivers/block/ll_rw_blk.c:446:
+ ^IBUG_ON(!q->batch_sectors);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: drivers/block/ll_rw_blk.c:446:
+ ^IBUG_ON(!q->batch_sectors);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#162: FILE: drivers/block/ll_rw_blk.c:446:
+ 	BUG_ON(!q->batch_sectors);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: drivers/block/ll_rw_blk.c:447:
+ ^Iatomic_set(&q->nr_sectors, 0);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#163: FILE: drivers/block/ll_rw_blk.c:447:
+ ^Iatomic_set(&q->nr_sectors, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: drivers/block/ll_rw_blk.c:447:
+ ^Iatomic_set(&q->nr_sectors, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: drivers/block/ll_rw_blk.c:457:
+ ^Iint nr_requests, max_queue_sectors = MAX_QUEUE_SECTORS;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#178: FILE: drivers/block/ll_rw_blk.c:457:
+ ^Iint nr_requests, max_queue_sectors = MAX_QUEUE_SECTORS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: drivers/block/ll_rw_blk.c:457:
+ ^Iint nr_requests, max_queue_sectors = MAX_QUEUE_SECTORS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: drivers/block/ll_rw_blk.c:459:
+ ^IINIT_LIST_HEAD(&q->rq.free);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#180: FILE: drivers/block/ll_rw_blk.c:459:
+ ^IINIT_LIST_HEAD(&q->rq.free);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: drivers/block/ll_rw_blk.c:459:
+ ^IINIT_LIST_HEAD(&q->rq.free);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: drivers/block/ll_rw_blk.c:465:
+ ^Inr_requests = MAX_NR_REQUESTS;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#190: FILE: drivers/block/ll_rw_blk.c:465:
+ ^Inr_requests = MAX_NR_REQUESTS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: drivers/block/ll_rw_blk.c:465:
+ ^Inr_requests = MAX_NR_REQUESTS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: drivers/block/ll_rw_blk.c:466:
+ ^Iif (megs < 30) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#191: FILE: drivers/block/ll_rw_blk.c:466:
+ ^Iif (megs < 30) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/block/ll_rw_blk.c:466:
+ ^Iif (megs < 30) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: drivers/block/ll_rw_blk.c:467:
+  ^I^Inr_requests /= 2;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#192: FILE: drivers/block/ll_rw_blk.c:467:
+  ^I^Inr_requests /= 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/block/ll_rw_blk.c:467:
+  ^I^Inr_requests /= 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: drivers/block/ll_rw_blk.c:468:
+ ^I^Imax_queue_sectors /= 2;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#193: FILE: drivers/block/ll_rw_blk.c:468:
+ ^I^Imax_queue_sectors /= 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: drivers/block/ll_rw_blk.c:468:
+ ^I^Imax_queue_sectors /= 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: drivers/block/ll_rw_blk.c:469:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#194: FILE: drivers/block/ll_rw_blk.c:469:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/block/ll_rw_blk.c:469:
+ ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: drivers/block/ll_rw_blk.c:470:
+ ^I/* notice early if anybody screwed the defaults */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#195: FILE: drivers/block/ll_rw_blk.c:470:
+ ^I/* notice early if anybody screwed the defaults */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/block/ll_rw_blk.c:470:
+ ^I/* notice early if anybody screwed the defaults */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: drivers/block/ll_rw_blk.c:471:
+ ^IBUG_ON(!nr_requests);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#196: FILE: drivers/block/ll_rw_blk.c:471:
+ ^IBUG_ON(!nr_requests);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: drivers/block/ll_rw_blk.c:471:
+ ^IBUG_ON(!nr_requests);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#196: FILE: drivers/block/ll_rw_blk.c:471:
+ 	BUG_ON(!nr_requests);

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: drivers/block/ll_rw_blk.c:472:
+ ^IBUG_ON(!max_queue_sectors);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#197: FILE: drivers/block/ll_rw_blk.c:472:
+ ^IBUG_ON(!max_queue_sectors);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/block/ll_rw_blk.c:472:
+ ^IBUG_ON(!max_queue_sectors);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#197: FILE: drivers/block/ll_rw_blk.c:472:
+ 	BUG_ON(!max_queue_sectors);

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: drivers/block/ll_rw_blk.c:474:
+ ^Iblk_grow_request_list(q, nr_requests, max_queue_sectors);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#199: FILE: drivers/block/ll_rw_blk.c:474:
+ ^Iblk_grow_request_list(q, nr_requests, max_queue_sectors);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: drivers/block/ll_rw_blk.c:474:
+ ^Iblk_grow_request_list(q, nr_requests, max_queue_sectors);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: drivers/block/ll_rw_blk.c:476:
+ ^Iinit_waitqueue_head(&q->wait_for_requests);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#201: FILE: drivers/block/ll_rw_blk.c:476:
+ ^Iinit_waitqueue_head(&q->wait_for_requests);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: drivers/block/ll_rw_blk.c:476:
+ ^Iinit_waitqueue_head(&q->wait_for_requests);$

WARNING:MEMORY_BARRIER: memory barrier without comment
#378: FILE: drivers/block/ll_rw_blk.c:876:
+			smp_mb();

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#379: FILE: drivers/block/ll_rw_blk.c:877:
+			if (waitqueue_active(&q->wait_for_requests))

WARNING:TYPO_SPELLING: 'suprious' may be misspelled - perhaps 'spurious'?
#544: FILE: fs/buffer.c:167:
+		 * don't do a suprious unplug if we get a racy
 		              ^^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#684: FILE: include/linux/blkdev.h:241:
+extern int blk_grow_request_list(request_queue_t *q, int nr_requests, int max_queue_sectors);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#688: FILE: include/linux/blkdev.h:245:
+extern void blk_queue_throttle_sectors(request_queue_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#688: FILE: include/linux/blkdev.h:245:
+extern void blk_queue_throttle_sectors(request_queue_t *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#688: FILE: include/linux/blkdev.h:245:
+extern void blk_queue_throttle_sectors(request_queue_t *, int);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#705: FILE: include/linux/blkdev.h:291:
+static inline int blk_oversized_queue(request_queue_t * q)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#712: FILE: include/linux/blkdev.h:298:
+static inline int blk_oversized_queue_batch(request_queue_t * q)

WARNING:LINE_SPACING: Missing a blank line after declarations
#723: FILE: include/linux/blkdev.h:309:
+	request_queue_t *q = rq->q;
+	if (q && q->can_throttle) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#726: FILE: include/linux/blkdev.h:312:
+			printk("nr_sectors is %d\n", atomic_read(&q->nr_sectors));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#727: FILE: include/linux/blkdev.h:313:
+			BUG();

WARNING:LINE_SPACING: Missing a blank line after declarations
#735: FILE: include/linux/blkdev.h:321:
+	request_queue_t *q = rq->q;
+	if (q && q->can_throttle) {

WARNING:MEMORY_BARRIER: memory barrier without comment
#738: FILE: include/linux/blkdev.h:324:
+		smp_mb();

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#740: FILE: include/linux/blkdev.h:326:
+			if (waitqueue_active(&q->wait_for_requests))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#744: FILE: include/linux/blkdev.h:330:
+			printk("nr_sectors is %d\n", atomic_read(&q->nr_sectors));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#745: FILE: include/linux/blkdev.h:331:
+			BUG();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#782: FILE: include/linux/pagemap.h:100:
+extern void FASTCALL(wakeup_page_waiters(struct page * page));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#782: FILE: include/linux/pagemap.h:100:
+extern void FASTCALL(wakeup_page_waiters(struct page * page));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#810: FILE: mm/filemap.c:818:
+void wakeup_page_waiters(struct page * page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#812: FILE: mm/filemap.c:820:
+	wait_queue_head_t * head;

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#815: FILE: mm/filemap.c:823:
+	if (waitqueue_active(head))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000356762.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 30 errors, 90 warnings, 3 checks, 667 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000356762.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
