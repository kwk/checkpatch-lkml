WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#58: FILE: net/addrconf.h:58:
+extern int			ipv6_dev_get_saddr(struct net_device *ddev,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: ipv6/addrconf.c:219:
+        $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: ipv6/addrconf.c:219:
+        $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: ipv6/addrconf.c:219:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: ipv6/addrconf.c:251:
+                        return IPV6_ADDR_SCOPE_GLOBAL;                  /* section 2.2 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: ipv6/addrconf.c:251:
+                        return IPV6_ADDR_SCOPE_GLOBAL;                  /* section 2.2 */$

WARNING:LINE_SPACING: Missing a blank line after declarations
#164: FILE: ipv6/addrconf.c:272:
+		u32 xb = a1[i] ^ a2[i];
+		if (xb) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#166: FILE: ipv6/addrconf.c:274:
+			int j = 31;
+			xb = ntohl(xb);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#172: FILE: ipv6/addrconf.c:280:
+	return addrlen<<5;
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TABSTOP: Statements should start on a tabstop
#177: FILE: ipv6/addrconf.c:285:
+	 return addr_diff(a1->s6_addr, a2->s6_addr, sizeof(struct in6_addr));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#241: FILE: ipv6/addrconf.c:573:
+	struct addrselect_attrs candidate = {NULL,0,0,0,0,0,0,0,0};
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#241: FILE: ipv6/addrconf.c:573:
+	struct addrselect_attrs candidate = {NULL,0,0,0,0,0,0,0,0};
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#241: FILE: ipv6/addrconf.c:573:
+	struct addrselect_attrs candidate = {NULL,0,0,0,0,0,0,0,0};
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#241: FILE: ipv6/addrconf.c:573:
+	struct addrselect_attrs candidate = {NULL,0,0,0,0,0,0,0,0};
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#241: FILE: ipv6/addrconf.c:573:
+	struct addrselect_attrs candidate = {NULL,0,0,0,0,0,0,0,0};
 	                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#241: FILE: ipv6/addrconf.c:573:
+	struct addrselect_attrs candidate = {NULL,0,0,0,0,0,0,0,0};
 	                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#241: FILE: ipv6/addrconf.c:573:
+	struct addrselect_attrs candidate = {NULL,0,0,0,0,0,0,0,0};
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#241: FILE: ipv6/addrconf.c:573:
+	struct addrselect_attrs candidate = {NULL,0,0,0,0,0,0,0,0};
 	                                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#251: FILE: ipv6/addrconf.c:579:
+	for (dev = dev_base; dev; dev=dev->next) {
 	                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#274: FILE: ipv6/addrconf.c:587:
+		for (ifp=ifp0; ifp; ifp=ifp->if_next) {
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#274: FILE: ipv6/addrconf.c:587:
+		for (ifp=ifp0; ifp; ifp=ifp->if_next) {
 		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#275: FILE: ipv6/addrconf.c:588:
+			struct addrselect_attrs temp = {NULL,0,0,0,0,0,0,0,0};
 			                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#275: FILE: ipv6/addrconf.c:588:
+			struct addrselect_attrs temp = {NULL,0,0,0,0,0,0,0,0};
 			                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#275: FILE: ipv6/addrconf.c:588:
+			struct addrselect_attrs temp = {NULL,0,0,0,0,0,0,0,0};
 			                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#275: FILE: ipv6/addrconf.c:588:
+			struct addrselect_attrs temp = {NULL,0,0,0,0,0,0,0,0};
 			                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#275: FILE: ipv6/addrconf.c:588:
+			struct addrselect_attrs temp = {NULL,0,0,0,0,0,0,0,0};
 			                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#275: FILE: ipv6/addrconf.c:588:
+			struct addrselect_attrs temp = {NULL,0,0,0,0,0,0,0,0};
 			                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#275: FILE: ipv6/addrconf.c:588:
+			struct addrselect_attrs temp = {NULL,0,0,0,0,0,0,0,0};
 			                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#275: FILE: ipv6/addrconf.c:588:
+			struct addrselect_attrs temp = {NULL,0,0,0,0,0,0,0,0};
 			                                                  ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#276: FILE: ipv6/addrconf.c:589:
+			struct addrselect_attrs temp = {NULL,0,0,0,0,0,0,0,0};
+			update = 0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#282: FILE: ipv6/addrconf.c:595:
+			if (update < 0) {
+				continue;
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#290: FILE: ipv6/addrconf.c:603:
+				if (update > 0) {
[...]
+				} else if (update < 0) {
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#300: FILE: ipv6/addrconf.c:609:
+			if (update < 0) {
+				continue;
+			}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#310: FILE: ipv6/addrconf.c:617:
+			if (update < 0) {
+				continue;
+			}

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#339: FILE: ipv6/addrconf.c:624:
+			temp.device = daddr_dev ? daddr_dev == (ifp->idev ? ifp->idev->dev : daddr_dev) : 0;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BRACES: braces {} are not necessary for single statement blocks
#342: FILE: ipv6/addrconf.c:627:
+			if (update < 0) {
+				continue;
+			}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#350: FILE: ipv6/addrconf.c:635:
+			if (update < 0) {
+				continue;
 			}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#361: FILE: ipv6/addrconf.c:645:
+			if (update < 0) {
+				continue;
+			}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000429325.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 16 warnings, 2 checks, 348 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000429325.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
