WARNING:LEADING_SPACE: please, no spaces at the start of a line
#44: FILE: scripts/kconfig/conf.c:28:
+       set_random,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#45: FILE: scripts/kconfig/conf.c:29:
+        set_auto,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#45: FILE: scripts/kconfig/conf.c:29:
+        set_auto,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#46: FILE: scripts/kconfig/conf.c:30:
+       set_autochoice$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#54: FILE: scripts/kconfig/conf.c:69:
+static int auto_exec(const char* rule)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#56: FILE: scripts/kconfig/conf.c:71:
+        int pd[2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: scripts/kconfig/conf.c:71:
+        int pd[2];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#57: FILE: scripts/kconfig/conf.c:72:
+        pid_t childpid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: scripts/kconfig/conf.c:72:
+        pid_t childpid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#58: FILE: scripts/kconfig/conf.c:73:
+        char directory[128];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: scripts/kconfig/conf.c:73:
+        char directory[128];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: scripts/kconfig/conf.c:75:
+        /*$

WARNING:TYPO_SPELLING: 'dirctory' may be misspelled - perhaps 'directory'?
#61: FILE: scripts/kconfig/conf.c:76:
+         * reading the dirctory where the rules are
                        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: scripts/kconfig/conf.c:76:
+         * reading the dirctory where the rules are$

ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: scripts/kconfig/conf.c:77:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: scripts/kconfig/conf.c:78:
+        strncpy(directory,"scripts/kconfig/rules/",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: scripts/kconfig/conf.c:78:
+        strncpy(directory,"scripts/kconfig/rules/",$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#63: FILE: scripts/kconfig/conf.c:78:
+        strncpy(directory,"scripts/kconfig/rules/",
                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#64: FILE: scripts/kconfig/conf.c:78:
128);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#65: FILE: scripts/kconfig/conf.c:79:
+        strncpy(directory,"scripts/kconfig/rules/",
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#66: FILE: scripts/kconfig/conf.c:80:
+        strcat(directory, rule);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: scripts/kconfig/conf.c:80:
+        strcat(directory, rule);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#68: FILE: scripts/kconfig/conf.c:82:
+        pipe(pd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: scripts/kconfig/conf.c:82:
+        pipe(pd);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: scripts/kconfig/conf.c:84:
+        if (( childpid = fork() ) == 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: scripts/kconfig/conf.c:84:
+        if (( childpid = fork() ) == 0) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#70: FILE: scripts/kconfig/conf.c:84:
+        if (( childpid = fork() ) == 0) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#70: FILE: scripts/kconfig/conf.c:84:
+        if (( childpid = fork() ) == 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#70: FILE: scripts/kconfig/conf.c:84:
+        if (( childpid = fork() ) == 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#71: FILE: scripts/kconfig/conf.c:85:
+                dup2(pd[1], STDOUT_FILENO);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: scripts/kconfig/conf.c:85:
+                dup2(pd[1], STDOUT_FILENO);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#73: FILE: scripts/kconfig/conf.c:87:
+                close(pd[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: scripts/kconfig/conf.c:87:
+                close(pd[0]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: scripts/kconfig/conf.c:88:
+                close(pd[1]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: scripts/kconfig/conf.c:88:
+                close(pd[1]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: scripts/kconfig/conf.c:89:
+                 /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: scripts/kconfig/conf.c:90:
+                  *  calling the rule$

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: scripts/kconfig/conf.c:91:
+                  */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: scripts/kconfig/conf.c:92:
+                system(directory);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: scripts/kconfig/conf.c:92:
+                system(directory);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: scripts/kconfig/conf.c:93:
+                exit(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: scripts/kconfig/conf.c:93:
+                exit(0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: scripts/kconfig/conf.c:94:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: scripts/kconfig/conf.c:94:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: scripts/kconfig/conf.c:95:
+        close(pd[1]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: scripts/kconfig/conf.c:95:
+        close(pd[1]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: scripts/kconfig/conf.c:96:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: scripts/kconfig/conf.c:97:
+         *  waiting for the child process to complete$

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: scripts/kconfig/conf.c:98:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: scripts/kconfig/conf.c:99:
+         while ( wait ((int *) 0) != childpid)$

CHECK:SPACING: No space is necessary after a cast
#85: FILE: scripts/kconfig/conf.c:99:
+         while ( wait ((int *) 0) != childpid)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: scripts/kconfig/conf.c:99:
+         while ( wait ((int *) 0) != childpid)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 25)
#85: FILE: scripts/kconfig/conf.c:99:
+         while ( wait ((int *) 0) != childpid)
+                         continue;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#85: FILE: scripts/kconfig/conf.c:99:
+         while ( wait ((int *) 0) != childpid)

ERROR:SPACING: space prohibited after that open parenthesis '('
#85: FILE: scripts/kconfig/conf.c:99:
+         while ( wait ((int *) 0) != childpid)

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: scripts/kconfig/conf.c:100:
+                         continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: scripts/kconfig/conf.c:100:
+                         continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: scripts/kconfig/conf.c:101:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: scripts/kconfig/conf.c:102:
+         * reading from the pipe, that is the answer$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: scripts/kconfig/conf.c:103:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: scripts/kconfig/conf.c:104:
+        read( pd[0], line, 128 );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: scripts/kconfig/conf.c:104:
+        read( pd[0], line, 128 );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#91: FILE: scripts/kconfig/conf.c:104:
+        read( pd[0], line, 128 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#91: FILE: scripts/kconfig/conf.c:104:
+        read( pd[0], line, 128 );

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: scripts/kconfig/conf.c:105:
+        close(pd[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: scripts/kconfig/conf.c:105:
+        close(pd[0]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: scripts/kconfig/conf.c:106:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: scripts/kconfig/conf.c:106:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: scripts/kconfig/conf.c:112:
+       char *autopara;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: scripts/kconfig/conf.c:113:
+       size_t buflng;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: scripts/kconfig/conf.c:137:
+       case set_auto:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: scripts/kconfig/conf.c:138:
+                fflush(stdout);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: scripts/kconfig/conf.c:138:
+                fflush(stdout);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: scripts/kconfig/conf.c:139:
+                line[0] = '\n';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: scripts/kconfig/conf.c:139:
+                line[0] = '\n';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: scripts/kconfig/conf.c:140:
+                line[1] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: scripts/kconfig/conf.c:140:
+                line[1] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: scripts/kconfig/conf.c:141:
+                if (sym->autorule) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: scripts/kconfig/conf.c:141:
+                if (sym->autorule) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 23)
#113: FILE: scripts/kconfig/conf.c:141:
+                if (sym->autorule) {
+                       if (sym->autopara) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: scripts/kconfig/conf.c:142:
+                       if (sym->autopara) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: scripts/kconfig/conf.c:142:
+                       if (sym->autopara) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#114: FILE: scripts/kconfig/conf.c:142:
+                       if (sym->autopara) {
+                               buflng =

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: scripts/kconfig/conf.c:143:
+                               buflng =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: scripts/kconfig/conf.c:143:
+                               buflng =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: scripts/kconfig/conf.c:144:
+                               autopara = (char*)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: scripts/kconfig/conf.c:144:
+                               autopara = (char*)$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#117: FILE: scripts/kconfig/conf.c:144:
+                               autopara = (char*)

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: scripts/kconfig/conf.c:145:
+                               sprintf(autopara, "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: scripts/kconfig/conf.c:145:
+                               sprintf(autopara, "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: scripts/kconfig/conf.c:146:
+                               strcat(sym->autorule,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: scripts/kconfig/conf.c:146:
+                               strcat(sym->autorule,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: scripts/kconfig/conf.c:147:
+                               free(autopara);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: scripts/kconfig/conf.c:147:
+                               free(autopara);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: scripts/kconfig/conf.c:148:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: scripts/kconfig/conf.c:148:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: scripts/kconfig/conf.c:149:
+                        auto_exec(sym->autorule);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: scripts/kconfig/conf.c:149:
+                        auto_exec(sym->autorule);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: scripts/kconfig/conf.c:150:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: scripts/kconfig/conf.c:150:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: scripts/kconfig/conf.c:151:
+                if (line[0] == 'y') {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: scripts/kconfig/conf.c:151:
+                if (line[0] == 'y') {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: scripts/kconfig/conf.c:152:
+                       line[1] = '\n';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: scripts/kconfig/conf.c:152:
+                       line[1] = '\n';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: scripts/kconfig/conf.c:153:
+                        line[2] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: scripts/kconfig/conf.c:153:
+                        line[2] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: scripts/kconfig/conf.c:154:
+                        if$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: scripts/kconfig/conf.c:154:
+                        if$

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: scripts/kconfig/conf.c:155:
+                                line[0] = 'm';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: scripts/kconfig/conf.c:155:
+                                line[0] = 'm';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: scripts/kconfig/conf.c:156:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: scripts/kconfig/conf.c:156:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: scripts/kconfig/conf.c:157:
+               else if (line[0] == 'm') {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: scripts/kconfig/conf.c:157:
+               else if (line[0] == 'm') {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: scripts/kconfig/conf.c:158:
+                        line[1] = '\n';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: scripts/kconfig/conf.c:158:
+                        line[1] = '\n';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: scripts/kconfig/conf.c:159:
+                        line[2] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: scripts/kconfig/conf.c:159:
+                        line[2] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: scripts/kconfig/conf.c:160:
+                        if$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: scripts/kconfig/conf.c:160:
+                        if$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: scripts/kconfig/conf.c:161:
+                                line[0] = 'y';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: scripts/kconfig/conf.c:161:
+                                line[0] = 'y';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: scripts/kconfig/conf.c:162:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: scripts/kconfig/conf.c:162:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: scripts/kconfig/conf.c:163:
+               else if (line[0] == 'n') {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: scripts/kconfig/conf.c:163:
+               else if (line[0] == 'n') {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: scripts/kconfig/conf.c:164:
+                       line[1] = '\n';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: scripts/kconfig/conf.c:164:
+                       line[1] = '\n';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: scripts/kconfig/conf.c:165:
+                       line[2] = '0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: scripts/kconfig/conf.c:165:
+                       line[2] = '0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: scripts/kconfig/conf.c:166:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: scripts/kconfig/conf.c:166:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: scripts/kconfig/conf.c:167:
+               else printf("%c", line[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: scripts/kconfig/conf.c:167:
+               else printf("%c", line[0]);$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#145: FILE: scripts/kconfig/conf.c:167:
+               else printf("%c", line[0]);
                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: scripts/kconfig/conf.c:168:
+                return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: scripts/kconfig/conf.c:168:
+                return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: scripts/kconfig/conf.c:169:
+        case set_autochoice:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: scripts/kconfig/conf.c:169:
+        case set_autochoice:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: scripts/kconfig/conf.c:170:
+                fflush(stdout);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: scripts/kconfig/conf.c:170:
+                fflush(stdout);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: scripts/kconfig/conf.c:171:
+                line[0] = '\n';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: scripts/kconfig/conf.c:171:
+                line[0] = '\n';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: scripts/kconfig/conf.c:172:
+                line[1] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: scripts/kconfig/conf.c:172:
+                line[1] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: scripts/kconfig/conf.c:173:
+                if (sym->autorule) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: scripts/kconfig/conf.c:173:
+                if (sym->autorule) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: scripts/kconfig/conf.c:174:
+                       if (sym->autopara) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: scripts/kconfig/conf.c:174:
+                       if (sym->autopara) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: scripts/kconfig/conf.c:175:
+                               buflng =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: scripts/kconfig/conf.c:175:
+                               buflng =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: scripts/kconfig/conf.c:176:
+                               autopara = (char*)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: scripts/kconfig/conf.c:176:
+                               autopara = (char*)$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#155: FILE: scripts/kconfig/conf.c:176:
+                               autopara = (char*)

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: scripts/kconfig/conf.c:177:
+                               sprintf(autopara, "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: scripts/kconfig/conf.c:177:
+                               sprintf(autopara, "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: scripts/kconfig/conf.c:178:
+                               strcat(sym->autorule,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: scripts/kconfig/conf.c:178:
+                               strcat(sym->autorule,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: scripts/kconfig/conf.c:179:
+                               free(autopara);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: scripts/kconfig/conf.c:179:
+                               strcat(sym->autorule,
+                               free(autopara);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: scripts/kconfig/conf.c:179:
+                               free(autopara);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: scripts/kconfig/conf.c:180:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: scripts/kconfig/conf.c:180:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: scripts/kconfig/conf.c:181:
+                        auto_exec(sym->autorule);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: scripts/kconfig/conf.c:181:
+                        auto_exec(sym->autorule);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: scripts/kconfig/conf.c:182:
+                        if (line[0] == 'y') {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: scripts/kconfig/conf.c:182:
+                        if (line[0] == 'y') {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: scripts/kconfig/conf.c:183:
+                                fflush(stdout);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: scripts/kconfig/conf.c:183:
+                                fflush(stdout);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: scripts/kconfig/conf.c:184:
+                                fgets(line, 128,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: scripts/kconfig/conf.c:184:
+                                fgets(line, 128,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: scripts/kconfig/conf.c:185:
+                        }$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: scripts/kconfig/conf.c:185:
+                                fgets(line, 128,
+                        }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: scripts/kconfig/conf.c:185:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: scripts/kconfig/conf.c:186:
+                        else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: scripts/kconfig/conf.c:186:
+                        else {$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#169: FILE: scripts/kconfig/conf.c:186:
+                        }
+                        else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#169: FILE: scripts/kconfig/conf.c:186:
+                        else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: scripts/kconfig/conf.c:187:
+                                line[0] = 'n';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: scripts/kconfig/conf.c:187:
+                                line[0] = 'n';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: scripts/kconfig/conf.c:188:
+                                line[1] = '\n';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: scripts/kconfig/conf.c:188:
+                                line[1] = '\n';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: scripts/kconfig/conf.c:189:
+                                line[2] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: scripts/kconfig/conf.c:189:
+                                line[2] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: scripts/kconfig/conf.c:190:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: scripts/kconfig/conf.c:190:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: scripts/kconfig/conf.c:191:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: scripts/kconfig/conf.c:191:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: scripts/kconfig/conf.c:192:
+               else printf("%c", line[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: scripts/kconfig/conf.c:192:
+               else printf("%c", line[0]);$

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#175: FILE: scripts/kconfig/conf.c:192:
+               else printf("%c", line[0]);
+                return;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#175: FILE: scripts/kconfig/conf.c:192:
+               else printf("%c", line[0]);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#175: FILE: scripts/kconfig/conf.c:192:
+               }
+               else printf("%c", line[0]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: scripts/kconfig/conf.c:193:
+                return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: scripts/kconfig/conf.c:193:
+                return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: scripts/kconfig/conf.c:377:
+       char * autopara;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#185: FILE: scripts/kconfig/conf.c:377:
+       char * autopara;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: scripts/kconfig/conf.c:378:
+       size_t buflng;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: scripts/kconfig/conf.c:432:
+                        if (child->sym->autorule) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: scripts/kconfig/conf.c:432:
+                        if (child->sym->autorule) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 31)
#205: FILE: scripts/kconfig/conf.c:432:
+                        if (child->sym->autorule) {
+                               if

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: scripts/kconfig/conf.c:433:
+                               if$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: scripts/kconfig/conf.c:433:
+                               if$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: scripts/kconfig/conf.c:434:
+                                       buflng =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: scripts/kconfig/conf.c:434:
+                                       buflng =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: scripts/kconfig/conf.c:435:
+                                       autopara =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: scripts/kconfig/conf.c:435:
+                                       autopara =$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: scripts/kconfig/conf.c:436:
+                                      $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: scripts/kconfig/conf.c:436:
+                                      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: scripts/kconfig/conf.c:436:
+                                      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#214: FILE: scripts/kconfig/conf.c:437:
+                                                     $

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: scripts/kconfig/conf.c:437:
+                                                     $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#214: FILE: scripts/kconfig/conf.c:437:
+                                      
+                                                     

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: scripts/kconfig/conf.c:437:
+                                                     $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: scripts/kconfig/conf.c:439:
+                                      $

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: scripts/kconfig/conf.c:439:
+                                      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: scripts/kconfig/conf.c:439:
+                                      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: scripts/kconfig/conf.c:440:
+                                      $

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: scripts/kconfig/conf.c:440:
+                                      $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#218: FILE: scripts/kconfig/conf.c:440:
+                                      
+                                      

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: scripts/kconfig/conf.c:440:
+                                      $

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: scripts/kconfig/conf.c:441:
+                               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: scripts/kconfig/conf.c:441:
+                               }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#220: FILE: scripts/kconfig/conf.c:441:
+                                      
+                               }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: scripts/kconfig/conf.c:442:
+                              $

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: scripts/kconfig/conf.c:442:
+                              $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: scripts/kconfig/conf.c:442:
+                              $

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: scripts/kconfig/conf.c:443:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: scripts/kconfig/conf.c:443:
+                       }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#223: FILE: scripts/kconfig/conf.c:443:
+                              
+                       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: scripts/kconfig/conf.c:444:
+                       if(line[0]=='y') {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: scripts/kconfig/conf.c:444:
+                       if(line[0]=='y') {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#224: FILE: scripts/kconfig/conf.c:444:
+                       if(line[0]=='y') {
+                               sprintf(line, "%i",

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#224: FILE: scripts/kconfig/conf.c:444:
+                       if(line[0]=='y') {
                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#224: FILE: scripts/kconfig/conf.c:444:
+                       if(line[0]=='y') {

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: scripts/kconfig/conf.c:445:
+                               sprintf(line, "%i",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: scripts/kconfig/conf.c:445:
+                               sprintf(line, "%i",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: scripts/kconfig/conf.c:446:
+                               break;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: scripts/kconfig/conf.c:446:
+                               sprintf(line, "%i",
+                               break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: scripts/kconfig/conf.c:446:
+                               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: scripts/kconfig/conf.c:447:
+                       } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: scripts/kconfig/conf.c:447:
+                       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#228: FILE: scripts/kconfig/conf.c:447:
+                       } else {
+                               line[0] = '\n';

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: scripts/kconfig/conf.c:448:
+                               line[0] = '\n';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: scripts/kconfig/conf.c:448:
+                               line[0] = '\n';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: scripts/kconfig/conf.c:449:
+                               line[1] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: scripts/kconfig/conf.c:449:
+                               line[1] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: scripts/kconfig/conf.c:450:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: scripts/kconfig/conf.c:450:
+                       }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#233: FILE: scripts/kconfig/conf.c:452:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: scripts/kconfig/conf.c:474:
+                case set_auto:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: scripts/kconfig/conf.c:474:
+                case set_auto:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: scripts/kconfig/conf.c:475:
+                case set_autochoice:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: scripts/kconfig/conf.c:475:
+                case set_autochoice:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: scripts/kconfig/conf.c:621:
+                case 'a':$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: scripts/kconfig/conf.c:621:
+                case 'a':$

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: scripts/kconfig/conf.c:622:
+                        input_mode = set_auto;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: scripts/kconfig/conf.c:622:
+                        input_mode = set_auto;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: scripts/kconfig/conf.c:623:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: scripts/kconfig/conf.c:623:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: scripts/kconfig/conf.c:624:
+                case 'c':$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: scripts/kconfig/conf.c:624:
+                case 'c':$

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: scripts/kconfig/conf.c:625:
+                        input_mode = set_autochoice;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: scripts/kconfig/conf.c:625:
+                        input_mode = set_autochoice;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: scripts/kconfig/conf.c:626:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: scripts/kconfig/conf.c:626:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: scripts/kconfig/conf.c:691:
+        case set_auto:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: scripts/kconfig/conf.c:691:
+        case set_auto:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: scripts/kconfig/conf.c:692:
+        case set_autochoice:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: scripts/kconfig/conf.c:692:
+        case set_autochoice:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: scripts/kconfig/conf.c:702:
+                if (input_mode == ask_all ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: scripts/kconfig/conf.c:702:
+                if (input_mode == ask_all ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 23)
#275: FILE: scripts/kconfig/conf.c:702:
+                if (input_mode == ask_all ||
[...]
                        input_mode = ask_silent;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: scripts/kconfig/conf.c:703:
+                if (input_mode == ask_all ||
                        input_mode = ask_silent;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: scripts/kconfig/expr.h:70:
+       char *autorule;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: scripts/kconfig/expr.h:71:
+       char *autopara;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148239.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 138 errors, 125 warnings, 13 checks, 245 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148239.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
