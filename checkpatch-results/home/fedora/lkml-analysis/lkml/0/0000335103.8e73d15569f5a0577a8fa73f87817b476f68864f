WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
 drivers/i2c/busses/i2c-sis630.c |  494 ++++++++++++++++++++++++++++++++++++++++

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#40: 
--- a/drivers/i2c/busses/Kconfig	Mon Sep 22 16:15:46 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#50: FILE: drivers/i2c/busses/Kconfig:173:
+^I  If you say yes to this option, support will be included for the $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#53: FILE: drivers/i2c/busses/Kconfig:176:
+^I  This can also be built as a module which can be inserted and removed $

WARNING:TYPO_SPELLING: 'utilties' may be misspelled - perhaps 'utilities'?
#59: FILE: drivers/i2c/busses/Kconfig:182:
+	  You will also need the latest user-space utilties: you can find them
 	                                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: drivers/i2c/busses/Kconfig:183:
+^I  in the lm_sensors package, which you can download at $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#79: FILE: drivers/i2c/busses/i2c-sis630.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#80: FILE: drivers/i2c/busses/i2c-sis630.c:2:
+/*
+    i2c-sis630.c - Part of lm_sensors, Linux kernel modules for hardware

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: drivers/i2c/busses/i2c-sis630.c:3:
+              monitoring$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#96: FILE: drivers/i2c/busses/i2c-sis630.c:18:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#97: FILE: drivers/i2c/busses/i2c-sis630.c:19:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#101: FILE: drivers/i2c/busses/i2c-sis630.c:23:
+/*
+   Changes:

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: drivers/i2c/busses/i2c-sis630.c:25:
+   ^IFixed the typo in sis630_access (Thanks to Mark M. Hoffman)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#103: FILE: drivers/i2c/busses/i2c-sis630.c:25:
+   ^IFixed the typo in sis630_access (Thanks to Mark M. Hoffman)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: drivers/i2c/busses/i2c-sis630.c:38:
+   ^IAdded block data read/write support.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#116: FILE: drivers/i2c/busses/i2c-sis630.c:38:
+   ^IAdded block data read/write support.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#120: FILE: drivers/i2c/busses/i2c-sis630.c:42:
+/*
+   Status: beta

CHECK:LINE_SPACING: Please don't use multiple blank lines
#138: FILE: drivers/i2c/busses/i2c-sis630.c:60:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#175: FILE: drivers/i2c/busses/i2c-sis630.c:97:
+static int high_clock = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#179: FILE: drivers/i2c/busses/i2c-sis630.c:101:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#180: FILE: drivers/i2c/busses/i2c-sis630.c:102:
+static unsigned short acpi_base = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: drivers/i2c/busses/i2c-sis630.c:116:
+        int temp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/i2c/busses/i2c-sis630.c:116:
+        int temp;$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#197: FILE: drivers/i2c/busses/i2c-sis630.c:119:
+	if ((temp = sis630_read(SMB_CNT) & 0x03) != 0x00) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#198: FILE: drivers/i2c/busses/i2c-sis630.c:120:
+		dev_dbg(&adap->dev, "SMBus busy (%02x).Resetting...\n",temp);
 		                                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#202: FILE: drivers/i2c/busses/i2c-sis630.c:124:
+		if ((temp = sis630_read(SMB_CNT) & 0x03) != 0x00) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: drivers/i2c/busses/i2c-sis630.c:127:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/i2c/busses/i2c-sis630.c:127:
+                } else {$

WARNING:TYPO_SPELLING: 'Successfull' may be misspelled - perhaps 'Successful'?
#206: FILE: drivers/i2c/busses/i2c-sis630.c:128:
+			dev_dbg(&adap->dev, "Successfull!\n");
 			                     ^^^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: drivers/i2c/busses/i2c-sis630.c:130:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: drivers/i2c/busses/i2c-sis630.c:130:
+        }$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#226: FILE: drivers/i2c/busses/i2c-sis630.c:148:
+	sis630_write(SMBHOST_CNT,0x10 | (size & 0x07));
 	                        ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#259: FILE: drivers/i2c/busses/i2c-sis630.c:181:
+		/*
+		  TBD: Datasheet say:

ERROR:SPACING: space required after that ',' (ctx:VxV)
#282: FILE: drivers/i2c/busses/i2c-sis630.c:204:
+		sis630_write(SMB_CNT,(sis630_read(SMB_CNT) & ~0x20));
 		                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#313: FILE: drivers/i2c/busses/i2c-sis630.c:235:
+		for (i=1; i <= len; i++) {
 		      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#316: FILE: drivers/i2c/busses/i2c-sis630.c:238:
+			sis630_write(SMB_BYTE+(i-1)%8, data->block[i]);
 			                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#316: FILE: drivers/i2c/busses/i2c-sis630.c:238:
+			sis630_write(SMB_BYTE+(i-1)%8, data->block[i]);
 			                        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#316: FILE: drivers/i2c/busses/i2c-sis630.c:238:
+			sis630_write(SMB_BYTE+(i-1)%8, data->block[i]);
 			                           ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#317: FILE: drivers/i2c/busses/i2c-sis630.c:239:
+			if (i==8 || (len<8 && i==len)) {
 			     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#317: FILE: drivers/i2c/busses/i2c-sis630.c:239:
+			if (i==8 || (len<8 && i==len)) {
 			                ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#317: FILE: drivers/i2c/busses/i2c-sis630.c:239:
+			if (i==8 || (len<8 && i==len)) {
 			                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: drivers/i2c/busses/i2c-sis630.c:240:
+				dev_dbg(&adap->dev, "start trans len=%d i=%d\n",len ,i);
 				                                               ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#318: FILE: drivers/i2c/busses/i2c-sis630.c:240:
+				dev_dbg(&adap->dev, "start trans len=%d i=%d\n",len ,i);
 				                                                    ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#318: FILE: drivers/i2c/busses/i2c-sis630.c:240:
+				dev_dbg(&adap->dev, "start trans len=%d i=%d\n",len ,i);
 				                                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#323: FILE: drivers/i2c/busses/i2c-sis630.c:245:
+			else if ((i-1)%8 == 7 || i==len) {
 			           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#323: FILE: drivers/i2c/busses/i2c-sis630.c:245:
+			else if ((i-1)%8 == 7 || i==len) {
 			              ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#323: FILE: drivers/i2c/busses/i2c-sis630.c:245:
+			else if ((i-1)%8 == 7 || i==len) {
 			                          ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#323: FILE: drivers/i2c/busses/i2c-sis630.c:245:
+			}
+			else if ((i-1)%8 == 7 || i==len) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#324: FILE: drivers/i2c/busses/i2c-sis630.c:246:
+				dev_dbg(&adap->dev, "trans_wait len=%d i=%d\n",len,i);
 				                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#324: FILE: drivers/i2c/busses/i2c-sis630.c:246:
+				dev_dbg(&adap->dev, "trans_wait len=%d i=%d\n",len,i);
 				                                                  ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#325: FILE: drivers/i2c/busses/i2c-sis630.c:247:
+				if (i>8) {
 				     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#326: FILE: drivers/i2c/busses/i2c-sis630.c:248:
+					dev_dbg(&adap->dev, "clear smbary_sts len=%d i=%d\n",len,i);
 					                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#326: FILE: drivers/i2c/busses/i2c-sis630.c:248:
+					dev_dbg(&adap->dev, "clear smbary_sts len=%d i=%d\n",len,i);
 					                                                        ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#328: FILE: drivers/i2c/busses/i2c-sis630.c:250:
+					/*
+					   If this is not first transaction,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#332: FILE: drivers/i2c/busses/i2c-sis630.c:254:
+					sis630_write(SMB_STS,0x10);
 					                    ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#342: FILE: drivers/i2c/busses/i2c-sis630.c:264:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#342: FILE: drivers/i2c/busses/i2c-sis630.c:264:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#344: FILE: drivers/i2c/busses/i2c-sis630.c:266:
+		data->block[0] = len = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#345: FILE: drivers/i2c/busses/i2c-sis630.c:267:
+		if (sis630_transaction_start(adap, SIS630_BLOCK_DATA, &oldclock)) {
+			return -1;
+		}

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#360: FILE: drivers/i2c/busses/i2c-sis630.c:282:
+			for (i=0; i < 8 && len < data->block[0]; i++,len++) {
 			      ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#360: FILE: drivers/i2c/busses/i2c-sis630.c:282:
+			for (i=0; i < 8 && len < data->block[0]; i++,len++) {
 			                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#362: FILE: drivers/i2c/busses/i2c-sis630.c:284:
+				data->block[len+1] = sis630_read(SMB_BYTE+i);
 				               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#362: FILE: drivers/i2c/busses/i2c-sis630.c:284:
+				data->block[len+1] = sis630_read(SMB_BYTE+i);
 				                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#365: FILE: drivers/i2c/busses/i2c-sis630.c:287:
+			dev_dbg(&adap->dev, "clear smbary_sts len=%d i=%d\n",len,i);
 			                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#365: FILE: drivers/i2c/busses/i2c-sis630.c:287:
+			dev_dbg(&adap->dev, "clear smbary_sts len=%d i=%d\n",len,i);
 			                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#368: FILE: drivers/i2c/busses/i2c-sis630.c:290:
+			sis630_write(SMB_STS,0x10);
 			                    ^

ERROR:SPACING: space required before the open parenthesis '('
#369: FILE: drivers/i2c/busses/i2c-sis630.c:291:
+		} while(len < data->block[0]);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#382: FILE: drivers/i2c/busses/i2c-sis630.c:304:
+	switch (size) {
+		case I2C_SMBUS_QUICK:
[...]
+		case I2C_SMBUS_BYTE:
[...]
+		case I2C_SMBUS_BYTE_DATA:
[...]
+		case I2C_SMBUS_PROC_CALL:
+		case I2C_SMBUS_WORD_DATA:
[...]
+		case I2C_SMBUS_BLOCK_DATA:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required after that ',' (ctx:VxV)
#402: FILE: drivers/i2c/busses/i2c-sis630.c:324:
+			sis630_write(SMB_ADDR,((addr & 0x7f) << 1) | (read_write & 0x01));
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: drivers/i2c/busses/i2c-sis630.c:328:
+				sis630_write(SMB_BYTE + 1,(data->word & 0xff00) >> 8);
 				                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#411: FILE: drivers/i2c/busses/i2c-sis630.c:333:
+			sis630_write(SMB_ADDR,((addr & 0x7f) << 1) | (read_write & 0x01));
 			                     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#416: FILE: drivers/i2c/busses/i2c-sis630.c:338:
+			printk("Unsupported I2C size\n");

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#418: FILE: drivers/i2c/busses/i2c-sis630.c:340:
+			return -1;
+			break;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size != SIS630_PCALL'
#424: FILE: drivers/i2c/busses/i2c-sis630.c:346:
+	if ((size != SIS630_PCALL) &&
+		((read_write == I2C_SMBUS_WRITE) || (size == SIS630_QUICK))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'read_write == I2C_SMBUS_WRITE'
#424: FILE: drivers/i2c/busses/i2c-sis630.c:346:
+	if ((size != SIS630_PCALL) &&
+		((read_write == I2C_SMBUS_WRITE) || (size == SIS630_QUICK))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size == SIS630_QUICK'
#424: FILE: drivers/i2c/busses/i2c-sis630.c:346:
+	if ((size != SIS630_PCALL) &&
+		((read_write == I2C_SMBUS_WRITE) || (size == SIS630_QUICK))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#425: FILE: drivers/i2c/busses/i2c-sis630.c:347:
+	if ((size != SIS630_PCALL) &&
+		((read_write == I2C_SMBUS_WRITE) || (size == SIS630_QUICK))) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#429: FILE: drivers/i2c/busses/i2c-sis630.c:351:
+	switch(size) {
+		case SIS630_BYTE:
+		case SIS630_BYTE_DATA:
[...]
+		case SIS630_PCALL:
+		case SIS630_WORD_DATA:
[...]
+		default:

ERROR:SPACING: space required before the open parenthesis '('
#429: FILE: drivers/i2c/busses/i2c-sis630.c:351:
+	switch(size) {

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#440: FILE: drivers/i2c/busses/i2c-sis630.c:362:
+			return -1;
+			break;

WARNING:TYPO_SPELLING: 'accsess' may be misspelled - perhaps 'access'?
#467: FILE: drivers/i2c/busses/i2c-sis630.c:389:
+	   Enable ACPI first , so we can accsess reg 74-75
 	                                 ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#467: FILE: drivers/i2c/busses/i2c-sis630.c:389:
+	/*
+	   Enable ACPI first , so we can accsess reg 74-75

ERROR:SPACING: space required after that ',' (ctx:VxO)
#470: FILE: drivers/i2c/busses/i2c-sis630.c:392:
+	if (!pci_read_config_byte(sis630_dev, SIS630_BIOS_CTL_REG,&b)) {
 	                                                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#470: FILE: drivers/i2c/busses/i2c-sis630.c:392:
+	if (!pci_read_config_byte(sis630_dev, SIS630_BIOS_CTL_REG,&b)) {
 	                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#482: FILE: drivers/i2c/busses/i2c-sis630.c:404:
+	if (!pci_read_config_word(sis630_dev,SIS630_ACPI_BASE_REG,&acpi_base)) {
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#482: FILE: drivers/i2c/busses/i2c-sis630.c:404:
+	if (!pci_read_config_word(sis630_dev,SIS630_ACPI_BASE_REG,&acpi_base)) {
 	                                                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#482: FILE: drivers/i2c/busses/i2c-sis630.c:404:
+	if (!pci_read_config_word(sis630_dev,SIS630_ACPI_BASE_REG,&acpi_base)) {
 	                                                          ^

WARNING:SPLIT_STRING: quoted string split across lines
#492: FILE: drivers/i2c/busses/i2c-sis630.c:414:
+		dev_err(&sis630_dev->dev, "SMBus registers 0x%04x-0x%04x already "
+			"in use!\n", acpi_base + SMB_STS, acpi_base + SMB_SAA);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#503: FILE: drivers/i2c/busses/i2c-sis630.c:425:
+
+

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#517: FILE: drivers/i2c/busses/i2c-sis630.c:439:
+static struct pci_device_id sis630_ids[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#523: FILE: drivers/i2c/busses/i2c-sis630.c:445:
+static int __devinit sis630_probe(struct pci_dev *dev, const struct pci_device_id *id)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#525: FILE: drivers/i2c/busses/i2c-sis630.c:447:
+{
+

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#540: FILE: drivers/i2c/busses/i2c-sis630.c:462:
+static void __devexit sis630_remove(struct pci_dev *dev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#545: FILE: drivers/i2c/busses/i2c-sis630.c:467:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#555: FILE: drivers/i2c/busses/i2c-sis630.c:477:
+	printk("i2c-sis630.o version %s (%s)\n", I2C_VERSION, I2C_DATE);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#559: FILE: drivers/i2c/busses/i2c-sis630.c:481:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#566: FILE: drivers/i2c/busses/i2c-sis630.c:488:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000335103.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 52 errors, 25 warnings, 20 checks, 522 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000335103.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
