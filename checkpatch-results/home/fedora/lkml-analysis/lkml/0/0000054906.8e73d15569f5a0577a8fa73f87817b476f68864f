CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#57: FILE: arch/i386/kernel/process.c:543:
+}
+void disable_TSC(void)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#68: FILE: arch/i386/kernel/process.c:554:
+}
+void hard_enable_TSC(void)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#346: FILE: include/asm-i386/processor.h:260:
+extern void hard_disable_TSC(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#347: FILE: include/asm-i386/processor.h:261:
+extern void disable_TSC(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#348: FILE: include/asm-i386/processor.h:262:
+extern void hard_enable_TSC(void);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#367: FILE: include/asm-i386/thread_info.h:159:
+#define _TIF_NOTSC		(1<<TIF_NOTSC)
                   		  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#367: FILE: include/asm-i386/thread_info.h:159:
+#define _TIF_NOTSC		(1<<TIF_NOTSC)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#413: FILE: include/linux/seccomp.h:19:
+extern long prctl_get_seccomp(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#414: FILE: include/linux/seccomp.h:20:
+extern long prctl_set_seccomp(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#414: FILE: include/linux/seccomp.h:20:
+extern long prctl_set_seccomp(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000054906.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 1 warnings, 9 checks, 424 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000054906.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
