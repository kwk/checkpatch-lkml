WARNING:CONSIDER_KSTRTO: simple_strtoull is obsolete, use kstrtoull instead
#70: FILE: arch/ppc/boot/simple/pibs.c:92:
+	mac64 = simple_strtoull((char *)PIBS_MAC_BASE, 0, 16);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#74: FILE: arch/ppc/boot/simple/pibs.c:95:
+	mac64 = simple_strtoull((char *)(PIBS_MAC_BASE+PIBS_MAC_OFFSET), 0, 16);
 	                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: simple_strtoull is obsolete, use kstrtoull instead
#74: FILE: arch/ppc/boot/simple/pibs.c:95:
+	mac64 = simple_strtoull((char *)(PIBS_MAC_BASE+PIBS_MAC_OFFSET), 0, 16);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#77: FILE: arch/ppc/boot/simple/pibs.c:97:
+	mac64 = simple_strtoull((char *)(PIBS_MAC_BASE+PIBS_MAC_OFFSET*2), 0, 16);
 	                                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#77: FILE: arch/ppc/boot/simple/pibs.c:97:
+	mac64 = simple_strtoull((char *)(PIBS_MAC_BASE+PIBS_MAC_OFFSET*2), 0, 16);
 	                                                              ^

WARNING:CONSIDER_KSTRTO: simple_strtoull is obsolete, use kstrtoull instead
#77: FILE: arch/ppc/boot/simple/pibs.c:97:
+	mac64 = simple_strtoull((char *)(PIBS_MAC_BASE+PIBS_MAC_OFFSET*2), 0, 16);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#80: FILE: arch/ppc/boot/simple/pibs.c:99:
+	mac64 = simple_strtoull((char *)(PIBS_MAC_BASE+PIBS_MAC_OFFSET*3), 0, 16);
 	                                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#80: FILE: arch/ppc/boot/simple/pibs.c:99:
+	mac64 = simple_strtoull((char *)(PIBS_MAC_BASE+PIBS_MAC_OFFSET*3), 0, 16);
 	                                                              ^

WARNING:CONSIDER_KSTRTO: simple_strtoull is obsolete, use kstrtoull instead
#80: FILE: arch/ppc/boot/simple/pibs.c:99:
+	mac64 = simple_strtoull((char *)(PIBS_MAC_BASE+PIBS_MAC_OFFSET*3), 0, 16);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#774: FILE: arch/ppc/kernel/head_44x.S:188:
+^Ilis^Ir3,UART0_IO_BASE@h^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#790: FILE: arch/ppc/platforms/4xx/Kconfig:76:
+config LUAN
+	bool "Luan"
+	help
+	  This option enables support for the IBM PPC440SP evaluation board.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#876: FILE: arch/ppc/platforms/4xx/ibm440sp.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#877: FILE: arch/ppc/platforms/4xx/ibm440sp.c:2:
+ * arch/ppc/platforms/4xx/ibm440sp.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#906: FILE: arch/ppc/platforms/4xx/ibm440sp.c:31:
+^I.wol_irq        = 61,  ^I^I/* WOL interrupt number */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#911: FILE: arch/ppc/platforms/4xx/ibm440sp.c:36:
+};
+OCP_SYSFS_EMAC_DATA()

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#914: FILE: arch/ppc/platforms/4xx/ibm440sp.c:39:
+^I.num_tx_chans   = 4,    ^I/* Number of TX channels */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#915: FILE: arch/ppc/platforms/4xx/ibm440sp.c:40:
+^I.num_rx_chans   = 4,    ^I/* Number of RX channels */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#922: FILE: arch/ppc/platforms/4xx/ibm440sp.c:47:
+};
+OCP_SYSFS_MAL_DATA()

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#931: FILE: arch/ppc/platforms/4xx/ibm440sp.c:56:
+};
+OCP_SYSFS_IIC_DATA()

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1011: FILE: arch/ppc/platforms/4xx/ibm440sp.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1012: FILE: arch/ppc/platforms/4xx/ibm440sp.h:2:
+ * arch/ppc/platforms/4xx/ibm440sp.h

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1064: FILE: arch/ppc/platforms/4xx/ibm440sp.h:54:
+#define IBM_CPM_EMAC0  ^I^I0x00000020^I/* EMAC 0     */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1072: FILE: arch/ppc/platforms/4xx/ibm440sp.h:62:
+^I^I^I  ^I| IBM_CPM_EMAC2 | IBM_CPM_EMAC3 )$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1072: FILE: arch/ppc/platforms/4xx/ibm440sp.h:62:
+^I^I^I  ^I| IBM_CPM_EMAC2 | IBM_CPM_EMAC3 )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1072: FILE: arch/ppc/platforms/4xx/ibm440sp.h:62:
+			  	| IBM_CPM_EMAC2 | IBM_CPM_EMAC3 )

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1079: FILE: arch/ppc/platforms/4xx/luan.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1080: FILE: arch/ppc/platforms/4xx/luan.c:2:
+ * arch/ppc/platforms/4xx/luan.c

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#1117: FILE: arch/ppc/platforms/4xx/luan.c:39:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#1120: FILE: arch/ppc/platforms/4xx/luan.c:42:
+#include <asm/io.h>

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#1161: FILE: arch/ppc/platforms/4xx/luan.c:83:
+	seq_printf(m, "vendor\t\t: IBM\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#1162: FILE: arch/ppc/platforms/4xx/luan.c:84:
+	seq_printf(m, "machine\t\t: PPC440SP EVB (Luan)\n");

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#1221: FILE: arch/ppc/platforms/4xx/luan.c:143:
+#define PCIX_READW(offset) \
+	(readw((void *)((u32)pcix_reg_base+offset)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1222: FILE: arch/ppc/platforms/4xx/luan.c:144:
+	(readw((void *)((u32)pcix_reg_base+offset)))
 	                                  ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#1224: FILE: arch/ppc/platforms/4xx/luan.c:146:
+#define PCIX_WRITEW(value, offset) \
+	(writew(value, (void *)((u32)pcix_reg_base+offset)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1225: FILE: arch/ppc/platforms/4xx/luan.c:147:
+	(writew(value, (void *)((u32)pcix_reg_base+offset)))
 	                                          ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#1227: FILE: arch/ppc/platforms/4xx/luan.c:149:
+#define PCIX_WRITEL(value, offset) \
+	(writel(value, (void *)((u32)pcix_reg_base+offset)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1228: FILE: arch/ppc/platforms/4xx/luan.c:150:
+	(writel(value, (void *)((u32)pcix_reg_base+offset)))
 	                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1236: FILE: arch/ppc/platforms/4xx/luan.c:158:
+	for (i=0;i<3;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1236: FILE: arch/ppc/platforms/4xx/luan.c:158:
+	for (i=0;i<3;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1236: FILE: arch/ppc/platforms/4xx/luan.c:158:
+	for (i=0;i<3;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1236: FILE: arch/ppc/platforms/4xx/luan.c:158:
+	for (i=0;i<3;i++) {
 	            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1237: FILE: arch/ppc/platforms/4xx/luan.c:159:
+		pcix_reg_base = ioremap64(PCIX0_REG_BASE + i*PCIX_REG_OFFSET, PCIX_REG_SIZE);
 		                                            ^

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#1240: FILE: arch/ppc/platforms/4xx/luan.c:162:
+		PCIX_WRITEW(PCIX_READW(PCIX0_COMMAND) | PCI_COMMAND_IO | PCI_COMMAND_MEMORY | PCI_COMMAND_MASTER, PCIX0_COMMAND);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1255: FILE: arch/ppc/platforms/4xx/luan.c:177:
+		 * */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1257: FILE: arch/ppc/platforms/4xx/luan.c:179:
+		PCIX_WRITEL(0x80000000 | i*LUAN_PCIX_MEM_SIZE, PCIX0_POM0LAL);
 		                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1259: FILE: arch/ppc/platforms/4xx/luan.c:181:
+		PCIX_WRITEL(0x80000000 | i*LUAN_PCIX_MEM_SIZE, PCIX0_POM0PCIAL);
 		                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1289: FILE: arch/ppc/platforms/4xx/luan.c:211:
+	pci_init_resource(&hose->io_resource,
+			LUAN_PCIX_LOWER_IO,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1295: FILE: arch/ppc/platforms/4xx/luan.c:217:
+	pci_init_resource(&hose->mem_resources[0],
+			lower_mem,

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1373: FILE: arch/ppc/platforms/4xx/luan.c:295:
+	if (early_serial_setup(&port) != 0) {
+		printk("Early serial init of port 0 failed\n");
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1374: FILE: arch/ppc/platforms/4xx/luan.c:296:
+		printk("Early serial init of port 0 failed\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1382: FILE: arch/ppc/platforms/4xx/luan.c:304:
+	if (early_serial_setup(&port) != 0) {
+		printk("Early serial init of port 1 failed\n");
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1383: FILE: arch/ppc/platforms/4xx/luan.c:305:
+		printk("Early serial init of port 1 failed\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1391: FILE: arch/ppc/platforms/4xx/luan.c:313:
+	if (early_serial_setup(&port) != 0) {
+		printk("Early serial init of port 2 failed\n");
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1392: FILE: arch/ppc/platforms/4xx/luan.c:314:
+		printk("Early serial init of port 2 failed\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1406: FILE: arch/ppc/platforms/4xx/luan.c:328:
+        mtspr(SPRN_DBCR0, (DBCR0_TDE | DBCR0_IDM));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1406: FILE: arch/ppc/platforms/4xx/luan.c:328:
+        mtspr(SPRN_DBCR0, (DBCR0_TDE | DBCR0_IDM));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1420: FILE: arch/ppc/platforms/4xx/luan.c:342:
+        loops_per_jiffy = 50000000/HZ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1420: FILE: arch/ppc/platforms/4xx/luan.c:342:
+        loops_per_jiffy = 50000000/HZ;$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1420: FILE: arch/ppc/platforms/4xx/luan.c:342:
+        loops_per_jiffy = 50000000/HZ;
                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Root_RAM0>
#1427: FILE: arch/ppc/platforms/4xx/luan.c:349:
+		ROOT_DEV = Root_RAM0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Root_NFS>
#1431: FILE: arch/ppc/platforms/4xx/luan.c:353:
+		ROOT_DEV = Root_NFS;

CHECK:CAMELCASE: Avoid CamelCase: <Root_HDA1>
#1433: FILE: arch/ppc/platforms/4xx/luan.c:355:
+		ROOT_DEV = Root_HDA1;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1439: FILE: arch/ppc/platforms/4xx/luan.c:361:
+	printk("Luan port (MontaVista Software, Inc. <source@mvista.com>)\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1443: FILE: arch/ppc/platforms/4xx/luan.c:365:
+void __init platform_init(unsigned long r3, unsigned long r4,
+		unsigned long r5, unsigned long r6, unsigned long r7)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1470: FILE: arch/ppc/platforms/4xx/luan.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1471: FILE: arch/ppc/platforms/4xx/luan.h:2:
+ * arch/ppc/platforms/4xx/luan.h

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1498: FILE: arch/ppc/platforms/4xx/luan.h:29:
+#define PIBS_MAC_BASE		(PIBS_FLASH_BASE+0x1b0400)
                      		                ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1505: FILE: arch/ppc/platforms/4xx/luan.h:36:
+#define LUAN_BOOT_LARGE_FLASH(x)	(x & 0x40)

CHECK:SPACING: No space is necessary after a cast
#1519: FILE: arch/ppc/platforms/4xx/luan.h:50:
+#define UART0_IO_BASE	(u8 *) 0xa0000200

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1519: FILE: arch/ppc/platforms/4xx/luan.h:50:
+#define UART0_IO_BASE	(u8 *) 0xa0000200

CHECK:SPACING: No space is necessary after a cast
#1520: FILE: arch/ppc/platforms/4xx/luan.h:51:
+#define UART1_IO_BASE	(u8 *) 0xa0000300

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1520: FILE: arch/ppc/platforms/4xx/luan.h:51:
+#define UART1_IO_BASE	(u8 *) 0xa0000300

CHECK:SPACING: No space is necessary after a cast
#1521: FILE: arch/ppc/platforms/4xx/luan.h:52:
+#define UART2_IO_BASE	(u8 *) 0xa0000600

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1521: FILE: arch/ppc/platforms/4xx/luan.h:52:
+#define UART2_IO_BASE	(u8 *) 0xa0000600

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1527: FILE: arch/ppc/platforms/4xx/luan.h:58:
+		iomem_base: UART##num##_IO_BASE,		\
 		          ^

WARNING:INDENTED_LABEL: labels should not be indented
#1527: FILE: arch/ppc/platforms/4xx/luan.h:58:
+		iomem_base: UART##num##_IO_BASE,		\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1528: FILE: arch/ppc/platforms/4xx/luan.h:59:
+		io_type: SERIAL_IO_MEM},
 		       ^

WARNING:INDENTED_LABEL: labels should not be indented
#1528: FILE: arch/ppc/platforms/4xx/luan.h:59:
+		io_type: SERIAL_IO_MEM},

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1530: FILE: arch/ppc/platforms/4xx/luan.h:61:
+#define SERIAL_PORT_DFNS	\
+	STD_UART_OP(0)		\
+	STD_UART_OP(1)		\
+	STD_UART_OP(2)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1599: FILE: arch/ppc/platforms/4xx/ocotea.h:29:
+#define PIBS_MAC_BASE		(PIBS_FLASH_BASE+0xb0500)
                      		                ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1628: FILE: arch/ppc/syslib/ibm440sp_common.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1629: FILE: arch/ppc/syslib/ibm440sp_common.c:2:
+ * arch/ppc/syslib/ibm440sp_common.c

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1665: FILE: arch/ppc/syslib/ibm440sp_common.c:38:
+	for (i=0; i<2; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1665: FILE: arch/ppc/syslib/ibm440sp_common.c:38:
+	for (i=0; i<2; i++)
 	           ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1666: FILE: arch/ppc/syslib/ibm440sp_common.c:39:
+		switch (mfdcr(DCRN_MQ0_BS0BAS + i) & MQ0_CONFIG_SIZE_MASK) {
+			case MQ0_CONFIG_SIZE_8M:
[...]
+			case MQ0_CONFIG_SIZE_16M:
[...]
+			case MQ0_CONFIG_SIZE_32M:
[...]
+			case MQ0_CONFIG_SIZE_64M:
[...]
+			case MQ0_CONFIG_SIZE_128M:
[...]
+			case MQ0_CONFIG_SIZE_256M:
[...]
+			case MQ0_CONFIG_SIZE_512M:
[...]
+			case MQ0_CONFIG_SIZE_1G:
[...]
+			case MQ0_CONFIG_SIZE_2G:
[...]
+			default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1703: FILE: arch/ppc/syslib/ibm440sp_common.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1704: FILE: arch/ppc/syslib/ibm440sp_common.h:2:
+ * arch/ppc/syslib/ibm440sp_common.h

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1723: FILE: arch/ppc/syslib/ibm440sp_common.h:21:
+extern unsigned long __init ibm440sp_find_end_of_memory(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr >= PPC44x_IO_LO'
#1745: FILE: arch/ppc/syslib/ibm44x_common.c:42:
+	if ((addr >= PPC44x_IO_LO) && (addr <= PPC44x_IO_HI))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr <= PPC44x_IO_HI'
#1745: FILE: arch/ppc/syslib/ibm44x_common.c:42:
+	if ((addr >= PPC44x_IO_LO) && (addr <= PPC44x_IO_HI))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1844: FILE: include/asm-ppc/ibm44x.h:97:
 
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210393.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 37 warnings, 36 checks, 1889 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210393.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
