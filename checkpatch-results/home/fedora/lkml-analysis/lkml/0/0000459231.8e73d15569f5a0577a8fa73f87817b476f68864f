WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
Content-Disposition: attachment; filename=sched-updates-rml-2.4.19-pre8-ac1-1.patch

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#61: FILE: arch/alpha/mm/fault.c:199:
+		yield();

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#76: FILE: arch/arm/mm/fault-common.c:228:
+	yield();

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#78: FILE: arch/arm/mm/fault-common.c:229:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#90: FILE: arch/ia64/mm/fault.c:199:
+		yield();

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#104: FILE: arch/m68k/mm/fault.c:184:
+		yield();

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#118: FILE: arch/mips/mm/fault.c:214:
+		yield();

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#132: FILE: arch/mips64/mm/fault.c:243:
+		yield();

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#146: FILE: arch/ppc/mm/fault.c:200:
+		yield();

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#160: FILE: arch/s390/mm/fault.c:293:
+		yield();

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#174: FILE: arch/s390x/mm/fault.c:293:
+		yield();

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#187: FILE: arch/sh/mm/fault.c:210:
+		yield();

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#237: FILE: kernel/sched.c:1092:
+	if (lp.sched_priority < 0 || lp.sched_priority > MAX_USER_RT_PRIO-1)
 	                                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#246: FILE: kernel/sched.c:1113:
+		p->prio =3D MAX_USER_RT_PRIO-1 - p->rt_priority;
 		        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#246: FILE: kernel/sched.c:1113:
+		p->prio =3D MAX_USER_RT_PRIO-1 - p->rt_priority;
 		                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#255: FILE: kernel/sched.c:1236:
+		ret =3D MAX_USER_RT_PRIO-1;
 		    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#255: FILE: kernel/sched.c:1236:
+		ret =3D MAX_USER_RT_PRIO-1;
 		                        ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#275: FILE: kernel/sched.c:1542:
 }
+static int migration_thread(void * bind_cpu)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#275: FILE: kernel/sched.c:1542:
+static int migration_thread(void * bind_cpu)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#278: FILE: kernel/sched.c:1544:
+	int cpu =3D cpu_logical_map((int) (long) bind_cpu);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#278: FILE: kernel/sched.c:1544:
+	int cpu =3D cpu_logical_map((int) (long) bind_cpu);
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#279: FILE: kernel/sched.c:1545:
+	struct sched_param param =3D { sched_priority: MAX_RT_PRIO-1 };
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#279: FILE: kernel/sched.c:1545:
+	struct sched_param param =3D { sched_priority: MAX_RT_PRIO-1 };
 	                                                          ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#312: FILE: kernel/sched.c:1555:
+	if (cpu !=3D 0) {
 	        ^

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#314: FILE: kernel/sched.c:1557:
+			yield();

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#317: FILE: kernel/sched.c:1560:
+	printk("migration_task %d on cpu=3D%d\n", cpu, smp_processor_id());

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#318: FILE: kernel/sched.c:1561:
+	ret =3D setscheduler(0, SCHED_FIFO, &param);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#357: FILE: kernel/sched.c:1595:
+		cpu_src =3D p->thread_info->cpu;
 		        ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#364: FILE: kernel/sched.c:1599:
+		if (p->thread_info->cpu !=3D cpu_src) {
 		                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#371: FILE: kernel/sched.c:1605:
+			p->thread_info->cpu =3D cpu_dest;
 			                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#397: FILE: kernel/sched.c:1621:
+	current->cpus_allowed =3D 1UL << cpu_logical_map(0);
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#398: FILE: kernel/sched.c:1622:
+	for (cpu =3D 0; cpu < smp_num_cpus; cpu++) {
 	         ^

CHECK:SPACING: No space is necessary after a cast
#399: FILE: kernel/sched.c:1623:
+		if (kernel_thread(migration_thread, (void *) (long) cpu,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: kernel/sched.c:1624:
+		if (kernel_thread(migration_thread, (void *) (long) cpu,
 				CLONE_FS | CLONE_FILES | CLONE_SIGNAL) < 0)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#403: FILE: kernel/sched.c:1627:
+	current->cpus_allowed =3D -1L;
 	                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#403: FILE: kernel/sched.c:1627:
+	current->cpus_allowed =3D -1L;
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#414: FILE: kernel/sched.c:1628:
+	for (cpu =3D 0; cpu < smp_num_cpus; cpu++)
 	         ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000459231.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 13 warnings, 9 checks, 314 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000459231.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
