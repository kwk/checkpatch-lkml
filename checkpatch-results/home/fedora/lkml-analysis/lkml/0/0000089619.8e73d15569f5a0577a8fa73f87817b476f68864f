WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#67: FILE: drivers/leds/Kconfig:4:
+config NEW_LEDS
+	bool "LED Support"
+	help
+	  Say Y to enable Linux LED support.  This is not related to standard
+	  keyboard LEDs which are controlled via the input system.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#73: FILE: drivers/leds/Kconfig:10:
+config LEDS_CLASS
+	tristate "LED Class Support"
+	depends NEW_LEDS
+	help
+	  This option enables the led sysfs class in /sys/class/leds.  You'll
+	  need this to do anything useful with LEDs.  If unsure, say N.
+
+endmenu
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#87: FILE: drivers/leds/led-class.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: drivers/leds/led-class.c:40:
+static ssize_t led_brightness_store(struct class_device *dev,
+				const char *buf, size_t size)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#131: FILE: drivers/leds/led-class.c:45:
+	unsigned long state = simple_strtoul(buf, &after, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: drivers/leds/led-class.c:88:
+	led_cdev->class_dev = class_device_create(leds_class, NULL, 0,
+						parent, "%s", led_cdev->name);

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#175: FILE: drivers/leds/led-class.c:89:
+	if (unlikely(IS_ERR(led_cdev->class_dev)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: drivers/leds/led-class.c:96:
+	class_device_create_file(led_cdev->class_dev,
+				&class_device_attr_brightness);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#189: FILE: drivers/leds/led-class.c:103:
+	printk(KERN_INFO "Registered led device: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: drivers/leds/led-class.c:104:
+	printk(KERN_INFO "Registered led device: %s\n",
+			led_cdev->class_dev->class_id);

WARNING:TYPO_SPELLING: 'unreigister' may be misspelled - perhaps 'unregister'?
#198: FILE: drivers/leds/led-class.c:112:
+ * @led_cdev: the led device to unreigister
                                 ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: drivers/leds/led-class.c:119:
+	class_device_remove_file(led_cdev->class_dev,
+				&class_device_attr_brightness);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#239: FILE: drivers/leds/led-core.c:1:
+/*

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#262: FILE: drivers/leds/led-core.c:24:
+EXPORT_SYMBOL_GPL(leds_list);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#263: FILE: drivers/leds/led-core.c:25:
+EXPORT_SYMBOL_GPL(leds_list_lock);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#269: FILE: drivers/leds/leds.h:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: drivers/leds/leds.h:19:
+static inline void led_set_brightness(struct led_classdev *led_cdev,
+					enum led_brightness value)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#326: FILE: include/linux/leds.h:1:
+/*

CHECK:BIT_MACRO: Prefer using the BIT macro
#356: FILE: include/linux/leds.h:31:
+#define LED_SUSPENDED       (1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#360: FILE: include/linux/leds.h:35:
+	void (*brightness_set)(struct led_classdev *led_cdev,
+				enum led_brightness brightness);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#370: FILE: include/linux/leds.h:45:
+extern int led_classdev_register(struct device *parent,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: include/linux/leds.h:46:
+extern int led_classdev_register(struct device *parent,
+				struct led_classdev *led_cdev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#372: FILE: include/linux/leds.h:47:
+extern void led_classdev_unregister(struct led_classdev *led_cdev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#373: FILE: include/linux/leds.h:48:
+extern void led_classdev_suspend(struct led_classdev *led_cdev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#374: FILE: include/linux/leds.h:49:
+extern void led_classdev_resume(struct led_classdev *led_cdev);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000089619.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 12 warnings, 13 checks, 299 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000089619.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
