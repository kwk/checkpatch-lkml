ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#73: FILE: arch/i386/oprofile/nmi_timer_int.c:43:
+int __init op_nmi_timer_init(struct oprofile_operations * ops)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#88: FILE: arch/i386/oprofile/init.c:18:
+extern int op_nmi_init(struct oprofile_operations * ops);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#88: FILE: arch/i386/oprofile/init.c:18:
+extern int op_nmi_init(struct oprofile_operations * ops);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#89: FILE: arch/i386/oprofile/init.c:19:
+extern int op_nmi_timer_init(struct oprofile_operations * ops);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#89: FILE: arch/i386/oprofile/init.c:19:
+extern int op_nmi_timer_init(struct oprofile_operations * ops);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#90: FILE: arch/i386/oprofile/init.c:20:
+extern void op_nmi_exit(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160995.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 3 warnings, 0 checks, 56 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160995.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
