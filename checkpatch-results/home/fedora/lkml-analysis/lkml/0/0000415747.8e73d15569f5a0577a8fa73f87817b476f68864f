WARNING:TYPO_SPELLING: 'resouces' may be misspelled - perhaps 'resources'?
#23: 
resouces for PCMCIA cards in cardbus devices.
^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Appologies' may be misspelled - perhaps 'Apologies'?
#45: 
(Appologies in advance if I've messed this patch up - it got dug it
 ^^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#83: FILE: drivers/pci/setup-res.c:77:
+		struct resource *r = bus->resource[i];
+		if (!r)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#91: FILE: drivers/pci/setup-res.c:85:
+		/* We cannot allocate a non-prefetching resource
+		   from a prefetching area */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#91: FILE: drivers/pci/setup-res.c:85:
+		   from a prefetching area */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#115: FILE: drivers/pci/setup-res.c:117:
+	/* The bridge resources are special, as their
+	   size != alignment. Sizing routines return

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#116: FILE: drivers/pci/setup-res.c:118:
+	   required alignment in the "start" field. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#145: FILE: drivers/pcmcia/cardbus.c:422:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*res)...) over kmalloc(sizeof(struct resource)...)
#150: FILE: drivers/pcmcia/cardbus.c:427:
+	struct resource *res = kmalloc(sizeof(struct resource), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: drivers/pcmcia/cardbus.c:463:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#205: FILE: drivers/pcmcia/cardbus.c:482:
+	if (*base && *base < PCIBIOS_MIN_IO) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#213: FILE: drivers/pcmcia/cardbus.c:490:
+	if (ret == 0) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#239: FILE: drivers/pcmcia/cardbus.c:516:
+	if (ret == 0) {
[...]
+	} else {
[...]

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: drivers/pcmcia/cs.c:486:
+    release_cis_mem(s);$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#266: FILE: drivers/pcmcia/rsrc_mgr.c:60:
+int cb_alloc_mem(unsigned long *base, unsigned long num, unsigned long align,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#386: FILE: drivers/pcmcia/rsrc_mgr.c:240:
+	if (check_io_resource(i, 8))
 	    continue;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#395: FILE: drivers/pcmcia/rsrc_mgr.c:253:
+	if (check_io_resource(i, 8))
 	    continue;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#404: FILE: drivers/pcmcia/rsrc_mgr.c:305:
+		if ((check_mem_resource(j, step) == 0) &&
[...]
 		    break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#412: FILE: drivers/pcmcia/rsrc_mgr.c:312:
+		if ((check_mem_resource(j, 2*step) == 0) &&
[...]
 		    break;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#412: FILE: drivers/pcmcia/rsrc_mgr.c:312:
+		if ((check_mem_resource(j, 2*step) == 0) &&
 		                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: drivers/pcmcia/rsrc_mgr.c:355:
+    if (s->cap.cb_dev)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: drivers/pcmcia/rsrc_mgr.c:425:
+    if (s->cap.cb_dev) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: drivers/pcmcia/rsrc_mgr.c:426:
+    ^Iif (align == 0)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#434: FILE: drivers/pcmcia/rsrc_mgr.c:426:
+    ^Iif (align == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: drivers/pcmcia/rsrc_mgr.c:426:
+    ^Iif (align == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#434: FILE: drivers/pcmcia/rsrc_mgr.c:426:
+    	if (align == 0)
+    	    align++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: drivers/pcmcia/rsrc_mgr.c:427:
+    ^I    align++;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#435: FILE: drivers/pcmcia/rsrc_mgr.c:427:
+    ^I    align++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: drivers/pcmcia/rsrc_mgr.c:427:
+    ^I    align++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: drivers/pcmcia/rsrc_mgr.c:428:
+    ^Ireturn cb_alloc_io(base, num, align, name, s);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#436: FILE: drivers/pcmcia/rsrc_mgr.c:428:
+    ^Ireturn cb_alloc_io(base, num, align, name, s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: drivers/pcmcia/rsrc_mgr.c:428:
+    ^Ireturn cb_alloc_io(base, num, align, name, s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: drivers/pcmcia/rsrc_mgr.c:429:
+    }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#442: FILE: drivers/pcmcia/rsrc_mgr.c:434:
 	for (try = (try >= m->base) ? try : try+align;
[...]
+	    if (request_region(try, num, name) == 0) {

WARNING:TABSTOP: Statements should start on a tabstop
#446: FILE: drivers/pcmcia/rsrc_mgr.c:437:
+	    if (request_region(try, num, name) == 0) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: drivers/pcmcia/rsrc_mgr.c:454:
+    if (s->cap.cb_dev) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: drivers/pcmcia/rsrc_mgr.c:455:
+    ^Iif (align == 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#456: FILE: drivers/pcmcia/rsrc_mgr.c:455:
+    ^Iif (align == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: drivers/pcmcia/rsrc_mgr.c:455:
+    ^Iif (align == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#456: FILE: drivers/pcmcia/rsrc_mgr.c:455:
+    	if (align == 0)
+    	    align++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#457: FILE: drivers/pcmcia/rsrc_mgr.c:456:
+    ^I    align++;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#457: FILE: drivers/pcmcia/rsrc_mgr.c:456:
+    ^I    align++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: drivers/pcmcia/rsrc_mgr.c:456:
+    ^I    align++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: drivers/pcmcia/rsrc_mgr.c:458:
+    }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#470: FILE: drivers/pcmcia/rsrc_mgr.c:469:
+		if (request_mem_resource(try, num, name) == 0) {
 		    *base = try;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000415747.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 36 warnings, 3 checks, 394 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000415747.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
