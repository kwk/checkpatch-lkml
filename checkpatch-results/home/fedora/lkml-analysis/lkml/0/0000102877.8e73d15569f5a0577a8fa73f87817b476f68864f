ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#70: FILE: fs/sysfs/dir.c:91:
+static int init_relay_file(struct inode * inode)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#72: FILE: fs/sysfs/dir.c:93:
+	extern struct file_operations relay_file_operations;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONST_STRUCT: struct file_operations should normally be const
#72: FILE: fs/sysfs/dir.c:93:
+	extern struct file_operations relay_file_operations;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LINE_SPACING: Missing a blank line after declarations
#73: FILE: fs/sysfs/dir.c:94:
+	extern struct file_operations relay_file_operations;
+	inode->i_fop = &relay_file_operations;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#77: FILE: fs/sysfs/dir.c:98:
+static int init_relay_file(struct inode * inode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#90: FILE: fs/sysfs/dir.c:182:
+	struct relay_attribute * rel_attr = NULL;

WARNING:LINE_SPACING: Missing a blank line after declarations
#112: FILE: fs/sysfs/dir.c:214:
+		unsigned int size = rel_attr->subbuf_size * rel_attr->n_subbufs;
+		dentry->d_inode->i_size = ((size - 1) & PAGE_MASK) + PAGE_SIZE;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#127: FILE: fs/sysfs/inode.c:177:
+	struct relay_attribute * rel_attr;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#145: FILE: fs/sysfs/relay.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#194: FILE: fs/sysfs/relay.c:50:
+	BUG_ON(!kobj || !kobj->dentry || !attr);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#210: FILE: fs/sysfs/relay.c:66:
+	BUG_ON(!attr);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#246: FILE: include/linux/sysfs.h:99:
+void sysfs_remove_relay_file(struct kobject *, struct relay_attribute *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct relay_attribute *' should also have an identifier name
#246: FILE: include/linux/sysfs.h:99:
+void sysfs_remove_relay_file(struct kobject *, struct relay_attribute *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000102877.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 9 warnings, 0 checks, 179 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000102877.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
