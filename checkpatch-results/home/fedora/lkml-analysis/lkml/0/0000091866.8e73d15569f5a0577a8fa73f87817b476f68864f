WARNING:SPACING: space prohibited between function name and open parenthesis '('
#70: FILE: drivers/s390/block/dasd.c:74:
+	device = kzalloc(sizeof (struct dasd_device), GFP_ATOMIC);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*device)...) over kzalloc(sizeof (struct dasd_device)...)
#70: FILE: drivers/s390/block/dasd.c:74:
+	device = kzalloc(sizeof (struct dasd_device), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*cqr)...) over kzalloc(sizeof(struct dasd_ccw_req)...)
#82: FILE: drivers/s390/block/dasd.c:549:
+	cqr = kzalloc(sizeof(struct dasd_ccw_req), GFP_ATOMIC);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev_info)...) over kzalloc(sizeof(struct dcssblk_dev_info)...)
#118: FILE: drivers/s390/block/dcssblk.c:391:
+	dev_info = kzalloc(sizeof(struct dcssblk_dev_info), GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: drivers/s390/char/fs3270.c:371:
+	fp = kzalloc(sizeof(struct fs3270),GFP_KERNEL);
 	                                  ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fp)...) over kzalloc(sizeof(struct fs3270)...)
#135: FILE: drivers/s390/char/fs3270.c:371:
+	fp = kzalloc(sizeof(struct fs3270),GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*kbd)...) over kzalloc(sizeof(struct kbd_data)...)
#150: FILE: drivers/s390/char/keyboard.c:53:
+	kbd = kzalloc(sizeof(struct kbd_data), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*monpriv)...) over kzalloc(sizeof(struct mon_private)...)
#194: FILE: drivers/s390/char/monreader.c:260:
+	monpriv = kzalloc(sizeof(struct mon_private), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*monpriv->msg_array[i])...) over kzalloc(sizeof(struct mon_msg)...)
#202: FILE: drivers/s390/char/monreader.c:266:
+		monpriv->msg_array[i] = kzalloc(sizeof(struct mon_msg),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: drivers/s390/char/monreader.c:267:
+		monpriv->msg_array[i] = kzalloc(sizeof(struct mon_msg),
 						    GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*rq)...) over kzalloc(sizeof(struct raw3270_request)...)
#222: FILE: drivers/s390/char/raw3270.c:118:
+	rq = kzalloc(sizeof(struct raw3270_request), GFP_KERNEL | GFP_DMA);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*tcd)...) over kzalloc(sizeof(struct tape_class_device)...)
#237: FILE: drivers/s390/char/tape_class.c:47:
+	tcd = kzalloc(sizeof(struct tape_class_device), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*device)...) over kzalloc(sizeof(struct tape_device)...)
#254: FILE: drivers/s390/char/tape_core.c:456:
+	device = kzalloc(sizeof(struct tape_device), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*request)...) over kzalloc(sizeof(struct tape_request)...)
#273: FILE: drivers/s390/char/tape_core.c:660:
+	request = kzalloc(sizeof(struct tape_request), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*tp)...) over kzalloc(sizeof(struct tty3270)...)
#313: FILE: drivers/s390/char/tty3270.c:694:
+	tp = kzalloc(sizeof(struct tty3270), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev)...) over kzalloc(sizeof(struct device)...)
#347: FILE: drivers/s390/char/vmlogrdr.c:762:
+	dev = kzalloc(sizeof(struct device), GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#361: FILE: drivers/s390/cio/ccwgroup.c:160:
+	gdev = kzalloc(sizeof(*gdev) + argc*sizeof(gdev->cdev[0]), GFP_KERNEL);
 	                                   ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*chp)...) over kzalloc(sizeof(struct channel_path)...)
#377: FILE: drivers/s390/cio/chsc.c:1416:
+	chp = kzalloc(sizeof(struct channel_path), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*new_slow_sch)...) over kzalloc(sizeof(struct slow_subchannel)...)
#392: FILE: drivers/s390/cio/css.c:633:
+	new_slow_sch = kzalloc(sizeof(struct slow_subchannel), GFP_ATOMIC);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#407: FILE: drivers/s390/cio/device.c:829:
+	cdev = kzalloc (sizeof(*cdev), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*cdev->private)...) over kzalloc(sizeof(struct ccw_device_private)...)
#412: FILE: drivers/s390/cio/device.c:832:
+	cdev->private = kzalloc(sizeof(struct ccw_device_private),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*rdc_ccw)...) over kzalloc(sizeof(struct ccw1)...)
#430: FILE: drivers/s390/cio/device_ops.c:362:
+	rdc_ccw = kzalloc(sizeof(struct ccw1), GFP_KERNEL | GFP_DMA);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*rcd_ccw)...) over kzalloc(sizeof(struct ccw1)...)
#442: FILE: drivers/s390/cio/device_ops.c:428:
+	rcd_ccw = kzalloc(sizeof(struct ccw1), GFP_KERNEL | GFP_DMA);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*q)...) over kzalloc(sizeof(struct qdio_q)...)
#464: FILE: drivers/s390/cio/qdio.c:1689:
+		q = kzalloc(sizeof(struct qdio_q), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*q)...) over kzalloc(sizeof(struct qdio_q)...)
#483: FILE: drivers/s390/cio/qdio.c:1706:
+		q = kzalloc(sizeof(struct qdio_q), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*irq_ptr)...) over kzalloc(sizeof(struct qdio_irq)...)
#499: FILE: drivers/s390/cio/qdio.c:2983:
+	irq_ptr = kzalloc(sizeof(struct qdio_irq), GFP_KERNEL | GFP_DMA);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#517: FILE: drivers/s390/cio/qdio.c:3683:
+	indicators = kzalloc(sizeof(__u32)*(INDICATORS_PER_CACHELINE),
 	                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: drivers/s390/cio/qdio.c:3684:
+	indicators = kzalloc(sizeof(__u32)*(INDICATORS_PER_CACHELINE),
 				   GFP_KERNEL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#521: FILE: drivers/s390/cio/qdio.c:3685:
+       ^Iif (!indicators)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#521: FILE: drivers/s390/cio/qdio.c:3685:
+       ^Iif (!indicators)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: drivers/s390/cio/qdio.c:3685:
+       ^Iif (!indicators)$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*private_data_p)...) over kzalloc(sizeof(struct priv_data)...)
#534: FILE: drivers/s390/crypto/z90main.c:710:
+	private_data_p = kzalloc(sizeof(struct priv_data), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*hdware_blk_p)...) over kzalloc(sizeof(struct hdware_block)...)
#550: FILE: drivers/s390/crypto/z90main.c:2739:
+	hdware_blk_p = kzalloc(sizeof(struct hdware_block), GFP_ATOMIC);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*privptr)...) over kzalloc(sizeof(struct claw_privbk)...)
#581: FILE: drivers/s390/net/claw.c:313:
+	privptr = kzalloc(sizeof(struct claw_privbk), GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#627: FILE: drivers/s390/net/fsm.c:45:
+	m = kcalloc(nr_states*nr_events, sizeof(fsm_function_t), order);
 	                     ^

CHECK:CAMELCASE: Avoid CamelCase: <iucv_GeneralInterrupt>
#646: FILE: drivers/s390/net/iucv.c:389:
+	iucv_external_int_buffer = kzalloc(sizeof(iucv_GeneralInterrupt),

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#677: FILE: drivers/s390/net/iucv.c:795:
+		iucv_pathid_table = kcalloc(max_connections, sizeof(handler *),
+					GFP_ATOMIC);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*card)...) over kzalloc(sizeof(struct lcs_card)...)
#710: FILE: drivers/s390/net/lcs.c:184:
+	card = kzalloc(sizeof(struct lcs_card), GFP_KERNEL | GFP_DMA);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*reply)...) over kzalloc(sizeof(struct lcs_reply)...)
#722: FILE: drivers/s390/net/lcs.c:794:
+	reply = kzalloc(sizeof(struct lcs_reply), GFP_ATOMIC);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev)...) over kzalloc(sizeof(struct device)...)
#737: FILE: drivers/s390/net/netiucv.c:1731:
+	struct device *dev = kzalloc(sizeof(struct device), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*eddp)...) over kzalloc(sizeof(struct qeth_eddp_data)...)
#769: FILE: drivers/s390/net/qeth_eddp.c:392:
+	eddp = kzalloc(sizeof(struct qeth_eddp_data), GFP_ATOMIC);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ctx)...) over kzalloc(sizeof(struct qeth_eddp_context)...)
#780: FILE: drivers/s390/net/qeth_eddp.c:544:
+	ctx = kzalloc(sizeof(struct qeth_eddp_context), GFP_ATOMIC);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#830: FILE: drivers/s390/net/qeth_main.c:300:
+	card = kzalloc(sizeof(struct qeth_card), GFP_DMA|GFP_KERNEL);
 	                                                ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*card)...) over kzalloc(sizeof(struct qeth_card)...)
#830: FILE: drivers/s390/net/qeth_main.c:300:
+	card = kzalloc(sizeof(struct qeth_card), GFP_DMA|GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*reply)...) over kzalloc(sizeof(struct qeth_reply)...)
#843: FILE: drivers/s390/net/qeth_main.c:1633:
+	reply = kzalloc(sizeof(struct qeth_reply), GFP_ATOMIC);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#854: FILE: drivers/s390/net/qeth_main.c:3348:
+	qib_param_field = kzalloc(QDIO_MAX_BUFFERS_PER_Q * sizeof(char),
 			      GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#855: FILE: drivers/s390/net/qeth_main.c:3349:
+	qib_param_field = kzalloc(QDIO_MAX_BUFFERS_PER_Q * sizeof(char),
 			      GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#869: FILE: drivers/s390/net/qeth_main.c:4842:
+	if (!(qinfo.udata = kzalloc(qinfo.udata_len, GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required before the open brace '{'
#880: FILE: drivers/s390/net/qeth_main.c:4991:
+	if (!(qinfo.udata = kzalloc(qinfo.udata_len, GFP_KERNEL))){

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#880: FILE: drivers/s390/net/qeth_main.c:4991:
+	if (!(qinfo.udata = kzalloc(qinfo.udata_len, GFP_KERNEL))){

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*addr)...) over kzalloc(sizeof(struct qeth_ipaddr)...)
#893: FILE: drivers/s390/net/qeth_main.c:5600:
+	addr = kzalloc(sizeof(struct qeth_ipaddr), GFP_ATOMIC);

ERROR:SPACING: space required before the open brace '{'
#910: FILE: drivers/s390/net/qeth_sys.c:1148:
+	if (!(ipatoe = kzalloc(sizeof(struct qeth_ipato_entry), GFP_KERNEL))){

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#910: FILE: drivers/s390/net/qeth_sys.c:1148:
+	if (!(ipatoe = kzalloc(sizeof(struct qeth_ipato_entry), GFP_KERNEL))){

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ipatoe)...) over kzalloc(sizeof(struct qeth_ipato_entry)...)
#910: FILE: drivers/s390/net/qeth_sys.c:1148:
+	if (!(ipatoe = kzalloc(sizeof(struct qeth_ipato_entry), GFP_KERNEL))){

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev)...) over kzalloc(sizeof(struct device)...)
#926: FILE: drivers/s390/s390_rdev.c:30:
+	dev = kzalloc(sizeof(struct device), GFP_KERNEL);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091866.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 5 warnings, 43 checks, 739 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091866.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
