WARNING:TYPO_SPELLING: 'subcribed' may be misspelled - perhaps 'subscribed'?
#36: 
subcribed to the XFS mailing list), this patch may  be of value. It
^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#73: 
	g2PMqPQf030458 for <linux-xfs@oss.sgi.com>; Mon, 25 Mar 2002 16:52:25 -0600

WARNING:PATCH_PREFIX: patch prefix '..' exists, appears to be a -p0 patch

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#132: FILE: lilo-xfs.c:755:
name);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: lilo-xfs.c:758:
+    fprintf(errstd,"%7s%s -F \t\t\t\tforce install on XFS partition\n\t\t\=$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#137: FILE: lilo-xfs.c:758:
+    fprintf(errstd,"%7s%s -F \t\t\t\tforce install on XFS partition\n\t\t\=
                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#137: FILE: lilo-xfs.c:758:
+    fprintf(errstd,"%7s%s -F \t\t\t\tforce install on XFS partition\n\t\t\=
                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#137: FILE: lilo-xfs.c:758:
+    fprintf(errstd,"%7s%s -F \t\t\t\tforce install on XFS partition\n\t\t\=
                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#137: FILE: lilo-xfs.c:758:
+    fprintf(errstd,"%7s%s -F \t\t\t\tforce install on XFS partition\n\t\t\=
                                                                           ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#146: FILE: lilo-xfs.c:762:
 }
+int is_xfs(char* device)=20

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#146: FILE: lilo-xfs.c:762:
+int is_xfs(char* device)=20

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#146: FILE: lilo-xfs.c:762:
+int is_xfs(char* device)=20
                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: lilo-xfs.c:764:
+    FILE* mounts;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#148: FILE: lilo-xfs.c:764:
+    FILE* mounts;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: lilo-xfs.c:765:
+    unsigned char xfs_sig[] =3D {'X','F','S','B'};$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#149: FILE: lilo-xfs.c:765:
+    unsigned char xfs_sig[] =3D {'X','F','S','B'};
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#149: FILE: lilo-xfs.c:765:
+    unsigned char xfs_sig[] =3D {'X','F','S','B'};
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#149: FILE: lilo-xfs.c:765:
+    unsigned char xfs_sig[] =3D {'X','F','S','B'};
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#149: FILE: lilo-xfs.c:765:
+    unsigned char xfs_sig[] =3D {'X','F','S','B'};
                                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: lilo-xfs.c:766:
+    int got_xfs =3D 1, i;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#150: FILE: lilo-xfs.c:766:
+    int got_xfs =3D 1, i;
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: lilo-xfs.c:768:
+    if ((mounts =3D fopen(device, "rb")) =3D=3D NULL)=20$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#152: FILE: lilo-xfs.c:768:
+    if ((mounts =3D fopen(device, "rb")) =3D=3D NULL)=20
+    {   /* Just some insurance. If this does not exists, there's something

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#152: FILE: lilo-xfs.c:768:
+    if ((mounts =3D fopen(device, "rb")) =3D=3D NULL)=20
                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#152: FILE: lilo-xfs.c:768:
+    if ((mounts =3D fopen(device, "rb")) =3D=3D NULL)=20
                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#152: FILE: lilo-xfs.c:768:
+    if ((mounts =3D fopen(device, "rb")) =3D=3D NULL)=20
                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#152: FILE: lilo-xfs.c:768:
+    if ((mounts =3D fopen(device, "rb")) =3D=3D NULL)=20
                                                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#152: FILE: lilo-xfs.c:768:
+    if ((mounts =3D fopen(device, "rb")) =3D=3D NULL)=20

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#152: FILE: lilo-xfs.c:768:
+    if ((mounts =3D fopen(device, "rb")) =3D=3D NULL)=20

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: lilo-xfs.c:769:
+    {   /* Just some insurance. If this does not exists, there's something$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#154: FILE: lilo-xfs.c:770:
+    {   /* Just some insurance. If this does not exists, there's something
+	   seriously wrong here. How are you even in Linux in the first place?

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required after that ',' (ctx:VxV)
#156: FILE: lilo-xfs.c:772:
+	die("ERROR: I cannot find %s! Nothing done.\n",device);
 	                                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: lilo-xfs.c:773:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: lilo-xfs.c:775:
+    for (i =3D 0; (i < 4) && (got_xfs =3D=3D 1); i++)=20$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#159: FILE: lilo-xfs.c:775:
+    for (i =3D 0; (i < 4) && (got_xfs =3D=3D 1); i++)=20
            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#159: FILE: lilo-xfs.c:775:
+    for (i =3D 0; (i < 4) && (got_xfs =3D=3D 1); i++)=20
                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#159: FILE: lilo-xfs.c:775:
+    for (i =3D 0; (i < 4) && (got_xfs =3D=3D 1); i++)=20
                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#159: FILE: lilo-xfs.c:775:
+    for (i =3D 0; (i < 4) && (got_xfs =3D=3D 1); i++)=20
                                                      ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#159: FILE: lilo-xfs.c:775:
+    for (i =3D 0; (i < 4) && (got_xfs =3D=3D 1); i++)=20

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: lilo-xfs.c:776:
+      if (xfs_sig[i] =3D=3D fgetc(mounts)) got_xfs =3D 1; else got_xfs =3D=$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#160: FILE: lilo-xfs.c:776:
+      if (xfs_sig[i] =3D=3D fgetc(mounts)) got_xfs =3D 1; else got_xfs =3D=
                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#160: FILE: lilo-xfs.c:776:
+      if (xfs_sig[i] =3D=3D fgetc(mounts)) got_xfs =3D 1; else got_xfs =3D=
                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#160: FILE: lilo-xfs.c:776:
+      if (xfs_sig[i] =3D=3D fgetc(mounts)) got_xfs =3D 1; else got_xfs =3D=
                                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#160: FILE: lilo-xfs.c:776:
+      if (xfs_sig[i] =3D=3D fgetc(mounts)) got_xfs =3D 1; else got_xfs =3D=
                                                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#160: FILE: lilo-xfs.c:776:
+      if (xfs_sig[i] =3D=3D fgetc(mounts)) got_xfs =3D 1; else got_xfs =3D=
                                                                           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#160: FILE: lilo-xfs.c:776:
+      if (xfs_sig[i] =3D=3D fgetc(mounts)) got_xfs =3D 1; else got_xfs =3D=

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#160: FILE: lilo-xfs.c:776:
+      if (xfs_sig[i] =3D=3D fgetc(mounts)) got_xfs =3D 1; else got_xfs =3D=

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: lilo-xfs.c:779:
+    fclose(mounts);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: lilo-xfs.c:781:
+    return got_xfs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: lilo-xfs.c:789:
+    int force_xfs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: lilo-xfs.c:790:
+    char *boot_device =3D NULL;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#174: FILE: lilo-xfs.c:790:
+    char *boot_device =3D NULL;
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: lilo-xfs.c:804:
+    force_xfs =3D 0;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#184: FILE: lilo-xfs.c:804:
+    force_xfs =3D 0;
               ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#192: FILE: lilo-xfs.c:834:
+		boot_device =3D (char*)malloc((sizeof (char)) * 255);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#192: FILE: lilo-xfs.c:834:
+		boot_device =3D (char*)malloc((sizeof (char)) * 255);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#192: FILE: lilo-xfs.c:834:
+		boot_device =3D (char*)malloc((sizeof (char)) * 255);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#192: FILE: lilo-xfs.c:834:
+		boot_device =3D (char*)malloc((sizeof (char)) * 255);
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#193: FILE: lilo-xfs.c:835:
+		strcpy(boot_device,param);
 		                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: lilo-xfs.c:853:
+            case 'F':$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: lilo-xfs.c:853:
+            case 'F':$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: lilo-xfs.c:854:
+^I        if (!nowarn)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#202: FILE: lilo-xfs.c:854:
+	        if (!nowarn)
+		    fprintf(errstd,"WARNING: Forcing install on XFS partitions...\nBe pr=

ERROR:SPACING: space required after that ',' (ctx:VxV)
#203: FILE: lilo-xfs.c:855:
+		    fprintf(errstd,"WARNING: Forcing install on XFS partitions...\nBe pr=
 		                  ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#215: FILE: lilo-xfs.c:1138:
+	if (boot_device =3D=3D NULL)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#215: FILE: lilo-xfs.c:1138:
+	if (boot_device =3D=3D NULL)
+	{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#215: FILE: lilo-xfs.c:1138:
+	if (boot_device =3D=3D NULL)
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#215: FILE: lilo-xfs.c:1138:
+	if (boot_device =3D=3D NULL)
 	                   ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#215: FILE: lilo-xfs.c:1138:
+	if (boot_device =3D=3D NULL)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#217: FILE: lilo-xfs.c:1140:
+	    boot_device =3D (char*)malloc((sizeof (char)) * 255);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#217: FILE: lilo-xfs.c:1140:
+	    boot_device =3D (char*)malloc((sizeof (char)) * 255);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#217: FILE: lilo-xfs.c:1140:
+	    boot_device =3D (char*)malloc((sizeof (char)) * 255);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#217: FILE: lilo-xfs.c:1140:
+	    boot_device =3D (char*)malloc((sizeof (char)) * 255);
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#218: FILE: lilo-xfs.c:1141:
+	    strcpy(boot_device,cfg_get_strg(cf_options,"boot"));
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#218: FILE: lilo-xfs.c:1141:
+	    strcpy(boot_device,cfg_get_strg(cf_options,"boot"));
 	                                              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#220: FILE: lilo-xfs.c:1143:
+	if ((is_xfs(boot_device) =3D=3D 1) && (force_xfs =3D=3D 0)) die("root (%s=
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#220: FILE: lilo-xfs.c:1143:
+	if ((is_xfs(boot_device) =3D=3D 1) && (force_xfs =3D=3D 0)) die("root (%s=
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#220: FILE: lilo-xfs.c:1143:
+	if ((is_xfs(boot_device) =3D=3D 1) && (force_xfs =3D=3D 0)) die("root (%s=
 	                                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#220: FILE: lilo-xfs.c:1143:
+	if ((is_xfs(boot_device) =3D=3D 1) && (force_xfs =3D=3D 0)) die("root (%s=
 	                                                    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#220: FILE: lilo-xfs.c:1143:
+	if ((is_xfs(boot_device) =3D=3D 1) && (force_xfs =3D=3D 0)) die("root (%s=

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#220: FILE: lilo-xfs.c:1143:
+	if ((is_xfs(boot_device) =3D=3D 1) && (force_xfs =3D=3D 0)) die("root (%s=

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000467513.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 52 errors, 25 warnings, 4 checks, 90 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000467513.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
