WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
Content-Disposition: attachment; filename=A-thread_info_cleanup-2.5.45-4.patch

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
# This patch format is intended for GNU patch command version 2.5 or higher=

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#	           ChangeSet	1.855   -> 1.856 =20

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#	arch/i386/kernel/head.S	1.17    -> 1.18  =20

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#	include/asm-i386/thread_info.h	1.7     -> 1.8   =20

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#	include/asm-i386/page.h	1.19    -> 1.20  =20

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#	arch/i386/kernel/entry.S	1.37.1.2 -> 1.38.2.1

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
# 02/10/31	haveblue@elm3b96.(none)	1.856

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
# Merge elm3b96.(none):/work/dave/bk/linux-2.5

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
# into elm3b96.(none):/work/dave/bk/linux-2.5-thread_info_infra

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#66: 
--- a/arch/i386/kernel/entry.S	Thu Oct 31 11:10:55 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#94: FILE: arch/i386/kernel/head.S:18:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:BIT_MACRO: Prefer using the BIT macro
#115: FILE: include/asm-i386/page.h:6:
+#define PAGE_SIZE      (1UL << PAGE_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#117: FILE: include/asm-i386/page.h:8:
+#define PAGE_SIZE      (1 << PAGE_SHIFT)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#138: FILE: include/asm-i386/thread_info.h:58:
+#define THREAD_ORDER 1=20
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#138: FILE: include/asm-i386/thread_info.h:58:
+#define THREAD_ORDER 1=20

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#145: FILE: include/asm-i386/thread_info.h:64:
+^I.task^I^I=3D &tsk,         ^I\$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#145: FILE: include/asm-i386/thread_info.h:64:
+	.task		=3D &tsk,         	\
 	     		^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#145: FILE: include/asm-i386/thread_info.h:64:
+	.task		=3D &tsk,         	\
 	     		    ^

CHECK:SPACING: No space is necessary after a cast
#155: FILE: include/asm-i386/thread_info.h:76:
+#define alloc_thread_info() ((struct thread_info *) __get_free_pages(GFP_K=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#155: FILE: include/asm-i386/thread_info.h:76:
+#define alloc_thread_info() ((struct thread_info *) __get_free_pages(GFP_K=
                                                                           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#155: FILE: include/asm-i386/thread_info.h:76:
+#define alloc_thread_info() ((struct thread_info *) __get_free_pages(GFP_K=

CHECK:SPACING: No space is necessary after a cast
#157: FILE: include/asm-i386/thread_info.h:77:
+#define free_thread_info(ti) free_pages((unsigned long) (ti), THREAD_ORDER=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#157: FILE: include/asm-i386/thread_info.h:77:
+#define free_thread_info(ti) free_pages((unsigned long) (ti), THREAD_ORDER=
                                                                           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#157: FILE: include/asm-i386/thread_info.h:77:
+#define free_thread_info(ti) free_pages((unsigned long) (ti), THREAD_ORDER=

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#167: FILE: include/asm-i386/thread_info.h:85:
+	__asm__("andl %%esp,%0; ":"=3Dr" (ti) : "0" (~(THREAD_SIZE - 1)));
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#186: FILE: include/asm-i386/thread_info.h:93:
+	movl $-THREAD_SIZE, reg; \
 	      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#191: FILE: include/asm-i386/thread_info.h:96:
+#define GET_THREAD_INFO_WITH_ESP(reg) \
+	andl $-THREAD_SIZE, reg

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#192: FILE: include/asm-i386/thread_info.h:97:
+	andl $-THREAD_SIZE, reg
 	      ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#195: FILE: include/asm-i386/thread_info.h:99:
+#endif
+	=20

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#195: FILE: include/asm-i386/thread_info.h:99:
+	=20
 	^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000417910.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 19 warnings, 9 checks, 122 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000417910.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
