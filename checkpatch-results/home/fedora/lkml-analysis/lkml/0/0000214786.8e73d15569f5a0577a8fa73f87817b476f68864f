WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#56: 
Content-Type: text/x-patch; name=p00001_bind-acpi-devcore.patch; charset=UTF-8

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#83: FILE: drivers/acpi/glue.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#94: FILE: drivers/acpi/glue.c:12:
+#define DBG(x...) printk(PREFIX x)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#172: FILE: drivers/acpi/glue.c:90:
+do_root_bridge_busnr_callback (struct acpi_resource *resource, void *data)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'address.address_length > 0'
#183: FILE: drivers/acpi/glue.c:101:
+	if ((address.address_length > 0) &&
+	   (address.resource_type == ACPI_BUS_NUMBER_RANGE))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'address.resource_type == ACPI_BUS_NUMBER_RANGE'
#183: FILE: drivers/acpi/glue.c:101:
+	if ((address.address_length > 0) &&
+	   (address.resource_type == ACPI_BUS_NUMBER_RANGE))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: drivers/acpi/glue.c:102:
+	if ((address.address_length > 0) &&
+	   (address.resource_type == ACPI_BUS_NUMBER_RANGE))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: drivers/acpi/glue.c:118:
+	status = acpi_evaluate_integer(handle, METHOD_NAME__BBN, NULL,
+		(unsigned long *)&bbn);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#203: FILE: drivers/acpi/glue.c:121:
+		printk(KERN_INFO PREFIX

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: drivers/acpi/glue.c:137:
+	status = acpi_walk_resources(handle, METHOD_NAME__CRS,
+		do_root_bridge_busnr_callback, &bus);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#225: FILE: drivers/acpi/glue.c:143:
+		printk(KERN_INFO PREFIX

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#227: FILE: drivers/acpi/glue.c:145:
+			(char*)buffer.pointer);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: drivers/acpi/glue.c:165:
+	status = acpi_evaluate_integer(handle, METHOD_NAME__SEG, NULL,
+		&seg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#250: FILE: drivers/acpi/glue.c:168:
+		printk(KERN_INFO PREFIX

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#263: FILE: drivers/acpi/glue.c:181:
+		printk(KERN_ERR PREFIX

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#265: FILE: drivers/acpi/glue.c:183:
+			(char*)buffer.pointer);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: drivers/acpi/glue.c:203:
+	acpi_get_devices(PCI_ROOT_HID_STRING,
+		find_pci_rootbridge,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#303: FILE: drivers/acpi/glue.c:221:
+	struct acpi_find_child *find = (struct acpi_find_child*)context;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: drivers/acpi/glue.c:241:
+	acpi_walk_namespace(ACPI_TYPE_DEVICE, parent,
+		1, do_acpi_find_child,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: drivers/acpi/glue.c:249:
+static void acpi_glue_data_handler(acpi_handle handle,
+	u32 function, void *context)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#354: FILE: drivers/acpi/glue.c:272:
+		printk(KERN_WARNING PREFIX

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#381: FILE: drivers/acpi/glue.c:299:
+		printk(KERN_ERR PREFIX

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#387: FILE: drivers/acpi/glue.c:305:
+static int acpi_platform_notify (struct device *dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#400: FILE: drivers/acpi/glue.c:318:
+		printk(KERN_INFO PREFIX "No ACPI bus support for %s\n", dev->bus_id);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#404: FILE: drivers/acpi/glue.c:322:
+	if ((ret = type->find_device(dev, &handle)) != 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#405: FILE: drivers/acpi/glue.c:323:
+		printk(KERN_INFO PREFIX "Can't get handler for %s\n", dev->bus_id);

CHECK:BRACES: braces {} should be used on all arms of this statement
#411: FILE: drivers/acpi/glue.c:329:
+	if (!ret) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#417: FILE: drivers/acpi/glue.c:335:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#435: FILE: drivers/acpi/glue.c:353:
+		printk(KERN_ERR PREFIX "Can't use platform_notify\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#483: FILE: include/acpi/acpi_bus.h:340:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#492: FILE: include/acpi/acpi_bus.h:349:
+	int (*find_device)(struct device *, acpi_handle*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_handle*' should also have an identifier name
#492: FILE: include/acpi/acpi_bus.h:349:
+	int (*find_device)(struct device *, acpi_handle*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#494: FILE: include/acpi/acpi_bus.h:351:
+	int (*find_bridge)(struct device *, acpi_handle *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_handle *' should also have an identifier name
#494: FILE: include/acpi/acpi_bus.h:351:
+	int (*find_bridge)(struct device *, acpi_handle *);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#496: FILE: include/acpi/acpi_bus.h:353:
+};
+int register_acpi_bus_type(struct acpi_bus_type *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct acpi_bus_type *' should also have an identifier name
#496: FILE: include/acpi/acpi_bus.h:353:
+int register_acpi_bus_type(struct acpi_bus_type *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct acpi_bus_type *' should also have an identifier name
#497: FILE: include/acpi/acpi_bus.h:354:
+int unregister_acpi_bus_type(struct acpi_bus_type *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_handle' should also have an identifier name
#498: FILE: include/acpi/acpi_bus.h:355:
+struct device *acpi_get_physical_device(acpi_handle);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_handle' should also have an identifier name
#500: FILE: include/acpi/acpi_bus.h:357:
+acpi_handle acpi_get_child(acpi_handle, acpi_integer);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_integer' should also have an identifier name
#500: FILE: include/acpi/acpi_bus.h:357:
+acpi_handle acpi_get_child(acpi_handle, acpi_integer);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#501: FILE: include/acpi/acpi_bus.h:358:
+acpi_handle acpi_get_pci_rootbridge_handle(unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#501: FILE: include/acpi/acpi_bus.h:358:
+acpi_handle acpi_get_pci_rootbridge_handle(unsigned int, unsigned int);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#517: FILE: include/linux/device.h:272:
+	void		*platform_data;	/* Platform specific data, device
+					   core doesn't touch it */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#517: FILE: include/linux/device.h:272:
+					   core doesn't touch it */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#519: FILE: include/linux/device.h:274:
+	void		*firmware_data; /* Firmware specific data (e.g. ACPI,
+					   BIOS data),reserved for device core*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#519: FILE: include/linux/device.h:274:
+					   BIOS data),reserved for device core*/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#549: FILE: drivers/pci/pci-acpi.c:214:
+	struct pci_dev * pci_dev;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#628: FILE: drivers/pci/pci-acpi.c:213:
+static int acpi_pci_choose_state(struct pci_dev *pdev,
+	pm_message_t state)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'state >= PM_SUSPEND_MAX'
#636: FILE: drivers/pci/pci-acpi.c:221:
+	if ((state >= PM_SUSPEND_MAX) || !DEVICE_ACPI_HANDLE(dev))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#640: FILE: drivers/pci/pci-acpi.c:225:
+	status = acpi_evaluate_integer(DEVICE_ACPI_HANDLE(dev), dstate_str,
+		NULL, &val);

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#643: FILE: drivers/pci/pci-acpi.c:228:
+	return -EINVAL;;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#678: FILE: drivers/pci/pci.h:16:
+extern int (*platform_pci_choose_state)(struct pci_dev *pdev,
+	pm_message_t state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#784: FILE: drivers/pci/pci.h:19:
+extern int (*platform_pci_set_power_state)(struct pci_dev *pdev,
+	pci_power_t state);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214786.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 30 warnings, 18 checks, 603 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214786.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
