WARNING:TYPO_SPELLING: 'concurent' may be misspelled - perhaps 'concurrent'?
#39: 
	o [CRITICA] Safe concurent reading of discovery log
	                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
diff -urpN old-linux/include/net/irda/discovery.h linux/include/net/irda/discovery.h

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#150: FILE: net/irda/af_irda.c:369:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#202: FILE: net/irda/af_irda.c:635:
+	 * making our ias query, le log might change... */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!discoveries"
#208: FILE: net/irda/af_irda.c:638:
+	if (discoveries == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#250: FILE: net/irda/af_irda.c:646:
+	for(i = 0; i < number; i++) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#254: FILE: net/irda/af_irda.c:650:
+		IRDA_DEBUG(1, __FUNCTION__ "(), trying daddr = %08x\n",

ERROR:SPACING: space required before the open parenthesis '('
#262: FILE: net/irda/af_irda.c:658:
+			if(daddr != DEV_ADDR_ANY) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#263: FILE: net/irda/af_irda.c:659:
+				IRDA_DEBUG(1, __FUNCTION__

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#282: FILE: net/irda/af_irda.c:675:
+			IRDA_DEBUG(0, __FUNCTION__

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#287: FILE: net/irda/af_irda.c:680:
+			return(-EHOSTUNREACH);
+			break;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!discoveries"
#327: FILE: net/irda/af_irda.c:2001:
+		if (discoveries == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#333: FILE: net/irda/af_irda.c:2006:
+^I^Iif (copy_to_user(optval, &list, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#380: FILE: net/irda/af_irda.c:2019:
+		if (copy_to_user(optval+offset, discoveries, total - offset))
 		                       ^

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#476: FILE: net/irda/discovery.c:213:
+	discovery_t *			discovery;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#478: FILE: net/irda/discovery.c:215:
+	struct irda_device_info *	buffer;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pn"
#482: FILE: net/irda/discovery.c:219:
+	ASSERT(pn != NULL, return NULL;);

ERROR:SPACING: space required before the open parenthesis '('
#485: FILE: net/irda/discovery.c:222:
+	if(log == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!log"
#485: FILE: net/irda/discovery.c:222:
+	if(log == NULL)

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#493: FILE: net/irda/discovery.c:230:
+	buffer = kmalloc(n * sizeof(struct irda_device_info), GFP_ATOMIC);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buffer"
#494: FILE: net/irda/discovery.c:231:
+	if (buffer == NULL) {

CHECK:SPACING: No space is necessary after a cast
#499: FILE: net/irda/discovery.c:236:
+	discovery = (discovery_t *) hashbin_get_first(log);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "discovery"
#500: FILE: net/irda/discovery.c:237:
+	while ((discovery != NULL) && (i < n)) {

CHECK:SPACING: No space is necessary after a cast
#513: FILE: net/irda/discovery.c:250:
+		discovery = (discovery_t *) hashbin_get_next(log);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#520: FILE: net/irda/discovery.c:257:
+	return(buffer);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#571: FILE: net/irda/irlmp.c:769:
+/*
+ * Function irlmp_get_discoveries (pn, mask)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#579: FILE: net/irda/irlmp.c:777:
+	return(irlmp_copy_discoveries(irlmp->cachelog, pn, mask));

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#591: FILE: net/irda/irmod.c:149:
+EXPORT_SYMBOL(sysctl_discovery_timeout);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000566810.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 11 warnings, 9 checks, 512 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000566810.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
