WARNING:TYPO_SPELLING: 'instad' may be misspelled - perhaps 'instead'?
#64: 
 - spot the platforms that align u32 on a two-byte boundary instad of a 
                                                            ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#69: 
Thanks to Arthur Corliss, Albert Cahalan and Ragnar Kjørstad for their
                                                      ^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#75: 
--- linux-2.6.5-rc1/include/linux/acct.h	2004-02-04 04:43:17.000000000 +0100

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#151: FILE: include/linux/acct.h:73:
+struct acct_v2
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#195: FILE: include/linux/acct.h:126:
+typedef struct acct_v2 acct_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#199: FILE: include/linux/acct.h:130:
+typedef struct acct acct_t;

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#212: FILE: include/linux/acct.h:143:
+#if (HZ % AHZ)==0
               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#215: FILE: include/linux/acct.h:146:
+# define jiffies_to_AHZ(x) ((clock_t) jiffies_64_to_AHZ((u64) x))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#222: FILE: include/linux/acct.h:153:
+#elseif (HZ % AHZ)==0

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#222: FILE: include/linux/acct.h:153:
+#elseif (HZ % AHZ)==0
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: include/linux/acct.h:159:
+       return x;$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#269: FILE: kernel/acct.c:305:
+#if ACCT_VERSION==1
                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:WxV)
#282: FILE: kernel/acct.c:318:
+#define MAXEXP2         ((1 <<EXPSIZE2) - 1)    /* Maximum exponent. */
                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: kernel/acct.c:322:
+        int exp, rnd;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: kernel/acct.c:322:
+        int exp, rnd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: kernel/acct.c:324:
+        exp = (value > (MAXFRACT2>>1));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: kernel/acct.c:324:
+        exp = (value > (MAXFRACT2>>1));$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#288: FILE: kernel/acct.c:324:
+        exp = (value > (MAXFRACT2>>1));
                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: kernel/acct.c:325:
+        rnd = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: kernel/acct.c:325:
+        rnd = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: kernel/acct.c:326:
+        while (value > MAXFRACT2) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: kernel/acct.c:326:
+        while (value > MAXFRACT2) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: kernel/acct.c:327:
+                rnd = value & 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: kernel/acct.c:327:
+                rnd = value & 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: kernel/acct.c:328:
+                value >>= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: kernel/acct.c:328:
+                value >>= 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: kernel/acct.c:329:
+                exp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: kernel/acct.c:329:
+                exp++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: kernel/acct.c:330:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: kernel/acct.c:330:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: kernel/acct.c:332:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: kernel/acct.c:333:
+         * If we need to round up, do it (and handle overflow correctly).$

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: kernel/acct.c:334:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: kernel/acct.c:335:
+        if (rnd && (++value > MAXFRACT2)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: kernel/acct.c:335:
+        if (rnd && (++value > MAXFRACT2)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: kernel/acct.c:336:
+                value >>= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: kernel/acct.c:336:
+                value >>= 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: kernel/acct.c:337:
+                exp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: kernel/acct.c:337:
+                exp++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: kernel/acct.c:338:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: kernel/acct.c:338:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: kernel/acct.c:340:
+        if (exp > MAXEXP2) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: kernel/acct.c:340:
+        if (exp > MAXEXP2) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: kernel/acct.c:341:
+                /* Overflow. Return largest representable number instead. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: kernel/acct.c:342:
+                return (1ul << (MANTSIZE2+EXPSIZE2-1)) - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: kernel/acct.c:342:
+                return (1ul << (MANTSIZE2+EXPSIZE2-1)) - 1;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#306: FILE: kernel/acct.c:342:
+                return (1ul << (MANTSIZE2+EXPSIZE2-1)) - 1;
                                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#306: FILE: kernel/acct.c:342:
+                return (1ul << (MANTSIZE2+EXPSIZE2-1)) - 1;
                                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: kernel/acct.c:343:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: kernel/acct.c:343:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: kernel/acct.c:344:
+                return (value & (MAXFRACT2>>1)) | (exp << (MANTSIZE2-1));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: kernel/acct.c:344:
+                return (value & (MAXFRACT2>>1)) | (exp << (MANTSIZE2-1));$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#308: FILE: kernel/acct.c:344:
+                return (value & (MAXFRACT2>>1)) | (exp << (MANTSIZE2-1));
                                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#308: FILE: kernel/acct.c:344:
+                return (value & (MAXFRACT2>>1)) | (exp << (MANTSIZE2-1));
                                                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: kernel/acct.c:345:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: kernel/acct.c:345:
+        }$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#313: FILE: kernel/acct.c:349:
+#if ACCT_VERSION==2
                 ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#319: FILE: kernel/acct.c:355:
+	unsigned exp = 190;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#320: FILE: kernel/acct.c:356:
+	unsigned u;

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#322: FILE: kernel/acct.c:358:
+	if (value==0) return 0;
 	         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#322: FILE: kernel/acct.c:358:
+	if (value==0) return 0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open brace '{'
#323: FILE: kernel/acct.c:359:
+	while ((s64)value > 0){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: kernel/acct.c:365:
+} $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#361: FILE: kernel/acct.c:406:
+#if ACCT_VERSION==2
                 ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#368: FILE: kernel/acct.c:412:
+#if ACCT_VERSION==1
                 ^

CHECK:SPACING: No space is necessary after a cast
#372: FILE: kernel/acct.c:416:
+	ac.ac_etime_lo = (u16) etime;

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#383: FILE: kernel/acct.c:424:
+#if ACCT_VERSION==1
                 ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#389: FILE: kernel/acct.c:430:
+#if ACCT_VERSION==2
                 ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000294803.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 34 errors, 25 warnings, 9 checks, 317 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000294803.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
