WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: drivers/rtc/rtc-sa1100.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#99: FILE: drivers/rtc/rtc-sa1100.c:33:
+#include <asm/bitops.h>

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#109: FILE: drivers/rtc/rtc-sa1100.c:43:
+#define RTC_DEF_DIVIDER		32768 - 1

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#130: FILE: drivers/rtc/rtc-sa1100.c:64:
+		RTSR = RTSR & (RTSR_HZE|RTSR_ALE|RTSR_AL);
 		                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#130: FILE: drivers/rtc/rtc-sa1100.c:64:
+		RTSR = RTSR & (RTSR_HZE|RTSR_ALE|RTSR_AL);
 		                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: drivers/rtc/rtc-sa1100.c:72:
+static irqreturn_t sa1100_rtc_interrupt(int irq, void *dev_id,
+		struct pt_regs *regs)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: drivers/rtc/rtc-sa1100.c:110:
+static irqreturn_t timer1_interrupt(int irq, void *dev_id,
+		struct pt_regs *regs)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#193: FILE: drivers/rtc/rtc-sa1100.c:127:
+		rtc_timer1_count = (rtc_freq * ((1<<30)/(TIMER_FREQ>>2)));
 		                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#193: FILE: drivers/rtc/rtc-sa1100.c:127:
+		rtc_timer1_count = (rtc_freq * ((1<<30)/(TIMER_FREQ>>2)));
 		                                       ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#193: FILE: drivers/rtc/rtc-sa1100.c:127:
+		rtc_timer1_count = (rtc_freq * ((1<<30)/(TIMER_FREQ>>2)));
 		                                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#202: FILE: drivers/rtc/rtc-sa1100.c:136:
+		unsigned long period = TIMER_FREQ/rtc_freq;
 		                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#205: FILE: drivers/rtc/rtc-sa1100.c:139:
+		unsigned long missed = (oscr - osmr1)/period;
 		                                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#206: FILE: drivers/rtc/rtc-sa1100.c:140:
+		unsigned long missed = (oscr - osmr1)/period;
+		data += missed << 8;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#208: FILE: drivers/rtc/rtc-sa1100.c:142:
+		OSMR1 = osmr1 + (missed + 1)*period;
 		                            ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#213: FILE: drivers/rtc/rtc-sa1100.c:147:
+		while( (signed long)((osmr1 = OSMR1) - OSCR) <= 8 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#213: FILE: drivers/rtc/rtc-sa1100.c:147:
+		while( (signed long)((osmr1 = OSMR1) - OSCR) <= 8 ) {

ERROR:SPACING: space required before the open parenthesis '('
#213: FILE: drivers/rtc/rtc-sa1100.c:147:
+		while( (signed long)((osmr1 = OSMR1) - OSCR) <= 8 ) {

CHECK:CAMELCASE: Avoid CamelCase: <IRQ_RTC1Hz>
#226: FILE: drivers/rtc/rtc-sa1100.c:160:
+	ret = request_irq(IRQ_RTC1Hz, sa1100_rtc_interrupt, SA_INTERRUPT,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: drivers/rtc/rtc-sa1100.c:161:
+	ret = request_irq(IRQ_RTC1Hz, sa1100_rtc_interrupt, SA_INTERRUPT,
+				"rtc 1Hz", dev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#229: FILE: drivers/rtc/rtc-sa1100.c:163:
+		printk(KERN_ERR "rtc: IRQ%d already in use.\n", IRQ_RTC1Hz);

CHECK:CAMELCASE: Avoid CamelCase: <IRQ_RTCAlrm>
#232: FILE: drivers/rtc/rtc-sa1100.c:166:
+	ret = request_irq(IRQ_RTCAlrm, sa1100_rtc_interrupt, SA_INTERRUPT,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: drivers/rtc/rtc-sa1100.c:167:
+	ret = request_irq(IRQ_RTCAlrm, sa1100_rtc_interrupt, SA_INTERRUPT,
+				"rtc Alrm", dev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#235: FILE: drivers/rtc/rtc-sa1100.c:169:
+		printk(KERN_ERR "rtc: IRQ%d already in use.\n", IRQ_RTCAlrm);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: drivers/rtc/rtc-sa1100.c:173:
+	ret = request_irq(IRQ_OST1, timer1_interrupt, SA_INTERRUPT,
+				"rtc timer", dev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#241: FILE: drivers/rtc/rtc-sa1100.c:175:
+		printk(KERN_ERR "rtc: IRQ%d already in use.\n", IRQ_OST1);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#267: FILE: drivers/rtc/rtc-sa1100.c:201:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#269: FILE: drivers/rtc/rtc-sa1100.c:203:
+static int sa1100_rtc_ioctl(struct device *dev, unsigned int cmd,
+		unsigned long arg)

ERROR:SPACING: space required before the open parenthesis '('
#271: FILE: drivers/rtc/rtc-sa1100.c:205:
+	switch(cmd) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rtc_freq > 64'
#298: FILE: drivers/rtc/rtc-sa1100.c:232:
+		if ((rtc_freq > 64) && !capable(CAP_SYS_RESOURCE))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#301: FILE: drivers/rtc/rtc-sa1100.c:235:
+		OSMR1 = TIMER_FREQ/rtc_freq + OSCR;
 		                  ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'arg > 64'
#311: FILE: drivers/rtc/rtc-sa1100.c:245:
+		if ((arg > 64) && (!capable(CAP_SYS_RESOURCE)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#366: FILE: drivers/rtc/rtc-sa1100.c:300:
+	seq_printf(seq, "alarm_IRQ\t: %s\n",
+			(RTSR & RTSR_ALE) ? "yes" : "no" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#366: FILE: drivers/rtc/rtc-sa1100.c:300:
+			(RTSR & RTSR_ALE) ? "yes" : "no" );

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: drivers/rtc/rtc-sa1100.c:302:
+	seq_printf(seq, "update_IRQ\t: %s\n",
+			(RTSR & RTSR_HZE) ? "yes" : "no");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#370: FILE: drivers/rtc/rtc-sa1100.c:304:
+	seq_printf(seq, "periodic_IRQ\t: %s\n",
+			(OIER & OIER_E1) ? "yes" : "no");

WARNING:CONST_STRUCT: struct rtc_class_ops should normally be const
#376: FILE: drivers/rtc/rtc-sa1100.c:310:
+static struct rtc_class_ops sa1100_rtc_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#401: FILE: drivers/rtc/rtc-sa1100.c:335:
+		printk(KERN_WARNING "rtc: warning: initializing default clock divider/trim value\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#407: FILE: drivers/rtc/rtc-sa1100.c:341:
+	rtc = rtc_device_register(pdev->name, &pdev->dev, &sa1100_rtc_ops,
+				THIS_MODULE);

ERROR:CODE_INDENT: code indent should use tabs where possible
#425: FILE: drivers/rtc/rtc-sa1100.c:359:
+ ^Iif (rtc)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#425: FILE: drivers/rtc/rtc-sa1100.c:359:
+ ^Iif (rtc)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: drivers/rtc/rtc-sa1100.c:359:
+ ^Iif (rtc)$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093484.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 10 warnings, 24 checks, 443 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093484.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
