WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
occuring.  It also adds a manual set resource capability but I recommend only

WARNING:TYPO_SPELLING: 'occuring' may be misspelled - perhaps 'occurring'?
#27: 
occuring.  It also adds a manual set resource capability but I recommend only
^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#36: 
--- a/drivers/pnp/interface.c	Tue Jan 14 05:58:11 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#43: FILE: drivers/pnp/interface.c:4:
+ * Some code, especially possible resource dumping is based on isapnp_proc.c (c) Jaroslav Kysela <perex@suse.cz>

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#52: FILE: drivers/pnp/interface.c:16:
+#include <asm/uaccess.h>

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#111: FILE: drivers/pnp/interface.c:208:
+	struct pnp_resources * res = dev->possible;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:REPEATED_WORD: Possible repeated word: 'resource'
#141: FILE: drivers/pnp/interface.c:243:
+		pnp_printf(buffer, "This resource resource is currently in use.\n");

WARNING:LONG_LINE_STRING: line length of 102 exceeds 100 columns
#153: FILE: drivers/pnp/interface.c:255:
+		pnp_printf(buffer, "This resource conflicts with another resource on this device.\n");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_STRING: line length of 121 exceeds 100 columns
#161: FILE: drivers/pnp/interface.c:263:
+		pnp_printf(buffer, "This resource conflicts with the resources that PnP plans to assign to the device ");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#169: FILE: drivers/pnp/interface.c:271:
+static void pnp_print_conflict_node(pnp_info_buffer_t *buffer, struct pnp_dev * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#176: FILE: drivers/pnp/interface.c:278:
+static void pnp_print_conflict(pnp_info_buffer_t *buffer, struct pnp_dev * dev, int idx, int type)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#178: FILE: drivers/pnp/interface.c:280:
+	struct pnp_dev * cdev, * wdev;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#178: FILE: drivers/pnp/interface.c:280:
+	struct pnp_dev * cdev, * wdev;
 	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#180: FILE: drivers/pnp/interface.c:282:
+	int conflict;
+	switch (type) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#211: FILE: drivers/pnp/interface.c:313:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#239: FILE: drivers/pnp/interface.c:334:
+	pnp_printf(buffer,"state = ");
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#241: FILE: drivers/pnp/interface.c:336:
+		pnp_printf(buffer,"active\n");
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#243: FILE: drivers/pnp/interface.c:338:
+		pnp_printf(buffer,"disabled\n");
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#248: FILE: drivers/pnp/interface.c:341:
+			pnp_printf(buffer,"io");
 			                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#249: FILE: drivers/pnp/interface.c:342:
+			pnp_printf(buffer," 0x%lx-0x%lx \n",
 			                 ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#249: FILE: drivers/pnp/interface.c:342:
+			pnp_printf(buffer," 0x%lx-0x%lx \n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: drivers/pnp/interface.c:343:
+			pnp_printf(buffer," 0x%lx-0x%lx \n",
 						pnp_port_start(dev, i),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#260: FILE: drivers/pnp/interface.c:350:
+			pnp_printf(buffer,"mem");
 			                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#261: FILE: drivers/pnp/interface.c:351:
+			pnp_printf(buffer," 0x%lx-0x%lx \n",
 			                 ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#261: FILE: drivers/pnp/interface.c:351:
+			pnp_printf(buffer," 0x%lx-0x%lx \n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: drivers/pnp/interface.c:352:
+			pnp_printf(buffer," 0x%lx-0x%lx \n",
 						pnp_mem_start(dev, i),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#272: FILE: drivers/pnp/interface.c:359:
+			pnp_printf(buffer,"irq");
 			                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#273: FILE: drivers/pnp/interface.c:360:
+			pnp_printf(buffer," %ld \n", pnp_irq(dev, i));
 			                 ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#273: FILE: drivers/pnp/interface.c:360:
+			pnp_printf(buffer," %ld \n", pnp_irq(dev, i));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#282: FILE: drivers/pnp/interface.c:366:
+			pnp_printf(buffer,"dma");
 			                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#283: FILE: drivers/pnp/interface.c:367:
+			pnp_printf(buffer," %ld \n", pnp_dma(dev, i));
 			                 ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#283: FILE: drivers/pnp/interface.c:367:
+			pnp_printf(buffer," %ld \n", pnp_dma(dev, i));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#298: FILE: drivers/pnp/interface.c:379:
+pnp_set_current_resources(struct device * dmdev, const char * ubuf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#298: FILE: drivers/pnp/interface.c:379:
+pnp_set_current_resources(struct device * dmdev, const char * ubuf, size_t count)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#319: FILE: drivers/pnp/interface.c:387:
+	if (!strnicmp(buf,"disable",7)) {
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#319: FILE: drivers/pnp/interface.c:387:
+	if (!strnicmp(buf,"disable",7)) {
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#329: FILE: drivers/pnp/interface.c:391:
+	if (!strnicmp(buf,"activate",8)) {
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#329: FILE: drivers/pnp/interface.c:391:
+	if (!strnicmp(buf,"activate",8)) {
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: drivers/pnp/interface.c:395:
+	if (!strnicmp(buf,"auto-config",11)) {
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: drivers/pnp/interface.c:395:
+	if (!strnicmp(buf,"auto-config",11)) {
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#343: FILE: drivers/pnp/interface.c:401:
+	if (!strnicmp(buf,"resolve",7)) {
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#343: FILE: drivers/pnp/interface.c:401:
+	if (!strnicmp(buf,"resolve",7)) {
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#349: FILE: drivers/pnp/interface.c:405:
+	if (!strnicmp(buf,"set",3)) {
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#349: FILE: drivers/pnp/interface.c:405:
+	if (!strnicmp(buf,"set",3)) {
 	                       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#356: FILE: drivers/pnp/interface.c:411:
+		int nport = 0, nmem = 0, nirq = 0, ndma = 0;
+		pnp_init_resource_table(&res);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#360: FILE: drivers/pnp/interface.c:415:
+			if (!strnicmp(buf,"io",2)) {
 			                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#360: FILE: drivers/pnp/interface.c:415:
+			if (!strnicmp(buf,"io",2)) {
 			                      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#364: FILE: drivers/pnp/interface.c:419:
+				res.port_resource[nport].start = simple_strtoul(buf,&buf,0);
 				                                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#364: FILE: drivers/pnp/interface.c:419:
+				res.port_resource[nport].start = simple_strtoul(buf,&buf,0);
 				                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#364: FILE: drivers/pnp/interface.c:419:
+				res.port_resource[nport].start = simple_strtoul(buf,&buf,0);
 				                                                        ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#364: FILE: drivers/pnp/interface.c:419:
+				res.port_resource[nport].start = simple_strtoul(buf,&buf,0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:SPACING: space required before the open parenthesis '('
#367: FILE: drivers/pnp/interface.c:422:
+				if(*buf == '-') {

CHECK:BRACES: braces {} should be used on all arms of this statement
#367: FILE: drivers/pnp/interface.c:422:
+				if(*buf == '-') {
[...]
+				} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#371: FILE: drivers/pnp/interface.c:426:
+					res.port_resource[nport].end = simple_strtoul(buf,&buf,0);
 					                                                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#371: FILE: drivers/pnp/interface.c:426:
+					res.port_resource[nport].end = simple_strtoul(buf,&buf,0);
 					                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#371: FILE: drivers/pnp/interface.c:426:
+					res.port_resource[nport].end = simple_strtoul(buf,&buf,0);
 					                                                      ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#371: FILE: drivers/pnp/interface.c:426:
+					res.port_resource[nport].end = simple_strtoul(buf,&buf,0);

CHECK:BRACES: Unbalanced braces around else statement
#372: FILE: drivers/pnp/interface.c:427:
+				} else

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#373: FILE: drivers/pnp/interface.c:428:
+					res.port_resource[nport].end = res.port_resource[nport].start;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#380: FILE: drivers/pnp/interface.c:435:
+			if (!strnicmp(buf,"mem",3)) {
 			                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#380: FILE: drivers/pnp/interface.c:435:
+			if (!strnicmp(buf,"mem",3)) {
 			                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#384: FILE: drivers/pnp/interface.c:439:
+				res.mem_resource[nmem].start = simple_strtoul(buf,&buf,0);
 				                                                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#384: FILE: drivers/pnp/interface.c:439:
+				res.mem_resource[nmem].start = simple_strtoul(buf,&buf,0);
 				                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#384: FILE: drivers/pnp/interface.c:439:
+				res.mem_resource[nmem].start = simple_strtoul(buf,&buf,0);
 				                                                      ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#384: FILE: drivers/pnp/interface.c:439:
+				res.mem_resource[nmem].start = simple_strtoul(buf,&buf,0);

ERROR:SPACING: space required before the open parenthesis '('
#387: FILE: drivers/pnp/interface.c:442:
+				if(*buf == '-') {

CHECK:BRACES: braces {} should be used on all arms of this statement
#387: FILE: drivers/pnp/interface.c:442:
+				if(*buf == '-') {
[...]
+				} else
[...]

ERROR:SPACING: space required after that ',' (ctx:VxO)
#391: FILE: drivers/pnp/interface.c:446:
+					res.mem_resource[nmem].end = simple_strtoul(buf,&buf,0);
 					                                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#391: FILE: drivers/pnp/interface.c:446:
+					res.mem_resource[nmem].end = simple_strtoul(buf,&buf,0);
 					                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#391: FILE: drivers/pnp/interface.c:446:
+					res.mem_resource[nmem].end = simple_strtoul(buf,&buf,0);
 					                                                    ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#391: FILE: drivers/pnp/interface.c:446:
+					res.mem_resource[nmem].end = simple_strtoul(buf,&buf,0);

CHECK:BRACES: Unbalanced braces around else statement
#392: FILE: drivers/pnp/interface.c:447:
+				} else

ERROR:SPACING: space required after that ',' (ctx:VxV)
#400: FILE: drivers/pnp/interface.c:455:
+			if (!strnicmp(buf,"irq",3)) {
 			                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#400: FILE: drivers/pnp/interface.c:455:
+			if (!strnicmp(buf,"irq",3)) {
 			                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#405: FILE: drivers/pnp/interface.c:460:
+				res.irq_resource[nirq].end = simple_strtoul(buf,&buf,0);
 				                                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#405: FILE: drivers/pnp/interface.c:460:
+				res.irq_resource[nirq].end = simple_strtoul(buf,&buf,0);
 				                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#405: FILE: drivers/pnp/interface.c:460:
+				res.irq_resource[nirq].end = simple_strtoul(buf,&buf,0);
 				                                                    ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#405: FILE: drivers/pnp/interface.c:460:
+				res.irq_resource[nirq].end = simple_strtoul(buf,&buf,0);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#412: FILE: drivers/pnp/interface.c:467:
+			if (!strnicmp(buf,"dma",3)) {
 			                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#412: FILE: drivers/pnp/interface.c:467:
+			if (!strnicmp(buf,"dma",3)) {
 			                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#417: FILE: drivers/pnp/interface.c:472:
+				res.dma_resource[ndma].end = simple_strtoul(buf,&buf,0);
 				                                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#417: FILE: drivers/pnp/interface.c:472:
+				res.dma_resource[ndma].end = simple_strtoul(buf,&buf,0);
 				                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#417: FILE: drivers/pnp/interface.c:472:
+				res.dma_resource[ndma].end = simple_strtoul(buf,&buf,0);
 				                                                    ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#417: FILE: drivers/pnp/interface.c:472:
+				res.dma_resource[ndma].end = simple_strtoul(buf,&buf,0);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000394854.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 57 errors, 20 warnings, 7 checks, 396 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000394854.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
