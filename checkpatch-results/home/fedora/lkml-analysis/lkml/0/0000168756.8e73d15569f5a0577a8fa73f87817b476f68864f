ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#62: FILE: drivers/s390/char/tape_core.c:32:
+static void tape_delayed_next_request(void * data);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#83: FILE: drivers/s390/char/tape_core.c:274:
+		switch (rc) {
+			case 0:
[...]
+			case -EBUSY:
[...]
+			case -ENODEV:
[...]
+			case -EIO:
[...]
+			default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#98: FILE: drivers/s390/char/tape_core.c:289:
+				BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#133: FILE: drivers/s390/char/tape_core.c:725:
+	rc = ccw_device_start(

CHECK:SPACING: No space is necessary after a cast
#136: FILE: drivers/s390/char/tape_core.c:728:
+		(unsigned long) request,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#194: FILE: drivers/s390/char/tape_core.c:774:
+		if (request->status == TAPE_REQUEST_CANCEL) {
[...]
+		} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "request->callback"
#214: FILE: drivers/s390/char/tape_core.c:790:
+		if (request->callback != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#225: FILE: drivers/s390/char/tape_core.c:798:
+	struct tape_device *	device;

CHECK:SPACING: No space is necessary after a cast
#230: FILE: drivers/s390/char/tape_core.c:800:
+	device = (struct tape_device *) data;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#238: FILE: drivers/s390/char/tape_core.c:808:
+__tape_end_request(

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#239: FILE: drivers/s390/char/tape_core.c:809:
+	struct tape_device *	device,

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#240: FILE: drivers/s390/char/tape_core.c:810:
+	struct tape_request *	request,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "request->callback"
#252: FILE: drivers/s390/char/tape_core.c:822:
+		if (request->callback != NULL)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#341: FILE: drivers/s390/char/tape_core.c:1017:
+			rc = wait_event_interruptible(

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request->callback"
#343: FILE: drivers/s390/char/tape_core.c:1019:
+				(request->callback == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#410: FILE: drivers/s390/char/tape_core.c:1074:
+		PRINT_WARN("(%s): deferred cc=%i. restaring\n",
+			cdev->dev.bus_id,

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#435: FILE: drivers/s390/char/tape_core.c:1125:
 	switch (rc) {
+		case TAPE_IO_SUCCESS:
[...]
+		case TAPE_IO_PENDING:
[...]
+		case TAPE_IO_RETRY:
[...]
+		case TAPE_IO_STOP:
[...]
+		default:

ERROR:CODE_INDENT: code indent should use tabs where possible
#500: FILE: drivers/s390/char/tape_core.c:1147:
+^I^I^I^I  ^I"interrupt function.\n");$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#500: FILE: drivers/s390/char/tape_core.c:1147:
+^I^I^I^I  ^I"interrupt function.\n");$

WARNING:SPLIT_STRING: quoted string split across lines
#500: FILE: drivers/s390/char/tape_core.c:1147:
+				PRINT_ERR("Invalid return code from discipline "
+				  	"interrupt function.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#514: FILE: drivers/s390/char/tape_core.c:1245:
+	DBF_EVENT(3, "tape init: ($Revision: 1.54 $)\n");

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#523: FILE: drivers/s390/char/tape_core.c:1270:
+		   "tape device driver ($Revision: 1.54 $)");

WARNING:SPLIT_STRING: quoted string split across lines
#523: FILE: drivers/s390/char/tape_core.c:1270:
 MODULE_DESCRIPTION("Linux on zSeries channel attached "
+		   "tape device driver ($Revision: 1.54 $)");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000168756.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 7 warnings, 9 checks, 493 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000168756.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
