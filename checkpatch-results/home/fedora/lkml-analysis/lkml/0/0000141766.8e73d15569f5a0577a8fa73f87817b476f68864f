WARNING:TYPO_SPELLING: 'facilites' may be misspelled - perhaps 'facilities'?
#12: 
Subject: Re: [PATCH] X25: Add ITU-T facilites
                                    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
Adds options for ITU DTE facilities to X.25, called address extension and calling address extension

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: include/linux/x25.h:107:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#72: FILE: include/linux/x25.h:108:
+/* 
+*     ITU DTE facilities

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#130: FILE: include/net/x25.h:191:
+extern int  x25_parse_facilities(struct sk_buff *, struct x25_facilities *, struct x25_dte_facilities *, unsigned long *);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#130: FILE: include/net/x25.h:191:
+extern int  x25_parse_facilities(struct sk_buff *, struct x25_facilities *, struct x25_dte_facilities *, unsigned long *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sk_buff *' should also have an identifier name
#130: FILE: include/net/x25.h:191:
+extern int  x25_parse_facilities(struct sk_buff *, struct x25_facilities *, struct x25_dte_facilities *, unsigned long *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct x25_facilities *' should also have an identifier name
#130: FILE: include/net/x25.h:191:
+extern int  x25_parse_facilities(struct sk_buff *, struct x25_facilities *, struct x25_dte_facilities *, unsigned long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct x25_dte_facilities *' should also have an identifier name
#130: FILE: include/net/x25.h:191:
+extern int  x25_parse_facilities(struct sk_buff *, struct x25_facilities *, struct x25_dte_facilities *, unsigned long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long *' should also have an identifier name
#130: FILE: include/net/x25.h:191:
+extern int  x25_parse_facilities(struct sk_buff *, struct x25_facilities *, struct x25_dte_facilities *, unsigned long *);

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#131: FILE: include/net/x25.h:192:
+extern int  x25_create_facilities(unsigned char *, struct x25_facilities *, struct x25_dte_facilities *, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#131: FILE: include/net/x25.h:192:
+extern int  x25_create_facilities(unsigned char *, struct x25_facilities *, struct x25_dte_facilities *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#131: FILE: include/net/x25.h:192:
+extern int  x25_create_facilities(unsigned char *, struct x25_facilities *, struct x25_dte_facilities *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct x25_facilities *' should also have an identifier name
#131: FILE: include/net/x25.h:192:
+extern int  x25_create_facilities(unsigned char *, struct x25_facilities *, struct x25_dte_facilities *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct x25_dte_facilities *' should also have an identifier name
#131: FILE: include/net/x25.h:192:
+extern int  x25_create_facilities(unsigned char *, struct x25_facilities *, struct x25_dte_facilities *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#131: FILE: include/net/x25.h:192:
+extern int  x25_create_facilities(unsigned char *, struct x25_facilities *, struct x25_dte_facilities *, unsigned long);

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#132: FILE: include/net/x25.h:193:
+extern int  x25_negotiate_facilities(struct sk_buff *, struct sock *, struct x25_facilities *, struct x25_dte_facilities *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#132: FILE: include/net/x25.h:193:
+extern int  x25_negotiate_facilities(struct sk_buff *, struct sock *, struct x25_facilities *, struct x25_dte_facilities *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sk_buff *' should also have an identifier name
#132: FILE: include/net/x25.h:193:
+extern int  x25_negotiate_facilities(struct sk_buff *, struct sock *, struct x25_facilities *, struct x25_dte_facilities *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sock *' should also have an identifier name
#132: FILE: include/net/x25.h:193:
+extern int  x25_negotiate_facilities(struct sk_buff *, struct sock *, struct x25_facilities *, struct x25_dte_facilities *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct x25_facilities *' should also have an identifier name
#132: FILE: include/net/x25.h:193:
+extern int  x25_negotiate_facilities(struct sk_buff *, struct sock *, struct x25_facilities *, struct x25_dte_facilities *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct x25_dte_facilities *' should also have an identifier name
#132: FILE: include/net/x25.h:193:
+extern int  x25_negotiate_facilities(struct sk_buff *, struct sock *, struct x25_facilities *, struct x25_dte_facilities *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: net/x25/af_x25.c:519:
+	memset(x25->dte_facilities.called_ae, '\0',
+		sizeof(x25->dte_facilities.called_ae));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: net/x25/af_x25.c:521:
+	memset(x25->dte_facilities.calling_ae, '\0',
+		sizeof(x25->dte_facilities.calling_ae));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: net/x25/af_x25.c:522:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: net/x25/af_x25.c:881:
+^Iif ((len = x25_negotiate_facilities(skb, sk, &facilities, $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#174: FILE: net/x25/af_x25.c:881:
+	if ((len = x25_negotiate_facilities(skb, sk, &facilities, 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: net/x25/af_x25.c:882:
+	if ((len = x25_negotiate_facilities(skb, sk, &facilities, 
+		&dte_facilities)) == -1)

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#183: FILE: net/x25/af_x25.c:913:
+	makex25->dte_facilities= dte_facilities;
 	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: net/x25/af_x25.c:1327:
+			rc = copy_to_user(argp, &x25->dte_facilities,
+				sizeof(x25->dte_facilities)) ? -EFAULT : 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#204: FILE: net/x25/af_x25.c:1333:
+			struct x25_dte_facilities dtefacs;
+			rc = -EFAULT;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dtefacs.calling_ae"
#213: FILE: net/x25/af_x25.c:1342:
+			if (dtefacs.calling_ae == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dtefacs.called_ae"
#217: FILE: net/x25/af_x25.c:1346:
+			if (dtefacs.called_ae == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: net/x25/x25_facilities.c:143:
+^I^I^Idefault:^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#293: FILE: net/x25/x25_facilities.c:144:
+				printk(KERN_DEBUG "X.25: unknown facility %02X,"

WARNING:SPLIT_STRING: quoted string split across lines
#294: FILE: net/x25/x25_facilities.c:145:
+				printk(KERN_DEBUG "X.25: unknown facility %02X,"
+				"length %d, values %02X, %02X, %02X, %02X\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: net/x25/x25_facilities.c:204:
+^Iif ((facil_mask & X25_MASK_CALLING_AE) || $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#315: FILE: net/x25/x25_facilities.c:205:
+	if ((facil_mask & X25_MASK_CALLING_AE) || 
+	     (facil_mask & X25_MASK_CALLED_AE)) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#321: FILE: net/x25/x25_facilities.c:211:
+		unsigned bytecount = (dte_facs->calling_len % 2) ?

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: net/x25/x25_facilities.c:212:
+                        dte_facs->calling_len / 2 + 1 :$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: net/x25/x25_facilities.c:212:
+                        dte_facs->calling_len / 2 + 1 :$

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#328: FILE: net/x25/x25_facilities.c:218:
+		p+=bytecount;
 		 ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#332: FILE: net/x25/x25_facilities.c:222:
+		unsigned bytecount = (dte_facs->called_len % 2) ?

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: net/x25/x25_facilities.c:223:
+                        dte_facs->called_len / 2 + 1 :$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: net/x25/x25_facilities.c:223:
+                        dte_facs->called_len / 2 + 1 :$

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#339: FILE: net/x25/x25_facilities.c:229:
+		p+=bytecount;
 		 ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000141766.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 25 warnings, 10 checks, 315 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000141766.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
