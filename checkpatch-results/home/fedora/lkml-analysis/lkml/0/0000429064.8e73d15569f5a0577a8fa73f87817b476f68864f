WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
arch/i386/config.in	Transmeta LongRun does not work well with cpufreq-24-API

ERROR:TRAILING_WHITESPACE: trailing whitespace
#40: FILE: arch/i386/Config.help:857:
+  functionality. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#45: FILE: arch/i386/Config.help:862:
+  For details, take a look at linux/Documentation/cpufreq. $

WARNING:TYPO_SPELLING: 'compatibilty' may be misspelled - perhaps 'compatibility'?
#98: FILE: include/linux/cpufreq.h:171:
+	CPU_NR   = 1,           /* compatibilty reasons */
 	                           ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: include/linux/cpufreq.h:214:
+                ctl_name: CPU_NR_FREQ_MAX, \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:INDENTED_LABEL: labels should not be indented
#141: FILE: include/linux/cpufreq.h:214:
+                ctl_name: CPU_NR_FREQ_MAX, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: include/linux/cpufreq.h:215:
+                data: &cpu_max_freq, \$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#142: FILE: include/linux/cpufreq.h:215:
+                data: &cpu_max_freq, \
                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#142: FILE: include/linux/cpufreq.h:215:
+                data: &cpu_max_freq, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: include/linux/cpufreq.h:216:
+                procname: "speed-max", \$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#143: FILE: include/linux/cpufreq.h:216:
+                procname: "speed-max", \
                         ^

WARNING:INDENTED_LABEL: labels should not be indented
#143: FILE: include/linux/cpufreq.h:216:
+                procname: "speed-max", \

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: include/linux/cpufreq.h:217:
+                maxlen:^Isizeof(cpu_max_freq),\$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#144: FILE: include/linux/cpufreq.h:217:
+                maxlen:	sizeof(cpu_max_freq),\
                       ^

WARNING:INDENTED_LABEL: labels should not be indented
#144: FILE: include/linux/cpufreq.h:217:
+                maxlen:	sizeof(cpu_max_freq),\

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: include/linux/cpufreq.h:218:
+                mode: 0444, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: include/linux/cpufreq.h:219:
+                proc_handler: proc_dointvec, }$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#146: FILE: include/linux/cpufreq.h:219:
+                proc_handler: proc_dointvec, }
                             ^

WARNING:INDENTED_LABEL: labels should not be indented
#146: FILE: include/linux/cpufreq.h:219:
+                proc_handler: proc_dointvec, }

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: include/linux/cpufreq.h:222:
+                ctl_name: CPU_NR_FREQ_MIN, \$

WARNING:INDENTED_LABEL: labels should not be indented
#149: FILE: include/linux/cpufreq.h:222:
+                ctl_name: CPU_NR_FREQ_MIN, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: include/linux/cpufreq.h:223:
+                data: &cpu_min_freq, \$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#150: FILE: include/linux/cpufreq.h:223:
+                data: &cpu_min_freq, \
                     ^

WARNING:INDENTED_LABEL: labels should not be indented
#150: FILE: include/linux/cpufreq.h:223:
+                data: &cpu_min_freq, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: include/linux/cpufreq.h:224:
+                procname: "speed-min", \$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#151: FILE: include/linux/cpufreq.h:224:
+                procname: "speed-min", \
                         ^

WARNING:INDENTED_LABEL: labels should not be indented
#151: FILE: include/linux/cpufreq.h:224:
+                procname: "speed-min", \

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: include/linux/cpufreq.h:225:
+                maxlen:^Isizeof(cpu_min_freq),\$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#152: FILE: include/linux/cpufreq.h:225:
+                maxlen:	sizeof(cpu_min_freq),\
                       ^

WARNING:INDENTED_LABEL: labels should not be indented
#152: FILE: include/linux/cpufreq.h:225:
+                maxlen:	sizeof(cpu_min_freq),\

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: include/linux/cpufreq.h:226:
+                mode: 0444, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: include/linux/cpufreq.h:227:
+                proc_handler: proc_dointvec, }$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#154: FILE: include/linux/cpufreq.h:227:
+                proc_handler: proc_dointvec, }
                             ^

WARNING:INDENTED_LABEL: labels should not be indented
#154: FILE: include/linux/cpufreq.h:227:
+                proc_handler: proc_dointvec, }

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: include/linux/cpufreq.h:230:
+                ctl_name: CPU_NR_FREQ, \$

WARNING:INDENTED_LABEL: labels should not be indented
#157: FILE: include/linux/cpufreq.h:230:
+                ctl_name: CPU_NR_FREQ, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: include/linux/cpufreq.h:231:
+                procname: "speed", \$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#158: FILE: include/linux/cpufreq.h:231:
+                procname: "speed", \
                         ^

WARNING:INDENTED_LABEL: labels should not be indented
#158: FILE: include/linux/cpufreq.h:231:
+                procname: "speed", \

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: include/linux/cpufreq.h:232:
+                mode: 0644, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: include/linux/cpufreq.h:233:
+                proc_handler: cpufreq_procctl, \$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#160: FILE: include/linux/cpufreq.h:233:
+                proc_handler: cpufreq_procctl, \
                             ^

WARNING:INDENTED_LABEL: labels should not be indented
#160: FILE: include/linux/cpufreq.h:233:
+                proc_handler: cpufreq_procctl, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: include/linux/cpufreq.h:234:
+                strategy: cpufreq_sysctl, \$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#161: FILE: include/linux/cpufreq.h:234:
+                strategy: cpufreq_sysctl, \
                         ^

WARNING:INDENTED_LABEL: labels should not be indented
#161: FILE: include/linux/cpufreq.h:234:
+                strategy: cpufreq_sysctl, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: include/linux/cpufreq.h:235:
+                extra1: (void*) (cpunr), }$

CHECK:SPACING: No space is necessary after a cast
#162: FILE: include/linux/cpufreq.h:235:
+                extra1: (void*) (cpunr), }

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#162: FILE: include/linux/cpufreq.h:235:
+                extra1: (void*) (cpunr), }

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#162: FILE: include/linux/cpufreq.h:235:
+                extra1: (void*) (cpunr), }
                       ^

WARNING:INDENTED_LABEL: labels should not be indented
#162: FILE: include/linux/cpufreq.h:235:
+                extra1: (void*) (cpunr), }

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#164: FILE: include/linux/cpufreq.h:237:
+#define CTL_TABLE_CPU_VARS(cpunr) static ctl_table ctl_cpu_vars_##cpunr[] = {\
+                CTL_CPU_VARS_SPEED_MAX, \
+                CTL_CPU_VARS_SPEED_MIN, \
+                CTL_CPU_VARS_SPEED(cpunr),  \
+                { ctl_name: 0, }, }

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: include/linux/cpufreq.h:238:
+                CTL_CPU_VARS_SPEED_MAX, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: include/linux/cpufreq.h:238:
+                CTL_CPU_VARS_SPEED_MAX, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: include/linux/cpufreq.h:239:
+                CTL_CPU_VARS_SPEED_MIN, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: include/linux/cpufreq.h:239:
+                CTL_CPU_VARS_SPEED_MIN, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: include/linux/cpufreq.h:240:
+                CTL_CPU_VARS_SPEED(cpunr),  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: include/linux/cpufreq.h:240:
+                CTL_CPU_VARS_SPEED(cpunr),  \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: include/linux/cpufreq.h:241:
+                { ctl_name: 0, }, }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: include/linux/cpufreq.h:241:
+                { ctl_name: 0, }, }$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 's' may be better as '(s)' to avoid precedence issues
#171: FILE: include/linux/cpufreq.h:244:
+#define CPU_ENUM(s) { \
+                ctl_name: (CPU_NR + s), \
+                procname: #s, \
+                mode: 0555, \
+                child: ctl_cpu_vars_##s }

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: include/linux/cpufreq.h:245:
+                ctl_name: (CPU_NR + s), \$

WARNING:INDENTED_LABEL: labels should not be indented
#172: FILE: include/linux/cpufreq.h:245:
+                ctl_name: (CPU_NR + s), \

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: include/linux/cpufreq.h:246:
+                procname: #s, \$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#173: FILE: include/linux/cpufreq.h:246:
+                procname: #s, \
                         ^

WARNING:INDENTED_LABEL: labels should not be indented
#173: FILE: include/linux/cpufreq.h:246:
+                procname: #s, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: include/linux/cpufreq.h:247:
+                mode: 0555, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: include/linux/cpufreq.h:248:
+                child: ctl_cpu_vars_##s }$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#175: FILE: include/linux/cpufreq.h:248:
+                child: ctl_cpu_vars_##s }
                      ^

WARNING:INDENTED_LABEL: labels should not be indented
#175: FILE: include/linux/cpufreq.h:248:
+                child: ctl_cpu_vars_##s }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#206: FILE: kernel/cpufreq.c:80:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: kernel/cpufreq.c:351:
+/** $

WARNING:LINE_SPACING: Missing a blank line after declarations
#232: FILE: kernel/cpufreq.c:361:
+	struct cpufreq_policy policy;
+	down(&cpufreq_driver_sem);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: kernel/cpufreq.c:371:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#249: FILE: kernel/cpufreq.c:378:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: kernel/cpufreq.c:379:
+/** $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cpu != CPUFREQ_ALL_CPUS'
#259: FILE: kernel/cpufreq.c:388:
+	if (!cpu_online(cpu) && (cpu != CPUFREQ_ALL_CPUS))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LINE_SPACING: Please don't use multiple blank lines
#265: FILE: kernel/cpufreq.c:394:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: kernel/cpufreq.c:395:
+/** $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#280: FILE: kernel/cpufreq.c:409:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#283: FILE: kernel/cpufreq.c:412:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#286: FILE: kernel/cpufreq.c:415:
+cpufreq_procctl(ctl_table *ctl, int write, struct file *filp,
                                                         ^^^^

CHECK:SPACING: No space is necessary after a cast
#290: FILE: kernel/cpufreq.c:419:
+	int cpu = (int) ctl->extra1;

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#308: FILE: kernel/cpufreq.c:437:
+		freq = simple_strtoul(buf, &p, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:SPACING: No space is necessary after a cast
#328: FILE: kernel/cpufreq.c:457:
+	int cpu = (int) table->extra1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: kernel/cpufreq.c:491:
+        CTL_TABLE_CPU_VARS(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: kernel/cpufreq.c:491:
+        CTL_TABLE_CPU_VARS(0);$

WARNING:INDENTED_LABEL: labels should not be indented
#566: FILE: kernel/cpufreq.c:695:
+		ctl_name:	CTL_CPU,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#567: FILE: kernel/cpufreq.c:696:
+		procname:	"cpu",
 		        ^

WARNING:INDENTED_LABEL: labels should not be indented
#567: FILE: kernel/cpufreq.c:696:
+		procname:	"cpu",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#569: FILE: kernel/cpufreq.c:698:
+		child:		ctl_cpu_table,
 		     ^

WARNING:INDENTED_LABEL: labels should not be indented
#569: FILE: kernel/cpufreq.c:698:
+		child:		ctl_cpu_table,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#594: FILE: kernel/cpufreq.c:723:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#605: FILE: kernel/cpufreq.c:884:
+	if (policy->cpu == CPUFREQ_ALL_CPUS) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#606: FILE: kernel/cpufreq.c:885:
+		for (i=0;i<NR_CPUS;i++)
 		      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#606: FILE: kernel/cpufreq.c:885:
+		for (i=0;i<NR_CPUS;i++)
 		        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#606: FILE: kernel/cpufreq.c:885:
+		for (i=0;i<NR_CPUS;i++)
 		          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#606: FILE: kernel/cpufreq.c:885:
+		for (i=0;i<NR_CPUS;i++)
 		                  ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#606: FILE: kernel/cpufreq.c:885:
+		for (i=0;i<NR_CPUS;i++)

CHECK:BRACES: Unbalanced braces around else statement
#608: FILE: kernel/cpufreq.c:887:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#625: FILE: kernel/cpufreq.c:1005:
+		unsigned int i;
+		for (i=0; i<NR_CPUS; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#625: FILE: kernel/cpufreq.c:1005:
+		for (i=0; i<NR_CPUS; i++) {
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#625: FILE: kernel/cpufreq.c:1005:
+		for (i=0; i<NR_CPUS; i++) {
 		           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#625: FILE: kernel/cpufreq.c:1005:
+		for (i=0; i<NR_CPUS; i++) {
+			cpu_cur_freq[i] = driver_data->cpu_cur_freq[i];
+		}

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#625: FILE: kernel/cpufreq.c:1005:
+		for (i=0; i<NR_CPUS; i++) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000429064.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 57 errors, 35 warnings, 13 checks, 606 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000429064.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
