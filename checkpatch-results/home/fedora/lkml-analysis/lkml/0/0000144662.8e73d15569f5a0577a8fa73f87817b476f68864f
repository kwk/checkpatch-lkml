WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
same code for two different and similar types, with no way to catch misuses.

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#183: FILE: fs/jbd/journal.c:1609:
+void * __jbd_kmalloc (const char *where, size_t size, gfp_t flags, int retry)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#183: FILE: fs/jbd/journal.c:1609:
+void * __jbd_kmalloc (const char *where, size_t size, gfp_t flags, int retry)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:INLINE: plain inline is preferred over __inline
#344: FILE: fs/xfs/linux-2.6/kmem.h:84:
+static __inline gfp_t kmem_flags_convert(unsigned int __nocast flags)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#357: FILE: fs/xfs/linux-2.6/kmem.h:128:
+extern void	    *kmem_zone_zalloc(kmem_zone_t *, unsigned int __nocast);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#358: FILE: fs/xfs/linux-2.6/kmem.h:129:
+extern void	    *kmem_zone_alloc(kmem_zone_t *, unsigned int __nocast);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kmem_zone_t *' should also have an identifier name
#358: FILE: fs/xfs/linux-2.6/kmem.h:129:
+extern void	    *kmem_zone_alloc(kmem_zone_t *, unsigned int __nocast);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int __nocast' should also have an identifier name
#358: FILE: fs/xfs/linux-2.6/kmem.h:129:
+extern void	    *kmem_zone_alloc(kmem_zone_t *, unsigned int __nocast);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#363: FILE: fs/xfs/linux-2.6/kmem.h:131:
+extern void	    *kmem_alloc(size_t, unsigned int __nocast);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#363: FILE: fs/xfs/linux-2.6/kmem.h:131:
+extern void	    *kmem_alloc(size_t, unsigned int __nocast);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int __nocast' should also have an identifier name
#363: FILE: fs/xfs/linux-2.6/kmem.h:131:
+extern void	    *kmem_alloc(size_t, unsigned int __nocast);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#364: FILE: fs/xfs/linux-2.6/kmem.h:132:
+extern void	    *kmem_realloc(void *, size_t, size_t, unsigned int __nocast);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#364: FILE: fs/xfs/linux-2.6/kmem.h:132:
+extern void	    *kmem_realloc(void *, size_t, size_t, unsigned int __nocast);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#364: FILE: fs/xfs/linux-2.6/kmem.h:132:
+extern void	    *kmem_realloc(void *, size_t, size_t, unsigned int __nocast);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#364: FILE: fs/xfs/linux-2.6/kmem.h:132:
+extern void	    *kmem_realloc(void *, size_t, size_t, unsigned int __nocast);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int __nocast' should also have an identifier name
#364: FILE: fs/xfs/linux-2.6/kmem.h:132:
+extern void	    *kmem_realloc(void *, size_t, size_t, unsigned int __nocast);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#365: FILE: fs/xfs/linux-2.6/kmem.h:133:
+extern void	    *kmem_zalloc(size_t, unsigned int __nocast);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#365: FILE: fs/xfs/linux-2.6/kmem.h:133:
+extern void	    *kmem_zalloc(size_t, unsigned int __nocast);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int __nocast' should also have an identifier name
#365: FILE: fs/xfs/linux-2.6/kmem.h:133:
+extern void	    *kmem_zalloc(size_t, unsigned int __nocast);

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#403: FILE: fs/xfs/linux-2.6/xfs_buf.c:67:
+STATIC int xfsbufd_wakeup(int, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#403: FILE: fs/xfs/linux-2.6/xfs_buf.c:67:
+STATIC int xfsbufd_wakeup(int, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#403: FILE: fs/xfs/linux-2.6/xfs_buf.c:67:
+STATIC int xfsbufd_wakeup(int, gfp_t);

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#447: FILE: include/linux/buffer_head.h:191:
+int try_to_release_page(struct page * page, gfp_t gfp_mask);

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:SPACING: Unnecessary space before function pointer arguments
#459: FILE: include/linux/fs.h:323:
+	int (*releasepage) (struct page *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#459: FILE: include/linux/fs.h:323:
+	int (*releasepage) (struct page *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#459: FILE: include/linux/fs.h:323:
+	int (*releasepage) (struct page *, gfp_t);

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#471: FILE: include/linux/jbd.h:72:
+extern void * __jbd_kmalloc (const char *where, size_t size, gfp_t flags, int retry);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#471: FILE: include/linux/jbd.h:72:
+extern void * __jbd_kmalloc (const char *where, size_t size, gfp_t flags, int retry);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#471: FILE: include/linux/jbd.h:72:
+extern void * __jbd_kmalloc (const char *where, size_t size, gfp_t flags, int retry);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#480: FILE: include/linux/jbd.h:893:
+extern int	 journal_try_to_free_buffers(journal_t *, struct page *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'journal_t *' should also have an identifier name
#480: FILE: include/linux/jbd.h:893:
+extern int	 journal_try_to_free_buffers(journal_t *, struct page *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#480: FILE: include/linux/jbd.h:893:
+extern int	 journal_try_to_free_buffers(journal_t *, struct page *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#480: FILE: include/linux/jbd.h:893:
+extern int	 journal_try_to_free_buffers(journal_t *, struct page *, gfp_t);

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mb_cache_entry *' should also have an identifier name
#492: FILE: include/linux/mbcache.h:25:
+	int (*free)(struct mb_cache_entry *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#492: FILE: include/linux/mbcache.h:25:
+	int (*free)(struct mb_cache_entry *, gfp_t);

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000144662.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 50 warnings, 7 checks, 345 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000144662.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
