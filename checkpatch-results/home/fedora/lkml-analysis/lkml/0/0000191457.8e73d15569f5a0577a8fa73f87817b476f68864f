WARNING:TYPO_SPELLING: 'concider' may be misspelled - perhaps 'consider'?
#55: 
> > concider acrypto or superio - that subsystems do not know
    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'acceptible' may be misspelled - perhaps 'acceptable'?
#89: 
> > Creating it's own skb receive parser was acceptible for
                                             ^^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#101: 
Of course cn_netlink_send() can be split into prepare_send() and commit_send(),

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#108: 
noone use it in that way, although we can, but connector is like
^^^^^

WARNING:TYPO_SPELLING: 'Abstration' may be misspelled - perhaps 'Abstraction'?
#125: 
Abstration over netlink already implemented in connector and is used
^^^^^^^^^^

WARNING:TYPO_SPELLING: 'diferent' may be misspelled - perhaps 'different'?
#138: 
diferent in some way.
^^^^^^^^

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#152: 
That is why connector is usefull here - only one set of 
                         ^^^^^^^

WARNING:TYPO_SPELLING: 'Concider' may be misspelled - perhaps 'Consider'?
#158: 
> > Concider the latest xfrm event changes - good that we already
    ^^^^^^^^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: net/netlink/af_netlink.c:750:
+       if (nlk->pid == p->pid || (nlk->groups != p->group))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#192: FILE: net/netlink/af_netlink.c:750:
+       if (nlk->pid == p->pid || (nlk->groups != p->group))
                goto out;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nlk->groups != p->group'
#192: FILE: net/netlink/af_netlink.c:750:
+       if (nlk->pid == p->pid || (nlk->groups != p->group))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000191457.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 11 warnings, 1 checks, 8 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000191457.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
