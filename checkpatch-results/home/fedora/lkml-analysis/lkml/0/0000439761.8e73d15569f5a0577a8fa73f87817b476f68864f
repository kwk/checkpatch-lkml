WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
diff -x '*times*' -x '.*' -x '*.o' -Naur linux-2.4.17-orig/net/khttpd/README linux/net/khttpd/README

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: net/khttpd/README:143:
+   If this doesn't work fast enough for you (unloading can wait for $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: net/khttpd/README:245:
+   Mailing list archives are at $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: net/khttpd/main.c:104:
+^I/* Remember value of stop count.  If it changes, user must have $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: net/khttpd/main.c:105:
+^I * asked us to stop.  Sensing this is much less racy than $

CHECK:CAMELCASE: Avoid CamelCase: <khttpd_stopCount>
#133: FILE: net/khttpd/main.c:108:
+	old_stop_count = atomic_read(&khttpd_stopCount);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: net/khttpd/main.c:134:
+^Iwhile (old_stop_count == atomic_read(&khttpd_stopCount)) $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#221: FILE: net/khttpd/main.c:252:
+			for (I=0; I<ActualThreads; I++) {
 			      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#221: FILE: net/khttpd/main.c:252:
+			for (I=0; I<ActualThreads; I++) {
 			           ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#221: FILE: net/khttpd/main.c:252:
+			for (I=0; I<ActualThreads; I++) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:CAMELCASE: Avoid CamelCase: <ActualThreads>
#221: FILE: net/khttpd/main.c:252:
+			for (I=0; I<ActualThreads; I++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#221: FILE: net/khttpd/main.c:252:
+			for (I=0; I<ActualThreads; I++) {
 				StopDataSending(I);
 			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#238: FILE: net/khttpd/main.c:263:
+		for (I=0; I<ActualThreads; I++) {
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#238: FILE: net/khttpd/main.c:263:
+		for (I=0; I<ActualThreads; I++) {
 		           ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#238: FILE: net/khttpd/main.c:263:
+		for (I=0; I<ActualThreads; I++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: net/khttpd/main.c:269:
+^I^I/* Remember value of stop count.  If it changes, user must $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#249: FILE: net/khttpd/main.c:270:
+^I^I * have asked us to stop.  Sensing this is much less racy $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: net/khttpd/main.c:274:
+^I^Iwhile ( ( old_stop_count == atomic_read(&khttpd_stopCount)) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#253: FILE: net/khttpd/main.c:274:
+		while ( ( old_stop_count == atomic_read(&khttpd_stopCount)) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: net/khttpd/main.c:275:
+^I^I^I && (!signal_pending(current)) $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#254: FILE: net/khttpd/main.c:275:
+		while ( ( old_stop_count == atomic_read(&khttpd_stopCount)) 
+			 && (!signal_pending(current)) 

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#255: FILE: net/khttpd/main.c:276:
+			 && (!signal_pending(current)) 
+			 && (sysctl_khttpd_unload==0) )

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#255: FILE: net/khttpd/main.c:276:
+			 && (sysctl_khttpd_unload==0) )
 			                         ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#255: FILE: net/khttpd/main.c:276:
+			 && (sysctl_khttpd_unload==0) )

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#292: FILE: net/khttpd/main.c:283:
+		while (atomic_read(&DaemonCount)>0)
 		                                ^

CHECK:CAMELCASE: Avoid CamelCase: <DaemonCount>
#292: FILE: net/khttpd/main.c:283:
+		while (atomic_read(&DaemonCount)>0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#293: FILE: net/khttpd/main.c:284:
+			interruptible_sleep_on_timeout(&WQ,HZ);
 			                                  ^

CHECK:CAMELCASE: Avoid CamelCase: <StopListening>
#294: FILE: net/khttpd/main.c:285:
+		StopListening();

ERROR:SPACING: space required after that ',' (ctx:VxV)
#298: FILE: net/khttpd/main.c:289:
+			waitpid_result = waitpid(-1,NULL,__WCLONE|WNOHANG);
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#298: FILE: net/khttpd/main.c:289:
+			waitpid_result = waitpid(-1,NULL,__WCLONE|WNOHANG);
 			                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#298: FILE: net/khttpd/main.c:289:
+			waitpid_result = waitpid(-1,NULL,__WCLONE|WNOHANG);
 			                                         ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#299: FILE: net/khttpd/main.c:290:
+		while (waitpid_result>0);
 		                     ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#320: FILE: net/khttpd/main.c:303:
+	while (waitpid_result>0);
 	                     ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#320: FILE: net/khttpd/main.c:303:
+	while (waitpid_result>0);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#331: FILE: net/khttpd/main.c:318:
+	for (I=0; I<CONFIG_KHTTPD_NUMCPU; I++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#331: FILE: net/khttpd/main.c:318:
+	for (I=0; I<CONFIG_KHTTPD_NUMCPU; I++) {
 	           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#331: FILE: net/khttpd/main.c:318:
+	for (I=0; I<CONFIG_KHTTPD_NUMCPU; I++) {
 		CountBuf[I]=I;
 	}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#339: FILE: net/khttpd/main.c:324:
+	atomic_set(&khttpd_stopCount,0);
 	                            ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#358: FILE: net/khttpd/sysctl.c:76:
+static int khttpd_stop_wrap_proc_dointvec(ctl_table *table, int write, struct file *filp,
                                                                                     ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: net/khttpd/sysctl.c:77:
+static int khttpd_stop_wrap_proc_dointvec(ctl_table *table, int write, struct file *filp,
+		  void *buffer, size_t *lenp);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#381: FILE: net/khttpd/sysctl.c:318:
+static int khttpd_stop_wrap_proc_dointvec(ctl_table *table, int write, struct file *filp,
                                                                                     ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: net/khttpd/sysctl.c:319:
+static int khttpd_stop_wrap_proc_dointvec(ctl_table *table, int write, struct file *filp,
+		  void *buffer, size_t *lenp)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#386: FILE: net/khttpd/sysctl.c:323:
+	rv = proc_dointvec(table, write, filp, buffer, lenp);
 	                                 ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#386: FILE: net/khttpd/sysctl.c:323:
+	int oldstop = sysctl_khttpd_stop;
+	rv = proc_dointvec(table, write, filp, buffer, lenp);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: net/khttpd/sysctl.c:329:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#393: FILE: net/khttpd/sysctl.c:330:
+		
+

CHECK:CAMELCASE: Avoid CamelCase: <LeaveFunction>
#416: FILE: net/khttpd/waitheaders.c:137:
+	LeaveFunction("WaitForHeaders");

CHECK:CAMELCASE: Avoid CamelCase: <Buffer>
#424: FILE: net/khttpd/waitheaders.c:181:
+	if (Buffer[CPUNR] == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!Buffer[CPUNR]"
#424: FILE: net/khttpd/waitheaders.c:181:
+	if (Buffer[CPUNR] == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#426: FILE: net/khttpd/waitheaders.c:183:
+		printk(KERN_CRIT "khttpd: lost my buffer");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#427: FILE: net/khttpd/waitheaders.c:184:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000439761.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 11 warnings, 13 checks, 377 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000439761.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
