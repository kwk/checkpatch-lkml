WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#47: FILE: drivers/isdn/gigaset/gigaset.h:1:
+/* Siemens Gigaset 307x driver

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#53: FILE: drivers/isdn/gigaset/gigaset.h:7:
+ * Version: $Id: gigaset.h,v 1.97.4.26 2006/02/04 18:28:16 hjlipp Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#64: FILE: drivers/isdn/gigaset/gigaset.h:18:
+#include <asm/atomic.h>

ERROR:SPACING: space required after that ',' (ctx:VxV)
#77: FILE: drivers/isdn/gigaset/gigaset.h:31:
+#define GIG_VERSION {0,5,0,0}
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#77: FILE: drivers/isdn/gigaset/gigaset.h:31:
+#define GIG_VERSION {0,5,0,0}
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#77: FILE: drivers/isdn/gigaset/gigaset.h:31:
+#define GIG_VERSION {0,5,0,0}
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#78: FILE: drivers/isdn/gigaset/gigaset.h:32:
+#define GIG_COMPAT  {0,4,0,0}
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#78: FILE: drivers/isdn/gigaset/gigaset.h:32:
+#define GIG_COMPAT  {0,4,0,0}
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#78: FILE: drivers/isdn/gigaset/gigaset.h:32:
+#define GIG_COMPAT  {0,4,0,0}
                           ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#116: FILE: drivers/isdn/gigaset/gigaset.h:70:
+#define IFNULL(a)         if (unlikely(!(a)))

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#117: FILE: drivers/isdn/gigaset/gigaset.h:71:
+#define IFNULLRET(a)      if (unlikely(!(a))) {err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); return; }

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#117: FILE: drivers/isdn/gigaset/gigaset.h:71:
+#define IFNULLRET(a)      if (unlikely(!(a))) {err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); return; }

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#117: FILE: drivers/isdn/gigaset/gigaset.h:71:
+#define IFNULLRET(a)      if (unlikely(!(a))) {err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); return; }

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#118: FILE: drivers/isdn/gigaset/gigaset.h:72:
+#define IFNULLRETVAL(a,b) if (unlikely(!(a))) {err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); return (b); }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#118: FILE: drivers/isdn/gigaset/gigaset.h:72:
+#define IFNULLRETVAL(a,b) if (unlikely(!(a))) {err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); return (b); }
                       ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#118: FILE: drivers/isdn/gigaset/gigaset.h:72:
+#define IFNULLRETVAL(a,b) if (unlikely(!(a))) {err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); return (b); }

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#118: FILE: drivers/isdn/gigaset/gigaset.h:72:
+#define IFNULLRETVAL(a,b) if (unlikely(!(a))) {err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); return (b); }

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#119: FILE: drivers/isdn/gigaset/gigaset.h:73:
+#define IFNULLCONT(a)     if (unlikely(!(a))) {err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); continue; }

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#119: FILE: drivers/isdn/gigaset/gigaset.h:73:
+#define IFNULLCONT(a)     if (unlikely(!(a))) {err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); continue; }

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#120: FILE: drivers/isdn/gigaset/gigaset.h:74:
+#define IFNULLGOTO(a,b)   if (unlikely(!(a))) {err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); goto b; }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#120: FILE: drivers/isdn/gigaset/gigaset.h:74:
+#define IFNULLGOTO(a,b)   if (unlikely(!(a))) {err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); goto b; }
                     ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#120: FILE: drivers/isdn/gigaset/gigaset.h:74:
+#define IFNULLGOTO(a,b)   if (unlikely(!(a))) {err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); goto b; }

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#120: FILE: drivers/isdn/gigaset/gigaset.h:74:
+#define IFNULLGOTO(a,b)   if (unlikely(!(a))) {err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); goto b; }

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#125: FILE: drivers/isdn/gigaset/gigaset.h:79:
+ * 'insmod usb_gigaset.o debug=0x2c' will set DEBUG_OPEN, DEBUG_CMD and DEBUG_INTR. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#131: FILE: drivers/isdn/gigaset/gigaset.h:85:
+	DEBUG_INTR_DUMP   = 0x0010, /* Activating hexdump debug output on interrupt
+				      requests, not available as run-time option */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#131: FILE: drivers/isdn/gigaset/gigaset.h:85:
+				      requests, not available as run-time option */

WARNING:LONG_LINE_COMMENT: line length of 132 exceeds 100 columns
#155: FILE: drivers/isdn/gigaset/gigaset.h:109:
+//#define DEBUG_DEFAULT (DEBUG_LOCK | DEBUG_INIT | DEBUG_TRANSCMD | DEBUG_CMD | DEBUF_IF | DEBUG_DRIVER | DEBUG_OUTPUT | DEBUG_INTR)

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#163: FILE: drivers/isdn/gigaset/gigaset.h:117:
+#define info(format, arg...) printk(KERN_INFO "%s: " format "\n", THIS_MODULE ? THIS_MODULE->name : "gigaset_hw" , ## arg)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#163: FILE: drivers/isdn/gigaset/gigaset.h:117:
+#define info(format, arg...) printk(KERN_INFO "%s: " format "\n", THIS_MODULE ? THIS_MODULE->name : "gigaset_hw" , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#163: FILE: drivers/isdn/gigaset/gigaset.h:117:
+#define info(format, arg...) printk(KERN_INFO "%s: " format "\n", THIS_MODULE ? THIS_MODULE->name : "gigaset_hw" , ## arg)
                                                                                                                  ^

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#166: FILE: drivers/isdn/gigaset/gigaset.h:120:
+#define notice(format, arg...) printk(KERN_NOTICE "%s: " format "\n", THIS_MODULE ? THIS_MODULE->name : "gigaset_hw" , ## arg)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#166: FILE: drivers/isdn/gigaset/gigaset.h:120:
+#define notice(format, arg...) printk(KERN_NOTICE "%s: " format "\n", THIS_MODULE ? THIS_MODULE->name : "gigaset_hw" , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#166: FILE: drivers/isdn/gigaset/gigaset.h:120:
+#define notice(format, arg...) printk(KERN_NOTICE "%s: " format "\n", THIS_MODULE ? THIS_MODULE->name : "gigaset_hw" , ## arg)
                                                                                                                      ^

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#169: FILE: drivers/isdn/gigaset/gigaset.h:123:
+#define warn(format, arg...) printk(KERN_WARNING "%s: " format "\n", THIS_MODULE ? THIS_MODULE->name : "gigaset_hw" , ## arg)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#169: FILE: drivers/isdn/gigaset/gigaset.h:123:
+#define warn(format, arg...) printk(KERN_WARNING "%s: " format "\n", THIS_MODULE ? THIS_MODULE->name : "gigaset_hw" , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#169: FILE: drivers/isdn/gigaset/gigaset.h:123:
+#define warn(format, arg...) printk(KERN_WARNING "%s: " format "\n", THIS_MODULE ? THIS_MODULE->name : "gigaset_hw" , ## arg)
                                                                                                                     ^

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#172: FILE: drivers/isdn/gigaset/gigaset.h:126:
+#define err(format, arg...) printk(KERN_ERR "%s: " format "\n", THIS_MODULE ? THIS_MODULE->name : "gigaset_hw" , ## arg)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#172: FILE: drivers/isdn/gigaset/gigaset.h:126:
+#define err(format, arg...) printk(KERN_ERR "%s: " format "\n", THIS_MODULE ? THIS_MODULE->name : "gigaset_hw" , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#172: FILE: drivers/isdn/gigaset/gigaset.h:126:
+#define err(format, arg...) printk(KERN_ERR "%s: " format "\n", THIS_MODULE ? THIS_MODULE->name : "gigaset_hw" , ## arg)
                                                                                                                ^

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#176: FILE: drivers/isdn/gigaset/gigaset.h:130:
+#define dbg(level, format, arg...) do { if (unlikely(((enum debuglevel)gigaset_debuglevel) & (level))) \

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#177: FILE: drivers/isdn/gigaset/gigaset.h:131:
+	printk(KERN_DEBUG "%s: " format "\n", THIS_MODULE ? THIS_MODULE->name : "gigaset_hw" , ## arg); } while (0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#177: FILE: drivers/isdn/gigaset/gigaset.h:131:
+	printk(KERN_DEBUG "%s: " format "\n", THIS_MODULE ? THIS_MODULE->name : "gigaset_hw" , ## arg); } while (0)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#177: FILE: drivers/isdn/gigaset/gigaset.h:131:
+	printk(KERN_DEBUG "%s: " format "\n", THIS_MODULE ? THIS_MODULE->name : "gigaset_hw" , ## arg); } while (0)
 	                                                                                     ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#177: FILE: drivers/isdn/gigaset/gigaset.h:131:
+	printk(KERN_DEBUG "%s: " format "\n", THIS_MODULE ? THIS_MODULE->name : "gigaset_hw" , ## arg); } while (0)

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: drivers/isdn/gigaset/gigaset.h:137:
+                        size_t len, const unsigned char *buf, int from_user);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: drivers/isdn/gigaset/gigaset.h:137:
+                        size_t len, const unsigned char *buf, int from_user);$

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#203: FILE: drivers/isdn/gigaset/gigaset.h:157:
+#define HD_RECEIVEATDATA_ACK		(0x35)		// 3070		// att: HD_RECEIVE>>AT<<DATA_ACK

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#212: FILE: drivers/isdn/gigaset/gigaset.h:166:
+// ^I Powermangment$

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#238: FILE: drivers/isdn/gigaset/gigaset.h:192:
+#define BAS_INBUFSIZE	(BAS_MAXFRAME * BAS_NUMFRAMES) /* size of isochronous input buffer per URB */

CHECK:CAMELCASE: Avoid CamelCase: <min_ConState>
#333: FILE: drivers/isdn/gigaset/gigaset.h:287:
+	int	min_ConState;   /* <0 => ignore */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <max_ConState>
#334: FILE: drivers/isdn/gigaset/gigaset.h:288:
+	int	max_ConState;   /* <0 => ignore */

CHECK:CAMELCASE: Avoid CamelCase: <new_ConState>
#336: FILE: drivers/isdn/gigaset/gigaset.h:290:
+	int	new_ConState;   /* <0 => ignore */

CHECK:CAMELCASE: Avoid CamelCase: <ConState>
#413: FILE: drivers/isdn/gigaset/gigaset.h:367:
+	unsigned int		ConState;                           /* State of connection */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#418: FILE: drivers/isdn/gigaset/gigaset.h:372:
+	unsigned                pending_commands;   /* see PC_XXXX */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#466: FILE: drivers/isdn/gigaset/gigaset.h:420:
+	unsigned chstate;			/* bitmap (CHS_*) */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#468: FILE: drivers/isdn/gigaset/gigaset.h:422:
+	unsigned	proto2;			/* Layer 2 protocol (ISDN_PROTO_L2_*) */

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#479: FILE: drivers/isdn/gigaset/gigaset.h:433:
+		struct ser_bc_state *ser;		 /* private data of serial hardware driver */
 		                     ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#479: FILE: drivers/isdn/gigaset/gigaset.h:433:
+		struct ser_bc_state *ser;		 /* private data of serial hardware driver */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#487: FILE: drivers/isdn/gigaset/gigaset.h:441:
+	unsigned minor_index;

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: drivers/isdn/gigaset/gigaset.h:451:
+^I                                     /* only changed by the event layer */$

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#503: FILE: drivers/isdn/gigaset/gigaset.h:457:
+	int onechannel;                      /* data and commands transmitted in one stream (M10x) */

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#505: FILE: drivers/isdn/gigaset/gigaset.h:459:
+	spinlock_t lock;

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#507: FILE: drivers/isdn/gigaset/gigaset.h:461:
+	struct list_head temp_at_states;     /* list of temporary "struct at_state_t"s without B channel */

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#512: FILE: drivers/isdn/gigaset/gigaset.h:466:
+	spinlock_t cmdlock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#513: FILE: drivers/isdn/gigaset/gigaset.h:467:
+	unsigned curlen, cmdbytes;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#515: FILE: drivers/isdn/gigaset/gigaset.h:469:
+	unsigned open_count;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#518: FILE: drivers/isdn/gigaset/gigaset.h:472:
+	unsigned control_state;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#520: FILE: drivers/isdn/gigaset/gigaset.h:474:
+	unsigned fwver[4];

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#529: FILE: drivers/isdn/gigaset/gigaset.h:483:
+	isdn_if iif;
 	        ^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#536: FILE: drivers/isdn/gigaset/gigaset.h:490:
+^I                                     /*   connected is not changed, */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#537: FILE: drivers/isdn/gigaset/gigaset.h:491:
+^I                                     /*   hardware_up is not changed, */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#538: FILE: drivers/isdn/gigaset/gigaset.h:492:
+^I                                     /*   MState is not changed to or from MS_LOCKED */$

WARNING:TYPO_SPELLING: 'reponses' may be misspelled - perhaps 'responses'?
#547: FILE: drivers/isdn/gigaset/gigaset.h:501:
+	                                      *   -> for modem reponses (and incomming data for M10x)
 	                                                       ^^^^^^^^

WARNING:TYPO_SPELLING: 'incomming' may be misspelled - perhaps 'incoming'?
#547: FILE: drivers/isdn/gigaset/gigaset.h:501:
+	                                      *   -> for modem reponses (and incomming data for M10x)
 	                                                                     ^^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#547: FILE: drivers/isdn/gigaset/gigaset.h:501:
+	                                      *   -> for modem reponses (and incomming data for M10x)

ERROR:CODE_INDENT: code indent should use tabs where possible
#547: FILE: drivers/isdn/gigaset/gigaset.h:501:
+^I                                      *   -> for modem reponses (and incomming data for M10x)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#548: FILE: drivers/isdn/gigaset/gigaset.h:502:
+^I                                      *   -> on timeout$

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#549: FILE: drivers/isdn/gigaset/gigaset.h:503:
+	                                      *   -> after setting bits in xxx.at_state.pending_command

ERROR:CODE_INDENT: code indent should use tabs where possible
#549: FILE: drivers/isdn/gigaset/gigaset.h:503:
+^I                                      *   -> after setting bits in xxx.at_state.pending_command$

ERROR:CODE_INDENT: code indent should use tabs where possible
#550: FILE: drivers/isdn/gigaset/gigaset.h:504:
+^I                                      *      (e.g. command from LL) */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#550: FILE: drivers/isdn/gigaset/gigaset.h:504:
+	                                      *      (e.g. command from LL) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#552: FILE: drivers/isdn/gigaset/gigaset.h:506:
+					      * (not used in base driver) */

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#557: FILE: drivers/isdn/gigaset/gigaset.h:511:
+	spinlock_t ev_lock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#561: FILE: drivers/isdn/gigaset/gigaset.h:515:
+	unsigned cbytes;

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#566: FILE: drivers/isdn/gigaset/gigaset.h:520:
+		struct ser_cardstate *ser; /* private data of serial hardware driver */
 		                      ^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#576: FILE: drivers/isdn/gigaset/gigaset.h:530:
+	unsigned have_tty;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#577: FILE: drivers/isdn/gigaset/gigaset.h:531:
+	unsigned minor;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#578: FILE: drivers/isdn/gigaset/gigaset.h:532:
+	unsigned minors;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#580: FILE: drivers/isdn/gigaset/gigaset.h:534:
+	unsigned *flags;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#598: FILE: drivers/isdn/gigaset/gigaset.h:552:
+	spinlock_t	isooutlock;

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#602: FILE: drivers/isdn/gigaset/gigaset.h:556:
+	unsigned numsub;			/* submitted URB counter (for diagnostic messages only) */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#602: FILE: drivers/isdn/gigaset/gigaset.h:556:
+	unsigned numsub;			/* submitted URB counter (for diagnostic messages only) */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#611: FILE: drivers/isdn/gigaset/gigaset.h:565:
+	unsigned isoinlost;			/* number of bytes lost */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#613: FILE: drivers/isdn/gigaset/gigaset.h:567:
+	unsigned seqlen;			/* number of '1' bits not yet unstuffed */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#614: FILE: drivers/isdn/gigaset/gigaset.h:568:
+	unsigned inbyte, inbits;		/* collected bits for next byte */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#616: FILE: drivers/isdn/gigaset/gigaset.h:570:
+	unsigned goodbytes;			/* bytes correctly received */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#617: FILE: drivers/isdn/gigaset/gigaset.h:571:
+	unsigned alignerrs;			/* frames with incomplete byte at end */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#618: FILE: drivers/isdn/gigaset/gigaset.h:572:
+	unsigned fcserrs;			/* FCS errors */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#619: FILE: drivers/isdn/gigaset/gigaset.h:573:
+	unsigned frameerrs;			/* framing errors */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#620: FILE: drivers/isdn/gigaset/gigaset.h:574:
+	unsigned giants;			/* long frames */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#621: FILE: drivers/isdn/gigaset/gigaset.h:575:
+	unsigned runts;				/* short frames */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#622: FILE: drivers/isdn/gigaset/gigaset.h:576:
+	unsigned aborts;			/* HDLC aborts */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#623: FILE: drivers/isdn/gigaset/gigaset.h:577:
+	unsigned shared0s;			/* '0' bits shared between flags */

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#624: FILE: drivers/isdn/gigaset/gigaset.h:578:
+	unsigned stolen0s;			/* '0' stuff bits also serving as leading flag bits */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#624: FILE: drivers/isdn/gigaset/gigaset.h:578:
+	unsigned stolen0s;			/* '0' stuff bits also serving as leading flag bits */

ERROR:CODE_INDENT: code indent should use tabs where possible
#631: FILE: drivers/isdn/gigaset/gigaset.h:585:
+^I                 const unsigned char *buf, int len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#632: FILE: drivers/isdn/gigaset/gigaset.h:586:
+^I                 struct tasklet_struct *wake_tasklet);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#640: FILE: drivers/isdn/gigaset/gigaset.h:594:
+	 * Should call gigaset_bchannel_up(), when finished. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#644: FILE: drivers/isdn/gigaset/gigaset.h:598:
+	 * Should call gigaset_bchannel_down(), when finished. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#663: FILE: drivers/isdn/gigaset/gigaset.h:617:
+	///* Called by gigaset_stop() for killing URBs, shutting down the device, ...
+	//   hardwareup: ==0: don't try to shut down the device, hardware is really not accessible

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#664: FILE: drivers/isdn/gigaset/gigaset.h:618:
+	//	       !=0: hardware still up */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#668: FILE: drivers/isdn/gigaset/gigaset.h:622:
+	int (*set_modem_ctrl)(struct cardstate *cs, unsigned old_state, unsigned new_state);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#668: FILE: drivers/isdn/gigaset/gigaset.h:622:
+	int (*set_modem_ctrl)(struct cardstate *cs, unsigned old_state, unsigned new_state);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#669: FILE: drivers/isdn/gigaset/gigaset.h:623:
+	int (*baud_rate)(struct cardstate *cs, unsigned cflag);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#670: FILE: drivers/isdn/gigaset/gigaset.h:624:
+	int (*set_line_ctrl)(struct cardstate *cs, unsigned cflag);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#676: FILE: drivers/isdn/gigaset/gigaset.h:630:
+	 * received through the common/control channel. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#695: FILE: drivers/isdn/gigaset/gigaset.h:649:
+ * After sending gigaset_skb_sent() should be called. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#699: FILE: drivers/isdn/gigaset/gigaset.h:653:
+ * received through the common/control channel. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#707: FILE: drivers/isdn/gigaset/gigaset.h:661:
+ * After sending gigaset_skb_sent() should be called. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#711: FILE: drivers/isdn/gigaset/gigaset.h:665:
+ * received through the common/control channel. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#715: FILE: drivers/isdn/gigaset/gigaset.h:669:
+ * received through the isochronous channel */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#716: FILE: drivers/isdn/gigaset/gigaset.h:670:
+void gigaset_isoc_receive(unsigned char *src, unsigned count, struct bc_state *bcs);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#719: FILE: drivers/isdn/gigaset/gigaset.h:673:
+ * into the isochronous output buffer */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#746: FILE: drivers/isdn/gigaset/gigaset.h:700:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#756: FILE: drivers/isdn/gigaset/gigaset.h:710:
+	response.parm.errcode = ISDN_STAT_L1ERR_RECV;
 	         ^^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#757: FILE: drivers/isdn/gigaset/gigaset.h:711:
+	bcs->cs->iif.statcallb(&response);
 	         ^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#768: FILE: drivers/isdn/gigaset/gigaset.h:722:
+ * when a complete modem response line has been received */

ERROR:CODE_INDENT: code indent should use tabs where possible
#785: FILE: drivers/isdn/gigaset/gigaset.h:739:
+                     struct cardstate *cs, int cid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#785: FILE: drivers/isdn/gigaset/gigaset.h:739:
+                     struct cardstate *cs, int cid);$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#793: FILE: drivers/isdn/gigaset/gigaset.h:747:
+struct gigaset_driver *gigaset_initdriver(unsigned minor, unsigned minors,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#793: FILE: drivers/isdn/gigaset/gigaset.h:747:
+struct gigaset_driver *gigaset_initdriver(unsigned minor, unsigned minors,

ERROR:CODE_INDENT: code indent should use tabs where possible
#794: FILE: drivers/isdn/gigaset/gigaset.h:748:
+                                          const char *procname,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: drivers/isdn/gigaset/gigaset.h:748:
+                                          const char *procname,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#795: FILE: drivers/isdn/gigaset/gigaset.h:749:
+                                          const char *devname,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: drivers/isdn/gigaset/gigaset.h:749:
+                                          const char *devname,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#796: FILE: drivers/isdn/gigaset/gigaset.h:750:
+                                          const char *devfsname,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#796: FILE: drivers/isdn/gigaset/gigaset.h:750:
+                                          const char *devfsname,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#797: FILE: drivers/isdn/gigaset/gigaset.h:751:
+                                          const struct gigaset_ops *ops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: drivers/isdn/gigaset/gigaset.h:751:
+                                          const struct gigaset_ops *ops,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#798: FILE: drivers/isdn/gigaset/gigaset.h:752:
+                                          struct module *owner);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: drivers/isdn/gigaset/gigaset.h:752:
+                                          struct module *owner);$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#803: FILE: drivers/isdn/gigaset/gigaset.h:757:
+struct cardstate *gigaset_get_cs_by_minor(unsigned minor);

ERROR:CODE_INDENT: code indent should use tabs where possible
#837: FILE: drivers/isdn/gigaset/gigaset.h:791:
+                                  struct at_state_t *at_state, int type,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#837: FILE: drivers/isdn/gigaset/gigaset.h:791:
+                                  struct at_state_t *at_state, int type,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#838: FILE: drivers/isdn/gigaset/gigaset.h:792:
+                                  void *ptr, int parameter, void *arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#838: FILE: drivers/isdn/gigaset/gigaset.h:792:
+                                  void *ptr, int parameter, void *arg);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#847: FILE: drivers/isdn/gigaset/gigaset.h:801:
+	unsigned long flags;
+	spin_lock_irqsave(&cs->lock, flags);

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#878: FILE: drivers/isdn/gigaset/gigaset.h:832:
+ * existing buffer can accomodate them
                        ^^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#884: FILE: drivers/isdn/gigaset/gigaset.h:838:
+                                                   unsigned int len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#884: FILE: drivers/isdn/gigaset/gigaset.h:838:
+                                                   unsigned int len)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#897: FILE: drivers/isdn/gigaset/gigaset.h:851:
+                                   struct cardstate *cs,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#897: FILE: drivers/isdn/gigaset/gigaset.h:851:
+                                   struct cardstate *cs,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#898: FILE: drivers/isdn/gigaset/gigaset.h:852:
+                                   struct bc_state *bcs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#898: FILE: drivers/isdn/gigaset/gigaset.h:852:
+                                   struct bc_state *bcs)$

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#900: FILE: drivers/isdn/gigaset/gigaset.h:854:
+	cs->iif.rcvcallb_skb(cs->myid, bcs->channel, skb);
 	    ^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#908: FILE: drivers/isdn/gigaset/gigaset.h:862:
+                                     struct cardstate *cs,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#908: FILE: drivers/isdn/gigaset/gigaset.h:862:
+                                     struct cardstate *cs,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#909: FILE: drivers/isdn/gigaset/gigaset.h:863:
+                                     struct bc_state *bcs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#909: FILE: drivers/isdn/gigaset/gigaset.h:863:
+                                     struct bc_state *bcs)$

CHECK:BRACES: braces {} should be used on all arms of this statement
#914: FILE: drivers/isdn/gigaset/gigaset.h:868:
+	if (bcs->ignore)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#916: FILE: drivers/isdn/gigaset/gigaset.h:870:
+	else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#922: FILE: drivers/isdn/gigaset/gigaset.h:876:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#926: FILE: drivers/isdn/gigaset/gigaset.h:880:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#929: FILE: drivers/isdn/gigaset/gigaset.h:883:
+                                     const unsigned char *src,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#929: FILE: drivers/isdn/gigaset/gigaset.h:883:
+                                     const unsigned char *src,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#930: FILE: drivers/isdn/gigaset/gigaset.h:884:
+                                     unsigned numbytes)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#930: FILE: drivers/isdn/gigaset/gigaset.h:884:
+                                     unsigned numbytes)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#930: FILE: drivers/isdn/gigaset/gigaset.h:884:
+                                     unsigned numbytes)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#932: FILE: drivers/isdn/gigaset/gigaset.h:886:
+	unsigned n, head, tail, bytesleft;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#948: FILE: drivers/isdn/gigaset/gigaset.h:902:
+			n = (RBUFSIZE-1) - tail;
 			             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#973: FILE: drivers/isdn/gigaset/gigaset.h:927:
+                           const char *devname, const char *devfsname);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#973: FILE: drivers/isdn/gigaset/gigaset.h:927:
+                           const char *devname, const char *devfsname);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#982: FILE: drivers/isdn/gigaset/gigaset.h:936:
+                        unsigned char *buffer, size_t len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#982: FILE: drivers/isdn/gigaset/gigaset.h:936:
+                        unsigned char *buffer, size_t len);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#988: FILE: drivers/isdn/gigaset/common.c:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1003: FILE: drivers/isdn/gigaset/common.c:16:
+ * Version: $Id: common.c,v 1.104.4.22 2006/02/04 18:28:16 hjlipp Exp $

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1019: FILE: drivers/isdn/gigaset/common.c:32:
+module_param_named(debug, gigaset_debuglevel, int, S_IRUGO|S_IWUSR);
                                                           ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1019: FILE: drivers/isdn/gigaset/common.c:32:
+module_param_named(debug, gigaset_debuglevel, int, S_IRUGO|S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1023: FILE: drivers/isdn/gigaset/common.c:36:
+/*======================================================================
+  Prototypes of internal functions

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1031: FILE: drivers/isdn/gigaset/common.c:44:
+static void make_valid(struct cardstate *cs, unsigned mask);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1032: FILE: drivers/isdn/gigaset/common.c:45:
+static void make_invalid(struct cardstate *cs, unsigned mask);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1076: FILE: drivers/isdn/gigaset/common.c:89:
+                        size_t len, const unsigned char *buf, int from_user)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1076: FILE: drivers/isdn/gigaset/common.c:89:
+                        size_t len, const unsigned char *buf, int from_user)$

WARNING:SIZEOF_PARENTHESIS: sizeof outbuf should be sizeof(outbuf)
#1082: FILE: drivers/isdn/gigaset/common.c:95:
+	size_t space = sizeof outbuf - 1;

WARNING:SIZEOF_PARENTHESIS: sizeof inbuf should be sizeof(inbuf)
#1089: FILE: drivers/isdn/gigaset/common.c:102:
+		numin = len < sizeof inbuf ? len : sizeof inbuf;

CHECK:SPACING: No space is necessary after a cast
#1091: FILE: drivers/isdn/gigaset/common.c:104:
+		if (copy_from_user(inbuf, (const unsigned char __user *) buf, numin)) {

WARNING:SIZEOF_PARENTHESIS: sizeof inbuf should be sizeof(inbuf)
#1092: FILE: drivers/isdn/gigaset/common.c:105:
+			strncpy(inbuf, "<FAULT>", sizeof inbuf);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1099: FILE: drivers/isdn/gigaset/common.c:112:
+		if (*in >= 32)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1101: FILE: drivers/isdn/gigaset/common.c:114:
+		else {

CHECK:SPACING: No space is necessary after a cast
#1111: FILE: drivers/isdn/gigaset/common.c:124:
+	dbg(level, "%s (%u bytes): %s", msg, (unsigned) len, outbuf);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1111: FILE: drivers/isdn/gigaset/common.c:124:
+	dbg(level, "%s (%u bytes): %s", msg, (unsigned) len, outbuf);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1115: FILE: drivers/isdn/gigaset/common.c:128:
+static int setflags(struct cardstate *cs, unsigned flags, unsigned delay)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1115: FILE: drivers/isdn/gigaset/common.c:128:
+static int setflags(struct cardstate *cs, unsigned flags, unsigned delay)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1157: FILE: drivers/isdn/gigaset/common.c:170:
+	r = setflags(cs, TIOCM_RTS|TIOCM_DTR, 800);
 	                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1165: FILE: drivers/isdn/gigaset/common.c:178:
+	cs->control_state = TIOCM_RTS|TIOCM_DTR; // FIXME is this a good value?
 	                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1166: FILE: drivers/isdn/gigaset/common.c:179:
+	cs->ops->set_modem_ctrl(cs, 0, TIOCM_RTS|TIOCM_DTR);
 	                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1183: FILE: drivers/isdn/gigaset/common.c:196:
+^I                       atomic_read(&at_state->timer_index), NULL)) {$

CHECK:SPACING: No space is necessary after a cast
#1192: FILE: drivers/isdn/gigaset/common.c:205:
+	struct cardstate *cs = (struct cardstate *) data;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1194: FILE: drivers/isdn/gigaset/common.c:207:
+	unsigned channel;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1303: FILE: drivers/isdn/gigaset/common.c:316:
+	unsigned head, tail;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1321: FILE: drivers/isdn/gigaset/common.c:334:
+                                  struct at_state_t *at_state, int type,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1321: FILE: drivers/isdn/gigaset/common.c:334:
+                                  struct at_state_t *at_state, int type,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1322: FILE: drivers/isdn/gigaset/common.c:335:
+                                  void *ptr, int parameter, void *arg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1322: FILE: drivers/isdn/gigaset/common.c:335:
+                                  void *ptr, int parameter, void *arg)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1325: FILE: drivers/isdn/gigaset/common.c:338:
+	unsigned next, tail;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1332: FILE: drivers/isdn/gigaset/common.c:345:
+	if (unlikely(next == atomic_read(&cs->ev_head)))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1334: FILE: drivers/isdn/gigaset/common.c:347:
+	else {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1382: FILE: drivers/isdn/gigaset/common.c:395:
+	if (!bcs->cs->ops->freebcshw(bcs)) {
+		dbg(DEBUG_INIT, "failed");
+	}

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#1415: FILE: drivers/isdn/gigaset/common.c:428:
+	spin_unlock_irqrestore(&cs->lock, flags); /* event handler and timer are not rescheduled below */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1429: FILE: drivers/isdn/gigaset/common.c:442:
+		/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1433: FILE: drivers/isdn/gigaset/common.c:446:
+		dbg(DEBUG_INIT, "clearing iif");
 		                          ^^^

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1436: FILE: drivers/isdn/gigaset/common.c:449:
+		/* fall through */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1442: FILE: drivers/isdn/gigaset/common.c:455:
+		/* fall through */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1462: FILE: drivers/isdn/gigaset/common.c:475:
+                     struct cardstate *cs, int cid)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1462: FILE: drivers/isdn/gigaset/common.c:475:
+                     struct cardstate *cs, int cid)$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1489: FILE: drivers/isdn/gigaset/common.c:502:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1491: FILE: drivers/isdn/gigaset/common.c:504:
+                               struct cardstate *cs, int inputstate)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1491: FILE: drivers/isdn/gigaset/common.c:504:
+                               struct cardstate *cs, int inputstate)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1504: FILE: drivers/isdn/gigaset/common.c:517:
+                                        struct cardstate *cs, int channel)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1504: FILE: drivers/isdn/gigaset/common.c:517:
+                                        struct cardstate *cs, int channel)$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1528: FILE: drivers/isdn/gigaset/common.c:541:
+	if (cs->ignoreframes) {
[...]
+	} else if ((bcs->skb = dev_alloc_skb(SBUFSIZE + HW_HDR_LEN)) != NULL)
[...]
+	else {
[...]

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1531: FILE: drivers/isdn/gigaset/common.c:544:
+	} else if ((bcs->skb = dev_alloc_skb(SBUFSIZE + HW_HDR_LEN)) != NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: Unbalanced braces around else statement
#1533: FILE: drivers/isdn/gigaset/common.c:546:
+	else {

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1590: FILE: drivers/isdn/gigaset/common.c:603:
+	cs->bcs = kmalloc(channels * sizeof(struct bc_state), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*cs->inbuf)...) over kmalloc(sizeof(struct inbuf_t)...)
#1594: FILE: drivers/isdn/gigaset/common.c:607:
+	cs->inbuf = kmalloc(sizeof(struct inbuf_t), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#1609: FILE: drivers/isdn/gigaset/common.c:622:
+	tasklet_init(&cs->event_tasklet, &gigaset_handle_event, (unsigned long) cs);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1646: FILE: drivers/isdn/gigaset/common.c:659:
+	if (onechannel) {			//FIXME distinction necessary?
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1648: FILE: drivers/isdn/gigaset/common.c:661:
+	} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1654: FILE: drivers/isdn/gigaset/common.c:667:
+	cs->cmdbuf = cs->lastcmdbuf = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'accessable' may be misspelled - perhaps 'accessible'?
#1664: FILE: drivers/isdn/gigaset/common.c:677:
+	 * But this device will just be accessable if a physical USB device is connected
 	                                ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1667: FILE: drivers/isdn/gigaset/common.c:680:
+	dbg(DEBUG_INIT, "setting up iif");
 	                            ^^^

CHECK:SPACING: No space is necessary after a cast
#1684: FILE: drivers/isdn/gigaset/common.c:697:
+	cs->timer.data = (unsigned long) cs;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1688: FILE: drivers/isdn/gigaset/common.c:701:
+	 * Same problem(?) with mod_timer() in timer_tick(). */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#1695: FILE: drivers/isdn/gigaset/common.c:708:
+error:	if (cs)
+		up(&cs->sem);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1734: FILE: drivers/isdn/gigaset/common.c:747:
+
+

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1766: FILE: drivers/isdn/gigaset/common.c:779:
+	cs->cmdbuf = cs->lastcmdbuf = NULL;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1790: FILE: drivers/isdn/gigaset/common.c:803:
+
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1800: FILE: drivers/isdn/gigaset/common.c:813:
+		cs->ops->set_modem_ctrl(cs, 0, TIOCM_DTR|TIOCM_RTS);
 		                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1803: FILE: drivers/isdn/gigaset/common.c:816:
+		cs->control_state = TIOCM_DTR|TIOCM_RTS;
 		                             ^

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#1903: FILE: drivers/isdn/gigaset/common.c:916:
+	static struct cardstate *ret = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1906: FILE: drivers/isdn/gigaset/common.c:919:
+	unsigned i;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1933: FILE: drivers/isdn/gigaset/common.c:946:
+	unsigned i;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1961: FILE: drivers/isdn/gigaset/common.c:974:
+struct cardstate *gigaset_get_cs_by_minor(unsigned minor)

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#1964: FILE: drivers/isdn/gigaset/common.c:977:
+	static struct cardstate *ret = NULL;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1966: FILE: drivers/isdn/gigaset/common.c:979:
+	unsigned index;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2012: FILE: drivers/isdn/gigaset/common.c:1025:
+struct gigaset_driver *gigaset_initdriver(unsigned minor, unsigned minors,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2012: FILE: drivers/isdn/gigaset/common.c:1025:
+struct gigaset_driver *gigaset_initdriver(unsigned minor, unsigned minors,

ERROR:CODE_INDENT: code indent should use tabs where possible
#2013: FILE: drivers/isdn/gigaset/common.c:1026:
+                                          const char *procname,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2013: FILE: drivers/isdn/gigaset/common.c:1026:
+                                          const char *procname,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2014: FILE: drivers/isdn/gigaset/common.c:1027:
+                                          const char *devname,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2014: FILE: drivers/isdn/gigaset/common.c:1027:
+                                          const char *devname,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2015: FILE: drivers/isdn/gigaset/common.c:1028:
+                                          const char *devfsname,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2015: FILE: drivers/isdn/gigaset/common.c:1028:
+                                          const char *devfsname,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2016: FILE: drivers/isdn/gigaset/common.c:1029:
+                                          const struct gigaset_ops *ops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2016: FILE: drivers/isdn/gigaset/common.c:1029:
+                                          const struct gigaset_ops *ops,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2017: FILE: drivers/isdn/gigaset/common.c:1030:
+                                          struct module *owner)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2017: FILE: drivers/isdn/gigaset/common.c:1030:
+                                          struct module *owner)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2021: FILE: drivers/isdn/gigaset/common.c:1034:
+	unsigned i;

WARNING:SIZEOF_PARENTHESIS: sizeof *drv should be sizeof(*drv)
#2023: FILE: drivers/isdn/gigaset/common.c:1036:
+	drv = kmalloc(sizeof *drv, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *drv->cs should be sizeof(*drv->cs)
#2039: FILE: drivers/isdn/gigaset/common.c:1052:
+	drv->cs = kmalloc(minors * sizeof *drv->cs, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *drv->flags should be sizeof(*drv->flags)
#2042: FILE: drivers/isdn/gigaset/common.c:1055:
+	drv->flags = kmalloc(minors * sizeof *drv->flags, GFP_KERNEL);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2073: FILE: drivers/isdn/gigaset/common.c:1086:
+	unsigned i;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#2074: FILE: drivers/isdn/gigaset/common.c:1087:
+	static struct cardstate *ret = NULL;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2093: FILE: drivers/isdn/gigaset/common.c:1106:
+	struct gigaset_driver *drv = cs->driver;
+	spin_lock_irqsave(&drv->lock, flags);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2098: FILE: drivers/isdn/gigaset/common.c:1111:
+static void make_valid(struct cardstate *cs, unsigned mask)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2102: FILE: drivers/isdn/gigaset/common.c:1115:
+	struct gigaset_driver *drv = cs->driver;
+	spin_lock_irqsave(&drv->lock, flags);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2107: FILE: drivers/isdn/gigaset/common.c:1120:
+static void make_invalid(struct cardstate *cs, unsigned mask)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2111: FILE: drivers/isdn/gigaset/common.c:1124:
+	struct gigaset_driver *drv = cs->driver;
+	spin_lock_irqsave(&drv->lock, flags);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2121: FILE: drivers/isdn/gigaset/common.c:1134:
+	unsigned i;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#2143: FILE: drivers/isdn/gigaset/common.c:1156:
+	unsigned *minor_flags;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2160: FILE: drivers/isdn/gigaset/common.c:1173:
+	unsigned long flags;
+	spin_lock_irqsave(&drv->lock, flags);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000105592.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 63 errors, 169 warnings, 39 checks, 2141 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000105592.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
