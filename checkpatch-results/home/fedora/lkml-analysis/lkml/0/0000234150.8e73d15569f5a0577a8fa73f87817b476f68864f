CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#69: FILE: drivers/base/power/power.h:69:
+extern int suspend_device(struct device *, pm_message_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#69: FILE: drivers/base/power/power.h:69:
+extern int suspend_device(struct device *, pm_message_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pm_message_t' should also have an identifier name
#69: FILE: drivers/base/power/power.h:69:
+extern int suspend_device(struct device *, pm_message_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#77: FILE: drivers/base/power/power.h:76:
+extern int dpm_runtime_suspend(struct device *, pm_message_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#77: FILE: drivers/base/power/power.h:76:
+extern int dpm_runtime_suspend(struct device *, pm_message_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pm_message_t' should also have an identifier name
#77: FILE: drivers/base/power/power.h:76:
+extern int dpm_runtime_suspend(struct device *, pm_message_t);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#86: FILE: drivers/base/power/power.h:91:
+static inline int dpm_runtime_suspend(struct device * dev, pm_message_t state)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#125: FILE: drivers/base/power/runtime.c:47:
+int dpm_runtime_suspend(struct device * dev, pm_message_t state)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#143: FILE: drivers/base/power/runtime.c:76:
+void dpm_set_power_state(struct device * dev, pm_message_t state)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#179: FILE: drivers/base/power/suspend.c:38:
+int suspend_device(struct device * dev, pm_message_t state)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->power.power_state == PMSG_ON'
#188: FILE: drivers/base/power/suspend.c:46:
+	if (dev->bus && dev->bus->suspend && (dev->power.power_state == PMSG_ON))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#220: FILE: drivers/usb/core/hcd-pci.c:358:
+		pci_set_power_state (dev, PCI_D0);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'diferent' may be misspelled - perhaps 'different'?
#259: FILE: include/linux/pm.h:211:
+ * We'll need to fix the drivers. So yes, putting 3 to all diferent defines is intentional,
                                                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#260: FILE: include/linux/pm.h:212:
+ * and will go away as soon as drivers are fixed. Also note that typedef is neccessary,
                                                                             ^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#266: FILE: include/linux/pm.h:218:
+#define PMSG_FREEZE	((__force pm_message_t) 3)

CHECK:SPACING: No space is necessary after a cast
#267: FILE: include/linux/pm.h:219:
+#define PMSG_SUSPEND	((__force pm_message_t) 3)

CHECK:SPACING: No space is necessary after a cast
#268: FILE: include/linux/pm.h:220:
+#define PMSG_ON		((__force pm_message_t) 0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#285: FILE: include/linux/pm.h:235:
+extern int device_suspend(pm_message_t state);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#286: FILE: include/linux/pm.h:236:
+extern int device_power_down(pm_message_t state);

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: kernel/power/disk.c:54:
+ ^I^Idevice_power_down(PMSG_SUSPEND);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#299: FILE: kernel/power/disk.c:54:
+ ^I^Idevice_power_down(PMSG_SUSPEND);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: kernel/power/disk.c:54:
+ ^I^Idevice_power_down(PMSG_SUSPEND);$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#316: FILE: kernel/power/disk.c:151:
+	if ((error = device_suspend(PMSG_FREEZE))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#317: FILE: kernel/power/disk.c:152:
+		printk("Some devices failed to suspend\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#334: FILE: kernel/power/main.c:68:
+	if ((error = device_suspend(PMSG_SUSPEND)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#351: FILE: kernel/power/main.c:88:
+	if ((error = device_power_down(PMSG_SUSPEND)))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234150.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 10 warnings, 8 checks, 275 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234150.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
