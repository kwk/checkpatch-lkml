WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
Make it possible to avoid ENFILE checking for kernel specific open files, such

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#33: 
Signed-Off-By: David Howells <dhowells@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#76: FILE: drivers/infiniband/core/uverbs_main.c:528:
+	filp = get_empty_filp(0);
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#184: FILE: fs/file_table.c:253:
+EXPORT_SYMBOL(fget_light);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#210: FILE: fs/inotify.c:942:
+	filp = get_empty_filp(0);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#223: FILE: fs/namei.c:1149:
+	struct file *filp = get_empty_filp(0);
 	             ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!f"
#253: FILE: fs/open.c:986:
+	if (f == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#330: FILE: include/linux/fs.h:1384:
+extern struct file * dentry_open_kernel(struct dentry *, struct vfsmount *, int);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#330: FILE: include/linux/fs.h:1384:
+extern struct file * dentry_open_kernel(struct dentry *, struct vfsmount *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#330: FILE: include/linux/fs.h:1384:
+extern struct file * dentry_open_kernel(struct dentry *, struct vfsmount *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#330: FILE: include/linux/fs.h:1384:
+extern struct file * dentry_open_kernel(struct dentry *, struct vfsmount *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#330: FILE: include/linux/fs.h:1384:
+extern struct file * dentry_open_kernel(struct dentry *, struct vfsmount *, int);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#339: FILE: include/linux/fs.h:1585:
+extern struct file * get_empty_filp(int kernel);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#339: FILE: include/linux/fs.h:1585:
+extern struct file * get_empty_filp(int kernel);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#347: FILE: include/linux/fs.h:1611:
+extern int generic_file_buffered_write_one_kernel_page(struct file *, pgoff_t, struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#347: FILE: include/linux/fs.h:1611:
+extern int generic_file_buffered_write_one_kernel_page(struct file *, pgoff_t, struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pgoff_t' should also have an identifier name
#347: FILE: include/linux/fs.h:1611:
+extern int generic_file_buffered_write_one_kernel_page(struct file *, pgoff_t, struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#347: FILE: include/linux/fs.h:1611:
+extern int generic_file_buffered_write_one_kernel_page(struct file *, pgoff_t, struct page *);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#360: FILE: kernel/futex.c:782:
+	filp = get_empty_filp(0);
 	^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#373: FILE: kernel/sysctl.c:946:
+		.maxlen		= 4*sizeof(int),
 		       		   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000084070.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 13 warnings, 5 checks, 270 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000084070.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
