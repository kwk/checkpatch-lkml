WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#define topology_physical_package_id(cpu)

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#define topology_core_id(cpu)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#define topology_thread_id(cpu)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#define topology_thread_siblings(cpu)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#define topology_core_siblings(cpu)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#132: FILE: drivers/base/topology.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: drivers/base/topology.c:8:
+ * All rights reserved.          $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#153: FILE: drivers/base/topology.c:22:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#154: FILE: drivers/base/topology.c:23:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#166: FILE: drivers/base/topology.c:35:
+	ssize_t (*show)(int cpu, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#167: FILE: drivers/base/topology.c:36:
+	ssize_t (*store)(const char *, size_t count);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#175: FILE: drivers/base/topology.c:44:
+#define define_one_ro(_name) ^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_name' - possible side-effects?
#175: FILE: drivers/base/topology.c:44:
+#define define_one_ro(_name) 		\
+static struct _topology_attr _name =	\
+	__ATTR(_name, 0444, show_##_name, NULL)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#189: FILE: drivers/base/topology.c:58:
+	len = cpumask_scnprintf(buf, NR_CPUS+1, topology_##name(cpu));	\
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#189: FILE: drivers/base/topology.c:58:
+	len = cpumask_scnprintf(buf, NR_CPUS+1, topology_##name(cpu));	\

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#196: FILE: drivers/base/topology.c:65:
+#define ref_physical_package_id_attr	&physical_package_id.attr,

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#204: FILE: drivers/base/topology.c:73:
+#define ref_core_id_attr		&core_id.attr,

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#212: FILE: drivers/base/topology.c:81:
+#define ref_thread_id_attr		&thread_id.attr,

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#220: FILE: drivers/base/topology.c:89:
+#define ref_thread_siblings_attr	&thread_siblings.attr,

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#228: FILE: drivers/base/topology.c:97:
+#define ref_core_siblings_attr		&core_siblings.attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#233: FILE: drivers/base/topology.c:102:
+static struct attribute * topology_default_attrs[] = {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#242: FILE: drivers/base/topology.c:111:
+static ssize_t topology_show(struct kobject * kobj, struct attribute * attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#242: FILE: drivers/base/topology.c:111:
+static ssize_t topology_show(struct kobject * kobj, struct attribute * attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#242: FILE: drivers/base/topology.c:111:
+static ssize_t topology_show(struct kobject * kobj, struct attribute * attr, char * buf)

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: drivers/base/topology.c:114:
+        struct _topology_attr *fattr = to_attr(attr);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: drivers/base/topology.c:114:
+        struct _topology_attr *fattr = to_attr(attr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: drivers/base/topology.c:115:
+        ssize_t ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: drivers/base/topology.c:115:
+        ssize_t ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: drivers/base/topology.c:118:
+        ret = fattr->show ? fattr->show(cpu, buf): 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: drivers/base/topology.c:118:
+        ret = fattr->show ? fattr->show(cpu, buf): 0;$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#249: FILE: drivers/base/topology.c:118:
+        ret = fattr->show ? fattr->show(cpu, buf): 0;
                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: drivers/base/topology.c:119:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: drivers/base/topology.c:119:
+        return ret;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#253: FILE: drivers/base/topology.c:122:
+static ssize_t topology_store(struct kobject * kobj, struct attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#253: FILE: drivers/base/topology.c:122:
+static ssize_t topology_store(struct kobject * kobj, struct attribute * attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: drivers/base/topology.c:123:
+static ssize_t topology_store(struct kobject * kobj, struct attribute * attr,
+		     const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#254: FILE: drivers/base/topology.c:123:
+		     const char * buf, size_t count)

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#259: FILE: drivers/base/topology.c:128:
+static struct sysfs_ops topology_sysfs_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#270: FILE: drivers/base/topology.c:139:
+static int __cpuinit topology_add_dev(struct sys_device * sys_dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#283: FILE: drivers/base/topology.c:152:
+static int __cpuexit topology_remove_dev(struct sys_device * sys_dev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: drivers/base/topology.c:162:
+static int __cpuinit topology_cpu_callback(struct notifier_block *nfb,
+		unsigned long action, void *hcpu)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#299: FILE: drivers/base/topology.c:168:
+	switch (action) {
+		case CPU_ONLINE:
[...]
+		case CPU_DEAD:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#313: FILE: drivers/base/topology.c:182:
+static struct notifier_block topology_cpu_notifier =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: drivers/base/topology.c:192:
+		topology_cpu_callback(&topology_cpu_notifier, CPU_ONLINE,
+				(void *)(long)i);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000123622.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 15 warnings, 5 checks, 286 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000123622.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
