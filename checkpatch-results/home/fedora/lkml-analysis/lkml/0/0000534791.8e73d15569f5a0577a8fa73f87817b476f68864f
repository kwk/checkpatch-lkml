WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#72: 
diff -uNr 2.4.4-mmap_write/include/linux/shmem_fs.h 2.4.4-mmap_write-SHMEM_I/include/linux/shmem_fs.h

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#87: FILE: include/linux/shmem_fs.h:22:
+^Istruct semaphore ^Isem;$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'inode' may be better as '(inode)' to avoid precedence issues
#103: FILE: include/linux/shmem_fs.h:40:
+#define SHMEM_I(inode)  (&inode->u.shmem_i)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#123: FILE: ipc/shm.c:366:
+		spin_lock (&info->lock);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#128: FILE: ipc/shm.c:369:
+		spin_unlock (&info->lock);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#149: FILE: mm/shmem.c:162:
+	struct shmem_inode_info * info = SHMEM_I(inode);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#158: FILE: mm/shmem.c:209:
+	list_del (&SHMEM_I(inode)->list);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#194: FILE: mm/shmem.c:465:
+	struct shmem_inode_info * info = SHMEM_I(inode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#213: FILE: mm/shmem.c:546:
+		list_add (&SHMEM_I(inode)->list, &shmem_inodes);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#233: FILE: mm/shmem.c:663:
+				info->max_index = index+1;
 				                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#251: FILE: mm/shmem.c:1224:
+static int shmem_unuse_inode (struct shmem_inode_info *info, swp_entry_t entry, struct page *page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#274: FILE: mm/shmem.c:1264:
+	struct shmem_inode_info * info;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: mm/shmem.c:208:
+^Iif (inode->i_op->truncate == shmem_truncate){ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#310: FILE: mm/shmem.c:208:
+	if (inode->i_op->truncate == shmem_truncate){ 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#311: FILE: mm/shmem.c:209:
+		spin_lock (&shmem_ilock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#312: FILE: mm/shmem.c:210:
+		list_del (&SHMEM_I(inode)->list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#313: FILE: mm/shmem.c:211:
+		spin_unlock (&shmem_ilock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#323: FILE: mm/shmem.c:536:
+			spin_lock (&shmem_ilock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#324: FILE: mm/shmem.c:537:
+			list_add (&SHMEM_I(inode)->list, &shmem_inodes);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#325: FILE: mm/shmem.c:538:
+			spin_unlock (&shmem_ilock);

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#345: FILE: mm/shmem.c:554:
+static struct inode_operations shmem_symlink_inode_operations;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#346: FILE: mm/shmem.c:555:
+static struct inode_operations shmem_symlink_inline_operations;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#355: FILE: mm/shmem.c:937:
+	struct shmem_inode_info * info;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#386: FILE: mm/shmem.c:955:
+		spin_lock (&shmem_ilock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#387: FILE: mm/shmem.c:956:
+		list_add (&info->list, &shmem_inodes);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#388: FILE: mm/shmem.c:957:
+		spin_unlock (&shmem_ilock);

CHECK:CAMELCASE: Avoid CamelCase: <UnlockPage>
#399: FILE: mm/shmem.c:968:
+		UnlockPage(page);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space required after that ',' (ctx:VxV)
#413: FILE: mm/shmem.c:979:
+	return vfs_readlink(dentry,buffer,buflen, (const char *)SHMEM_I(dentry->d_inode));
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#413: FILE: mm/shmem.c:979:
+	return vfs_readlink(dentry,buffer,buflen, (const char *)SHMEM_I(dentry->d_inode));
 	                                 ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#416: FILE: mm/shmem.c:982:
+static int shmem_follow_link_inline(struct dentry *dentry, struct nameidata *nd)
                                                                              ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#418: FILE: mm/shmem.c:984:
+	return vfs_follow_link(nd, (const char *)SHMEM_I(dentry->d_inode));
 	                       ^^

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#426: FILE: mm/shmem.c:1014:
+static struct inode_operations shmem_symlink_inline_operations = {

WARNING:INDENTED_LABEL: labels should not be indented
#427: FILE: mm/shmem.c:1015:
+	readlink:	shmem_readlink_inline,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#428: FILE: mm/shmem.c:1016:
+	follow_link:	shmem_follow_link_inline,
 	           ^

WARNING:INDENTED_LABEL: labels should not be indented
#428: FILE: mm/shmem.c:1016:
+	follow_link:	shmem_follow_link_inline,

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#431: FILE: mm/shmem.c:1019:
+static struct inode_operations shmem_symlink_inode_operations = {

WARNING:INDENTED_LABEL: labels should not be indented
#432: FILE: mm/shmem.c:1020:
+	truncate:	shmem_truncate,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#433: FILE: mm/shmem.c:1021:
+	readlink:	shmem_readlink,
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#433: FILE: mm/shmem.c:1021:
+	readlink:	shmem_readlink,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#434: FILE: mm/shmem.c:1022:
+	follow_link:	shmem_follow_link,
 	           ^

WARNING:INDENTED_LABEL: labels should not be indented
#434: FILE: mm/shmem.c:1022:
+	follow_link:	shmem_follow_link,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: fs/proc/proc_misc.c:148:
+^I * We make sure the cached value does not get below zero $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#487: FILE: fs/proc/proc_misc.c:168:
+		B(i.totalswap-i.freeswap), B(i.freeswap));
 		             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: mm/mmap.c:63:
+^I * We make sure the cached value does not get below zero $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#576: FILE: mm/shmem.c:68:
+ * ^I^I^I(inode->i_mapping->nrpages + info->swapped)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#584: FILE: mm/shmem.c:75:
+static void shmem_recalc_inode(struct inode * inode, unsigned long swap)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#592: FILE: mm/shmem.c:87:
+		atomic_sub(freed-swap, &shmem_nrpages);
 		                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: arch/m68k/mm/init.c:220:
+    val->sharedram = atomic_read(&shmem_nrpages);$

WARNING:TYPO_SPELLING: 'addional' may be misspelled - perhaps 'additional'?
#900: FILE: mm/shmem.c:107:
+ * shmem_inode_info structure. So small files do not need an addional
                                                              ^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#911: FILE: mm/shmem.c:118:
+ * ^I      |^I     +-> 20-23$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#912: FILE: mm/shmem.c:119:
+ * ^I      |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#913: FILE: mm/shmem.c:120:
+ * ^I      +-->dir2 --> 24-27$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#914: FILE: mm/shmem.c:121:
+ * ^I      |^I       +-> 28-31$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#915: FILE: mm/shmem.c:122:
+ * ^I      |^I       +-> 32-35$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#916: FILE: mm/shmem.c:123:
+ * ^I      |^I       +-> 36-39$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#917: FILE: mm/shmem.c:124:
+ * ^I      |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#918: FILE: mm/shmem.c:125:
+ * ^I      +-->dir3 --> 40-43$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#919: FILE: mm/shmem.c:126:
+ * ^I       ^I       +-> 44-47$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#920: FILE: mm/shmem.c:127:
+ * ^I      ^I       +-> 48-51$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#921: FILE: mm/shmem.c:128:
+ * ^I      ^I       +-> 52-55$

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#924: FILE: mm/shmem.c:131:
+#define SHMEM_MAX_BLOCKS (SHMEM_NR_DIRECT + ENTRIES_PER_PAGE * ENTRIES_PER_PAGE/2*(ENTRIES_PER_PAGE+1))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#924: FILE: mm/shmem.c:131:
+#define SHMEM_MAX_BLOCKS (SHMEM_NR_DIRECT + ENTRIES_PER_PAGE * ENTRIES_PER_PAGE/2*(ENTRIES_PER_PAGE+1))
                                                                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#924: FILE: mm/shmem.c:131:
+#define SHMEM_MAX_BLOCKS (SHMEM_NR_DIRECT + ENTRIES_PER_PAGE * ENTRIES_PER_PAGE/2*(ENTRIES_PER_PAGE+1))
                                                                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#924: FILE: mm/shmem.c:131:
+#define SHMEM_MAX_BLOCKS (SHMEM_NR_DIRECT + ENTRIES_PER_PAGE * ENTRIES_PER_PAGE/2*(ENTRIES_PER_PAGE+1))
                                                                                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#926: FILE: mm/shmem.c:133:
+static swp_entry_t * shmem_swp_entry (struct shmem_inode_info *info, unsigned long index, unsigned long page) $

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#926: FILE: mm/shmem.c:133:
+static swp_entry_t * shmem_swp_entry (struct shmem_inode_info *info, unsigned long index, unsigned long page) 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#926: FILE: mm/shmem.c:133:
+static swp_entry_t * shmem_swp_entry (struct shmem_inode_info *info, unsigned long index, unsigned long page) 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#926: FILE: mm/shmem.c:133:
+static swp_entry_t * shmem_swp_entry (struct shmem_inode_info *info, unsigned long index, unsigned long page) 

CHECK:SPACING: No space is necessary after a cast
#943: FILE: mm/shmem.c:146:
+		info->i_indirect = (void *) page;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#948: FILE: mm/shmem.c:151:
+	if (index >= ENTRIES_PER_PAGE/2) {
 	                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#949: FILE: mm/shmem.c:152:
+		index -= ENTRIES_PER_PAGE/2;
 		                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#950: FILE: mm/shmem.c:153:
+^I^Idir = info->i_indirect + ENTRIES_PER_PAGE/2 $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#950: FILE: mm/shmem.c:153:
+		dir = info->i_indirect + ENTRIES_PER_PAGE/2 
 		                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#951: FILE: mm/shmem.c:154:
+			+ index/ENTRIES_PER_PAGE;
 			       ^

ERROR:SPACING: space required before the open parenthesis '('
#954: FILE: mm/shmem.c:157:
+		if(!*dir) {

CHECK:SPACING: No space is necessary after a cast
#955: FILE: mm/shmem.c:158:
+			*dir = (void *) page;

ERROR:CODE_INDENT: code indent should use tabs where possible
#957: FILE: mm/shmem.c:160:
+                           in the next step */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#957: FILE: mm/shmem.c:160:
+			/* We return since we will need another page
+                           in the next step */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#957: FILE: mm/shmem.c:160:
+                           in the next step */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#982: FILE: mm/shmem.c:180:
+static inline swp_entry_t * shmem_alloc_entry (struct shmem_inode_info *info, unsigned long index)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#982: FILE: mm/shmem.c:180:
+static inline swp_entry_t * shmem_alloc_entry (struct shmem_inode_info *info, unsigned long index)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#985: FILE: mm/shmem.c:183:
+	swp_entry_t * res;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#993: FILE: mm/shmem.c:191:
+	while ((res = shmem_swp_entry(info,index,page)) == ERR_PTR(-ENOMEM)) {
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#993: FILE: mm/shmem.c:191:
+	while ((res = shmem_swp_entry(info,index,page)) == ERR_PTR(-ENOMEM)) {
 	                                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1039: FILE: mm/shmem.c:234:
+static inline unsigned long $

ERROR:POINTER_LOCATION: "foo *** bar" should be "foo ***bar"
#1040: FILE: mm/shmem.c:235:
+shmem_truncate_direct(swp_entry_t *** dir, unsigned long start, unsigned long len) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1043: FILE: mm/shmem.c:238:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1043: FILE: mm/shmem.c:238:
+ $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1047: FILE: mm/shmem.c:242:
+	last = *dir + (len + ENTRIES_PER_PAGE-1) / ENTRIES_PER_PAGE;
 	                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1050: FILE: mm/shmem.c:245:
+	for (ptr = *dir + start/ENTRIES_PER_PAGE; ptr < last; ptr++) {
 	                       ^

CHECK:SPACING: No space is necessary after a cast
#1058: FILE: mm/shmem.c:253:
+			free_page ((unsigned long) *ptr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1058: FILE: mm/shmem.c:253:
+			free_page ((unsigned long) *ptr);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1061: FILE: mm/shmem.c:256:
+			freed += shmem_free_swp(*ptr+off,ENTRIES_PER_PAGE-off);
 			                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1061: FILE: mm/shmem.c:256:
+			freed += shmem_free_swp(*ptr+off,ENTRIES_PER_PAGE-off);
 			                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1061: FILE: mm/shmem.c:256:
+			freed += shmem_free_swp(*ptr+off,ENTRIES_PER_PAGE-off);
 			                                                 ^

CHECK:SPACING: No space is necessary after a cast
#1068: FILE: mm/shmem.c:262:
+		free_page((unsigned long) *dir);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1088: FILE: mm/shmem.c:282:
+	unsigned long max = info->next_index-1;
 	                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1096: FILE: mm/shmem.c:290:
+	if (max < ENTRIES_PER_PAGE * ENTRIES_PER_PAGE/2 + SHMEM_NR_DIRECT) {
 	                                             ^

CHECK:SPACING: No space is necessary after a cast
#1098: FILE: mm/shmem.c:292:
+		base = (swp_entry_t ***) &info->i_indirect;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1100: FILE: mm/shmem.c:294:
+		len = max+1;
 		         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1102: FILE: mm/shmem.c:296:
+		max -= ENTRIES_PER_PAGE*ENTRIES_PER_PAGE/2+SHMEM_NR_DIRECT;
 		                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1102: FILE: mm/shmem.c:296:
+		max -= ENTRIES_PER_PAGE*ENTRIES_PER_PAGE/2+SHMEM_NR_DIRECT;
 		                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1102: FILE: mm/shmem.c:296:
+		max -= ENTRIES_PER_PAGE*ENTRIES_PER_PAGE/2+SHMEM_NR_DIRECT;
 		                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1103: FILE: mm/shmem.c:297:
+		if (max >= ENTRIES_PER_PAGE*ENTRIES_PER_PAGE*ENTRIES_PER_PAGE/2)
 		                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1103: FILE: mm/shmem.c:297:
+		if (max >= ENTRIES_PER_PAGE*ENTRIES_PER_PAGE*ENTRIES_PER_PAGE/2)
 		                                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1103: FILE: mm/shmem.c:297:
+		if (max >= ENTRIES_PER_PAGE*ENTRIES_PER_PAGE*ENTRIES_PER_PAGE/2)
 		                                                             ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1104: FILE: mm/shmem.c:298:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1106: FILE: mm/shmem.c:300:
+		baseidx = max & ~(ENTRIES_PER_PAGE*ENTRIES_PER_PAGE-1);
 		                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1106: FILE: mm/shmem.c:300:
+		baseidx = max & ~(ENTRIES_PER_PAGE*ENTRIES_PER_PAGE-1);
 		                                                   ^

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#1107: FILE: mm/shmem.c:301:
+		base = (swp_entry_t ***) info->i_indirect + ENTRIES_PER_PAGE/2 + baseidx/ENTRIES_PER_PAGE/ENTRIES_PER_PAGE ;

CHECK:SPACING: No space is necessary after a cast
#1107: FILE: mm/shmem.c:301:
+		base = (swp_entry_t ***) info->i_indirect + ENTRIES_PER_PAGE/2 + baseidx/ENTRIES_PER_PAGE/ENTRIES_PER_PAGE ;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1107: FILE: mm/shmem.c:301:
+		base = (swp_entry_t ***) info->i_indirect + ENTRIES_PER_PAGE/2 + baseidx/ENTRIES_PER_PAGE/ENTRIES_PER_PAGE ;
 		                                                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1107: FILE: mm/shmem.c:301:
+		base = (swp_entry_t ***) info->i_indirect + ENTRIES_PER_PAGE/2 + baseidx/ENTRIES_PER_PAGE/ENTRIES_PER_PAGE ;
 		                                                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1107: FILE: mm/shmem.c:301:
+		base = (swp_entry_t ***) info->i_indirect + ENTRIES_PER_PAGE/2 + baseidx/ENTRIES_PER_PAGE/ENTRIES_PER_PAGE ;
 		                                                                                         ^

WARNING:SPACING: space prohibited before semicolon
#1107: FILE: mm/shmem.c:301:
+		base = (swp_entry_t ***) info->i_indirect + ENTRIES_PER_PAGE/2 + baseidx/ENTRIES_PER_PAGE/ENTRIES_PER_PAGE ;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1109: FILE: mm/shmem.c:303:
+		baseidx += ENTRIES_PER_PAGE*ENTRIES_PER_PAGE/2+SHMEM_NR_DIRECT;
 		                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1109: FILE: mm/shmem.c:303:
+		baseidx += ENTRIES_PER_PAGE*ENTRIES_PER_PAGE/2+SHMEM_NR_DIRECT;
 		                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1109: FILE: mm/shmem.c:303:
+		baseidx += ENTRIES_PER_PAGE*ENTRIES_PER_PAGE/2+SHMEM_NR_DIRECT;
 		                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1142: FILE: mm/shmem.c:327:
+^Iwhile (index < info->next_index) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1184: FILE: mm/shmem.c:432:
+	entry = shmem_alloc_entry (info, idx);

CHECK:SPACING: No space is necessary after a cast
#1210: FILE: mm/shmem.c:1254:
+	sb->s_maxbytes = (unsigned long long) SHMEM_MAX_BLOCKS << PAGE_CACHE_SHIFT;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1226: FILE: mm/shmem.c:1392:
+	offset = shmem_clear_swp (entry, info->i_direct, SHMEM_NR_DIRECT);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1237: FILE: mm/shmem.c:1396:
+^Ifor (idx = SHMEM_NR_DIRECT; idx < info->next_index; $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1242: FILE: mm/shmem.c:1401:
+		offset = shmem_clear_swp (entry, ptr, ENTRIES_PER_PAGE);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000534791.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 55 warnings, 40 checks, 1014 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000534791.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
