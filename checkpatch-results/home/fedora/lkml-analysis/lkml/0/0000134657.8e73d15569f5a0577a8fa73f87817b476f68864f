CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#194: FILE: include/asm-i386/kdebug.h:20:
+extern int register_die_notifier(struct notifier_block *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_block *' should also have an identifier name
#194: FILE: include/asm-i386/kdebug.h:20:
+extern int register_die_notifier(struct notifier_block *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#195: FILE: include/asm-i386/kdebug.h:21:
+extern int unregister_die_notifier(struct notifier_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_block *' should also have an identifier name
#195: FILE: include/asm-i386/kdebug.h:21:
+extern int unregister_die_notifier(struct notifier_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#213: FILE: include/asm-powerpc/kdebug.h:18:
+extern int register_die_notifier(struct notifier_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_block *' should also have an identifier name
#213: FILE: include/asm-powerpc/kdebug.h:18:
+extern int register_die_notifier(struct notifier_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#214: FILE: include/asm-powerpc/kdebug.h:19:
+extern int unregister_die_notifier(struct notifier_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_block *' should also have an identifier name
#214: FILE: include/asm-powerpc/kdebug.h:19:
+extern int unregister_die_notifier(struct notifier_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#231: FILE: include/asm-sparc64/kdebug.h:18:
+extern int register_die_notifier(struct notifier_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_block *' should also have an identifier name
#231: FILE: include/asm-sparc64/kdebug.h:18:
+extern int register_die_notifier(struct notifier_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#232: FILE: include/asm-sparc64/kdebug.h:19:
+extern int unregister_die_notifier(struct notifier_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_block *' should also have an identifier name
#232: FILE: include/asm-sparc64/kdebug.h:19:
+extern int unregister_die_notifier(struct notifier_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#259: FILE: include/asm-x86_64/kdebug.h:16:
+extern int register_die_notifier(struct notifier_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_block *' should also have an identifier name
#259: FILE: include/asm-x86_64/kdebug.h:16:
+extern int register_die_notifier(struct notifier_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#260: FILE: include/asm-x86_64/kdebug.h:17:
+extern int unregister_die_notifier(struct notifier_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_block *' should also have an identifier name
#260: FILE: include/asm-x86_64/kdebug.h:17:
+extern int unregister_die_notifier(struct notifier_block *);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#282: FILE: include/asm-x86_64/kdebug.h:38:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#282: FILE: include/asm-x86_64/kdebug.h:38:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#282: FILE: include/asm-x86_64/kdebug.h:38:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#282: FILE: include/asm-x86_64/kdebug.h:38:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#282: FILE: include/asm-x86_64/kdebug.h:38:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#282: FILE: include/asm-x86_64/kdebug.h:38:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                                                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#283: FILE: include/asm-x86_64/kdebug.h:39:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
+	return notifier_call_chain(&die_chain, val, &args);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134657.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 9 warnings, 8 checks, 186 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134657.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
