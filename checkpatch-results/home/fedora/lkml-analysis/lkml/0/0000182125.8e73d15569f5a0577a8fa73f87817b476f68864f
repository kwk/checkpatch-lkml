WARNING:REPEATED_WORD: Possible repeated word: 'the'
#49: 
This patch makes another attempt at enforcing the the ``no write to

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#64: 
--- linux-2.6.12-rc4-mm2-seclvl.orig/security/seclvl.c	2005-05-19 16:33:20.000000000 -0500

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#83: FILE: security/seclvl.c:496:
+static int seclvl_bd_claim(struct file *filp)
                                         ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#93: FILE: security/seclvl.c:499:
+		if (bd_claim(filp->f_dentry->d_inode->i_bdev, filp)) {
 		                                              ^^^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#93: FILE: security/seclvl.c:499:
+		if (bd_claim(filp->f_dentry->d_inode->i_bdev, filp)) {
 			return -EPERM;
 		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#99: FILE: security/seclvl.c:503:
+		filp->f_security = filp;
 		                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#111: FILE: security/seclvl.c:513:
+static int seclvl_file_permission(struct file *filp, int mask)
                                                ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "filp->f_security"
#119: FILE: security/seclvl.c:515:
+	if (filp->f_security != NULL || filp->f_dentry == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!filp->f_dentry"
#119: FILE: security/seclvl.c:515:
+	if (filp->f_security != NULL || filp->f_dentry == NULL)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#122: FILE: security/seclvl.c:518:
+	if (current->pid != 1 && S_ISBLK(filp->f_dentry->d_inode->i_mode)
+	    && (mask & MAY_WRITE)) {

WARNING:SPLIT_STRING: quoted string split across lines
#126: FILE: security/seclvl.c:522:
+			seclvl_printk(1, KERN_WARNING, "Write to block device "
+				      "denied in secure level [%d]\n", seclvl);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#129: FILE: security/seclvl.c:525:
+			if (seclvl_bd_claim(filp)) {
 			                    ^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#131: FILE: security/seclvl.c:527:
+				seclvl_printk(1, KERN_WARNING, "Write to "
+					      "mounted block device denied in "

WARNING:SPLIT_STRING: quoted string split across lines
#132: FILE: security/seclvl.c:528:
+					      "mounted block device denied in "
+					      "secure level [%d]\n",

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#148: FILE: security/seclvl.c:542:
+static int seclvl_file_mmap(struct file *filp, unsigned long reqprot,
                                          ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#154: FILE: security/seclvl.c:547:
+	if (filp == NULL || filp->f_security != NULL 
 	    ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: security/seclvl.c:547:
+^Iif (filp == NULL || filp->f_security != NULL $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!filp"
#154: FILE: security/seclvl.c:547:
+	if (filp == NULL || filp->f_security != NULL 

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "filp->f_security"
#154: FILE: security/seclvl.c:547:
+	if (filp == NULL || filp->f_security != NULL 

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#155: FILE: security/seclvl.c:548:
+	if (filp == NULL || filp->f_security != NULL 
+	    || filp->f_dentry == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!filp->f_dentry"
#155: FILE: security/seclvl.c:548:
+	    || filp->f_dentry == NULL) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#159: FILE: security/seclvl.c:552:
+	if (current->pid != 1 && S_ISBLK(filp->f_dentry->d_inode->i_mode)
+	    && (prot & PROT_WRITE)) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#174: FILE: security/seclvl.c:561:
+				if (bd_claim(bdev, filp)) {
 				                   ^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#178: FILE: security/seclvl.c:565:
+						      "Write to mounted block "
+						      "device denied in secure"

WARNING:SPLIT_STRING: quoted string split across lines
#179: FILE: security/seclvl.c:566:
+						      "device denied in secure"
+						      " level [%d]\n", seclvl);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#181: FILE: security/seclvl.c:568:
+					return -EPERM;
+				} else {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#184: FILE: security/seclvl.c:571:
+					filp->f_security = filp;
 					                   ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "filp->f_security"
#205: FILE: security/seclvl.c:603:
+	if (filp->f_security != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#207: FILE: security/seclvl.c:605:
+		struct block_device *bdev = filp->f_dentry->d_inode->i_bdev;
+		if (bdev)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000182125.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 19 warnings, 9 checks, 152 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000182125.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
