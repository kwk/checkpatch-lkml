ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: arch/um/kernel/main.c:1:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#146: FILE: arch/um/kernel/main.c:1:
+/* 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: arch/um/kernel/main.c:7:
+#include <stdio.h> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: arch/um/kernel/main.c:26:
+/* Set in set_stklim, which is called from main and __wrap_malloc.  $

ERROR:SPACING: space required before the open brace '{'
#187: FILE: arch/um/kernel/main.c:42:
+	if(getrlimit(RLIMIT_STACK, &lim) < 0){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#187: FILE: arch/um/kernel/main.c:42:
+	if(getrlimit(RLIMIT_STACK, &lim) < 0){

ERROR:SPACING: space required before the open brace '{'
#191: FILE: arch/um/kernel/main.c:46:
+	if((lim.rlim_cur == RLIM_INFINITY) || (lim.rlim_cur > STACKSIZE)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lim.rlim_cur == RLIM_INFINITY'
#191: FILE: arch/um/kernel/main.c:46:
+	if((lim.rlim_cur == RLIM_INFINITY) || (lim.rlim_cur > STACKSIZE)){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lim.rlim_cur > STACKSIZE'
#191: FILE: arch/um/kernel/main.c:46:
+	if((lim.rlim_cur == RLIM_INFINITY) || (lim.rlim_cur > STACKSIZE)){

ERROR:SPACING: space required before the open parenthesis '('
#191: FILE: arch/um/kernel/main.c:46:
+	if((lim.rlim_cur == RLIM_INFINITY) || (lim.rlim_cur > STACKSIZE)){

ERROR:SPACING: space required before the open brace '{'
#193: FILE: arch/um/kernel/main.c:48:
+		if(setrlimit(RLIMIT_STACK, &lim) < 0){

ERROR:SPACING: space required before the open parenthesis '('
#193: FILE: arch/um/kernel/main.c:48:
+		if(setrlimit(RLIMIT_STACK, &lim) < 0){

ERROR:SPACING: space required before the open brace '{'
#206: FILE: arch/um/kernel/main.c:61:
+	while (call < &__uml_initcall_end){;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#206: FILE: arch/um/kernel/main.c:61:
+	while (call < &__uml_initcall_end){;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: No space is necessary after a cast
#214: FILE: arch/um/kernel/main.c:69:
+	CHOOSE_MODE(kmalloc_ok = 0, (void) 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: arch/um/kernel/main.c:85:
+^I/* Enable all signals except SIGIO - in some environments, we can $

ERROR:SPACING: space required before the open brace '{'
#236: FILE: arch/um/kernel/main.c:91:
+	if(sigprocmask(SIG_SETMASK, &mask, NULL) < 0){

ERROR:SPACING: space required before the open parenthesis '('
#236: FILE: arch/um/kernel/main.c:91:
+	if(sigprocmask(SIG_SETMASK, &mask, NULL) < 0){

ERROR:SPACING: space required before the open brace '{'
#243: FILE: arch/um/kernel/main.c:98:
+	if(argc < 2 || strlen(argv[1]) < THREAD_NAME_LEN - 1){

ERROR:SPACING: space required before the open parenthesis '('
#243: FILE: arch/um/kernel/main.c:98:
+	if(argc < 2 || strlen(argv[1]) < THREAD_NAME_LEN - 1){

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#244: FILE: arch/um/kernel/main.c:99:
+	if(argc < 2 || strlen(argv[1]) < THREAD_NAME_LEN - 1){
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: arch/um/kernel/main.c:100:
+^I^Ichar padding[THREAD_NAME_LEN] = { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: arch/um/kernel/main.c:101:
+^I^I^I[ 0 ...  THREAD_NAME_LEN - 2] = ' ', '\0' $

ERROR:SPACING: space prohibited after that open square bracket '['
#246: FILE: arch/um/kernel/main.c:101:
+			[ 0 ...  THREAD_NAME_LEN - 2] = ' ', '\0' 

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#249: FILE: arch/um/kernel/main.c:104:
+		new_argv = malloc((argc + 2) * sizeof(char*));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#250: FILE: arch/um/kernel/main.c:105:
+		if(!new_argv) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: arch/um/kernel/main.c:108:
+^I^I}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: arch/um/kernel/main.c:109:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: arch/um/kernel/main.c:112:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#258: FILE: arch/um/kernel/main.c:113:
+		for(i = 2; i <= argc; i++)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: arch/um/kernel/main.c:116:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: arch/um/kernel/main.c:120:
+^I}^I$

ERROR:SPACING: space required before the open brace '{'
#273: FILE: arch/um/kernel/main.c:128:
+	if(new_argv == NULL){

ERROR:SPACING: space required before the open parenthesis '('
#273: FILE: arch/um/kernel/main.c:128:
+	if(new_argv == NULL){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_argv"
#273: FILE: arch/um/kernel/main.c:128:
+	if(new_argv == NULL){

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#277: FILE: arch/um/kernel/main.c:132:
+	for(i=0;i<argc;i++){
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#277: FILE: arch/um/kernel/main.c:132:
+	for(i=0;i<argc;i++){
 	       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#277: FILE: arch/um/kernel/main.c:132:
+	for(i=0;i<argc;i++){
 	         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#277: FILE: arch/um/kernel/main.c:132:
+	for(i=0;i<argc;i++){
 	              ^

ERROR:SPACING: space required before the open brace '{'
#277: FILE: arch/um/kernel/main.c:132:
+	for(i=0;i<argc;i++){

ERROR:SPACING: space required before the open parenthesis '('
#277: FILE: arch/um/kernel/main.c:132:
+	for(i=0;i<argc;i++){

ERROR:SPACING: space required before the open brace '{'
#279: FILE: arch/um/kernel/main.c:134:
+		if(new_argv[i] == NULL){

ERROR:SPACING: space required before the open parenthesis '('
#279: FILE: arch/um/kernel/main.c:134:
+		if(new_argv[i] == NULL){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_argv[i]"
#279: FILE: arch/um/kernel/main.c:134:
+		if(new_argv[i] == NULL){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: arch/um/kernel/main.c:147:
+^I$

ERROR:SPACING: space required before the open brace '{'
#294: FILE: arch/um/kernel/main.c:149:
+	if(ret){

ERROR:SPACING: space required before the open parenthesis '('
#294: FILE: arch/um/kernel/main.c:149:
+	if(ret){

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#301: FILE: arch/um/kernel/main.c:156:
+	return(uml_exitcode);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#307: FILE: arch/um/kernel/main.c:162:
+extern void *__real_malloc(int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#307: FILE: arch/um/kernel/main.c:162:
+extern void *__real_malloc(int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: space required before the open parenthesis '('
#313: FILE: arch/um/kernel/main.c:168:
+	if(!CAN_KMALLOC())

WARNING:TYPO_SPELLING: 'contiguos' may be misspelled - perhaps 'contiguous'?
#315: FILE: arch/um/kernel/main.c:170:
+	else if(size <= PAGE_SIZE) /* finding contiguos pages can be hard*/
 	                                      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required before the open parenthesis '('
#315: FILE: arch/um/kernel/main.c:170:
+	else if(size <= PAGE_SIZE) /* finding contiguos pages can be hard*/

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#317: FILE: arch/um/kernel/main.c:172:
+	else ret = um_vmalloc(size);

ERROR:SPACING: space required before the open parenthesis '('
#322: FILE: arch/um/kernel/main.c:177:
+	if(ret == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ret"
#322: FILE: arch/um/kernel/main.c:177:
+	if(ret == NULL)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#325: FILE: arch/um/kernel/main.c:180:
+	return(ret);

ERROR:SPACING: space required before the open parenthesis '('
#332: FILE: arch/um/kernel/main.c:187:
+	if(ptr == NULL) return(NULL);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#332: FILE: arch/um/kernel/main.c:187:
+	if(ptr == NULL) return(NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ptr"
#332: FILE: arch/um/kernel/main.c:187:
+	if(ptr == NULL) return(NULL);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#334: FILE: arch/um/kernel/main.c:189:
+	return(ptr);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#339: FILE: arch/um/kernel/main.c:194:
+extern unsigned long high_physmem;

CHECK:SPACING: No space is necessary after a cast
#343: FILE: arch/um/kernel/main.c:198:
+	unsigned long addr = (unsigned long) ptr;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#348: FILE: arch/um/kernel/main.c:203:
+^I * ^Iphysical memory - kmalloc/kfree$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#350: FILE: arch/um/kernel/main.c:205:
+^I * ^Ianywhere else - malloc/free$

ERROR:SPACING: space required before the open brace '{'
#355: FILE: arch/um/kernel/main.c:210:
+	if(CAN_KMALLOC()){

ERROR:SPACING: space required before the open parenthesis '('
#355: FILE: arch/um/kernel/main.c:210:
+	if(CAN_KMALLOC()){

CHECK:BRACES: braces {} should be used on all arms of this statement
#355: FILE: arch/um/kernel/main.c:210:
+	if(CAN_KMALLOC()){
[...]
+	else __real_free(ptr);
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr >= uml_physmem'
#356: FILE: arch/um/kernel/main.c:211:
+		if((addr >= uml_physmem) && (addr <= high_physmem))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr <= high_physmem'
#356: FILE: arch/um/kernel/main.c:211:
+		if((addr >= uml_physmem) && (addr <= high_physmem))

ERROR:SPACING: space required before the open parenthesis '('
#356: FILE: arch/um/kernel/main.c:211:
+		if((addr >= uml_physmem) && (addr <= high_physmem))

ERROR:SPACING: space required before the open parenthesis '('
#358: FILE: arch/um/kernel/main.c:213:
+		else if((addr >= start_vm) && (addr <= end_vm))

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#363: FILE: arch/um/kernel/main.c:218:
+	else __real_free(ptr);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#363: FILE: arch/um/kernel/main.c:218:
+	}
+	else __real_free(ptr);

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#381: FILE: arch/um/kernel/uml.lds.S:1:
+#include <asm-generic/vmlinux.lds.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: arch/um/kernel/uml.lds.S:2:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#453: FILE: arch/um/kernel/uml.lds.S:73:
+  .sbss      : $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: arch/um/kernel/uml.lds.S:77:
+   *(.sbss) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#458: FILE: arch/um/kernel/uml.lds.S:78:
+   *(.scommon) $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#857: FILE: fs/hppfs/hppfs_kern.c:310:
+	else count = read_proc(hppfs->proc_file, buf, count, ppos, 1);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#857: FILE: fs/hppfs/hppfs_kern.c:310:
 	}
+	else count = read_proc(hppfs->proc_file, buf, count, ppos, 1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#877: FILE: fs/hppfs/hppfs_kern.c:474:
+^Idata->proc_file = dentry_open(dget(proc_dentry), NULL, $

ERROR:SPACING: space required before the open parenthesis '('
#880: FILE: fs/hppfs/hppfs_kern.c:477:
+	if(IS_ERR(data->proc_file))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#891: FILE: fs/hppfs/hppfs_kern.c:528:
+^Idata->proc_file = dentry_open(dget(proc_dentry), NULL, $

ERROR:SPACING: space required before the open parenthesis '('
#894: FILE: fs/hppfs/hppfs_kern.c:531:
+	if(IS_ERR(data->proc_file))

ERROR:SPACING: space required before the open parenthesis '('
#913: FILE: fs/hppfs/hppfs_kern.c:670:
+	if(IS_ERR(proc_dentry))

ERROR:SPACING: space required before the open parenthesis '('
#938: FILE: fs/hppfs/hppfs_kern.c:691:
+	if(IS_ERR(proc_dentry))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000258427.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 67 errors, 8 warnings, 12 checks, 532 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000258427.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
