WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#58: FILE: arch/i386/kernel/cs5535.c:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#59: FILE: arch/i386/kernel/cs5535.c:2:
+ * linux/arch/i386/kernel/cs5535.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#78: FILE: arch/i386/kernel/cs5535.c:21:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#80: FILE: arch/i386/kernel/cs5535.c:23:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#90: FILE: arch/i386/kernel/cs5535.c:33:
+EXPORT_SYMBOL(cs5535_gpio_base);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#91: FILE: arch/i386/kernel/cs5535.c:34:
+EXPORT_SYMBOL(cs5535_gpio_mask);

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#112: FILE: arch/i386/kernel/cs5535.c:55:
+static const struct gpio_reg_val gpio_smb[] __initdata =

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#113: FILE: arch/i386/kernel/cs5535.c:56:
+static const struct gpio_reg_val gpio_smb[] __initdata =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#130: FILE: arch/i386/kernel/cs5535.c:73:
+static const struct gpio_reg_val gpio_uarts[] __initdata =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#131: FILE: arch/i386/kernel/cs5535.c:74:
+static const struct gpio_reg_val gpio_uarts[] __initdata =
+{

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'high32 != 0'
#158: FILE: arch/i386/kernel/cs5535.c:101:
+	if ((high32 != 0) || ((low32 >> 8) != DEVID_DIVIL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#159: FILE: arch/i386/kernel/cs5535.c:102:
+		printk(KERN_WARNING NAME ": DIVIL device not found\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#170: FILE: arch/i386/kernel/cs5535.c:113:
+		printk(KERN_WARNING NAME ": GPIO not enabled\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#175: FILE: arch/i386/kernel/cs5535.c:118:
+	 * 9,8 are used for UART1 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#188: FILE: arch/i386/kernel/cs5535.c:131:
+		printk(KERN_WARNING NAME ": SMBus not enabled\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#240: FILE: arch/i386/kernel/cs5535.c:183:
+	printk(KERN_INFO NAME ": GPIO=%#x Mask=%#x\n",

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#296: FILE: arch/i386/kernel/Makefile:47:
+EXTRA_CFLAGS += -DCS5535_SMB

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#299: FILE: arch/i386/kernel/Makefile:50:
+EXTRA_CFLAGS += -DCS5535_UART2

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000127706.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 11 warnings, 3 checks, 237 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000127706.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
