WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
Support for using a single mempool as a critical pool for all slab allocations.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#63: FILE: include/linux/slab.h:67:
+extern void *kmem_cache_alloc_mempool(kmem_cache_t *, gfp_t, mempool_t *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kmem_cache_t *' should also have an identifier name
#63: FILE: include/linux/slab.h:67:
+extern void *kmem_cache_alloc_mempool(kmem_cache_t *, gfp_t, mempool_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#63: FILE: include/linux/slab.h:67:
+extern void *kmem_cache_alloc_mempool(kmem_cache_t *, gfp_t, mempool_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'mempool_t *' should also have an identifier name
#63: FILE: include/linux/slab.h:67:
+extern void *kmem_cache_alloc_mempool(kmem_cache_t *, gfp_t, mempool_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: include/linux/slab.h:81:
+extern void *__kmalloc(size_t, gfp_t, mempool_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#72: FILE: include/linux/slab.h:81:
+extern void *__kmalloc(size_t, gfp_t, mempool_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#72: FILE: include/linux/slab.h:81:
+extern void *__kmalloc(size_t, gfp_t, mempool_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'mempool_t *' should also have an identifier name
#72: FILE: include/linux/slab.h:81:
+extern void *__kmalloc(size_t, gfp_t, mempool_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#105: FILE: include/linux/slab.h:131:
+extern void *kmem_cache_alloc_node_mempool(kmem_cache_t *, gfp_t, int, mempool_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#106: FILE: include/linux/slab.h:132:
+extern void *kmem_cache_alloc_node(kmem_cache_t *, gfp_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kmem_cache_t *' should also have an identifier name
#106: FILE: include/linux/slab.h:132:
+extern void *kmem_cache_alloc_node(kmem_cache_t *, gfp_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#106: FILE: include/linux/slab.h:132:
+extern void *kmem_cache_alloc_node(kmem_cache_t *, gfp_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#106: FILE: include/linux/slab.h:132:
+extern void *kmem_cache_alloc_node(kmem_cache_t *, gfp_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#107: FILE: include/linux/slab.h:133:
+extern void *kmalloc_node_mempool(size_t, gfp_t, int, mempool_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#107: FILE: include/linux/slab.h:133:
+extern void *kmalloc_node_mempool(size_t, gfp_t, int, mempool_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#107: FILE: include/linux/slab.h:133:
+extern void *kmalloc_node_mempool(size_t, gfp_t, int, mempool_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#107: FILE: include/linux/slab.h:133:
+extern void *kmalloc_node_mempool(size_t, gfp_t, int, mempool_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'mempool_t *' should also have an identifier name
#107: FILE: include/linux/slab.h:133:
+extern void *kmalloc_node_mempool(size_t, gfp_t, int, mempool_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#108: FILE: include/linux/slab.h:134:
+extern void *kmalloc_node(size_t, gfp_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#108: FILE: include/linux/slab.h:134:
+extern void *kmalloc_node(size_t, gfp_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#108: FILE: include/linux/slab.h:134:
+extern void *kmalloc_node(size_t, gfp_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#108: FILE: include/linux/slab.h:134:
+extern void *kmalloc_node(size_t, gfp_t, int);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#116: FILE: include/linux/slab.h:141:
+}
+static inline void *kmem_cache_alloc_node(kmem_cache_t *cachep, gfp_t flags,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#122: FILE: include/linux/slab.h:146:
 }
+static inline void *kmalloc_node_mempool(size_t size, gfp_t flags, int node_id,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#127: FILE: include/linux/slab.h:151:
+}
+static inline void *kmalloc_node(size_t size, gfp_t flags, int node_id)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000111594.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 17 warnings, 9 checks, 164 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000111594.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
