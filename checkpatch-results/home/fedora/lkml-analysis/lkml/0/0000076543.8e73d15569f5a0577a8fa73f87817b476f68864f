WARNING:TYPO_SPELLING: 'boundries' may be misspelled - perhaps 'boundaries'?
#12: 
Subject: [PATCH] Fix do_mlock so page alignment is to hugepage boundries
                                                               ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#106: FILE: include/asm-sparc64/page.h:108:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#106: FILE: include/asm-sparc64/page.h:108:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#106: FILE: include/asm-sparc64/page.h:108:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#117: FILE: include/asm-i386/page.h:72:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#117: FILE: include/asm-i386/page.h:72:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#117: FILE: include/asm-i386/page.h:72:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#128: FILE: include/asm-sh64/page.h:46:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#128: FILE: include/asm-sh64/page.h:46:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#128: FILE: include/asm-sh64/page.h:46:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#139: FILE: include/asm-sh/page.h:36:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#139: FILE: include/asm-sh/page.h:36:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#139: FILE: include/asm-sh/page.h:36:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#150: FILE: include/asm-x86_64/page.h:44:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#150: FILE: include/asm-x86_64/page.h:44:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#150: FILE: include/asm-x86_64/page.h:44:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#161: FILE: include/asm-parisc/page.h:144:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#161: FILE: include/asm-parisc/page.h:144:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#161: FILE: include/asm-parisc/page.h:144:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#172: FILE: include/asm-ia64/page.h:61:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#172: FILE: include/asm-ia64/page.h:61:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#172: FILE: include/asm-ia64/page.h:61:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#183: FILE: include/asm-powerpc/page_64.h:89:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#183: FILE: include/asm-powerpc/page_64.h:89:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#183: FILE: include/asm-powerpc/page_64.h:89:
+#define HPAGE_ALIGN(addr)       (((addr)+HPAGE_SIZE-1)&HPAGE_MASK)
                                                       ^

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#194: FILE: mm/mlock.c:15:
+#define MLOCK_PAGE_ALIGN(len,vma) (((vma)->vm_flags & VM_HUGETLB) ?  HPAGE_ALIGN(len) : PAGE_ALIGN(len))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#194: FILE: mm/mlock.c:15:
+#define MLOCK_PAGE_ALIGN(len,vma) (((vma)->vm_flags & VM_HUGETLB) ?  HPAGE_ALIGN(len) : PAGE_ALIGN(len))
                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'len' - possible side-effects?
#194: FILE: mm/mlock.c:15:
+#define MLOCK_PAGE_ALIGN(len,vma) (((vma)->vm_flags & VM_HUGETLB) ?  HPAGE_ALIGN(len) : PAGE_ALIGN(len))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#197: FILE: mm/mlock.c:18:
+#define MLOCK_PAGE_ALIGN(len,vma) PAGE_ALIGN(len)
                             ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'locked > lock_limit'
#240: FILE: mm/mlock.c:115:
+		if ((locked > lock_limit) && !capable(CAP_IPC_LOCK))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000076543.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 2 warnings, 26 checks, 155 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000076543.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
