WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#162: 
diff -urN -X ../dontdiff linux-2.5.59/arch/i386/Kconfig linux-2.5.59-kexecdump/arch/i386/Kconfig

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#169: FILE: arch/i386/Kconfig:1580:
+config CRASH_DUMP_MEMDEV
+	bool "Crash dump staged memory driver"
+	depends on CRASH_DUMP
+	help
+	  Say Y to allow intermediate saving crash dumps in spare 
+	  memory pages which would then be written out to disk
+	  later.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: arch/i386/Kconfig:1584:
+^I  Say Y to allow intermediate saving crash dumps in spare $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: arch/i386/Kconfig:1594:
+^I  thereafter. For this to work, CRASH_DUMP must be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: arch/i386/kernel/setup.c:570:
+^I^I^Icrashdump_addr = memparse(from+10, &from); $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#205: FILE: arch/i386/kernel/setup.c:570:
+			crashdump_addr = memparse(from+10, &from); 
 			                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: arch/i386/kernel/setup.c:571:
+^I^I^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#291: FILE: drivers/dump/dump_execute.c:94:
+	if ((err = dump_complete())) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#291: FILE: drivers/dump/dump_execute.c:94:
+	if ((err = dump_complete())) {
+		printk("Dump complete failed. Error %d\n", err);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#292: FILE: drivers/dump/dump_execute.c:95:
+		printk("Dump complete failed. Error %d\n", err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: drivers/dump/dump_execute.c:112:
+^Inotifier_call_chain(&dump_notifier_list, DUMP_BEGIN, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#303: FILE: drivers/dump/dump_execute.c:113:
+	notifier_call_chain(&dump_notifier_list, DUMP_BEGIN, 
+		&dump_config.dump_device);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: drivers/dump/dump_execute.c:122:
+^Inotifier_call_chain(&dump_notifier_list, DUMP_END, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: drivers/dump/dump_execute.c:123:
+	notifier_call_chain(&dump_notifier_list, DUMP_END, 
+		&dump_config.dump_device);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#354: FILE: drivers/dump/dump_fmt.c:216:
+	retval = dump_ll_write(buf , size);
 	                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: drivers/dump/dump_fmt.c:218:
+^Iif (retval < size) $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#365: FILE: drivers/dump/dump_memdev.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#367: FILE: drivers/dump/dump_memdev.c:3:
+ * memory areas. The saved pages may be written out to persistent storage  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#372: FILE: drivers/dump/dump_memdev.c:8:
+ * Copyright (C) 2002 International Business Machines Corp. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: drivers/dump/dump_memdev.c:12:
+ * The approach of tracking pages containing saved dump using map pages $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: drivers/dump/dump_memdev.c:13:
+ * allocated as needed has been derived from the Mission Critical Linux $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#378: FILE: drivers/dump/dump_memdev.c:14:
+ * mcore dump implementation. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#380: FILE: drivers/dump/dump_memdev.c:16:
+ * Credits and a big thanks for letting the lkcd project make use of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#381: FILE: drivers/dump/dump_memdev.c:17:
+ * the excellent piece of work and also helping with clarifications $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#383: FILE: drivers/dump/dump_memdev.c:19:
+ * ^IDave Winchell <winchell@mclx.com> (primary author of mcore)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#384: FILE: drivers/dump/dump_memdev.c:20:
+ * ^IJeff Moyer <moyer@mclx.com>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#385: FILE: drivers/dump/dump_memdev.c:21:
+ * ^IJosh Huber <huber@mclx.com>$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: drivers/dump/dump_memdev.c:24:
+ * noting here (besides the dump device abstraction) result from enabling $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: drivers/dump/dump_memdev.c:25:
+ * "high" memory pages (pages not permanently mapped in the kernel $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: drivers/dump/dump_memdev.c:26:
+ * address space) to be used for saving dump data (because of which a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#391: FILE: drivers/dump/dump_memdev.c:27:
+ * simple virtual address based linked list cannot be used anymore for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: drivers/dump/dump_memdev.c:28:
+ * managing free pages), an added level of indirection for faster $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: drivers/dump/dump_memdev.c:29:
+ * lookups during the post-boot stage, and the idea of pages being $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#394: FILE: drivers/dump/dump_memdev.c:30:
+ * made available as they get freed up while dump to memory progresses $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: drivers/dump/dump_memdev.c:31:
+ * rather than one time before starting the dump. The last point enables $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: drivers/dump/dump_memdev.c:32:
+ * a full memory snapshot to be saved starting with an initial set of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#405: FILE: drivers/dump/dump_memdev.c:41:
+ * map pages (also discontiguous). Except for the indirect maps $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#406: FILE: drivers/dump/dump_memdev.c:42:
+ * (which must be preallocated in advance), the rest of the pages $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: drivers/dump/dump_memdev.c:47:
+ *  -->  | .  . +|--->|  .  +|------->| . .  |       indirect $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: drivers/dump/dump_memdev.c:49:
+ *         |  |          |     ^I        | |^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#413: FILE: drivers/dump/dump_memdev.c:49:
+ *         |  |          |     ^I        | |^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#415: FILE: drivers/dump/dump_memdev.c:51:
+ *    | .  |  | .  |   | .  . |    | .  | |  . . |   maps $

WARNING:REPEATED_WORD: Possible repeated word: 'page'
#417: FILE: drivers/dump/dump_memdev.c:53:
+ *     page    page    page page   page   page page  data

WARNING:REPEATED_WORD: Possible repeated word: 'page'
#417: FILE: drivers/dump/dump_memdev.c:53:
+ *     page    page    page page   page   page page  data

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#436: FILE: drivers/dump/dump_memdev.c:72:
+#define DUMP_IND_MAP_SZ	DUMP_MAP_SZ - 1  /* indirect map size */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#439: FILE: drivers/dump/dump_memdev.c:75:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#463: FILE: drivers/dump/dump_memdev.c:99:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#464: FILE: drivers/dump/dump_memdev.c:100:
+	printk("Reserve bootmap space holding previous dump of %lld pages\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#465: FILE: drivers/dump/dump_memdev.c:101:
+	printk("Reserve bootmap space holding previous dump of %lld pages\n",
+			last);

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#466: FILE: drivers/dump/dump_memdev.c:102:
+	map1= (unsigned long *)dev->indirect_map_root;
 	    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#470: FILE: drivers/dump/dump_memdev.c:106:
+^I^Ifor (i=0;  (i < DUMP_MAP_SZ - 1) && map1[i] && (off < last); $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#470: FILE: drivers/dump/dump_memdev.c:106:
+		for (i=0;  (i < DUMP_MAP_SZ - 1) && map1[i] && (off < last); 
 		      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: drivers/dump/dump_memdev.c:113:
+^I^I^Ifor (j = 0 ; (j < DUMP_MAP_SZ) && map2[j] && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#478: FILE: drivers/dump/dump_memdev.c:114:
+			for (j = 0 ; (j < DUMP_MAP_SZ) && map2[j] && 
+				(off + j < last); j++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#479: FILE: drivers/dump/dump_memdev.c:115:
+^I^I^I^Ipr_debug("\t map[%d][%d] = 0x%lx\n", i, j, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#480: FILE: drivers/dump/dump_memdev.c:116:
+				pr_debug("\t map[%d][%d] = 0x%lx\n", i, j, 
+					map2[j]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#483: FILE: drivers/dump/dump_memdev.c:119:
+					reserve_bootmem(map2[j] << PAGE_SHIFT,
+						PAGE_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#500: FILE: drivers/dump/dump_memdev.c:136:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#501: FILE: drivers/dump/dump_memdev.c:137:
+	printk("Dump: marking pages in use by previous dump\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#502: FILE: drivers/dump/dump_memdev.c:138:
+	map1= (unsigned long *)dev->indirect_map_root;
 	    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#505: FILE: drivers/dump/dump_memdev.c:141:
+^I^Ipage = virt_to_page(map1);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#507: FILE: drivers/dump/dump_memdev.c:143:
+^I^Ifor (i=0;  (i < DUMP_MAP_SZ - 1) && map1[i] && (off < last); $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#507: FILE: drivers/dump/dump_memdev.c:143:
+		for (i=0;  (i < DUMP_MAP_SZ - 1) && map1[i] && (off < last); 
 		      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#513: FILE: drivers/dump/dump_memdev.c:149:
+^I^I^Ifor (j = 0 ; (j < DUMP_MAP_SZ) && map2[j] && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#514: FILE: drivers/dump/dump_memdev.c:150:
+			for (j = 0 ; (j < DUMP_MAP_SZ) && map2[j] && 
+				(off + j < last); j++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#515: FILE: drivers/dump/dump_memdev.c:151:
+^I^I^I^Ipr_debug("\t map[%d][%d] = 0x%lx\n", i, j, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#516: FILE: drivers/dump/dump_memdev.c:152:
+				pr_debug("\t map[%d][%d] = 0x%lx\n", i, j, 
+					map2[j]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#524: FILE: drivers/dump/dump_memdev.c:160:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#525: FILE: drivers/dump/dump_memdev.c:161:
+	
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#526: FILE: drivers/dump/dump_memdev.c:162:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: drivers/dump/dump_memdev.c:163:
+ * Given a logical offset into the mem device lookup the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#528: FILE: drivers/dump/dump_memdev.c:164:
+ * corresponding page $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#529: FILE: drivers/dump/dump_memdev.c:165:
+ * ^Iloc is specified in units of pages $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#529: FILE: drivers/dump/dump_memdev.c:165:
+ * ^Iloc is specified in units of pages $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#546: FILE: drivers/dump/dump_memdev.c:182:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#547: FILE: drivers/dump/dump_memdev.c:183:
+^I * first locate the right indirect map $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#548: FILE: drivers/dump/dump_memdev.c:184:
+^I * in the chain of indirect maps $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#551: FILE: drivers/dump/dump_memdev.c:187:
+		if (!(map = next_indirect_map(map)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#556: FILE: drivers/dump/dump_memdev.c:192:
+	if ((curr_map = map[index - i])) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#565: FILE: drivers/dump/dump_memdev.c:201:
+^Ielse $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#571: FILE: drivers/dump/dump_memdev.c:207:
+	if ((curr_pfn = map[loc - i])) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#583: FILE: drivers/dump/dump_memdev.c:219:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: drivers/dump/dump_memdev.c:220:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#585: FILE: drivers/dump/dump_memdev.c:221:
+ * Retrieves a pointer to the next page in the dump device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#586: FILE: drivers/dump/dump_memdev.c:222:
+ * Used during the lookup pass post-soft-reboot $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#590: FILE: drivers/dump/dump_memdev.c:226:
+^Iunsigned long i; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#591: FILE: drivers/dump/dump_memdev.c:227:
+^Iunsigned long *map;^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#594: FILE: drivers/dump/dump_memdev.c:230:
+	if (dev->ddev.curr_offset + PAGE_SIZE >= dev->last_offset) {
+		return NULL;
+	}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#598: FILE: drivers/dump/dump_memdev.c:234:
+	if ((i = (unsigned long)(++dev->curr_map_offset)) >= DUMP_MAP_SZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#599: FILE: drivers/dump/dump_memdev.c:235:
+^I^I/* move to next map */^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#602: FILE: drivers/dump/dump_memdev.c:238:
+			printk("dump_mem_next_page: go to next indirect map\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dump_mem_next_page', this function's name, in a string
#602: FILE: drivers/dump/dump_memdev.c:238:
+			printk("dump_mem_next_page: go to next indirect map\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#607: FILE: drivers/dump/dump_memdev.c:243:
+		i = dev->curr_map_offset = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dump_mem_next_page', this function's name, in a string
#608: FILE: drivers/dump/dump_memdev.c:244:
+		pr_debug("dump_mem_next_page: next map 0x%lx, entry 0x%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#609: FILE: drivers/dump/dump_memdev.c:245:
+		pr_debug("dump_mem_next_page: next map 0x%lx, entry 0x%lx\n",
+				dev->curr_map, *dev->curr_map);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#612: FILE: drivers/dump/dump_memdev.c:248:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#624: FILE: drivers/dump/dump_memdev.c:260:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#640: FILE: drivers/dump/dump_memdev.c:276:
+		if (!(map = (unsigned long *)dump_alloc_mem(PAGE_SIZE))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#641: FILE: drivers/dump/dump_memdev.c:277:
+^I^I^Iprintk("Unable to alloc indirect map %ld\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#641: FILE: drivers/dump/dump_memdev.c:277:
+			printk("Unable to alloc indirect map %ld\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#642: FILE: drivers/dump/dump_memdev.c:278:
+			printk("Unable to alloc indirect map %ld\n", 
+				i / DUMP_IND_MAP_SZ);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#649: FILE: drivers/dump/dump_memdev.c:285:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#651: FILE: drivers/dump/dump_memdev.c:287:
+^Idump_mdev->curr_map_offset = 0;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#653: FILE: drivers/dump/dump_memdev.c:289:
+^I/* $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#659: FILE: drivers/dump/dump_memdev.c:295:
+		if (!(addr = dump_alloc_mem(PAGE_SIZE))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#660: FILE: drivers/dump/dump_memdev.c:296:
+			printk("Unable to alloc bootstrap page %ld\n", i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#667: FILE: drivers/dump/dump_memdev.c:303:
+^I^ISetPageInuse(page); $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#670: FILE: drivers/dump/dump_memdev.c:306:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#671: FILE: drivers/dump/dump_memdev.c:307:
+	printk("dump memdev init: %ld maps, %ld bootstrap pgs, %ld free pgs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#672: FILE: drivers/dump/dump_memdev.c:308:
+	printk("dump memdev init: %ld maps, %ld bootstrap pgs, %ld free pgs\n",
+		nr_maps, i, dump_mdev->last_offset >> PAGE_SHIFT);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#673: FILE: drivers/dump/dump_memdev.c:309:
+^I$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dump_mem_release', this function's name, in a string
#691: FILE: drivers/dump/dump_memdev.c:327:
+	pr_debug("dump_mem_release\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#698: FILE: drivers/dump/dump_memdev.c:334:
+			printk("page_address(%p) = NULL\n", page);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#701: FILE: drivers/dump/dump_memdev.c:337:
+^I^Ipr_debug("Freeing page at 0x%lx\n", addr); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#710: FILE: drivers/dump/dump_memdev.c:346:
+^I^I^I^Iprintk("page_address(%p) = NULL\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#710: FILE: drivers/dump/dump_memdev.c:346:
+				printk("page_address(%p) = NULL\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#711: FILE: drivers/dump/dump_memdev.c:347:
+				printk("page_address(%p) = NULL\n", 
+					map_page);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i < DUMP_NR_BOOTSTRAP'
#723: FILE: drivers/dump/dump_memdev.c:359:
+	if ((i < DUMP_NR_BOOTSTRAP) && (*dump_mdev->curr_map)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#728: FILE: drivers/dump/dump_memdev.c:364:
+				printk("page_address(%p) = NULL\n", map_page);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#737: FILE: drivers/dump/dump_memdev.c:373:
+	printk("Freed %d bootstrap pages\n", i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#750: FILE: drivers/dump/dump_memdev.c:386:
+	printk("Freed %d indirect map(s)\n", i);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#759: FILE: drivers/dump/dump_memdev.c:395:
+	dump_mdev->last_offset = dump_mdev->ddev.curr_offset = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#769: FILE: drivers/dump/dump_memdev.c:405:
+ * to have anything running and accessing memory while we overwrite $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#774: FILE: drivers/dump/dump_memdev.c:410:
+ * Note: I/O will only happen after soft-boot/switchover, so we can $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#779: FILE: drivers/dump/dump_memdev.c:415:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#780: FILE: drivers/dump/dump_memdev.c:416:
+ * ATM Most of this is already taken care of in the nmi handler $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#781: FILE: drivers/dump/dump_memdev.c:417:
+ * We may halt the cpus rightaway if we know this is going to be disruptive $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#802: FILE: drivers/dump/dump_memdev.c:438:
+^Idump_overlay_resume(); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#806: FILE: drivers/dump/dump_memdev.c:442:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#822: FILE: drivers/dump/dump_memdev.c:458:
+^Ipr_debug("dump_mem_write: offset 0x%llx, size %ld\n", $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dump_mem_write', this function's name, in a string
#822: FILE: drivers/dump/dump_memdev.c:458:
+	pr_debug("dump_mem_write: offset 0x%llx, size %ld\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#823: FILE: drivers/dump/dump_memdev.c:459:
+	pr_debug("dump_mem_write: offset 0x%llx, size %ld\n", 
+		dev->curr_offset, len);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#826: FILE: drivers/dump/dump_memdev.c:462:
+		printk("Out of space to write\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#829: FILE: drivers/dump/dump_memdev.c:465:
+^I$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#837: FILE: drivers/dump/dump_memdev.c:473:
+	for (n = len; (n > 0) && page; n -= PAGE_SIZE, buf += PAGE_SIZE ) {

WARNING:SPACING: space prohibited before semicolon
#852: FILE: drivers/dump/dump_memdev.c:488:
+	return (len - n) ? (len - n) : ret ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#861: FILE: drivers/dump/dump_memdev.c:497:
+/* $

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#862: FILE: drivers/dump/dump_memdev.c:498:
+ * Should check for availability of space to write upto the offset 
                                                    ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#862: FILE: drivers/dump/dump_memdev.c:498:
+ * Should check for availability of space to write upto the offset $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#863: FILE: drivers/dump/dump_memdev.c:499:
+ * affects only the curr_offset; last_offset untouched $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#864: FILE: drivers/dump/dump_memdev.c:500:
+ * Keep it simple: Only allow multiples of PAGE_SIZE for now $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#872: FILE: drivers/dump/dump_memdev.c:508:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#875: FILE: drivers/dump/dump_memdev.c:511:
+		printk("dump_mem_seek failed for offset 0x%llx\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dump_mem_seek', this function's name, in a string
#875: FILE: drivers/dump/dump_memdev.c:511:
+		printk("dump_mem_seek failed for offset 0x%llx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#876: FILE: drivers/dump/dump_memdev.c:512:
+		printk("dump_mem_seek failed for offset 0x%llx\n",
+			offset);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#877: FILE: drivers/dump/dump_memdev.c:513:
+^I^Ireturn -ENOSPC;^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#902: FILE: drivers/dump/dump_memdev.c:538:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#909: FILE: drivers/dump/dump_memdev.c:545:
+^I * if PageReserved $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#910: FILE: drivers/dump/dump_memdev.c:546:
+^I * if < __end + bootmem_bootmap_pages for this boot + allowance $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#922: FILE: drivers/dump/dump_memdev.c:558:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#927: FILE: drivers/dump/dump_memdev.c:563:
+^Iunsigned long *map;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#928: FILE: drivers/dump/dump_memdev.c:564:
+^Iunsigned long i; $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dump_mem_add_space', this function's name, in a string
#952: FILE: drivers/dump/dump_memdev.c:588:
+			pr_debug("dump_mem_add_space: using next"

WARNING:SPLIT_STRING: quoted string split across lines
#953: FILE: drivers/dump/dump_memdev.c:589:
+			pr_debug("dump_mem_add_space: using next"
+			"indirect map\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#953: FILE: drivers/dump/dump_memdev.c:589:
+			pr_debug("dump_mem_add_space: using next"
+			"indirect map\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#956: FILE: drivers/dump/dump_memdev.c:592:
+^I}^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#960: FILE: drivers/dump/dump_memdev.c:596:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#966: FILE: drivers/dump/dump_memdev.c:602:
+^I/* $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#974: FILE: drivers/dump/dump_memdev.c:610:
+	if ((err = dump_mem_add_space(dev, page))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#975: FILE: drivers/dump/dump_memdev.c:611:
+		printk("Warning: Unable to extend memdev space. Err %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#976: FILE: drivers/dump/dump_memdev.c:612:
+		printk("Warning: Unable to extend memdev space. Err %d\n",
+		err);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#984: FILE: drivers/dump/dump_memdev.c:620:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#986: FILE: drivers/dump/dump_memdev.c:622:
+^I.open ^I^I= dump_mem_open,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#989: FILE: drivers/dump/dump_memdev.c:625:
+^I.resume ^I= dump_mem_resume,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#998: FILE: drivers/dump/dump_memdev.c:634:
+        ^I .device_id = 0x14}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#998: FILE: drivers/dump/dump_memdev.c:634:
+        ^I .device_id = 0x14}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#998: FILE: drivers/dump/dump_memdev.c:634:
+        ^I .device_id = 0x14}$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1000: FILE: drivers/dump/dump_memdev.c:636:
+};^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1001: FILE: drivers/dump/dump_memdev.c:637:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1012: FILE: drivers/dump/dump_methods.h:142:
+^Iint header_len; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1027: FILE: drivers/dump/dump_methods.h:158:
+/* Used to save the dump config across a reboot for 2-stage dumps: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1028: FILE: drivers/dump/dump_methods.h:159:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1029: FILE: drivers/dump/dump_methods.h:160:
+ * Note: The scheme, format, compression and device type should be $

WARNING:TYPO_SPELLING: 'sharable' may be misspelled - perhaps 'shareable'?
#1030: FILE: drivers/dump/dump_methods.h:161:
+ * registered at bootup, for this config to be sharable across soft-boot. 
                                                ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1030: FILE: drivers/dump/dump_methods.h:161:
+ * registered at bootup, for this config to be sharable across soft-boot. $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1073: FILE: drivers/dump/dump_methods.h:339:
+	if (buf && (page = virt_to_page(buf))) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1081: FILE: drivers/dump/dump_methods.h:347:
 
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1087: FILE: drivers/dump/dump_overlay.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1093: FILE: drivers/dump/dump_overlay.c:7:
+ * This approach of saving the dump in memory and writing it $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1094: FILE: drivers/dump/dump_overlay.c:8:
+ * out after a softboot without clearing memory is derived from the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1096: FILE: drivers/dump/dump_overlay.c:10:
+ * thanks for letting the lkcd project make use of the excellent $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1097: FILE: drivers/dump/dump_overlay.c:11:
+ * piece of work and also for helping with clarifications and $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1099: FILE: drivers/dump/dump_overlay.c:13:
+ * ^IDave Winchell <winchell@mclx.com> (primary author of mcore)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1100: FILE: drivers/dump/dump_overlay.c:14:
+ * ^Iand also to$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1101: FILE: drivers/dump/dump_overlay.c:15:
+ * ^IJeff Moyer <moyer@mclx.com>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1102: FILE: drivers/dump/dump_overlay.c:16:
+ * ^IJosh Huber <huber@mclx.com>$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1103: FILE: drivers/dump/dump_overlay.c:17:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1104: FILE: drivers/dump/dump_overlay.c:18:
+ * For those familiar with the mcore implementation, the key $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1105: FILE: drivers/dump/dump_overlay.c:19:
+ * differences/extensions here are in allowing entire memory to be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1106: FILE: drivers/dump/dump_overlay.c:20:
+ * saved (in compressed form) through a careful ordering scheme $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1108: FILE: drivers/dump/dump_overlay.c:22:
+ * for supporting the LKCD notion of passes in which most critical $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1109: FILE: drivers/dump/dump_overlay.c:23:
+ * data is the first to be saved to the dump device. Also the post $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1110: FILE: drivers/dump/dump_overlay.c:24:
+ * boot writeout happens from within the kernel rather than driven $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1114: FILE: drivers/dump/dump_overlay.c:28:
+ * one for the first stage which then sets up the dumper for the next $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1115: FILE: drivers/dump/dump_overlay.c:29:
+ * stage, providing for a smooth and flexible reuse of the singlestage $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1116: FILE: drivers/dump/dump_overlay.c:30:
+ * dump scheme methods and a handle to pass dump device configuration $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1117: FILE: drivers/dump/dump_overlay.c:31:
+ * information across the soft boot. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1119: FILE: drivers/dump/dump_overlay.c:33:
+ * Copyright (C) 2002 International Business Machines Corp. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1127: FILE: drivers/dump/dump_overlay.c:41:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1128: FILE: drivers/dump/dump_overlay.c:42:
+ * (1) - Saves the (compressed & formatted) dump in memory using a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1129: FILE: drivers/dump/dump_overlay.c:43:
+ *       carefully ordered overlay scheme designed to capture the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1130: FILE: drivers/dump/dump_overlay.c:44:
+ *       entire physical memory or selective portions depending on $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1131: FILE: drivers/dump/dump_overlay.c:45:
+ *       dump config settings, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1132: FILE: drivers/dump/dump_overlay.c:46:
+ *     - Registers the stage 2 dumper and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1133: FILE: drivers/dump/dump_overlay.c:47:
+ *     - Issues a soft reboot w/o clearing memory. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1136: FILE: drivers/dump/dump_overlay.c:50:
+ *     and follows a reverse ordering of passes wherein it $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1137: FILE: drivers/dump/dump_overlay.c:51:
+ *     compresses and saves data starting with the least critical $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1138: FILE: drivers/dump/dump_overlay.c:52:
+ *     areas first, thus freeing up the corresponding pages to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1146: FILE: drivers/dump/dump_overlay.c:60:
+ *     save the more critical data first (i.e. pages which figure $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1147: FILE: drivers/dump/dump_overlay.c:61:
+ *     in early passes for a regular dump). Finally issues a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1149: FILE: drivers/dump/dump_overlay.c:63:
+ *     $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1151: FILE: drivers/dump/dump_overlay.c:65:
+ *     and formatted as per the chosen output dump format, at this $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1165: FILE: drivers/dump/dump_overlay.c:79:
+extern struct dump_memdev *dump_memdev;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1166: FILE: drivers/dump/dump_overlay.c:80:
+extern struct dumper dumper_stage2;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#1167: FILE: drivers/dump/dump_overlay.c:81:
+struct dump_config_block *dump_saved_config = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1168: FILE: drivers/dump/dump_overlay.c:82:
+extern struct dump_blockdev *dump_blockdev;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#1169: FILE: drivers/dump/dump_overlay.c:83:
+static struct dump_memdev *saved_dump_memdev = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#1170: FILE: drivers/dump/dump_overlay.c:84:
+static struct dumper *saved_dumper = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1172: FILE: drivers/dump/dump_overlay.c:86:
+/* For testing $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1173: FILE: drivers/dump/dump_overlay.c:87:
+/* For testing 
+extern void dump_display_map(struct dump_memdev *);

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LINE_SPACING: Missing a blank line after declarations
#1180: FILE: drivers/dump/dump_overlay.c:94:
+	struct dumper *dumper;
+	list_for_each_entry(dumper, &dumper_list_head, dumper_list)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1185: FILE: drivers/dump/dump_overlay.c:99:
+^Ireturn NULL; $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1199: FILE: drivers/dump/dump_overlay.c:113:
+	extern unsigned long crashdump_addr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1201: FILE: drivers/dump/dump_overlay.c:115:
+^Iif (crashdump_addr == 0xdeadbeef) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1208: FILE: drivers/dump/dump_overlay.c:122:
+		printk("Invalid dump magic. Ignoring dump\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1212: FILE: drivers/dump/dump_overlay.c:126:
+^I^I^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1213: FILE: drivers/dump/dump_overlay.c:127:
+	printk("Dump may be available from previous boot\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1215: FILE: drivers/dump/dump_overlay.c:129:
+^Ireserve_bootmem(virt_to_phys((void *)crashdump_addr), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1216: FILE: drivers/dump/dump_overlay.c:130:
+	reserve_bootmem(virt_to_phys((void *)crashdump_addr), 
+		PAGE_ALIGN(sizeof(struct dump_config_block)));

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1219: FILE: drivers/dump/dump_overlay.c:133:
+
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1222: FILE: drivers/dump/dump_overlay.c:136:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1224: FILE: drivers/dump/dump_overlay.c:138:
+ * The ops vectors need fixing up as the corresp. routines may have $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1241: FILE: drivers/dump/dump_overlay.c:155:
+	if (!(dumper = dumper_by_name(config->dumper.name)))  {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1242: FILE: drivers/dump/dump_overlay.c:156:
+		printk("dumper name mismatch\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1245: FILE: drivers/dump/dump_overlay.c:159:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1248: FILE: drivers/dump/dump_overlay.c:162:
+		printk("dumper scheme mismatch\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1253: FILE: drivers/dump/dump_overlay.c:167:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1256: FILE: drivers/dump/dump_overlay.c:170:
+^Ifor (i = 0, filter = config->filter_table; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1257: FILE: drivers/dump/dump_overlay.c:171:
+^I^I((i < MAX_PASSES) && filter_table[i].selector); $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1260: FILE: drivers/dump/dump_overlay.c:174:
+			printk("dump filter mismatch\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1269: FILE: drivers/dump/dump_overlay.c:183:
+		printk("dump format mismatch\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dumper->dev"
#1277: FILE: drivers/dump/dump_overlay.c:191:
+	if (dumper->dev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dump_dev"
#1279: FILE: drivers/dump/dump_overlay.c:193:
+		if (dump_dev == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1284: FILE: drivers/dump/dump_overlay.c:198:
+^Iif (strncmp(dumper->dev->type_name, dev->type_name, 32)) { $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1285: FILE: drivers/dump/dump_overlay.c:199:
+		printk("dump dev type mismatch %s instead of %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1286: FILE: drivers/dump/dump_overlay.c:200:
+		printk("dump dev type mismatch %s instead of %s\n",
+				dev->type_name, dumper->dev->type_name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1289: FILE: drivers/dump/dump_overlay.c:203:
+^Idev->ops = dumper->dev->ops; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1291: FILE: drivers/dump/dump_overlay.c:205:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1294: FILE: drivers/dump/dump_overlay.c:208:
+^Iconfig->memdev.ddev.ops = dump_memdev->ddev.ops; $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1308: FILE: drivers/dump/dump_overlay.c:222:
+	printk("saving dump config settings\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1315: FILE: drivers/dump/dump_overlay.c:229:
+^Imemcpy(&config->scheme, dump_config.dumper->scheme, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1316: FILE: drivers/dump/dump_overlay.c:230:
+	memcpy(&config->scheme, dump_config.dumper->scheme, 
+		sizeof(struct dump_scheme));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1318: FILE: drivers/dump/dump_overlay.c:232:
+^Imemcpy(&config->dev[0], dump_config.dumper->dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1319: FILE: drivers/dump/dump_overlay.c:233:
+	memcpy(&config->dev[0], dump_config.dumper->dev, 
+		sizeof(struct dump_anydev));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1320: FILE: drivers/dump/dump_overlay.c:234:
+^Imemcpy(&config->filter_table, dump_config.dumper->filter, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1321: FILE: drivers/dump/dump_overlay.c:235:
+	memcpy(&config->filter_table, dump_config.dumper->filter, 
+		sizeof(struct dump_data_filter)*MAX_PASSES);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1321: FILE: drivers/dump/dump_overlay.c:235:
+		sizeof(struct dump_data_filter)*MAX_PASSES);
 		                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1327: FILE: drivers/dump/dump_overlay.c:241:
+^I$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dump_init_stage2', this function's name, in a string
#1335: FILE: drivers/dump/dump_overlay.c:249:
+	pr_debug("dump_init_stage2\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1338: FILE: drivers/dump/dump_overlay.c:252:
+		printk("loading dumper from previous boot \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1338: FILE: drivers/dump/dump_overlay.c:252:
+		printk("loading dumper from previous boot \n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1340: FILE: drivers/dump/dump_overlay.c:254:
+		if ((err = dump_load_config(saved_config)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1344: FILE: drivers/dump/dump_overlay.c:258:
+			if ((err = dump_configure(dump_config.dump_device))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1345: FILE: drivers/dump/dump_overlay.c:259:
+				printk("Stage 2 dump configure failed\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1354: FILE: drivers/dump/dump_overlay.c:268:
+^I^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1357: FILE: drivers/dump/dump_overlay.c:271:
+		if (!dump_oncpu) {
+			dump_unconfigure(); 
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1358: FILE: drivers/dump/dump_overlay.c:272:
+^I^I^Idump_unconfigure(); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1360: FILE: drivers/dump/dump_overlay.c:274:
+^I^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1365: FILE: drivers/dump/dump_overlay.c:279:
+		printk("no dumper from previous boot \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1365: FILE: drivers/dump/dump_overlay.c:279:
+		printk("no dumper from previous boot \n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1386: FILE: drivers/dump/dump_overlay.c:300:
+int dump_activate_softboot(void) $

CHECK:SPACING: No space is necessary after a cast
#1386: FILE: drivers/dump/dump_overlay.c:300:
+int dump_activate_softboot(void) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1392: FILE: drivers/dump/dump_overlay.c:306:
+^Iif (dump_oncpu) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1403: FILE: drivers/dump/dump_overlay.c:317:
+^I/* TBD/Fixme: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1404: FILE: drivers/dump/dump_overlay.c:318:
+^I * should we call reboot notifiers ? inappropriate for panic ?  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1405: FILE: drivers/dump/dump_overlay.c:319:
+^I * what about device_shutdown() ? $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1407: FILE: drivers/dump/dump_overlay.c:321:
+^I * through driverfs ? $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1425: FILE: drivers/dump/dump_overlay.c:339:
+	int (*action)(unsigned long, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1425: FILE: drivers/dump/dump_overlay.c:339:
+	int (*action)(unsigned long, unsigned long);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1429: FILE: drivers/dump/dump_overlay.c:343:
+		printk(" Please set GZIP compression \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1429: FILE: drivers/dump/dump_overlay.c:343:
+		printk(" Please set GZIP compression \n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1434: FILE: drivers/dump/dump_overlay.c:348:
+^Idump_config.dumper->curr_offset = $

ERROR:SPACING: space required after that ';' (ctx:BxV)
#1438: FILE: drivers/dump/dump_overlay.c:352:
+	for (;filter->selector; filter++, pass++);
 	     ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1438: FILE: drivers/dump/dump_overlay.c:352:
+	for (;filter->selector; filter++, pass++);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1439: FILE: drivers/dump/dump_overlay.c:353:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1440: FILE: drivers/dump/dump_overlay.c:354:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1441: FILE: drivers/dump/dump_overlay.c:355:
+^I * Start from the end backwards: overlay involves a reverse $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1444: FILE: drivers/dump/dump_overlay.c:358:
+^I * with them. $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1446: FILE: drivers/dump/dump_overlay.c:360:
+	for (--pass, --filter; pass >= 0; pass--, filter--)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1450: FILE: drivers/dump/dump_overlay.c:364:
+		if ((save = filter->level_mask & dump_config.level))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1460: FILE: drivers/dump/dump_overlay.c:374:
+			dump_config.dumper->curr_buf = (void *)PAGE_ALIGN(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1463: FILE: drivers/dump/dump_overlay.c:377:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1473: FILE: drivers/dump/dump_overlay.c:387:
+^I^I^Iprintk("dump_overlay_seq: failure %d in pass %d\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1473: FILE: drivers/dump/dump_overlay.c:387:
+			printk("dump_overlay_seq: failure %d in pass %d\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1474: FILE: drivers/dump/dump_overlay.c:388:
+			printk("dump_overlay_seq: failure %d in pass %d\n", 
+				err, pass);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1476: FILE: drivers/dump/dump_overlay.c:390:
+^I^I}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1477: FILE: drivers/dump/dump_overlay.c:391:
+^I^Iprintk("\n %d overlay pages %s of %d each in pass %d\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1477: FILE: drivers/dump/dump_overlay.c:391:
+		printk("\n %d overlay pages %s of %d each in pass %d\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1478: FILE: drivers/dump/dump_overlay.c:392:
+		printk("\n %d overlay pages %s of %d each in pass %d\n", 
+		err, save ? "saved" : "skipped", DUMP_PAGE_SIZE, pass);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1486: FILE: drivers/dump/dump_overlay.c:400:
+extern struct page *dump_mem_next_page(struct dump_memdev *dev);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1490: FILE: drivers/dump/dump_overlay.c:404:
+	return (dump_mem_lookup(dump_memdev, loc >> PAGE_SHIFT));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1495: FILE: drivers/dump/dump_overlay.c:409:
+	return (dump_mem_next_page(dump_memdev));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1498: FILE: drivers/dump/dump_overlay.c:412:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1499: FILE: drivers/dump/dump_overlay.c:413:
+ * Iterates over list of saved dump pages. Invoked during second stage of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1503: FILE: drivers/dump/dump_overlay.c:417:
+ * a different iterator could be written which would advance $

WARNING:TYPO_SPELLING: 'everytime' may be misspelled - perhaps 'every time'?
#1504: FILE: drivers/dump/dump_overlay.c:418:
+ * to the next page header everytime instead of blindly picking up
                            ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1505: FILE: drivers/dump/dump_overlay.c:419:
+ * the data. In such a case loc would be interpreted differently. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1509: FILE: drivers/dump/dump_overlay.c:423:
+int dump_saved_data_iterator(int pass, int (*action)(unsigned long, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1510: FILE: drivers/dump/dump_overlay.c:424:
+int dump_saved_data_iterator(int pass, int (*action)(unsigned long, 
+	unsigned long), struct dump_data_filter *filter)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1518: FILE: drivers/dump/dump_overlay.c:432:
+	printk("pass %d, start off 0x%llx end offset 0x%llx\n", pass,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1519: FILE: drivers/dump/dump_overlay.c:433:
+	printk("pass %d, start off 0x%llx end offset 0x%llx\n", pass,
+			filter->start, filter->end);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1523: FILE: drivers/dump/dump_overlay.c:437:
+^I^I^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1527: FILE: drivers/dump/dump_overlay.c:441:
+			printk("no more saved data for pass %d\n", pass);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1533: FILE: drivers/dump/dump_overlay.c:447:
+^I^Iif (page && filter->selector(pass, (unsigned long)page, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1534: FILE: drivers/dump/dump_overlay.c:448:
+		if (page && filter->selector(pass, (unsigned long)page, 
+			PAGE_SIZE))  {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1536: FILE: drivers/dump/dump_overlay.c:450:
+^I^I^Iif ((err = action((unsigned long)page, sz))) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1536: FILE: drivers/dump/dump_overlay.c:450:
+			if ((err = action((unsigned long)page, sz))) 

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1538: FILE: drivers/dump/dump_overlay.c:452:
+				break;
+			else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1543: FILE: drivers/dump/dump_overlay.c:457:
+^I^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1544: FILE: drivers/dump/dump_overlay.c:458:
+			
+		}

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1553: FILE: drivers/dump/dump_overlay.c:467:
+	int ret=0;
 	       ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1566: FILE: drivers/dump/dump_overlay.c:480:
+	static unsigned long cnt = 0;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1568: FILE: drivers/dump/dump_overlay.c:482:
+	if ((err = dump_generic_save_data(loc, len)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1576: FILE: drivers/dump/dump_overlay.c:490:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1580: FILE: drivers/dump/dump_overlay.c:494:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1593: FILE: drivers/dump/dump_overlay.c:507:
+^I/* $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1599: FILE: drivers/dump/dump_overlay.c:513:
+	if ((err = dump_save_config(dump_saved_config)))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1618: FILE: drivers/dump/dump_overlay.c:532:
+		printk("Processing old dump pending writeout\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1621: FILE: drivers/dump/dump_overlay.c:535:
+			printk("failed to writeout saved dump\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1627: FILE: drivers/dump/dump_overlay.c:541:
+	dev = dumper_stage2.dev = dump_config.dumper->dev;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1629: FILE: drivers/dump/dump_overlay.c:543:
+	dump_dev = dump_config.dumper->dev = &dump_memdev->ddev;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1630: FILE: drivers/dump/dump_overlay.c:544:
+	if ((err = dump_generic_configure(0))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1631: FILE: drivers/dump/dump_overlay.c:545:
+		printk("dump generic configure failed: err %d\n", err);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1638: FILE: drivers/dump/dump_overlay.c:552:
+	if (!dev || (err = dev->ops->open(dev, devid))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1638: FILE: drivers/dump/dump_overlay.c:552:
+	if (!dev || (err = dev->ops->open(dev, devid))) {
+		return err;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1644: FILE: drivers/dump/dump_overlay.c:558:
+^Iif (!(dump_saved_config = dump_alloc_mem(sizeof(struct $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1644: FILE: drivers/dump/dump_overlay.c:558:
+	if (!(dump_saved_config = dump_alloc_mem(sizeof(struct 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1646: FILE: drivers/dump/dump_overlay.c:560:
+		printk("dump config block alloc failed\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1652: FILE: drivers/dump/dump_overlay.c:566:
+^Iprintk("Dump config block of size %d set up at 0x%lx\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1652: FILE: drivers/dump/dump_overlay.c:566:
+	printk("Dump config block of size %d set up at 0x%lx\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1653: FILE: drivers/dump/dump_overlay.c:567:
+	printk("Dump config block of size %d set up at 0x%lx\n", 
+		sizeof(*dump_saved_config), (unsigned long)dump_saved_config);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dump_overlay_unconfigure', this function's name, in a string
#1662: FILE: drivers/dump/dump_overlay.c:576:
+	pr_debug("dump_overlay_unconfigure\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1664: FILE: drivers/dump/dump_overlay.c:578:
+^Idev->ops->release(dev); $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1672: FILE: drivers/dump/dump_overlay.c:586:
+	dump_dev = dump_config.dumper->dev = dumper_stage2.dev;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1674: FILE: drivers/dump/dump_overlay.c:588:
+	printk("Unconfigured overlay dumper\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dump_staged_unconfigure', this function's name, in a string
#1684: FILE: drivers/dump/dump_overlay.c:598:
+	pr_debug("dump_staged_unconfigure\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1689: FILE: drivers/dump/dump_overlay.c:603:
+		printk("Processing saved dump pending writeout\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1690: FILE: drivers/dump/dump_overlay.c:604:
+		if ((err = dump_switchover_stage())) {

WARNING:TYPO_SPELLING: 'commiting' may be misspelled - perhaps 'committing'?
#1691: FILE: drivers/dump/dump_overlay.c:605:
+			printk("Error in commiting saved dump at 0x%lx\n", 
 			                 ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1691: FILE: drivers/dump/dump_overlay.c:605:
+^I^I^Iprintk("Error in commiting saved dump at 0x%lx\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1691: FILE: drivers/dump/dump_overlay.c:605:
+			printk("Error in commiting saved dump at 0x%lx\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1692: FILE: drivers/dump/dump_overlay.c:606:
+			printk("Error in commiting saved dump at 0x%lx\n", 
+				(unsigned long)saved_config);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1693: FILE: drivers/dump/dump_overlay.c:607:
+			printk("Old dump may hog memory\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1703: FILE: drivers/dump/dump_overlay.c:617:
+	printk("Unconfigured second stage dumper\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1718: FILE: drivers/dump/dump_overlay.c:632:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1733: FILE: drivers/dump/dump_overlay.c:647:
+^I^Ibytes = (sz > len + PAGE_SIZE) ? PAGE_SIZE : sz - len;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1734: FILE: drivers/dump/dump_overlay.c:648:
+^I^Imemcpy(buf, addr, bytes); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1756: FILE: drivers/dump/dump_overlay.c:670:
+^Iif (len > DUMP_BUFFER_SIZE) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1761: FILE: drivers/dump/dump_overlay.c:675:
+		if ((err = dump_copy_pages(buf, page, PAGE_SIZE)))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1766: FILE: drivers/dump/dump_overlay.c:680:
+		printk("Incomplete header saved in mem\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1770: FILE: drivers/dump/dump_overlay.c:684:
+	if ((err = dump_dev_seek(0))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1771: FILE: drivers/dump/dump_overlay.c:685:
+		printk("Unable to seek to dump header offset\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1774: FILE: drivers/dump/dump_overlay.c:688:
+^Ierr = dump_ll_write(dump_config.dumper->dump_buf, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1775: FILE: drivers/dump/dump_overlay.c:689:
+	err = dump_ll_write(dump_config.dumper->dump_buf, 
+		buf - dump_config.dumper->dump_buf);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1783: FILE: drivers/dump/dump_overlay.c:697:
+static loff_t next_dph_offset = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1787: FILE: drivers/dump/dump_overlay.c:701:
+^Iif ((dph->dp_address & (PAGE_SIZE - 1)) || (dph->dp_flags $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1787: FILE: drivers/dump/dump_overlay.c:701:
+	if ((dph->dp_address & (PAGE_SIZE - 1)) || (dph->dp_flags 
[...]
+	printk("dp->address = 0x%llx, dp->size = 0x%x, dp->flag = 0x%x\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dph->dp_flags 
 	      > DUMP_DH_COMPRESSED'
#1787: FILE: drivers/dump/dump_overlay.c:701:
+	if ((dph->dp_address & (PAGE_SIZE - 1)) || (dph->dp_flags 
+	      > DUMP_DH_COMPRESSED) || (!dph->dp_flags) ||
+		(dph->dp_size > PAGE_SIZE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!dph->dp_flags'
#1787: FILE: drivers/dump/dump_overlay.c:701:
+	if ((dph->dp_address & (PAGE_SIZE - 1)) || (dph->dp_flags 
+	      > DUMP_DH_COMPRESSED) || (!dph->dp_flags) ||
+		(dph->dp_size > PAGE_SIZE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dph->dp_size > PAGE_SIZE'
#1787: FILE: drivers/dump/dump_overlay.c:701:
+	if ((dph->dp_address & (PAGE_SIZE - 1)) || (dph->dp_flags 
+	      > DUMP_DH_COMPRESSED) || (!dph->dp_flags) ||
+		(dph->dp_size > PAGE_SIZE)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1790: FILE: drivers/dump/dump_overlay.c:704:
+	printk("dp->address = 0x%llx, dp->size = 0x%x, dp->flag = 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1791: FILE: drivers/dump/dump_overlay.c:705:
+	printk("dp->address = 0x%llx, dp->size = 0x%x, dp->flag = 0x%x\n",
+		dph->dp_address, dph->dp_size, dph->dp_flags);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1805: FILE: drivers/dump/dump_overlay.c:719:
+			printk("Invalid page hdr at offset 0x%llx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1806: FILE: drivers/dump/dump_overlay.c:720:
+			printk("Invalid page hdr at offset 0x%llx\n",
+				next_dph_offset);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1812: FILE: drivers/dump/dump_overlay.c:726:
+^Inext_dph_offset -= sz;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1816: FILE: drivers/dump/dump_overlay.c:730:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1817: FILE: drivers/dump/dump_overlay.c:731:
+ * TBD/Later: Consider avoiding the copy by using a scatter/gather $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1826: FILE: drivers/dump/dump_overlay.c:740:
+	if ((err = dump_copy_pages(buf, page, sz))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1827: FILE: drivers/dump/dump_overlay.c:741:
+		printk("dump_copy_pages failed");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1831: FILE: drivers/dump/dump_overlay.c:745:
+	if ((err = dump_verify_lcrash_data(buf, sz))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1832: FILE: drivers/dump/dump_overlay.c:746:
+		printk("dump_verify_lcrash_data failed\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1833: FILE: drivers/dump/dump_overlay.c:747:
+		printk("Invalid data for pfn 0x%lx\n", page_to_pfn(page));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1834: FILE: drivers/dump/dump_overlay.c:748:
+		printk("Page flags 0x%lx\n", page->flags);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1835: FILE: drivers/dump/dump_overlay.c:749:
+		printk("Page count 0x%x\n", atomic_read(&page->count));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1844: FILE: drivers/dump/dump_overlay.c:758:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1863: FILE: drivers/dump/dump_overlay.c:777:
+
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1865: FILE: drivers/dump/dump_overlay.c:779:
+extern struct __dump_compress dump_gzip_compression;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1871: FILE: drivers/dump/dump_overlay.c:785:
+^I.compress ^I= &dump_none_compression, /* needs to be gzip */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1874: FILE: drivers/dump/dump_overlay.c:788:
+};^I^I$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1895: FILE: drivers/dump/dump_overlay.c:809:
+extern int dump_filter_none(int pass, unsigned long loc, unsigned long sz);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1898: FILE: drivers/dump/dump_overlay.c:812:
+{.name = "passkern", .selector = dump_passthru_filter, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1900: FILE: drivers/dump/dump_overlay.c:814:
+{.name = "passuser", .selector = dump_passthru_filter, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1902: FILE: drivers/dump/dump_overlay.c:816:
+{.name = "passunused", .selector = dump_passthru_filter, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1904: FILE: drivers/dump/dump_overlay.c:818:
+{.name = "none", .selector = dump_filter_none, $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1908: FILE: drivers/dump/dump_overlay.c:822:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1930: FILE: drivers/dump/dump_overlay.c:844:
+^I.compress ^I= &dump_none_compression,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1933: FILE: drivers/dump/dump_overlay.c:847:
+};^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1951: FILE: drivers/dump/dump_scheme.c:170:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1952: FILE: drivers/dump/dump_scheme.c:171:
+^I^I * extra bit of copying to simplify verification  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1955: FILE: drivers/dump/dump_scheme.c:174:
+^I^Imemcpy(dump_buf - DUMP_PAGE_SIZE, dump_buf + $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1965: FILE: drivers/dump/dump_scheme.c:276:
+	if (!(buf = dump_alloc_mem(DUMP_BUFFER_SIZE + 3 * DUMP_PAGE_SIZE)))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1987: FILE: drivers/dump/dump_scheme.c:319:
+	printk("Closed dump device\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2024: FILE: drivers/dump/dump_setup.c:196:
+static int proc_doulonghex(ctl_table *ctl, int write, struct file *f,
+			    void *buffer, size_t *lenp);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2072: FILE: drivers/dump/dump_setup.c:408:
+		printk("Configuring softboot based dump \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2072: FILE: drivers/dump/dump_setup.c:408:
+		printk("Configuring softboot based dump \n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2074: FILE: drivers/dump/dump_setup.c:410:
+^I^Idump_config.dumper = &dumper_stage1; $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2076: FILE: drivers/dump/dump_setup.c:412:
+		printk("Requires CONFIG_CRASHDUMP_MEMDEV. Can't proceed.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2080: FILE: drivers/dump/dump_setup.c:416:
+^I}^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2089: FILE: drivers/dump/dump_setup.c:424:
+ ^I^Idump_config.dump_device = devid;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2089: FILE: drivers/dump/dump_setup.c:424:
+ ^I^Idump_config.dump_device = devid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2089: FILE: drivers/dump/dump_setup.c:424:
+ ^I^Idump_config.dump_device = devid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2093: FILE: drivers/dump/dump_setup.c:428:
+ ^I^Idump_config.dumper = NULL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2093: FILE: drivers/dump/dump_setup.c:428:
+ ^I^Idump_config.dumper = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2093: FILE: drivers/dump/dump_setup.c:428:
+ ^I^Idump_config.dumper = NULL;$

CHECK:SPACING: No space is necessary after a cast
#2115: FILE: drivers/dump/dump_setup.c:591:
+			dump_config.dump_device = (dev_t) oval;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2124: FILE: drivers/dump/dump_setup.c:601:
+static int $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2126: FILE: drivers/dump/dump_setup.c:603:
+proc_doulonghex(ctl_table *ctl, int write, struct file *f,
+		 void *buffer, size_t *lenp)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'f->f_pos'
#2133: FILE: drivers/dump/dump_setup.c:610:
+	if (!ctl->data || !ctl->maxlen || !*lenp || (f->f_pos)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2137: FILE: drivers/dump/dump_setup.c:614:
+^I$

CHECK:SPACING: No space is necessary after a cast
#2138: FILE: drivers/dump/dump_setup.c:615:
+	i = (unsigned long *) ctl->data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2140: FILE: drivers/dump/dump_setup.c:617:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#2145: FILE: drivers/dump/dump_setup.c:622:
+	if(copy_to_user(buffer, buf, len))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2147: FILE: drivers/dump/dump_setup.c:624:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2181: FILE: include/linux/dump.h:122:
+	CTL_DUMP_ADDR=5,
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2182: FILE: include/linux/dump.h:123:
+	CTL_DUMP_TEST=6,
 	             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2193: FILE: include/linux/dumpdev.h:73:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2205: FILE: include/linux/dumpdev.h:85:
+};^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2216: FILE: include/linux/dumpdev.h:96:
+^Iint (*reset)(struct dump_rdev *, unsigned int, $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dump_rdev *' should also have an identifier name
#2216: FILE: include/linux/dumpdev.h:96:
+	int (*reset)(struct dump_rdev *, unsigned int, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#2216: FILE: include/linux/dumpdev.h:96:
+	int (*reset)(struct dump_rdev *, unsigned int, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#2216: FILE: include/linux/dumpdev.h:96:
+	int (*reset)(struct dump_rdev *, unsigned int, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2217: FILE: include/linux/dumpdev.h:97:
+	int (*reset)(struct dump_rdev *, unsigned int, 
+		unsigned long);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2229: FILE: include/linux/dumpdev.h:109:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#2260: FILE: kernel/panic.c:88:
+			printk(KERN_EMERG "by starting a new kernel ..\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2261: FILE: kernel/panic.c:89:
+			mdelay(panic_timeout*1000);
 			                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2265: FILE: kernel/panic.c:93:
+		mdelay(panic_timeout*1000);
 		                    ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000395335.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 246 errors, 119 warnings, 71 checks, 2021 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000395335.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
