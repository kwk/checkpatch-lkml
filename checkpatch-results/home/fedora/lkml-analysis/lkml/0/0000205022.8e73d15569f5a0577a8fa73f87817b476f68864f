WARNING:TYPO_SPELLING: 'identation' may be misspelled - perhaps 'indentation'?
#31: 
I8K: pass through Lindent to change 4 spaces identation to TABs
                                             ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#81: FILE: drivers/char/i8k.c:95:
+	unsigned int eax;
+	unsigned int ebx __attribute__ ((packed));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#81: FILE: drivers/char/i8k.c:95:
+	unsigned int ebx __attribute__ ((packed));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#81: FILE: drivers/char/i8k.c:95:
+	unsigned int ebx __attribute__ ((packed));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#82: FILE: drivers/char/i8k.c:96:
+	unsigned int ecx __attribute__ ((packed));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#82: FILE: drivers/char/i8k.c:96:
+	unsigned int ecx __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#83: FILE: drivers/char/i8k.c:97:
+	unsigned int edx __attribute__ ((packed));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#83: FILE: drivers/char/i8k.c:97:
+	unsigned int edx __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#84: FILE: drivers/char/i8k.c:98:
+	unsigned int esi __attribute__ ((packed));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#84: FILE: drivers/char/i8k.c:98:
+	unsigned int esi __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#85: FILE: drivers/char/i8k.c:99:
+	unsigned int edi __attribute__ ((packed));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#85: FILE: drivers/char/i8k.c:99:
+	unsigned int edi __attribute__ ((packed));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#101: FILE: drivers/char/i8k.c:111:
+static int i8k_smm(SMMRegisters * regs)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <SMMRegisters>
#101: FILE: drivers/char/i8k.c:111:
+static int i8k_smm(SMMRegisters * regs)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#158: FILE: drivers/char/i8k.c:137:
+	    "andl $1,%%eax\n":"=a"(rc)
 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rc != 0'
#163: FILE: drivers/char/i8k.c:141:
+	if ((rc != 0) || ((regs->eax & 0xffff) == 0xffff) || (regs->eax == eax)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'regs->eax == eax'
#163: FILE: drivers/char/i8k.c:141:
+	if ((rc != 0) || ((regs->eax & 0xffff) == 0xffff) || (regs->eax == eax)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#163: FILE: drivers/char/i8k.c:141:
+	if ((rc != 0) || ((regs->eax & 0xffff) == 0xffff) || (regs->eax == eax)) {
+		return -EINVAL;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#185: FILE: drivers/char/i8k.c:158:
+	if ((rc = i8k_smm(&regs)) < 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#185: FILE: drivers/char/i8k.c:158:
+	if ((rc = i8k_smm(&regs)) < 0) {
+		return rc;
+	}

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#200: FILE: drivers/char/i8k.c:170:
+	strlcpy(buff, serial_number, sizeof(serial_number));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#230: FILE: drivers/char/i8k.c:183:
+	if ((rc = i8k_smm(&regs)) < 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#230: FILE: drivers/char/i8k.c:183:
+	if ((rc = i8k_smm(&regs)) < 0) {
+		return rc;
+	}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#257: FILE: drivers/char/i8k.c:208:
+	if ((rc = i8k_smm(&regs)) < 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#257: FILE: drivers/char/i8k.c:208:
+	if ((rc = i8k_smm(&regs)) < 0) {
+		return rc;
+	}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#297: FILE: drivers/char/i8k.c:230:
+	if ((rc = i8k_smm(&regs)) < 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#297: FILE: drivers/char/i8k.c:230:
+	if ((rc = i8k_smm(&regs)) < 0) {
+		return rc;
+	}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#322: FILE: drivers/char/i8k.c:247:
+	if ((rc = i8k_smm(&regs)) < 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#322: FILE: drivers/char/i8k.c:247:
+	if ((rc = i8k_smm(&regs)) < 0) {
+		return rc;
+	}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#350: FILE: drivers/char/i8k.c:266:
+	if ((rc = i8k_smm(&regs)) < 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#350: FILE: drivers/char/i8k.c:266:
+	if ((rc = i8k_smm(&regs)) < 0) {
+		return rc;
+	}

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#372: FILE: drivers/char/i8k.c:283:
+	static int prev = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#381: FILE: drivers/char/i8k.c:287:
+	if ((rc = i8k_smm(&regs)) < 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#381: FILE: drivers/char/i8k.c:287:
+	if ((rc = i8k_smm(&regs)) < 0) {
+		return rc;
+	}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#431: FILE: drivers/char/i8k.c:317:
+	if ((rc = i8k_smm(&regs)) < 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#431: FILE: drivers/char/i8k.c:317:
+	if ((rc = i8k_smm(&regs)) < 0) {
+		return rc;
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'regs.eax == 1145651527'
#440: FILE: drivers/char/i8k.c:321:
+	if ((regs.eax == 1145651527) && (regs.edx == 1145392204)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'regs.edx == 1145392204'
#440: FILE: drivers/char/i8k.c:321:
+	if ((regs.eax == 1145651527) && (regs.edx == 1145392204)) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#440: FILE: drivers/char/i8k.c:321:
+	if ((regs.eax == 1145651527) && (regs.edx == 1145392204)) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#560: FILE: drivers/char/i8k.c:362:
+		if (copy_from_user(&val, argp, sizeof(int))) {
+			return -EFAULT;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#567: FILE: drivers/char/i8k.c:369:
+		if (copy_from_user(&val, argp, sizeof(int))) {
+			return -EFAULT;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#574: FILE: drivers/char/i8k.c:376:
+		if (restricted && !capable(CAP_SYS_ADMIN)) {
+			return -EPERM;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#577: FILE: drivers/char/i8k.c:379:
+		if (copy_from_user(&val, argp, sizeof(int))) {
+			return -EFAULT;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#580: FILE: drivers/char/i8k.c:382:
+		if (copy_from_user(&speed, argp + 1, sizeof(int))) {
+			return -EFAULT;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#593: FILE: drivers/char/i8k.c:392:
+	if (val < 0) {
+		return val;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#599: FILE: drivers/char/i8k.c:398:
+		if (copy_to_user(argp, &val, 4)) {
+			return -EFAULT;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#604: FILE: drivers/char/i8k.c:403:
+		if (copy_to_user(argp, buff, 16)) {
+			return -EFAULT;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#609: FILE: drivers/char/i8k.c:408:
+		if (copy_to_user(argp, &val, sizeof(int))) {
+			return -EFAULT;
+		}

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#634: FILE: drivers/char/i8k.c:431:
+	if (power_status) {
[...]
+	} else {
[...]

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#705: FILE: drivers/char/i8k.c:462:
+static ssize_t i8k_read(struct file *f, char __user * buffer, size_t len,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#706: FILE: drivers/char/i8k.c:463:
+			loff_t * fpos)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#718: FILE: drivers/char/i8k.c:469:
+	if (n <= 0) {
+		return n;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#725: FILE: drivers/char/i8k.c:473:
+	if (*fpos >= n) {
+		return 0;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#732: FILE: drivers/char/i8k.c:477:
+	if ((*fpos + len) >= n) {
+		len = n - *fpos;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#739: FILE: drivers/char/i8k.c:481:
+	if (copy_to_user(buffer, info, len) != 0) {
+		return -EFAULT;
+	}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#760: FILE: drivers/char/i8k.c:494:
+	if ((len = strlen(s)) > size) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#760: FILE: drivers/char/i8k.c:494:
+	if ((len = strlen(s)) > size) {
+		len = size;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#767: FILE: drivers/char/i8k.c:498:
+	for (p = s + len - 1; len && (*p == ' '); len--, p--) {
+		*p = '\0';
+	}

CHECK:CAMELCASE: Avoid CamelCase: <DMIHeader>
#781: FILE: drivers/char/i8k.c:514:
+static char *__init dmi_string(DMIHeader * dmi, u8 s)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#795: FILE: drivers/char/i8k.c:518:
+	if (!s) {
+		return "";
+	}

CHECK:SPACING: No space is necessary after a cast
#802: FILE: drivers/char/i8k.c:523:
+	p = (u8 *) dmi + dmi->length;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#813: FILE: drivers/char/i8k.c:533:
+static void __init dmi_decode(DMIHeader * dmi)

CHECK:SPACING: No space is necessary after a cast
#817: FILE: drivers/char/i8k.c:535:
+	u8 *data = (u8 *) dmi;

WARNING:LINE_SPACING: Missing a blank line after declarations
#828: FILE: drivers/char/i8k.c:540:
+	int i;
+	printk("%08x ", (int)data);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#828: FILE: drivers/char/i8k.c:540:
+	printk("%08x ", (int)data);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#829: FILE: drivers/char/i8k.c:541:
+	for (i = 0; i < data[1] && i < 64; i++) {
+		printk("%02x ", data[i]);
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#830: FILE: drivers/char/i8k.c:542:
+		printk("%02x ", data[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#832: FILE: drivers/char/i8k.c:544:
+	printk("\n");

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#873: FILE: drivers/char/i8k.c:551:
+			strlcpy(bios_version, p, sizeof(bios_version));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#880: FILE: drivers/char/i8k.c:558:
+			strlcpy(system_vendor, p, sizeof(system_vendor));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#885: FILE: drivers/char/i8k.c:563:
+			strlcpy(product_name, p, sizeof(product_name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#890: FILE: drivers/char/i8k.c:568:
+			strlcpy(serial_number, p, sizeof(serial_number));

WARNING:SPACING: Unnecessary space before function pointer arguments
#903: FILE: drivers/char/i8k.c:576:
+			    void (*fn) (DMIHeader *))

WARNING:BRACES: braces {} are not necessary for single statement blocks
#923: FILE: drivers/char/i8k.c:584:
+	if (buf == NULL) {
+		return -1;
 	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf"
#923: FILE: drivers/char/i8k.c:584:
+	if (buf == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#939: FILE: drivers/char/i8k.c:594:
+		dmi = (DMIHeader *) data;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#944: FILE: drivers/char/i8k.c:599:
+		if ((data - buf + dmi->length) >= len) {
+			break;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#953: FILE: drivers/char/i8k.c:608:
+		while (((data - buf) < len) && (*data || data[1])) {
+			data++;
+		}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1029: FILE: drivers/char/i8k.c:662:
+		printk(KERN_INFO "i8k: unable to get DMI information\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1038: FILE: drivers/char/i8k.c:667:
+		printk(KERN_INFO "i8k: not running on a Dell system\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1046: FILE: drivers/char/i8k.c:673:
+			printk(KERN_INFO "i8k: unsupported model: %s\n",

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1050: FILE: drivers/char/i8k.c:677:
+		if (strncmp(product_name, *p, strlen(*p)) == 0) {
+			break;
+		}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1109: FILE: drivers/char/i8k.c:698:
+		printk(KERN_INFO "i8k: vendor=%s, model=%s, version=%s\n",

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1120: FILE: drivers/char/i8k.c:705:
+	if (i8k_get_dell_signature() != 0) {
[...]
+	} else {
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1121: FILE: drivers/char/i8k.c:706:
+		printk(KERN_INFO "i8k: unable to get SMM Dell signature\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1135: FILE: drivers/char/i8k.c:716:
+		printk(KERN_INFO "i8k: unable to get SMM BIOS version\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1145: FILE: drivers/char/i8k.c:726:
+		if (bios_version[0] == '?') {
+			strcpy(bios_version, buff);
+		}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1152: FILE: drivers/char/i8k.c:733:
+			printk(KERN_INFO

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1159: FILE: drivers/char/i8k.c:739:
+	if (!smm_found && !force) {
+		return -ENODEV;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1191: FILE: drivers/char/i8k.c:754:
+	if (i8k_probe() != 0) {
+		return -ENODEV;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1197: FILE: drivers/char/i8k.c:760:
+	if (!proc_i8k) {
+		return -ENOENT;
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1204: FILE: drivers/char/i8k.c:766:
+	printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1226: FILE: drivers/char/i8k.c:784:
+	printk(KERN_INFO "i8k: module unloaded\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000205022.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 68 warnings, 11 checks, 1170 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000205022.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
