WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
symbols exported by the kernel and any module compiled within the kernel tree.

WARNING:TYPO_SPELLING: 'approch' may be misspelled - perhaps 'approach'?
#65: 
approch is received before completing it.
^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'direcotry' may be misspelled - perhaps 'directory'?
#85: FILE: Makefile:56:
+# Use make M=dir to specify direcotry of external module to build
                             ^^^^^^^^^

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#125: FILE: Makefile:114:
+        -f $(CURDIR)/Makefile $@

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: Makefile:129:
+else $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#397: FILE: Makefile:943:
+# $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#402: FILE: Makefile:948:
+# make M=dir^I       Same as 'make M=dir modules' $

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#417: FILE: Makefile:963:
+	$(Q)$(MAKE) -rR -f $(srctree)/scripts/Makefile.modpost

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#421: FILE: Makefile:967:
+	$(Q)$(MAKE) -rR -f $(srctree)/scripts/Makefile.modinst

ERROR:CODE_INDENT: code indent should use tabs where possible
#584: FILE: scripts/modpost.c:627:
+        if (!file) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: scripts/modpost.c:627:
+        if (!file) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#585: FILE: scripts/modpost.c:628:
+                perror(fname);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: scripts/modpost.c:628:
+                perror(fname);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#586: FILE: scripts/modpost.c:629:
+                abort();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: scripts/modpost.c:629:
+                abort();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#587: FILE: scripts/modpost.c:630:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: scripts/modpost.c:630:
+        }$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#594: FILE: scripts/modpost.c:637:
+		if (!(symname = strchr(line, '\t')))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#597: FILE: scripts/modpost.c:640:
+		if (!(modname = strchr(symname, '\t')))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#606: FILE: scripts/modpost.c:649:
+		if (!(mod = find_module(modname))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#630: FILE: scripts/modpost.c:673:
+		while (symbol) {
+			symbol = symbol->next;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#639: FILE: scripts/modpost.c:682:
+			buf_printf(&buf, "0x%08x\t%s\t%s\n", symbol->crc,
+				symbol->name, symbol->module->name);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#658: FILE: scripts/modpost.c:699:
+		switch(opt) {
+			case 'i':
[...]
+			case 'o':
[...]
+			default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#658: FILE: scripts/modpost.c:699:
+		switch(opt) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#673: FILE: scripts/modpost.c:714:
+	while (optind < argc) {
+		read_symbols(argv[optind++]);
 	}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000289428.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 12 warnings, 1 checks, 588 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000289428.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
