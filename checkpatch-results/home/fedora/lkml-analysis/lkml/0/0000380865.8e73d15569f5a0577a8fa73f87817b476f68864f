WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
[PATCH] i2c: w83781d i2c driver updated for 2.5.66-bk4 (with sysfs support, empty tree)

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#40: 
--- a/drivers/i2c/chips/Kconfig	Wed Apr  2 16:00:28 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#46: FILE: drivers/i2c/chips/Kconfig:39:
+^I  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: drivers/i2c/chips/Kconfig:49:
+^I  $

WARNING:TYPO_SPELLING: 'utilties' may be misspelled - perhaps 'utilities'?
#57: FILE: drivers/i2c/chips/Kconfig:50:
+	  You will also need the latest user-space utilties: you can find them
 	                                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: drivers/i2c/chips/w83781d.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#68: FILE: drivers/i2c/chips/w83781d.c:2:
+/*
+    w83781d.c - Part of lm_sensors, Linux kernel modules for hardware

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: drivers/i2c/chips/w83781d.c:3:
+                monitoring$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#85: FILE: drivers/i2c/chips/w83781d.c:19:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#86: FILE: drivers/i2c/chips/w83781d.c:20:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#90: FILE: drivers/i2c/chips/w83781d.c:24:
+/*
+    Supports following chips:

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#109: FILE: drivers/i2c/chips/w83781d.c:43:
+#include <asm/io.h>

WARNING:SPLIT_STRING: quoted string split across lines
#123: FILE: drivers/i2c/chips/w83781d.c:57:
+SENSORS_MODULE_PARM(force_subclients, "List of subclient addresses: "
+		    "{bus, clientaddr, subclientaddr1, subclientaddr2}");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#140: FILE: drivers/i2c/chips/w83781d.c:74:
+#define W83781D_REG_IN_MAX(nr)		((nr < 7) ? (0x2b + (nr) * 2) : \
+						    (0x554 + (((nr) - 7) * 2)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nr' may be better as '(nr)' to avoid precedence issues
#140: FILE: drivers/i2c/chips/w83781d.c:74:
+#define W83781D_REG_IN_MAX(nr)		((nr < 7) ? (0x2b + (nr) * 2) : \
+						    (0x554 + (((nr) - 7) * 2)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#142: FILE: drivers/i2c/chips/w83781d.c:76:
+#define W83781D_REG_IN_MIN(nr)		((nr < 7) ? (0x2c + (nr) * 2) : \
+						    (0x555 + (((nr) - 7) * 2)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nr' may be better as '(nr)' to avoid precedence issues
#142: FILE: drivers/i2c/chips/w83781d.c:76:
+#define W83781D_REG_IN_MIN(nr)		((nr < 7) ? (0x2c + (nr) * 2) : \
+						    (0x555 + (((nr) - 7) * 2)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#144: FILE: drivers/i2c/chips/w83781d.c:78:
+#define W83781D_REG_IN(nr)		((nr < 7) ? (0x20 + (nr)) : \
+						    (0x550 + (nr) - 7))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nr' may be better as '(nr)' to avoid precedence issues
#144: FILE: drivers/i2c/chips/w83781d.c:78:
+#define W83781D_REG_IN(nr)		((nr < 7) ? (0x20 + (nr)) : \
+						    (0x550 + (nr) - 7))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#153: FILE: drivers/i2c/chips/w83781d.c:87:
+#define W83781D_REG_TEMP(nr)		((nr == 3) ? (0x0250) : \
+					((nr == 2) ? (0x0150) : \
+						     (0x27)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nr' may be better as '(nr)' to avoid precedence issues
#153: FILE: drivers/i2c/chips/w83781d.c:87:
+#define W83781D_REG_TEMP(nr)		((nr == 3) ? (0x0250) : \
+					((nr == 2) ? (0x0150) : \
+						     (0x27)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#156: FILE: drivers/i2c/chips/w83781d.c:90:
+#define W83781D_REG_TEMP_HYST(nr)	((nr == 3) ? (0x253) : \
+					((nr == 2) ? (0x153) : \
+						     (0x3A)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nr' may be better as '(nr)' to avoid precedence issues
#156: FILE: drivers/i2c/chips/w83781d.c:90:
+#define W83781D_REG_TEMP_HYST(nr)	((nr == 3) ? (0x253) : \
+					((nr == 2) ? (0x153) : \
+						     (0x3A)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#159: FILE: drivers/i2c/chips/w83781d.c:93:
+#define W83781D_REG_TEMP_OVER(nr)	((nr == 3) ? (0x255) : \
+					((nr == 2) ? (0x155) : \
+						     (0x39)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nr' may be better as '(nr)' to avoid precedence issues
#159: FILE: drivers/i2c/chips/w83781d.c:93:
+#define W83781D_REG_TEMP_OVER(nr)	((nr == 3) ? (0x255) : \
+					((nr == 2) ? (0x155) : \
+						     (0x39)))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#203: FILE: drivers/i2c/chips/w83781d.c:137:
+/* The following are undocumented in the data sheets however we
+   received the information in an email from Winbond tech support */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#203: FILE: drivers/i2c/chips/w83781d.c:137:
+   received the information in an email from Winbond tech support */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#218: FILE: drivers/i2c/chips/w83781d.c:152:
+/* Conversions. Rounding and limit checking is only done on the TO_REG
+   variants. Note that you should be a bit careful with which arguments

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#220: FILE: drivers/i2c/chips/w83781d.c:154:
+   Fixing this is just not worth it. */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#221: FILE: drivers/i2c/chips/w83781d.c:155:
+#define IN_TO_REG(val)			(SENSORS_LIMIT((((val) * 10 + 8)/16),0,255))
                       			                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#221: FILE: drivers/i2c/chips/w83781d.c:155:
+#define IN_TO_REG(val)			(SENSORS_LIMIT((((val) * 10 + 8)/16),0,255))
                       			                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#221: FILE: drivers/i2c/chips/w83781d.c:155:
+#define IN_TO_REG(val)			(SENSORS_LIMIT((((val) * 10 + 8)/16),0,255))
                       			                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#233: FILE: drivers/i2c/chips/w83781d.c:167:
+#define FAN_FROM_REG(val,div)		((val) == 0   ? -1 : \
                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#233: FILE: drivers/i2c/chips/w83781d.c:167:
+#define FAN_FROM_REG(val,div)		((val) == 0   ? -1 : \
+					((val) == 255 ? 0 : \
+							1350000 / ((val) * (div))))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#237: FILE: drivers/i2c/chips/w83781d.c:171:
+#define TEMP_TO_REG(val)		(SENSORS_LIMIT(((val / 10) < 0 ? (((val / 10) - 5) / 10) : \
+									 ((val / 10) + 5) / 10), 0, 255))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#237: FILE: drivers/i2c/chips/w83781d.c:171:
+#define TEMP_TO_REG(val)		(SENSORS_LIMIT(((val / 10) < 0 ? (((val / 10) - 5) / 10) : \
+									 ((val / 10) + 5) / 10), 0, 255))

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#238: FILE: drivers/i2c/chips/w83781d.c:172:
+									 ((val / 10) + 5) / 10), 0, 255))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space prohibited before that close parenthesis ')'
#239: FILE: drivers/i2c/chips/w83781d.c:173:
+#define TEMP_FROM_REG(val)		((((val ) > 0x80 ? (val) - 0x100 : (val)) * 10) * 10)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#239: FILE: drivers/i2c/chips/w83781d.c:173:
+#define TEMP_FROM_REG(val)		((((val ) > 0x80 ? (val) - 0x100 : (val)) * 10) * 10)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#241: FILE: drivers/i2c/chips/w83781d.c:175:
+#define TEMP_ADD_TO_REG(val)		(SENSORS_LIMIT(((((val / 10) + 2) / 5) << 7),\
+                                              0, 0xffff))

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: drivers/i2c/chips/w83781d.c:176:
+                                              0, 0xffff))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: drivers/i2c/chips/w83781d.c:176:
+                                              0, 0xffff))$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#245: FILE: drivers/i2c/chips/w83781d.c:179:
+#define AS99127_TEMP_ADD_TO_REG(val)	(SENSORS_LIMIT((((((val / 10) + 2)*4)/10) \
                                     	                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#245: FILE: drivers/i2c/chips/w83781d.c:179:
+#define AS99127_TEMP_ADD_TO_REG(val)	(SENSORS_LIMIT((((((val / 10) + 2)*4)/10) \
                                     	                                     ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#245: FILE: drivers/i2c/chips/w83781d.c:179:
+#define AS99127_TEMP_ADD_TO_REG(val)	(SENSORS_LIMIT((((((val / 10) + 2)*4)/10) \
+                                               << 7), 0, 0xffff))

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: drivers/i2c/chips/w83781d.c:180:
+                                               << 7), 0, 0xffff))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: drivers/i2c/chips/w83781d.c:180:
+                                               << 7), 0, 0xffff))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#251: FILE: drivers/i2c/chips/w83781d.c:185:
+#define PWM_TO_REG(val)			(SENSORS_LIMIT((val),0,255))
                        			                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#251: FILE: drivers/i2c/chips/w83781d.c:185:
+#define PWM_TO_REG(val)			(SENSORS_LIMIT((val),0,255))
                        			                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#264: FILE: drivers/i2c/chips/w83781d.c:198:
+	int i;
+	val = SENSORS_LIMIT(val, 1,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#266: FILE: drivers/i2c/chips/w83781d.c:200:
+			    ((type == w83781d
+			      || type == as99127f) ? 8 : 128)) >> 1;

CHECK:SPACING: No space is necessary after a cast
#272: FILE: drivers/i2c/chips/w83781d.c:206:
+	return ((u8) i);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#287: FILE: drivers/i2c/chips/w83781d.c:221:
+#define W83782D_INIT_IN_5		((((-1200) + 1491) * 100)/514)
                          		                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#288: FILE: drivers/i2c/chips/w83781d.c:222:
+#define W83782D_INIT_IN_6		((( (-500)  + 771) * 100)/314)
                          		                         ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#288: FILE: drivers/i2c/chips/w83781d.c:222:
+#define W83782D_INIT_IN_6		((( (-500)  + 771) * 100)/314)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#291: FILE: drivers/i2c/chips/w83781d.c:225:
+#define W83781D_INIT_IN_MIN(val)	(val - val * W83781D_INIT_IN_PERCENTAGE / 100)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#291: FILE: drivers/i2c/chips/w83781d.c:225:
+#define W83781D_INIT_IN_MIN(val)	(val - val * W83781D_INIT_IN_PERCENTAGE / 100)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#292: FILE: drivers/i2c/chips/w83781d.c:226:
+#define W83781D_INIT_IN_MAX(val)	(val + val * W83781D_INIT_IN_PERCENTAGE / 100)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#292: FILE: drivers/i2c/chips/w83781d.c:226:
+#define W83781D_INIT_IN_MAX(val)	(val + val * W83781D_INIT_IN_PERCENTAGE / 100)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#317: FILE: drivers/i2c/chips/w83781d.c:251:
+	(((-1200 * (100 + W83781D_INIT_IN_PERCENTAGE)) + (1491 * 100))/514)
 	                                                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#321: FILE: drivers/i2c/chips/w83781d.c:255:
+	(((-1200 * (100 - W83781D_INIT_IN_PERCENTAGE)) + (1491 * 100))/514)
 	                                                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#323: FILE: drivers/i2c/chips/w83781d.c:257:
+	((( -500 * (100 + W83781D_INIT_IN_PERCENTAGE)) +  (771 * 100))/314)
 	                                                              ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#323: FILE: drivers/i2c/chips/w83781d.c:257:
+	((( -500 * (100 + W83781D_INIT_IN_PERCENTAGE)) +  (771 * 100))/314)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#327: FILE: drivers/i2c/chips/w83781d.c:261:
+	((( -500 * (100 - W83781D_INIT_IN_PERCENTAGE)) +  (771 * 100))/314)
 	                                                              ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#327: FILE: drivers/i2c/chips/w83781d.c:261:
+	((( -500 * (100 - W83781D_INIT_IN_PERCENTAGE)) +  (771 * 100))/314)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#342: FILE: drivers/i2c/chips/w83781d.c:276:
+/* There are some complications in a module like this. First off, W83781D chips
+   may be both present on the SMBus and the ISA bus, and we have to handle

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#350: FILE: drivers/i2c/chips/w83781d.c:284:
+   for this yet. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#353: FILE: drivers/i2c/chips/w83781d.c:287:
+/* This module may seem overly long and complicated. In fact, it is not so
+   bad. Quite a lot of bookkeeping is done. A real driver can often cut

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#354: FILE: drivers/i2c/chips/w83781d.c:288:
+   some corners. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#357: FILE: drivers/i2c/chips/w83781d.c:291:
+/* For each registered W83781D, we need to keep some data in memory. That
+   data is pointed to by w83781d_list[NR]->data. The structure itself is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#359: FILE: drivers/i2c/chips/w83781d.c:293:
+   allocated. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#390: FILE: drivers/i2c/chips/w83781d.c:324:
+	u16 sens[3];		/* 782D/783S only.
+				   1 = pentium diode; 2 = 3904 diode;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: drivers/i2c/chips/w83781d.c:326:
+^I^I^I^I   Default = 3435. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#393: FILE: drivers/i2c/chips/w83781d.c:327:
+				   Other Betas unimplemented */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#426: FILE: drivers/i2c/chips/w83781d.c:360:
+#define show_in_reg(reg) \
+static ssize_t show_##reg (struct device *dev, char *buf, int nr) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct w83781d_data *data = i2c_get_clientdata(client); \
+	 \
+	w83781d_update_client(client); \
+	 \
+	return sprintf(buf,"%ld\n", (long)IN_FROM_REG(data->reg[nr])); \
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#427: FILE: drivers/i2c/chips/w83781d.c:361:
+static ssize_t show_##reg (struct device *dev, char *buf, int nr) \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#434: FILE: drivers/i2c/chips/w83781d.c:368:
+	return sprintf(buf,"%ld\n", (long)IN_FROM_REG(data->reg[nr])); \
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#436: FILE: drivers/i2c/chips/w83781d.c:370:
+}
+show_in_reg(in);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#441: FILE: drivers/i2c/chips/w83781d.c:375:
+static ssize_t store_in_##reg (struct device *dev, const char *buf, size_t count, int nr) \

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#447: FILE: drivers/i2c/chips/w83781d.c:381:
+	val = simple_strtoul(buf, NULL, 10); \

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#453: FILE: drivers/i2c/chips/w83781d.c:387:
+}
+store_in_reg(MIN, min);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#458: FILE: drivers/i2c/chips/w83781d.c:392:
+show_regs_in_##offset (struct device *dev, char *buf) \

ERROR:CODE_INDENT: code indent should use tabs where possible
#460: FILE: drivers/i2c/chips/w83781d.c:394:
+        return show_in(dev, buf, 0x##offset); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: drivers/i2c/chips/w83781d.c:394:
+        return show_in(dev, buf, 0x##offset); \$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#462: FILE: drivers/i2c/chips/w83781d.c:396:
+static DEVICE_ATTR(in_input##offset, S_IRUGO, show_regs_in_##offset, NULL)

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#465: FILE: drivers/i2c/chips/w83781d.c:399:
+static ssize_t show_regs_in_##reg##offset (struct device *dev, char *buf) \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#467: FILE: drivers/i2c/chips/w83781d.c:401:
+	return show_in_##reg (dev, buf, 0x##offset); \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#469: FILE: drivers/i2c/chips/w83781d.c:403:
+static ssize_t store_regs_in_##reg##offset (struct device *dev, const char *buf, size_t count) \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#471: FILE: drivers/i2c/chips/w83781d.c:405:
+	return store_in_##reg (dev, buf, count, 0x##offset); \

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#473: FILE: drivers/i2c/chips/w83781d.c:407:
+static DEVICE_ATTR(in_##reg##offset, S_IRUGO| S_IWUSR, show_regs_in_##reg##offset, store_regs_in_##reg##offset)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxW)
#473: FILE: drivers/i2c/chips/w83781d.c:407:
+static DEVICE_ATTR(in_##reg##offset, S_IRUGO| S_IWUSR, show_regs_in_##reg##offset, store_regs_in_##reg##offset)
                                             ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO| S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#473: FILE: drivers/i2c/chips/w83781d.c:407:
+static DEVICE_ATTR(in_##reg##offset, S_IRUGO| S_IWUSR, show_regs_in_##reg##offset, store_regs_in_##reg##offset)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#475: FILE: drivers/i2c/chips/w83781d.c:409:
+#define sysfs_in_offsets(offset) \
+sysfs_in_offset(offset); \
+sysfs_in_reg_offset(min, offset); \
+sysfs_in_reg_offset(max, offset);

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#475: FILE: drivers/i2c/chips/w83781d.c:409:
+#define sysfs_in_offsets(offset) \
+sysfs_in_offset(offset); \
+sysfs_in_reg_offset(min, offset); \
+sysfs_in_reg_offset(max, offset);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#475: FILE: drivers/i2c/chips/w83781d.c:409:
+#define sysfs_in_offsets(offset) \
+sysfs_in_offset(offset); \
+sysfs_in_reg_offset(min, offset); \
+sysfs_in_reg_offset(max, offset);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#490: FILE: drivers/i2c/chips/w83781d.c:424:
+#define device_create_file_in(client, offset) \
+device_create_file(&client->dev, &dev_attr_in_input##offset); \
+device_create_file(&client->dev, &dev_attr_in_min##offset); \
+device_create_file(&client->dev, &dev_attr_in_max##offset);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'client' - possible side-effects?
#490: FILE: drivers/i2c/chips/w83781d.c:424:
+#define device_create_file_in(client, offset) \
+device_create_file(&client->dev, &dev_attr_in_input##offset); \
+device_create_file(&client->dev, &dev_attr_in_min##offset); \
+device_create_file(&client->dev, &dev_attr_in_max##offset);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#490: FILE: drivers/i2c/chips/w83781d.c:424:
+#define device_create_file_in(client, offset) \
+device_create_file(&client->dev, &dev_attr_in_input##offset); \
+device_create_file(&client->dev, &dev_attr_in_min##offset); \
+device_create_file(&client->dev, &dev_attr_in_max##offset);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#490: FILE: drivers/i2c/chips/w83781d.c:424:
+#define device_create_file_in(client, offset) \
+device_create_file(&client->dev, &dev_attr_in_input##offset); \
+device_create_file(&client->dev, &dev_attr_in_min##offset); \
+device_create_file(&client->dev, &dev_attr_in_max##offset);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#495: FILE: drivers/i2c/chips/w83781d.c:429:
+#define show_fan_reg(reg) \
+static ssize_t show_##reg (struct device *dev, char *buf, int nr) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct w83781d_data *data = i2c_get_clientdata(client); \
+	 \
+	w83781d_update_client(client); \
+	 \
+	return sprintf(buf,"%ld\n", \
+		FAN_FROM_REG(data->reg[nr-1], (long)DIV_FROM_REG(data->fan_div[nr-1]))); \
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#496: FILE: drivers/i2c/chips/w83781d.c:430:
+static ssize_t show_##reg (struct device *dev, char *buf, int nr) \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#503: FILE: drivers/i2c/chips/w83781d.c:437:
+	return sprintf(buf,"%ld\n", \
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#504: FILE: drivers/i2c/chips/w83781d.c:438:
+		FAN_FROM_REG(data->reg[nr-1], (long)DIV_FROM_REG(data->fan_div[nr-1]))); \
 		                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#504: FILE: drivers/i2c/chips/w83781d.c:438:
+		FAN_FROM_REG(data->reg[nr-1], (long)DIV_FROM_REG(data->fan_div[nr-1]))); \
 		                                                                 ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#506: FILE: drivers/i2c/chips/w83781d.c:440:
+}
+show_fan_reg(fan);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#516: FILE: drivers/i2c/chips/w83781d.c:450:
+	val = simple_strtoul(buf, NULL, 10);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#526: FILE: drivers/i2c/chips/w83781d.c:460:
+static ssize_t show_regs_fan_##offset (struct device *dev, char *buf) \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#530: FILE: drivers/i2c/chips/w83781d.c:464:
+static DEVICE_ATTR(fan_input##offset, S_IRUGO, show_regs_fan_##offset, NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#533: FILE: drivers/i2c/chips/w83781d.c:467:
+static ssize_t show_regs_fan_min##offset (struct device *dev, char *buf) \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#537: FILE: drivers/i2c/chips/w83781d.c:471:
+static ssize_t store_regs_fan_min##offset (struct device *dev, const char *buf, size_t count) \

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#541: FILE: drivers/i2c/chips/w83781d.c:475:
+static DEVICE_ATTR(fan_min##offset, S_IRUGO | S_IWUSR, show_regs_fan_min##offset, store_regs_fan_min##offset)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#541: FILE: drivers/i2c/chips/w83781d.c:475:
+static DEVICE_ATTR(fan_min##offset, S_IRUGO | S_IWUSR, show_regs_fan_min##offset, store_regs_fan_min##offset)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#550: FILE: drivers/i2c/chips/w83781d.c:484:
+#define device_create_file_fan(client, offset) \
+device_create_file(&client->dev, &dev_attr_fan_input##offset); \
+device_create_file(&client->dev, &dev_attr_fan_min##offset); \
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'client' - possible side-effects?
#550: FILE: drivers/i2c/chips/w83781d.c:484:
+#define device_create_file_fan(client, offset) \
+device_create_file(&client->dev, &dev_attr_fan_input##offset); \
+device_create_file(&client->dev, &dev_attr_fan_min##offset); \
+

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#550: FILE: drivers/i2c/chips/w83781d.c:484:
+#define device_create_file_fan(client, offset) \
+device_create_file(&client->dev, &dev_attr_fan_input##offset); \
+device_create_file(&client->dev, &dev_attr_fan_min##offset); \
+

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#550: FILE: drivers/i2c/chips/w83781d.c:484:
+#define device_create_file_fan(client, offset) \
+device_create_file(&client->dev, &dev_attr_fan_input##offset); \
+device_create_file(&client->dev, &dev_attr_fan_min##offset); \
+

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#554: FILE: drivers/i2c/chips/w83781d.c:488:
+#define show_temp_reg(reg) \
+static ssize_t show_##reg (struct device *dev, char *buf, int nr) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct w83781d_data *data = i2c_get_clientdata(client); \
+	 \
+	w83781d_update_client(client); \
+	 \
+	if (nr >= 2) {	/* TEMP2 and TEMP3 */ \
+		if (data->type == as99127f) { \
+			return sprintf(buf,"%ld\n", \
+				(long)AS99127_TEMP_ADD_FROM_REG(data->reg##_add[nr-2])); \
+		} else { \
+			return sprintf(buf,"%ld\n", \
+				(long)TEMP_ADD_FROM_REG(data->reg##_add[nr-2])); \
+		} \
+	} else {	/* TEMP1 */ \
+		return sprintf(buf,"%ld\n", (long)TEMP_FROM_REG(data->reg)); \
+	} \
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#555: FILE: drivers/i2c/chips/w83781d.c:489:
+static ssize_t show_##reg (struct device *dev, char *buf, int nr) \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#564: FILE: drivers/i2c/chips/w83781d.c:498:
+			return sprintf(buf,"%ld\n", \
 			                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#565: FILE: drivers/i2c/chips/w83781d.c:499:
+				(long)AS99127_TEMP_ADD_FROM_REG(data->reg##_add[nr-2])); \
 				                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#567: FILE: drivers/i2c/chips/w83781d.c:501:
+			return sprintf(buf,"%ld\n", \
 			                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#568: FILE: drivers/i2c/chips/w83781d.c:502:
+				(long)TEMP_ADD_FROM_REG(data->reg##_add[nr-2])); \
 				                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#571: FILE: drivers/i2c/chips/w83781d.c:505:
+		return sprintf(buf,"%ld\n", (long)TEMP_FROM_REG(data->reg)); \
 		                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#574: FILE: drivers/i2c/chips/w83781d.c:508:
+}
+show_temp_reg(temp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#579: FILE: drivers/i2c/chips/w83781d.c:513:
+static ssize_t store_temp_##reg (struct device *dev, const char *buf, size_t count, int nr) \

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#585: FILE: drivers/i2c/chips/w83781d.c:519:
+	val = simple_strtoul(buf, NULL, 10); \

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#589: FILE: drivers/i2c/chips/w83781d.c:523:
+			data->temp_##reg##_add[nr-2] = AS99127_TEMP_ADD_TO_REG(val); \
 			                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#591: FILE: drivers/i2c/chips/w83781d.c:525:
+			data->temp_##reg##_add[nr-2] = TEMP_ADD_TO_REG(val); \
 			                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#594: FILE: drivers/i2c/chips/w83781d.c:528:
+				data->temp_##reg##_add[nr-2]); \
 				                         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#603: FILE: drivers/i2c/chips/w83781d.c:537:
+}
+store_temp_reg(OVER, min);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#608: FILE: drivers/i2c/chips/w83781d.c:542:
+show_regs_temp_##offset (struct device *dev, char *buf) \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#612: FILE: drivers/i2c/chips/w83781d.c:546:
+static DEVICE_ATTR(temp_input##offset, S_IRUGO, show_regs_temp_##offset, NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#615: FILE: drivers/i2c/chips/w83781d.c:549:
+static ssize_t show_regs_temp_##reg##offset (struct device *dev, char *buf) \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#617: FILE: drivers/i2c/chips/w83781d.c:551:
+	return show_temp_##reg (dev, buf, 0x##offset); \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#619: FILE: drivers/i2c/chips/w83781d.c:553:
+static ssize_t store_regs_temp_##reg##offset (struct device *dev, const char *buf, size_t count) \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#621: FILE: drivers/i2c/chips/w83781d.c:555:
+	return store_temp_##reg (dev, buf, count, 0x##offset); \

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#623: FILE: drivers/i2c/chips/w83781d.c:557:
+static DEVICE_ATTR(temp_##reg##offset, S_IRUGO| S_IWUSR, show_regs_temp_##reg##offset, store_regs_temp_##reg##offset)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxW)
#623: FILE: drivers/i2c/chips/w83781d.c:557:
+static DEVICE_ATTR(temp_##reg##offset, S_IRUGO| S_IWUSR, show_regs_temp_##reg##offset, store_regs_temp_##reg##offset)
                                               ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO| S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#623: FILE: drivers/i2c/chips/w83781d.c:557:
+static DEVICE_ATTR(temp_##reg##offset, S_IRUGO| S_IWUSR, show_regs_temp_##reg##offset, store_regs_temp_##reg##offset)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#625: FILE: drivers/i2c/chips/w83781d.c:559:
+#define sysfs_temp_offsets(offset) \
+sysfs_temp_offset(offset); \
+sysfs_temp_reg_offset(min, offset); \
+sysfs_temp_reg_offset(max, offset);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#625: FILE: drivers/i2c/chips/w83781d.c:559:
+#define sysfs_temp_offsets(offset) \
+sysfs_temp_offset(offset); \
+sysfs_temp_reg_offset(min, offset); \
+sysfs_temp_reg_offset(max, offset);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#625: FILE: drivers/i2c/chips/w83781d.c:559:
+#define sysfs_temp_offsets(offset) \
+sysfs_temp_offset(offset); \
+sysfs_temp_reg_offset(min, offset); \
+sysfs_temp_reg_offset(max, offset);

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#634: FILE: drivers/i2c/chips/w83781d.c:568:
+#define device_create_file_temp(client, offset) \
+device_create_file(&client->dev, &dev_attr_temp_input##offset); \
+device_create_file(&client->dev, &dev_attr_temp_max##offset); \
+device_create_file(&client->dev, &dev_attr_temp_min##offset);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'client' - possible side-effects?
#634: FILE: drivers/i2c/chips/w83781d.c:568:
+#define device_create_file_temp(client, offset) \
+device_create_file(&client->dev, &dev_attr_temp_input##offset); \
+device_create_file(&client->dev, &dev_attr_temp_max##offset); \
+device_create_file(&client->dev, &dev_attr_temp_min##offset);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#634: FILE: drivers/i2c/chips/w83781d.c:568:
+#define device_create_file_temp(client, offset) \
+device_create_file(&client->dev, &dev_attr_temp_input##offset); \
+device_create_file(&client->dev, &dev_attr_temp_max##offset); \
+device_create_file(&client->dev, &dev_attr_temp_min##offset);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#634: FILE: drivers/i2c/chips/w83781d.c:568:
+#define device_create_file_temp(client, offset) \
+device_create_file(&client->dev, &dev_attr_temp_input##offset); \
+device_create_file(&client->dev, &dev_attr_temp_max##offset); \
+device_create_file(&client->dev, &dev_attr_temp_min##offset);

CHECK:SPACING: No space is necessary after a cast
#647: FILE: drivers/i2c/chips/w83781d.c:581:
+	return sprintf(buf, "%ld\n", (long) vid_from_reg(data->vid, data->vrm));

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_vid_reg' to 'vid_show'
#648: FILE: drivers/i2c/chips/w83781d.c:582:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#651: FILE: drivers/i2c/chips/w83781d.c:585:
+DEVICE_ATTR(vid, S_IRUGO, show_vid_reg, NULL)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#652: FILE: drivers/i2c/chips/w83781d.c:586:
+#define device_create_file_vid(client) \
+device_create_file(&client->dev, &dev_attr_vid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#652: FILE: drivers/i2c/chips/w83781d.c:586:
+#define device_create_file_vid(client) \
+device_create_file(&client->dev, &dev_attr_vid);

CHECK:SPACING: No space is necessary after a cast
#662: FILE: drivers/i2c/chips/w83781d.c:596:
+	return sprintf(buf, "%ld\n", (long) data->vrm);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#672: FILE: drivers/i2c/chips/w83781d.c:606:
+	val = simple_strtoul(buf, NULL, 10);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_vrm_reg' to 'vrm_show' 'store_vrm_reg' to 'vrm_store'
#676: FILE: drivers/i2c/chips/w83781d.c:610:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#679: FILE: drivers/i2c/chips/w83781d.c:613:
+DEVICE_ATTR(vrm, S_IRUGO | S_IWUSR, show_vrm_reg, store_vrm_reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#680: FILE: drivers/i2c/chips/w83781d.c:614:
+#define device_create_file_vrm(client) \
+device_create_file(&client->dev, &dev_attr_vrm);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#680: FILE: drivers/i2c/chips/w83781d.c:614:
+#define device_create_file_vrm(client) \
+device_create_file(&client->dev, &dev_attr_vrm);

CHECK:SPACING: No space is necessary after a cast
#690: FILE: drivers/i2c/chips/w83781d.c:624:
+	return sprintf(buf, "%ld\n", (long) ALARMS_FROM_REG(data->alarms));

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_alarms_reg' to 'alarms_show'
#691: FILE: drivers/i2c/chips/w83781d.c:625:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#694: FILE: drivers/i2c/chips/w83781d.c:628:
+DEVICE_ATTR(alarms, S_IRUGO, show_alarms_reg, NULL)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#695: FILE: drivers/i2c/chips/w83781d.c:629:
+#define device_create_file_alarms(client) \
+device_create_file(&client->dev, &dev_attr_alarms);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#695: FILE: drivers/i2c/chips/w83781d.c:629:
+#define device_create_file_alarms(client) \
+device_create_file(&client->dev, &dev_attr_alarms);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#698: FILE: drivers/i2c/chips/w83781d.c:632:
+static ssize_t show_beep_##reg (struct device *dev, char *buf) \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#705: FILE: drivers/i2c/chips/w83781d.c:639:
+	return sprintf(buf,"%ld\n", (long)BEEP_##REG##_FROM_REG(data->beep_##reg)); \
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#707: FILE: drivers/i2c/chips/w83781d.c:641:
+}
+show_beep_reg(ENABLE, enable);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#721: FILE: drivers/i2c/chips/w83781d.c:655:
+	val = simple_strtoul(buf, NULL, 10);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83781d'
#728: FILE: drivers/i2c/chips/w83781d.c:662:
+		if ((data->type != w83781d) && (data->type != as99127f)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != as99127f'
#728: FILE: drivers/i2c/chips/w83781d.c:662:
+		if ((data->type != w83781d) && (data->type != as99127f)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#746: FILE: drivers/i2c/chips/w83781d.c:680:
+static ssize_t show_regs_beep_##reg (struct device *dev, char *buf) \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#750: FILE: drivers/i2c/chips/w83781d.c:684:
+static ssize_t store_regs_beep_##reg (struct device *dev, const char *buf, size_t count) \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#754: FILE: drivers/i2c/chips/w83781d.c:688:
+static DEVICE_ATTR(beep_##reg, S_IRUGO | S_IWUSR, show_regs_beep_##reg, store_regs_beep_##reg)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#759: FILE: drivers/i2c/chips/w83781d.c:693:
+#define device_create_file_beep(client) \
+device_create_file(&client->dev, &dev_attr_beep_enable); \
+device_create_file(&client->dev, &dev_attr_beep_mask);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'client' - possible side-effects?
#759: FILE: drivers/i2c/chips/w83781d.c:693:
+#define device_create_file_beep(client) \
+device_create_file(&client->dev, &dev_attr_beep_enable); \
+device_create_file(&client->dev, &dev_attr_beep_mask);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#759: FILE: drivers/i2c/chips/w83781d.c:693:
+#define device_create_file_beep(client) \
+device_create_file(&client->dev, &dev_attr_beep_enable); \
+device_create_file(&client->dev, &dev_attr_beep_mask);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#759: FILE: drivers/i2c/chips/w83781d.c:693:
+#define device_create_file_beep(client) \
+device_create_file(&client->dev, &dev_attr_beep_enable); \
+device_create_file(&client->dev, &dev_attr_beep_mask);

CHECK:SPACING: No space is necessary after a cast
#773: FILE: drivers/i2c/chips/w83781d.c:707:
+		       (long) DIV_FROM_REG(data->fan_div[nr - 1]));

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#784: FILE: drivers/i2c/chips/w83781d.c:718:
+	val = simple_strtoul(buf, NULL, 10);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83781d'
#790: FILE: drivers/i2c/chips/w83781d.c:724:
+	if ((data->type != w83781d) && data->type != as99127f) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#790: FILE: drivers/i2c/chips/w83781d.c:724:
+	if ((data->type != w83781d) && data->type != as99127f) {
+		old3 = w83781d_read_value(client, W83781D_REG_VBAT);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83781d'
#798: FILE: drivers/i2c/chips/w83781d.c:732:
+		if ((data->type != w83781d) && (data->type != as99127f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != as99127f'
#798: FILE: drivers/i2c/chips/w83781d.c:732:
+		if ((data->type != w83781d) && (data->type != as99127f)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#798: FILE: drivers/i2c/chips/w83781d.c:732:
+		if ((data->type != w83781d) && (data->type != as99127f)) {
+			old3 = (old3 & 0x7f) | ((data->fan_div[2] & 0x04) << 5);
+		}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83781d'
#805: FILE: drivers/i2c/chips/w83781d.c:739:
+		if ((data->type != w83781d) && (data->type != as99127f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != as99127f'
#805: FILE: drivers/i2c/chips/w83781d.c:739:
+		if ((data->type != w83781d) && (data->type != as99127f)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#805: FILE: drivers/i2c/chips/w83781d.c:739:
+		if ((data->type != w83781d) && (data->type != as99127f)) {
+			old3 = (old3 & 0xbf) | ((data->fan_div[1] & 0x04) << 4);
+		}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83781d'
#813: FILE: drivers/i2c/chips/w83781d.c:747:
+		if ((data->type != w83781d) && (data->type != as99127f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != as99127f'
#813: FILE: drivers/i2c/chips/w83781d.c:747:
+		if ((data->type != w83781d) && (data->type != as99127f)) {

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#822: FILE: drivers/i2c/chips/w83781d.c:756:
+#define sysfs_fan_div(offset) \
+static ssize_t show_regs_fan_div_##offset (struct device *dev, char *buf) \
+{ \
+	return show_fan_div_reg(dev, buf, offset); \
+} \
+static ssize_t store_regs_fan_div_##offset (struct device *dev, const char *buf, size_t count) \
+{ \
+	return store_fan_div_reg(dev, buf, count, offset); \
+} \
+static DEVICE_ATTR(fan_div##offset, S_IRUGO | S_IWUSR, show_regs_fan_div_##offset, store_regs_fan_div_##offset)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#823: FILE: drivers/i2c/chips/w83781d.c:757:
+static ssize_t show_regs_fan_div_##offset (struct device *dev, char *buf) \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#827: FILE: drivers/i2c/chips/w83781d.c:761:
+static ssize_t store_regs_fan_div_##offset (struct device *dev, const char *buf, size_t count) \

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#831: FILE: drivers/i2c/chips/w83781d.c:765:
+static DEVICE_ATTR(fan_div##offset, S_IRUGO | S_IWUSR, show_regs_fan_div_##offset, store_regs_fan_div_##offset)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#831: FILE: drivers/i2c/chips/w83781d.c:765:
+static DEVICE_ATTR(fan_div##offset, S_IRUGO | S_IWUSR, show_regs_fan_div_##offset, store_regs_fan_div_##offset)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#837: FILE: drivers/i2c/chips/w83781d.c:771:
+#define device_create_file_fan_div(client, offset) \
+device_create_file(&client->dev, &dev_attr_fan_div##offset); \
+

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#837: FILE: drivers/i2c/chips/w83781d.c:771:
+#define device_create_file_fan_div(client, offset) \
+device_create_file(&client->dev, &dev_attr_fan_div##offset); \
+

CHECK:SPACING: No space is necessary after a cast
#849: FILE: drivers/i2c/chips/w83781d.c:783:
+	return sprintf(buf, "%ld\n", (long) PWM_FROM_REG(data->pwm[nr - 1]));

CHECK:SPACING: No space is necessary after a cast
#861: FILE: drivers/i2c/chips/w83781d.c:795:
+	return sprintf(buf, "%ld\n", (long) data->pwmenable[nr - 1]);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#871: FILE: drivers/i2c/chips/w83781d.c:805:
+	val = simple_strtoul(buf, NULL, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#886: FILE: drivers/i2c/chips/w83781d.c:820:
+	val = simple_strtoul(buf, NULL, 10);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#921: FILE: drivers/i2c/chips/w83781d.c:855:
+#define sysfs_pwm(offset) \
+static ssize_t show_regs_pwm_##offset (struct device *dev, char *buf) \
+{ \
+	return show_pwm_reg(dev, buf, offset); \
+} \
+static ssize_t store_regs_pwm_##offset (struct device *dev, const char *buf, size_t count) \
+{ \
+	return store_pwm_reg(dev, buf, count, offset); \
+} \
+static DEVICE_ATTR(pwm##offset, S_IRUGO | S_IWUSR, show_regs_pwm_##offset, store_regs_pwm_##offset)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#922: FILE: drivers/i2c/chips/w83781d.c:856:
+static ssize_t show_regs_pwm_##offset (struct device *dev, char *buf) \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#926: FILE: drivers/i2c/chips/w83781d.c:860:
+static ssize_t store_regs_pwm_##offset (struct device *dev, const char *buf, size_t count) \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#930: FILE: drivers/i2c/chips/w83781d.c:864:
+static DEVICE_ATTR(pwm##offset, S_IRUGO | S_IWUSR, show_regs_pwm_##offset, store_regs_pwm_##offset)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#932: FILE: drivers/i2c/chips/w83781d.c:866:
+#define sysfs_pwmenable(offset) \
+static ssize_t show_regs_pwmenable_##offset (struct device *dev, char *buf) \
+{ \
+	return show_pwmenable_reg(dev, buf, offset); \
+} \
+static ssize_t store_regs_pwmenable_##offset (struct device *dev, const char *buf, size_t count) \
+{ \
+	return store_pwmenable_reg(dev, buf, count, offset); \
+} \
+static DEVICE_ATTR(pwm_enable##offset, S_IRUGO | S_IWUSR, show_regs_pwmenable_##offset, store_regs_pwmenable_##offset)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#933: FILE: drivers/i2c/chips/w83781d.c:867:
+static ssize_t show_regs_pwmenable_##offset (struct device *dev, char *buf) \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#937: FILE: drivers/i2c/chips/w83781d.c:871:
+static ssize_t store_regs_pwmenable_##offset (struct device *dev, const char *buf, size_t count) \

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#941: FILE: drivers/i2c/chips/w83781d.c:875:
+static DEVICE_ATTR(pwm_enable##offset, S_IRUGO | S_IWUSR, show_regs_pwmenable_##offset, store_regs_pwmenable_##offset)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#941: FILE: drivers/i2c/chips/w83781d.c:875:
+static DEVICE_ATTR(pwm_enable##offset, S_IRUGO | S_IWUSR, show_regs_pwmenable_##offset, store_regs_pwmenable_##offset)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#949: FILE: drivers/i2c/chips/w83781d.c:883:
+#define device_create_file_pwm(client, offset) \
+device_create_file(&client->dev, &dev_attr_pwm##offset); \
+

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#949: FILE: drivers/i2c/chips/w83781d.c:883:
+#define device_create_file_pwm(client, offset) \
+device_create_file(&client->dev, &dev_attr_pwm##offset); \
+

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#952: FILE: drivers/i2c/chips/w83781d.c:886:
+#define device_create_file_pwmenable(client, offset) \
+device_create_file(&client->dev, &dev_attr_pwm_enable##offset); \
+

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#952: FILE: drivers/i2c/chips/w83781d.c:886:
+#define device_create_file_pwmenable(client, offset) \
+device_create_file(&client->dev, &dev_attr_pwm_enable##offset); \
+

CHECK:SPACING: No space is necessary after a cast
#963: FILE: drivers/i2c/chips/w83781d.c:897:
+	return sprintf(buf, "%ld\n", (long) data->sens[nr - 1]);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#973: FILE: drivers/i2c/chips/w83781d.c:907:
+	val = simple_strtoul(buf, NULL, 10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1002: FILE: drivers/i2c/chips/w83781d.c:936:
+		dev_err(&client->dev,
+		       "Invalid sensor type %ld; must be 1, 2, or %d\n",

CHECK:SPACING: No space is necessary after a cast
#1003: FILE: drivers/i2c/chips/w83781d.c:937:
+		       (long) val, W83781D_DEFAULT_BETA);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#1010: FILE: drivers/i2c/chips/w83781d.c:944:
+#define sysfs_sensor(offset) \
+static ssize_t show_regs_sensor_##offset (struct device *dev, char *buf) \
+{ \
+    return show_sensor_reg(dev, buf, offset); \
+} \
+static ssize_t store_regs_sensor_##offset (struct device *dev, const char *buf, size_t count) \
+{ \
+    return store_sensor_reg(dev, buf, count, offset); \
+} \
+static DEVICE_ATTR(sensor##offset, S_IRUGO | S_IWUSR, show_regs_sensor_##offset, store_regs_sensor_##offset)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1011: FILE: drivers/i2c/chips/w83781d.c:945:
+static ssize_t show_regs_sensor_##offset (struct device *dev, char *buf) \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1013: FILE: drivers/i2c/chips/w83781d.c:947:
+    return show_sensor_reg(dev, buf, offset); \$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1015: FILE: drivers/i2c/chips/w83781d.c:949:
+static ssize_t store_regs_sensor_##offset (struct device *dev, const char *buf, size_t count) \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1017: FILE: drivers/i2c/chips/w83781d.c:951:
+    return store_sensor_reg(dev, buf, count, offset); \$

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1019: FILE: drivers/i2c/chips/w83781d.c:953:
+static DEVICE_ATTR(sensor##offset, S_IRUGO | S_IWUSR, show_regs_sensor_##offset, store_regs_sensor_##offset)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1019: FILE: drivers/i2c/chips/w83781d.c:953:
+static DEVICE_ATTR(sensor##offset, S_IRUGO | S_IWUSR, show_regs_sensor_##offset, store_regs_sensor_##offset)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#1025: FILE: drivers/i2c/chips/w83781d.c:959:
+#define device_create_file_sensor(client, offset) \
+device_create_file(&client->dev, &dev_attr_sensor##offset); \
+

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1025: FILE: drivers/i2c/chips/w83781d.c:959:
+#define device_create_file_sensor(client, offset) \
+device_create_file(&client->dev, &dev_attr_sensor##offset); \
+

CHECK:SPACING: No space is necessary after a cast
#1040: FILE: drivers/i2c/chips/w83781d.c:974:
+			j += sprintf(buf, " %ld", (long) data->rt[nr - 1][i]);

CHECK:SPACING: No space is necessary after a cast
#1042: FILE: drivers/i2c/chips/w83781d.c:976:
+			j += sprintf(buf, "%ld", (long) data->rt[nr - 1][i]);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1057: FILE: drivers/i2c/chips/w83781d.c:991:
+		val = simple_strtoul(buf + count, NULL, 10);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#1069: FILE: drivers/i2c/chips/w83781d.c:1003:
+#define sysfs_rt(offset) \
+static ssize_t show_regs_rt_##offset (struct device *dev, char *buf) \
+{ \
+	return show_rt_reg(dev, buf, offset); \
+} \
+static ssize_t store_regs_rt_##offset (struct device *dev, const char *buf, size_t count) \
+{ \
+    return store_rt_reg(dev, buf, count, offset); \
+} \
+static DEVICE_ATTR(rt##offset, S_IRUGO | S_IWUSR, show_regs_rt_##offset, store_regs_rt_##offset)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1070: FILE: drivers/i2c/chips/w83781d.c:1004:
+static ssize_t show_regs_rt_##offset (struct device *dev, char *buf) \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1074: FILE: drivers/i2c/chips/w83781d.c:1008:
+static ssize_t store_regs_rt_##offset (struct device *dev, const char *buf, size_t count) \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1076: FILE: drivers/i2c/chips/w83781d.c:1010:
+    return store_rt_reg(dev, buf, count, offset); \$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1078: FILE: drivers/i2c/chips/w83781d.c:1012:
+static DEVICE_ATTR(rt##offset, S_IRUGO | S_IWUSR, show_regs_rt_##offset, store_regs_rt_##offset)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#1084: FILE: drivers/i2c/chips/w83781d.c:1018:
+#define device_create_file_rt(client, offset) \
+device_create_file(&client->dev, &dev_attr_rt##offset); \
+

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1084: FILE: drivers/i2c/chips/w83781d.c:1018:
+#define device_create_file_rt(client, offset) \
+device_create_file(&client->dev, &dev_attr_rt##offset); \
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1090: FILE: drivers/i2c/chips/w83781d.c:1024:
+/* This function is called when:
+     * w83781d_driver is inserted (when this module is loaded), for each

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1092: FILE: drivers/i2c/chips/w83781d.c:1026:
+     * when a new adapter is inserted (and w83781d_driver is still present) */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1113: FILE: drivers/i2c/chips/w83781d.c:1047:
+	if (!is_isa
+	    && !i2c_check_functionality(adapter, I2C_FUNC_SMBUS_BYTE_DATA))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1123: FILE: drivers/i2c/chips/w83781d.c:1057:
+	/* Probe whether there is anything available on this address. Already
+	   done for SMBus clients */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1123: FILE: drivers/i2c/chips/w83781d.c:1057:
+	   done for SMBus clients */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1126: FILE: drivers/i2c/chips/w83781d.c:1060:
+		if (is_isa) {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1129: FILE: drivers/i2c/chips/w83781d.c:1063:
+			/* We need the timeouts for at least some LM78-like chips. But only
+			   if we read 'undefined' registers. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1129: FILE: drivers/i2c/chips/w83781d.c:1063:
+			   if we read 'undefined' registers. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1150: FILE: drivers/i2c/chips/w83781d.c:1084:
+	/* OK. For now, we presume we have a valid client. We now create the
+	   client structure, even though we cannot fill it completely yet.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1151: FILE: drivers/i2c/chips/w83781d.c:1085:
+	   But it allows us to access w83781d_{read,write}_value. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1153: FILE: drivers/i2c/chips/w83781d.c:1087:
+	if (!(new_client = kmalloc(sizeof (struct i2c_client) +

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1153: FILE: drivers/i2c/chips/w83781d.c:1087:
+	if (!(new_client = kmalloc(sizeof (struct i2c_client) +

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_client)...) over kmalloc(sizeof (struct i2c_client)...)
#1153: FILE: drivers/i2c/chips/w83781d.c:1087:
+	if (!(new_client = kmalloc(sizeof (struct i2c_client) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1154: FILE: drivers/i2c/chips/w83781d.c:1088:
+				   sizeof (struct w83781d_data), GFP_KERNEL))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1159: FILE: drivers/i2c/chips/w83781d.c:1093:
+	memset(new_client, 0x00, sizeof (struct i2c_client) +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1160: FILE: drivers/i2c/chips/w83781d.c:1094:
+	       sizeof (struct w83781d_data));

CHECK:SPACING: No space is necessary after a cast
#1162: FILE: drivers/i2c/chips/w83781d.c:1096:
+	data = (struct w83781d_data *) (new_client + 1);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1173: FILE: drivers/i2c/chips/w83781d.c:1107:
+	/* The w8378?d may be stuck in some other bank than bank 0. This may
+	   make reading other information impossible. Specify a force=... or

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1175: FILE: drivers/i2c/chips/w83781d.c:1109:
+	   bank. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val2 != 0xa3'
#1182: FILE: drivers/i2c/chips/w83781d.c:1116:
+		if ((!(val1 & 0x07)) &&
+		    (((!(val1 & 0x80)) && (val2 != 0xa3) && (val2 != 0xc3)
+		      && (val2 != 0x94))
+		     || ((val1 & 0x80) && (val2 != 0x5c) && (val2 != 0x12)
+			 && (val2 != 0x06))))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val2 != 0xc3'
#1182: FILE: drivers/i2c/chips/w83781d.c:1116:
+		if ((!(val1 & 0x07)) &&
+		    (((!(val1 & 0x80)) && (val2 != 0xa3) && (val2 != 0xc3)
+		      && (val2 != 0x94))
+		     || ((val1 & 0x80) && (val2 != 0x5c) && (val2 != 0x12)
+			 && (val2 != 0x06))))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val2 != 0x94'
#1182: FILE: drivers/i2c/chips/w83781d.c:1116:
+		if ((!(val1 & 0x07)) &&
+		    (((!(val1 & 0x80)) && (val2 != 0xa3) && (val2 != 0xc3)
+		      && (val2 != 0x94))
+		     || ((val1 & 0x80) && (val2 != 0x5c) && (val2 != 0x12)
+			 && (val2 != 0x06))))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val2 != 0x5c'
#1182: FILE: drivers/i2c/chips/w83781d.c:1116:
+		if ((!(val1 & 0x07)) &&
+		    (((!(val1 & 0x80)) && (val2 != 0xa3) && (val2 != 0xc3)
+		      && (val2 != 0x94))
+		     || ((val1 & 0x80) && (val2 != 0x5c) && (val2 != 0x12)
+			 && (val2 != 0x06))))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val2 != 0x12'
#1182: FILE: drivers/i2c/chips/w83781d.c:1116:
+		if ((!(val1 & 0x07)) &&
+		    (((!(val1 & 0x80)) && (val2 != 0xa3) && (val2 != 0xc3)
+		      && (val2 != 0x94))
+		     || ((val1 & 0x80) && (val2 != 0x5c) && (val2 != 0x12)
+			 && (val2 != 0x06))))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val2 != 0x06'
#1182: FILE: drivers/i2c/chips/w83781d.c:1116:
+		if ((!(val1 & 0x07)) &&
+		    (((!(val1 & 0x80)) && (val2 != 0xa3) && (val2 != 0xc3)
+		      && (val2 != 0x94))
+		     || ((val1 & 0x80) && (val2 != 0x5c) && (val2 != 0x12)
+			 && (val2 != 0x06))))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1184: FILE: drivers/i2c/chips/w83781d.c:1118:
+		    (((!(val1 & 0x80)) && (val2 != 0xa3) && (val2 != 0xc3)
+		      && (val2 != 0x94))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1185: FILE: drivers/i2c/chips/w83781d.c:1119:
+		      && (val2 != 0x94))
+		     || ((val1 & 0x80) && (val2 != 0x5c) && (val2 != 0x12)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1186: FILE: drivers/i2c/chips/w83781d.c:1120:
+		     || ((val1 & 0x80) && (val2 != 0x5c) && (val2 != 0x12)
+			 && (val2 != 0x06))))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!is_isa'
#1189: FILE: drivers/i2c/chips/w83781d.c:1123:
+		if ((!is_isa) && (((!(val1 & 0x80)) && (val2 == 0xa3)) ||
+				  ((val1 & 0x80) && (val2 == 0x5c)))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val2 == 0xa3'
#1189: FILE: drivers/i2c/chips/w83781d.c:1123:
+		if ((!is_isa) && (((!(val1 & 0x80)) && (val2 == 0xa3)) ||
+				  ((val1 & 0x80) && (val2 == 0x5c)))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val2 == 0x5c'
#1189: FILE: drivers/i2c/chips/w83781d.c:1123:
+		if ((!is_isa) && (((!(val1 & 0x80)) && (val2 == 0xa3)) ||
+				  ((val1 & 0x80) && (val2 == 0x5c)))) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1198: FILE: drivers/i2c/chips/w83781d.c:1132:
+	/* We have either had a force parameter, or we have already detected the
+	   Winbond. Put it now into bank 0 and Vendor ID High Byte */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1198: FILE: drivers/i2c/chips/w83781d.c:1132:
+	   Winbond. Put it now into bank 0 and Vendor ID High Byte */

CHECK:BRACES: braces {} should be used on all arms of this statement
#1217: FILE: drivers/i2c/chips/w83781d.c:1151:
+		if (val1 == 0x10 && vendid == winbond)
[...]
+		else if (val1 == 0x30 && vendid == winbond)
[...]
+		else if (val1 == 0x40 && vendid == winbond && !is_isa)
[...]
+		else if (val1 == 0x20 && vendid == winbond)
[...]
+		else if (val1 == 0x30 && vendid == asus && !is_isa)
[...]
+		else if (val1 == 0x60 && vendid == winbond && is_isa)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1229: FILE: drivers/i2c/chips/w83781d.c:1163:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1232: FILE: drivers/i2c/chips/w83781d.c:1166:
+				dev_warn(&new_client->dev,
+				       "Ignoring 'force' parameter for unknown chip at"

WARNING:SPLIT_STRING: quoted string split across lines
#1233: FILE: drivers/i2c/chips/w83781d.c:1167:
+				       "Ignoring 'force' parameter for unknown chip at"
+				       "adapter %d, address 0x%02x\n",

WARNING:MISSING_SPACE: break quoted strings at a space character
#1233: FILE: drivers/i2c/chips/w83781d.c:1167:
+				       "Ignoring 'force' parameter for unknown chip at"
+				       "adapter %d, address 0x%02x\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1274: FILE: drivers/i2c/chips/w83781d.c:1208:
+	if ((err = i2c_attach_client(new_client)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1279: FILE: drivers/i2c/chips/w83781d.c:1213:
+		if (!(data->lm75 = kmalloc(2 * sizeof (struct i2c_client),

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1279: FILE: drivers/i2c/chips/w83781d.c:1213:
+		if (!(data->lm75 = kmalloc(2 * sizeof (struct i2c_client),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1285: FILE: drivers/i2c/chips/w83781d.c:1219:
+		memset(data->lm75, 0x00, 2 * sizeof (struct i2c_client));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1293: FILE: drivers/i2c/chips/w83781d.c:1227:
+					dev_err(&new_client->dev,
+					       "Invalid subclient address %d; must be 0x48-0x4f\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1319: FILE: drivers/i2c/chips/w83781d.c:1253:
+				dev_err(&new_client->dev,
+				       "Duplicate addresses 0x%x for subclients.\n",

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#1336: FILE: drivers/i2c/chips/w83781d.c:1270:
+			i2c_set_clientdata(&data->lm75[i], NULL);	/* store all data in w83781d */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1416: FILE: drivers/i2c/chips/w83781d.c:1350:
+/* OK, this is not exactly good programming practice, usually. But it is
+   very code-efficient in this case. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1416: FILE: drivers/i2c/chips/w83781d.c:1350:
+   very code-efficient in this case. */

WARNING:INDENTED_LABEL: labels should not be indented
#1418: FILE: drivers/i2c/chips/w83781d.c:1352:
+      ERROR5:

WARNING:INDENTED_LABEL: labels should not be indented
#1425: FILE: drivers/i2c/chips/w83781d.c:1359:
+      ERROR4:

WARNING:INDENTED_LABEL: labels should not be indented
#1427: FILE: drivers/i2c/chips/w83781d.c:1361:
+      ERROR3:

WARNING:INDENTED_LABEL: labels should not be indented
#1430: FILE: drivers/i2c/chips/w83781d.c:1364:
+      ERROR1:

WARNING:INDENTED_LABEL: labels should not be indented
#1432: FILE: drivers/i2c/chips/w83781d.c:1366:
+      ERROR0:

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1442: FILE: drivers/i2c/chips/w83781d.c:1376:
+	if ((err = i2c_detach_client(client))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1444: FILE: drivers/i2c/chips/w83781d.c:1378:
+		dev_err(&client->dev,
+		       "Client deregistration failed, client not detached.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1462: FILE: drivers/i2c/chips/w83781d.c:1396:
+   bank switches. ISA access must always be locked explicitly! $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1462: FILE: drivers/i2c/chips/w83781d.c:1396:
+/* The SMBus locks itself, usually, but nothing may access the Winbond between
+   bank switches. ISA access must always be locked explicitly! 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1464: FILE: drivers/i2c/chips/w83781d.c:1398:
+   would slow down the W83781D access and should not be necessary. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1466: FILE: drivers/i2c/chips/w83781d.c:1400:
+   nowhere else be necessary! */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1477: FILE: drivers/i2c/chips/w83781d.c:1411:
+		word_sized = (((reg & 0xff00) == 0x100)
+			      || ((reg & 0xff00) == 0x200))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1478: FILE: drivers/i2c/chips/w83781d.c:1412:
+			      || ((reg & 0xff00) == 0x200))
+		    && (((reg & 0x00ff) == 0x50)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1479: FILE: drivers/i2c/chips/w83781d.c:1413:
+		    && (((reg & 0x00ff) == 0x50)
+			|| ((reg & 0x00ff) == 0x53)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1480: FILE: drivers/i2c/chips/w83781d.c:1414:
+			|| ((reg & 0x00ff) == 0x53)
+			|| ((reg & 0x00ff) == 0x55));

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1549: FILE: drivers/i2c/chips/w83781d.c:1483:
+		word_sized = (((reg & 0xff00) == 0x100)
+			      || ((reg & 0xff00) == 0x200))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1550: FILE: drivers/i2c/chips/w83781d.c:1484:
+			      || ((reg & 0xff00) == 0x200))
+		    && (((reg & 0x00ff) == 0x53)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1551: FILE: drivers/i2c/chips/w83781d.c:1485:
+		    && (((reg & 0x00ff) == 0x53)
+			|| ((reg & 0x00ff) == 0x55));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1615: FILE: drivers/i2c/chips/w83781d.c:1549:
+	if (init && type != as99127f) {	/* this resets registers we don't have
+					   documentation for on the as99127f */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1615: FILE: drivers/i2c/chips/w83781d.c:1549:
+					   documentation for on the as99127f */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1620: FILE: drivers/i2c/chips/w83781d.c:1554:
+		/* Reset all except Watchdog values and last conversion values
+		   This sets fan-divs to 2, among others */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1620: FILE: drivers/i2c/chips/w83781d.c:1554:
+		   This sets fan-divs to 2, among others */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1623: FILE: drivers/i2c/chips/w83781d.c:1557:
+		/* Restore the registers and disable power-on abnormal beep.
+		   This saves FAN 1/2/3 input/output values set by BIOS. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1623: FILE: drivers/i2c/chips/w83781d.c:1557:
+		   This saves FAN 1/2/3 input/output values set by BIOS. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1627: FILE: drivers/i2c/chips/w83781d.c:1561:
+		/* Disable master beep-enable (reset turns it on).
+		   Individual beep_mask should be reset to off but for some reason

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1628: FILE: drivers/i2c/chips/w83781d.c:1562:
+		   disabling this bit helps some people not get beeped */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type != w83781d'
#1641: FILE: drivers/i2c/chips/w83781d.c:1575:
+	if ((type != w83781d) && (type != as99127f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type != as99127f'
#1641: FILE: drivers/i2c/chips/w83781d.c:1575:
+	if ((type != w83781d) && (type != as99127f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == 2'
#1654: FILE: drivers/i2c/chips/w83781d.c:1588:
+			if ((type == w83783s || type == w83697hf) && (i == 2))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1660: FILE: drivers/i2c/chips/w83781d.c:1594:
+/*
+   Fill up the RT Tables.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1670: FILE: drivers/i2c/chips/w83781d.c:1604:
+/*
+    Auto-indexing doesn't seem to work...

WARNING:LINE_SPACING: Missing a blank line after declarations
#1675: FILE: drivers/i2c/chips/w83781d.c:1609:
+			int j;
+			for (j = 0; j < 32; j++) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type == w83782d'
#1732: FILE: drivers/i2c/chips/w83781d.c:1666:
+		if ((type == w83782d) || (type == w83627hf) ||
+		    (type == w83697hf)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type == w83627hf'
#1732: FILE: drivers/i2c/chips/w83781d.c:1666:
+		if ((type == w83782d) || (type == w83627hf) ||
+		    (type == w83697hf)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type == w83697hf'
#1732: FILE: drivers/i2c/chips/w83781d.c:1666:
+		if ((type == w83782d) || (type == w83627hf) ||
+		    (type == w83697hf)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1800: FILE: drivers/i2c/chips/w83781d.c:1734:
+			/* enable comparator mode for temp2 and temp3 so
+			   alarm indication will work correctly */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1800: FILE: drivers/i2c/chips/w83781d.c:1734:
+			   alarm indication will work correctly */

CHECK:SPACING: No space is necessary after a cast
#1823: FILE: drivers/i2c/chips/w83781d.c:1757:
+	    (jiffies - data->last_updated, (unsigned long) (HZ + HZ / 2))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1824: FILE: drivers/i2c/chips/w83781d.c:1758:
+	    (jiffies - data->last_updated, (unsigned long) (HZ + HZ / 2))
+	    || time_before(jiffies, data->last_updated) || !data->valid) {

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_DEBUG
#1825: FILE: drivers/i2c/chips/w83781d.c:1759:
+		pr_debug(KERN_DEBUG "Starting device update\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == 1'
#1828: FILE: drivers/i2c/chips/w83781d.c:1762:
+			if ((data->type == w83783s || data->type == w83697hf)
+			    && (i == 1))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1829: FILE: drivers/i2c/chips/w83781d.c:1763:
+			if ((data->type == w83783s || data->type == w83697hf)
+			    && (i == 1))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83782d'
#1837: FILE: drivers/i2c/chips/w83781d.c:1771:
+			if ((data->type != w83782d) && (data->type != w83697hf)
+			    && (data->type != w83627hf) && (i == 6))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83697hf'
#1837: FILE: drivers/i2c/chips/w83781d.c:1771:
+			if ((data->type != w83782d) && (data->type != w83697hf)
+			    && (data->type != w83627hf) && (i == 6))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83627hf'
#1837: FILE: drivers/i2c/chips/w83781d.c:1771:
+			if ((data->type != w83782d) && (data->type != w83697hf)
+			    && (data->type != w83627hf) && (i == 6))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == 6'
#1837: FILE: drivers/i2c/chips/w83781d.c:1771:
+			if ((data->type != w83782d) && (data->type != w83697hf)
+			    && (data->type != w83627hf) && (i == 6))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1838: FILE: drivers/i2c/chips/w83781d.c:1772:
+			if ((data->type != w83782d) && (data->type != w83697hf)
+			    && (data->type != w83627hf) && (i == 6))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type == w83783s'
#1852: FILE: drivers/i2c/chips/w83781d.c:1786:
+				if (((data->type == w83783s)
+				     || (data->type == w83627hf)
+				     || (data->type == as99127f)
+				     || (data->type == w83697hf)
+				     || ((data->type == w83782d)
+					 && i2c_is_isa_client(client)))
+				    && i == 2)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type == w83627hf'
#1852: FILE: drivers/i2c/chips/w83781d.c:1786:
+				if (((data->type == w83783s)
+				     || (data->type == w83627hf)
+				     || (data->type == as99127f)
+				     || (data->type == w83697hf)
+				     || ((data->type == w83782d)
+					 && i2c_is_isa_client(client)))
+				    && i == 2)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type == as99127f'
#1852: FILE: drivers/i2c/chips/w83781d.c:1786:
+				if (((data->type == w83783s)
+				     || (data->type == w83627hf)
+				     || (data->type == as99127f)
+				     || (data->type == w83697hf)
+				     || ((data->type == w83782d)
+					 && i2c_is_isa_client(client)))
+				    && i == 2)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type == w83697hf'
#1852: FILE: drivers/i2c/chips/w83781d.c:1786:
+				if (((data->type == w83783s)
+				     || (data->type == w83627hf)
+				     || (data->type == as99127f)
+				     || (data->type == w83697hf)
+				     || ((data->type == w83782d)
+					 && i2c_is_isa_client(client)))
+				    && i == 2)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type == w83782d'
#1852: FILE: drivers/i2c/chips/w83781d.c:1786:
+				if (((data->type == w83783s)
+				     || (data->type == w83627hf)
+				     || (data->type == as99127f)
+				     || (data->type == w83697hf)
+				     || ((data->type == w83782d)
+					 && i2c_is_isa_client(client)))
+				    && i == 2)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1853: FILE: drivers/i2c/chips/w83781d.c:1787:
+				if (((data->type == w83783s)
+				     || (data->type == w83627hf)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1854: FILE: drivers/i2c/chips/w83781d.c:1788:
+				     || (data->type == w83627hf)
+				     || (data->type == as99127f)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1855: FILE: drivers/i2c/chips/w83781d.c:1789:
+				     || (data->type == as99127f)
+				     || (data->type == w83697hf)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1856: FILE: drivers/i2c/chips/w83781d.c:1790:
+				     || (data->type == w83697hf)
+				     || ((data->type == w83782d)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1857: FILE: drivers/i2c/chips/w83781d.c:1791:
+				     || ((data->type == w83782d)
+					 && i2c_is_isa_client(client)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1858: FILE: drivers/i2c/chips/w83781d.c:1792:
+					 && i2c_is_isa_client(client)))
+				    && i == 2)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83781d'
#1899: FILE: drivers/i2c/chips/w83781d.c:1833:
+		if ((data->type != w83781d) && (data->type != as99127f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != as99127f'
#1899: FILE: drivers/i2c/chips/w83781d.c:1833:
+		if ((data->type != w83781d) && (data->type != as99127f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type == w83782d'
#1910: FILE: drivers/i2c/chips/w83781d.c:1844:
+		if ((data->type == w83782d) || (data->type == w83627hf)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type == w83627hf'
#1910: FILE: drivers/i2c/chips/w83781d.c:1844:
+		if ((data->type == w83782d) || (data->type == w83627hf)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83781d'
#1919: FILE: drivers/i2c/chips/w83781d.c:1853:
+		if ((data->type != w83781d) && (data->type != as99127f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != as99127f'
#1919: FILE: drivers/i2c/chips/w83781d.c:1853:
+		if ((data->type != w83781d) && (data->type != as99127f)) {

WARNING:SPLIT_STRING: quoted string split across lines
#1944: FILE: drivers/i2c/chips/w83781d.c:1878:
+MODULE_AUTHOR("Frodo Looijaard <frodol@dds.nl>, "
+	      "Philip Edelbrock <phil@netroedge.com>, "

WARNING:SPLIT_STRING: quoted string split across lines
#1945: FILE: drivers/i2c/chips/w83781d.c:1879:
+	      "Philip Edelbrock <phil@netroedge.com>, "
+	      "and Mark Studebaker <mdsxyz123@yahoo.com>");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1955: FILE: include/linux/i2c-vid.h:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1956: FILE: include/linux/i2c-vid.h:2:
+/*
+    vrm.c - Part of lm_sensors, Linux kernel modules for hardware

ERROR:CODE_INDENT: code indent should use tabs where possible
#1957: FILE: include/linux/i2c-vid.h:3:
+               monitoring$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1972: FILE: include/linux/i2c-vid.h:18:
+    along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1973: FILE: include/linux/i2c-vid.h:19:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1977: FILE: include/linux/i2c-vid.h:23:
+/*
+    This file contains common code for decoding VID pins.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1986: FILE: include/linux/i2c-vid.h:32:
+/*
+    Legal val values 00 - 1F.

ERROR:SPACING: space required before the open parenthesis '('
#1996: FILE: include/linux/i2c-vid.h:42:
+	switch(vrm) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1997: FILE: include/linux/i2c-vid.h:43:
+	switch(vrm) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#2001: FILE: include/linux/i2c-vid.h:47:
+^I^I                       1850 - val * 25);$

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2010: FILE: include/linux/i2c-vid.h:56:
+				/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:CODE_INDENT: code indent should use tabs where possible
#2014: FILE: include/linux/i2c-vid.h:60:
+^I^I                     2050 - (val) * 50);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380865.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 43 errors, 160 warnings, 156 checks, 1966 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380865.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
