WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
This patch adds two new functions to mm/mempolicy.c that allow the conversion

ERROR:SPACING: space required after that ',' (ctx:VxV)
#56: FILE: mm/mempolicy.c:1188:
+		strcpy(buffer,"default");
 		             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#68: FILE: mm/mempolicy.c:1200:
+	} else if (pol->policy == MPOL_BIND) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#72: FILE: mm/mempolicy.c:1204:
+		p+= sprintf(p, "bind={");
 		 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#86: FILE: mm/mempolicy.c:1218:
+		return p-buffer;
 		        ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#89: FILE: mm/mempolicy.c:1221:
+	} else if (pol->policy == MPOL_INTERLEAVE) {
+

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#108: FILE: mm/mempolicy.c:1240:
+		return p-buffer;
 		        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#110: FILE: mm/mempolicy.c:1242:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#128: FILE: mm/mempolicy.c:1260:
+	if (strnicmp(buffer, "default", 7) == 0) {
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#132: FILE: mm/mempolicy.c:1264:
+
+	}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#139: FILE: mm/mempolicy.c:1271:
+	if (strnicmp(buffer, "prefer=", 7) == 0) {
+

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#140: FILE: mm/mempolicy.c:1272:
+		node = simple_strtoul(buffer + 7, &p, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#148: FILE: mm/mempolicy.c:1280:
+	} else if (strnicmp(buffer, "interleave={", 12) == 0) {
+

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#154: FILE: mm/mempolicy.c:1286:
+			node = simple_strtoul(p, &p, 10);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#167: FILE: mm/mempolicy.c:1299:
+	} else if (strnicmp(buffer, "bind={", 6) == 0) {
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*zonelist)...) over kmalloc(sizeof(struct zonelist)...)
#168: FILE: mm/mempolicy.c:1300:
+		struct zonelist *zonelist = kmalloc(sizeof(struct zonelist), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#179: FILE: mm/mempolicy.c:1311:
+			node = simple_strtoul(p, &p, 10);

ERROR:SPACING: space required before the open parenthesis '('
#210: FILE: mm/mempolicy.c:1342:
+				for(q = zone; q < zone + MAX_NR_ZONES; q++) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#211: FILE: mm/mempolicy.c:1343:
+					if (strnicmp(q->name, start, p-start) == 0) {
 					                              ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000164342.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 5 warnings, 11 checks, 224 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000164342.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
