ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#169: FILE: arch/s390/kernel/traps.c:297:
+static void inline

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#177: FILE: arch/s390/kernel/traps.c:305:
+	printk("User process fault: interruption code 0x%lX\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#221: FILE: arch/s390/kernel/traps.c:349:
+default_trap_handler(struct pt_regs * regs, long interruption_code)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: arch/s390/kernel/traps.c:351:
+        if (regs->psw.mask & PSW_MASK_PSTATE) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: arch/s390/kernel/traps.c:351:
+        if (regs->psw.mask & PSW_MASK_PSTATE) {$

CHECK:BRACES: Unbalanced braces around else statement
#227: FILE: arch/s390/kernel/traps.c:355:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: arch/s390/kernel/traps.c:476:
+        else if (signal == SIGSEGV) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: arch/s390/kernel/traps.c:476:
+        else if (signal == SIGSEGV) {$

CHECK:SPACING: No space is necessary after a cast
#262: FILE: arch/s390/kernel/traps.c:480:
+		info.si_addr = (void *) location;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#266: FILE: arch/s390/kernel/traps.c:483:
+	} else
[...]
+        if (signal) {

CHECK:BRACES: Unbalanced braces around else statement
#266: FILE: arch/s390/kernel/traps.c:483:
+	} else

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: arch/s390/kernel/traps.c:485:
+        if (signal) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: arch/s390/kernel/traps.c:485:
+        if (signal) {$

CHECK:SPACING: No space is necessary after a cast
#272: FILE: arch/s390/kernel/traps.c:489:
+		info.si_addr = (void *) location;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000226540.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 5 warnings, 4 checks, 303 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000226540.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
