ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#160: FILE: include/linux/sysctl.h:136:
+	KERN_INTERACTIVE=66,	/* interactive tasks can have cpu bursts */
 	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#161: FILE: include/linux/sysctl.h:137:
+	KERN_COMPUTE=67,	/* adjust timeslices for a compute server */
 	            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#180: FILE: init/main.c:323:
+	printk("Generic cache decay timeout: %ld msecs.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: init/main.c:324:
+	printk("Generic cache decay timeout: %ld msecs.\n",
+		(cache_decay_ticks * 1000 / HZ));

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#330: FILE: kernel/sched.c:71:
+int compute = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: kernel/sched.c:72:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#379: FILE: kernel/sched.c:112:
+	unsigned long bitmap[BITS_TO_LONGS(MAX_PRIO+1)];
 	                                           ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#400: FILE: kernel/sched.c:195:
+	if (!compute || rq->cache_ticks >= cache_decay_ticks ||
[...]
+			return 1;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#401: FILE: kernel/sched.c:196:
+	if (!compute || rq->cache_ticks >= cache_decay_ticks ||
+		rt_task(p) || !p->mm || rq->curr == rq->idle)

WARNING:LINE_SPACING: Missing a blank line after declarations
#510: FILE: kernel/sched.c:259:
+	unsigned int task_user_prio;
+	if (rt_task(p))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#542: FILE: kernel/sched.c:271:
+	unsigned int best_burst;
+	best_burst = burst(p);

WARNING:LINE_SPACING: Missing a blank line after declarations
#581: FILE: kernel/sched.c:289:
+	unsigned int slice = RR_INTERVAL;
+	if (!rt_task(p))

WARNING:LINE_SPACING: Missing a blank line after declarations
#611: FILE: kernel/sched.c:310:
+	unsigned int best_burst;
+	if (rt_task(p))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#646: FILE: kernel/sched.c:341:
+^Iif (p->flags & PF_FORKED || (!(NS_TO_JIFFIES(p->runtime)) && $

WARNING:LINE_SPACING: Missing a blank line after declarations
#646: FILE: kernel/sched.c:341:
+	unsigned long total_run = NS_TO_JIFFIES(ns_totalrun);
+	if (p->flags & PF_FORKED || (!(NS_TO_JIFFIES(p->runtime)) && 

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#646: FILE: kernel/sched.c:341:
+	if (p->flags & PF_FORKED || (!(NS_TO_JIFFIES(p->runtime)) && 
[...]
+			p->flags &= ~PF_FORKED;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#647: FILE: kernel/sched.c:342:
+	if (p->flags & PF_FORKED || (!(NS_TO_JIFFIES(p->runtime)) && 
+		NS_TO_JIFFIES(p->runtime + sleep_time) < RR_INTERVAL)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#841: FILE: kernel/sched.c:774:
+^I/* $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#852: FILE: kernel/sched.c:778:
+	BUG_ON(p->state != TASK_RUNNING);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#952: FILE: kernel/sched.c:1156:
+static inline $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#953: FILE: kernel/sched.c:1157:
+void pull_task(runqueue_t *src_rq, task_t *p, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#954: FILE: kernel/sched.c:1158:
+void pull_task(runqueue_t *src_rq, task_t *p, 
+		runqueue_t *this_rq, int this_cpu)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1016: FILE: kernel/sched.c:1228:
+^Iif (idx >= MAX_PRIO) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1167: FILE: kernel/sched.c:1853:
+		if (((smt_curr->slice * (100 - sd->per_cpu_gain) / 100) >
[...]
 				ret = 1;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1178: FILE: kernel/sched.c:1863:
+^I^Iif ((((p->slice * (100 - sd->per_cpu_gain) / 100) > $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1178: FILE: kernel/sched.c:1863:
+		if ((((p->slice * (100 - sd->per_cpu_gain) / 100) > 
[...]
 				resched_task(smt_curr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1179: FILE: kernel/sched.c:1864:
+^I^I^Islice(smt_curr) || rt_task(p)) && $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1298: FILE: kernel/sched.c:2238:
+	if ((queued = task_queued(p)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1319: FILE: kernel/sched.c:2353:
+	BUG_ON(task_queued(p));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1339: FILE: kernel/sched.c:2429:
+	if ((queued = task_queued(p)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1385: FILE: kernel/sched.c:2644:
+ ^Icurrent->slice = slice(current);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1385: FILE: kernel/sched.c:2644:
+ ^Icurrent->slice = slice(current);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1385: FILE: kernel/sched.c:2644:
+ ^Icurrent->slice = slice(current);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1386: FILE: kernel/sched.c:2645:
+ ^Icurrent->time_slice = RR_INTERVAL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1386: FILE: kernel/sched.c:2645:
+ ^Icurrent->time_slice = RR_INTERVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1386: FILE: kernel/sched.c:2645:
+ ^Icurrent->time_slice = RR_INTERVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1452: FILE: kernel/sched.c:3564:
+^I^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1474: FILE: kernel/sched.c:3579:
+		memset(rq->bitmap, 0, BITS_TO_LONGS(MAX_PRIO+1)*sizeof(long));
 		                                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1474: FILE: kernel/sched.c:3579:
+		memset(rq->bitmap, 0, BITS_TO_LONGS(MAX_PRIO+1)*sizeof(long));
 		                                               ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1494: FILE: kernel/sysctl.c:643:
+		.maxlen		= sizeof (int),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1502: FILE: kernel/sysctl.c:651:
+		.maxlen		= sizeof (int),

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000271727.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 18 warnings, 7 checks, 1349 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000271727.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
