WARNING:TYPO_SPELLING: 'makro' may be misspelled - perhaps 'macro'?
#56: 
has smaller cache footprint. Is there a common makro somewhere defined 
                                               ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'makro' may be misspelled - perhaps 'macro'?
#62: 
approach. It would be nice to have this a makro or a function. Maybe 
                                          ^^^^^

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#63: 
noone really needs it?
^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#71: 
echo '[q]sa[ln0=aln256%Pln256/snlbx]sb3135071790101768542287578439snlbxq'|dc

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#80: 
--- /usr/src/linux/fs/nfsd/vfs.c	Wed May  8 14:25:38 2002

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#86: FILE: vfs.c:80:
+static void print_dirname(struct dentry *getdentry) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#87: FILE: vfs.c:81:
+	if ((getdentry != NULL) && !IS_ROOT(getdentry)){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'getdentry != NULL'
#87: FILE: vfs.c:81:
+	if ((getdentry != NULL) && !IS_ROOT(getdentry)){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#87: FILE: vfs.c:81:
+	if ((getdentry != NULL) && !IS_ROOT(getdentry)){
+		print_dirname(getdentry->d_parent);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "getdentry"
#87: FILE: vfs.c:81:
+	if ((getdentry != NULL) && !IS_ROOT(getdentry)){

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BRACES: braces {} are not necessary for single statement blocks
#90: FILE: vfs.c:84:
+	if (!IS_ROOT(getdentry)) {
+		printk("/%s", getdentry->d_name.name);
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#91: FILE: vfs.c:85:
+		printk("/%s", getdentry->d_name.name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#102: FILE: vfs.c:502:
+		printk(KERN_INFO "NFSLOG UID=%d GID=%d FILE=",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: vfs.c:503:
+		printk(KERN_INFO "NFSLOG UID=%d GID=%d FILE=",
+			rqstp->rq_cred.cr_uid,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#106: FILE: vfs.c:506:
+		printk(" OP=%s IP=%d.%d.%d.%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#107: FILE: vfs.c:507:
+		printk(" OP=%s IP=%d.%d.%d.%d\n",
+			__FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#107: FILE: vfs.c:507:
+			__FUNCTION__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#117: FILE: vfs.c:668:
+	printk(KERN_INFO "NFSLOG UID=%d GID=%d FILE=",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: vfs.c:669:
+	printk(KERN_INFO "NFSLOG UID=%d GID=%d FILE=",
+		rqstp->rq_cred.cr_uid,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#121: FILE: vfs.c:672:
+	printk(" OP=%s IP=%d.%d.%d.%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: vfs.c:673:
+	printk(" OP=%s IP=%d.%d.%d.%d\n",
+		__FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#122: FILE: vfs.c:673:
+		__FUNCTION__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#132: FILE: vfs.c:797:
+	printk(KERN_INFO "NFSLOG UID=%d GID=%d FILE=",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: vfs.c:798:
+	printk(KERN_INFO "NFSLOG UID=%d GID=%d FILE=",
+		rqstp->rq_cred.cr_uid,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#136: FILE: vfs.c:801:
+	printk(" OP=%s IP=%d.%d.%d.%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: vfs.c:802:
+	printk(" OP=%s IP=%d.%d.%d.%d\n",
+		__FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#137: FILE: vfs.c:802:
+		__FUNCTION__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#146: FILE: vfs.c:960:
+		printk(KERN_INFO "NFSLOG UID=%d GID=%d FILE=",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: vfs.c:961:
+		printk(KERN_INFO "NFSLOG UID=%d GID=%d FILE=",
+			rqstp->rq_cred.cr_uid,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#150: FILE: vfs.c:964:
+		printk("/%s", fname);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#151: FILE: vfs.c:965:
+		printk(KERN_INFO " OP=%s IP=%d.%d.%d.%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: vfs.c:966:
+		printk(KERN_INFO " OP=%s IP=%d.%d.%d.%d\n",
+			__FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#152: FILE: vfs.c:966:
+			__FUNCTION__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#161: FILE: vfs.c:1079:
+	printk(KERN_INFO "NFSLOG UID=%d GID=%d FILE=",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: vfs.c:1080:
+	printk(KERN_INFO "NFSLOG UID=%d GID=%d FILE=",
+		rqstp->rq_cred.cr_uid,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#165: FILE: vfs.c:1083:
+	printk("/%s", fname);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#166: FILE: vfs.c:1084:
+	printk(" OP=%s IP=%d.%d.%d.%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: vfs.c:1085:
+	printk(" OP=%s IP=%d.%d.%d.%d\n",
+		__FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#167: FILE: vfs.c:1085:
+		__FUNCTION__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#177: FILE: vfs.c:1155:
+	printk(KERN_INFO "NFSLOG UID=%d GID=%d FILE=",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: vfs.c:1156:
+	printk(KERN_INFO "NFSLOG UID=%d GID=%d FILE=",
+		rqstp->rq_cred.cr_uid,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#181: FILE: vfs.c:1159:
+	printk(" OP=%s IP=%d.%d.%d.%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: vfs.c:1160:
+	printk(" OP=%s IP=%d.%d.%d.%d\n",
+		__FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#182: FILE: vfs.c:1160:
+		__FUNCTION__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#191: FILE: vfs.c:1222:
+	printk(KERN_INFO "NFSLOG UID=%d GID=%d FILE=",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: vfs.c:1223:
+	printk(KERN_INFO "NFSLOG UID=%d GID=%d FILE=",
+		rqstp->rq_cred.cr_uid,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#195: FILE: vfs.c:1226:
+	printk(" OP=%s IP=%d.%d.%d.%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: vfs.c:1227:
+	printk(" OP=%s IP=%d.%d.%d.%d\n",
+		__FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#196: FILE: vfs.c:1227:
+		__FUNCTION__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#205: FILE: vfs.c:1368:
+	printk(KERN_INFO "NFSLOG UID=%d GID=%d FILE=",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: vfs.c:1369:
+	printk(KERN_INFO "NFSLOG UID=%d GID=%d FILE=",
+		rqstp->rq_cred.cr_uid,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#209: FILE: vfs.c:1372:
+	printk(" OP=%s IP=%d.%d.%d.%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: vfs.c:1373:
+	printk(" OP=%s IP=%d.%d.%d.%d\n",
+		__FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#210: FILE: vfs.c:1373:
+		__FUNCTION__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#221: FILE: vfs.c:1448:
+	printk(KERN_INFO "NFSLOG UID=%d GID=%d FILE=",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: vfs.c:1449:
+	printk(KERN_INFO "NFSLOG UID=%d GID=%d FILE=",
+		rqstp->rq_cred.cr_uid,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#225: FILE: vfs.c:1452:
+	printk("/%s", fname);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#226: FILE: vfs.c:1453:
+	printk(" OP=%s IP=%d.%d.%d.%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: vfs.c:1454:
+	printk(" OP=%s IP=%d.%d.%d.%d\n",
+		__FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#227: FILE: vfs.c:1454:
+		__FUNCTION__,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000449983.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 38 warnings, 20 checks, 140 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000449983.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
