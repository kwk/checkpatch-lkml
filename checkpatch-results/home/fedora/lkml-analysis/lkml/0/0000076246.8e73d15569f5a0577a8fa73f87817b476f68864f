WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
ptrace_writedata already included in kernel/ptrace.c. Basically this is a more

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#54: FILE: include/linux/ptrace.h:84:
+extern int ptrace_readstringdata(struct task_struct *tsk, unsigned long src, char __user *dst, int len);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#54: FILE: include/linux/ptrace.h:84:
+extern int ptrace_readstringdata(struct task_struct *tsk, unsigned long src, char __user *dst, int len);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#70: FILE: kernel/ptrace.c:270:
+static int access_process_vm_user(struct task_struct *tsk, unsigned long addr, char __user *ubuf, int len, int write, int string)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#92: FILE: kernel/ptrace.c:282:
+	buf=kmalloc(PAGE_SIZE, GFP_KERNEL);
 	   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'sucessfully' may be misspelled - perhaps 'successfully'?
#94: FILE: kernel/ptrace.c:284:
+	/* ignore errors, just check how much was sucessfully transfered */
 	                                          ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: kernel/ptrace.c:290:
+		ret = get_user_pages(tsk, mm, addr, 1,
+				write, 1, &page, &vma);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#101: FILE: kernel/ptrace.c:291:
+		if (ret <= 0)
 				break;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#106: FILE: kernel/ptrace.c:295:
+		offset = addr & (PAGE_SIZE-1);
 		                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#107: FILE: kernel/ptrace.c:296:
+		if (bytes > PAGE_SIZE-offset)
 		                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#108: FILE: kernel/ptrace.c:297:
+			bytes = PAGE_SIZE-offset;
 			                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#112: FILE: kernel/ptrace.c:301:
+			__copy_from_user(buf,ubuf,bytes);
 			                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#112: FILE: kernel/ptrace.c:301:
+			__copy_from_user(buf,ubuf,bytes);
 			                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: kernel/ptrace.c:303:
+			copy_to_user_page(vma, page, addr,
+					maddr + offset, buf, bytes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: kernel/ptrace.c:308:
+			copy_from_user_page(vma, page, addr,
+					buf, maddr + offset, bytes);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#121: FILE: kernel/ptrace.c:310:
+				for (offset=0;offset<bytes;offset++)
 				           ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#121: FILE: kernel/ptrace.c:310:
+				for (offset=0;offset<bytes;offset++)
 				             ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#121: FILE: kernel/ptrace.c:310:
+				for (offset=0;offset<bytes;offset++)
 				                    ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#121: FILE: kernel/ptrace.c:310:
+				for (offset=0;offset<bytes;offset++)
 				                          ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#122: FILE: kernel/ptrace.c:311:
+					if (buf[offset]==0)
 					               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#125: FILE: kernel/ptrace.c:314:
+					bytes=len=offset+1;
 					     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#125: FILE: kernel/ptrace.c:314:
+					bytes=len=offset+1;
 					         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#125: FILE: kernel/ptrace.c:314:
+					bytes=len=offset+1;
 					                ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#125: FILE: kernel/ptrace.c:314:
+					bytes=len=offset+1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#133: FILE: kernel/ptrace.c:316:
+			__copy_to_user(ubuf,buf,bytes);
 			                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#133: FILE: kernel/ptrace.c:316:
+			__copy_to_user(ubuf,buf,bytes);
 			                       ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#142: FILE: kernel/ptrace.c:324:
 }
+	up_read(&mm->mmap_sem);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#165: FILE: kernel/ptrace.c:333:
+	if (!access_ok(VERIFY_WRITE, dst ,len))
 			return -EIO;

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#165: FILE: kernel/ptrace.c:333:
+	if (!access_ok(VERIFY_WRITE, dst ,len))
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#165: FILE: kernel/ptrace.c:333:
+	if (!access_ok(VERIFY_WRITE, dst ,len))
 	                                 ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#176: FILE: kernel/ptrace.c:340:
+	if (!access_ok(VERIFY_WRITE, dst ,len))
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#176: FILE: kernel/ptrace.c:340:
+	if (!access_ok(VERIFY_WRITE, dst ,len))
 	                                 ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#184: FILE: kernel/ptrace.c:347:
+	if (!access_ok(VERIFY_READ, dst ,len))
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#184: FILE: kernel/ptrace.c:347:
+	if (!access_ok(VERIFY_READ, dst ,len))
 	                                ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000076246.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 6 warnings, 10 checks, 135 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000076246.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
