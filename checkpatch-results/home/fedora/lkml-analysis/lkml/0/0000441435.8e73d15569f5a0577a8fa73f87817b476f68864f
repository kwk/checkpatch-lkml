ERROR:TRAILING_WHITESPACE: trailing whitespace
#45: FILE: net/irda/af_irda.c:1294:
+^I^Iif (signal_pending(current)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#58: FILE: net/irda/irlap_event.c:178:
+/*
+ * Calculate and set time before we will have to send back the pf bit

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#79: FILE: net/irda/irlap_event.c:1176:
+				 * Jean II */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#95: FILE: net/irda/irlap_event.c:1191:
+				 * - Jean II */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#116: FILE: include/net/irda/ircomm_tty.h:49:
+ * the state of the underlying connection. - Jean II */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#145: FILE: net/irda/ircomm/ircomm_tty.c:706:
+	 * Jean II */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#148: FILE: net/irda/ircomm/ircomm_tty.c:709:
+		IRDA_DEBUG(2, __FUNCTION__ "() : not initialised\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#164: FILE: net/irda/ircomm/ircomm_tty.c:812:
+	 * Jean II */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tty->hw_stopped'
#165: FILE: net/irda/ircomm/ircomm_tty.c:813:
+	if ((tty->hw_stopped) ||
+	    (self->max_header_size == IRCOMM_TTY_HDR_UNITIALISED))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'self->max_header_size == IRCOMM_TTY_HDR_UNITIALISED'
#165: FILE: net/irda/ircomm/ircomm_tty.c:813:
+	if ((tty->hw_stopped) ||
+	    (self->max_header_size == IRCOMM_TTY_HDR_UNITIALISED))

WARNING:LONG_LINE_STRING: line length of 116 exceeds 100 columns
#179: FILE: net/irda/ircomm/ircomm_tty_ioctl.c:99:
+			WARNING(__FUNCTION__ "(), enabling RTS/CTS on link that doesn't support it (3-wire-raw)\n");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#179: FILE: net/irda/ircomm/ircomm_tty_ioctl.c:99:
+			WARNING(__FUNCTION__ "(), enabling RTS/CTS on link that doesn't support it (3-wire-raw)\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441435.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 9 warnings, 2 checks, 122 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441435.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
