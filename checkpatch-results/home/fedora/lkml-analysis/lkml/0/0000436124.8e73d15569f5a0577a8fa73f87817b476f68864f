WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#23: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#24: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#25: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#26: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#27: 
#	           ChangeSet	1.549   -> 1.550  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#28: 
#	arch/sh/kernel/pci-dc.c	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#29: 
#	arch/sh/kernel/pci-sh7751.c	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#30: 
#	arch/sh/kernel/pci_st40.c	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#31: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#32: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#33: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
# 02/08/30	hannal@us.ibm.com	1.550

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
# [PATCH] PCI: sh pci_ops changes

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# sh pci ops changes

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#41: 
--- a/arch/sh/kernel/pci-dc.c	Fri Aug 30 15:00:18 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#48: FILE: arch/sh/kernel/pci-dc.c:34:
+#define BBA_SELECTED(bus,devfn) (bus->number==0 && devfn==0)
                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#48: FILE: arch/sh/kernel/pci-dc.c:34:
+#define BBA_SELECTED(bus,devfn) (bus->number==0 && devfn==0)
                                             ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#48: FILE: arch/sh/kernel/pci-dc.c:34:
+#define BBA_SELECTED(bus,devfn) (bus->number==0 && devfn==0)
                                                         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bus' may be better as '(bus)' to avoid precedence issues
#48: FILE: arch/sh/kernel/pci-dc.c:34:
+#define BBA_SELECTED(bus,devfn) (bus->number==0 && devfn==0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'devfn' may be better as '(devfn)' to avoid precedence issues
#48: FILE: arch/sh/kernel/pci-dc.c:34:
+#define BBA_SELECTED(bus,devfn) (bus->number==0 && devfn==0)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#52: FILE: arch/sh/kernel/pci-dc.c:36:
+static int gapspci_read(struct pci_bus *bus, unsigned int devfn, int where, int size, u32 * val)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#62: FILE: arch/sh/kernel/pci-dc.c:41:
+			*val = (u8)inb(GAPSPCI_BBA_CONFIG+where);
 			                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#68: FILE: arch/sh/kernel/pci-dc.c:47:
+			*val = (u16)inw(GAPSPCI_BBA_CONFIG+where);
 			                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#74: FILE: arch/sh/kernel/pci-dc.c:53:
+			*val = inl(GAPSPCI_BBA_CONFIG+where);
 			                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: arch/sh/kernel/pci-dc.c:57:
+^I}^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#135: FILE: arch/sh/kernel/pci-dc.c:67:
+				outb((u8)val, GAPSPCI_BBA_CONFIG+where);
 				                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#139: FILE: arch/sh/kernel/pci-dc.c:71:
+				outw((u16)val, GAPSPCI_BBA_CONFIG+where);
 				                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#143: FILE: arch/sh/kernel/pci-dc.c:75:
+				outl(val, GAPSPCI_BBA_CONFIG+where);
 				                            ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#157: FILE: arch/sh/kernel/pci-dc.c:83:
+^I.read = ^Igapspci_read,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#158: FILE: arch/sh/kernel/pci-dc.c:84:
+^I.write = ^Igapspci_write,$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#167: FILE: arch/sh/kernel/pci-dc.c:127:
+		if (!BBA_SELECTED(bus, dev->devfn)) continue;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#179: FILE: arch/sh/kernel/pci-sh7751.c:44:
+#define CONFIG_CMD(bus, devfn, where) (0x80000000 | (bus->number << 16) | (devfn << 8) | (where & ~3))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bus' may be better as '(bus)' to avoid precedence issues
#179: FILE: arch/sh/kernel/pci-sh7751.c:44:
+#define CONFIG_CMD(bus, devfn, where) (0x80000000 | (bus->number << 16) | (devfn << 8) | (where & ~3))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'devfn' may be better as '(devfn)' to avoid precedence issues
#179: FILE: arch/sh/kernel/pci-sh7751.c:44:
+#define CONFIG_CMD(bus, devfn, where) (0x80000000 | (bus->number << 16) | (devfn << 8) | (where & ~3))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'where' may be better as '(where)' to avoid precedence issues
#179: FILE: arch/sh/kernel/pci-sh7751.c:44:
+#define CONFIG_CMD(bus, devfn, where) (0x80000000 | (bus->number << 16) | (devfn << 8) | (where & ~3))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#196: FILE: arch/sh/kernel/pci-sh7751.c:60:
+	outl(CONFIG_CMD(bus,devfn,where), PCI_REG(SH7751_PCIPAR));
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#196: FILE: arch/sh/kernel/pci-sh7751.c:60:
+	outl(CONFIG_CMD(bus,devfn,where), PCI_REG(SH7751_PCIPAR));
 	                         ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#238: FILE: arch/sh/kernel/pci-sh7751.c:64:
+	switch (size) {
[...]
+		case 2:
[...]
+		case 4:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#244: FILE: arch/sh/kernel/pci-sh7751.c:66:
+			switch (where & 0x3) {
+				case 3:
[...]
+				case 2:
[...]
+				case 1:
[...]
+				default:

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#259: FILE: arch/sh/kernel/pci-sh7751.c:81:
+			switch (where & 0x3) {
+				case 3: /*This should never happen.*/
[...]
+				case 2:
[...]
+				case 1:
[...]
+				default:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#261: FILE: arch/sh/kernel/pci-sh7751.c:83:
+					printk(KERN_ERR "PCI BIOS: read_config: Illegal u16 alignment");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: arch/sh/kernel/pci-sh7751.c:99:
+^IPCIDBG(4,"pci_conf1_read@0x%08x=0x%x\n", CONFIG_CMD(bus,devfn,where),*value); $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#293: FILE: arch/sh/kernel/pci-sh7751.c:99:
+	PCIDBG(4,"pci_conf1_read@0x%08x=0x%x\n", CONFIG_CMD(bus,devfn,where),*value); 
 	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#293: FILE: arch/sh/kernel/pci-sh7751.c:99:
+	PCIDBG(4,"pci_conf1_read@0x%08x=0x%x\n", CONFIG_CMD(bus,devfn,where),*value); 
 	                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#293: FILE: arch/sh/kernel/pci-sh7751.c:99:
+	PCIDBG(4,"pci_conf1_read@0x%08x=0x%x\n", CONFIG_CMD(bus,devfn,where),*value); 
 	                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#293: FILE: arch/sh/kernel/pci-sh7751.c:99:
+	PCIDBG(4,"pci_conf1_read@0x%08x=0x%x\n", CONFIG_CMD(bus,devfn,where),*value); 
 	                                                                    ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#293: FILE: arch/sh/kernel/pci-sh7751.c:99:
+	PCIDBG(4,"pci_conf1_read@0x%08x=0x%x\n", CONFIG_CMD(bus,devfn,where),*value); 
 	                                                                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: arch/sh/kernel/pci-sh7751.c:103:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: arch/sh/kernel/pci-sh7751.c:104:
+ * Since SH7751 only does 32bit access we'll have to do a read,mask,write operation.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: arch/sh/kernel/pci-sh7751.c:106:
+ */ $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: arch/sh/kernel/pci-sh7751.c:109:
+	u32 word,mask;
 	        ^

ERROR:SPACING: space required before the open parenthesis '('
#341: FILE: arch/sh/kernel/pci-sh7751.c:113:
+	if(size == 1) {

ERROR:SPACING: space required before the open brace '{'
#343: FILE: arch/sh/kernel/pci-sh7751.c:115:
+	} else if(size == 2){

ERROR:SPACING: space required before the open parenthesis '('
#343: FILE: arch/sh/kernel/pci-sh7751.c:115:
+	} else if(size == 2){

ERROR:SPACING: space required before the open parenthesis '('
#344: FILE: arch/sh/kernel/pci-sh7751.c:116:
+		if(shift == 24)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: arch/sh/kernel/pci-sh7751.c:117:
+^I^I^Ireturn PCIBIOS_BAD_REGISTER_NUMBER;           $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#349: FILE: arch/sh/kernel/pci-sh7751.c:121:
+	outl(CONFIG_CMD(bus,devfn,where), PCI_REG(SH7751_PCIPAR));
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#349: FILE: arch/sh/kernel/pci-sh7751.c:121:
+	outl(CONFIG_CMD(bus,devfn,where), PCI_REG(SH7751_PCIPAR));
 	                         ^

ERROR:SPACING: space required before the open brace '{'
#350: FILE: arch/sh/kernel/pci-sh7751.c:122:
+	if(size == 4){

ERROR:SPACING: space required before the open parenthesis '('
#350: FILE: arch/sh/kernel/pci-sh7751.c:122:
+	if(size == 4){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#353: FILE: arch/sh/kernel/pci-sh7751.c:125:
+		PCIDBG(4,"pci_conf1_write@0x%08x=0x%x\n", CONFIG_CMD(bus,devfn,where),value);
 		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#353: FILE: arch/sh/kernel/pci-sh7751.c:125:
+		PCIDBG(4,"pci_conf1_write@0x%08x=0x%x\n", CONFIG_CMD(bus,devfn,where),value);
 		                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#353: FILE: arch/sh/kernel/pci-sh7751.c:125:
+		PCIDBG(4,"pci_conf1_write@0x%08x=0x%x\n", CONFIG_CMD(bus,devfn,where),value);
 		                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#353: FILE: arch/sh/kernel/pci-sh7751.c:125:
+		PCIDBG(4,"pci_conf1_write@0x%08x=0x%x\n", CONFIG_CMD(bus,devfn,where),value);
 		                                                                     ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pci_conf1_write', this function's name, in a string
#353: FILE: arch/sh/kernel/pci-sh7751.c:125:
+		PCIDBG(4,"pci_conf1_write@0x%08x=0x%x\n", CONFIG_CMD(bus,devfn,where),value);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#378: FILE: arch/sh/kernel/pci-sh7751.c:133:
+	PCIDBG(4,"pci_conf1_write@0x%08x=0x%x\n", CONFIG_CMD(bus,devfn,where),word);
 	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#378: FILE: arch/sh/kernel/pci-sh7751.c:133:
+	PCIDBG(4,"pci_conf1_write@0x%08x=0x%x\n", CONFIG_CMD(bus,devfn,where),word);
 	                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#378: FILE: arch/sh/kernel/pci-sh7751.c:133:
+	PCIDBG(4,"pci_conf1_write@0x%08x=0x%x\n", CONFIG_CMD(bus,devfn,where),word);
 	                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#378: FILE: arch/sh/kernel/pci-sh7751.c:133:
+	PCIDBG(4,"pci_conf1_write@0x%08x=0x%x\n", CONFIG_CMD(bus,devfn,where),word);
 	                                                                     ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pci_conf1_write', this function's name, in a string
#378: FILE: arch/sh/kernel/pci-sh7751.c:133:
+	PCIDBG(4,"pci_conf1_write@0x%08x=0x%x\n", CONFIG_CMD(bus,devfn,where),word);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#392: FILE: arch/sh/kernel/pci-sh7751.c:141:
+^I.write = ^Ipci_conf1_write,$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#404: FILE: arch/sh/kernel/pci_st40.c:271:
+#define CONFIG_CMD(bus, devfn, where) SET_CONFIG_BITS(bus->number,devfn,where)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#404: FILE: arch/sh/kernel/pci_st40.c:271:
+#define CONFIG_CMD(bus, devfn, where) SET_CONFIG_BITS(bus->number,devfn,where)
                                                                        ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bus' may be better as '(bus)' to avoid precedence issues
#404: FILE: arch/sh/kernel/pci_st40.c:271:
+#define CONFIG_CMD(bus, devfn, where) SET_CONFIG_BITS(bus->number,devfn,where)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#414: FILE: arch/sh/kernel/pci_st40.c:287:
+static int st40pci_read(struct pci_bus *bus, unsigned int devfn, int where, int size, u32 * val)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#475: FILE: arch/sh/kernel/pci_st40.c:290:
+	switch (size) {
+		case 1:
[...]
+		case 2:
[...]
+		case 4:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#483: FILE: arch/sh/kernel/pci_st40.c:298:
+^I^I ^I*val = ST40PCI_READ(PDR); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: arch/sh/kernel/pci_st40.c:298:
+^I^I ^I*val = ST40PCI_READ(PDR); $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#483: FILE: arch/sh/kernel/pci_st40.c:298:
+^I^I ^I*val = ST40PCI_READ(PDR); $

ERROR:SPACING: space required before the open brace '{'
#488: FILE: arch/sh/kernel/pci_st40.c:302:
+	if (CheckForMasterAbort()){

CHECK:CAMELCASE: Avoid CamelCase: <CheckForMasterAbort>
#488: FILE: arch/sh/kernel/pci_st40.c:302:
+	if (CheckForMasterAbort()){

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#489: FILE: arch/sh/kernel/pci_st40.c:303:
+		switch (size) {
+			case 1:
[...]
+			case 2:
[...]
+			case 4:

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#512: FILE: arch/sh/kernel/pci_st40.c:323:
+	switch (size) {
+		case 1:
[...]
+		case 2:
[...]
+		case 4:

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#536: FILE: arch/sh/kernel/pci_st40.c:341:
+^I.read = ^Ist40pci_read,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#537: FILE: arch/sh/kernel/pci_st40.c:342:
+^I.write = ^Ist40pci_write,$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000436124.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 48 errors, 28 warnings, 13 checks, 485 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000436124.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
