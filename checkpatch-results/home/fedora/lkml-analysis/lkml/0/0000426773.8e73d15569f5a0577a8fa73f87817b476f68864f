ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#54: 
--- a/drivers/scsi/scsi.c	Fri Oct  4 08:05:55 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!scsi_shost_get_next"
#506: FILE: drivers/scsi/scsi.c:1854:
+	if (scsi_shost_get_next(NULL) == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host_Template>
#629: FILE: drivers/scsi/scsi_proc.c:122:
+void scsi_proc_shost_mkdir(Scsi_Host_Template *shost_tp)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#638: FILE: drivers/scsi/scsi_proc.c:125:
+        if (!shost_tp->proc_dir) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: drivers/scsi/scsi_proc.c:125:
+        if (!shost_tp->proc_dir) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#639: FILE: drivers/scsi/scsi_proc.c:126:
+		printk(KERN_ERR "%s: proc_mkdir failed for %s\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#640: FILE: drivers/scsi/scsi_proc.c:127:
+		       __FUNCTION__, shost_tp->proc_name);

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#647: FILE: drivers/scsi/scsi_proc.c:133:
+void scsi_proc_shost_add(struct Scsi_Host *shost)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#668: FILE: drivers/scsi/scsi_proc.c:138:
+	sprintf(name,"%d",shost->host_no);
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#668: FILE: drivers/scsi/scsi_proc.c:138:
+	sprintf(name,"%d",shost->host_no);
 	                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#670: FILE: drivers/scsi/scsi_proc.c:140:
+	p = create_proc_read_entry(name,
+			S_IFREG | S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#670: FILE: drivers/scsi/scsi_proc.c:140:
+			S_IFREG | S_IRUGO | S_IWUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#675: FILE: drivers/scsi/scsi_proc.c:145:
+		printk(KERN_ERR "%s: Failed to register host %d in"

WARNING:SPLIT_STRING: quoted string split across lines
#676: FILE: drivers/scsi/scsi_proc.c:146:
+		printk(KERN_ERR "%s: Failed to register host %d in"
+		       "%s\n", __FUNCTION__, shost->host_no,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#676: FILE: drivers/scsi/scsi_proc.c:146:
+		       "%s\n", __FUNCTION__, shost->host_no,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#679: FILE: drivers/scsi/scsi_proc.c:149:
+		p->write_proc=proc_scsi_write;
 		             ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#683: FILE: drivers/scsi/scsi_proc.c:153:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#688: FILE: drivers/scsi/scsi_proc.c:158:
+	char name[10];
+	sprintf(name,"%d",shost->host_no);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#688: FILE: drivers/scsi/scsi_proc.c:158:
+	sprintf(name,"%d",shost->host_no);
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#688: FILE: drivers/scsi/scsi_proc.c:158:
+	sprintf(name,"%d",shost->host_no);
 	                 ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#703: FILE: drivers/scsi/scsi_syms.c:93:
+EXPORT_SYMBOL(scsi_shost_hn_get);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#704: FILE: drivers/scsi/scsi_syms.c:94:
+EXPORT_SYMBOL(scsi_shost_put);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000426773.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 10 warnings, 5 checks, 647 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000426773.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
