WARNING:INDENTED_LABEL: labels should not be indented
#130: FILE: drivers/ide/ide-pnp.c:95:
+		card_vendor: ISAPNP_ANY_ID,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#131: FILE: drivers/ide/ide-pnp.c:96:
+		card_device: ISAPNP_ANY_ID,
 		           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#131: FILE: drivers/ide/ide-pnp.c:96:
+		card_device: ISAPNP_ANY_ID,

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: drivers/ide/ide-pnp.c:97:
+                devs: {^IISAPNP_DEVICE_ID('P', 'N', 'P', 0x0600) },$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#132: FILE: drivers/ide/ide-pnp.c:97:
+                devs: {	ISAPNP_DEVICE_ID('P', 'N', 'P', 0x0600) },
                     ^

WARNING:INDENTED_LABEL: labels should not be indented
#132: FILE: drivers/ide/ide-pnp.c:97:
+                devs: {	ISAPNP_DEVICE_ID('P', 'N', 'P', 0x0600) },

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#136: FILE: drivers/ide/ide-pnp.c:101:
+};
+ISAPNP_CARD_TABLE(ide_isa_ids);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#155: FILE: drivers/ide/ide-probe.c:1132:
+int ide_probe_init (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: drivers/ide/ide-probe.c:1144:
+void ide_probe_cleanup (void)

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#212: FILE: drivers/ide/ide.c:3516:
+static char *options = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#213: FILE: drivers/ide/ide.c:3517:
+MODULE_PARM(options,"s");
                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#216: FILE: drivers/ide/ide.c:3520:
+static void __init parse_options (char *line)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!line"
#220: FILE: drivers/ide/ide.c:3524:
+	if (line == NULL || !*line)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: drivers/ide/ide.c:3527:
+ ^I^Iif ((next = strchr(line,' ')) != NULL)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#223: FILE: drivers/ide/ide.c:3527:
+ ^I^Iif ((next = strchr(line,' ')) != NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: drivers/ide/ide.c:3527:
+ ^I^Iif ((next = strchr(line,' ')) != NULL)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#223: FILE: drivers/ide/ide.c:3527:
+ 		if ((next = strchr(line,' ')) != NULL)
  		                       ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#223: FILE: drivers/ide/ide.c:3527:
+ 		if ((next = strchr(line,' ')) != NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#226: FILE: drivers/ide/ide.c:3530:
+			printk ("Unknown option '%s'\n", line);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#226: FILE: drivers/ide/ide.c:3530:
+			printk ("Unknown option '%s'\n", line);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#236: FILE: drivers/ide/ide.c:3540:
+	extern int ide_probe_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#280: FILE: drivers/ide/ide.c:3566:
+static void __exit ide_cleanup (void)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#283: FILE: drivers/ide/ide.c:3569:
+	extern void ide_probe_cleanup(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#319: FILE: drivers/ide/pci/cmd640.c:124:
+extern int cmd640_vlb;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#328: FILE: drivers/ide/pci/cmd640.c:727:
+static int ide_probe_for_cmd640x (void)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424649.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 15 warnings, 2 checks, 240 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424649.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
