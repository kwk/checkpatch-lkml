CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#94: FILE: lib/radix-tree.c:250:
+		if (slot == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#97: FILE: lib/radix-tree.c:252:
+			if (!(slot = radix_tree_node_alloc(root)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#101: FILE: lib/radix-tree.c:254:
+			if (node) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#104: FILE: lib/radix-tree.c:257:
+			} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "slot"
#119: FILE: lib/radix-tree.c:269:
+	if (slot != NULL)

CHECK:BRACES: Unbalanced braces around else statement
#128: FILE: lib/radix-tree.c:277:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#152: FILE: lib/radix-tree.c:304:
+		if (slot == NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#192: FILE: lib/radix-tree.c:347:
+		BUG_ON(slot == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#192: FILE: lib/radix-tree.c:347:
+		BUG_ON(slot == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#221: FILE: lib/radix-tree.c:388:
+		if (slot == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#277: FILE: lib/radix-tree.c:448:
+		if (slot == NULL)

WARNING:SPACING: space prohibited before semicolon
#322: FILE: lib/radix-tree.c:491:
+		for (i = (index >> shift) & RADIX_TREE_MAP_MASK ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#380: FILE: lib/radix-tree.c:680:
+		if (slot == NULL)

ERROR:SPACING: space required before the open parenthesis '('
#428: FILE: lib/radix-tree.c:725:
+	for(pathp = orig_pathp; pathp->node; pathp--) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000156746.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 2 warnings, 10 checks, 370 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000156746.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
