CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#39: 
Le mardi 12 juillet 2005 à 20:13 +0200, Vojtech Pavlik a écrit :
                         ^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#78: FILE: drivers/usb/input/Kconfig:262:
+config USB_APPLETOUCH
+	tristate "Apple USB Touchpad support"
+	depends on USB && INPUT
+	---help---
+	  Say Y here if you want to use an Apple USB Touchpad.
+
+	  These are the touchpads that can be found on post-February 2005
+	  Apple Powerbooks (prior models have a Synaptics touchpad connected
+	  to the ADB bus).
+
+	  This driver provides a basic mouse driver but can be interfaced
+	  with the synaptics X11 driver to provide acceleration and
+	  scrolling in X11.
+
+	  For further information, see
+	  <file:Documentation/input/appletouch.txt>.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called appletouch.

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#191: FILE: drivers/usb/input/appletouch.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#213: FILE: drivers/usb/input/appletouch.c:23:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#214: FILE: drivers/usb/input/appletouch.c:24:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#236: FILE: drivers/usb/input/appletouch.c:46:
+^I.match_flags = USB_DEVICE_ID_MATCH_DEVICE |   ^I^I\$

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#239: FILE: drivers/usb/input/appletouch.c:49:
+	.idVendor = APPLE_VENDOR_ID,				\

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#240: FILE: drivers/usb/input/appletouch.c:50:
+	.idProduct = (prod),					\

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceClass>
#241: FILE: drivers/usb/input/appletouch.c:51:
+	.bInterfaceClass = 0x03,				\

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceProtocol>
#242: FILE: drivers/usb/input/appletouch.c:52:
+	.bInterfaceProtocol = 0x02

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#245: FILE: drivers/usb/input/appletouch.c:55:
+static struct usb_device_id atp_table [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#249: FILE: drivers/usb/input/appletouch.c:59:
+#if 0

CHECK:CAMELCASE: Avoid CamelCase: <Disabled>
#250: FILE: drivers/usb/input/appletouch.c:60:
+	Disabled until someone gives us the real USB id and tests the driver

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#255: FILE: drivers/usb/input/appletouch.c:65:
+MODULE_DEVICE_TABLE (usb, atp_table);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#278: FILE: drivers/usb/input/appletouch.c:88:
+ * ^I0 <= x <  960 on 12" and 15" Powerbooks$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#279: FILE: drivers/usb/input/appletouch.c:89:
+ * ^I0 <= x < 1600 on 17" Powerbooks$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#280: FILE: drivers/usb/input/appletouch.c:90:
+ * ^I0 <= y <  646$

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#293: FILE: drivers/usb/input/appletouch.c:103:
+	struct usb_device *	udev;		/* usb device */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#294: FILE: drivers/usb/input/appletouch.c:104:
+	struct urb *		urb;		/* usb request block */

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#295: FILE: drivers/usb/input/appletouch.c:105:
+	signed char *		data;		/* transferred data */

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#309: FILE: drivers/usb/input/appletouch.c:119:
+#define dbg_dump(msg, tab) \
+	if (debug > 1) {						\
+		int i;							\
+		printk("appletouch: %s %lld", msg, (long long)jiffies); \
+		for (i = 0; i < ATP_XSENSORS + ATP_YSENSORS; i++)	\
+			printk("%02x ", tab[i]); 			\
+		printk("\n"); 						\
+	}

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#312: FILE: drivers/usb/input/appletouch.c:122:
+		printk("appletouch: %s %lld", msg, (long long)jiffies); \

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#314: FILE: drivers/usb/input/appletouch.c:124:
+^I^I^Iprintk("%02x ", tab[i]); ^I^I^I\$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#314: FILE: drivers/usb/input/appletouch.c:124:
+			printk("%02x ", tab[i]); 			\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#315: FILE: drivers/usb/input/appletouch.c:125:
+^I^Iprintk("\n"); ^I^I^I^I^I^I\$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#315: FILE: drivers/usb/input/appletouch.c:125:
+		printk("\n"); 						\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#318: FILE: drivers/usb/input/appletouch.c:128:
+#define dprintk(format, a...) ^I^I^I^I^I^I\$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#320: FILE: drivers/usb/input/appletouch.c:130:
+		if (debug) printk(format, ##a);				\

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#320: FILE: drivers/usb/input/appletouch.c:130:
+		if (debug) printk(format, ##a);				\

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'xy_sensors[i - 1] < ATP_THRESHOLD'
#343: FILE: drivers/usb/input/appletouch.c:153:
+		if ((i - 1 < 0) || (xy_sensors[i - 1] < ATP_THRESHOLD))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#364: FILE: drivers/usb/input/appletouch.c:174:
+static void atp_complete(struct urb* urb, struct pt_regs* regs)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#364: FILE: drivers/usb/input/appletouch.c:174:
+static void atp_complete(struct urb* urb, struct pt_regs* regs)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#379: FILE: drivers/usb/input/appletouch.c:189:
+		    __FUNCTION__, urb->status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#383: FILE: drivers/usb/input/appletouch.c:193:
+		    __FUNCTION__, urb->status);

ERROR:SPACING: space prohibited before that close square bracket ']'
#396: FILE: drivers/usb/input/appletouch.c:206:
+		dev->xy_cur[i     ] = dev->data[5 * i +  2];

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#412: FILE: drivers/usb/input/appletouch.c:222:
+		dev->x_old = dev->y_old = -1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LINE_SPACING: Missing a blank line after declarations
#420: FILE: drivers/usb/input/appletouch.c:230:
+		signed char change = dev->xy_old[i] - dev->xy_cur[i];
+		dev->xy_acc[i] -= change;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#444: FILE: drivers/usb/input/appletouch.c:254:
+				printk("appletouch: X: %3d Y: %3d "

WARNING:SPLIT_STRING: quoted string split across lines
#445: FILE: drivers/usb/input/appletouch.c:255:
+				printk("appletouch: X: %3d Y: %3d "
+				       "Xz: %3d Yz: %3d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#458: FILE: drivers/usb/input/appletouch.c:268:
+	}
+	else if (!x && !y) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#459: FILE: drivers/usb/input/appletouch.c:269:
+	else if (!x && !y) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#460: FILE: drivers/usb/input/appletouch.c:270:
+		dev->x_old = dev->y_old = -1;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#477: FILE: drivers/usb/input/appletouch.c:287:
+		    __FUNCTION__, retval);

CHECK:CAMELCASE: Avoid CamelCase: <int_in_endpointAddr>
#505: FILE: drivers/usb/input/appletouch.c:315:
+	int int_in_endpointAddr = 0;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dev)...) over kmalloc(sizeof(struct atp)...)
#509: FILE: drivers/usb/input/appletouch.c:319:
+	dev = kmalloc(sizeof(struct atp), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#510: FILE: drivers/usb/input/appletouch.c:320:
+	if (dev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#521: FILE: drivers/usb/input/appletouch.c:331:
+	for (i = 0; i < iface_desc->desc.bNumEndpoints; i++) {

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#524: FILE: drivers/usb/input/appletouch.c:334:
+		    (endpoint->bEndpointAddress & USB_DIR_IN) &&

CHECK:CAMELCASE: Avoid CamelCase: <bmAttributes>
#525: FILE: drivers/usb/input/appletouch.c:335:
+		    ((endpoint->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#589: FILE: drivers/usb/input/appletouch.c:399:
+	printk(KERN_INFO "input: appletouch connected\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#616: FILE: drivers/usb/input/appletouch.c:426:
+	printk(KERN_INFO "input: appletouch disconnected\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#622: FILE: drivers/usb/input/appletouch.c:432:
+	struct atp *dev = usb_get_intfdata(iface);
+	usb_kill_urb(dev->urb);

WARNING:LINE_SPACING: Missing a blank line after declarations
#630: FILE: drivers/usb/input/appletouch.c:440:
+	struct atp *dev = usb_get_intfdata(iface);
+	if (dev->open && usb_submit_urb(dev->urb, GFP_ATOMIC))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000168235.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 25 warnings, 16 checks, 577 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000168235.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
