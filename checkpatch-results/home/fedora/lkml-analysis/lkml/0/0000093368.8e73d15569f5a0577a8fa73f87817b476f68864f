WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#54: FILE: mm/readahead.c:1705:
+		struct file *filp, struct file_ra_state *ra,
 		             ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#54: FILE: mm/readahead.c:1705:
+newfile_readahead(struct address_space *mapping,
+		struct file *filp, struct file_ra_state *ra,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#70: FILE: mm/readahead.c:1721:
+	return ra_dispatch(ra, mapping, filp);
 	                                ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: mm/readahead.c:1731:
+try_read_backward(struct file_ra_state *ra, pgoff_t begin_index,
+			unsigned long ra_size, unsigned long ra_max)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#89: FILE: mm/readahead.c:1740:
+	if ((ra->flags & RA_CLASS_MASK) == RA_CLASS_BACKWARD &&
+					ra_has_index(ra, ra->prev_page)) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#118: FILE: mm/readahead.c:1769:
+				struct file *filp, struct file_ra_state *ra,
 				             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: mm/readahead.c:1769:
+thrashing_recovery_readahead(struct address_space *mapping,
+				struct file *filp, struct file_ra_state *ra,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: mm/readahead.c:1776:
+		ra_account(ra, RA_EVENT_READAHEAD_MUTILATE,
+						ra->readahead_index - index);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: mm/readahead.c:1778:
+	ra_account(ra, RA_EVENT_READAHEAD_THRASHING,
+						ra->readahead_index - index);

CHECK:BRACES: braces {} should be used on all arms of this statement
#134: FILE: mm/readahead.c:1785:
+	if (index < ra->ra_index)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#136: FILE: mm/readahead.c:1787:
+	else {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#151: FILE: mm/readahead.c:1802:
+	return ra_dispatch(ra, mapping, filp);
 	                                ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: mm/readahead.c:1812:
+try_readahead_on_seek(struct file_ra_state *ra, pgoff_t index,
+			unsigned long ra_size, unsigned long ra_max)

WARNING:TYPO_SPELLING: 'similiar' may be misspelled - perhaps 'similar'?
#172: FILE: mm/readahead.c:1823:
+	/* The previous read-ahead sequences have similiar sizes? */
 	                                          ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: mm/readahead.c:1825:
+	if (!(ra_size < hit1 && hit1 > hit2 / 2 &&
+				hit2 > hit3 / 2 &&

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093368.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 5 warnings, 10 checks, 159 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093368.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
