WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#47: 
> +               return current_thread_info()->restart_block.fun(&parm);
                                                                   ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
> initializing it with a function that sets it to an error return (don't use

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#91: FILE: arch/i386/kernel/signal.c:508:
 		switch (regs->eax) {
+		        case -ERESTART_RESTARTBLOCK:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: arch/i386/kernel/signal.c:509:
+^I^I        case -ERESTART_RESTARTBLOCK:$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: arch/i386/kernel/signal.c:510:
+^I^I^I^Icurrent_thread_info()->restart_block.fun = $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#104: FILE: arch/i386/kernel/signal.c:597:
+		if (regs->eax == -ERESTART_RESTARTBLOCK){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#125: FILE: include/asm-i386/thread_info.h:25:
+	long (*fun)(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#157: FILE: include/asm-i386/thread_info.h:71:
+extern asmlinkage long do_no_restart_syscall( void *parm);
                                                     ^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#157: FILE: include/asm-i386/thread_info.h:71:
+extern asmlinkage long do_no_restart_syscall( void *parm);

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#202: FILE: include/linux/signal.h:222:
+extern asmlinkage long do_no_restart_syscall( void *parm);
                                                     ^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#202: FILE: include/linux/signal.h:222:
+extern asmlinkage long do_no_restart_syscall( void *parm);

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#214: FILE: kernel/signal.c:1355:
+sys_restart_syscall( void *parm)
                            ^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#214: FILE: kernel/signal.c:1355:
+sys_restart_syscall( void *parm)

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#216: FILE: kernel/signal.c:1357:
+	return current_thread_info()->restart_block.fun(&parm);
 	                                                 ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#220: FILE: kernel/signal.c:1361:
+do_no_restart_syscall( void *parm)
                              ^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#220: FILE: kernel/signal.c:1361:
+do_no_restart_syscall( void *parm)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#225: FILE: kernel/signal.c:1366:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: kernel/timer.c:1024:
+^Istruct timespec *rqtp; $

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#241: FILE: kernel/timer.c:1028:
+asmlinkage long sys_nanosleep_restart( struct nano_sleep_call * parms);
                                                                 ^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#241: FILE: kernel/timer.c:1028:
+asmlinkage long sys_nanosleep_restart( struct nano_sleep_call * parms);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#241: FILE: kernel/timer.c:1028:
+asmlinkage long sys_nanosleep_restart( struct nano_sleep_call * parms);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#243: FILE: kernel/timer.c:1030:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: kernel/timer.c:1034:
+^Istruct  restart_block *restart_block = $

ERROR:SPACING: space required before the open brace '{'
#252: FILE: kernel/timer.c:1037:
+	if( restart_block->fun == (int (*)(void *))sys_nanosleep_restart){

ERROR:SPACING: space prohibited after that open parenthesis '('
#252: FILE: kernel/timer.c:1037:
+	if( restart_block->fun == (int (*)(void *))sys_nanosleep_restart){

ERROR:SPACING: space required before the open parenthesis '('
#252: FILE: kernel/timer.c:1037:
+	if( restart_block->fun == (int (*)(void *))sys_nanosleep_restart){

ERROR:SPACING: space required before the open parenthesis '('
#258: FILE: kernel/timer.c:1043:
+		if(!restart_block->arg0)

ERROR:SPACING: space required before the open parenthesis '('
#262: FILE: kernel/timer.c:1047:
+		if(expire <= 0)

ERROR:SPACING: space required before the open brace '{'
#264: FILE: kernel/timer.c:1049:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#264: FILE: kernel/timer.c:1049:
+	}else{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: kernel/timer.c:1050:
+^I^Iif ((t->tv_nsec >= 1000000000L) || $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 't->tv_nsec >= 1000000000L'
#265: FILE: kernel/timer.c:1050:
+		if ((t->tv_nsec >= 1000000000L) || 
+		    (t->tv_nsec < 0) || 
+		    (t->tv_sec < 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 't->tv_nsec < 0'
#265: FILE: kernel/timer.c:1050:
+		if ((t->tv_nsec >= 1000000000L) || 
+		    (t->tv_nsec < 0) || 
+		    (t->tv_sec < 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 't->tv_sec < 0'
#265: FILE: kernel/timer.c:1050:
+		if ((t->tv_nsec >= 1000000000L) || 
+		    (t->tv_nsec < 0) || 
+		    (t->tv_sec < 0))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: kernel/timer.c:1051:
+^I^I    (t->tv_nsec < 0) || $

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#299: FILE: kernel/timer.c:1087:
+asmlinkage long sys_nanosleep_restart( struct nano_sleep_call * parms)
                                                                 ^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#299: FILE: kernel/timer.c:1087:
+asmlinkage long sys_nanosleep_restart( struct nano_sleep_call * parms)

ERROR:SPACING: space prohibited after that open parenthesis '('
#299: FILE: kernel/timer.c:1087:
+asmlinkage long sys_nanosleep_restart( struct nano_sleep_call * parms)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000408851.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 10 warnings, 5 checks, 192 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000408851.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
