CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data1 != 0x67'
#119: FILE: drivers/media/dvb/frontends/tda1004x.c:338:
+	if ((data1 != 0x67) || (data2 != dspVersion))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data2 != dspVersion'
#119: FILE: drivers/media/dvb/frontends/tda1004x.c:338:
+	if ((data1 != 0x67) || (data2 != dspVersion))

CHECK:CAMELCASE: Avoid CamelCase: <dspVersion>
#119: FILE: drivers/media/dvb/frontends/tda1004x.c:338:
+	if ((data1 != 0x67) || (data2 != dspVersion))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#230: FILE: drivers/media/dvb/frontends/tda1004x.c:769:
+	msleep(10);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#475: FILE: drivers/media/dvb/frontends/tda1004x.c:1113:
+struct dvb_frontend* tda10045_attach(const struct tda1004x_config* config,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#475: FILE: drivers/media/dvb/frontends/tda1004x.c:1113:
+struct dvb_frontend* tda10045_attach(const struct tda1004x_config* config,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#476: FILE: drivers/media/dvb/frontends/tda1004x.c:1114:
+				     struct i2c_adapter* i2c)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*state)...) over kmalloc(sizeof(struct tda1004x_state)...)
#481: FILE: drivers/media/dvb/frontends/tda1004x.c:1119:
+	state = kmalloc(sizeof(struct tda1004x_state), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:CONST_STRUCT: struct dvb_frontend_ops should normally be const
#488: FILE: drivers/media/dvb/frontends/tda1004x.c:1126:
+	memcpy(&state->ops, &tda10045_ops, sizeof(struct dvb_frontend_ops));

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct dvb_frontend_ops should normally be const
#504: FILE: drivers/media/dvb/frontends/tda1004x.c:1142:
+static struct dvb_frontend_ops tda10046_ops = {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#512: FILE: drivers/media/dvb/frontends/tda1004x.c:1172:
+struct dvb_frontend* tda10046_attach(const struct tda1004x_config* config,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#512: FILE: drivers/media/dvb/frontends/tda1004x.c:1172:
+struct dvb_frontend* tda10046_attach(const struct tda1004x_config* config,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#513: FILE: drivers/media/dvb/frontends/tda1004x.c:1173:
+				     struct i2c_adapter* i2c)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*state)...) over kmalloc(sizeof(struct tda1004x_state)...)
#518: FILE: drivers/media/dvb/frontends/tda1004x.c:1178:
+	state = kmalloc(sizeof(struct tda1004x_state), GFP_KERNEL);

WARNING:CONST_STRUCT: struct dvb_frontend_ops should normally be const
#525: FILE: drivers/media/dvb/frontends/tda1004x.c:1185:
+	memcpy(&state->ops, &tda10046_ops, sizeof(struct dvb_frontend_ops));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000185029.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 4 warnings, 5 checks, 477 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000185029.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
