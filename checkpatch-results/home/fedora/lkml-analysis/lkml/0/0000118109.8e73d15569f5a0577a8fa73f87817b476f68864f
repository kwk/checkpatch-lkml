WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#84: FILE: include/linux/shmem_fs.h:47:
+int shmem_permission(struct inode *, int, struct nameidata *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#84: FILE: include/linux/shmem_fs.h:47:
+int shmem_permission(struct inode *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#84: FILE: include/linux/shmem_fs.h:47:
+int shmem_permission(struct inode *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#85: FILE: include/linux/shmem_fs.h:48:
+void shmem_acl_destroy_inode(struct inode *);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#92: FILE: include/linux/shmem_fs.h:55:
+}
+static inline int

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#102: FILE: include/linux/shmem_fs.h:65:
+}
+static inline int

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#107: FILE: include/linux/shmem_fs.h:70:
+}
+static inline int

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#143: FILE: mm/shmem.c:179:
+static struct inode_operations shmem_special_inode_operations;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#181: FILE: mm/shmem.c:1640:
+			iput(inode);
 			^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#295: FILE: mm/shmem.c:2195:
+static struct inode_operations shmem_special_inode_operations = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#312: FILE: mm/shmem_acl.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#313: FILE: mm/shmem_acl.c:2:
+ * mm/shmem_acl.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#331: FILE: mm/shmem_acl.c:20:
+	switch(type) {
+		case ACL_TYPE_ACCESS:
[...]
+		case ACL_TYPE_DEFAULT:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#331: FILE: mm/shmem_acl.c:20:
+	switch(type) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#349: FILE: mm/shmem_acl.c:38:
+	switch(type) {
+		case ACL_TYPE_ACCESS:
[...]
+		case ACL_TYPE_DEFAULT:

ERROR:SPACING: space required before the open parenthesis '('
#349: FILE: mm/shmem_acl.c:38:
+	switch(type) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#458: FILE: mm/shmem_acl.c:147:
+		int error = posix_acl_permission(inode, acl, mask);
+		posix_acl_release(acl);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#465: FILE: mm/shmem_acl.c:154:
+shmem_permission(struct inode *inode, int mask, struct nameidata *nd)
                                                                   ^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000118109.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 11 warnings, 3 checks, 403 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000118109.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
