CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#81: FILE: kernel/sys.c:113:
+int notifier_chain_register(struct notifier_head *nh,
+		struct notifier_block *n)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#100: FILE: kernel/sys.c:124:
+	n->next = nnext = *p;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: kernel/sys.c:150:
+int notifier_chain_unregister(struct notifier_head *nh,
+		struct notifier_block *n)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#250: FILE: include/linux/notifier.h:32:
+	spinlock_t lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#258: FILE: include/linux/notifier.h:40:
+#define DEFINE_NOTIFIER_HEAD(name) ^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#258: FILE: include/linux/notifier.h:40:
+#define DEFINE_NOTIFIER_HEAD(name) 	\
+		struct notifier_head name = NOTIFIER_HEAD_INIT(name)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#267: FILE: include/linux/notifier.h:46:
+extern int notifier_chain_register(struct notifier_head *nh,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: include/linux/notifier.h:47:
+extern int notifier_chain_register(struct notifier_head *nh,
+		struct notifier_block *n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#269: FILE: include/linux/notifier.h:48:
+extern int notifier_chain_unregister(struct notifier_head *nh,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: include/linux/notifier.h:49:
+extern int notifier_chain_unregister(struct notifier_head *nh,
+		struct notifier_block *n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#271: FILE: include/linux/notifier.h:50:
+extern int notifier_call_chain(struct notifier_head *nh,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: include/linux/notifier.h:51:
+extern int notifier_call_chain(struct notifier_head *nh,
+		unsigned long val, void *v);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000141586.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 1 warnings, 11 checks, 213 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000141586.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
