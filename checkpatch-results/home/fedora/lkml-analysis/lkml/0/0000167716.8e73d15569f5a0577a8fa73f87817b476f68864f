WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#33: FILE: drivers/pci/bus/device.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#42: FILE: drivers/pci/bus/device.c:10:
+#include "../pci.h" $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#51: FILE: drivers/pci/bus/device.c:19:
+void __devinit pci_bus_add_device(struct pci_dev *dev)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#63: FILE: drivers/pci/bus/device.c:31:
+EXPORT_SYMBOL_GPL(pci_bus_add_device);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#77: FILE: drivers/pci/bus/device.c:45:
+void __devinit pci_bus_add_devices(struct pci_bus *bus)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#92: FILE: drivers/pci/bus/device.c:60:
+	list_for_each_entry(dev, &bus->devices, bus_list) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#93: FILE: drivers/pci/bus/device.c:61:
+		BUG_ON(list_empty(&dev->global_list));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: drivers/pci/bus/device.c:73:
+^I^I^I} $

WARNING:LONG_LINE_STRING: line length of 103 exceeds 100 columns
#108: FILE: drivers/pci/bus/device.c:76:
+			sysfs_create_link(&dev->subordinate->class_dev.kobj, &dev->dev.kobj, "bridge");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#113: FILE: drivers/pci/bus/device.c:81:
+EXPORT_SYMBOL(pci_bus_add_devices);

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: drivers/pci/bus/device.c:87:
+ ^Imsi_remove_pci_irq_vectors(dev);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#119: FILE: drivers/pci/bus/device.c:87:
+ ^Imsi_remove_pci_irq_vectors(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: drivers/pci/bus/device.c:87:
+ ^Imsi_remove_pci_irq_vectors(dev);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#124: FILE: drivers/pci/bus/device.c:92:
+		struct resource *res = dev->resource + i;
+		if (res->parent)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#137: FILE: drivers/pci/bus/device.c:105:
+		dev->global_list.next = dev->global_list.prev = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#142: FILE: drivers/pci/bus/device.c:110:
+	 * list accesses from this device */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#145: FILE: drivers/pci/bus/device.c:113:
+	dev->bus_list.next = dev->bus_list.prev = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: drivers/pci/bus/device.c:124:
+ * Delete the device structure from the device lists and $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#169: FILE: drivers/pci/bus/device.c:137:
+EXPORT_SYMBOL(pci_remove_device_safe);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#196: FILE: drivers/pci/bus/device.c:164:
+EXPORT_SYMBOL(pci_remove_bus_device);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#219: FILE: drivers/pci/bus/device.c:187:
+EXPORT_SYMBOL(pci_remove_behind_bridge);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000167716.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 14 warnings, 3 checks, 281 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000167716.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
