WARNING:TYPO_SPELLING: 'responce' may be misspelled - perhaps 'response'?
#32: 
I ll be glad for any responce....
                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#49: FILE: drivers/char/Kconfig:812:
+config RS5C372_RTC
+	tristate "RS5C372 Real Time Clock"
+	depends on I2C
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#69: FILE: drivers/char/rs5c372.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: drivers/char/rs5c372.c:7:
+ *^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#98: FILE: drivers/char/rs5c372.c:30:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#105: FILE: drivers/char/rs5c372.c:37:
+#define RS5C372_RAM_SIZE ^I0x10$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#135: FILE: drivers/char/rs5c372.c:67:
+#define BCD_TO_BIN(val) (((val)&15) + ((val)>>4)*10)
                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#135: FILE: drivers/char/rs5c372.c:67:
+#define BCD_TO_BIN(val) (((val)&15) + ((val)>>4)*10)
                                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#135: FILE: drivers/char/rs5c372.c:67:
+#define BCD_TO_BIN(val) (((val)&15) + ((val)>>4)*10)
                                                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#135: FILE: drivers/char/rs5c372.c:67:
+#define BCD_TO_BIN(val) (((val)&15) + ((val)>>4)*10)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#136: FILE: drivers/char/rs5c372.c:68:
+#define BIN_TO_BCD(val) ((((val)/10)<<4) + (val)%10)
                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#136: FILE: drivers/char/rs5c372.c:68:
+#define BIN_TO_BCD(val) ((((val)/10)<<4) + (val)%10)
                                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#136: FILE: drivers/char/rs5c372.c:68:
+#define BIN_TO_BCD(val) ((((val)/10)<<4) + (val)%10)
                                                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#136: FILE: drivers/char/rs5c372.c:68:
+#define BIN_TO_BCD(val) ((((val)/10)<<4) + (val)%10)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#137: FILE: drivers/char/rs5c372.c:69:
+#define HOURS_24(n)		BCD_TO_BIN((n)&0x3F)
                    		              ^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#142: FILE: drivers/char/rs5c372.c:74:
+struct i2c_client *rs5c372_i2c_client = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:SPACING: Unnecessary space before function pointer arguments
#143: FILE: drivers/char/rs5c372.c:75:
+extern int (*set_rtc) (void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#143: FILE: drivers/char/rs5c372.c:75:
+extern int (*set_rtc) (void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#145: FILE: drivers/char/rs5c372.c:77:
+static unsigned short ignore[]^I= ^I{ I2C_CLIENT_END };$

WARNING:INDENTED_LABEL: labels should not be indented
#149: FILE: drivers/char/rs5c372.c:81:
+      normal_i2c:normal_addr,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#150: FILE: drivers/char/rs5c372.c:82:
+      normal_i2c_range:ignore,
                       ^

WARNING:INDENTED_LABEL: labels should not be indented
#150: FILE: drivers/char/rs5c372.c:82:
+      normal_i2c_range:ignore,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#151: FILE: drivers/char/rs5c372.c:83:
+      probe:ignore,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#151: FILE: drivers/char/rs5c372.c:83:
+      probe:ignore,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#152: FILE: drivers/char/rs5c372.c:84:
+      probe_range:ignore,
                  ^

WARNING:INDENTED_LABEL: labels should not be indented
#152: FILE: drivers/char/rs5c372.c:84:
+      probe_range:ignore,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#153: FILE: drivers/char/rs5c372.c:85:
+      ignore:ignore,
             ^

WARNING:INDENTED_LABEL: labels should not be indented
#153: FILE: drivers/char/rs5c372.c:85:
+      ignore:ignore,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#154: FILE: drivers/char/rs5c372.c:86:
+      ignore_range:ignore,
                   ^

WARNING:INDENTED_LABEL: labels should not be indented
#154: FILE: drivers/char/rs5c372.c:86:
+      ignore_range:ignore,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#155: FILE: drivers/char/rs5c372.c:87:
+      force:ignore,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#155: FILE: drivers/char/rs5c372.c:87:
+      force:ignore,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: drivers/char/rs5c372.c:91:
+static int rs5c372_rtc_ioctl(struct inode *, struct file *, unsigned int,
+			      unsigned long);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#164: FILE: drivers/char/rs5c372.c:96:
+static struct file_operations rtc_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#165: FILE: drivers/char/rs5c372.c:97:
+      owner:THIS_MODULE,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#166: FILE: drivers/char/rs5c372.c:98:
+      ioctl:rs5c372_rtc_ioctl,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#166: FILE: drivers/char/rs5c372.c:98:
+      ioctl:rs5c372_rtc_ioctl,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#167: FILE: drivers/char/rs5c372.c:99:
+      open:rs5c372_rtc_open,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#167: FILE: drivers/char/rs5c372.c:99:
+      open:rs5c372_rtc_open,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#168: FILE: drivers/char/rs5c372.c:100:
+      release:rs5c372_rtc_release,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#168: FILE: drivers/char/rs5c372.c:100:
+      release:rs5c372_rtc_release,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#171: FILE: drivers/char/rs5c372.c:103:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: drivers/char/rs5c372.c:113:
+static int rs5c372_command(struct i2c_client *client, unsigned int cmd,
+			    void *arg);

WARNING:INDENTED_LABEL: labels should not be indented
#183: FILE: drivers/char/rs5c372.c:115:
+      name:"rs5c372",

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#184: FILE: drivers/char/rs5c372.c:116:
+      id:I2C_DRIVERID_RS5C372,
         ^

WARNING:INDENTED_LABEL: labels should not be indented
#184: FILE: drivers/char/rs5c372.c:116:
+      id:I2C_DRIVERID_RS5C372,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#185: FILE: drivers/char/rs5c372.c:117:
+      flags:I2C_DF_NOTIFY,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#185: FILE: drivers/char/rs5c372.c:117:
+      flags:I2C_DF_NOTIFY,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#186: FILE: drivers/char/rs5c372.c:118:
+      attach_adapter:rs5c372_probe,
                     ^

WARNING:INDENTED_LABEL: labels should not be indented
#186: FILE: drivers/char/rs5c372.c:118:
+      attach_adapter:rs5c372_probe,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#187: FILE: drivers/char/rs5c372.c:119:
+      detach_client:rs5c372_detach,
                    ^

WARNING:INDENTED_LABEL: labels should not be indented
#187: FILE: drivers/char/rs5c372.c:119:
+      detach_client:rs5c372_detach,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#188: FILE: drivers/char/rs5c372.c:120:
+      command:rs5c372_command
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#188: FILE: drivers/char/rs5c372.c:120:
+      command:rs5c372_command

WARNING:SPACING: Unnecessary space before function pointer arguments
#191: FILE: drivers/char/rs5c372.c:123:
+extern int (*set_rtc) (void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#191: FILE: drivers/char/rs5c372.c:123:
+extern int (*set_rtc) (void);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: drivers/char/rs5c372.c:145:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#228: FILE: drivers/char/rs5c372.c:160:
+	buf[0]=0x00;
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#229: FILE: drivers/char/rs5c372.c:161:
+	buf[4]=0x01;
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#230: FILE: drivers/char/rs5c372.c:162:
+	buf[5]=0x01;
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#231: FILE: drivers/char/rs5c372.c:163:
+	buf[6]=0x01;
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#232: FILE: drivers/char/rs5c372.c:164:
+	buf[7]=0x01;
 	      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: drivers/char/rs5c372.c:165:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#234: FILE: drivers/char/rs5c372.c:166:
+	buf[0xF]=0x00;
 	        ^

CHECK:CAMELCASE: Avoid CamelCase: <xF>
#234: FILE: drivers/char/rs5c372.c:166:
+	buf[0xF]=0x00;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#235: FILE: drivers/char/rs5c372.c:167:
+	buf[0x10]= 0x20; // 24 hour format ADJ=0
 	         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#240: FILE: drivers/char/rs5c372.c:172:
+	unsigned char buf[RS5C372_RAM_SIZE+1];
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#243: FILE: drivers/char/rs5c372.c:175:
+		{rs5c372_i2c_client->addr, 1,RS5C372_RAM_SIZE+1, buf}
 		                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#243: FILE: drivers/char/rs5c372.c:175:
+		{rs5c372_i2c_client->addr, 1,RS5C372_RAM_SIZE+1, buf}
 		                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#246: FILE: drivers/char/rs5c372.c:178:
+	buf[0]=0x00;
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#250: FILE: drivers/char/rs5c372.c:182:
+		int i;
+		for(i=0;i<2*RS5C372_RAM_SIZE;i++){

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#250: FILE: drivers/char/rs5c372.c:182:
+		for(i=0;i<2*RS5C372_RAM_SIZE;i++){
 		     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#250: FILE: drivers/char/rs5c372.c:182:
+		for(i=0;i<2*RS5C372_RAM_SIZE;i++){
 		       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#250: FILE: drivers/char/rs5c372.c:182:
+		for(i=0;i<2*RS5C372_RAM_SIZE;i++){
 		         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#250: FILE: drivers/char/rs5c372.c:182:
+		for(i=0;i<2*RS5C372_RAM_SIZE;i++){
 		           ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#250: FILE: drivers/char/rs5c372.c:182:
+		for(i=0;i<2*RS5C372_RAM_SIZE;i++){
 		                            ^

ERROR:SPACING: space required before the open brace '{'
#250: FILE: drivers/char/rs5c372.c:182:
+		for(i=0;i<2*RS5C372_RAM_SIZE;i++){

ERROR:SPACING: space required before the open parenthesis '('
#250: FILE: drivers/char/rs5c372.c:182:
+		for(i=0;i<2*RS5C372_RAM_SIZE;i++){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#250: FILE: drivers/char/rs5c372.c:182:
+		for(i=0;i<2*RS5C372_RAM_SIZE;i++){
+			printk("%02X ", buf[i]);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#251: FILE: drivers/char/rs5c372.c:183:
+			printk("%02X ", buf[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#253: FILE: drivers/char/rs5c372.c:185:
+		printk("RS5C372 RTclock\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#254: FILE: drivers/char/rs5c372.c:186:
+		printk("Seconds: %d ",BCD_TO_BIN(buf[1]));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#254: FILE: drivers/char/rs5c372.c:186:
+		printk("Seconds: %d ",BCD_TO_BIN(buf[1]));
 		                     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#255: FILE: drivers/char/rs5c372.c:187:
+		printk("Minutes: %d ",BCD_TO_BIN(buf[2]));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#255: FILE: drivers/char/rs5c372.c:187:
+		printk("Minutes: %d ",BCD_TO_BIN(buf[2]));
 		                     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#256: FILE: drivers/char/rs5c372.c:188:
+		printk("Hours: %d ",BCD_TO_BIN(buf[3]& 0x1F));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#256: FILE: drivers/char/rs5c372.c:188:
+		printk("Hours: %d ",BCD_TO_BIN(buf[3]& 0x1F));
 		                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxW)
#256: FILE: drivers/char/rs5c372.c:188:
+		printk("Hours: %d ",BCD_TO_BIN(buf[3]& 0x1F));
 		                                     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#257: FILE: drivers/char/rs5c372.c:189:
+		printk("Weekdays: %d ",BCD_TO_BIN(buf[4]));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#257: FILE: drivers/char/rs5c372.c:189:
+		printk("Weekdays: %d ",BCD_TO_BIN(buf[4]));
 		                      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#258: FILE: drivers/char/rs5c372.c:190:
+		printk("Days: %d ",BCD_TO_BIN(buf[5]));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#258: FILE: drivers/char/rs5c372.c:190:
+		printk("Days: %d ",BCD_TO_BIN(buf[5]));
 		                  ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#259: FILE: drivers/char/rs5c372.c:191:
+		printk("Months: %d ",BCD_TO_BIN(buf[6]));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#259: FILE: drivers/char/rs5c372.c:191:
+		printk("Months: %d ",BCD_TO_BIN(buf[6]));
 		                    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#260: FILE: drivers/char/rs5c372.c:192:
+		printk("Years: %d\n",BCD_TO_BIN(buf[7]));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#260: FILE: drivers/char/rs5c372.c:192:
+		printk("Years: %d\n",BCD_TO_BIN(buf[7]));
 		                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: drivers/char/rs5c372.c:193:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: drivers/char/rs5c372.c:201:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#270: FILE: drivers/char/rs5c372.c:202:
+	if (!(c = kmalloc(sizeof(struct i2c_client), GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#270: FILE: drivers/char/rs5c372.c:202:
+	if (!(c = kmalloc(sizeof(struct i2c_client), GFP_KERNEL))) {
+		return -ENOMEM;
+	}

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*c)...) over kmalloc(sizeof(struct i2c_client)...)
#270: FILE: drivers/char/rs5c372.c:202:
+	if (!(c = kmalloc(sizeof(struct i2c_client), GFP_KERNEL))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: drivers/char/rs5c372.c:208:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: drivers/char/rs5c372.c:214:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: drivers/char/rs5c372.c:218:
+	rs5c372_command(rs5c372_i2c_client, RS5C372_GETDATETIME,
+		(void *)&rtctm);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: drivers/char/rs5c372.c:222:
+	xtime.tv_sec = mktime(1900 + rtctm.tm_year, rtctm.tm_mon + 1,
+		rtctm.tm_mday, rtctm.tm_hour, rtctm.tm_min, rtctm.tm_sec);

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: drivers/char/rs5c372.c:225:
+        wall_to_monotonic.tv_sec = -xtime.tv_sec;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: drivers/char/rs5c372.c:225:
+        wall_to_monotonic.tv_sec = -xtime.tv_sec;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: drivers/char/rs5c372.c:226:
+        wall_to_monotonic.tv_nsec = -xtime.tv_nsec;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: drivers/char/rs5c372.c:226:
+        wall_to_monotonic.tv_nsec = -xtime.tv_nsec;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#295: FILE: drivers/char/rs5c372.c:227:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#295: FILE: drivers/char/rs5c372.c:227:
+                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: drivers/char/rs5c372.c:227:
+                $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#297: FILE: drivers/char/rs5c372.c:229:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#299: FILE: drivers/char/rs5c372.c:231:
+		printk(KERN_ERR "rs5c372: Attach was not ok!\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#315: FILE: drivers/char/rs5c372.c:247:
+		client = rs5c372_i2c_client = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#320: FILE: drivers/char/rs5c372.c:252:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: drivers/char/rs5c372.c:263:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#335: FILE: drivers/char/rs5c372.c:267:
+	dt->tm_year = BCD_TO_BIN(buf[7])+100;
 	                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: drivers/char/rs5c372.c:268:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#338: FILE: drivers/char/rs5c372.c:270:
+	printk("rs5c372_get_datetime: year = %d\n", dt->tm_year);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#339: FILE: drivers/char/rs5c372.c:271:
+	printk("rs5c372_get_datetime: mon  = %d\n", dt->tm_mon);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#340: FILE: drivers/char/rs5c372.c:272:
+	printk("rs5c372_get_datetime: mday = %d\n", dt->tm_mday);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#341: FILE: drivers/char/rs5c372.c:273:
+	printk("rs5c372_get_datetime: hour = %d\n", dt->tm_hour);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#342: FILE: drivers/char/rs5c372.c:274:
+	printk("rs5c372_get_datetime: min  = %d\n", dt->tm_min);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#343: FILE: drivers/char/rs5c372.c:275:
+	printk("rs5c372_get_datetime: sec  = %d\n", dt->tm_sec);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: drivers/char/rs5c372.c:276:
+#endif^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#349: FILE: drivers/char/rs5c372.c:281:
+	unsigned char buf[RS5C372_RAM_SIZE+1];
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#352: FILE: drivers/char/rs5c372.c:284:
+	ret = rs5c372_read(buf,RS5C372_RAM_SIZE+1);
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#352: FILE: drivers/char/rs5c372.c:284:
+	ret = rs5c372_read(buf,RS5C372_RAM_SIZE+1);
 	                                       ^

CHECK:BRACES: Unbalanced braces around else statement
#356: FILE: drivers/char/rs5c372.c:288:
+	} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#357: FILE: drivers/char/rs5c372.c:289:
+		printk("rs5c372_get_datetime(), i2c_transfer() returned %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rs5c372_get_datetime', this function's name, in a string
#357: FILE: drivers/char/rs5c372.c:289:
+		printk("rs5c372_get_datetime(), i2c_transfer() returned %d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#362: FILE: drivers/char/rs5c372.c:294:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#363: FILE: drivers/char/rs5c372.c:295:
+static int rs5c372_set_datetime(struct i2c_client *client, struct rtc_time *dt,int datetoo)
                                                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#365: FILE: drivers/char/rs5c372.c:297:
+	unsigned char buf[RS5C372_RAM_SIZE+1];
 	                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#367: FILE: drivers/char/rs5c372.c:299:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#368: FILE: drivers/char/rs5c372.c:300:
+#ifdef DEBUG^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#369: FILE: drivers/char/rs5c372.c:301:
+	printk("rs5c372_set_datetime: tm_year = %d\n", dt->tm_year);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rs5c372_set_datetime', this function's name, in a string
#369: FILE: drivers/char/rs5c372.c:301:
+	printk("rs5c372_set_datetime: tm_year = %d\n", dt->tm_year);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#370: FILE: drivers/char/rs5c372.c:302:
+	printk("rs5c372_set_datetime: tm_mon  = %d\n", dt->tm_mon);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rs5c372_set_datetime', this function's name, in a string
#370: FILE: drivers/char/rs5c372.c:302:
+	printk("rs5c372_set_datetime: tm_mon  = %d\n", dt->tm_mon);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#371: FILE: drivers/char/rs5c372.c:303:
+	printk("rs5c372_set_datetime: tm_mday = %d\n", dt->tm_mday);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rs5c372_set_datetime', this function's name, in a string
#371: FILE: drivers/char/rs5c372.c:303:
+	printk("rs5c372_set_datetime: tm_mday = %d\n", dt->tm_mday);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#372: FILE: drivers/char/rs5c372.c:304:
+	printk("rs5c372_set_datetime: tm_hour = %d\n", dt->tm_hour);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rs5c372_set_datetime', this function's name, in a string
#372: FILE: drivers/char/rs5c372.c:304:
+	printk("rs5c372_set_datetime: tm_hour = %d\n", dt->tm_hour);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#373: FILE: drivers/char/rs5c372.c:305:
+	printk("rs5c372_set_datetime: tm_min  = %d\n", dt->tm_min);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rs5c372_set_datetime', this function's name, in a string
#373: FILE: drivers/char/rs5c372.c:305:
+	printk("rs5c372_set_datetime: tm_min  = %d\n", dt->tm_min);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#374: FILE: drivers/char/rs5c372.c:306:
+	printk("rs5c372_set_datetime: tm_sec  = %d\n", dt->tm_sec);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rs5c372_set_datetime', this function's name, in a string
#374: FILE: drivers/char/rs5c372.c:306:
+	printk("rs5c372_set_datetime: tm_sec  = %d\n", dt->tm_sec);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: drivers/char/rs5c372.c:307:
+#endif^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#386: FILE: drivers/char/rs5c372.c:318:
+^I^Ibuf[6] = (BIN_TO_BCD(dt->tm_mon + 1)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: drivers/char/rs5c372.c:322:
+^Iret = rs5c372_write(buf,len);^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#390: FILE: drivers/char/rs5c372.c:322:
+	ret = rs5c372_write(buf,len);	
 	                       ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rs5c372_set_datetime', this function's name, in a string
#395: FILE: drivers/char/rs5c372.c:327:
+		    ("rs5c372_set_datetime(), i2c_master_send() returned %d\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#420: FILE: drivers/char/rs5c372.c:352:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#427: FILE: drivers/char/rs5c372.c:359:
+static int rs5c372_rtc_ioctl(struct inode *inode, struct file *file,
+		   unsigned int cmd, unsigned long arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#455: FILE: drivers/char/rs5c372.c:387:
+		rs5c372_command(rs5c372_i2c_client, RS5C372_GETDATETIME,
+				 &wtime);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#475: FILE: drivers/char/rs5c372.c:407:
+		rs5c372_command(rs5c372_i2c_client, RS5C372_SETDATETIME,
+				 &wtime);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#506: FILE: drivers/char/rs5c372.c:438:
+
+

WARNING:TYPO_SPELLING: 'Perfoming' may be misspelled - perhaps 'Performing'?
#510: FILE: drivers/char/rs5c372.c:442:
+	// Perfoming reset to defaults
 	   ^^^^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#512: FILE: drivers/char/rs5c372.c:444:
+	unsigned char buf[RS5C372_RAM_SIZE+1];
 	                                  ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#513: FILE: drivers/char/rs5c372.c:445:
+	unsigned char buf[RS5C372_RAM_SIZE+1];
+	memset(buf,0,RS5C372_RAM_SIZE+1);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#513: FILE: drivers/char/rs5c372.c:445:
+	memset(buf,0,RS5C372_RAM_SIZE+1);
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#513: FILE: drivers/char/rs5c372.c:445:
+	memset(buf,0,RS5C372_RAM_SIZE+1);
 	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#513: FILE: drivers/char/rs5c372.c:445:
+	memset(buf,0,RS5C372_RAM_SIZE+1);
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#515: FILE: drivers/char/rs5c372.c:447:
+	rs5c372_write(buf,RS5C372_RAM_SIZE+1);
 	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#515: FILE: drivers/char/rs5c372.c:447:
+	rs5c372_write(buf,RS5C372_RAM_SIZE+1);
 	                                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#520: FILE: drivers/char/rs5c372.c:452:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#524: FILE: drivers/char/rs5c372.c:456:
+	struct proc_dir_entry *res=NULL;
 	                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: drivers/char/rs5c372.c:457:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#526: FILE: drivers/char/rs5c372.c:458:
+	
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#530: FILE: drivers/char/rs5c372.c:462:
+		res=create_proc_entry(PROC_RS5C372_NAME, 0, 0);
 		   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#532: FILE: drivers/char/rs5c372.c:464:
+			res->write_proc=rs5c372_rtc_write_proc;
 			               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#533: FILE: drivers/char/rs5c372.c:465:
+			res->data=NULL;
 			         ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#536: FILE: drivers/char/rs5c372.c:468:
+		printk("I2C: rs5c372 RTC driver successfully loaded\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#549: FILE: drivers/char/rs5c372.c:481:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#554: FILE: drivers/char/rs5c372.c:486:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000181139.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 55 errors, 67 warnings, 55 checks, 508 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000181139.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
