WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#45: 
              Signed-off-by: Alex Aizman <itn780@yahoo.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#46: 
              Signed-off-by: Dmitry Yusupov <dmitry_yus@yahoo.com>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#61: FILE: drivers/scsi/iscsi_if.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPLIT_STRING: quoted string split across lines
#93: FILE: drivers/scsi/iscsi_if.c:33:
+MODULE_AUTHOR("Dmitry Yusupov <dmitry_yus@yahoo.com>, "
+	      "Alex Aizman <itn780@yahoo.com>");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#104: FILE: drivers/scsi/iscsi_if.c:44:
+	volatile int allocated;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#109: FILE: drivers/scsi/iscsi_if.c:49:
+	spinlock_t freelock;

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_zp' - possible side-effects?
#131: FILE: drivers/scsi/iscsi_if.c:71:
+#define zone_init(_zp, _zone) ({ \
+	(_zp)->pool = mempool_create(Z_MAX_##_zone, \
+			mempool_zone_alloc_skb, mempool_zone_free_skb, \
+			(void*)(_zp)); \
+	if ((_zp)->pool) { \
+		(_zp)->max = Z_MAX_##_zone; \
+		(_zp)->size = Z_SIZE_##_zone; \
+		(_zp)->hiwat = Z_HIWAT_##_zone; \
+		INIT_LIST_HEAD(&(_zp)->freequeue); \
+		spin_lock_init(&(_zp)->freelock); \
+		(_zp)->allocated = 0; \
+	} \
+	(_zp)->pool; \
+})

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#134: FILE: drivers/scsi/iscsi_if.c:74:
+			(void*)(_zp)); \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#151: FILE: drivers/scsi/iscsi_if.c:91:
+	volatile int active;

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#152: FILE: drivers/scsi/iscsi_if.c:92:
+	struct Scsi_Host *host;		/* originated shost */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#158: FILE: drivers/scsi/iscsi_if.c:98:
+};
+LIST_HEAD(cnxlist);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#159: FILE: drivers/scsi/iscsi_if.c:99:
+spinlock_t cnxlock;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#168: FILE: drivers/scsi/iscsi_if.c:108:
+};
+LIST_HEAD(snxlist);

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#169: FILE: drivers/scsi/iscsi_if.c:109:
+spinlock_t snxlock;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#175: FILE: drivers/scsi/iscsi_if.c:115:
+iscsi_if_find_cnx(uint64_t key, int type)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#215: FILE: drivers/scsi/iscsi_if.c:155:
+	for (i=0; i < ISCSI_TRANSPORT_MAX; i++) {
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#216: FILE: drivers/scsi/iscsi_if.c:156:
+		if (transport_table[i] == t) {
+			return i;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#227: FILE: drivers/scsi/iscsi_if.c:167:
+iscsi_if_get_##_field (struct scsi_target *stgt)			\

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#233: FILE: drivers/scsi/iscsi_if.c:173:
+		uint32_t value = 0;					\

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#284: FILE: drivers/scsi/iscsi_if.c:224:
+			list_del((void*)&skb->cb);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#287: FILE: drivers/scsi/iscsi_if.c:227:
+			BUG_ON(zone->allocated < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#298: FILE: drivers/scsi/iscsi_if.c:238:
+	if (zone->allocated < zone->max) {
[...]
+	} else
[...]

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#300: FILE: drivers/scsi/iscsi_if.c:240:
+		BUG_ON(!skb);

CHECK:BRACES: Unbalanced braces around else statement
#302: FILE: drivers/scsi/iscsi_if.c:242:
+	} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#318: FILE: drivers/scsi/iscsi_if.c:258:
+		printk("iscsi: can not unicast skb (%d)\n", rc);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#323: FILE: drivers/scsi/iscsi_if.c:263:
+	list_add((void*)&skb->cb, &zone->freequeue);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: drivers/scsi/iscsi_if.c:270:
+int iscsi_recv_pdu(iscsi_cnx_t cp_cnx, struct iscsi_hdr *hdr,
+				char *data, uint32_t data_size)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#342: FILE: drivers/scsi/iscsi_if.c:282:
+	BUG_ON(!cnx);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#349: FILE: drivers/scsi/iscsi_if.c:289:
+		printk("iscsi%d: can not deliver control PDU: OOM\n",

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#362: FILE: drivers/scsi/iscsi_if.c:302:
+	pdu = (char*)ev + sizeof(*ev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#381: FILE: drivers/scsi/iscsi_if.c:321:
+	BUG_ON(!cnx);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#387: FILE: drivers/scsi/iscsi_if.c:327:
+		printk("iscsi%d: gracefully ignored cnx error (%d)\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#403: FILE: drivers/scsi/iscsi_if.c:343:
+	printk("iscsi%d: detected cnx error (%d)\n", cnx->host->host_no, error);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#409: FILE: drivers/scsi/iscsi_if.c:349:
+iscsi_if_send_reply(int pid, int seq, int type, int done, int multi,
+		      void *payload, int size)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#424: FILE: drivers/scsi/iscsi_if.c:364:
+	BUG_ON(!skb);

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_t' - possible side-effects?
#444: FILE: drivers/scsi/iscsi_if.c:384:
+#define hostdata_privsize(_t)	(sizeof(unsigned long) + _t->hostdata_size + \
+				 _t->hostdata_size % sizeof(unsigned long) + \
+				 sizeof(struct iscsi_if_snx))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_t' may be better as '(_t)' to avoid precedence issues
#444: FILE: drivers/scsi/iscsi_if.c:384:
+#define hostdata_privsize(_t)	(sizeof(unsigned long) + _t->hostdata_size + \
+				 _t->hostdata_size % sizeof(unsigned long) + \
+				 sizeof(struct iscsi_if_snx))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#448: FILE: drivers/scsi/iscsi_if.c:388:
+#define hostdata_snx(_hostdata)	((void*)_hostdata + sizeof(unsigned long) + \

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_hostdata' - possible side-effects?
#448: FILE: drivers/scsi/iscsi_if.c:388:
+#define hostdata_snx(_hostdata)	((void*)_hostdata + sizeof(unsigned long) + \
+			((struct iscsi_transport *) \
+			 iscsi_ptr(*(uint64_t *)_hostdata))->hostdata_size)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_hostdata' may be better as '(_hostdata)' to avoid precedence issues
#448: FILE: drivers/scsi/iscsi_if.c:388:
+#define hostdata_snx(_hostdata)	((void*)_hostdata + sizeof(unsigned long) + \
+			((struct iscsi_transport *) \
+			 iscsi_ptr(*(uint64_t *)_hostdata))->hostdata_size)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#467: FILE: drivers/scsi/iscsi_if.c:407:
+		printk("iscsi: can not allocate SCSI host for session %p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: drivers/scsi/iscsi_if.c:408:
+		printk("iscsi: can not allocate SCSI host for session %p\n",
+			iscsi_ptr(ev->u.c_session.session_handle));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#481: FILE: drivers/scsi/iscsi_if.c:421:
+	*(uint64_t*)host->hostdata = ev->transport_handle;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#483: FILE: drivers/scsi/iscsi_if.c:423:
+	ev->r.c_session_ret.handle = transport->create_session(

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#506: FILE: drivers/scsi/iscsi_if.c:446:
+		printk("iscsi%d: can not add host (%d)\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#536: FILE: drivers/scsi/iscsi_if.c:476:
+			printk("iscsi%d: can not destroy session: "

WARNING:SPLIT_STRING: quoted string split across lines
#537: FILE: drivers/scsi/iscsi_if.c:477:
+			printk("iscsi%d: can not destroy session: "
+			       "has active connection (%p)\n",

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*cnx)...) over kmalloc(sizeof(struct iscsi_if_cnx)...)
#580: FILE: drivers/scsi/iscsi_if.c:520:
+	cnx = kmalloc(sizeof(struct iscsi_if_cnx), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#588: FILE: drivers/scsi/iscsi_if.c:528:
+		printk("iscsi%d: can not allocate pdu zone for new cnx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#594: FILE: drivers/scsi/iscsi_if.c:534:
+		printk("iscsi%d: can not allocate error zone for new cnx\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#656: FILE: drivers/scsi/iscsi_if.c:596:
+		int i;
+		for (i=0; i < ISCSI_TRANSPORT_MAX; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#656: FILE: drivers/scsi/iscsi_if.c:596:
+		for (i=0; i < ISCSI_TRANSPORT_MAX; i++) {
 		      ^

CHECK:BRACES: Unbalanced braces around else statement
#663: FILE: drivers/scsi/iscsi_if.c:603:
+			} else

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#683: FILE: drivers/scsi/iscsi_if.c:623:
+		ev->r.retcode = transport->bind_cnx(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#692: FILE: drivers/scsi/iscsi_if.c:632:
+		ev->r.retcode = transport->set_param(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#699: FILE: drivers/scsi/iscsi_if.c:639:
+		ev->r.retcode = transport->start_cnx(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#711: FILE: drivers/scsi/iscsi_if.c:651:
+		ev->r.retcode = transport->send_pdu(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#713: FILE: drivers/scsi/iscsi_if.c:653:
+		       (struct iscsi_hdr*)((char*)ev + sizeof(*ev)),

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#713: FILE: drivers/scsi/iscsi_if.c:653:
+		       (struct iscsi_hdr*)((char*)ev + sizeof(*ev)),

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#714: FILE: drivers/scsi/iscsi_if.c:654:
+		       (char*)ev + sizeof(*ev) + ev->u.send_pdu.hdr_size,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#727: FILE: drivers/scsi/iscsi_if.c:667:
+ * discarded silently.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#737: FILE: drivers/scsi/iscsi_if.c:677:
+			uint32_t rlen;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#756: FILE: drivers/scsi/iscsi_if.c:696:
+				err = iscsi_if_send_reply(

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#773: FILE: drivers/scsi/iscsi_if.c:713:
+	BUG_ON(!t);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#774: FILE: drivers/scsi/iscsi_if.c:714:
+	for (i=0; i < ISCSI_TRANSPORT_MAX; i++) {
 	      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#779: FILE: drivers/scsi/iscsi_if.c:719:
+			printk("iscsi: registered transport (%d - %s)\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#792: FILE: drivers/scsi/iscsi_if.c:732:
+	BUG_ON(!t);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#799: FILE: drivers/scsi/iscsi_if.c:739:
+	BUG_ON (id < 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#799: FILE: drivers/scsi/iscsi_if.c:739:
+	BUG_ON (id < 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#808: FILE: drivers/scsi/iscsi_if.c:748:
+                 unsigned long event, void *ptr)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#808: FILE: drivers/scsi/iscsi_if.c:748:
+iscsi_rcv_nl_event(struct notifier_block *this,
+                 unsigned long event, void *ptr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#808: FILE: drivers/scsi/iscsi_if.c:748:
+                 unsigned long event, void *ptr)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nls"
#841: FILE: drivers/scsi/iscsi_if.c:781:
+	if (nls == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#860: FILE: drivers/scsi/iscsi_if.c:800:
+	printk(KERN_INFO "Open-iSCSI Interface, version "

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000190920.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 32 warnings, 29 checks, 818 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000190920.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
