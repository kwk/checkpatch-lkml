CHECK:LINE_SPACING: Please don't use multiple blank lines
#71: FILE: security/stacker.c:982:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#82: FILE: security/stacker.c:992:
+					value+len, size-len);
 					     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#82: FILE: security/stacker.c:992:
+					value+len, size-len);
 					               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#95: FILE: security/stacker.c:1005:
+		if (len+m->namelen+4 < size) {
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#95: FILE: security/stacker.c:1005:
+		if (len+m->namelen+4 < size) {
 		                  ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#97: FILE: security/stacker.c:1007:
+			char *v = value;
+			if (v[len-1]=='\n')

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#97: FILE: security/stacker.c:1007:
+			if (v[len-1]=='\n')
 			         ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#97: FILE: security/stacker.c:1007:
+			if (v[len-1]=='\n')
 			            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#99: FILE: security/stacker.c:1009:
+			len += sprintf(value+len, " (%s)\n", m->module_name);
 			                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#143: FILE: security/stacker.c:1050:
+	if (dsize && realv[dsize-1] == '\n')
 	                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#146: FILE: security/stacker.c:1053:
+	if (!dsize || realv[dsize-1]!=')')
 	                         ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#146: FILE: security/stacker.c:1053:
+	if (!dsize || realv[dsize-1]!=')')
 	                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#150: FILE: security/stacker.c:1057:
+	loc = dsize-1;
 	           ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#151: FILE: security/stacker.c:1058:
+	while (loc && realv[loc]!='(')
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#156: FILE: security/stacker.c:1063:
+	callm = find_active_lsm(realv+loc+1, dsize-loc-1);
 	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#156: FILE: security/stacker.c:1063:
+	callm = find_active_lsm(realv+loc+1, dsize-loc-1);
 	                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#156: FILE: security/stacker.c:1063:
+	callm = find_active_lsm(realv+loc+1, dsize-loc-1);
 	                                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#156: FILE: security/stacker.c:1063:
+	callm = find_active_lsm(realv+loc+1, dsize-loc-1);
 	                                              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#160: FILE: security/stacker.c:1067:
+
+

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#162: FILE: security/stacker.c:1069:
+	while (loc && realv[loc]==' ')
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#165: FILE: security/stacker.c:1072:
+	end_data = loc+1;
 	              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#172: FILE: security/stacker.c:1078:
+			(size-end_data);
 			     ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000171429.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 1 warnings, 17 checks, 147 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000171429.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
