WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
ltt-statedump : Module reponsible for grabbing information thorough the kernel

WARNING:TYPO_SPELLING: 'reponsible' may be misspelled - perhaps 'responsible'?
#42: 
ltt-statedump : Module reponsible for grabbing information thorough the kernel
                       ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#57: FILE: ltt/ltt-control.c:1:
+/* ltt-control.c

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#64: FILE: ltt/ltt-control.c:8:
+ * ^IMathieu Desnoyers <mathieu.desnoyers@polymtl.ca>$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#92: FILE: ltt/ltt-control.c:36:
+	printk(KERN_DEBUG "ltt-control ltt_control_input\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ltt_control_input', this function's name, in a string
#92: FILE: ltt/ltt-control.c:36:
+	printk(KERN_DEBUG "ltt-control ltt_control_input\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#95: FILE: ltt/ltt-control.c:39:
+	while ((skb = skb_dequeue(&sk->sk_receive_queue)) != NULL) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#97: FILE: ltt/ltt-control.c:41:
+		if(security_netlink_recv(skb)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: ltt/ltt-control.c:49:
+^I^I/* process netlink message with header pointed by $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#108: FILE: ltt/ltt-control.c:52:
+		if(nlh->nlmsg_len !=

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#111: FILE: ltt/ltt-control.c:55:
+			printk(KERN_ALERT "ltt-control bad message length %d vs. %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: ltt/ltt-control.c:56:
+			printk(KERN_ALERT "ltt-control bad message length %d vs. %d\n",
+				nlh->nlmsg_len, sizeof(lttctl_peer_msg_t) +

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#118: FILE: ltt/ltt-control.c:62:
+		msg = (lttctl_peer_msg_t*)payload;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#120: FILE: ltt/ltt-control.c:64:
+		switch(msg->op) {
+			case OP_CREATE:
[...]
+			case OP_DESTROY:
[...]
+			case OP_START:
[...]
+			case OP_STOP:
[...]
+			default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#120: FILE: ltt/ltt-control.c:64:
+		switch(msg->op) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: ltt/ltt-control.c:67:
+				err = ltt_control(LTT_CONTROL_CREATE_TRACE,
+						msg->trace_name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: ltt/ltt-control.c:72:
+				err = ltt_control(LTT_CONTROL_DESTROY_TRACE,
+						msg->trace_name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: ltt/ltt-control.c:77:
+				err = ltt_control(LTT_CONTROL_START,
+						msg->trace_name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: ltt/ltt-control.c:82:
+				err = ltt_control(LTT_CONTROL_STOP,
+						msg->trace_name,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: ltt/ltt-control.c:87:
+^I^I^I^Iprintk(KERN_INFO $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#143: FILE: ltt/ltt-control.c:87:
+				printk(KERN_INFO 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#151: FILE: ltt/ltt-control.c:95:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#154: FILE: ltt/ltt-control.c:98:
+	printk(KERN_INFO "ltt-control init\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: ltt/ltt-control.c:101:
+	socket = netlink_kernel_create(NETLINK_LTT, 1,
+			ltt_control_input, THIS_MODULE);

ERROR:SPACING: space required before the open parenthesis '('
#158: FILE: ltt/ltt-control.c:102:
+	if(socket == NULL) return -EPERM;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#158: FILE: ltt/ltt-control.c:102:
+	if(socket == NULL) return -EPERM;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!socket"
#158: FILE: ltt/ltt-control.c:102:
+	if(socket == NULL) return -EPERM;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#159: FILE: ltt/ltt-control.c:103:
+	else return 0;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#164: FILE: ltt/ltt-control.c:108:
+	printk(KERN_INFO "ltt-control exit\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#168: FILE: ltt/ltt-control.c:112:
+
+

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#177: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#182: FILE: ltt/ltt-control.h:1:
+/* ltt-control.h

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#189: FILE: ltt/ltt-control.h:8:
+ * ^IMathieu Desnoyers <mathieu.desnoyers@polymtl.ca>$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#204: FILE: ltt/ltt-control.h:23:
+typedef struct lttctl_peer_msg {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#219: FILE: ltt/ltt-statedump.c:1:
+/* ltt-state-dump.c

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#252: FILE: ltt/ltt-statedump.c:34:
+extern int ltt_enumerate_modules(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: ltt/ltt-statedump.c:41:
+^Iif(dev->flags & IFF_UP) {^I$

ERROR:SPACING: space required before the open parenthesis '('
#259: FILE: ltt/ltt-statedump.c:41:
+	if(dev->flags & IFF_UP) {	

ERROR:SPACING: space required before the open parenthesis '('
#261: FILE: ltt/ltt-statedump.c:43:
+		if(in_dev) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ifa"
#263: FILE: ltt/ltt-statedump.c:45:
+					ifa != NULL;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#265: FILE: ltt/ltt-statedump.c:47:
+				trace_statedump_enumerate_network_ip_interface(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: ltt/ltt-statedump.c:50:
+^I^I^Iin_dev_put(in_dev);^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: ltt/ltt-statedump.c:54:
+		trace_statedump_enumerate_network_ip_interface(dev->name,
+					0, LTTNG_DOWN);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#279: FILE: ltt/ltt-statedump.c:61:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#281: FILE: ltt/ltt-statedump.c:63:
+	for(list=dev_base; list != NULL; list=list->next)
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#281: FILE: ltt/ltt-statedump.c:63:
+	for(list=dev_base; list != NULL; list=list->next)
 	                                     ^

ERROR:SPACING: space required before the open parenthesis '('
#281: FILE: ltt/ltt-statedump.c:63:
+	for(list=dev_base; list != NULL; list=list->next)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "list"
#281: FILE: ltt/ltt-statedump.c:63:
+	for(list=dev_base; list != NULL; list=list->next)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: ltt/ltt-statedump.c:66:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: ltt/ltt-statedump.c:71:
+static inline void ltt_enumerate_task_fd(struct task_struct *t,
+		char *tmp)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#292: FILE: ltt/ltt-statedump.c:74:
+	struct file * filp;
 	              ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#292: FILE: ltt/ltt-statedump.c:74:
+	struct file * filp;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: ltt/ltt-statedump.c:76:
+  char *path;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#296: FILE: ltt/ltt-statedump.c:78:
+	if (!t->files) return;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#300: FILE: ltt/ltt-statedump.c:82:
+	for (i=0; i < fdt->max_fds; i++) {
 	      ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#301: FILE: ltt/ltt-statedump.c:83:
+		filp = fcheck_files(t->files, i);
 		^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#302: FILE: ltt/ltt-statedump.c:84:
+		if (!filp) continue;
 		     ^^^^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#302: FILE: ltt/ltt-statedump.c:84:
+		if (!filp) continue;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: ltt/ltt-statedump.c:86:
+		path = d_path(filp->f_dentry,
+				filp->f_vfsmnt, tmp, PAGE_SIZE);

ERROR:SPACING: space required before the open parenthesis '('
#306: FILE: ltt/ltt-statedump.c:88:
+		if(IS_ERR(path))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#307: FILE: ltt/ltt-statedump.c:89:
+			trace_statedump_enumerate_file_descriptors(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#310: FILE: ltt/ltt-statedump.c:92:
+			trace_statedump_enumerate_file_descriptors(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#318: FILE: ltt/ltt-statedump.c:100:
+	struct task_struct * t = &init_task;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#319: FILE: ltt/ltt-statedump.c:101:
+	char *tmp = (char*)__get_free_page(GFP_KERNEL);

ERROR:SPACING: space required before the open parenthesis '('
#324: FILE: ltt/ltt-statedump.c:106:
+		if(t != &init_task) atomic_dec(&t->usage);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#324: FILE: ltt/ltt-statedump.c:106:
+		if(t != &init_task) atomic_dec(&t->usage);

ERROR:SPACING: space prohibited after that open parenthesis '('
#331: FILE: ltt/ltt-statedump.c:113:
+	} while( t != &init_task );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#331: FILE: ltt/ltt-statedump.c:113:
+	} while( t != &init_task );

ERROR:SPACING: space required before the open parenthesis '('
#331: FILE: ltt/ltt-statedump.c:113:
+	} while( t != &init_task );

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#339: FILE: ltt/ltt-statedump.c:121:
+	struct vm_area_struct *	map;

ERROR:SPACING: space required before the open parenthesis '('
#344: FILE: ltt/ltt-statedump.c:126:
+	if(!mm) return;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#344: FILE: ltt/ltt-statedump.c:126:
+	if(!mm) return;

ERROR:SPACING: space required before the open parenthesis '('
#347: FILE: ltt/ltt-statedump.c:129:
+	if(map) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#350: FILE: ltt/ltt-statedump.c:132:
+			if (map->vm_file) ino =

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#352: FILE: ltt/ltt-statedump.c:134:
+			else ino = 0;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#353: FILE: ltt/ltt-statedump.c:135:
+			trace_statedump_enumerate_vm_maps(

ERROR:POINTER_LOCATION: "foo *  bar" should be "foo *bar"
#369: FILE: ltt/ltt-statedump.c:151:
+	struct task_struct *  t = &init_task;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: ltt/ltt-statedump.c:152:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#373: FILE: ltt/ltt-statedump.c:155:
+		if(t != &init_task) atomic_dec(&t->usage);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#373: FILE: ltt/ltt-statedump.c:155:
+		if(t != &init_task) atomic_dec(&t->usage);

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: ltt/ltt-statedump.c:160:
+ ^I} while( t != &init_task );$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#378: FILE: ltt/ltt-statedump.c:160:
+ ^I} while( t != &init_task );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: ltt/ltt-statedump.c:160:
+ ^I} while( t != &init_task );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#378: FILE: ltt/ltt-statedump.c:160:
+ 	} while( t != &init_task );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#378: FILE: ltt/ltt-statedump.c:160:
+ 	} while( t != &init_task );

ERROR:SPACING: space required before the open parenthesis '('
#378: FILE: ltt/ltt-statedump.c:160:
+ 	} while( t != &init_task );

ERROR:SPACING: space prohibited after that open parenthesis '('
#382: FILE: ltt/ltt-statedump.c:164:
+#if defined( CONFIG_ARM )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#382: FILE: ltt/ltt-statedump.c:164:
+#if defined( CONFIG_ARM )

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#384: FILE: ltt/ltt-statedump.c:166:
+ * lock & irq_desc */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#393: FILE: ltt/ltt-statedump.c:175:
+	for(i=0; i<NR_IRQS; i++) {
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#393: FILE: ltt/ltt-statedump.c:175:
+	for(i=0; i<NR_IRQS; i++) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#393: FILE: ltt/ltt-statedump.c:175:
+	for(i=0; i<NR_IRQS; i++) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#394: FILE: ltt/ltt-statedump.c:176:
+		struct irqaction * action;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#397: FILE: ltt/ltt-statedump.c:179:
+		for (action=irq_desc[i].action; action; action=action->next)
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#397: FILE: ltt/ltt-statedump.c:179:
+		for (action=irq_desc[i].action; action; action=action->next)
 		                                              ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#398: FILE: ltt/ltt-statedump.c:180:
+			trace_statedump_enumerate_interrupts(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#404: FILE: ltt/ltt-statedump.c:186:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#417: FILE: ltt/ltt-statedump.c:199:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#423: FILE: ltt/ltt-statedump.c:205:
+		if(t != &init_task) {

ERROR:SPACING: space required before the open parenthesis '('
#427: FILE: ltt/ltt-statedump.c:209:
+		if(t == p) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#427: FILE: ltt/ltt-statedump.c:209:
+		if(t == p) {
+			t = p = next_task(t);
+		}

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#428: FILE: ltt/ltt-statedump.c:210:
+			t = p = next_task(t);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#432: FILE: ltt/ltt-statedump.c:214:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#434: FILE: ltt/ltt-statedump.c:216:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#435: FILE: ltt/ltt-statedump.c:217:
+		if(t->exit_state == EXIT_ZOMBIE)

CHECK:BRACES: braces {} should be used on all arms of this statement
#435: FILE: ltt/ltt-statedump.c:217:
+		if(t->exit_state == EXIT_ZOMBIE)
[...]
+		else if(t->exit_state == EXIT_DEAD)
[...]
+		else if(t->state == TASK_RUNNING) {
[...]
+		else if(t->state & 
[...]
+		else status = LTTNG_UNNAMED;
[...]

ERROR:SPACING: space required before the open parenthesis '('
#437: FILE: ltt/ltt-statedump.c:219:
+		else if(t->exit_state == EXIT_DEAD)

ERROR:SPACING: space required before the open parenthesis '('
#439: FILE: ltt/ltt-statedump.c:221:
+		else if(t->state == TASK_RUNNING) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#441: FILE: ltt/ltt-statedump.c:223:
+			if( list_empty(&t->run_list) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#441: FILE: ltt/ltt-statedump.c:223:
+			if( list_empty(&t->run_list) )

ERROR:SPACING: space required before the open parenthesis '('
#441: FILE: ltt/ltt-statedump.c:223:
+			if( list_empty(&t->run_list) )

WARNING:TYPO_SPELLING: 'relly' may be misspelled - perhaps 'really'?
#446: FILE: ltt/ltt-statedump.c:228:
+				 * relly running at this time. */
 				   ^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#446: FILE: ltt/ltt-statedump.c:228:
+				 * relly running at this time. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#449: FILE: ltt/ltt-statedump.c:231:
+^I^Ielse if(t->state & $

ERROR:SPACING: space required before the open parenthesis '('
#449: FILE: ltt/ltt-statedump.c:231:
+		else if(t->state & 

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#449: FILE: ltt/ltt-statedump.c:231:
+		}
+		else if(t->state & 

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#454: FILE: ltt/ltt-statedump.c:236:
+		else status = LTTNG_UNNAMED;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#454: FILE: ltt/ltt-statedump.c:236:
+		}
+		else status = LTTNG_UNNAMED;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#459: FILE: ltt/ltt-statedump.c:241:
+		 * in syscall mode or not */

ERROR:SPACING: space required before the open parenthesis '('
#460: FILE: ltt/ltt-statedump.c:242:
+		if(t->mm) type = LTTNG_USER_THREAD;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#460: FILE: ltt/ltt-statedump.c:242:
+		if(t->mm) type = LTTNG_USER_THREAD;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#461: FILE: ltt/ltt-statedump.c:243:
+		else type = LTTNG_KERNEL_THREAD;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#462: FILE: ltt/ltt-statedump.c:244:
+^I^I^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#463: FILE: ltt/ltt-statedump.c:245:
+		trace_statedump_enumerate_process_state(

ERROR:SPACING: space prohibited after that open parenthesis '('
#467: FILE: ltt/ltt-statedump.c:249:
+	} while( t != &init_task );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#467: FILE: ltt/ltt-statedump.c:249:
+	} while( t != &init_task );

ERROR:SPACING: space required before the open parenthesis '('
#467: FILE: ltt/ltt-statedump.c:249:
+	} while( t != &init_task );

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#476: FILE: ltt/ltt-statedump.c:258:
+	 * mode before the end of ltt_statedump_thread */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#487: FILE: ltt/ltt-statedump.c:269:
+	printk(KERN_DEBUG "ltt_statedump_thread\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ltt_statedump_thread', this function's name, in a string
#487: FILE: ltt/ltt-statedump.c:269:
+	printk(KERN_DEBUG "ltt_statedump_thread\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#488: FILE: ltt/ltt-statedump.c:270:
+ ^Iltt_enumerate_process_states();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#488: FILE: ltt/ltt-statedump.c:270:
+ ^Iltt_enumerate_process_states();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: ltt/ltt-statedump.c:270:
+ ^Iltt_enumerate_process_states();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#494: FILE: ltt/ltt-statedump.c:276:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#497: FILE: ltt/ltt-statedump.c:279:
+	 * syscall mode (i.e. not in a trap, an IRQ or a soft IRQ) */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#500: FILE: ltt/ltt-statedump.c:282:
+	for_each_online_cpu(cpu)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#503: FILE: ltt/ltt-statedump.c:285:
+		schedule_delayed_work_on(cpu,&cpu_work[cpu],0);
 		                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#503: FILE: ltt/ltt-statedump.c:285:
+		schedule_delayed_work_on(cpu,&cpu_work[cpu],0);
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#503: FILE: ltt/ltt-statedump.c:285:
+		schedule_delayed_work_on(cpu,&cpu_work[cpu],0);
 		                                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#509: FILE: ltt/ltt-statedump.c:291:
+	printk(KERN_DEBUG "trace_statedump_statedump_end\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#517: FILE: ltt/ltt-statedump.c:299:
+	printk(KERN_DEBUG "ltt_statedump_start\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ltt_statedump_start', this function's name, in a string
#517: FILE: ltt/ltt-statedump.c:299:
+	printk(KERN_DEBUG "ltt_statedump_start\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: ltt/ltt-statedump.c:301:
+	kthread_run(ltt_statedump_thread,
+		NULL, "ltt_statedump");

WARNING:LINE_SPACING: Missing a blank line after declarations
#527: FILE: ltt/ltt-statedump.c:309:
+	int ret;
+	printk(KERN_INFO "LTT : ltt-facility-statedump init\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#527: FILE: ltt/ltt-statedump.c:309:
+	printk(KERN_INFO "LTT : ltt-facility-statedump init\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#529: FILE: ltt/ltt-statedump.c:311:
+	ret = ltt_module_register(LTT_FUNCTION_STATEDUMP,
+			ltt_statedump_start,THIS_MODULE);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#529: FILE: ltt/ltt-statedump.c:311:
+			ltt_statedump_start,THIS_MODULE);
 			                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#535: FILE: ltt/ltt-statedump.c:317:
+	printk(KERN_INFO "LTT : ltt-facility-statedump exit\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000042459.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 84 errors, 39 warnings, 25 checks, 477 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000042459.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
