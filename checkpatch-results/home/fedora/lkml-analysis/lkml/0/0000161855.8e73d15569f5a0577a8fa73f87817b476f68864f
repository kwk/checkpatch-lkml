WARNING:LINE_SPACING: Missing a blank line after declarations
#144: FILE: drivers/scsi/libata-core.c:2171:
+			void *addr = kmap_atomic(psg->page, KM_IRQ0);
+			memcpy(addr + psg->offset, pad_buf, qc->pad_len);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "qc->__sg"
#174: FILE: drivers/scsi/libata-core.c:2205:
+	assert(qc->__sg != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#276: FILE: drivers/scsi/libata-core.c:2461:
+			void *addr = kmap_atomic(psg->page, KM_IRQ0);
+			memcpy(pad_buf, addr + psg->offset, qc->pad_len);

CHECK:SPACING: No space is necessary after a cast
#358: FILE: drivers/scsi/libata-scsi.c:142:
+			qc->__sg = (struct scatterlist *) cmd->request_buffer;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#378: FILE: drivers/scsi/libata-scsi.c:364:
+			request_queue_t *q = sdev->request_queue;
+			blk_queue_max_hw_segments(q, q->max_hw_segments - 1);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "qc->__sg"
#399: FILE: drivers/scsi/sata_qstor.c:274:
+	assert(qc->__sg != NULL);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sg' - possible side-effects?
#519: FILE: include/linux/libata.h:477:
+#define ata_for_each_sg(sg, qc) \
+	for (sg = qc->__sg; sg; sg = ata_qc_next_sg(sg, qc))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'qc' - possible side-effects?
#519: FILE: include/linux/libata.h:477:
+#define ata_for_each_sg(sg, qc) \
+	for (sg = qc->__sg; sg; sg = ata_qc_next_sg(sg, qc))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'qc' may be better as '(qc)' to avoid precedence issues
#519: FILE: include/linux/libata.h:477:
+#define ata_for_each_sg(sg, qc) \
+	for (sg = qc->__sg; sg; sg = ata_qc_next_sg(sg, qc))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000161855.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 3 warnings, 6 checks, 428 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000161855.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
