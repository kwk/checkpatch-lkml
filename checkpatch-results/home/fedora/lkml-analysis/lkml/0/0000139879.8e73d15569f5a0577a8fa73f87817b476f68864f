WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#59: FILE: arch/i386/Kconfig:1321:
+config DJPROBE
+        bool "Direct Jump probe"
+	depends on KPROBES && !PREEMPT
+	help
+	 Djprobe allows you to dynamically hook at any kernel function
+	 entry points and collect the debugging or performance analysis
+	 information non-disruptively.

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#84: FILE: arch/i386/kernel/djprobe.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#86: FILE: arch/i386/kernel/djprobe.c:3:
+ *  arch/i386/kernel/djprobe.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#99: FILE: arch/i386/kernel/djprobe.c:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#100: FILE: arch/i386/kernel/djprobe.c:17:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#105: FILE: arch/i386/kernel/djprobe.c:22:
+ * ^I^IInitial implementation of Direct jump probe (djprobe)$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#114: FILE: arch/i386/kernel/djprobe.c:31:
+#include <asm/cacheflush.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/kdebug.h> instead of <asm/kdebug.h>
#115: FILE: arch/i386/kernel/djprobe.c:32:
+#include <asm/kdebug.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#117: FILE: arch/i386/kernel/djprobe.c:34:
+#include <asm/processor.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#119: FILE: arch/i386/kernel/djprobe.c:36:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#135: FILE: arch/i386/kernel/djprobe.c:52:
+static void __local_serialize_cpu(void * info)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#142: FILE: arch/i386/kernel/djprobe.c:59:
+	on_each_cpu(__local_serialize_cpu, NULL, 1,1);
 	                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#149: FILE: arch/i386/kernel/djprobe.c:66:
+} __attribute__((packed));

WARNING:LINE_SPACING: Missing a blank line after declarations
#154: FILE: arch/i386/kernel/djprobe.c:71:
+	struct __arch_jmp_op *jop;
+	jop = (struct __arch_jmp_op *)from;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#155: FILE: arch/i386/kernel/djprobe.c:72:
+	jop->raddr=(long)(to) - ((long)(from) + 5);
 	          ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#156: FILE: arch/i386/kernel/djprobe.c:73:
+	mb();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#157: FILE: arch/i386/kernel/djprobe.c:74:
+	if (sync) smp_serialize_cpus();

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#160: FILE: arch/i386/kernel/djprobe.c:77:
+}
+/* switch back to the kprobe */

WARNING:MEMORY_BARRIER: memory barrier without comment
#168: FILE: arch/i386/kernel/djprobe.c:85:
+	mb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#173: FILE: arch/i386/kernel/djprobe.c:90:
+static void asmlinkage djprobe_callback(struct djprobe_instance * djpi,

WARNING:STORAGE_CLASS: storage class 'asmlinkage' should be located before type 'void'
#173: FILE: arch/i386/kernel/djprobe.c:90:
+static void asmlinkage djprobe_callback(struct djprobe_instance * djpi,

WARNING:LINE_SPACING: Missing a blank line after declarations
#177: FILE: arch/i386/kernel/djprobe.c:94:
+	struct djprobe *djp;
+	rcu_read_lock();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: arch/i386/kernel/djprobe.c:107:
+int __kprobes arch_prepare_djprobe_instance(struct djprobe_instance *djpi,
+				  unsigned long size)

WARNING:LINE_SPACING: Missing a blank line after declarations
#193: FILE: arch/i386/kernel/djprobe.c:110:
+	kprobe_opcode_t *stub;
+	stub = djpi->stub.insn;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#197: FILE: arch/i386/kernel/djprobe.c:114:
+	memcpy((void*)stub, (void*)&arch_tmpl_stub_entry, ARCH_STUB_SIZE);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#197: FILE: arch/i386/kernel/djprobe.c:114:
+	memcpy((void*)stub, (void*)&arch_tmpl_stub_entry, ARCH_STUB_SIZE);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#200: FILE: arch/i386/kernel/djprobe.c:117:
+	*((long*)(stub + ARCH_STUB_VAL_IDX)) = (long)djpi;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#202: FILE: arch/i386/kernel/djprobe.c:119:
+	*((long*)(stub + ARCH_STUB_CALL_IDX)) = (long)djprobe_callback;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#205: FILE: arch/i386/kernel/djprobe.c:122:
+	memcpy((void*)(stub + ARCH_STUB_INST_IDX),

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#206: FILE: arch/i386/kernel/djprobe.c:123:
+	       (void*)djpi->kp.addr, size);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#210: FILE: arch/i386/kernel/djprobe.c:127:
+		     (void*)((long)djpi->kp.addr + size), 0);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#218: FILE: arch/i386/kernel/djprobe.c:135:
+	__set_jmp_op((void*)djpi->kp.addr, (void*)djpi->stub.insn, 1);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#218: FILE: arch/i386/kernel/djprobe.c:135:
+	__set_jmp_op((void*)djpi->kp.addr, (void*)djpi->stub.insn, 1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#225: FILE: arch/i386/kernel/djprobe.c:142:
+	kprobe_opcode_t *stub;
+	stub = &djpi->stub.insn[ARCH_STUB_INST_IDX];

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#226: FILE: arch/i386/kernel/djprobe.c:143:
+	__set_breakpoint_op((void*)djpi->kp.addr, (void*)stub);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#226: FILE: arch/i386/kernel/djprobe.c:143:
+	__set_breakpoint_op((void*)djpi->kp.addr, (void*)stub);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#232: FILE: arch/i386/kernel/djprobe.c:149:
+int __kprobes djprobe_pre_handler(struct kprobe * kp, struct pt_regs * regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#232: FILE: arch/i386/kernel/djprobe.c:149:
+int __kprobes djprobe_pre_handler(struct kprobe * kp, struct pt_regs * regs)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#235: FILE: arch/i386/kernel/djprobe.c:152:
+		container_of(kp,struct djprobe_instance, kp);
 		               ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#242: FILE: arch/i386/kernel/djprobe.c:159:
+		return 0;
+	} else {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#251: FILE: arch/i386/kernel/djprobe.c:168:
+void __kprobes djprobe_post_handler(struct kprobe * kp, struct pt_regs * regs,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#251: FILE: arch/i386/kernel/djprobe.c:168:
+void __kprobes djprobe_post_handler(struct kprobe * kp, struct pt_regs * regs,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#260: FILE: arch/i386/kernel/stub_djprobe.S:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#341: FILE: include/asm-i386/djprobe.h:1:
+#ifndef _ASM_DJPROBE_H

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#345: FILE: include/asm-i386/djprobe.h:5:
+ *  include/asm-i386/djprobe.h

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#358: FILE: include/asm-i386/djprobe.h:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#359: FILE: include/asm-i386/djprobe.h:19:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#364: FILE: include/asm-i386/djprobe.h:24:
+ * ^I^IInitial implementation of Direct jump probe (djprobe)$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#394: FILE: include/asm-i386/djprobe.h:54:
+};
+#define DJPI_ARCH_SIZE(djpi) (djpi->stub.size)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'djpi' may be better as '(djpi)' to avoid precedence issues
#394: FILE: include/asm-i386/djprobe.h:54:
+#define DJPI_ARCH_SIZE(djpi) (djpi->stub.size)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000139879.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 17 warnings, 8 checks, 326 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000139879.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
