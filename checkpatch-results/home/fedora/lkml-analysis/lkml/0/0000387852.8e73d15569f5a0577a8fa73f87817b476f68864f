ERROR:SPACING: space prohibited after that open parenthesis '('
#110: FILE: kernel/sched.c:61:
+unsigned int MIN_TIMESLICE =		( 10 * HZ / 1000);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#117: FILE: kernel/sched.c:68:
+unsigned int WAKER_BONUS_RATIO =	0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#118: FILE: kernel/sched.c:69:
+unsigned int MAX_SLEEP_AVG =		(10*HZ);
                             		   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#119: FILE: kernel/sched.c:70:
+unsigned int STARVATION_LIMIT =		(10*HZ);
                                		   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: kernel/sched.c:370:
+ ^I^Ip->prio = effective_prio(p);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#194: FILE: kernel/sched.c:370:
+ ^I^Ip->prio = effective_prio(p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: kernel/sched.c:370:
+ ^I^Ip->prio = effective_prio(p);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#198: FILE: kernel/sched.c:374:
+			prio_array_t *array = current->array;
+			BUG_ON(!array);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#198: FILE: kernel/sched.c:374:
+			BUG_ON(!array);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#222: FILE: kernel/sched.c:521:
+			if (sync)
[...]
+			else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#224: FILE: kernel/sched.c:523:
+			else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#257: FILE: kernel/sched.c:569:
+	if (unlikely(!current->array))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#259: FILE: kernel/sched.c:571:
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#273: FILE: kernel/sched.c:1004:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: kernel/sched.c:1006:
+		if (p->prio == this_rq->curr->prio &&
+				p->time_slice > this_rq->curr->time_slice)

WARNING:LONG_LINE: line length of 216 exceeds 100 columns
#379: FILE: kernel/sysctl.c:46:
+extern unsigned int MIN_TIMESLICE, MAX_TIMESLICE, CHILD_PENALTY, PARENT_PENALTY, EXIT_WEIGHT, PRIO_BONUS_RATIO, PRIO_BONUS_RATIO, INTERACTIVE_DELTA, WAKER_BONUS_RATIO, MAX_SLEEP_AVG, STARVATION_LIMIT, NODE_THRESHOLD;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#379: FILE: kernel/sysctl.c:46:
+extern unsigned int MIN_TIMESLICE, MAX_TIMESLICE, CHILD_PENALTY, PARENT_PENALTY, EXIT_WEIGHT, PRIO_BONUS_RATIO, PRIO_BONUS_RATIO, INTERACTIVE_DELTA, WAKER_BONUS_RATIO, MAX_SLEEP_AVG, STARVATION_LIMIT, NODE_THRESHOLD;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000387852.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 6 warnings, 8 checks, 321 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000387852.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
