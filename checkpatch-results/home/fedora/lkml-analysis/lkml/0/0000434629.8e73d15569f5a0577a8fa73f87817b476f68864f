WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
> I borrowed reiserfs's *_INODE_NLINK macros, but made them inline functions.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: fs/reiserfs/namei.c:12:
+#define CAN_INCREASE_NLINK(i) ( i->i_nlink < ((get_inode_sd_version (i) != KEY_FORMAT_3_5)?MAX_UL_INT:MAX_US_INT)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#112: FILE: fs/reiserfs/namei.c:12:
+#define CAN_INCREASE_NLINK(i) ( i->i_nlink < ((get_inode_sd_version (i) != KEY_FORMAT_3_5)?MAX_UL_INT:MAX_US_INT)) 

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#112: FILE: fs/reiserfs/namei.c:12:
+#define CAN_INCREASE_NLINK(i) ( i->i_nlink < ((get_inode_sd_version (i) != KEY_FORMAT_3_5)?MAX_UL_INT:MAX_US_INT)) 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#112: FILE: fs/reiserfs/namei.c:12:
+#define CAN_INCREASE_NLINK(i) ( i->i_nlink < ((get_inode_sd_version (i) != KEY_FORMAT_3_5)?MAX_UL_INT:MAX_US_INT)) 
                                                                                           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#112: FILE: fs/reiserfs/namei.c:12:
+#define CAN_INCREASE_NLINK(i) ( i->i_nlink < ((get_inode_sd_version (i) != KEY_FORMAT_3_5)?MAX_UL_INT:MAX_US_INT)) 
                                                                                                      ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#112: FILE: fs/reiserfs/namei.c:12:
+#define CAN_INCREASE_NLINK(i) ( i->i_nlink < ((get_inode_sd_version (i) != KEY_FORMAT_3_5)?MAX_UL_INT:MAX_US_INT)) 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#112: FILE: fs/reiserfs/namei.c:12:
+#define CAN_INCREASE_NLINK(i) ( i->i_nlink < ((get_inode_sd_version (i) != KEY_FORMAT_3_5)?MAX_UL_INT:MAX_US_INT)) 

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'i' may be better as '(i)' to avoid precedence issues
#112: FILE: fs/reiserfs/namei.c:12:
+#define CAN_INCREASE_NLINK(i) ( i->i_nlink < ((get_inode_sd_version (i) != KEY_FORMAT_3_5)?MAX_UL_INT:MAX_US_INT)) 

ERROR:SPACING: space required after that ';' (ctx:OxV)
#116: FILE: fs/reiserfs/namei.c:16:
+#define INC_DIR_INODE_NLINK(i) { if (i->i_nlink != 1) i->i_nlink++;}
                                                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#116: FILE: fs/reiserfs/namei.c:16:
+#define INC_DIR_INODE_NLINK(i) { if (i->i_nlink != 1) i->i_nlink++;}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'i' may be better as '(i)' to avoid precedence issues
#116: FILE: fs/reiserfs/namei.c:16:
+#define INC_DIR_INODE_NLINK(i) { if (i->i_nlink != 1) i->i_nlink++;}

ERROR:SPACING: space required after that ';' (ctx:OxV)
#117: FILE: fs/reiserfs/namei.c:17:
+#define DEC_DIR_INODE_NLINK(i) { if (i->i_nlink != 1) i->i_nlink--;}
                                                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#117: FILE: fs/reiserfs/namei.c:17:
+#define DEC_DIR_INODE_NLINK(i) { if (i->i_nlink != 1) i->i_nlink--;}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'i' may be better as '(i)' to avoid precedence issues
#117: FILE: fs/reiserfs/namei.c:17:
+#define DEC_DIR_INODE_NLINK(i) { if (i->i_nlink != 1) i->i_nlink--;}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: fs/reiserfs/namei.c:600:
+    if ( !CAN_INCREASE_NLINK(dir) )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#125: FILE: fs/reiserfs/namei.c:600:
+    if ( !CAN_INCREASE_NLINK(dir) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#125: FILE: fs/reiserfs/namei.c:600:
+    if ( !CAN_INCREASE_NLINK(dir) )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: fs/reiserfs/namei.c:907:
+    if (!CAN_INCREASE_NLINK(inode)) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#146: FILE: fs/reiserfs/namei.c:907:
+    if (!CAN_INCREASE_NLINK(inode)) {
 	return -EMLINK;
     }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#154: FILE: fs/reiserfs/namei.c:1031:
+	if ( !CAN_INCREASE_NLINK(new_dir) )
+	    return -EMLINK;

ERROR:SPACING: space prohibited after that open parenthesis '('
#154: FILE: fs/reiserfs/namei.c:1031:
+	if ( !CAN_INCREASE_NLINK(new_dir) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#154: FILE: fs/reiserfs/namei.c:1031:
+	if ( !CAN_INCREASE_NLINK(new_dir) )

WARNING:TABSTOP: Statements should start on a tabstop
#155: FILE: fs/reiserfs/namei.c:1032:
+	    return -EMLINK;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#177: FILE: include/linux/fs.h:518:
+/* maximal nlink_t value possible. Used insead of very high i_nlink values
+   that some filesystems might allow to prevent user visible negative

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#178: FILE: include/linux/fs.h:519:
+   nlink counts. */

CHECK:SPACING: No space is necessary after a cast
#179: FILE: include/linux/fs.h:520:
+#define MAX_NLINK_T (nlink_t)((((nlink_t) -1) > 0)?~0:((1u<<(sizeof(nlink_t)*8-1))-1))

ERROR:SPACING: spaces required around that '?' (ctx:VxO)
#179: FILE: include/linux/fs.h:520:
+#define MAX_NLINK_T (nlink_t)((((nlink_t) -1) > 0)?~0:((1u<<(sizeof(nlink_t)*8-1))-1))
                                                   ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#179: FILE: include/linux/fs.h:520:
+#define MAX_NLINK_T (nlink_t)((((nlink_t) -1) > 0)?~0:((1u<<(sizeof(nlink_t)*8-1))-1))
                                                    ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#179: FILE: include/linux/fs.h:520:
+#define MAX_NLINK_T (nlink_t)((((nlink_t) -1) > 0)?~0:((1u<<(sizeof(nlink_t)*8-1))-1))
                                                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#179: FILE: include/linux/fs.h:520:
+#define MAX_NLINK_T (nlink_t)((((nlink_t) -1) > 0)?~0:((1u<<(sizeof(nlink_t)*8-1))-1))
                                                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#179: FILE: include/linux/fs.h:520:
+#define MAX_NLINK_T (nlink_t)((((nlink_t) -1) > 0)?~0:((1u<<(sizeof(nlink_t)*8-1))-1))
                                                                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#179: FILE: include/linux/fs.h:520:
+#define MAX_NLINK_T (nlink_t)((((nlink_t) -1) > 0)?~0:((1u<<(sizeof(nlink_t)*8-1))-1))
                                                                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#179: FILE: include/linux/fs.h:520:
+#define MAX_NLINK_T (nlink_t)((((nlink_t) -1) > 0)?~0:((1u<<(sizeof(nlink_t)*8-1))-1))
                                                                                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#179: FILE: include/linux/fs.h:520:
+#define MAX_NLINK_T (nlink_t)((((nlink_t) -1) > 0)?~0:((1u<<(sizeof(nlink_t)*8-1))-1))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000434629.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 10 warnings, 14 checks, 121 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000434629.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
