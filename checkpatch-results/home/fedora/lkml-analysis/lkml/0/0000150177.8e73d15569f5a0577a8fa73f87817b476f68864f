WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#52: FILE: fs/hppfs/hppfs_kern.c:107:
+static int hppfs_d_revalidate(struct dentry * dentry, struct nameidata * nd)
                                                                          ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#52: FILE: fs/hppfs/hppfs_kern.c:107:
+static int hppfs_d_revalidate(struct dentry * dentry, struct nameidata * nd)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#52: FILE: fs/hppfs/hppfs_kern.c:107:
+static int hppfs_d_revalidate(struct dentry * dentry, struct nameidata * nd)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#54: FILE: fs/hppfs/hppfs_kern.c:109:
+	int (*d_revalidate)(struct dentry *, struct nameidata *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#54: FILE: fs/hppfs/hppfs_kern.c:109:
+	int (*d_revalidate)(struct dentry *, struct nameidata *);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#63: FILE: fs/hppfs/hppfs_kern.c:118:
+	return (*d_revalidate)(proc_dentry, nd);
 	                                    ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#77: FILE: fs/hppfs/hppfs_kern.c:176:
+static struct dentry *hppfs_lookup(struct inode *parent_ino, struct dentry *dentry,
                                   struct nameidata *nd)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: fs/hppfs/hppfs_kern.c:190:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#89: FILE: fs/hppfs/hppfs_kern.c:193:
+	 * semaphore. Please keep in sync. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#91: FILE: fs/hppfs/hppfs_kern.c:195:
+	/* XXX: The only difference is nameidata: we pass NULL instead of nd.
 	                                                                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#92: FILE: fs/hppfs/hppfs_kern.c:196:
+	 * Not normally allowed, would Oops if proc ever uses nd, and can Oops /
 	                                                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#93: FILE: fs/hppfs/hppfs_kern.c:197:
+	 * leak entries if we pass the same nd we got. */
 	                                    ^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#93: FILE: fs/hppfs/hppfs_kern.c:197:
+	 * leak entries if we pass the same nd we got. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: fs/hppfs/hppfs_kern.c:217:
+			if (!proc_dentry->d_op->d_revalidate(proc_dentry, NULL) &&
+					!d_invalidate(proc_dentry)) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000150177.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 9 warnings, 2 checks, 74 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000150177.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
