WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#89: 
diff -urN linux/drivers/pci/bus/bus-p2p.c linux-pci/drivers/pci/bus/bus-p2p.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#93: FILE: drivers/pci/bus/bus-p2p.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LINE_SPACING: Missing a blank line after declarations
#123: FILE: drivers/pci/bus/bus-p2p.c:31:
+	int rpcap = pci_find_capability(dev, PCI_CAP_ID_EXP);
+	if (!rpcap)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: drivers/pci/bus/bus-p2p.c:48:
+^I   of bus errors (in some architectures) */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#140: FILE: drivers/pci/bus/bus-p2p.c:48:
+	/* Disable MasterAbortMode during probing to avoid reporting
+	   of bus errors (in some architectures) */ 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#140: FILE: drivers/pci/bus/bus-p2p.c:48:
+	   of bus errors (in some architectures) */ 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#151: FILE: drivers/pci/bus/bus-p2p.c:59:
+extern struct pci_bus * pci_alloc_bus(void);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#152: FILE: drivers/pci/bus/bus-p2p.c:60:
+extern int pci_add_bus(struct pci_bus *bus);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: drivers/pci/bus/bus-p2p.c:61:
+extern struct pci_bus * pci_derive_parent(struct device *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#153: FILE: drivers/pci/bus/bus-p2p.c:61:
+extern struct pci_bus * pci_derive_parent(struct device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#153: FILE: drivers/pci/bus/bus-p2p.c:61:
+extern struct pci_bus * pci_derive_parent(struct device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#183: FILE: drivers/pci/bus/bus-p2p.c:91:
+		bus->resource[i] = &dev->resource[PCI_BRIDGE_RESOURCES+i];
 		                                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#187: FILE: drivers/pci/bus/bus-p2p.c:95:
+	p2p_setup_bus_numbers(dev,bus);
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#188: FILE: drivers/pci/bus/bus-p2p.c:96:
+	p2p_prepare_hardware(dev,bus);
 	                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: drivers/pci/bus/Makefile:6:
+ $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#241: FILE: drivers/pci/bus-class.c:1:
+/*

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#258: FILE: drivers/pci/bus-class.c:18:
+#define DBG(x...) printk(x)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#263: FILE: drivers/pci/bus-class.c:23:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*b->legacy_io)...) over kmalloc(sizeof(struct bin_attribute)...)
#279: FILE: drivers/pci/bus-class.c:39:
+	b->legacy_io = kmalloc(sizeof(struct bin_attribute) * 2,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#285: FILE: drivers/pci/bus-class.c:45:
+		b->legacy_io->attr.mode = S_IRUSR | S_IWUSR;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#294: FILE: drivers/pci/bus-class.c:54:
+		b->legacy_mem->size = 1024*1024;
 		                          ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#295: FILE: drivers/pci/bus-class.c:55:
+		b->legacy_mem->attr.mode = S_IRUSR | S_IWUSR;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#323: FILE: drivers/pci/bus-class.c:83:
+CLASS_DEVICE_ATTR(cpuaffinity, S_IRUGO, pci_bus_show_cpuaffinity, NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: drivers/pci/bus-class.c:85:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#325: FILE: drivers/pci/bus-class.c:85:
+
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: drivers/pci/bus-class.c:85:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#347: FILE: drivers/pci/bus-class.c:107:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#355: FILE: drivers/pci/bus-class.c:115:
+struct pci_bus * pci_alloc_bus(void)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#369: FILE: drivers/pci/bus-class.c:129:
+EXPORT_SYMBOL(pci_alloc_bus);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#378: FILE: drivers/pci/bus-class.c:138:
+struct pci_bus * pci_derive_bus_parent(struct device *dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#381: FILE: drivers/pci/bus-class.c:141:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#387: FILE: drivers/pci/bus-class.c:147:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#391: FILE: drivers/pci/bus-class.c:151:
+EXPORT_SYMBOL(pci_derive_bus_parent);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#441: FILE: drivers/pci/bus-class.c:201:
+EXPORT_SYMBOL(pci_add_bus);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#460: FILE: drivers/pci/bus-class.c:220:
+	class_device_remove_file(&bus->class_dev,
+		&class_device_attr_cpuaffinity);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#465: FILE: drivers/pci/bus-class.c:225:
+EXPORT_SYMBOL(pci_remove_bus);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#470: FILE: drivers/pci/device.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#474: FILE: drivers/pci/device.c:5:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: drivers/pci/device.c:5:
+ $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#482: FILE: drivers/pci/device.c:13:
+#define DBG(x...) printk(x)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#510: FILE: drivers/pci/device.c:41:
+EXPORT_SYMBOL(pci_add_device);

ERROR:CODE_INDENT: code indent should use tabs where possible
#516: FILE: drivers/pci/device.c:47:
+ ^Imsi_remove_pci_irq_vectors(dev);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#516: FILE: drivers/pci/device.c:47:
+ ^Imsi_remove_pci_irq_vectors(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: drivers/pci/device.c:47:
+ ^Imsi_remove_pci_irq_vectors(dev);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#521: FILE: drivers/pci/device.c:52:
+		struct resource *res = dev->resource + i;
+		if (res->parent)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#533: FILE: drivers/pci/device.c:64:
+	 * list accesses from this device */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#537: FILE: drivers/pci/device.c:68:
+	dev->bus_list.next = dev->bus_list.prev = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#538: FILE: drivers/pci/device.c:69:
+	dev->global_list.next = dev->global_list.prev = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#549: FILE: drivers/pci/device.c:80:
+ * Delete the device structure from the device lists and $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#588: FILE: drivers/pci/device.c:119:
+EXPORT_SYMBOL(pci_remove_bus_device);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#611: FILE: drivers/pci/device.c:142:
+EXPORT_SYMBOL(pci_remove_behind_bridge);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#646: FILE: drivers/pci/pci.h:15:
+extern int pci_detect_children(struct pci_bus *bus);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#647: FILE: drivers/pci/pci.h:16:
+extern int pci_add_device(struct pci_dev *dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1136: FILE: drivers/pci/probe.c:402:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1136: FILE: drivers/pci/probe.c:402:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1160: FILE: drivers/pci/probe.c:543:
 
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000205016.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 29 warnings, 12 checks, 1087 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000205016.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
