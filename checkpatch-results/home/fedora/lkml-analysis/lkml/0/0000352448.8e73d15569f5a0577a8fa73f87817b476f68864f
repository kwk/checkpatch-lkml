WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#60: 
Content-Disposition: attachment; filename="linux-2.4.22-pre7-mq0.06-bq0.02.diff"

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#79: 
; (C) 2003 Herbert Pötzl <herbert@13thfloor.at>
                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: drivers/char/sysrq.c:166:
+^I^I    ^IDQUOT_OFF(dqh);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#112: FILE: drivers/char/sysrq.c:166:
+^I^I    ^IDQUOT_OFF(dqh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: fs/buffer.c:342:
+^I    ^IDQUOT_SYNC_DQH(dqh);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#131: FILE: fs/buffer.c:342:
+^I    ^IDQUOT_SYNC_DQH(dqh);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: fs/dquot.c:380:
+static unsigned int dqhash_id = 0; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#152: FILE: fs/dquot.c:380:
+static unsigned int dqhash_id = 0; 

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: fs/dquot.c:393:
+ ^Ihash->dqh_id = dqhash_id++;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#165: FILE: fs/dquot.c:393:
+ ^Ihash->dqh_id = dqhash_id++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: fs/dquot.c:393:
+ ^Ihash->dqh_id = dqhash_id++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: fs/dquot.c:394:
+ ^Ihash->dqh_dqdom = dqdom;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#166: FILE: fs/dquot.c:394:
+ ^Ihash->dqh_dqdom = dqdom;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: fs/dquot.c:394:
+ ^Ihash->dqh_dqdom = dqdom;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: fs/dquot.c:395:
+ ^Ihash->dqh_count = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#167: FILE: fs/dquot.c:395:
+ ^Ihash->dqh_count = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: fs/dquot.c:395:
+ ^Ihash->dqh_count = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: fs/dquot.c:436:
+    ^I/* sorry no hash found */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#215: FILE: fs/dquot.c:436:
+    ^I/* sorry no hash found */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: fs/dquot.c:436:
+    ^I/* sorry no hash found */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#224: FILE: fs/dquot.c:445:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: fs/dquot.c:450:
+    ^Iif (!sb)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#229: FILE: fs/dquot.c:450:
+    ^Iif (!sb)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: fs/dquot.c:450:
+    ^Iif (!sb)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: fs/dquot.c:451:
+^I    ^IBUG();^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: fs/dquot.c:451:
+^I    ^IBUG();^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#230: FILE: fs/dquot.c:451:
+^I    ^IBUG();^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#230: FILE: fs/dquot.c:451:
+	    	BUG();	

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: fs/dquot.c:453:
+    ^Iif (!hash)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#232: FILE: fs/dquot.c:453:
+    ^Iif (!hash)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: fs/dquot.c:453:
+    ^Iif (!hash)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: fs/dquot.c:454:
+^I    ^Ihash = new_dqhash(sb, dqdom);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#233: FILE: fs/dquot.c:454:
+^I    ^Ihash = new_dqhash(sb, dqdom);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: fs/dquot.c:1225:
+    ^Istruct dqhash *dqh = inode->i_dqh;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#263: FILE: fs/dquot.c:1225:
+    ^Istruct dqhash *dqh = inode->i_dqh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: fs/dquot.c:1225:
+    ^Istruct dqhash *dqh = inode->i_dqh;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: fs/dquot.c:1231:
+    ^Iif (hash == dqh) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#269: FILE: fs/dquot.c:1231:
+    ^Iif (hash == dqh) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: fs/dquot.c:1231:
+    ^Iif (hash == dqh) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: fs/dquot.c:1232:
+^I    ^Ichuid = (iattr->ia_valid & ATTR_UID) && inode->i_uid != iattr->ia_uid;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#270: FILE: fs/dquot.c:1232:
+^I    ^Ichuid = (iattr->ia_valid & ATTR_UID) && inode->i_uid != iattr->ia_uid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: fs/dquot.c:1233:
+^I    ^Ichgid = (iattr->ia_valid & ATTR_GID) && inode->i_gid != iattr->ia_gid;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#271: FILE: fs/dquot.c:1233:
+^I    ^Ichgid = (iattr->ia_valid & ATTR_GID) && inode->i_gid != iattr->ia_gid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: fs/dquot.c:1235:
+    ^I/* transfer between quota hashes */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#273: FILE: fs/dquot.c:1235:
+    ^I/* transfer between quota hashes */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: fs/dquot.c:1235:
+    ^I/* transfer between quota hashes */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: fs/dquot.c:1236:
+^Ielse $

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: fs/dquot.c:1237:
+^I    ^Ichuid = chgid = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#275: FILE: fs/dquot.c:1237:
+^I    ^Ichuid = chgid = 1;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#275: FILE: fs/dquot.c:1237:
+	    	chuid = chgid = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: fs/dquot.c:1266:
+^I    ^Iif (!dqh_has_quota_enabled(dqh, cnt))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#309: FILE: fs/dquot.c:1266:
+^I    ^Iif (!dqh_has_quota_enabled(dqh, cnt))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: fs/dquot.c:1267:
+^I^I    ^I/* transfer from noquota domain ... */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#310: FILE: fs/dquot.c:1267:
+^I^I    ^I/* transfer from noquota domain ... */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: fs/dquot.c:1268:
+^I^I    ^Icontinue;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#311: FILE: fs/dquot.c:1268:
+^I^I    ^Icontinue;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: fs/dquot.c:1270:
+^I^Iif (transfer_from[cnt] == NODQUOT)^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#315: FILE: fs/dquot.c:1271:
+^I^I    ^I/* Can happen on quotafiles (quota isn't initialized on them)... */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#315: FILE: fs/dquot.c:1271:
+^I^I    ^I/* Can happen on quotafiles (quota isn't initialized on them)... */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: fs/dquot.c:1274:
+^I^I    ^I/* transfer to noquota domain ... */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#318: FILE: fs/dquot.c:1274:
+^I^I    ^I/* transfer to noquota domain ... */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: fs/dquot.c:1275:
+^I^I    ^Icontinue;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#319: FILE: fs/dquot.c:1275:
+^I^I    ^Icontinue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: fs/dquot.c:1286:
+^I^I    ^I/* nothing to transfer ... */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#332: FILE: fs/dquot.c:1286:
+^I^I    ^I/* nothing to transfer ... */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: fs/dquot.c:1289:
+    ^I    ^Iif (transfer_from[cnt] != NODQUOT) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#337: FILE: fs/dquot.c:1289:
+    ^I    ^Iif (transfer_from[cnt] != NODQUOT) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: fs/dquot.c:1289:
+    ^I    ^Iif (transfer_from[cnt] != NODQUOT) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: fs/dquot.c:1292:
+    ^I    ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#340: FILE: fs/dquot.c:1292:
+    ^I    ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: fs/dquot.c:1292:
+    ^I    ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: fs/dquot.c:1294:
+    ^I    ^Iif (transfer_to[cnt] != NODQUOT) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#344: FILE: fs/dquot.c:1294:
+    ^I    ^Iif (transfer_to[cnt] != NODQUOT) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: fs/dquot.c:1294:
+    ^I    ^Iif (transfer_to[cnt] != NODQUOT) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: fs/dquot.c:1297:
+    ^I    ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#347: FILE: fs/dquot.c:1297:
+    ^I    ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: fs/dquot.c:1297:
+    ^I    ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: fs/dquot.c:1309:
+    ^I    ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#367: FILE: fs/dquot.c:1309:
+    ^I    ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: fs/dquot.c:1309:
+    ^I    ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: fs/dquot.c:1327:
+    ^Ireturn __dquot_transfer(inode, iattr, inode->i_dqh);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#383: FILE: fs/dquot.c:1327:
+    ^Ireturn __dquot_transfer(inode, iattr, inode->i_dqh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: fs/dquot.c:1327:
+    ^Ireturn __dquot_transfer(inode, iattr, inode->i_dqh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: fs/dquot.c:1332:
+    ^Istruct iattr iattr;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#388: FILE: fs/dquot.c:1332:
+    ^Istruct iattr iattr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: fs/dquot.c:1332:
+    ^Istruct iattr iattr;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: fs/dquot.c:1334:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: fs/dquot.c:1336:
+^I    ^Ireturn ret;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#392: FILE: fs/dquot.c:1336:
+^I    ^Ireturn ret;$

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#393: FILE: fs/dquot.c:1337:
+    	dprintk("··· dqhash_transfer: %p [#0x%lx], hash: %p->%p\n",
     	         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: fs/dquot.c:1337:
+    ^Idprintk("··· dqhash_transfer: %p [#0x%lx], hash: %p->%p\n",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#393: FILE: fs/dquot.c:1337:
+    ^Idprintk("··· dqhash_transfer: %p [#0x%lx], hash: %p->%p\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: fs/dquot.c:1337:
+    ^Idprintk("··· dqhash_transfer: %p [#0x%lx], hash: %p->%p\n",$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dqhash_transfer', this function's name, in a string
#393: FILE: fs/dquot.c:1337:
+    	dprintk("··· dqhash_transfer: %p [#0x%lx], hash: %p->%p\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: fs/dquot.c:1338:
+^I    ^Iinode, inode->i_dqdom, inode->i_dqh, hash);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#394: FILE: fs/dquot.c:1338:
+^I    ^Iinode, inode->i_dqdom, inode->i_dqh, hash);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: fs/dquot.c:1338:
+    	dprintk("··· dqhash_transfer: %p [#0x%lx], hash: %p->%p\n",
+	    	inode, inode->i_dqdom, inode->i_dqh, hash);

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: fs/dquot.c:1340:
+    ^Iret = __dquot_transfer(inode, &iattr, hash);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#396: FILE: fs/dquot.c:1340:
+    ^Iret = __dquot_transfer(inode, &iattr, hash);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: fs/dquot.c:1340:
+    ^Iret = __dquot_transfer(inode, &iattr, hash);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: fs/ext2/ialloc.c:395:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#419: FILE: fs/ext2/inode.c:972:
+    ^Iinode->i_dqdom = le32_to_cpu(raw_inode->i_raw_dqdom);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#419: FILE: fs/ext2/inode.c:972:
+    ^Iinode->i_dqdom = le32_to_cpu(raw_inode->i_raw_dqdom);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: fs/ext2/inode.c:972:
+    ^Iinode->i_dqdom = le32_to_cpu(raw_inode->i_raw_dqdom);$

CHECK:SPACING: No space is necessary after a cast
#440: FILE: fs/ext2/ioctl.c:75:
+		return put_user(inode->i_dqdom, (int *) arg);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#468: FILE: fs/inode.c:128:
+    ^Iif (inode->i_dqh)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#468: FILE: fs/inode.c:128:
+    ^Iif (inode->i_dqh)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: fs/inode.c:128:
+    ^Iif (inode->i_dqh)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#469: FILE: fs/inode.c:129:
+^I    ^Idqhput(inode->i_dqh);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#469: FILE: fs/inode.c:129:
+^I    ^Idqhput(inode->i_dqh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#544: FILE: fs/namespace.c:154:
+    ^Idqhput(mnt->mnt_dqh);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#544: FILE: fs/namespace.c:154:
+    ^Idqhput(mnt->mnt_dqh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: fs/namespace.c:154:
+    ^Idqhput(mnt->mnt_dqh);$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#578: FILE: fs/namespace.c:491:
+static int do_loopback(struct nameidata *nd, char *old_name, char *type, int recurse)
                                          ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#588: FILE: fs/namespace.c:517:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#591: FILE: fs/namespace.c:520:
+^I^I    ^Idqdom = mnt->mnt_mountpoint->d_inode->i_ino;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#591: FILE: fs/namespace.c:520:
+^I^I    ^Idqdom = mnt->mnt_mountpoint->d_inode->i_ino;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#594: FILE: fs/namespace.c:523:
+^I    ^I    ^Idqdom_modify(mnt->mnt_root->d_inode, dqdom);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#594: FILE: fs/namespace.c:523:
+^I    ^I    ^Idqdom_modify(mnt->mnt_root->d_inode, dqdom);$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#604: FILE: fs/namespace.c:750:
+		retval = do_loopback(&nd, dev_name, type_page, flags & MS_REC);
 		                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#620: FILE: fs/quota.c:141:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#624: FILE: fs/quota.c:145:
+	ret = user_path_walk(path, &nd);
 	                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#628: FILE: fs/quota.c:149:
+	dev = nd.dentry->d_inode->i_rdev;
 	      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#629: FILE: fs/quota.c:150:
+	mode = nd.dentry->d_inode->i_mode;
 	       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#630: FILE: fs/quota.c:151:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#636: FILE: fs/quota.c:157:
+	dqh = nd.dentry->d_inode->i_dqh;
 	      ^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#653: FILE: fs/quota.c:505:
+		if (IS_ERR(dqh = resolve_mnt(special))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#654: FILE: fs/quota.c:506:
+^I^I    ^Iret = PTR_ERR(dqh);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#654: FILE: fs/quota.c:506:
+^I^I    ^Iret = PTR_ERR(dqh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#655: FILE: fs/quota.c:507:
+^I    ^I    ^Igoto out;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#655: FILE: fs/quota.c:507:
+^I    ^I    ^Igoto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#686: FILE: fs/super.c:297:
+    ^Idqhput(s->s_dqh);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#686: FILE: fs/super.c:297:
+    ^Idqhput(s->s_dqh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: fs/super.c:297:
+    ^Idqhput(s->s_dqh);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#687: FILE: fs/super.c:298:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#689: FILE: fs/super.c:300:
+^I    ^IBUG();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#689: FILE: fs/super.c:300:
+^I    ^IBUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#689: FILE: fs/super.c:300:
+	    	BUG();

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#746: FILE: include/linux/fs.h:763:
+^Istruct dqhash^I    ^I*s_dqh;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#747: FILE: include/linux/fs.h:764:
+^Istruct list_head^Is_dqhashes;   ^I/* Diskquota hashes */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#772: FILE: include/linux/quota.h:329:
+struct dqhash *get_dqhash(struct super_block *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#772: FILE: include/linux/quota.h:329:
+struct dqhash *get_dqhash(struct super_block *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#773: FILE: include/linux/quota.h:330:
+struct dqhash *get_existing_dqhash(struct super_block *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#773: FILE: include/linux/quota.h:330:
+struct dqhash *get_existing_dqhash(struct super_block *, unsigned long);

ERROR:CODE_INDENT: code indent should use tabs where possible
#780: FILE: include/linux/quota.h:336:
+^I    ^Ireturn;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#780: FILE: include/linux/quota.h:336:
+^I    ^Ireturn;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#781: FILE: include/linux/quota.h:337:
+    ^Idestroy_dqhash(hash);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#781: FILE: include/linux/quota.h:337:
+    ^Idestroy_dqhash(hash);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#781: FILE: include/linux/quota.h:337:
+    ^Idestroy_dqhash(hash);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#787: FILE: include/linux/quota.h:343:
+    ^Ireturn hash; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#787: FILE: include/linux/quota.h:343:
+    ^Ireturn hash; $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#787: FILE: include/linux/quota.h:343:
+    ^Ireturn hash; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#787: FILE: include/linux/quota.h:343:
+    ^Ireturn hash; $

ERROR:SPACING: space required before the open parenthesis '('
#801: FILE: include/linux/quota.h:359:
+#define dqhput(hash)			do { } while(0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#814: FILE: include/linux/quotaops.h:38:
+extern int  dqhash_transfer(struct inode *inode, struct dqhash *hash);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:INLINE: plain inline is preferred over __inline__
#822: FILE: include/linux/quotaops.h:181:
+static __inline__ void dqdom_modify(struct inode *inode, unsigned long dqdom)

ERROR:CODE_INDENT: code indent should use tabs where possible
#824: FILE: include/linux/quotaops.h:183:
+    ^Istruct dqhash *new_dqh;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#824: FILE: include/linux/quotaops.h:183:
+    ^Istruct dqhash *new_dqh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#824: FILE: include/linux/quotaops.h:183:
+    ^Istruct dqhash *new_dqh;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#828: FILE: include/linux/quotaops.h:187:
+^I    ^I/* fallback to superblock hash */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#828: FILE: include/linux/quotaops.h:187:
+^I    ^I/* fallback to superblock hash */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#830: FILE: include/linux/quotaops.h:189:
+^I    ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#830: FILE: include/linux/quotaops.h:189:
+^I    ^I$

WARNING:INLINE: plain inline is preferred over __inline__
#838: FILE: include/linux/quotaops.h:197:
+static __inline__ void dqdom_cond_modify(struct inode *inode, unsigned long dqdom)

ERROR:CODE_INDENT: code indent should use tabs where possible
#841: FILE: include/linux/quotaops.h:200:
+    ^I    ^Idqdom_modify(inode, dqdom);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#841: FILE: include/linux/quotaops.h:200:
+    ^I    ^Idqdom_modify(inode, dqdom);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#841: FILE: include/linux/quotaops.h:200:
+    ^I    ^Idqdom_modify(inode, dqdom);$

WARNING:INLINE: plain inline is preferred over __inline__
#844: FILE: include/linux/quotaops.h:203:
+static __inline__ void dqdom_unlink(struct inode *dir, struct inode *inode)

ERROR:CODE_INDENT: code indent should use tabs where possible
#847: FILE: include/linux/quotaops.h:206:
+^I    ^Ireturn;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#847: FILE: include/linux/quotaops.h:206:
+^I    ^Ireturn;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#849: FILE: include/linux/quotaops.h:208:
+    ^Iif (inode->i_dqdom != dir->i_dqdom)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#849: FILE: include/linux/quotaops.h:208:
+    ^Iif (inode->i_dqdom != dir->i_dqdom)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#849: FILE: include/linux/quotaops.h:208:
+    ^Iif (inode->i_dqdom != dir->i_dqdom)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#853: FILE: include/linux/quotaops.h:212:
+^I    ^Ireturn;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#853: FILE: include/linux/quotaops.h:212:
+^I    ^Ireturn;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#858: FILE: include/linux/quotaops.h:217:
+
+

WARNING:INLINE: plain inline is preferred over __inline__
#859: FILE: include/linux/quotaops.h:218:
+static __inline__ void dqdom_update(struct inode *dir, struct dentry *dentry)

ERROR:CODE_INDENT: code indent should use tabs where possible
#861: FILE: include/linux/quotaops.h:220:
+    ^Iif (!dentry->d_inode)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#861: FILE: include/linux/quotaops.h:220:
+    ^Iif (!dentry->d_inode)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#861: FILE: include/linux/quotaops.h:220:
+    ^Iif (!dentry->d_inode)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#862: FILE: include/linux/quotaops.h:221:
+^I    ^IBUG();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#862: FILE: include/linux/quotaops.h:221:
+^I    ^IBUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#862: FILE: include/linux/quotaops.h:221:
+	    	BUG();

ERROR:CODE_INDENT: code indent should use tabs where possible
#863: FILE: include/linux/quotaops.h:222:
+    ^Iif (dentry->d_inode->i_dqdom == dir->i_dqdom)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#863: FILE: include/linux/quotaops.h:222:
+    ^Iif (dentry->d_inode->i_dqdom == dir->i_dqdom)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#863: FILE: include/linux/quotaops.h:222:
+    ^Iif (dentry->d_inode->i_dqdom == dir->i_dqdom)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#864: FILE: include/linux/quotaops.h:223:
+^I    ^IBUG();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#864: FILE: include/linux/quotaops.h:223:
+^I    ^IBUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#864: FILE: include/linux/quotaops.h:223:
+	    	BUG();

WARNING:INLINE: plain inline is preferred over __inline__
#868: FILE: include/linux/quotaops.h:227:
+static __inline__ void dqdom_cond_update(struct inode *dir, struct dentry *dentry)

ERROR:CODE_INDENT: code indent should use tabs where possible
#870: FILE: include/linux/quotaops.h:229:
+    ^Iif (!dentry->d_inode)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#870: FILE: include/linux/quotaops.h:229:
+    ^Iif (!dentry->d_inode)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#870: FILE: include/linux/quotaops.h:229:
+    ^Iif (!dentry->d_inode)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#871: FILE: include/linux/quotaops.h:230:
+^I    ^IBUG();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#871: FILE: include/linux/quotaops.h:230:
+^I    ^IBUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#871: FILE: include/linux/quotaops.h:230:
+	    	BUG();

ERROR:CODE_INDENT: code indent should use tabs where possible
#873: FILE: include/linux/quotaops.h:232:
+^I    ^Idqdom_modify(dentry->d_inode, dir->i_dqdom);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#873: FILE: include/linux/quotaops.h:232:
+^I    ^Idqdom_modify(dentry->d_inode, dir->i_dqdom);$

WARNING:INLINE: plain inline is preferred over __inline__
#876: FILE: include/linux/quotaops.h:235:
+static __inline__ void dqdom_lookup_update(struct inode *dir, struct dentry *dentry)

ERROR:CODE_INDENT: code indent should use tabs where possible
#878: FILE: include/linux/quotaops.h:237:
+    ^Iif (!dentry->d_inode)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#878: FILE: include/linux/quotaops.h:237:
+    ^Iif (!dentry->d_inode)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#878: FILE: include/linux/quotaops.h:237:
+    ^Iif (!dentry->d_inode)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#879: FILE: include/linux/quotaops.h:238:
+^I    ^Ireturn; /* negative pathwalk */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#879: FILE: include/linux/quotaops.h:238:
+^I    ^Ireturn; /* negative pathwalk */$

WARNING:INLINE: plain inline is preferred over __inline__
#883: FILE: include/linux/quotaops.h:242:
+static __inline__ void dqdom_unlink_update(struct inode *dir, struct dentry *dentry)

ERROR:CODE_INDENT: code indent should use tabs where possible
#885: FILE: include/linux/quotaops.h:244:
+    ^Iif (!dentry->d_inode)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#885: FILE: include/linux/quotaops.h:244:
+    ^Iif (!dentry->d_inode)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#885: FILE: include/linux/quotaops.h:244:
+    ^Iif (!dentry->d_inode)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#886: FILE: include/linux/quotaops.h:245:
+^I    ^IBUG();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#886: FILE: include/linux/quotaops.h:245:
+^I    ^IBUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#886: FILE: include/linux/quotaops.h:245:
+	    	BUG();

ERROR:SPACING: space required before the open parenthesis '('
#897: FILE: include/linux/quotaops.h:266:
+#define dqdom_lookup_update(inode, dentry)	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#898: FILE: include/linux/quotaops.h:267:
+#define dqdom_unlink_update(inode, dentry)	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#899: FILE: include/linux/quotaops.h:268:
+#define dqdom_cond_update(inode, dentry)	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#901: FILE: include/linux/quotaops.h:270:
+#define dqdom_modify(inode, dqdom)		do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#902: FILE: include/linux/quotaops.h:271:
+#define dqdom_cond_modify(inode, dqdom)		do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#906: FILE: include/linux/quotaops.h:275:
+#define destroy_dqhash(hash)			do { } while(0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000352448.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 83 errors, 126 warnings, 8 checks, 719 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000352448.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
