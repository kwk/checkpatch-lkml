WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#36: 
Signed-Off-By: Pavel Emelianov <xemul@sw.ru>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#37: 
Signed-Off-By: Kirill Korotaev <dev@sw.ru>

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#65: FILE: kernel/ub/proc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: kernel/ub/proc.c:2:
+ *  kernel/ub/proc.c $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#66: FILE: kernel/ub/proc.c:2:
+ *  kernel/ub/proc.c 

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: kernel/ub/proc.c:28:
+	seq_printf(f, head_fmt, "uid", "resource",
+			"held", "maxheld", "barrier", "limit", "failcnt");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: kernel/ub/proc.c:41:
+	seq_printf(f, res_fmt, ub_uid, ub_rnames[r],
+			ub->ub_parms[r].held,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#141: FILE: kernel/ub/proc.c:77:
+		hlist_for_each_entry (ub, pos, &ub_hash[slot], hash) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ub->parent"
#142: FILE: kernel/ub/proc.c:78:
+			if (!sub && ub->parent != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: kernel/ub/proc.c:100:
+	hlist_for_each_entry_continue (ub, pos, hash) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ub->parent"
#165: FILE: kernel/ub/proc.c:101:
+		if (!sub && ub->parent != NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#174: FILE: kernel/ub/proc.c:110:
+		hlist_for_each_entry (ub, pos, &ub_hash[slot], hash) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ub->parent"
#175: FILE: kernel/ub/proc.c:111:
+			if (!sub && ub->parent != NULL)

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#215: FILE: kernel/ub/proc.c:151:
+static struct seq_operations ub_seq_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#222: FILE: kernel/ub/proc.c:158:
+static int ub_open(struct inode *inode, struct file *filp)
                                                      ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#224: FILE: kernel/ub/proc.c:160:
+	return seq_open(filp, &ub_seq_ops);
 	                ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#227: FILE: kernel/ub/proc.c:163:
+static struct file_operations ub_file_operations = {

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#234: FILE: kernel/ub/proc.c:170:
+static struct seq_operations ub_sub_seq_ops = {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#241: FILE: kernel/ub/proc.c:177:
+static int ub_sub_open(struct inode *inode, struct file *filp)
                                                          ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#243: FILE: kernel/ub/proc.c:179:
+	return seq_open(filp, &ub_sub_seq_ops);
 	                ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#246: FILE: kernel/ub/proc.c:182:
+static struct file_operations ub_sub_file_operations = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#257: FILE: kernel/ub/proc.c:193:
+	entry = create_proc_entry("user_beancounters", S_IRUGO, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#263: FILE: kernel/ub/proc.c:199:
+	entry = create_proc_entry("user_beancounters_sub", S_IRUGO, NULL);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000047257.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 20 warnings, 5 checks, 216 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000047257.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
