CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#74: FILE: fs/proc/base.c:259:
+	E(PROC_TGID_UTS,       "uts",    S_IFDIR|S_IRUGO|S_IXUGO),
 	                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#74: FILE: fs/proc/base.c:259:
+	E(PROC_TGID_UTS,       "uts",    S_IFDIR|S_IRUGO|S_IXUGO),
 	                                                ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IXUGO' are not preferred. Consider using octal permissions '0555'.
#74: FILE: fs/proc/base.c:259:
+	E(PROC_TGID_UTS,       "uts",    S_IFDIR|S_IRUGO|S_IXUGO),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#84: FILE: fs/proc/base.c:304:
+	E(PROC_TID_UTS,        "uts",     S_IFDIR|S_IRUGO|S_IXUGO),
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#84: FILE: fs/proc/base.c:304:
+	E(PROC_TID_UTS,        "uts",     S_IFDIR|S_IRUGO|S_IXUGO),
 	                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IXUGO' are not preferred. Consider using octal permissions '0555'.
#84: FILE: fs/proc/base.c:304:
+	E(PROC_TID_UTS,        "uts",     S_IFDIR|S_IRUGO|S_IXUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#95: FILE: fs/proc/base.c:328:
+	E(PROC_TGID_UTS_SYSNAME,    "sysname",    S_IFREG|S_IRUGO|S_IWUGO),
 	                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#95: FILE: fs/proc/base.c:328:
+	E(PROC_TGID_UTS_SYSNAME,    "sysname",    S_IFREG|S_IRUGO|S_IWUGO),
 	                                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#95: FILE: fs/proc/base.c:328:
+	E(PROC_TGID_UTS_SYSNAME,    "sysname",    S_IFREG|S_IRUGO|S_IWUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#96: FILE: fs/proc/base.c:329:
+	E(PROC_TGID_UTS_NODENAME,   "nodename",   S_IFREG|S_IRUGO|S_IWUGO),
 	                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#96: FILE: fs/proc/base.c:329:
+	E(PROC_TGID_UTS_NODENAME,   "nodename",   S_IFREG|S_IRUGO|S_IWUGO),
 	                                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#96: FILE: fs/proc/base.c:329:
+	E(PROC_TGID_UTS_NODENAME,   "nodename",   S_IFREG|S_IRUGO|S_IWUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#97: FILE: fs/proc/base.c:330:
+	E(PROC_TGID_UTS_RELEASE,    "release",    S_IFREG|S_IRUGO|S_IWUGO),
 	                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#97: FILE: fs/proc/base.c:330:
+	E(PROC_TGID_UTS_RELEASE,    "release",    S_IFREG|S_IRUGO|S_IWUGO),
 	                                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#97: FILE: fs/proc/base.c:330:
+	E(PROC_TGID_UTS_RELEASE,    "release",    S_IFREG|S_IRUGO|S_IWUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#98: FILE: fs/proc/base.c:331:
+	E(PROC_TGID_UTS_VERSION,    "version",    S_IFREG|S_IRUGO|S_IWUGO),
 	                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#98: FILE: fs/proc/base.c:331:
+	E(PROC_TGID_UTS_VERSION,    "version",    S_IFREG|S_IRUGO|S_IWUGO),
 	                                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#98: FILE: fs/proc/base.c:331:
+	E(PROC_TGID_UTS_VERSION,    "version",    S_IFREG|S_IRUGO|S_IWUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#99: FILE: fs/proc/base.c:332:
+	E(PROC_TGID_UTS_MACHINE,    "machine",    S_IFREG|S_IRUGO|S_IWUGO),
 	                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#99: FILE: fs/proc/base.c:332:
+	E(PROC_TGID_UTS_MACHINE,    "machine",    S_IFREG|S_IRUGO|S_IWUGO),
 	                                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#99: FILE: fs/proc/base.c:332:
+	E(PROC_TGID_UTS_MACHINE,    "machine",    S_IFREG|S_IRUGO|S_IWUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#100: FILE: fs/proc/base.c:333:
+	E(PROC_TGID_UTS_DOMAINNAME, "domainname", S_IFREG|S_IRUGO|S_IWUGO),
 	                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#100: FILE: fs/proc/base.c:333:
+	E(PROC_TGID_UTS_DOMAINNAME, "domainname", S_IFREG|S_IRUGO|S_IWUGO),
 	                                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#100: FILE: fs/proc/base.c:333:
+	E(PROC_TGID_UTS_DOMAINNAME, "domainname", S_IFREG|S_IRUGO|S_IWUGO),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#101: FILE: fs/proc/base.c:334:
+	{0,0,NULL,0}
 	  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#101: FILE: fs/proc/base.c:334:
+	{0,0,NULL,0}
 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#101: FILE: fs/proc/base.c:334:
+	{0,0,NULL,0}
 	         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#103: FILE: fs/proc/base.c:336:
+};
+static struct pid_entry tid_uts_stuff[] = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#104: FILE: fs/proc/base.c:337:
+	E(PROC_TID_UTS_SYSNAME,    "sysname",    S_IFREG|S_IRUGO|S_IWUGO),
 	                                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#104: FILE: fs/proc/base.c:337:
+	E(PROC_TID_UTS_SYSNAME,    "sysname",    S_IFREG|S_IRUGO|S_IWUGO),
 	                                                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#104: FILE: fs/proc/base.c:337:
+	E(PROC_TID_UTS_SYSNAME,    "sysname",    S_IFREG|S_IRUGO|S_IWUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#105: FILE: fs/proc/base.c:338:
+	E(PROC_TID_UTS_NODENAME,   "nodename",   S_IFREG|S_IRUGO|S_IWUGO),
 	                                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#105: FILE: fs/proc/base.c:338:
+	E(PROC_TID_UTS_NODENAME,   "nodename",   S_IFREG|S_IRUGO|S_IWUGO),
 	                                                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#105: FILE: fs/proc/base.c:338:
+	E(PROC_TID_UTS_NODENAME,   "nodename",   S_IFREG|S_IRUGO|S_IWUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#106: FILE: fs/proc/base.c:339:
+	E(PROC_TID_UTS_RELEASE,    "release",    S_IFREG|S_IRUGO|S_IWUGO),
 	                                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#106: FILE: fs/proc/base.c:339:
+	E(PROC_TID_UTS_RELEASE,    "release",    S_IFREG|S_IRUGO|S_IWUGO),
 	                                                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#106: FILE: fs/proc/base.c:339:
+	E(PROC_TID_UTS_RELEASE,    "release",    S_IFREG|S_IRUGO|S_IWUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#107: FILE: fs/proc/base.c:340:
+	E(PROC_TID_UTS_VERSION,    "version",    S_IFREG|S_IRUGO|S_IWUGO),
 	                                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#107: FILE: fs/proc/base.c:340:
+	E(PROC_TID_UTS_VERSION,    "version",    S_IFREG|S_IRUGO|S_IWUGO),
 	                                                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#107: FILE: fs/proc/base.c:340:
+	E(PROC_TID_UTS_VERSION,    "version",    S_IFREG|S_IRUGO|S_IWUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#108: FILE: fs/proc/base.c:341:
+	E(PROC_TID_UTS_MACHINE,    "machine",    S_IFREG|S_IRUGO|S_IWUGO),
 	                                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#108: FILE: fs/proc/base.c:341:
+	E(PROC_TID_UTS_MACHINE,    "machine",    S_IFREG|S_IRUGO|S_IWUGO),
 	                                                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#108: FILE: fs/proc/base.c:341:
+	E(PROC_TID_UTS_MACHINE,    "machine",    S_IFREG|S_IRUGO|S_IWUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#109: FILE: fs/proc/base.c:342:
+	E(PROC_TID_UTS_DOMAINNAME, "domainname", S_IFREG|S_IRUGO|S_IWUGO),
 	                                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#109: FILE: fs/proc/base.c:342:
+	E(PROC_TID_UTS_DOMAINNAME, "domainname", S_IFREG|S_IRUGO|S_IWUGO),
 	                                                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#109: FILE: fs/proc/base.c:342:
+	E(PROC_TID_UTS_DOMAINNAME, "domainname", S_IFREG|S_IRUGO|S_IWUGO),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#110: FILE: fs/proc/base.c:343:
+	{0,0,NULL,0}
 	  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#110: FILE: fs/proc/base.c:343:
+	{0,0,NULL,0}
 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#110: FILE: fs/proc/base.c:343:
+	{0,0,NULL,0}
 	         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#122: FILE: fs/proc/base.c:1656:
+static ssize_t proc_pid_uts_read(struct file * file, char __user * buf,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#122: FILE: fs/proc/base.c:1656:
+static ssize_t proc_pid_uts_read(struct file * file, char __user * buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: fs/proc/base.c:1657:
+static ssize_t proc_pid_uts_read(struct file * file, char __user * buf,
+				  size_t count, loff_t *ppos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#125: FILE: fs/proc/base.c:1659:
+	struct inode * inode = file->f_dentry->d_inode;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#129: FILE: fs/proc/base.c:1663:
+	char __buf[__NEW_UTS_LEN+1];
 	                        ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#136: FILE: fs/proc/base.c:1670:
+	switch (file->f_dentry->d_name.name[0]) {
+		case 's':
[...]
+		case 'n':
[...]
+		case 'r':
[...]
+		case 'v':
[...]
+		case 'm':
[...]
+		case 'd':
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#156: FILE: fs/proc/base.c:1690:
+			printk("procfs: impossible uts part '%s'",

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#157: FILE: fs/proc/base.c:1691:
+			       (char*)file->f_dentry->d_name.name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: fs/proc/base.c:1695:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#179: FILE: fs/proc/base.c:1713:
+static ssize_t proc_pid_uts_write(struct file * file, const char __user * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#179: FILE: fs/proc/base.c:1713:
+static ssize_t proc_pid_uts_write(struct file * file, const char __user * buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: fs/proc/base.c:1714:
+static ssize_t proc_pid_uts_write(struct file * file, const char __user * buf,
+				   size_t count, loff_t *ppos)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: fs/proc/base.c:1715:
+{ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#182: FILE: fs/proc/base.c:1716:
+	struct inode * inode = file->f_dentry->d_inode;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: fs/proc/base.c:1717:
+^Issize_t length; $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#186: FILE: fs/proc/base.c:1720:
+	char __buf[__NEW_UTS_LEN+1];
 	                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: fs/proc/base.c:1725:
+^Iif (count > PAGE_SIZE) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: fs/proc/base.c:1726:
+^I^Icount = PAGE_SIZE; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: fs/proc/base.c:1734:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: fs/proc/base.c:1735:
+^Ilength = -EPERM; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: fs/proc/base.c:1739:
+^Ilength = -EFAULT; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: fs/proc/base.c:1740:
+^Iif (copy_from_user(__buf, buf, count)) $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#214: FILE: fs/proc/base.c:1748:
+	if (__buf[length-1] == '\n')
 	                ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#218: FILE: fs/proc/base.c:1752:
+	switch (file->f_dentry->d_name.name[0]) {
+		case 's':
[...]
+		case 'n':
[...]
+		case 'r':
[...]
+		case 'v':
[...]
+		case 'm':
[...]
+		case 'd':
[...]
+		default:

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#238: FILE: fs/proc/base.c:1772:
+			printk("procfs: impossible uts part '%s'",

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#239: FILE: fs/proc/base.c:1773:
+			       (char*)file->f_dentry->d_name.name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: fs/proc/base.c:1777:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: fs/proc/base.c:1784:
+} $

WARNING:CONST_STRUCT: struct file_operations should normally be const
#252: FILE: fs/proc/base.c:1786:
+static struct file_operations proc_pid_uts_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#257: FILE: fs/proc/base.c:1791:
+static struct file_operations proc_tid_uts_operations;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#258: FILE: fs/proc/base.c:1792:
+static struct inode_operations proc_tid_uts_inode_operations;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#259: FILE: fs/proc/base.c:1793:
+static struct file_operations proc_tgid_uts_operations;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#260: FILE: fs/proc/base.c:1794:
+static struct inode_operations proc_tgid_uts_inode_operations;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#302: FILE: fs/proc/base.c:2103:
+static int proc_tgid_uts_readdir(struct file * filp,
                                                ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#302: FILE: fs/proc/base.c:2103:
+static int proc_tgid_uts_readdir(struct file * filp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#303: FILE: fs/proc/base.c:2104:
+static int proc_tgid_uts_readdir(struct file * filp,
+			     void * dirent, filldir_t filldir)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#303: FILE: fs/proc/base.c:2104:
+			     void * dirent, filldir_t filldir)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#305: FILE: fs/proc/base.c:2106:
+	return proc_pident_readdir(filp,dirent,filldir,
 	                           ^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#305: FILE: fs/proc/base.c:2106:
+	return proc_pident_readdir(filp,dirent,filldir,
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#305: FILE: fs/proc/base.c:2106:
+	return proc_pident_readdir(filp,dirent,filldir,
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#306: FILE: fs/proc/base.c:2107:
+				   tgid_uts_stuff,ARRAY_SIZE(tgid_uts_stuff));
 				                 ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#309: FILE: fs/proc/base.c:2110:
+static int proc_tid_uts_readdir(struct file * filp,
                                               ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#309: FILE: fs/proc/base.c:2110:
+static int proc_tid_uts_readdir(struct file * filp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: fs/proc/base.c:2111:
+static int proc_tid_uts_readdir(struct file * filp,
+			     void * dirent, filldir_t filldir)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#310: FILE: fs/proc/base.c:2111:
+			     void * dirent, filldir_t filldir)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#312: FILE: fs/proc/base.c:2113:
+	return proc_pident_readdir(filp,dirent,filldir,
 	                           ^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#312: FILE: fs/proc/base.c:2113:
+	return proc_pident_readdir(filp,dirent,filldir,
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#312: FILE: fs/proc/base.c:2113:
+	return proc_pident_readdir(filp,dirent,filldir,
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#313: FILE: fs/proc/base.c:2114:
+				   tid_uts_stuff,ARRAY_SIZE(tid_uts_stuff));
 				                ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#316: FILE: fs/proc/base.c:2117:
+static struct file_operations proc_tgid_uts_operations = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#321: FILE: fs/proc/base.c:2122:
+static struct file_operations proc_tid_uts_operations = {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000075528.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 37 errors, 27 warnings, 36 checks, 284 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000075528.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
