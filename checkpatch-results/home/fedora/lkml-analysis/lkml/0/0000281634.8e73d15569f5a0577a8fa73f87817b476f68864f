WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
diff -urN linux-2.5/arch/ppc/kernel/Makefile ppc-2.5/arch/ppc/kernel/Makefile

CHECK:CAMELCASE: Avoid CamelCase: <AltivecUnavailException>
#125: FILE: arch/ppc/kernel/traps.c:634:
+void AltivecUnavailException(struct pt_regs *regs)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#132: FILE: arch/ppc/kernel/traps.c:641:
+		/* A user program has executed an altivec instruction,
+		   but this kernel doesn't support altivec. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#132: FILE: arch/ppc/kernel/traps.c:641:
+		   but this kernel doesn't support altivec. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#138: FILE: arch/ppc/kernel/traps.c:647:
+	/* The kernel has executed an altivec instruction without
+	   first enabling altivec.  Whinge but let it do it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#138: FILE: arch/ppc/kernel/traps.c:647:
+	   first enabling altivec.  Whinge but let it do it. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#140: FILE: arch/ppc/kernel/traps.c:649:
+		printk(KERN_ERR "AltiVec used in kernel (task=%p, pc=%x)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#171: FILE: arch/ppc/kernel/traps.c:678:
+		printk(KERN_ERR "unrecognized altivec instruction "

WARNING:SPLIT_STRING: quoted string split across lines
#172: FILE: arch/ppc/kernel/traps.c:679:
+		printk(KERN_ERR "unrecognized altivec instruction "
+		       "in %s at %lx\n", current->comm, regs->nip);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#182: FILE: arch/ppc/kernel/vecemu.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#190: FILE: arch/ppc/kernel/vecemu.c:9:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#191: FILE: arch/ppc/kernel/vecemu.c:10:
+#include <asm/uaccess.h>

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#194: FILE: arch/ppc/kernel/vecemu.c:13:
+extern void vaddfp(vector128 *dst, vector128 *a, vector128 *b);
                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#194: FILE: arch/ppc/kernel/vecemu.c:13:
+extern void vaddfp(vector128 *dst, vector128 *a, vector128 *b);
                                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#194: FILE: arch/ppc/kernel/vecemu.c:13:
+extern void vaddfp(vector128 *dst, vector128 *a, vector128 *b);
                                                            ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#195: FILE: arch/ppc/kernel/vecemu.c:14:
+extern void vsubfp(vector128 *dst, vector128 *a, vector128 *b);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#196: FILE: arch/ppc/kernel/vecemu.c:15:
+extern void vmaddfp(vector128 *dst, vector128 *a, vector128 *b, vector128 *c);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#197: FILE: arch/ppc/kernel/vecemu.c:16:
+extern void vnmsubfp(vector128 *dst, vector128 *a, vector128 *b, vector128 *c);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#198: FILE: arch/ppc/kernel/vecemu.c:17:
+extern void vrefp(vector128 *dst, vector128 *src);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#199: FILE: arch/ppc/kernel/vecemu.c:18:
+extern void vrsqrtefp(vector128 *dst, vector128 *src);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#200: FILE: arch/ppc/kernel/vecemu.c:19:
+extern void vexptep(vector128 *dst, vector128 *src);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#229: FILE: arch/ppc/kernel/vecemu.c:48:
+		return (s & 0x80000000)? 0: 0x7f800000;	/* 0 or +Inf */
 		                       ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#229: FILE: arch/ppc/kernel/vecemu.c:48:
+		return (s & 0x80000000)? 0: 0x7f800000;	/* 0 or +Inf */
 		                          ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#350: FILE: arch/ppc/kernel/vecemu.c:169:
+		return (x & 0x80000000)? 0x80000000: 0x7fffffff;
 		                       ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#350: FILE: arch/ppc/kernel/vecemu.c:169:
+		return (x & 0x80000000)? 0x80000000: 0x7fffffff;
 		                                   ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#354: FILE: arch/ppc/kernel/vecemu.c:173:
+	return (x & 0x80000000)? -mant: mant;
 	                       ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#354: FILE: arch/ppc/kernel/vecemu.c:173:
+	return (x & 0x80000000)? -mant: mant;
 	                              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#416: FILE: arch/ppc/kernel/vecemu.c:235:
+	/* mantissa overflows into exponent - that's OK,
+	   it can't overflow into the sign bit */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#416: FILE: arch/ppc/kernel/vecemu.c:235:
+	   it can't overflow into the sign bit */

CHECK:SPACING: No space is necessary after a cast
#447: FILE: arch/ppc/kernel/vecemu.c:266:
+	if (get_user(instr, (unsigned int *) regs->nip))

WARNING:LINE_SPACING: Missing a blank line after declarations
#491: FILE: arch/ppc/kernel/vecemu.c:310:
+				u32 x = vrs[vb].u[i];
+				x = (x & 0x80000000)? rfiz(x): rfii(x);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#491: FILE: arch/ppc/kernel/vecemu.c:310:
+				x = (x & 0x80000000)? rfiz(x): rfii(x);
 				                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#491: FILE: arch/ppc/kernel/vecemu.c:310:
+				x = (x & 0x80000000)? rfiz(x): rfii(x);
 				                             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#498: FILE: arch/ppc/kernel/vecemu.c:317:
+				u32 x = vrs[vb].u[i];
+				x = (x & 0x80000000)? rfii(x): rfiz(x);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#498: FILE: arch/ppc/kernel/vecemu.c:317:
+				x = (x & 0x80000000)? rfii(x): rfiz(x);
 				                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#498: FILE: arch/ppc/kernel/vecemu.c:317:
+				x = (x & 0x80000000)? rfii(x): rfiz(x);
 				                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#505: FILE: arch/ppc/kernel/vecemu.c:324:
+				vrs[vd].u[i] = ctuxs(vrs[vb].u[i], va,
+						&current->thread.vscr.u[3]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#510: FILE: arch/ppc/kernel/vecemu.c:329:
+				vrs[vd].u[i] = ctsxs(vrs[vb].u[i], va,
+						&current->thread.vscr.u[3]);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#532: FILE: arch/ppc/kernel/vector.S:1:
+#include <asm/ppc_asm.h>

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000281634.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 20 warnings, 9 checks, 673 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000281634.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
