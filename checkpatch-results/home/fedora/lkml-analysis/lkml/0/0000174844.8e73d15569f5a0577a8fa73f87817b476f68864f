CHECK:LINE_SPACING: Please don't use multiple blank lines
#55: FILE: drivers/base/driver.c:21:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: drivers/base/driver.c:32:
+int driver_for_each_device(struct device_driver * drv, struct device * start, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#66: FILE: drivers/base/driver.c:32:
+int driver_for_each_device(struct device_driver * drv, struct device * start, 
+			   void * data, int (*fn)(struct device *, void *))
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#66: FILE: drivers/base/driver.c:32:
+int driver_for_each_device(struct device_driver * drv, struct device * start, 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#66: FILE: drivers/base/driver.c:32:
+int driver_for_each_device(struct device_driver * drv, struct device * start, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#67: FILE: drivers/base/driver.c:33:
+			   void * data, int (*fn)(struct device *, void *))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#69: FILE: drivers/base/driver.c:35:
+	struct list_head * head;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#70: FILE: drivers/base/driver.c:36:
+	struct device * dev;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#87: FILE: drivers/base/driver.c:53:
+EXPORT_SYMBOL(driver_for_each_device);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#89: FILE: drivers/base/driver.c:55:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#100: FILE: include/linux/device.h:139:
+extern int driver_for_each_device(struct device_driver * drv, struct device * start,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#100: FILE: include/linux/device.h:139:
+extern int driver_for_each_device(struct device_driver * drv, struct device * start,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#100: FILE: include/linux/device.h:139:
+extern int driver_for_each_device(struct device_driver * drv, struct device * start,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#101: FILE: include/linux/device.h:140:
+				  void * data, int (*fn)(struct device *, void *));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174844.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 1 warnings, 3 checks, 50 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174844.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
