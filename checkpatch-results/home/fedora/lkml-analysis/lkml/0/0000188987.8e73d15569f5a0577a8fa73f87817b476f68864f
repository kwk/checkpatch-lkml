WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#49: FILE: drivers/base/node.c:139:
+int __devinit register_node(struct node *node, int num, struct node *parent)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!node"
#76: FILE: drivers/base/node.c:168:
+	if (node == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#87: FILE: drivers/base/node.c:179:
+EXPORT_SYMBOL(unregister_node);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#109: FILE: include/linux/node.h:30:
+extern int __devinit register_node(struct node *, int, struct node *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#109: FILE: include/linux/node.h:30:
+extern int __devinit register_node(struct node *, int, struct node *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct node *' should also have an identifier name
#109: FILE: include/linux/node.h:30:
+extern int __devinit register_node(struct node *, int, struct node *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#109: FILE: include/linux/node.h:30:
+extern int __devinit register_node(struct node *, int, struct node *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct node *' should also have an identifier name
#109: FILE: include/linux/node.h:30:
+extern int __devinit register_node(struct node *, int, struct node *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#111: FILE: include/linux/node.h:32:
+extern void unregister_node(struct node *node);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000188987.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 6 warnings, 3 checks, 65 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000188987.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
