WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#108: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#109: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:2:
+/*
+*  sym53c500_cs.c	Bob Tracy (rct@frus.com)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:20:
+*^Ifrom NCR53c406a.c which is Copyrighted (C) 1994, 1995, 1996 $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:28:
+* $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#151: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:44:
+/*
+*  proc_info() is deprecated in 2.6.  Set this to 1 if you want to

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:50:
+*  Set this to 0 if you encounter kernel lockups while transferring $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#157: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:50:
+/*
+*  Set this to 0 if you encounter kernel lockups while transferring 

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#178: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:71:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#180: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:73:
+#include <asm/bitops.h>

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#198: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:91:
+static const char *SYM53C500_info(struct Scsi_Host *);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#211: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:104:
+#define DEBUG(n, args...) if (pc_debug>(n)) printk(KERN_DEBUG args)

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#211: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:104:
+#define DEBUG(n, args...) if (pc_debug>(n)) printk(KERN_DEBUG args)
                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#211: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:104:
+#define DEBUG(n, args...) if (pc_debug>(n)) printk(KERN_DEBUG args)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#234: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:127:
+#define SYNC_MODE 0 ^I^I/* Synchronous transfer mode */$

WARNING:TYPO_SPELLING: 'ANE' may be misspelled - perhaps 'AND'?
#240: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:133:
+#define C4_IMG   0x04		/* ANE */
                      		   ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'SIE' may be misspelled - perhaps 'SIZE'?
#241: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:134:
+#define C5_IMG   0xa4		/* ? changed from b6= AA PI SIE POL */
                      		                            ^^^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#288: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:181:
+#define REG1(x)		outb(C7_IMG, (x) + CONFIG7); outb(C5_IMG, (x) + CONFIG5)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#288: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:181:
+#define REG1(x)		outb(C7_IMG, (x) + CONFIG7); outb(C5_IMG, (x) + CONFIG5)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#302: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:195:
+#define LOAD_DMA_COUNT(x, count) \
+  outb(count & 0xff, (x) + TC_LSB); \
+  outb((count >> 8) & 0xff, (x) + TC_MSB); \
+  outb((count >> 16) & 0xff, (x) + TC_HIGH);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#302: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:195:
+#define LOAD_DMA_COUNT(x, count) \
+  outb(count & 0xff, (x) + TC_LSB); \
+  outb((count >> 8) & 0xff, (x) + TC_MSB); \
+  outb((count >> 16) & 0xff, (x) + TC_HIGH);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'count' - possible side-effects?
#302: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:195:
+#define LOAD_DMA_COUNT(x, count) \
+  outb(count & 0xff, (x) + TC_LSB); \
+  outb((count >> 8) & 0xff, (x) + TC_MSB); \
+  outb((count >> 16) & 0xff, (x) + TC_HIGH);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'count' may be better as '(count)' to avoid precedence issues
#302: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:195:
+#define LOAD_DMA_COUNT(x, count) \
+  outb(count & 0xff, (x) + TC_LSB); \
+  outb((count >> 8) & 0xff, (x) + TC_MSB); \
+  outb((count >> 16) & 0xff, (x) + TC_HIGH);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#302: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:195:
+#define LOAD_DMA_COUNT(x, count) \
+  outb(count & 0xff, (x) + TC_LSB); \
+  outb((count >> 8) & 0xff, (x) + TC_MSB); \
+  outb((count >> 16) & 0xff, (x) + TC_HIGH);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:196:
+  outb(count & 0xff, (x) + TC_LSB); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:197:
+  outb((count >> 8) & 0xff, (x) + TC_MSB); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:198:
+  outb((count >> 16) & 0xff, (x) + TC_HIGH);$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#351: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:244:
+/*
+*  Repository for per-instance host data.

CHECK:CAMELCASE: Avoid CamelCase: <Phase>
#358: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:251:
+enum Phase {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:252:
+    idle,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:253:
+    data_out,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:254:
+    data_in,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:255:
+    command_ph,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:256:
+    status_ph,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:257:
+    message_out,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:258:
+    message_in$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#371: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:264:
+/*
+*  Global (within this module) variables.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#375: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:268:
+/*
+*  scsi_host_template initializer

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:276:
+     .module^I^I^I= THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:277:
+     .name^I^I^I= "SYM53C500",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:278:
+     .info^I^I^I= SYM53C500_info,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:279:
+     .queuecommand^I^I= SYM53C500_queue,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:280:
+     .eh_abort_handler^I^I= SYM53C500_abort,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:281:
+     .eh_host_reset_handler^I= SYM53C500_host_reset,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:282:
+     .bios_param^I^I= SYM53C500_biosparm,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:284:
+     .proc_info^I^I^I= SYM53C500_proc_info,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:286:
+     .proc_name^I^I^I= "SYM53C500",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:287:
+     .can_queue^I^I^I= 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:288:
+     .this_id^I^I^I= 7,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:289:
+     .sg_tablesize^I^I= 32,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:290:
+     .cmd_per_lun^I^I= 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:291:
+     .use_clustering^I^I= ENABLE_CLUSTERING$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#404: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:297:
+/*
+*  possible i/o port addresses: provided for informational purposes only,

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#410: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:303:
+static dev_link_t *dev_list = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#430: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:323:
+^Ioutb(SYNC_MODE, io_port + SYNCOFF);^I/* synchronous mode */  $

WARNING:INLINE: plain inline is preferred over __inline__
#443: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:336:
+static __inline__ int

ERROR:TRAILING_WHITESPACE: trailing whitespace
#453: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:346:
+^I^Iif (i & 0x80) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#463: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:356:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#480: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:373:
+^I^I^Iif (len > reqlen) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:378:
+^I^I^I^Irequest += len & 0xfc; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#486: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:379:
+^I^I^I^Ireqlen -= len & 0xfc; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#492: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:385:
+^I^I^I} $

WARNING:INLINE: plain inline is preferred over __inline__
#498: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:391:
+static __inline__ int

WARNING:LINE_SPACING: Missing a blank line after declarations
#554: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:447:
+	struct Scsi_Host *dev = dev_id;
+	DEB(unsigned char fifo_size;)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <curSC>
#563: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:456:
+	struct scsi_cmnd *curSC = data->current_SC;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#567: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:460:
+	VDEB(printk("SYM53C500_intr called\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'SYM53C500_intr', this function's name, in a string
#567: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:460:
+	VDEB(printk("SYM53C500_intr called\n"));

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#578: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:471:
+^Iprintk("status=%02x, seq_reg=%02x, int_reg=%02x, fifo_size=%02x", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#578: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:471:
+	printk("status=%02x, seq_reg=%02x, int_reg=%02x, fifo_size=%02x", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#579: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:472:
+	printk("status=%02x, seq_reg=%02x, int_reg=%02x, fifo_size=%02x", 
+	    status, seq_reg, int_reg, fifo_size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#580: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:473:
+	printk(", pio=%02x\n", pio_status);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#584: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:477:
+		DEB(printk("SYM53C500: reset intr received\n"));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#590: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:483:
+		printk("SYM53C500: Warning: PIO error!\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#596: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:489:
+		printk("SYM53C500: Warning: parity error!\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#602: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:495:
+		printk("SYM53C500: Warning: gross error!\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#608: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:501:
+		DEB(printk("SYM53C500: disconnect intr received\n"));

CHECK:CAMELCASE: Avoid CamelCase: <SCp>
#609: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:502:
+		if (curSC->SCp.phase != message_in) {	/* Unexpected disconnect */

CHECK:CAMELCASE: Avoid CamelCase: <Status>
#612: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:505:
+			curSC->result = (curSC->SCp.Status & 0xff)

CHECK:CAMELCASE: Avoid CamelCase: <Message>
#613: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:506:
+			    | ((curSC->SCp.Message & 0xff) << 8) | (DID_OK << 16);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#622: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:515:
+			VDEB(printk("SYM53C500: Data-Out phase\n"));

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#624: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:517:
+			LOAD_DMA_COUNT(port_base, curSC->request_bufflen);	/* Max transfer size */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#627: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:520:
+				SYM53C500_pio_write(port_base, curSC->request_buffer, curSC->request_bufflen);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:BRACES: Unbalanced braces around else statement
#628: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:521:
+			else {	/* use scatter-gather */

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#632: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:525:
+					SYM53C500_pio_write(port_base, page_address(sglist->page) + sglist->offset, sglist->length);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#643: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:536:
+			VDEB(printk("SYM53C500: Data-In phase\n"));

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#645: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:538:
+			LOAD_DMA_COUNT(port_base, curSC->request_bufflen);	/* Max transfer size */

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#648: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:541:
+				SYM53C500_pio_read(port_base, curSC->request_buffer, curSC->request_bufflen);

CHECK:BRACES: Unbalanced braces around else statement
#649: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:542:
+			else {	/* Use scatter-gather */

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#653: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:546:
+					SYM53C500_pio_read(port_base, page_address(sglist->page) + sglist->offset, sglist->length);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#663: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:556:
+		printk("SYM53C500: Warning: Unknown interrupt occurred in command phase!\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#668: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:561:
+		VDEB(printk("SYM53C500: Status phase\n"));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#675: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:568:
+		printk("SYM53C500: WARNING: Reserved phase!!!\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#679: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:572:
+		DEB(printk("SYM53C500: Message-Out phase\n"));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#686: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:579:
+		VDEB(printk("SYM53C500: Message-In phase\n"));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#692: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:585:
+		VDEB(printk("SCSI FIFO size=%d\n", inb(port_base + FIFO_FLAGS) & 0x1f));

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#693: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:586:
+		DEB(printk("Status = %02x  Message = %02x\n", curSC->SCp.Status, curSC->SCp.Message));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#693: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:586:
+		DEB(printk("Status = %02x  Message = %02x\n", curSC->SCp.Status, curSC->SCp.Message));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#697: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:590:
+			DEB(printk("Discarding SAVE_POINTERS message\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'SYM53C500_release', this function's name, in a string
#718: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:611:
+	DEBUG(0, "SYM53C500_release(0x%p)\n", link);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#721: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:614:
+	/*
+	*  Do this before releasing/freeing resources.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#726: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:619:
+	/*
+	*  Interrupts getting hosed on card removal.  Try

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#747: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:640:
+#define CS_CHECK(fn, ret) \
+do { last_fn = (fn); if ((last_ret = (ret)) != 0) goto cs_failed; } while (0)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'SYM53C500_config', this function's name, in a string
#764: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:657:
+	DEBUG(0, "SYM53C500_config(0x%p)\n", link);

CHECK:CAMELCASE: Avoid CamelCase: <TupleData>
#766: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:659:
+	tuple.TupleData = (cisdata_t *)tuple_data;

CHECK:CAMELCASE: Avoid CamelCase: <TupleDataMax>
#767: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:660:
+	tuple.TupleDataMax = 64;

CHECK:CAMELCASE: Avoid CamelCase: <TupleOffset>
#768: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:661:
+	tuple.TupleOffset = 0;

CHECK:CAMELCASE: Avoid CamelCase: <DesiredTuple>
#769: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:662:
+	tuple.DesiredTuple = CISTPL_CONFIG;

CHECK:CAMELCASE: Avoid CamelCase: <GetFirstTuple>
#770: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:663:
+	CS_CHECK(GetFirstTuple, pcmcia_get_first_tuple(handle, &tuple));

CHECK:CAMELCASE: Avoid CamelCase: <GetTupleData>
#771: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:664:
+	CS_CHECK(GetTupleData, pcmcia_get_tuple_data(handle, &tuple));

CHECK:CAMELCASE: Avoid CamelCase: <ParseTuple>
#772: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:665:
+	CS_CHECK(ParseTuple, pcmcia_parse_tuple(handle, &tuple, &parse));

CHECK:CAMELCASE: Avoid CamelCase: <ConfigBase>
#773: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:666:
+	link->conf.ConfigBase = parse.config.base;

CHECK:CAMELCASE: Avoid CamelCase: <ConfigIndex>
#789: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:682:
+		link->conf.ConfigIndex = parse.cftable_entry.index;

CHECK:CAMELCASE: Avoid CamelCase: <BasePort1>
#790: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:683:
+		link->io.BasePort1 = parse.cftable_entry.io.win[0].base;

CHECK:CAMELCASE: Avoid CamelCase: <NumPorts1>
#791: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:684:
+		link->io.NumPorts1 = parse.cftable_entry.io.win[0].len;

CHECK:CAMELCASE: Avoid CamelCase: <GetNextTuple>
#799: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:692:
+		CS_CHECK(GetNextTuple, pcmcia_get_next_tuple(handle, &tuple));

CHECK:CAMELCASE: Avoid CamelCase: <RequestIRQ>
#802: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:695:
+	CS_CHECK(RequestIRQ, pcmcia_request_irq(handle, &link->irq));

CHECK:CAMELCASE: Avoid CamelCase: <RequestConfiguration>
#803: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:696:
+	CS_CHECK(RequestConfiguration, pcmcia_request_configuration(handle, &link->conf));

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#806: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:699:
+	/*
+	*  That's the trouble with copying liberally from another driver.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->manf_id == MANFID_MACNICA'
#810: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:703:
+	if ((info->manf_id == MANFID_MACNICA) ||
+	    (info->manf_id == MANFID_PIONEER) ||
+	    (info->manf_id == 0x0098)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->manf_id == MANFID_PIONEER'
#810: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:703:
+	if ((info->manf_id == MANFID_MACNICA) ||
+	    (info->manf_id == MANFID_PIONEER) ||
+	    (info->manf_id == 0x0098)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->manf_id == 0x0098'
#810: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:703:
+	if ((info->manf_id == MANFID_MACNICA) ||
+	    (info->manf_id == MANFID_PIONEER) ||
+	    (info->manf_id == 0x0098)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#820: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:713:
+	/*
+	*  Note fast_pio is global and set at compile time.

CHECK:CAMELCASE: Avoid CamelCase: <AssignedIRQ>
#823: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:716:
+	irq_level = link->irq.AssignedIRQ;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#825: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:718:
+	DEB(printk("SYM53C500: port_base=0x%x, irq=%d, fast_pio=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#826: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:719:
+	DEB(printk("SYM53C500: port_base=0x%x, irq=%d, fast_pio=%d\n",
+	    port_base, irq_level, fast_pio);)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#832: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:725:
+		printk("SYM53C500: Unable to register host, giving up.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#840: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:733:
+			printk("SYM53C500: unable to allocate IRQ %d\n", irq_level);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#844: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:737:
+		DEB(printk("SYM53C500: allocated IRQ %d\n", irq_level));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#847: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:740:
+		DEB(printk("SYM53C500: No interrupts detected\n"));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#850: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:743:
+		DEB(printk("SYM53C500: Shouldn't get here!\n"));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#861: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:754:
+^I    "SYM53C500 at 0x%x, IRQ %d, %s PIO mode.", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#861: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:754:
+	snprintf(data->info_msg, sizeof(data->info_msg),
+	    "SYM53C500 at 0x%x, IRQ %d, %s PIO mode.", 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#881: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:774:
+	printk(KERN_INFO "sym53c500_cs: no SCSI devices found\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#891: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:784:
+	return;
+} /* SYM53C500_config */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'SYM53C500_event', this function's name, in a string
#899: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:792:
+	DEBUG(1, "SYM53C500_event(0x%06x)\n", event);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#913: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:806:
+		/* Fall through... */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#920: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:813:
+		/* Fall through... */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->manf_id == MANFID_MACNICA'
#925: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:818:
+			if ((info->manf_id == MANFID_MACNICA) ||
+			    (info->manf_id == MANFID_PIONEER) ||
+			    (info->manf_id == 0x0098)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->manf_id == MANFID_PIONEER'
#925: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:818:
+			if ((info->manf_id == MANFID_MACNICA) ||
+			    (info->manf_id == MANFID_PIONEER) ||
+			    (info->manf_id == 0x0098)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->manf_id == 0x0098'
#925: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:818:
+			if ((info->manf_id == MANFID_MACNICA) ||
+			    (info->manf_id == MANFID_PIONEER) ||
+			    (info->manf_id == 0x0098)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#933: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:826:
+			/*
+			*  If things don't work after a "resume",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'SYM53C500_detach', this function's name, in a string
#948: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:841:
+	DEBUG(0, "SYM53C500_detach(0x%p)\n", link);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!linkp"
#954: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:847:
+	if (*linkp == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'SYM53C500_attach', this function's name, in a string
#977: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:870:
+	DEBUG(0, "SYM53C500_attach()\n");

CHECK:CAMELCASE: Avoid CamelCase: <Attributes1>
#987: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:880:
+	link->io.Attributes1 = IO_DATA_PATH_WIDTH_AUTO;

CHECK:CAMELCASE: Avoid CamelCase: <IOAddrLines>
#988: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:881:
+	link->io.IOAddrLines = 10;

CHECK:CAMELCASE: Avoid CamelCase: <Attributes>
#989: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:882:
+	link->irq.Attributes = IRQ_TYPE_EXCLUSIVE;

CHECK:CAMELCASE: Avoid CamelCase: <IRQInfo1>
#990: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:883:
+	link->irq.IRQInfo1 = IRQ_INFO2_VALID | IRQ_LEVEL_ID;

CHECK:CAMELCASE: Avoid CamelCase: <IRQInfo2>
#992: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:885:
+		link->irq.IRQInfo2 = irq_mask;

CHECK:CAMELCASE: Avoid CamelCase: <Vcc>
#997: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:890:
+	link->conf.Vcc = 50;

CHECK:CAMELCASE: Avoid CamelCase: <IntType>
#998: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:891:
+	link->conf.IntType = INT_MEMORY_AND_IO;

CHECK:CAMELCASE: Avoid CamelCase: <Present>
#999: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:892:
+	link->conf.Present = PRESENT_OPTION;

CHECK:CAMELCASE: Avoid CamelCase: <EventMask>
#1007: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:900:
+	client_reg.EventMask = CS_EVENT_RESET_REQUEST | CS_EVENT_CARD_RESET |

CHECK:CAMELCASE: Avoid CamelCase: <Version>
#1010: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:903:
+	client_reg.Version = 0x0210;

CHECK:CAMELCASE: Avoid CamelCase: <RegisterClient>
#1014: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:907:
+		cs_error(link->handle, RegisterClient, ret);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1024: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:917:
+/*
+*  SYM53C500_proc_info is basically a stub function for now.  It

WARNING:TYPO_SPELLING: 'inout' may be misspelled - perhaps 'input'?
#1030: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:923:
+*  start:	if inout == FALSE, pointer into buffer where user
          	   ^^^^^

WARNING:TYPO_SPELLING: 'inout' may be misspelled - perhaps 'input'?
#1035: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:928:
+*  inout:	1 --> user is writing; 0 --> user is reading
    ^^^^^

WARNING:TYPO_SPELLING: 'inout' may be misspelled - perhaps 'input'?
#1047: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:940:
+    char **start, off_t offset, int length, int inout)
                                                 ^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1047: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:940:
+SYM53C500_proc_info(struct Scsi_Host *shost, char *buffer,
+    char **start, off_t offset, int length, int inout)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1047: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:940:
+    char **start, off_t offset, int length, int inout)$

WARNING:TYPO_SPELLING: 'inout' may be misspelled - perhaps 'input'?
#1053: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:946:
+	if (inout)
 	    ^^^^^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1054: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:947:
+		return(-ENOSYS);	/* look, but don't touch */

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1057: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:950:
+	/*
+	*  Cheesy, but it's what we had before.

CHECK:CAMELCASE: Avoid CamelCase: <SChost>
#1077: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:970:
+SYM53C500_info(struct Scsi_Host *SChost)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1082: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:975:
+	DEB(printk("SYM53C500_info called\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'SYM53C500_info', this function's name, in a string
#1082: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:975:
+	DEB(printk("SYM53C500_info called\n"));

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1083: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:976:
+	return (data->info_msg);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1086: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:979:
+static int $

CHECK:CAMELCASE: Avoid CamelCase: <SCpnt>
#1087: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:980:
+SYM53C500_queue(struct scsi_cmnd *SCpnt, void (*done)(struct scsi_cmnd *))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1094: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:987:
+	VDEB(printk("SYM53C500_queue called\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'SYM53C500_queue', this function's name, in a string
#1094: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:987:
+	VDEB(printk("SYM53C500_queue called\n"));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1096: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:989:
+^IDEB(printk("cmd=%02x, cmd_len=%02x, target=%02x, lun=%02x, bufflen=%d\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1096: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:989:
+	DEB(printk("cmd=%02x, cmd_len=%02x, target=%02x, lun=%02x, bufflen=%d\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1097: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:990:
+^I    SCpnt->cmnd[0], SCpnt->cmd_len, SCpnt->device->id, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1097: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:990:
+	DEB(printk("cmd=%02x, cmd_len=%02x, target=%02x, lun=%02x, bufflen=%d\n", 
+	    SCpnt->cmnd[0], SCpnt->cmd_len, SCpnt->device->id, 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1100: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:993:
+	VDEB(for (i = 0; i < SCpnt->cmd_len; i++)
+	    printk("cmd[%d]=%02x  ", i, SCpnt->cmnd[i]));

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1101: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:994:
+	    printk("cmd[%d]=%02x  ", i, SCpnt->cmnd[i]));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1102: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:995:
+	VDEB(printk("\n"));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1115: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:1008:
+	for (i = 0; i < SCpnt->cmd_len; i++) {
+		outb(SCpnt->cmnd[i], port_base + SCSI_FIFO);
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1126: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:1019:
+	DEB(printk("SYM53C500_abort called\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'SYM53C500_abort', this function's name, in a string
#1126: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:1019:
+	DEB(printk("SYM53C500_abort called\n"));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1130: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:1023:
+static int $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1135: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:1028:
+	DEB(printk("SYM53C500_host_reset called\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'SYM53C500_host_reset', this function's name, in a string
#1135: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:1028:
+	DEB(printk("SYM53C500_host_reset called\n"));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1141: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:1034:
+static int $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1143: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:1036:
+SYM53C500_biosparm(struct scsi_device *disk,
+    struct block_device *dev,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1143: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:1036:
+    struct block_device *dev,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1144: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:1037:
+    sector_t capacity, int *info_array)$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1148: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:1041:
+	DEB(printk("SYM53C500_biosparm called\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'SYM53C500_biosparm', this function's name, in a string
#1148: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:1041:
+	DEB(printk("SYM53C500_biosparm called\n"));

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1187: FILE: drivers/scsi/pcmcia/sym53c500_cs.c:1080:
+	/*
+	*  The standard comment seen at this point in almost

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286317.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 114 warnings, 53 checks, 1146 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286317.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
