ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#44: 
--- a/drivers/i2c/chips/Kconfig	Mon Mar 15 14:35:52 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#77: FILE: drivers/i2c/chips/w83627hf.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#78: FILE: drivers/i2c/chips/w83627hf.c:2:
+/*
+    w83627hf.c - Part of lm_sensors, Linux kernel modules for hardware

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: drivers/i2c/chips/w83627hf.c:3:
+                monitoring$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#96: FILE: drivers/i2c/chips/w83627hf.c:20:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#97: FILE: drivers/i2c/chips/w83627hf.c:21:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#101: FILE: drivers/i2c/chips/w83627hf.c:25:
+/*
+    Supports following chips:

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#122: FILE: drivers/i2c/chips/w83627hf.c:46:
+#include <asm/io.h>

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#226: FILE: drivers/i2c/chips/w83627hf.c:150:
+#define W83781D_REG_IN_MAX(nr) ((nr < 7) ? (0x2b + (nr) * 2) : \
+					   (0x554 + (((nr) - 7) * 2)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nr' may be better as '(nr)' to avoid precedence issues
#226: FILE: drivers/i2c/chips/w83627hf.c:150:
+#define W83781D_REG_IN_MAX(nr) ((nr < 7) ? (0x2b + (nr) * 2) : \
+					   (0x554 + (((nr) - 7) * 2)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#228: FILE: drivers/i2c/chips/w83627hf.c:152:
+#define W83781D_REG_IN_MIN(nr) ((nr < 7) ? (0x2c + (nr) * 2) : \
+					   (0x555 + (((nr) - 7) * 2)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nr' may be better as '(nr)' to avoid precedence issues
#228: FILE: drivers/i2c/chips/w83627hf.c:152:
+#define W83781D_REG_IN_MIN(nr) ((nr < 7) ? (0x2c + (nr) * 2) : \
+					   (0x555 + (((nr) - 7) * 2)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#230: FILE: drivers/i2c/chips/w83627hf.c:154:
+#define W83781D_REG_IN(nr)     ((nr < 7) ? (0x20 + (nr)) : \
+					   (0x550 + (nr) - 7))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nr' may be better as '(nr)' to avoid precedence issues
#230: FILE: drivers/i2c/chips/w83627hf.c:154:
+#define W83781D_REG_IN(nr)     ((nr < 7) ? (0x20 + (nr)) : \
+					   (0x550 + (nr) - 7))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#238: FILE: drivers/i2c/chips/w83627hf.c:162:
+#define W83781D_REG_TEMP(nr)		((nr == 3) ? (0x0250) : \
+					((nr == 2) ? (0x0150) : \
+					             (0x27)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nr' may be better as '(nr)' to avoid precedence issues
#238: FILE: drivers/i2c/chips/w83627hf.c:162:
+#define W83781D_REG_TEMP(nr)		((nr == 3) ? (0x0250) : \
+					((nr == 2) ? (0x0150) : \
+					             (0x27)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: drivers/i2c/chips/w83627hf.c:164:
+^I^I^I^I^I             (0x27)))$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#241: FILE: drivers/i2c/chips/w83627hf.c:165:
+#define W83781D_REG_TEMP_HYST(nr)	((nr == 3) ? (0x253) : \
+					((nr == 2) ? (0x153) : \
+					             (0x3A)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nr' may be better as '(nr)' to avoid precedence issues
#241: FILE: drivers/i2c/chips/w83627hf.c:165:
+#define W83781D_REG_TEMP_HYST(nr)	((nr == 3) ? (0x253) : \
+					((nr == 2) ? (0x153) : \
+					             (0x3A)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: drivers/i2c/chips/w83627hf.c:167:
+^I^I^I^I^I             (0x3A)))$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#244: FILE: drivers/i2c/chips/w83627hf.c:168:
+#define W83781D_REG_TEMP_OVER(nr)	((nr == 3) ? (0x255) : \
+					((nr == 2) ? (0x155) : \
+					             (0x39)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nr' may be better as '(nr)' to avoid precedence issues
#244: FILE: drivers/i2c/chips/w83627hf.c:168:
+#define W83781D_REG_TEMP_OVER(nr)	((nr == 3) ? (0x255) : \
+					((nr == 2) ? (0x155) : \
+					             (0x39)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: drivers/i2c/chips/w83627hf.c:170:
+^I^I^I^I^I             (0x39)))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#278: FILE: drivers/i2c/chips/w83627hf.c:202:
+#define W83627THF_REG_VRM_OVT_CFG ^I0x18^I/* 637HF too, unused yet */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#282: FILE: drivers/i2c/chips/w83627hf.c:206:
+                             W83627THF_REG_PWM3 };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: drivers/i2c/chips/w83627hf.c:206:
+                             W83627THF_REG_PWM3 };$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#283: FILE: drivers/i2c/chips/w83627hf.c:207:
+#define W836X7HF_REG_PWM(type, nr) (((type) == w83627hf) ? \
+                                     regpwm_627hf[(nr) - 1] : regpwm[(nr) - 1])

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: drivers/i2c/chips/w83627hf.c:208:
+                                     regpwm_627hf[(nr) - 1] : regpwm[(nr) - 1])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: drivers/i2c/chips/w83627hf.c:208:
+                                     regpwm_627hf[(nr) - 1] : regpwm[(nr) - 1])$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#297: FILE: drivers/i2c/chips/w83627hf.c:221:
+/* Conversions. Limit checking is only done on the TO_REG
+   variants. Note that you should be a bit careful with which arguments

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#299: FILE: drivers/i2c/chips/w83627hf.c:223:
+   Fixing this is just not worth it. */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#300: FILE: drivers/i2c/chips/w83627hf.c:224:
+#define IN_TO_REG(val)  (SENSORS_LIMIT((((val) + 8)/16),0,255))
                                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#300: FILE: drivers/i2c/chips/w83627hf.c:224:
+#define IN_TO_REG(val)  (SENSORS_LIMIT((((val) + 8)/16),0,255))
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#300: FILE: drivers/i2c/chips/w83627hf.c:224:
+#define IN_TO_REG(val)  (SENSORS_LIMIT((((val) + 8)/16),0,255))
                                                          ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#313: FILE: drivers/i2c/chips/w83627hf.c:237:
+#define TEMP_MAX ( 127000)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#316: FILE: drivers/i2c/chips/w83627hf.c:240:
+/* TEMP: 0.001C/bit (-128C to +127C)
+   REG: 1C/bit, two's complement */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#316: FILE: drivers/i2c/chips/w83627hf.c:240:
+   REG: 1C/bit, two's complement */

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: drivers/i2c/chips/w83627hf.c:243:
+        int ntemp = SENSORS_LIMIT(temp, TEMP_MIN, TEMP_MAX);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: drivers/i2c/chips/w83627hf.c:243:
+        int ntemp = SENSORS_LIMIT(temp, TEMP_MIN, TEMP_MAX);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: drivers/i2c/chips/w83627hf.c:244:
+        ntemp += (ntemp<0 ? -500 : 500);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#320: FILE: drivers/i2c/chips/w83627hf.c:244:
+        int ntemp = SENSORS_LIMIT(temp, TEMP_MIN, TEMP_MAX);
+        ntemp += (ntemp<0 ? -500 : 500);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: drivers/i2c/chips/w83627hf.c:244:
+        ntemp += (ntemp<0 ? -500 : 500);$

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#320: FILE: drivers/i2c/chips/w83627hf.c:244:
+        ntemp += (ntemp<0 ? -500 : 500);
                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: drivers/i2c/chips/w83627hf.c:245:
+        return (u8)(ntemp / 1000);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: drivers/i2c/chips/w83627hf.c:245:
+        return (u8)(ntemp / 1000);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: drivers/i2c/chips/w83627hf.c:250:
+        return (s8)reg * 1000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: drivers/i2c/chips/w83627hf.c:250:
+        return (s8)reg * 1000;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#329: FILE: drivers/i2c/chips/w83627hf.c:253:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                         ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#329: FILE: drivers/i2c/chips/w83627hf.c:253:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                     ^

ERROR:SPACING: spaces required around that '?' (ctx:VxO)
#329: FILE: drivers/i2c/chips/w83627hf.c:253:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                        ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#329: FILE: drivers/i2c/chips/w83627hf.c:253:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                         ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#329: FILE: drivers/i2c/chips/w83627hf.c:253:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                           ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#329: FILE: drivers/i2c/chips/w83627hf.c:253:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                                 ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#329: FILE: drivers/i2c/chips/w83627hf.c:253:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                                      ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#329: FILE: drivers/i2c/chips/w83627hf.c:253:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#329: FILE: drivers/i2c/chips/w83627hf.c:253:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#329: FILE: drivers/i2c/chips/w83627hf.c:253:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#329: FILE: drivers/i2c/chips/w83627hf.c:253:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#331: FILE: drivers/i2c/chips/w83627hf.c:255:
+#define PWM_TO_REG(val) (SENSORS_LIMIT((val),0,255))
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#331: FILE: drivers/i2c/chips/w83627hf.c:255:
+#define PWM_TO_REG(val) (SENSORS_LIMIT((val),0,255))
                                               ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#335: FILE: drivers/i2c/chips/w83627hf.c:259:
+#define BEEP_ENABLE_TO_REG(val)		((val)?1:0)
                                		      ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#335: FILE: drivers/i2c/chips/w83627hf.c:259:
+#define BEEP_ENABLE_TO_REG(val)		((val)?1:0)
                                		        ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#336: FILE: drivers/i2c/chips/w83627hf.c:260:
+#define BEEP_ENABLE_FROM_REG(val)	((val)?1:0)
                                  	      ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#336: FILE: drivers/i2c/chips/w83627hf.c:260:
+#define BEEP_ENABLE_FROM_REG(val)	((val)?1:0)
                                  	        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#343: FILE: drivers/i2c/chips/w83627hf.c:267:
+	int i;
+	val = SENSORS_LIMIT(val, 1, 128) >> 1;

CHECK:SPACING: No space is necessary after a cast
#349: FILE: drivers/i2c/chips/w83627hf.c:273:
+	return ((u8) i);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#353: FILE: drivers/i2c/chips/w83627hf.c:277:
+/* For each registered chip, we need to keep some data in memory. That
+   data is pointed to by w83627hf_list[NR]->data. The structure itself is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#354: FILE: drivers/i2c/chips/w83627hf.c:278:
+   dynamically allocated, at the same time when a new client is allocated. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#385: FILE: drivers/i2c/chips/w83627hf.c:309:
+	u16 sens[3];		/* 782D/783S only.
+				   1 = pentium diode; 2 = 3904 diode;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#388: FILE: drivers/i2c/chips/w83627hf.c:312:
+				   Other Betas unimplemented */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#392: FILE: drivers/i2c/chips/w83627hf.c:316:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#395: FILE: drivers/i2c/chips/w83627hf.c:319:
+static int w83627hf_detect(struct i2c_adapter *adapter, int address,
+			  int kind);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: drivers/i2c/chips/w83627hf.c:324:
+static int w83627hf_write_value(struct i2c_client *client, u16 register,
+			       u16 value);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#414: FILE: drivers/i2c/chips/w83627hf.c:338:
+#define show_in_reg(reg) \
+static ssize_t show_##reg (struct device *dev, char *buf, int nr) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct w83627hf_data *data = i2c_get_clientdata(client); \
+	 \
+	w83627hf_update_client(client); \
+	 \
+	return sprintf(buf,"%ld\n", (long)IN_FROM_REG(data->reg[nr])); \
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#415: FILE: drivers/i2c/chips/w83627hf.c:339:
+static ssize_t show_##reg (struct device *dev, char *buf, int nr) \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#422: FILE: drivers/i2c/chips/w83627hf.c:346:
+	return sprintf(buf,"%ld\n", (long)IN_FROM_REG(data->reg[nr])); \
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#424: FILE: drivers/i2c/chips/w83627hf.c:348:
+}
+show_in_reg(in)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#430: FILE: drivers/i2c/chips/w83627hf.c:354:
+store_in_##reg (struct device *dev, const char *buf, size_t count, int nr) \

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#436: FILE: drivers/i2c/chips/w83627hf.c:360:
+	val = simple_strtoul(buf, NULL, 10); \

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#443: FILE: drivers/i2c/chips/w83627hf.c:367:
+}
+store_in_reg(MIN, min)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#448: FILE: drivers/i2c/chips/w83627hf.c:372:
+show_regs_in_##offset (struct device *dev, char *buf) \

ERROR:CODE_INDENT: code indent should use tabs where possible
#450: FILE: drivers/i2c/chips/w83627hf.c:374:
+        return show_in(dev, buf, 0x##offset); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: drivers/i2c/chips/w83627hf.c:374:
+        return show_in(dev, buf, 0x##offset); \$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#452: FILE: drivers/i2c/chips/w83627hf.c:376:
+static DEVICE_ATTR(in_input##offset, S_IRUGO, show_regs_in_##offset, NULL)

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#455: FILE: drivers/i2c/chips/w83627hf.c:379:
+static ssize_t show_regs_in_##reg##offset (struct device *dev, char *buf) \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#457: FILE: drivers/i2c/chips/w83627hf.c:381:
+	return show_in_##reg (dev, buf, 0x##offset); \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#460: FILE: drivers/i2c/chips/w83627hf.c:384:
+store_regs_in_##reg##offset (struct device *dev, \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#463: FILE: drivers/i2c/chips/w83627hf.c:387:
+	return store_in_##reg (dev, buf, count, 0x##offset); \

CHECK:SPACING: spaces preferred around that '|' (ctx:VxW)
#465: FILE: drivers/i2c/chips/w83627hf.c:389:
+static DEVICE_ATTR(in_##reg##offset, S_IRUGO| S_IWUSR, \
                                             ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO| S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#465: FILE: drivers/i2c/chips/w83627hf.c:389:
+static DEVICE_ATTR(in_##reg##offset, S_IRUGO| S_IWUSR, \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#468: FILE: drivers/i2c/chips/w83627hf.c:392:
+#define sysfs_in_offsets(offset) \
+sysfs_in_offset(offset) \
+sysfs_in_reg_offset(min, offset) \
+sysfs_in_reg_offset(max, offset)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#468: FILE: drivers/i2c/chips/w83627hf.c:392:
+#define sysfs_in_offsets(offset) \
+sysfs_in_offset(offset) \
+sysfs_in_reg_offset(min, offset) \
+sysfs_in_reg_offset(max, offset)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'client' - possible side-effects?
#483: FILE: drivers/i2c/chips/w83627hf.c:407:
+#define device_create_file_in(client, offset) \
+do { \
+device_create_file(&client->dev, &dev_attr_in_input##offset); \
+device_create_file(&client->dev, &dev_attr_in_min##offset); \
+device_create_file(&client->dev, &dev_attr_in_max##offset); \
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#483: FILE: drivers/i2c/chips/w83627hf.c:407:
+#define device_create_file_in(client, offset) \
+do { \
+device_create_file(&client->dev, &dev_attr_in_input##offset); \
+device_create_file(&client->dev, &dev_attr_in_min##offset); \
+device_create_file(&client->dev, &dev_attr_in_max##offset); \
+} while (0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 0)
#484: FILE: drivers/i2c/chips/w83627hf.c:408:
+do { \
+device_create_file(&client->dev, &dev_attr_in_input##offset); \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#490: FILE: drivers/i2c/chips/w83627hf.c:414:
+#define show_fan_reg(reg) \
+static ssize_t show_##reg (struct device *dev, char *buf, int nr) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct w83627hf_data *data = i2c_get_clientdata(client); \
+	 \
+	w83627hf_update_client(client); \
+	 \
+	return sprintf(buf,"%ld\n", \
+		FAN_FROM_REG(data->reg[nr-1], \
+			    (long)DIV_FROM_REG(data->fan_div[nr-1]))); \
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#491: FILE: drivers/i2c/chips/w83627hf.c:415:
+static ssize_t show_##reg (struct device *dev, char *buf, int nr) \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#498: FILE: drivers/i2c/chips/w83627hf.c:422:
+	return sprintf(buf,"%ld\n", \
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#499: FILE: drivers/i2c/chips/w83627hf.c:423:
+		FAN_FROM_REG(data->reg[nr-1], \
 		                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#500: FILE: drivers/i2c/chips/w83627hf.c:424:
+			    (long)DIV_FROM_REG(data->fan_div[nr-1]))); \
 			                                       ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#502: FILE: drivers/i2c/chips/w83627hf.c:426:
+}
+show_fan_reg(fan)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#512: FILE: drivers/i2c/chips/w83627hf.c:436:
+	val = simple_strtoul(buf, NULL, 10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#516: FILE: drivers/i2c/chips/w83627hf.c:440:
+	w83627hf_write_value(client, W83781D_REG_FAN_MIN(nr),
+			    data->fan_min[nr - 1]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#522: FILE: drivers/i2c/chips/w83627hf.c:446:
+static ssize_t show_regs_fan_##offset (struct device *dev, char *buf) \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#526: FILE: drivers/i2c/chips/w83627hf.c:450:
+static DEVICE_ATTR(fan_input##offset, S_IRUGO, show_regs_fan_##offset, NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#529: FILE: drivers/i2c/chips/w83627hf.c:453:
+static ssize_t show_regs_fan_min##offset (struct device *dev, char *buf) \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#534: FILE: drivers/i2c/chips/w83627hf.c:458:
+store_regs_fan_min##offset (struct device *dev, const char *buf, size_t count) \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#538: FILE: drivers/i2c/chips/w83627hf.c:462:
+static DEVICE_ATTR(fan_min##offset, S_IRUGO | S_IWUSR, \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'client' - possible side-effects?
#548: FILE: drivers/i2c/chips/w83627hf.c:472:
+#define device_create_file_fan(client, offset) \
+do { \
+device_create_file(&client->dev, &dev_attr_fan_input##offset); \
+device_create_file(&client->dev, &dev_attr_fan_min##offset); \
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#548: FILE: drivers/i2c/chips/w83627hf.c:472:
+#define device_create_file_fan(client, offset) \
+do { \
+device_create_file(&client->dev, &dev_attr_fan_input##offset); \
+device_create_file(&client->dev, &dev_attr_fan_min##offset); \
+} while (0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 0)
#549: FILE: drivers/i2c/chips/w83627hf.c:473:
+do { \
+device_create_file(&client->dev, &dev_attr_fan_input##offset); \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#554: FILE: drivers/i2c/chips/w83627hf.c:478:
+#define show_temp_reg(reg) \
+static ssize_t show_##reg (struct device *dev, char *buf, int nr) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct w83627hf_data *data = i2c_get_clientdata(client); \
+	 \
+	w83627hf_update_client(client); \
+	 \
+	if (nr >= 2) {	/* TEMP2 and TEMP3 */ \
+		return sprintf(buf,"%ld\n", \
+			(long)LM75_TEMP_FROM_REG(data->reg##_add[nr-2])); \
+	} else {	/* TEMP1 */ \
+		return sprintf(buf,"%ld\n", (long)TEMP_FROM_REG(data->reg)); \
+	} \
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#555: FILE: drivers/i2c/chips/w83627hf.c:479:
+static ssize_t show_##reg (struct device *dev, char *buf, int nr) \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#563: FILE: drivers/i2c/chips/w83627hf.c:487:
+		return sprintf(buf,"%ld\n", \
 		                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#564: FILE: drivers/i2c/chips/w83627hf.c:488:
+			(long)LM75_TEMP_FROM_REG(data->reg##_add[nr-2])); \
 			                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#566: FILE: drivers/i2c/chips/w83627hf.c:490:
+		return sprintf(buf,"%ld\n", (long)TEMP_FROM_REG(data->reg)); \
 		                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#569: FILE: drivers/i2c/chips/w83627hf.c:493:
+}
+show_temp_reg(temp)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#575: FILE: drivers/i2c/chips/w83627hf.c:499:
+store_temp_##reg (struct device *dev, const char *buf, size_t count, int nr) \

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#581: FILE: drivers/i2c/chips/w83627hf.c:505:
+	val = simple_strtoul(buf, NULL, 10); \

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#584: FILE: drivers/i2c/chips/w83627hf.c:508:
+		data->temp_##reg##_add[nr-2] = LM75_TEMP_TO_REG(val); \
 		                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#586: FILE: drivers/i2c/chips/w83627hf.c:510:
+				data->temp_##reg##_add[nr-2]); \
 				                         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#595: FILE: drivers/i2c/chips/w83627hf.c:519:
+}
+store_temp_reg(OVER, max)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#600: FILE: drivers/i2c/chips/w83627hf.c:524:
+show_regs_temp_##offset (struct device *dev, char *buf) \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#604: FILE: drivers/i2c/chips/w83627hf.c:528:
+static DEVICE_ATTR(temp_input##offset, S_IRUGO, show_regs_temp_##offset, NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#607: FILE: drivers/i2c/chips/w83627hf.c:531:
+static ssize_t show_regs_temp_##reg##offset (struct device *dev, char *buf) \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#609: FILE: drivers/i2c/chips/w83627hf.c:533:
+	return show_temp_##reg (dev, buf, 0x##offset); \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#612: FILE: drivers/i2c/chips/w83627hf.c:536:
+store_regs_temp_##reg##offset (struct device *dev, \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#615: FILE: drivers/i2c/chips/w83627hf.c:539:
+	return store_temp_##reg (dev, buf, count, 0x##offset); \

CHECK:SPACING: spaces preferred around that '|' (ctx:VxW)
#617: FILE: drivers/i2c/chips/w83627hf.c:541:
+static DEVICE_ATTR(temp_##reg##offset, S_IRUGO| S_IWUSR, \
                                               ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO| S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#617: FILE: drivers/i2c/chips/w83627hf.c:541:
+static DEVICE_ATTR(temp_##reg##offset, S_IRUGO| S_IWUSR, \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#620: FILE: drivers/i2c/chips/w83627hf.c:544:
+#define sysfs_temp_offsets(offset) \
+sysfs_temp_offset(offset) \
+sysfs_temp_reg_offset(max, offset) \
+sysfs_temp_reg_offset(hyst, offset)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#620: FILE: drivers/i2c/chips/w83627hf.c:544:
+#define sysfs_temp_offsets(offset) \
+sysfs_temp_offset(offset) \
+sysfs_temp_reg_offset(max, offset) \
+sysfs_temp_reg_offset(hyst, offset)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'client' - possible side-effects?
#629: FILE: drivers/i2c/chips/w83627hf.c:553:
+#define device_create_file_temp(client, offset) \
+do { \
+device_create_file(&client->dev, &dev_attr_temp_input##offset); \
+device_create_file(&client->dev, &dev_attr_temp_max##offset); \
+device_create_file(&client->dev, &dev_attr_temp_hyst##offset); \
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#629: FILE: drivers/i2c/chips/w83627hf.c:553:
+#define device_create_file_temp(client, offset) \
+do { \
+device_create_file(&client->dev, &dev_attr_temp_input##offset); \
+device_create_file(&client->dev, &dev_attr_temp_max##offset); \
+device_create_file(&client->dev, &dev_attr_temp_hyst##offset); \
+} while (0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 0)
#630: FILE: drivers/i2c/chips/w83627hf.c:554:
+do { \
+device_create_file(&client->dev, &dev_attr_temp_input##offset); \

CHECK:SPACING: No space is necessary after a cast
#644: FILE: drivers/i2c/chips/w83627hf.c:568:
+	return sprintf(buf, "%ld\n", (long) vid_from_reg(data->vid, data->vrm));

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_vid_reg' to 'vid_show'
#645: FILE: drivers/i2c/chips/w83627hf.c:569:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#646: FILE: drivers/i2c/chips/w83627hf.c:570:
+static DEVICE_ATTR(vid, S_IRUGO, show_vid_reg, NULL)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#647: FILE: drivers/i2c/chips/w83627hf.c:571:
+#define device_create_file_vid(client) \
+device_create_file(&client->dev, &dev_attr_vid)

CHECK:SPACING: No space is necessary after a cast
#658: FILE: drivers/i2c/chips/w83627hf.c:582:
+	return sprintf(buf, "%ld\n", (long) data->vrm);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#660: FILE: drivers/i2c/chips/w83627hf.c:584:
+}
+static ssize_t

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#667: FILE: drivers/i2c/chips/w83627hf.c:591:
+	val = simple_strtoul(buf, NULL, 10);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_vrm_reg' to 'vrm_show' 'store_vrm_reg' to 'vrm_store'
#671: FILE: drivers/i2c/chips/w83627hf.c:595:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#672: FILE: drivers/i2c/chips/w83627hf.c:596:
+static DEVICE_ATTR(vrm, S_IRUGO | S_IWUSR, show_vrm_reg, store_vrm_reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#673: FILE: drivers/i2c/chips/w83627hf.c:597:
+#define device_create_file_vrm(client) \
+device_create_file(&client->dev, &dev_attr_vrm)

CHECK:SPACING: No space is necessary after a cast
#684: FILE: drivers/i2c/chips/w83627hf.c:608:
+	return sprintf(buf, "%ld\n", (long) data->alarms);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_alarms_reg' to 'alarms_show'
#685: FILE: drivers/i2c/chips/w83627hf.c:609:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#686: FILE: drivers/i2c/chips/w83627hf.c:610:
+static DEVICE_ATTR(alarms, S_IRUGO, show_alarms_reg, NULL)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#687: FILE: drivers/i2c/chips/w83627hf.c:611:
+#define device_create_file_alarms(client) \
+device_create_file(&client->dev, &dev_attr_alarms)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#691: FILE: drivers/i2c/chips/w83627hf.c:615:
+static ssize_t show_beep_##reg (struct device *dev, char *buf) \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#698: FILE: drivers/i2c/chips/w83627hf.c:622:
+	return sprintf(buf,"%ld\n", \
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#701: FILE: drivers/i2c/chips/w83627hf.c:625:
+}
+show_beep_reg(ENABLE, enable)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#715: FILE: drivers/i2c/chips/w83627hf.c:639:
+	val = simple_strtoul(buf, NULL, 10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#720: FILE: drivers/i2c/chips/w83627hf.c:644:
+		w83627hf_write_value(client, W83781D_REG_BEEP_INTS1,
+				    data->beep_mask & 0xff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#722: FILE: drivers/i2c/chips/w83627hf.c:646:
+		w83627hf_write_value(client, W83781D_REG_BEEP_INTS3,
+				    ((data->beep_mask) >> 16) & 0xff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#731: FILE: drivers/i2c/chips/w83627hf.c:655:
+	w83627hf_write_value(client, W83781D_REG_BEEP_INTS2,
+			    val2 | data->beep_enable << 7);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#737: FILE: drivers/i2c/chips/w83627hf.c:661:
+static ssize_t show_regs_beep_##reg (struct device *dev, char *buf) \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#742: FILE: drivers/i2c/chips/w83627hf.c:666:
+store_regs_beep_##reg (struct device *dev, const char *buf, size_t count) \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#746: FILE: drivers/i2c/chips/w83627hf.c:670:
+static DEVICE_ATTR(beep_##reg, S_IRUGO | S_IWUSR, \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'client' - possible side-effects?
#752: FILE: drivers/i2c/chips/w83627hf.c:676:
+#define device_create_file_beep(client) \
+do { \
+device_create_file(&client->dev, &dev_attr_beep_enable); \
+device_create_file(&client->dev, &dev_attr_beep_mask); \
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#752: FILE: drivers/i2c/chips/w83627hf.c:676:
+#define device_create_file_beep(client) \
+do { \
+device_create_file(&client->dev, &dev_attr_beep_enable); \
+device_create_file(&client->dev, &dev_attr_beep_mask); \
+} while (0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 0)
#753: FILE: drivers/i2c/chips/w83627hf.c:677:
+do { \
+device_create_file(&client->dev, &dev_attr_beep_enable); \

CHECK:SPACING: No space is necessary after a cast
#767: FILE: drivers/i2c/chips/w83627hf.c:691:
+		       (long) DIV_FROM_REG(data->fan_div[nr - 1]));

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#777: FILE: drivers/i2c/chips/w83627hf.c:701:
+	val = simple_strtoul(buf, NULL, 10);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#802: FILE: drivers/i2c/chips/w83627hf.c:726:
+#define sysfs_fan_div(offset) \
+static ssize_t show_regs_fan_div_##offset (struct device *dev, char *buf) \
+{ \
+	return show_fan_div_reg(dev, buf, offset); \
+} \
+static ssize_t \
+store_regs_fan_div_##offset (struct device *dev, \
+			    const char *buf, size_t count) \
+{ \
+	return store_fan_div_reg(dev, buf, count, offset); \
+} \
+static DEVICE_ATTR(fan_div##offset, S_IRUGO | S_IWUSR, \
+		  show_regs_fan_div_##offset, store_regs_fan_div_##offset)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#803: FILE: drivers/i2c/chips/w83627hf.c:727:
+static ssize_t show_regs_fan_div_##offset (struct device *dev, char *buf) \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#808: FILE: drivers/i2c/chips/w83627hf.c:732:
+store_regs_fan_div_##offset (struct device *dev, \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#813: FILE: drivers/i2c/chips/w83627hf.c:737:
+static DEVICE_ATTR(fan_div##offset, S_IRUGO | S_IWUSR, \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#820: FILE: drivers/i2c/chips/w83627hf.c:744:
+#define device_create_file_fan_div(client, offset) \
+do { \
+device_create_file(&client->dev, &dev_attr_fan_div##offset); \
+} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#820: FILE: drivers/i2c/chips/w83627hf.c:744:
+#define device_create_file_fan_div(client, offset) \
+do { \
+device_create_file(&client->dev, &dev_attr_fan_div##offset); \
+} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 0)
#821: FILE: drivers/i2c/chips/w83627hf.c:745:
+do { \
+device_create_file(&client->dev, &dev_attr_fan_div##offset); \

CHECK:SPACING: No space is necessary after a cast
#833: FILE: drivers/i2c/chips/w83627hf.c:757:
+	return sprintf(buf, "%ld\n", (long) data->pwm[nr - 1]);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#843: FILE: drivers/i2c/chips/w83627hf.c:767:
+	val = simple_strtoul(buf, NULL, 10);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#863: FILE: drivers/i2c/chips/w83627hf.c:787:
+#define sysfs_pwm(offset) \
+static ssize_t show_regs_pwm_##offset (struct device *dev, char *buf) \
+{ \
+	return show_pwm_reg(dev, buf, offset); \
+} \
+static ssize_t \
+store_regs_pwm_##offset (struct device *dev, const char *buf, size_t count) \
+{ \
+	return store_pwm_reg(dev, buf, count, offset); \
+} \
+static DEVICE_ATTR(pwm##offset, S_IRUGO | S_IWUSR, \
+		  show_regs_pwm_##offset, store_regs_pwm_##offset)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#864: FILE: drivers/i2c/chips/w83627hf.c:788:
+static ssize_t show_regs_pwm_##offset (struct device *dev, char *buf) \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#869: FILE: drivers/i2c/chips/w83627hf.c:793:
+store_regs_pwm_##offset (struct device *dev, const char *buf, size_t count) \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#873: FILE: drivers/i2c/chips/w83627hf.c:797:
+static DEVICE_ATTR(pwm##offset, S_IRUGO | S_IWUSR, \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#880: FILE: drivers/i2c/chips/w83627hf.c:804:
+#define device_create_file_pwm(client, offset) \
+do { \
+device_create_file(&client->dev, &dev_attr_pwm##offset); \
+} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#880: FILE: drivers/i2c/chips/w83627hf.c:804:
+#define device_create_file_pwm(client, offset) \
+do { \
+device_create_file(&client->dev, &dev_attr_pwm##offset); \
+} while (0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 0)
#881: FILE: drivers/i2c/chips/w83627hf.c:805:
+do { \
+device_create_file(&client->dev, &dev_attr_pwm##offset); \

CHECK:SPACING: No space is necessary after a cast
#893: FILE: drivers/i2c/chips/w83627hf.c:817:
+	return sprintf(buf, "%ld\n", (long) data->sens[nr - 1]);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#903: FILE: drivers/i2c/chips/w83627hf.c:827:
+	val = simple_strtoul(buf, NULL, 10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#909: FILE: drivers/i2c/chips/w83627hf.c:833:
+		w83627hf_write_value(client, W83781D_REG_SCFG1,
+				    tmp | BIT_SCFG1[nr - 1]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#912: FILE: drivers/i2c/chips/w83627hf.c:836:
+		w83627hf_write_value(client, W83781D_REG_SCFG2,
+				    tmp | BIT_SCFG2[nr - 1]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#918: FILE: drivers/i2c/chips/w83627hf.c:842:
+		w83627hf_write_value(client, W83781D_REG_SCFG1,
+				    tmp | BIT_SCFG1[nr - 1]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#921: FILE: drivers/i2c/chips/w83627hf.c:845:
+		w83627hf_write_value(client, W83781D_REG_SCFG2,
+				    tmp & ~BIT_SCFG2[nr - 1]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#927: FILE: drivers/i2c/chips/w83627hf.c:851:
+		w83627hf_write_value(client, W83781D_REG_SCFG1,
+				    tmp & ~BIT_SCFG1[nr - 1]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#932: FILE: drivers/i2c/chips/w83627hf.c:856:
+		dev_err(&client->dev,
+		       "Invalid sensor type %ld; must be 1, 2, or %d\n",

CHECK:SPACING: No space is necessary after a cast
#933: FILE: drivers/i2c/chips/w83627hf.c:857:
+		       (long) val, W83781D_DEFAULT_BETA);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#940: FILE: drivers/i2c/chips/w83627hf.c:864:
+#define sysfs_sensor(offset) \
+static ssize_t show_regs_sensor_##offset (struct device *dev, char *buf) \
+{ \
+    return show_sensor_reg(dev, buf, offset); \
+} \
+static ssize_t \
+store_regs_sensor_##offset (struct device *dev, const char *buf, size_t count) \
+{ \
+    return store_sensor_reg(dev, buf, count, offset); \
+} \
+static DEVICE_ATTR(sensor##offset, S_IRUGO | S_IWUSR, \
+		  show_regs_sensor_##offset, store_regs_sensor_##offset)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#941: FILE: drivers/i2c/chips/w83627hf.c:865:
+static ssize_t show_regs_sensor_##offset (struct device *dev, char *buf) \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: drivers/i2c/chips/w83627hf.c:867:
+    return show_sensor_reg(dev, buf, offset); \$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#946: FILE: drivers/i2c/chips/w83627hf.c:870:
+store_regs_sensor_##offset (struct device *dev, const char *buf, size_t count) \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: drivers/i2c/chips/w83627hf.c:872:
+    return store_sensor_reg(dev, buf, count, offset); \$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#950: FILE: drivers/i2c/chips/w83627hf.c:874:
+static DEVICE_ATTR(sensor##offset, S_IRUGO | S_IWUSR, \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'client' may be better as '(client)' to avoid precedence issues
#957: FILE: drivers/i2c/chips/w83627hf.c:881:
+#define device_create_file_sensor(client, offset) \
+do { \
+device_create_file(&client->dev, &dev_attr_sensor##offset); \
+} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#957: FILE: drivers/i2c/chips/w83627hf.c:881:
+#define device_create_file_sensor(client, offset) \
+do { \
+device_create_file(&client->dev, &dev_attr_sensor##offset); \
+} while (0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 0)
#958: FILE: drivers/i2c/chips/w83627hf.c:882:
+do { \
+device_create_file(&client->dev, &dev_attr_sensor##offset); \

CHECK:LINE_SPACING: Please don't use multiple blank lines
#962: FILE: drivers/i2c/chips/w83627hf.c:886:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#964: FILE: drivers/i2c/chips/w83627hf.c:888:
+/* This function is called when:
+     * w83627hf_driver is inserted (when this module is loaded), for each

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#966: FILE: drivers/i2c/chips/w83627hf.c:890:
+     * when a new adapter is inserted (and w83627hf_driver is still present) */

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#977: FILE: drivers/i2c/chips/w83627hf.c:901:
+	val= superio_inb(DEVID);
 	   ^

ERROR:SPACING: space required before the open parenthesis '('
#978: FILE: drivers/i2c/chips/w83627hf.c:902:
+	if(val != W627_DEVID &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1002: FILE: drivers/i2c/chips/w83627hf.c:926:
+int w83627hf_detect(struct i2c_adapter *adapter, int address,
+		   int kind)

ERROR:SPACING: space required before the open parenthesis '('
#1015: FILE: drivers/i2c/chips/w83627hf.c:939:
+	if(force_addr)

ERROR:SPACING: space required before the open parenthesis '('
#1023: FILE: drivers/i2c/chips/w83627hf.c:947:
+	if(force_addr) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1024: FILE: drivers/i2c/chips/w83627hf.c:948:
+		printk("w83627hf.o: forcing ISA address 0x%04X\n", address);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1028: FILE: drivers/i2c/chips/w83627hf.c:952:
+		superio_outb(WINB_BASE_REG+1, address & 0xff);
 		                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1033: FILE: drivers/i2c/chips/w83627hf.c:957:
+	val= superio_inb(DEVID);
 	   ^

ERROR:SPACING: space required before the open parenthesis '('
#1034: FILE: drivers/i2c/chips/w83627hf.c:958:
+	if(val == W627_DEVID)

ERROR:SPACING: space required before the open parenthesis '('
#1036: FILE: drivers/i2c/chips/w83627hf.c:960:
+	else if(val == W697_DEVID)

ERROR:SPACING: space required before the open parenthesis '('
#1038: FILE: drivers/i2c/chips/w83627hf.c:962:
+	else if(val == W627THF_DEVID)

ERROR:SPACING: space required before the open parenthesis '('
#1040: FILE: drivers/i2c/chips/w83627hf.c:964:
+	else if(val == W637_DEVID)

ERROR:SPACING: space required before the open parenthesis '('
#1044: FILE: drivers/i2c/chips/w83627hf.c:968:
+	if((val = 0x01 & superio_inb(WINB_ACT_REG)) == 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1044: FILE: drivers/i2c/chips/w83627hf.c:968:
+	if((val = 0x01 & superio_inb(WINB_ACT_REG)) == 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1049: FILE: drivers/i2c/chips/w83627hf.c:973:
+	/* OK. For now, we presume we have a valid client. We now create the
+	   client structure, even though we cannot fill it completely yet.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1050: FILE: drivers/i2c/chips/w83627hf.c:974:
+	   But it allows us to access w83627hf_{read,write}_value. */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1052: FILE: drivers/i2c/chips/w83627hf.c:976:
+	if (!(new_client = kmalloc(sizeof(struct i2c_client) +

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_client)...) over kmalloc(sizeof(struct i2c_client)...)
#1052: FILE: drivers/i2c/chips/w83627hf.c:976:
+	if (!(new_client = kmalloc(sizeof(struct i2c_client) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1059: FILE: drivers/i2c/chips/w83627hf.c:983:
+	memset(new_client, 0x00, sizeof (struct i2c_client) +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1060: FILE: drivers/i2c/chips/w83627hf.c:984:
+	       sizeof (struct w83627hf_data));

CHECK:SPACING: No space is necessary after a cast
#1062: FILE: drivers/i2c/chips/w83627hf.c:986:
+	data = (struct w83627hf_data *) (new_client + 1);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1070: FILE: drivers/i2c/chips/w83627hf.c:994:
+
+

WARNING:SPLIT_STRING: quoted string split across lines
#1081: FILE: drivers/i2c/chips/w83627hf.c:1005:
+		dev_err(&new_client->dev, "Internal error: unknown "
+						"kind (%d)?!?", kind);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1087: FILE: drivers/i2c/chips/w83627hf.c:1011:
+	strlcpy(new_client->name, client_name, I2C_NAME_SIZE);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1093: FILE: drivers/i2c/chips/w83627hf.c:1017:
+	if ((err = i2c_attach_client(new_client)))

WARNING:INDENTED_LABEL: labels should not be indented
#1152: FILE: drivers/i2c/chips/w83627hf.c:1076:
+      ERROR2:

WARNING:INDENTED_LABEL: labels should not be indented
#1154: FILE: drivers/i2c/chips/w83627hf.c:1078:
+      ERROR1:

WARNING:INDENTED_LABEL: labels should not be indented
#1156: FILE: drivers/i2c/chips/w83627hf.c:1080:
+      ERROR0:

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1164: FILE: drivers/i2c/chips/w83627hf.c:1088:
+	if ((err = i2c_detach_client(client))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1166: FILE: drivers/i2c/chips/w83627hf.c:1090:
+		dev_err(&client->dev,
+		       "Client deregistration failed, client not detached.\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1176: FILE: drivers/i2c/chips/w83627hf.c:1100:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1178: FILE: drivers/i2c/chips/w83627hf.c:1102:
+/*
+   ISA access must always be locked explicitly!

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1182: FILE: drivers/i2c/chips/w83627hf.c:1106:
+   nowhere else be necessary! */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1190: FILE: drivers/i2c/chips/w83627hf.c:1114:
+	word_sized = (((reg & 0xff00) == 0x100)
+		   || ((reg & 0xff00) == 0x200))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1191: FILE: drivers/i2c/chips/w83627hf.c:1115:
+		   || ((reg & 0xff00) == 0x200))
+		  && (((reg & 0x00ff) == 0x50)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1192: FILE: drivers/i2c/chips/w83627hf.c:1116:
+		  && (((reg & 0x00ff) == 0x50)
+		   || ((reg & 0x00ff) == 0x53)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1193: FILE: drivers/i2c/chips/w83627hf.c:1117:
+		   || ((reg & 0x00ff) == 0x53)
+		   || ((reg & 0x00ff) == 0x55));

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1240: FILE: drivers/i2c/chips/w83627hf.c:1164:
+	word_sized = (((reg & 0xff00) == 0x100)
+		   || ((reg & 0xff00) == 0x200))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1241: FILE: drivers/i2c/chips/w83627hf.c:1165:
+		   || ((reg & 0xff00) == 0x200))
+		  && (((reg & 0x00ff) == 0x53)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1242: FILE: drivers/i2c/chips/w83627hf.c:1166:
+		  && (((reg & 0x00ff) == 0x53)
+		   || ((reg & 0x00ff) == 0x55));

ERROR:SPACING: space required before the open parenthesis '('
#1275: FILE: drivers/i2c/chips/w83627hf.c:1199:
+	if(init) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1279: FILE: drivers/i2c/chips/w83627hf.c:1203:
+		/* Reset all except Watchdog values and last conversion values
+		   This sets fan-divs to 2, among others */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1279: FILE: drivers/i2c/chips/w83627hf.c:1203:
+		   This sets fan-divs to 2, among others */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1282: FILE: drivers/i2c/chips/w83627hf.c:1206:
+		/* Restore the register and disable power-on abnormal beep.
+		   This saves FAN 1/2/3 input/output values set by BIOS. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1282: FILE: drivers/i2c/chips/w83627hf.c:1206:
+		   This saves FAN 1/2/3 input/output values set by BIOS. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1285: FILE: drivers/i2c/chips/w83627hf.c:1209:
+		/* Disable master beep-enable (reset turns it on).
+		   Individual beeps should be reset to off but for some reason

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1286: FILE: drivers/i2c/chips/w83627hf.c:1210:
+		   disabling this bit helps some people not get beeped */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1300: FILE: drivers/i2c/chips/w83627hf.c:1224:
+		int hi = w83627hf_read_value(client, W83781D_REG_CHIPID);
+		data->vid = (lo & 0x0f) | ((hi & 0x01) << 4);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type == w83697hf'
#1322: FILE: drivers/i2c/chips/w83627hf.c:1246:
+		if ((type == w83697hf) && (i == 2))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == 2'
#1322: FILE: drivers/i2c/chips/w83627hf.c:1246:
+		if ((type == w83697hf) && (i == 2))

ERROR:SPACING: space required before the open parenthesis '('
#1330: FILE: drivers/i2c/chips/w83627hf.c:1254:
+	if(init) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1333: FILE: drivers/i2c/chips/w83627hf.c:1257:
+^I^I           should have been reset to 0xff) */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1333: FILE: drivers/i2c/chips/w83627hf.c:1257:
+			/* enable PWM2 control (can't hurt since PWM reg
+		           should have been reset to 0xff) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1333: FILE: drivers/i2c/chips/w83627hf.c:1257:
+		           should have been reset to 0xff) */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1335: FILE: drivers/i2c/chips/w83627hf.c:1259:
+			w83627hf_write_value(client, W83627HF_REG_PWMCLK12,
+					    0x19);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1338: FILE: drivers/i2c/chips/w83627hf.c:1262:
+^I           alarm indication will work correctly */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1338: FILE: drivers/i2c/chips/w83627hf.c:1262:
+		/* enable comparator mode for temp2 and temp3 so
+	           alarm indication will work correctly */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1338: FILE: drivers/i2c/chips/w83627hf.c:1262:
+	           alarm indication will work correctly */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1342: FILE: drivers/i2c/chips/w83627hf.c:1266:
+			w83627hf_write_value(client, W83781D_REG_IRQ,
+					    i | 0x40);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1347: FILE: drivers/i2c/chips/w83627hf.c:1271:
+	w83627hf_write_value(client, W83781D_REG_CONFIG,
+			    (w83627hf_read_value(client,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jiffies < data->last_updated'
#1359: FILE: drivers/i2c/chips/w83627hf.c:1283:
+	if ((jiffies - data->last_updated > HZ + HZ / 2) ||
+	    (jiffies < data->last_updated) || !data->valid) {

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#1360: FILE: drivers/i2c/chips/w83627hf.c:1284:
+	    (jiffies < data->last_updated) || !data->valid) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type == w83697hf'
#1363: FILE: drivers/i2c/chips/w83627hf.c:1287:
+			if (((data->type == w83697hf) && (i == 1)) ||
+			    ((data->type == w83627thf || data->type == w83637hf)
+			    && (i == 4 || i == 5)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == 1'
#1363: FILE: drivers/i2c/chips/w83627hf.c:1287:
+			if (((data->type == w83697hf) && (i == 1)) ||
+			    ((data->type == w83627thf || data->type == w83637hf)
+			    && (i == 4 || i == 5)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1365: FILE: drivers/i2c/chips/w83627hf.c:1289:
+			    ((data->type == w83627thf || data->type == w83637hf)
+			    && (i == 4 || i == 5)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1371: FILE: drivers/i2c/chips/w83627hf.c:1295:
+			    w83627hf_read_value(client,
+					       W83781D_REG_IN_MIN(i));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1374: FILE: drivers/i2c/chips/w83627hf.c:1298:
+			    w83627hf_read_value(client,
+					       W83781D_REG_IN_MAX(i));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1381: FILE: drivers/i2c/chips/w83627hf.c:1305:
+			    w83627hf_read_value(client,
+					       W83781D_REG_FAN_MIN(i));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1386: FILE: drivers/i2c/chips/w83627hf.c:1310:
+ ^I^I^I/* bits 0-3 are reserved  in 627THF */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1386: FILE: drivers/i2c/chips/w83627hf.c:1310:
+ ^I^I^I/* bits 0-3 are reserved  in 627THF */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1386: FILE: drivers/i2c/chips/w83627hf.c:1310:
+ ^I^I^I/* bits 0-3 are reserved  in 627THF */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1387: FILE: drivers/i2c/chips/w83627hf.c:1311:
+ ^I^I^Iif (data->type == w83627thf)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1387: FILE: drivers/i2c/chips/w83627hf.c:1311:
+ ^I^I^Iif (data->type == w83627thf)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1387: FILE: drivers/i2c/chips/w83627hf.c:1311:
+ ^I^I^Iif (data->type == w83627thf)$

ERROR:SPACING: space required before the open parenthesis '('
#1390: FILE: drivers/i2c/chips/w83627hf.c:1314:
+			if(i == 2 &&

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1447: FILE: drivers/i2c/chips/w83627hf.c:1371:
+	if (w83627hf_find(&addr)) {
+		return -ENODEV;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#1461: FILE: drivers/i2c/chips/w83627hf.c:1385:
+MODULE_AUTHOR("Frodo Looijaard <frodol@dds.nl>, "
+	      "Philip Edelbrock <phil@netroedge.com>, "

WARNING:SPLIT_STRING: quoted string split across lines
#1462: FILE: drivers/i2c/chips/w83627hf.c:1386:
+	      "Philip Edelbrock <phil@netroedge.com>, "
+	      "and Mark Studebaker <mdsxyz123@yahoo.com>");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000295821.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 53 errors, 118 warnings, 108 checks, 1413 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000295821.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
