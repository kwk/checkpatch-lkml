WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#44: FILE: fs/gfs2/locking/nolock/main.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BRACES: braces {} should be used on all arms of this statement
#80: FILE: fs/gfs2/locking/nolock/main.c:37:
+	if (!c)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#82: FILE: fs/gfs2/locking/nolock/main.c:39:
+	else {

WARNING:NAKED_SSCANF: unchecked sscanf return value
#84: FILE: fs/gfs2/locking/nolock/main.c:41:
+		sscanf(c, "%u", &jid);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#84: FILE: fs/gfs2/locking/nolock/main.c:41:
+		sscanf(c, "%u", &jid);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*nl)...) over kzalloc(sizeof(struct nolock_lockspace)...)
#87: FILE: fs/gfs2/locking/nolock/main.c:44:
+	nl = kzalloc(sizeof(struct nolock_lockspace), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LINE_SPACING: Missing a blank line after declarations
#110: FILE: fs/gfs2/locking/nolock/main.c:67:
+	struct nolock_lockspace *nl = (struct nolock_lockspace *)lockspace;
+	kfree(nl);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'descripton' may be misspelled - perhaps 'description'?
#118: FILE: fs/gfs2/locking/nolock/main.c:75:
+ * nolock_get_lock - get a lm_lock_t given a descripton of the lock
                                              ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#237: FILE: fs/gfs2/locking/nolock/main.c:194:
+	int error;
+	error = posix_lock_file_wait(file, fl);

WARNING:LINE_SPACING: Missing a blank line after declarations
#245: FILE: fs/gfs2/locking/nolock/main.c:202:
+	int error;
+	error = posix_lock_file_wait(file, fl);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#281: FILE: fs/gfs2/locking/nolock/main.c:238:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#286: FILE: fs/gfs2/locking/nolock/main.c:243:
+	printk(KERN_INFO

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#287: FILE: fs/gfs2/locking/nolock/main.c:244:
+	       "Lock_Nolock (built %s %s) installed\n", __DATE__, __TIME__);

It is generally desirable that building the same source code with
the same set of tools is reproducible, i.e. the output is always
exactly the same.

The kernel does *not* use the ``__DATE__`` and ``__TIME__`` macros,
and enables warnings if they are used as they can lead to
non-deterministic builds.

See: https://www.kernel.org/doc/html/latest/kbuild/reproducible-builds.html#timestamps

ERROR:DATE_TIME: Use of the '__TIME__' macro makes the build non-deterministic
#287: FILE: fs/gfs2/locking/nolock/main.c:244:
+	       "Lock_Nolock (built %s %s) installed\n", __DATE__, __TIME__);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000083622.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 9 warnings, 3 checks, 262 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000083622.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
