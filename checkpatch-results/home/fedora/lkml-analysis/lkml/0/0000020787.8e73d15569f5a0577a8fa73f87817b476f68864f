WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#60: FILE: drivers/spi/Kconfig:54:
+config SPI_ATMEL
+	tristate "Atmel SPI Controller"
+	depends on (ARCH_AT91 || AVR32) && SPI_MASTER
+	help
+	  This selects a driver for the Atmel SPI Controller, present on
+	  many AT32 (AVR32) and AT91 (ARM) chips.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#87: FILE: drivers/spi/atmel_spi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#108: FILE: drivers/spi/atmel_spi.c:22:
+#include <asm/io.h>

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#127: FILE: drivers/spi/atmel_spi.c:41:
+	spinlock_t		lock;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#159: FILE: drivers/spi/atmel_spi.c:73:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#160: FILE: drivers/spi/atmel_spi.c:74:
+
+}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#174: FILE: drivers/spi/atmel_spi.c:88:
+{
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#175: FILE: drivers/spi/atmel_spi.c:89:
+
+}

CHECK:SPACING: No space is necessary after a cast
#190: FILE: drivers/spi/atmel_spi.c:104:
+	unsigned gpio = (unsigned) spi->controller_data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#190: FILE: drivers/spi/atmel_spi.c:104:
+	unsigned gpio = (unsigned) spi->controller_data;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#190: FILE: drivers/spi/atmel_spi.c:104:
+	unsigned gpio = (unsigned) spi->controller_data;

CHECK:SPACING: No space is necessary after a cast
#198: FILE: drivers/spi/atmel_spi.c:112:
+	unsigned gpio = (unsigned) spi->controller_data;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#198: FILE: drivers/spi/atmel_spi.c:112:
+	unsigned gpio = (unsigned) spi->controller_data;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#198: FILE: drivers/spi/atmel_spi.c:112:
+	unsigned gpio = (unsigned) spi->controller_data;

WARNING:MEMORY_BARRIER: memory barrier without comment
#283: FILE: drivers/spi/atmel_spi.c:197:
+	wmb();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#296: FILE: drivers/spi/atmel_spi.c:210:
+	BUG_ON(as->current_transfer);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#312: FILE: drivers/spi/atmel_spi.c:226:
+	xfer->tx_dma = xfer->rx_dma = INVALID_DMA_ADDRESS;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#315: FILE: drivers/spi/atmel_spi.c:229:
+		if (xfer->tx_buf
+		    && !((unsigned long)xfer->tx_buf & (L1_CACHE_BYTES - 1)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#321: FILE: drivers/spi/atmel_spi.c:235:
+		if (xfer->rx_buf
+		    && !((unsigned long)xfer->rx_buf & (L1_CACHE_BYTES - 1)))

WARNING:LINE_SPACING: Missing a blank line after declarations
#360: FILE: drivers/spi/atmel_spi.c:274:
+			unsigned int len = xfer->len;
+			if (len > BUFFER_SIZE)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#370: FILE: drivers/spi/atmel_spi.c:284:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#392: FILE: drivers/spi/atmel_spi.c:306:
+			if (msg->transfers.prev == &xfer->transfer_list) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: drivers/spi/atmel_spi.c:371:
+		dev_dbg(&spi->dev,
+				"setup: invalid chipselect %u (%u defined)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#466: FILE: drivers/spi/atmel_spi.c:380:
+		dev_dbg(&spi->dev,
+				"setup: invalid bits_per_word %u (8 to 16)\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#478: FILE: drivers/spi/atmel_spi.c:392:
+	if (spi->max_speed_hz) {
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: drivers/spi/atmel_spi.c:400:
+			dev_dbg(&spi->dev, "setup: %d Hz too slow, scbr %u\n",
+					spi->max_speed_hz, scbr);

CHECK:BRACES: Unbalanced braces around else statement
#489: FILE: drivers/spi/atmel_spi.c:403:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#534: FILE: drivers/spi/atmel_spi.c:448:
+	dev_dbg(controller, "new message %p submitted for %s\n",
+			msg, spi->dev.bus_id);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#537: FILE: drivers/spi/atmel_spi.c:451:
+	if (unlikely(list_empty(&msg->transfers)
+			|| !spi->max_speed_hz))

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#590: FILE: drivers/spi/atmel_spi.c:504:
+static int __devinit atmel_spi_probe(struct platform_device *pdev)

WARNING:SIZEOF_PARENTHESIS: sizeof *as should be sizeof(*as)
#613: FILE: drivers/spi/atmel_spi.c:527:
+	master = spi_alloc_master(&pdev->dev, sizeof *as);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#645: FILE: drivers/spi/atmel_spi.c:559:
+	ret = request_irq(irq, atmel_spi_interrupt, 0,
+			pdev->dev.bus_id, master);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#658: FILE: drivers/spi/atmel_spi.c:572:
+	dev_info(&pdev->dev, "Atmel SPI Controller at 0x%08lx (irq %d)\n",
+			(unsigned long)regs->start, irq);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#681: FILE: drivers/spi/atmel_spi.c:595:
+static int __devexit atmel_spi_remove(struct platform_device *pdev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#741: FILE: drivers/spi/atmel_spi.c:655:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#773: FILE: drivers/spi/atmel_spi.h:1:
+/*

ERROR:SPACING: space required after that ',' (ctx:VxV)
#925: FILE: drivers/spi/atmel_spi.h:153:
+#define SPI_BF(name,value) \
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#927: FILE: drivers/spi/atmel_spi.h:155:
+#define SPI_BFEXT(name,value) \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#929: FILE: drivers/spi/atmel_spi.h:157:
+#define SPI_BFINS(name,value,old) \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#929: FILE: drivers/spi/atmel_spi.h:157:
+#define SPI_BFINS(name,value,old) \
                             ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#930: FILE: drivers/spi/atmel_spi.h:158:
+	( ((old) & ~(((1 << SPI_##name##_SIZE) - 1) << SPI_##name##_OFFSET)) \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#931: FILE: drivers/spi/atmel_spi.h:159:
+	  | SPI_BF(name,value))
 	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#934: FILE: drivers/spi/atmel_spi.h:162:
+#define spi_readl(port,reg) \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#936: FILE: drivers/spi/atmel_spi.h:164:
+#define spi_writel(port,reg,value) \
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#936: FILE: drivers/spi/atmel_spi.h:164:
+#define spi_writel(port,reg,value) \
                            ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000020787.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 14 warnings, 22 checks, 868 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000020787.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
