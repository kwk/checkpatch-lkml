CHECK:LINE_SPACING: Please don't use multiple blank lines
#135: FILE: drivers/s390/block/dasd.c:2086:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#185: FILE: drivers/s390/block/dasd_devmap.c:747:
+	if (buf[0] == '1') {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#189: FILE: drivers/s390/block/dasd_devmap.c:751:
+	} else

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dasd_eer_show' to 'eer_enabled_show' 'dasd_eer_store' to 'eer_enabled_store'
#192: FILE: drivers/s390/block/dasd_devmap.c:754:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#219: FILE: drivers/s390/block/dasd_eer.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#236: FILE: drivers/s390/block/dasd_eer.c:18:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#238: FILE: drivers/s390/block/dasd_eer.c:20:
+#include <asm/atomic.h>

WARNING:TYPO_SPELLING: 'themselfes' may be misspelled - perhaps 'themselves'?
#258: FILE: drivers/s390/block/dasd_eer.c:40:
+ * contains the size of the following data, and the data bytes themselfes.
                                                                ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'parmeter' may be misspelled - perhaps 'parameter'?
#263: FILE: drivers/s390/block/dasd_eer.c:45:
+ * the module parmeter eer_pages.
               ^^^^^^^^

WARNING:TYPO_SPELLING: 'strored' may be misspelled - perhaps 'stored'?
#283: FILE: drivers/s390/block/dasd_eer.c:65:
+ * a struct eerbuffer. The buffer specific to a file pointer is strored in
                                                                 ^^^^^^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#297: FILE: drivers/s390/block/dasd_eer.c:79:
+module_param(eer_pages, int, S_IRUGO|S_IWUSR);
                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#297: FILE: drivers/s390/block/dasd_eer.c:79:
+module_param(eer_pages, int, S_IRUGO|S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: drivers/s390/block/dasd_eer.c:87:
+        int tail;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: drivers/s390/block/dasd_eer.c:87:
+        int tail;$

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#321: FILE: drivers/s390/block/dasd_eer.c:103:
+	return eerb->buffersize - eerb->head + eerb->tail -1;
 	                                                  ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#330: FILE: drivers/s390/block/dasd_eer.c:112:
+{
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#345: FILE: drivers/s390/block/dasd_eer.c:127:
+{
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#346: FILE: drivers/s390/block/dasd_eer.c:128:
+	unsigned long headindex,localhead;
 	                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: drivers/s390/block/dasd_eer.c:135:
+ ^I^Iheadindex = eerb->head / PAGE_SIZE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#353: FILE: drivers/s390/block/dasd_eer.c:135:
+ ^I^Iheadindex = eerb->head / PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: drivers/s390/block/dasd_eer.c:135:
+ ^I^Iheadindex = eerb->head / PAGE_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: drivers/s390/block/dasd_eer.c:136:
+ ^I^Ilocalhead = eerb->head % PAGE_SIZE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#354: FILE: drivers/s390/block/dasd_eer.c:136:
+ ^I^Ilocalhead = eerb->head % PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: drivers/s390/block/dasd_eer.c:136:
+ ^I^Ilocalhead = eerb->head % PAGE_SIZE;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#356: FILE: drivers/s390/block/dasd_eer.c:138:
+		memcpy(eerb->buffer[headindex]+localhead, nextdata, len);
 		                              ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#362: FILE: drivers/s390/block/dasd_eer.c:144:
+		BUG_ON(eerb->head > eerb->buffersize);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#371: FILE: drivers/s390/block/dasd_eer.c:153:
+{
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#372: FILE: drivers/s390/block/dasd_eer.c:154:
+	unsigned long tailindex,localtail;
 	                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: drivers/s390/block/dasd_eer.c:162:
+ ^I^Itailindex = eerb->tail / PAGE_SIZE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#380: FILE: drivers/s390/block/dasd_eer.c:162:
+ ^I^Itailindex = eerb->tail / PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: drivers/s390/block/dasd_eer.c:162:
+ ^I^Itailindex = eerb->tail / PAGE_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: drivers/s390/block/dasd_eer.c:163:
+ ^I^Ilocaltail = eerb->tail % PAGE_SIZE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#381: FILE: drivers/s390/block/dasd_eer.c:163:
+ ^I^Ilocaltail = eerb->tail % PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: drivers/s390/block/dasd_eer.c:163:
+ ^I^Ilocaltail = eerb->tail % PAGE_SIZE;$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#389: FILE: drivers/s390/block/dasd_eer.c:171:
+		BUG_ON(eerb->tail > eerb->buffersize);

CHECK:SPACING: No space is necessary after a cast
#414: FILE: drivers/s390/block/dasd_eer.c:196:
+		dasd_eer_read_buffer(eerb, (char *) &tailcount,

CHECK:SPACING: No space is necessary after a cast
#420: FILE: drivers/s390/block/dasd_eer.c:202:
+	dasd_eer_write_buffer(eerb, (char*) &count, sizeof(count));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#420: FILE: drivers/s390/block/dasd_eer.c:202:
+	dasd_eer_write_buffer(eerb, (char*) &count, sizeof(count));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#433: FILE: drivers/s390/block/dasd_eer.c:215:
+		free_page((unsigned long) buf[i]);

CHECK:SPACING: No space is necessary after a cast
#444: FILE: drivers/s390/block/dasd_eer.c:226:
+		buf[i] = (char *) get_zeroed_page(GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#533: FILE: drivers/s390/block/dasd_eer.c:315:
+		dasd_eer_write_buffer(eerb, (char *) &header, sizeof(header));

CHECK:SPACING: No space is necessary after a cast
#573: FILE: drivers/s390/block/dasd_eer.c:355:
+		dasd_eer_write_buffer(eerb, (char *) &header , sizeof(header));

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#573: FILE: drivers/s390/block/dasd_eer.c:355:
+		dasd_eer_write_buffer(eerb, (char *) &header , sizeof(header));
 		                                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#636: FILE: drivers/s390/block/dasd_eer.c:418:
+        struct dasd_device *device = cqr->device;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: drivers/s390/block/dasd_eer.c:418:
+        struct dasd_device *device = cqr->device;$

CHECK:SPACING: No space is necessary after a cast
#686: FILE: drivers/s390/block/dasd_eer.c:468:
+	cqr->cpaddr->cda = (__u32)(addr_t) cqr->data;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#736: FILE: drivers/s390/block/dasd_eer.c:518:
+static int dasd_eer_open(struct inode *inp, struct file *filp)
                                                          ^^^^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*eerb)...) over kzalloc(sizeof(struct eerbuffer)...)
#741: FILE: drivers/s390/block/dasd_eer.c:523:
+	eerb = kzalloc(sizeof(struct eerbuffer), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPLIT_STRING: quoted string split across lines
#747: FILE: drivers/s390/block/dasd_eer.c:529:
+		MESSAGE(KERN_WARNING, "can't open device since module "
+			"parameter eer_pages is smaller then 1 or"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#748: FILE: drivers/s390/block/dasd_eer.c:530:
+			"parameter eer_pages is smaller then 1 or"
+			" bigger then %d", (int)(INT_MAX / PAGE_SIZE));

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#752: FILE: drivers/s390/block/dasd_eer.c:534:
+	eerb->buffer = kmalloc(eerb->buffer_page_count * sizeof(char *),
+			       GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:CODE_INDENT: code indent should use tabs where possible
#754: FILE: drivers/s390/block/dasd_eer.c:536:
+        if (!eerb->buffer) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#754: FILE: drivers/s390/block/dasd_eer.c:536:
+        if (!eerb->buffer) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#756: FILE: drivers/s390/block/dasd_eer.c:538:
+                return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#756: FILE: drivers/s390/block/dasd_eer.c:538:
+                return -ENOMEM;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#769: FILE: drivers/s390/block/dasd_eer.c:551:
+	return nonseekable_open(inp,filp);
 	                            ^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#769: FILE: drivers/s390/block/dasd_eer.c:551:
+	return nonseekable_open(inp,filp);
 	                           ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#772: FILE: drivers/s390/block/dasd_eer.c:554:
+static int dasd_eer_close(struct inode *inp, struct file *filp)
                                                           ^^^^

CHECK:SPACING: No space is necessary after a cast
#777: FILE: drivers/s390/block/dasd_eer.c:559:
+	eerb = (struct eerbuffer *) filp->private_data;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#788: FILE: drivers/s390/block/dasd_eer.c:570:
+static ssize_t dasd_eer_read(struct file *filp, char __user *buf,
                                           ^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#791: FILE: drivers/s390/block/dasd_eer.c:573:
+	int tc,rc;
 	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#792: FILE: drivers/s390/block/dasd_eer.c:574:
+	int tailcount,effective_count;
 	             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#793: FILE: drivers/s390/block/dasd_eer.c:575:
+        unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: drivers/s390/block/dasd_eer.c:575:
+        unsigned long flags;$

CHECK:SPACING: No space is necessary after a cast
#796: FILE: drivers/s390/block/dasd_eer.c:578:
+	eerb = (struct eerbuffer *) filp->private_data;

ERROR:CODE_INDENT: code indent should use tabs where possible
#803: FILE: drivers/s390/block/dasd_eer.c:585:
+^I^I                  /* has been deleted             */$

CHECK:SPACING: No space is necessary after a cast
#810: FILE: drivers/s390/block/dasd_eer.c:592:
+		effective_count = min(eerb->residual, (int) count);

WARNING:MINMAX: min() should probably be min_t(int, eerb->residual, count)
#810: FILE: drivers/s390/block/dasd_eer.c:592:
+		effective_count = min(eerb->residual, (int) count);

CHECK:SPACING: No space is necessary after a cast
#815: FILE: drivers/s390/block/dasd_eer.c:597:
+			tc = dasd_eer_read_buffer(eerb, (char *) &tailcount,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#823: FILE: drivers/s390/block/dasd_eer.c:605:
+				rc = wait_event_interruptible(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#834: FILE: drivers/s390/block/dasd_eer.c:616:
+		effective_count = min(tailcount,(int)count);
 		                               ^

WARNING:MINMAX: min() should probably be min_t(int, tailcount, count)
#834: FILE: drivers/s390/block/dasd_eer.c:616:
+		effective_count = min(tailcount,(int)count);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#852: FILE: drivers/s390/block/dasd_eer.c:634:
+static unsigned int dasd_eer_poll(struct file *filp, poll_table *ptable)
                                                ^^^^

CHECK:SPACING: No space is necessary after a cast
#858: FILE: drivers/s390/block/dasd_eer.c:640:
+	eerb = (struct eerbuffer *) filp->private_data;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#859: FILE: drivers/s390/block/dasd_eer.c:641:
+	poll_wait(filp, &dasd_eer_read_wait_queue, ptable);
 	          ^^^^

WARNING:SPACING: space prohibited before semicolon
#862: FILE: drivers/s390/block/dasd_eer.c:644:
+		mask = POLLIN | POLLRDNORM ;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#869: FILE: drivers/s390/block/dasd_eer.c:651:
+static struct file_operations dasd_eer_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SPLIT_STRING: quoted string split across lines
#890: FILE: drivers/s390/block/dasd_eer.c:672:
+		MESSAGE(KERN_ERR, "%s", "dasd_eer_init could not "
+		       "register misc device");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#908: FILE: drivers/s390/block/dasd_int.h:271:
 
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#955: FILE: drivers/s390/block/dasd_int.h:574:
+int dasd_eer_enable(struct dasd_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#956: FILE: drivers/s390/block/dasd_int.h:575:
+void dasd_eer_disable(struct dasd_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#957: FILE: drivers/s390/block/dasd_int.h:576:
+void dasd_eer_write(struct dasd_device *, struct dasd_ccw_req *cqr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#959: FILE: drivers/s390/block/dasd_int.h:578:
+void dasd_eer_snss(struct dasd_device *);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "device->eer_cqr"
#963: FILE: drivers/s390/block/dasd_int.h:582:
+	return device->eer_cqr != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required after that ',' (ctx:VxV)
#970: FILE: drivers/s390/block/dasd_int.h:589:
+#define dasd_eer_write(d,c,i)	do { } while (0)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#970: FILE: drivers/s390/block/dasd_int.h:589:
+#define dasd_eer_write(d,c,i)	do { } while (0)
                           ^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#985: FILE: drivers/s390/block/Kconfig:58:
+config DASD_EER
+	bool "Extended error reporting (EER)"
+	depends on DASD
+	help
+	  This driver provides a character device interface to the
+	  DASD extended error reporting. This is only needed if you want to
+	  use applications written for the EER facility.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091871.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 42 warnings, 25 checks, 917 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091871.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
