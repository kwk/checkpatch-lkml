CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#39: FILE: fs/cifs/asn1.c:103:
+static void asn1_open(struct asn1_ctx *ctx, unsigned char *buf,
+	unsigned int len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#71: FILE: fs/cifs/asn1.c:137:
+static unsigned char asn1_id_decode(struct asn1_ctx *ctx, unsigned int *cls,
+	unsigned int *con, unsigned int *tag)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#82: FILE: fs/cifs/asn1.c:156:
+static unsigned char asn1_length_decode(struct asn1_ctx *ctx,
+	unsigned int *def, unsigned int *len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: fs/cifs/asn1.c:187:
+static unsigned char asn1_header_decode(struct asn1_ctx *ctx,
+	unsigned char **eoc, unsigned int *cls, unsigned int *con,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: fs/cifs/asn1.c:270:
+static unsigned char asn1_uint_decode(struct asn1_ctx *ctx, unsigned char *eoc,
+	unsigned int *integer)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: fs/cifs/asn1.c:330:
+static unsigned char asn1_octets_decode(struct asn1_ctx *ctx,
+	unsigned char *eoc, unsigned char **octets, unsigned int *len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: fs/cifs/asn1.c:354:
+static unsigned char asn1_subid_decode(struct asn1_ctx *ctx,
+	unsigned long *subid)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: fs/cifs/asn1.c:371:
+static int asn1_oid_decode(struct asn1_ctx *ctx, unsigned char *eoc,
+	unsigned long **oid, unsigned int *len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: fs/cifs/asn1.c:423:
+static int compare_oid(unsigned long *oid1, unsigned int oid1len,
+	unsigned long *oid2, unsigned int oid2len)

CHECK:CAMELCASE: Avoid CamelCase: <decode_negTokenInit>
#205: FILE: fs/cifs/asn1.c:440:
+int decode_negTokenInit(unsigned char *security_blob, int length,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: fs/cifs/asn1.c:441:
+int decode_negTokenInit(unsigned char *security_blob, int length,
+	enum securityEnum *secType)

CHECK:CAMELCASE: Avoid CamelCase: <securityEnum>
#206: FILE: fs/cifs/asn1.c:441:
+	enum securityEnum *secType)

CHECK:CAMELCASE: Avoid CamelCase: <secType>
#206: FILE: fs/cifs/asn1.c:441:
+	enum securityEnum *secType)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000193105.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 0 warnings, 13 checks, 163 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000193105.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
