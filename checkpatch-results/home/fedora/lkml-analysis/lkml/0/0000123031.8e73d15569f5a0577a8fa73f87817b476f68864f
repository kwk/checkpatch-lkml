CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#53: FILE: lib/inflate.c:139:
+static int INIT inflate_codes(struct iostate *, struct huft *, struct huft *,
+			 int, int);

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: lib/inflate.c:225:
+        x = readbits(io, j);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#127: FILE: lib/inflate.c:253:
+	for( ; io->bits < n; io->bits += 8)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#147: FILE: lib/inflate.c:267:
+	u32 r = readbits(io, n);
+	dumpbits(io, n);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: lib/inflate.c:588:
+static int INIT inflate_codes(struct iostate *io, struct huft *tl, struct huft *td,
+			 int bl, int bd)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#179: FILE: lib/inflate.c:591:
+	unsigned len, dist;

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#335: FILE: lib/inflate.c:671:
+static int noinline INIT inflate_fixed(struct iostate *io)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#353: FILE: lib/inflate.c:721:
+static int noinline INIT inflate_dynamic(struct iostate *io)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#375: FILE: lib/inflate.c:740:
+	nd = 1 + pullbits(io, 5); /* number of distance codes */
 	^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#497: FILE: lib/inflate.c:883:
+		if ((r = inflate_block(io, &e))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#529: FILE: lib/inflate.c:968:
+	io.opos = io.bits = io.buf = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#538: FILE: lib/inflate.c:1024:
+	if ((res = inflate(&io))) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000123031.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 3 warnings, 3 checks, 491 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000123031.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
