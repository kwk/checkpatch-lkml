WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
  this patch (against 2.5.45) extends the selection interface, so that userland

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#60: FILE: include/linux/selection.h:21:
+extern int set_selection_user(const unsigned long arg);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#61: FILE: include/linux/selection.h:22:
+extern int get_selection_user(const unsigned long arg);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#104: FILE: drivers/char/selection.c:321:
+ * Invoked by ioctl(). */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: No space is necessary after a cast
#113: FILE: drivers/char/selection.c:330:
+	args = (char *) (arg + 1);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#114: FILE: drivers/char/selection.c:331:
+	get_user(buf_length, (unsigned int *) args);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#120: FILE: drivers/char/selection.c:337:
+			printk(KERN_WARNING "selection: kmalloc() failed\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#120: FILE: drivers/char/selection.c:337:
+		if (!new_sel_buffer) {
+			printk(KERN_WARNING "selection: kmalloc() failed\n");

CHECK:SPACING: No space is necessary after a cast
#123: FILE: drivers/char/selection.c:340:
+		if (copy_from_user(new_sel_buffer, (char *) args, buf_length)){

ERROR:SPACING: space required before the open brace '{'
#123: FILE: drivers/char/selection.c:340:
+		if (copy_from_user(new_sel_buffer, (char *) args, buf_length)){

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#132: FILE: drivers/char/selection.c:349:
+	if (sel_buffer)
+		kfree(sel_buffer);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#142: FILE: drivers/char/selection.c:359:
+ * Invoked by ioctl(). */

CHECK:SPACING: No space is necessary after a cast
#148: FILE: drivers/char/selection.c:365:
+	args = (char *) (arg + 1);

CHECK:SPACING: No space is necessary after a cast
#149: FILE: drivers/char/selection.c:366:
+	get_user(buf_length, (unsigned int *) args);

CHECK:SPACING: No space is necessary after a cast
#152: FILE: drivers/char/selection.c:369:
+		if (copy_to_user((char *) args, &buf_length,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: drivers/char/selection.c:370:
+		if (copy_to_user((char *) args, &buf_length,
+				sizeof(unsigned int))) {

CHECK:SPACING: No space is necessary after a cast
#162: FILE: drivers/char/selection.c:379:
+	if (copy_to_user((char *) args, sel_buffer, buf_length)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#162: FILE: drivers/char/selection.c:379:
+	if (copy_to_user((char *) args, sel_buffer, buf_length)) {
+		return -EFAULT;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#172: FILE: drivers/char/selection.c:389:
+EXPORT_SYMBOL(get_selection_user);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000417130.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 8 warnings, 10 checks, 109 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000417130.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
