WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: drivers/firmware/thinkpad_ec.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: drivers/firmware/thinkpad_ec.c:3:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: drivers/firmware/thinkpad_ec.c:6:
+ *  The interface provides various system management services (currently $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#103: FILE: drivers/firmware/thinkpad_ec.c:26:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#104: FILE: drivers/firmware/thinkpad_ec.c:27:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#114: FILE: drivers/firmware/thinkpad_ec.c:37:
+#include <asm/io.h>

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#143: FILE: drivers/firmware/thinkpad_ec.c:66:
+#define TPC_PREFETCH_TIMEOUT   (HZ/10)  /* invalidate prefetch after 0.1sec */
                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#146: FILE: drivers/firmware/thinkpad_ec.c:69:
+static int tp_debug = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/firmware/thinkpad_ec.c:75:
+  do { if (tp_debug) printk(KERN_DEBUG fmt, ## args); } while (0)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#152: FILE: drivers/firmware/thinkpad_ec.c:75:
+  do { if (tp_debug) printk(KERN_DEBUG fmt, ## args); } while (0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/firmware/thinkpad_ec.c:77:
+  "thinkpad_ec: %s: " fmt "\n", __func__, ## args$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: drivers/firmware/thinkpad_ec.c:79:
+  MSG_FMT("%s: (0x%02x:0x%02x)->0x%02x", \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: drivers/firmware/thinkpad_ec.c:80:
+          msg, args->val[0x0], args->val[0xF], code)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: drivers/firmware/thinkpad_ec.c:80:
+          msg, args->val[0x0], args->val[0xF], code)$

CHECK:CAMELCASE: Avoid CamelCase: <xF>
#157: FILE: drivers/firmware/thinkpad_ec.c:80:
+          msg, args->val[0x0], args->val[0xF], code)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#163: FILE: drivers/firmware/thinkpad_ec.c:86:
+#define TPC_PREFETCH_JUNK   (INITIAL_JIFFIES+1)   /* - Ignore prefetch */
                                             ^

WARNING:TYPO_SPELLING: 'accesing' may be misspelled - perhaps 'accessing'?
#170: FILE: drivers/firmware/thinkpad_ec.c:93:
+ * Get exclusive lock for accesing the controller. May sleep.
                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: drivers/firmware/thinkpad_ec.c:96:
+int thinkpad_ec_lock(void) $

CHECK:SPACING: No space is necessary after a cast
#173: FILE: drivers/firmware/thinkpad_ec.c:96:
+int thinkpad_ec_lock(void) 

WARNING:LINE_SPACING: Missing a blank line after declarations
#176: FILE: drivers/firmware/thinkpad_ec.c:99:
+	int ret;
+	ret = down_interruptible(&thinkpad_ec_mutex);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: drivers/firmware/thinkpad_ec.c:105:
+EXPORT_SYMBOL_GPL(thinkpad_ec_lock); $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#182: FILE: drivers/firmware/thinkpad_ec.c:105:
+EXPORT_SYMBOL_GPL(thinkpad_ec_lock); 

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:TYPO_SPELLING: 'accesing' may be misspelled - perhaps 'accessing'?
#185: FILE: drivers/firmware/thinkpad_ec.c:108:
+ * Get exclusive lock for accesing the controller but only if it's available.
                           ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: drivers/firmware/thinkpad_ec.c:111:
+int thinkpad_ec_try_lock(void) $

CHECK:SPACING: No space is necessary after a cast
#188: FILE: drivers/firmware/thinkpad_ec.c:111:
+int thinkpad_ec_try_lock(void) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: drivers/firmware/thinkpad_ec.c:116:
+EXPORT_SYMBOL_GPL(thinkpad_ec_try_lock); $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#193: FILE: drivers/firmware/thinkpad_ec.c:116:
+EXPORT_SYMBOL_GPL(thinkpad_ec_try_lock); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: drivers/firmware/thinkpad_ec.c:121:
+void thinkpad_ec_unlock(void) $

CHECK:SPACING: No space is necessary after a cast
#198: FILE: drivers/firmware/thinkpad_ec.c:121:
+void thinkpad_ec_unlock(void) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: drivers/firmware/thinkpad_ec.c:123:
+ ^Iup(&thinkpad_ec_mutex);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#200: FILE: drivers/firmware/thinkpad_ec.c:123:
+ ^Iup(&thinkpad_ec_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/firmware/thinkpad_ec.c:123:
+ ^Iup(&thinkpad_ec_mutex);$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#203: FILE: drivers/firmware/thinkpad_ec.c:126:
+EXPORT_SYMBOL_GPL(thinkpad_ec_unlock);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: drivers/firmware/thinkpad_ec.c:129:
+static int thinkpad_ec_request_row(const struct thinkpad_ec_row *args) $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#213: FILE: drivers/firmware/thinkpad_ec.c:136:
+		printk(KERN_ERR MSG_FMT("bad args->mask=0x%02x", args->mask));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#222: FILE: drivers/firmware/thinkpad_ec.c:145:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#227: FILE: drivers/firmware/thinkpad_ec.c:150:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#231: FILE: drivers/firmware/thinkpad_ec.c:154:
+		printk(KERN_WARNING REQ_FMT("bad initial STR3", str3));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#239: FILE: drivers/firmware/thinkpad_ec.c:162:
+		printk(KERN_WARNING REQ_FMT("arg0 rejected", str3));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#244: FILE: drivers/firmware/thinkpad_ec.c:167:
+	for (i=1; i<TP_CONTROLLER_ROW_LEN-1; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#244: FILE: drivers/firmware/thinkpad_ec.c:167:
+	for (i=1; i<TP_CONTROLLER_ROW_LEN-1; i++)
 	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#244: FILE: drivers/firmware/thinkpad_ec.c:167:
+	for (i=1; i<TP_CONTROLLER_ROW_LEN-1; i++)
 	                                 ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#245: FILE: drivers/firmware/thinkpad_ec.c:168:
+		if ((args->mask>>i)&1)
 		               ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#245: FILE: drivers/firmware/thinkpad_ec.c:168:
+		if ((args->mask>>i)&1)
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#246: FILE: drivers/firmware/thinkpad_ec.c:169:
+			outb(args->val[i], TPC_TWR0_PORT+i);
 			                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#255: FILE: drivers/firmware/thinkpad_ec.c:178:
+	for (i=0; i<TPC_REQUEST_RETRIES; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#255: FILE: drivers/firmware/thinkpad_ec.c:178:
+	for (i=0; i<TPC_REQUEST_RETRIES; ++i) {
 	           ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#259: FILE: drivers/firmware/thinkpad_ec.c:182:
+		else if (str3==(H8S_STR3_IBF3B|H8S_STR3_MWMF) ||
 		             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#259: FILE: drivers/firmware/thinkpad_ec.c:182:
+		else if (str3==(H8S_STR3_IBF3B|H8S_STR3_MWMF) ||
 		                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: drivers/firmware/thinkpad_ec.c:183:
+^I^I         str3==0x00) /* normal progress, wait it out */$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#260: FILE: drivers/firmware/thinkpad_ec.c:183:
+		         str3==0x00) /* normal progress, wait it out */
 		             ^

CHECK:BRACES: Unbalanced braces around else statement
#262: FILE: drivers/firmware/thinkpad_ec.c:185:
+		else { /* weird EC status */

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#263: FILE: drivers/firmware/thinkpad_ec.c:186:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#268: FILE: drivers/firmware/thinkpad_ec.c:191:
+	printk(KERN_WARNING REQ_FMT("EC is mysteriously silent", str3));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: drivers/firmware/thinkpad_ec.c:196:
+ * requested. $

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: drivers/firmware/thinkpad_ec.c:203:
+         * in the following 'if' as it reads the request and writes its data.$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#283: FILE: drivers/firmware/thinkpad_ec.c:206:
+	if (str3==(H8S_STR3_IBF3B|H8S_STR3_MWMF) ||
 	        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#283: FILE: drivers/firmware/thinkpad_ec.c:206:
+	if (str3==(H8S_STR3_IBF3B|H8S_STR3_MWMF) ||
 	                         ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#284: FILE: drivers/firmware/thinkpad_ec.c:207:
+	    str3==0x00 ||   /* the 0x00 is indistinguishable from idle EC! */
 	        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#285: FILE: drivers/firmware/thinkpad_ec.c:208:
+	    str3==H8S_STR3_SWMF )
 	        ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#285: FILE: drivers/firmware/thinkpad_ec.c:208:
+	    str3==H8S_STR3_SWMF )

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#288: FILE: drivers/firmware/thinkpad_ec.c:211:
+	if (str3 != (H8S_STR3_OBF3B|H8S_STR3_SWMF)) {
 	                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#289: FILE: drivers/firmware/thinkpad_ec.c:212:
+		printk(KERN_WARNING

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: drivers/firmware/thinkpad_ec.c:216:
+^I^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#297: FILE: drivers/firmware/thinkpad_ec.c:220:
+	for (i=1; i<TP_CONTROLLER_ROW_LEN-1; ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#297: FILE: drivers/firmware/thinkpad_ec.c:220:
+	for (i=1; i<TP_CONTROLLER_ROW_LEN-1; ++i)
 	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#297: FILE: drivers/firmware/thinkpad_ec.c:220:
+	for (i=1; i<TP_CONTROLLER_ROW_LEN-1; ++i)
 	                                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#298: FILE: drivers/firmware/thinkpad_ec.c:221:
+		if ((data->mask >> i)&1)
 		                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#299: FILE: drivers/firmware/thinkpad_ec.c:222:
+			data->val[i] = inb(TPC_TWR0_PORT+i);
 			                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: drivers/firmware/thinkpad_ec.c:225:
+^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#306: FILE: drivers/firmware/thinkpad_ec.c:229:
+		printk(KERN_WARNING

ERROR:TRAILING_WHITESPACE: trailing whitespace
#311: FILE: drivers/firmware/thinkpad_ec.c:234:
+/* Is the given row currently prefetched? $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#313: FILE: drivers/firmware/thinkpad_ec.c:236:
+ * in practice this suffices                                        .*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:JIFFIES_COMPARISON: Comparing get_jiffies_64() is almost always wrong; prefer time_after64, time_before64 and friends
#320: FILE: drivers/firmware/thinkpad_ec.c:243:
+	       (get_jiffies_64() < prefetch_jiffies + TPC_PREFETCH_TIMEOUT);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: drivers/firmware/thinkpad_ec.c:248:
+ * The row args are specified by 16 byte arguments, some of which may be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: drivers/firmware/thinkpad_ec.c:249:
+ * missing (but the first and last are mandatory). These are given in $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: drivers/firmware/thinkpad_ec.c:251:
+ * The rows's data is stored in data->val[], but is only guaranteed to be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#332: FILE: drivers/firmware/thinkpad_ec.c:255:
+ * Caller must hold controller lock. $

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: drivers/firmware/thinkpad_ec.c:258:
+                           struct thinkpad_ec_row *data)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#335: FILE: drivers/firmware/thinkpad_ec.c:258:
+int thinkpad_ec_read_row(const struct thinkpad_ec_row *args,
+                           struct thinkpad_ec_row *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: drivers/firmware/thinkpad_ec.c:258:
+                           struct thinkpad_ec_row *data)$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#343: FILE: drivers/firmware/thinkpad_ec.c:266:
+	for (retries=0; retries<TPC_READ_RETRIES; ++retries) {
 	            ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#343: FILE: drivers/firmware/thinkpad_ec.c:266:
+	for (retries=0; retries<TPC_READ_RETRIES; ++retries) {
 	                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#351: FILE: drivers/firmware/thinkpad_ec.c:274:
+	printk(KERN_ERR REQ_FMT("failed requesting row", ret));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#356: FILE: drivers/firmware/thinkpad_ec.c:279:
+	for (retries=0; retries<TPC_READ_RETRIES; ++retries) {
 	            ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#356: FILE: drivers/firmware/thinkpad_ec.c:279:
+	for (retries=0; retries<TPC_READ_RETRIES; ++retries) {
 	                       ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxO)
#360: FILE: drivers/firmware/thinkpad_ec.c:283:
+		if (ret!=-EBUSY)
 		       ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#360: FILE: drivers/firmware/thinkpad_ec.c:283:
+		if (ret!=-EBUSY)
 		         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#365: FILE: drivers/firmware/thinkpad_ec.c:288:
+	printk(KERN_ERR REQ_FMT("failed waiting for data", ret));

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#372: FILE: drivers/firmware/thinkpad_ec.c:295:
+EXPORT_SYMBOL_GPL(thinkpad_ec_read_row);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#378: FILE: drivers/firmware/thinkpad_ec.c:301:
+ * Caller must hold controller lock. $

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: drivers/firmware/thinkpad_ec.c:304:
+                               struct thinkpad_ec_row *data)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: drivers/firmware/thinkpad_ec.c:304:
+int thinkpad_ec_try_read_row(const struct thinkpad_ec_row *args,
+                               struct thinkpad_ec_row *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: drivers/firmware/thinkpad_ec.c:304:
+                               struct thinkpad_ec_row *data)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#384: FILE: drivers/firmware/thinkpad_ec.c:307:
+	int ret;
+	if (!thinkpad_ec_is_row_fetched(args)) {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#394: FILE: drivers/firmware/thinkpad_ec.c:317:
+EXPORT_SYMBOL_GPL(thinkpad_ec_try_read_row);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#399: FILE: drivers/firmware/thinkpad_ec.c:322:
+ * and a subsequent call to thinkpad_ec_try_read_row stands a $

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: drivers/firmware/thinkpad_ec.c:331:
+ ^Iret = thinkpad_ec_request_row(args);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#408: FILE: drivers/firmware/thinkpad_ec.c:331:
+ ^Iret = thinkpad_ec_request_row(args);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: drivers/firmware/thinkpad_ec.c:331:
+ ^Iret = thinkpad_ec_request_row(args);$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#419: FILE: drivers/firmware/thinkpad_ec.c:342:
+EXPORT_SYMBOL_GPL(thinkpad_ec_prefetch_row);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#426: FILE: drivers/firmware/thinkpad_ec.c:349:
+void thinkpad_ec_invalidate(void) $

CHECK:SPACING: No space is necessary after a cast
#426: FILE: drivers/firmware/thinkpad_ec.c:349:
+void thinkpad_ec_invalidate(void) 

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#431: FILE: drivers/firmware/thinkpad_ec.c:354:
+EXPORT_SYMBOL_GPL(thinkpad_ec_invalidate);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#433: FILE: drivers/firmware/thinkpad_ec.c:356:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#441: FILE: drivers/firmware/thinkpad_ec.c:364:
+static int thinkpad_ec_test(void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#444: FILE: drivers/firmware/thinkpad_ec.c:367:
+	  { .mask=0x8001, .val={0x01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x00} };
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#444: FILE: drivers/firmware/thinkpad_ec.c:367:
+	  { .mask=0x8001, .val={0x01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x00} };
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: drivers/firmware/thinkpad_ec.c:367:
+	  { .mask=0x8001, .val={0x01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x00} };
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: drivers/firmware/thinkpad_ec.c:367:
+	  { .mask=0x8001, .val={0x01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x00} };
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: drivers/firmware/thinkpad_ec.c:367:
+	  { .mask=0x8001, .val={0x01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x00} };
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: drivers/firmware/thinkpad_ec.c:367:
+	  { .mask=0x8001, .val={0x01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x00} };
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: drivers/firmware/thinkpad_ec.c:367:
+	  { .mask=0x8001, .val={0x01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x00} };
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: drivers/firmware/thinkpad_ec.c:367:
+	  { .mask=0x8001, .val={0x01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x00} };
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: drivers/firmware/thinkpad_ec.c:367:
+	  { .mask=0x8001, .val={0x01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x00} };
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: drivers/firmware/thinkpad_ec.c:367:
+	  { .mask=0x8001, .val={0x01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x00} };
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: drivers/firmware/thinkpad_ec.c:367:
+	  { .mask=0x8001, .val={0x01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x00} };
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: drivers/firmware/thinkpad_ec.c:367:
+	  { .mask=0x8001, .val={0x01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x00} };
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: drivers/firmware/thinkpad_ec.c:367:
+	  { .mask=0x8001, .val={0x01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x00} };
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: drivers/firmware/thinkpad_ec.c:367:
+	  { .mask=0x8001, .val={0x01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x00} };
 	                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: drivers/firmware/thinkpad_ec.c:367:
+	  { .mask=0x8001, .val={0x01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x00} };
 	                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: drivers/firmware/thinkpad_ec.c:367:
+	  { .mask=0x8001, .val={0x01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x00} };
 	                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: drivers/firmware/thinkpad_ec.c:367:
+	  { .mask=0x8001, .val={0x01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x00} };
 	                                                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#446: FILE: drivers/firmware/thinkpad_ec.c:369:
+	struct thinkpad_ec_row data = { .mask = 0x0000 };
+	ret = thinkpad_ec_lock();

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#455: FILE: drivers/firmware/thinkpad_ec.c:378:
+static int __init dmi_find_substring(int type, const char *substr) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#457: FILE: drivers/firmware/thinkpad_ec.c:380:
+	struct dmi_device *dev = NULL;
+	while ((dev = dmi_find_device(type, NULL, dev))) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#464: FILE: drivers/firmware/thinkpad_ec.c:387:
+#define TP_DMI_MATCH(vendor,model)	{		\
                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vendor' - possible side-effects?
#464: FILE: drivers/firmware/thinkpad_ec.c:387:
+#define TP_DMI_MATCH(vendor,model)	{		\
+	.ident = vendor " " model,			\
+	.matches = {					\
+		DMI_MATCH(DMI_BOARD_VENDOR, vendor),	\
+		DMI_MATCH(DMI_PRODUCT_VERSION, model)	\
+	}						\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'model' - possible side-effects?
#464: FILE: drivers/firmware/thinkpad_ec.c:387:
+#define TP_DMI_MATCH(vendor,model)	{		\
+	.ident = vendor " " model,			\
+	.matches = {					\
+		DMI_MATCH(DMI_BOARD_VENDOR, vendor),	\
+		DMI_MATCH(DMI_PRODUCT_VERSION, model)	\
+	}						\
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: drivers/firmware/thinkpad_ec.c:396:
+static int __init check_dmi_for_ec(void) $

CHECK:SPACING: No space is necessary after a cast
#473: FILE: drivers/firmware/thinkpad_ec.c:396:
+static int __init check_dmi_for_ec(void) 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#477: FILE: drivers/firmware/thinkpad_ec.c:400:
+		TP_DMI_MATCH("IBM","ThinkPad A30"),
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#478: FILE: drivers/firmware/thinkpad_ec.c:401:
+		TP_DMI_MATCH("IBM","ThinkPad T23"),
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#479: FILE: drivers/firmware/thinkpad_ec.c:402:
+		TP_DMI_MATCH("IBM","ThinkPad X24"),
 		                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: drivers/firmware/thinkpad_ec.c:406:
+^I                          "IBM ThinkPad Embedded Controller") ||$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#492: FILE: drivers/firmware/thinkpad_ec.c:415:
+		printk(KERN_ERR "thinkpad_ec: no ThinkPad embedded controller!\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#496: FILE: drivers/firmware/thinkpad_ec.c:419:
+	if (!request_region(TPC_BASE_PORT, TPC_NUM_PORTS,
+	                    "thinkpad_ec")) 
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#497: FILE: drivers/firmware/thinkpad_ec.c:420:
+^I                    "thinkpad_ec")) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: drivers/firmware/thinkpad_ec.c:420:
+^I                    "thinkpad_ec")) $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#499: FILE: drivers/firmware/thinkpad_ec.c:422:
+		printk(KERN_ERR "thinkpad_ec: cannot claim io ports %#x-%#x\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#501: FILE: drivers/firmware/thinkpad_ec.c:424:
+		       TPC_BASE_PORT + TPC_NUM_PORTS -1);
 		                                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#506: FILE: drivers/firmware/thinkpad_ec.c:429:
+		printk(KERN_INFO "thinkpad_ec: initial ec test failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#510: FILE: drivers/firmware/thinkpad_ec.c:433:
+	printk(KERN_INFO "thinkpad_ec: thinkpad_ec " TP_VERSION " loaded.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#517: FILE: drivers/firmware/thinkpad_ec.c:440:
+	printk(KERN_INFO "thinkpad_ec: unloaded.\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#526: FILE: include/linux/thinkpad_ec.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#528: FILE: include/linux/thinkpad_ec.h:3:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#542: FILE: include/linux/thinkpad_ec.h:17:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#543: FILE: include/linux/thinkpad_ec.h:18:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#559: FILE: include/linux/thinkpad_ec.h:34:
+extern int thinkpad_ec_lock(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#560: FILE: include/linux/thinkpad_ec.h:35:
+extern int thinkpad_ec_try_lock(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#561: FILE: include/linux/thinkpad_ec.h:36:
+extern void thinkpad_ec_unlock(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#563: FILE: include/linux/thinkpad_ec.h:38:
+extern int thinkpad_ec_read_row(const struct thinkpad_ec_row *args,

ERROR:CODE_INDENT: code indent should use tabs where possible
#564: FILE: include/linux/thinkpad_ec.h:39:
+                                struct thinkpad_ec_row *data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: include/linux/thinkpad_ec.h:39:
+                                struct thinkpad_ec_row *data);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#565: FILE: include/linux/thinkpad_ec.h:40:
+extern int thinkpad_ec_try_read_row(const struct thinkpad_ec_row *args,

ERROR:CODE_INDENT: code indent should use tabs where possible
#566: FILE: include/linux/thinkpad_ec.h:41:
+                                    struct thinkpad_ec_row *mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: include/linux/thinkpad_ec.h:41:
+                                    struct thinkpad_ec_row *mask);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#567: FILE: include/linux/thinkpad_ec.h:42:
+extern int thinkpad_ec_prefetch_row(const struct thinkpad_ec_row *args);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#568: FILE: include/linux/thinkpad_ec.h:43:
+extern void thinkpad_ec_invalidate(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#570: FILE: include/linux/thinkpad_ec.h:45:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000050947.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 80 errors, 47 warnings, 33 checks, 502 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000050947.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
