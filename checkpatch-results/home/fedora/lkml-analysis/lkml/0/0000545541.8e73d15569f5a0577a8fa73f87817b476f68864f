ERROR:SPACING: space required after that ',' (ctx:VxV)
#114: FILE: dl/digiDload.c:1131:
+	strcat(temp_name,"/etc/digi/");
 	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#122: FILE: dl/digiDload.c:1965:
 char *chan_to_path( int channo ) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#124: FILE: dl/digiDload.c:1967:
+	sprintf(dev_path,"/dev/digi/%d",channo);
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#124: FILE: dl/digiDload.c:1967:
+	sprintf(dev_path,"/dev/digi/%d",channo);
 	                               ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#142: FILE: dl/digiDload.c:1988:
 void make_nodes( int first, int num, int make ) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#161: FILE: dl/digiDload.c:2042:
 void update_devs() {
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#180: FILE: dl/digiDload.c:2102:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#182: FILE: dl/digiDload.c:2104:
+	if ((digiFD = open("/dev/digi/ctl", O_RDWR)) < 0 ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#182: FILE: dl/digiDload.c:2104:
+	if ((digiFD = open("/dev/digi/ctl", O_RDWR)) < 0 ) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:CAMELCASE: Avoid CamelCase: <digiFD>
#182: FILE: dl/digiDload.c:2104:
+	if ((digiFD = open("/dev/digi/ctl", O_RDWR)) < 0 ) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BRACES: braces {} are not necessary for single statement blocks
#182: FILE: dl/digiDload.c:2104:
+	if ((digiFD = open("/dev/digi/ctl", O_RDWR)) < 0 ) {
+		perror(" cannot open digi download device ");
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: drv/epca.c:630:
+#if LINUX_VERSION_CODE > 0x020400 $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#229: FILE: drv/epca.c:630:
+#if LINUX_VERSION_CODE > 0x020400 

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#241: FILE: drv/epca.c:813:
+#if LINUX_VERSION_CODE < 0x020400

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#251: FILE: drv/epca.c:854:
+#if LINUX_VERSION_CODE < 0x020400

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#255: FILE: drv/epca.c:858:
+int epca_read_proc( char *buf, char **start, off_t offset, int len ){

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#255: FILE: drv/epca.c:858:
+int epca_read_proc( char *buf, char **start, off_t offset, int len ){

ERROR:SPACING: space prohibited after that open parenthesis '('
#255: FILE: drv/epca.c:858:
+int epca_read_proc( char *buf, char **start, off_t offset, int len ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#255: FILE: drv/epca.c:858:
+int epca_read_proc( char *buf, char **start, off_t offset, int len ){

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#265: FILE: drv/epca.c:899:
+#if LINUX_VERSION_CODE < 0x020400

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#282: FILE: drv/epca.c:1164:
+#if LINUX_VERSION_CODE < 0x020400

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: drv/epca.c:1179:
+^Iif(schedule_task(&ch->tqueue)==0) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#293: FILE: drv/epca.c:1179:
+	if(schedule_task(&ch->tqueue)==0) 
+	  MOD_DEC_USE_COUNT;

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#293: FILE: drv/epca.c:1179:
+	if(schedule_task(&ch->tqueue)==0) 
 	                             ^

ERROR:SPACING: space required before the open parenthesis '('
#293: FILE: drv/epca.c:1179:
+	if(schedule_task(&ch->tqueue)==0) 

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#303: FILE: drv/epca.c:1440:
+#if LINUX_VERSION_CODE < 0x020400

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#313: FILE: drv/epca.c:2457:
+#if LINUX_VERSION_CODE < 0x020400

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: drv/epca.c:2462:
+#endif^I^I^I      $

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#326: FILE: drv/epca.c:2483:
+#if LINUX_VERSION_CODE < 0x020400

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#342: FILE: drv/epca.c:2519:
+#if LINUX_VERSION_CODE < 0x020400

ERROR:SPACING: space required after that ',' (ctx:VxV)
#345: FILE: drv/epca.c:2522:
+	remove_proc_entry("epca",NULL);
 	                        ^

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#356: FILE: drv/epca.c:2609:
+#if LINUX_VERSION_CODE < 0x020400

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: drv/epca.c:2611:
+#endif $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#367: FILE: drv/epca.c:2797:
+	lpc_driver.name="digi/%d";
 	               ^

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#379: FILE: drv/epca.c:2843:
+#if LINUX_VERSION_CODE < 0x020400

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#403: FILE: drv/epca.c:2871:
 	for( bank=0; bank<n_banks; ++bank ) {
[...]
+	  if(bank>0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: drv/epca.c:2877:
+          /* bank and the second is the device.  The bank number  */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: drv/epca.c:2878:
+          /* would be omitted if there was only one.              */$

WARNING:TABSTOP: Statements should start on a tabstop
#411: FILE: drv/epca.c:2879:
+	  if(bank>0) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#411: FILE: drv/epca.c:2879:
+	  if(bank>0) {
+	    epca_mess(KERN_ERR,"Multiple banks with devfs unsupported\n");

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#411: FILE: drv/epca.c:2879:
+	  if(bank>0) {
 	         ^

ERROR:SPACING: space required before the open parenthesis '('
#411: FILE: drv/epca.c:2879:
+	  if(bank>0) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#412: FILE: drv/epca.c:2880:
+	    epca_mess(KERN_ERR,"Multiple banks with devfs unsupported\n");
 	                      ^

WARNING:TABSTOP: Statements should start on a tabstop
#413: FILE: drv/epca.c:2881:
+	    break;

WARNING:TABSTOP: Statements should start on a tabstop
#414: FILE: drv/epca.c:2882:
+	  }

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#439: FILE: drv/epca.c:2967:
+#if LINUX_VERSION_CODE < 0x020400

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#457: FILE: drv/epca.c:3013:
+#if LINUX_VERSION_CODE < 0x020400

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#468: FILE: drv/epca.c:3199:
+#if LINUX_VERSION_CODE < 0x020400

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#480: FILE: drv/epca.c:3221:
+#if LINUX_VERSION_CODE < 0x020400

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: drv/epca.c:3225:
+#else $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#492: FILE: drv/epca.c:3232:
+	if(!create_proc_info_entry("epca",0,NULL,epca_read_proc)) {
+	  printk(KERN_ERR "epca: register /proc/epca failed\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#492: FILE: drv/epca.c:3232:
+	if(!create_proc_info_entry("epca",0,NULL,epca_read_proc)) {
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#492: FILE: drv/epca.c:3232:
+	if(!create_proc_info_entry("epca",0,NULL,epca_read_proc)) {
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#492: FILE: drv/epca.c:3232:
+	if(!create_proc_info_entry("epca",0,NULL,epca_read_proc)) {
 	                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#492: FILE: drv/epca.c:3232:
+	if(!create_proc_info_entry("epca",0,NULL,epca_read_proc)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#492: FILE: drv/epca.c:3232:
+	if(!create_proc_info_entry("epca",0,NULL,epca_read_proc)) {
+	  printk(KERN_ERR "epca: register /proc/epca failed\n");
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#493: FILE: drv/epca.c:3233:
+	  printk(KERN_ERR "epca: register /proc/epca failed\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#501: FILE: drv/epca.c:3241:
 	for(itmp=0;itmp<num_cards;itmp++)	
+	  memset(&boards[itmp].kme_wait,0,sizeof(boards[itmp].kme_wait));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#503: FILE: drv/epca.c:3242:
+	  memset(&boards[itmp].kme_wait,0,sizeof(boards[itmp].kme_wait));
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#503: FILE: drv/epca.c:3242:
+	  memset(&boards[itmp].kme_wait,0,sizeof(boards[itmp].kme_wait));
 	                                 ^

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#511: FILE: drv/epca.c:3252:
+#if LINUX_VERSION_CODE < 0x020400

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#519: FILE: drv/epca.c:3260:
+#if LINUX_VERSION_CODE < 0x020400

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#535: FILE: drv/epca.c:5899:
+#if LINUX_VERSION_CODE < 0x020400

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000545541.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 29 warnings, 5 checks, 471 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000545541.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
