ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#120: 
--- a/drivers/pci/hotplug/acpiphp.h	Thu Jan 29 17:24:14 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#144: FILE: drivers/pci/hotplug/acpiphp.h:232:
+extern u32 acpiphp_get_address (struct acpiphp_slot *slot);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#144: FILE: drivers/pci/hotplug/acpiphp.h:232:
+extern u32 acpiphp_get_address (struct acpiphp_slot *slot);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#173: FILE: drivers/pci/hotplug/acpiphp_core.c:74:
+static int get_address		(struct hotplug_slot *slot, u32 *value);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#193: FILE: drivers/pci/hotplug/acpiphp_core.c:326:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#200: FILE: drivers/pci/hotplug/acpiphp_core.c:333:
+static int get_address (struct hotplug_slot *hotplug_slot, u32 *value)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#202: FILE: drivers/pci/hotplug/acpiphp_core.c:335:
+	struct slot *slot = get_slot(hotplug_slot, __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#205: FILE: drivers/pci/hotplug/acpiphp_core.c:338:
+	if (slot == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#208: FILE: drivers/pci/hotplug/acpiphp_core.c:341:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#291: FILE: drivers/pci/hotplug/acpiphp_glue.c:1350:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#295: FILE: drivers/pci/hotplug/acpiphp_glue.c:1354:
+u32 acpiphp_get_address (struct acpiphp_slot *slot)

WARNING:SPACING: Unnecessary space before function pointer arguments
#360: FILE: drivers/pci/hotplug/pci_hotplug.h:102:
+	int (*get_address)		(struct hotplug_slot *slot, u32 *value);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#395: FILE: drivers/pci/hotplug/pci_hotplug_core.c:306:
+static ssize_t address_read_file (struct hotplug_slot *slot, char *buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#400: FILE: drivers/pci/hotplug/pci_hotplug_core.c:311:
+	retval = get_address (slot, &address);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#403: FILE: drivers/pci/hotplug/pci_hotplug_core.c:314:
+	retval = sprintf (buf, "%04x:%02x:%02x\n",

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#413: FILE: drivers/pci/hotplug/pci_hotplug_core.c:324:
+	.attr = {.name = "address", .mode = S_IFREG | S_IRUGO},

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#424: FILE: drivers/pci/hotplug/pci_hotplug_core.c:451:
+static int has_address_file (struct hotplug_slot *slot)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!slot'
#426: FILE: drivers/pci/hotplug/pci_hotplug_core.c:453:
+	if ((!slot) || (!slot->ops))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!slot->ops'
#426: FILE: drivers/pci/hotplug/pci_hotplug_core.c:453:
+	if ((!slot) || (!slot->ops))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'slot->info->address != info->address'
#461: FILE: drivers/pci/hotplug/pci_hotplug_core.c:653:
+	if ((has_address_file(slot) == 0) &&
+	    (slot->info->address != info->address))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000307793.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 12 warnings, 7 checks, 300 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000307793.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
