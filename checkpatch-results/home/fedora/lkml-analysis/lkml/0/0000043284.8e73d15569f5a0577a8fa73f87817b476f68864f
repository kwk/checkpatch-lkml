WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
[Net/IPv4]: REVISED Modifications to the UDP module and generic UDP/-Lite processing.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#68: FILE: include/net/udp.h:46:
+#if defined(CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#75: FILE: include/net/udp.h:53:
+};
+#define UDP_SKB_CB(__skb)	((struct udp_skb_cb *)((__skb)->cb))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#82: FILE: include/net/udp.h:60:
+	if (! UDP_SKB_CB(skb)->partial_cov)
 	    ^

WARNING:INLINE: plain inline is preferred over __inline__
#88: FILE: include/net/udp.h:66:
+static __inline__ int udp_checksum_complete(struct sk_buff *skb)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#116: FILE: include/net/udp.h:95:
 }
+static __inline__ int udp_lport_inuse(u16 num)

WARNING:INLINE: plain inline is preferred over __inline__
#116: FILE: include/net/udp.h:95:
+static __inline__ int udp_lport_inuse(u16 num)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#131: FILE: include/net/udp.h:126:
+ * ^ISNMP statistics for UDP and UDP-Lite$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#133: FILE: include/net/udp.h:128:
+#define UDP_INC_STATS_USER(field, is_udplite)			       do {   \
+	if (is_udplite) SNMP_INC_STATS_USER(udplite_statistics, field);       \
+	else		SNMP_INC_STATS_USER(udp_statistics, field);  }  while(0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#134: FILE: include/net/udp.h:129:
+	if (is_udplite) SNMP_INC_STATS_USER(udplite_statistics, field);       \

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open parenthesis '('
#135: FILE: include/net/udp.h:130:
+	else		SNMP_INC_STATS_USER(udp_statistics, field);  }  while(0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#135: FILE: include/net/udp.h:130:
+	else		SNMP_INC_STATS_USER(udp_statistics, field);  }  while(0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#135: FILE: include/net/udp.h:130:
+	else		SNMP_INC_STATS_USER(udp_statistics, field);  }  while(0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#136: FILE: include/net/udp.h:131:
+#define UDP_INC_STATS_BH(field, is_udplite) ^I^I^I       do  {  \$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#136: FILE: include/net/udp.h:131:
+#define UDP_INC_STATS_BH(field, is_udplite) 			       do  {  \
+	if (is_udplite) SNMP_INC_STATS_BH(udplite_statistics, field);         \
+	else		SNMP_INC_STATS_BH(udp_statistics, field);    }  while(0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#137: FILE: include/net/udp.h:132:
+	if (is_udplite) SNMP_INC_STATS_BH(udplite_statistics, field);         \

ERROR:SPACING: space required before the open parenthesis '('
#138: FILE: include/net/udp.h:133:
+	else		SNMP_INC_STATS_BH(udp_statistics, field);    }  while(0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#138: FILE: include/net/udp.h:133:
+	else		SNMP_INC_STATS_BH(udp_statistics, field);    }  while(0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#138: FILE: include/net/udp.h:133:
+	else		SNMP_INC_STATS_BH(udp_statistics, field);    }  while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#139: FILE: include/net/udp.h:134:
+#define UDP_DEC_STATS_BH(field, is_udplite)			       do  {  \
+	if (is_udplite) SNMP_DEC_STATS_BH(udplite_statistics, field);         \
+	else		SNMP_DEC_STATS_BH(udp_statistics, field);    }  while(0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#140: FILE: include/net/udp.h:135:
+	if (is_udplite) SNMP_DEC_STATS_BH(udplite_statistics, field);         \

ERROR:SPACING: space required before the open parenthesis '('
#141: FILE: include/net/udp.h:136:
+	else		SNMP_DEC_STATS_BH(udp_statistics, field);    }  while(0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#141: FILE: include/net/udp.h:136:
+	else		SNMP_DEC_STATS_BH(udp_statistics, field);    }  while(0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#141: FILE: include/net/udp.h:136:
+	else		SNMP_DEC_STATS_BH(udp_statistics, field);    }  while(0)

WARNING:INLINE: plain inline is preferred over __inline__
#188: FILE: net/ipv4/udp.c:124:
+static __inline__ int udp_v4_get_port(struct sock *sk, unsigned short snum)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: net/ipv4/udp.c:130:
+int __udp_get_port(struct sock *sk, unsigned short snum,
+		  struct hlist_head udptable[], int *port_rover)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#210: FILE: net/ipv4/udp.c:144:
+		best = result = *port_rover;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#225: FILE: net/ipv4/udp.c:171:
+			if (! __udp_lport_inuse(result, udptable))
 			    ^

WARNING:INLINE: plain inline is preferred over __inline__
#255: FILE: net/ipv4/udp.c:229:
+static __inline__ struct sock *udp_v4_lookup(u32 saddr, u16 sport,

ERROR:SPACING: space prohibited before that close parenthesis ')'
#262: FILE: net/ipv4/udp.c:236:
+			  struct hlist_head udptable[]                        )

WARNING:INLINE: plain inline is preferred over __inline__
#305: FILE: net/ipv4/udp.c:324:
+__inline__ void udp_err(struct sk_buff *skb, u32 info)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: net/ipv4/udp.c:340:
+^Isk = __udp_lookup(iph->daddr, uh->dest, iph->saddr, uh->source, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#320: FILE: net/ipv4/udp.c:341:
+			  skb->dev->ifindex, udptable			);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#333: FILE: net/ipv4/udp.c:410:
+			      int totlen, u32 src, u32 dst         )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: net/ipv4/udp.c:428:
+^I^I^Iuh->check = ~csum_tcpudp_magic(src, dst, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: net/ipv4/udp.c:431:
+ ^I^I} else {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#380: FILE: net/ipv4/udp.c:431:
+ ^I^I} else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: net/ipv4/udp.c:431:
+ ^I^I} else {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#381: FILE: net/ipv4/udp.c:432:
+^I^I^Icsum = csum_partial(skb->h.raw, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: net/ipv4/udp.c:434:
+ ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#383: FILE: net/ipv4/udp.c:434:
+ ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: net/ipv4/udp.c:434:
+ ^I^I}$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: net/ipv4/udp.c:446:
+^I^I} else $

CHECK:BRACES: Unbalanced braces around else statement
#401: FILE: net/ipv4/udp.c:446:
+		} else 

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#403: FILE: net/ipv4/udp.c:448:
+			skb->csum = csum_partial(skb->h.raw,
+					      sizeof(struct udphdr), skb->csum);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#421: FILE: net/ipv4/udp.c:461:
+/*
+ * Push out all pending data as one UDP datagram. Socket is locked.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#433: FILE: net/ipv4/udp.c:473:
+	if ((skb = skb_peek(&sk->sk_write_queue)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#437: FILE: net/ipv4/udp.c:477:
+	/*
+	 * Create a UDP header

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#445: FILE: net/ipv4/udp.c:485:
+^I * ^IIf sender has set `partial coverage' socket option on a$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#445: FILE: net/ipv4/udp.c:485:
+	/*
+	 * 	If sender has set `partial coverage' socket option on a

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#446: FILE: net/ipv4/udp.c:486:
+^I * ^IUDP-Lite socket, adjust coverage length accordingly.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#447: FILE: net/ipv4/udp.c:487:
+^I * ^IAll other cases default to traditional UDP checksum mode.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#452: FILE: net/ipv4/udp.c:492:
+			 * partial coverage only if  0 < up->pcslen < up->len */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 31)
#453: FILE: net/ipv4/udp.c:493:
+			if (0 < up->pcslen) {
+			       cscov = up->pcslen;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#453: FILE: net/ipv4/udp.c:493:
+			if (0 < up->pcslen) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#453: FILE: net/ipv4/udp.c:493:
+			if (0 < up->pcslen) {
+			       cscov = up->pcslen;
+			}

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#459: FILE: net/ipv4/udp.c:499:
+		/*
+		 * NOTE: Causes for the error case  `up->pcslen > up->len':

ERROR:SPACING: space required before the open parenthesis '('
#470: FILE: net/ipv4/udp.c:510:
+	if(up->pcflag)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#476: FILE: net/ipv4/udp.c:516:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#499: FILE: net/ipv4/udp.c:540:
+	int (*getfrag)(void *, char *, int, int, int, struct sk_buff *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#499: FILE: net/ipv4/udp.c:540:
+	int (*getfrag)(void *, char *, int, int, int, struct sk_buff *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#499: FILE: net/ipv4/udp.c:540:
+	int (*getfrag)(void *, char *, int, int, int, struct sk_buff *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#499: FILE: net/ipv4/udp.c:540:
+	int (*getfrag)(void *, char *, int, int, int, struct sk_buff *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#499: FILE: net/ipv4/udp.c:540:
+	int (*getfrag)(void *, char *, int, int, int, struct sk_buff *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sk_buff *' should also have an identifier name
#499: FILE: net/ipv4/udp.c:540:
+	int (*getfrag)(void *, char *, int, int, int, struct sk_buff *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#518: FILE: net/ipv4/udp.c:692:
+^Ierr = ip_append_data(sk, getfrag, msg->msg_iov, ulen, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: net/ipv4/udp.c:693:
+	err = ip_append_data(sk, getfrag, msg->msg_iov, ulen, 
 			sizeof(struct udphdr), &ipc, rt, 

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#576: FILE: net/ipv4/udp.c:851:
+^I * ^IDecide whether to checksum and/or copy data.$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#576: FILE: net/ipv4/udp.c:851:
+	/*
+	 * 	Decide whether to checksum and/or copy data.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#578: FILE: net/ipv4/udp.c:853:
+^I * ^IUDP:      checksum may have been computed in HW,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#579: FILE: net/ipv4/udp.c:854:
+^I * ^I          (re-)compute it if message is truncated.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#580: FILE: net/ipv4/udp.c:855:
+^I * ^IUDP-Lite: always needs to checksum, no HW support.$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#584: FILE: net/ipv4/udp.c:859:
+	if (is_udplite  ||  (!copy_only  &&  msg->msg_flags&MSG_TRUNC)) {
 	                                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#595: FILE: net/ipv4/udp.c:866:
+^I^Ierr = skb_copy_datagram_iovec(skb, sizeof(struct udphdr), $

ERROR:SPACING: space prohibited before that close parenthesis ')'
#596: FILE: net/ipv4/udp.c:867:
+					      msg->msg_iov, copied       );

CHECK:BRACES: Unbalanced braces around else statement
#597: FILE: net/ipv4/udp.c:868:
+	else {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#648: FILE: net/ipv4/udp.c:1080:
+^I * ^IUDP-Lite specific tests, ignored on UDP sockets$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#648: FILE: net/ipv4/udp.c:1080:
+	/*
+	 * 	UDP-Lite specific tests, ignored on UDP sockets

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#649: FILE: net/ipv4/udp.c:1081:
+^I * ^IXXX: may be better to do them before sk->sk_filter$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#652: FILE: net/ipv4/udp.c:1084:
+	if ((up->pcflag & UDPLITE_RECV_CC)  &&  UDP_SKB_CB(skb)->partial_cov) {
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#654: FILE: net/ipv4/udp.c:1086:
+		/*
+		 * MIB statistics other than incrementing the error count are

WARNING:SPLIT_STRING: quoted string split across lines
#667: FILE: net/ipv4/udp.c:1099:
+			LIMIT_NETDEBUG(KERN_WARNING "UDPLITE: partial coverage "
+				"%d while full coverage %d requested\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#697: FILE: net/ipv4/udp.c:1124:
+	/*
+	 * XXX Incrementing this counter when the datagram is later taken off

WARNING:INLINE: plain inline is preferred over __inline__
#720: FILE: net/ipv4/udp.c:1146:
+static __inline__ int udp_v4_mcast_deliver(struct sk_buff *skb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#721: FILE: net/ipv4/udp.c:1147:
+static __inline__ int udp_v4_mcast_deliver(struct sk_buff *skb,
+					struct udphdr *uh, u32 saddr, u32 daddr)

ERROR:CODE_INDENT: code indent should use tabs where possible
#727: FILE: net/ipv4/udp.c:1153:
+^I^I        u32 saddr, u32 daddr, struct hlist_head udptable[])$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#727: FILE: net/ipv4/udp.c:1153:
+int __udp_mcast_deliver(struct sk_buff *skb, struct udphdr *uh,
+		        u32 saddr, u32 daddr, struct hlist_head udptable[])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#743: FILE: net/ipv4/udp.c:1199:
+		if (!csum_tcpudp_magic(saddr,daddr,ulen, IPPROTO_UDP, skb->csum))
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#743: FILE: net/ipv4/udp.c:1199:
+		if (!csum_tcpudp_magic(saddr,daddr,ulen, IPPROTO_UDP, skb->csum))
 		                                  ^

WARNING:INLINE: plain inline is preferred over __inline__
#761: FILE: net/ipv4/udp.c:1215:
+__inline__ int udp_rcv(struct sk_buff *skb)

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#774: FILE: net/ipv4/udp.c:1229:
+	struct hlist_head *ht = is_udplite? udplite_hash : udp_hash;
 	                                  ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#790: FILE: net/ipv4/udp.c:1241:
+	if (! is_udplite) {
 	    ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#802: FILE: net/ipv4/udp.c:1250:
+^I} else { ^I/* UDP-Lite: we must not trim here */$

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#806: FILE: net/ipv4/udp.c:1254:
+		if (! udplite_checksum_init(skb, uh, len, saddr, daddr))
 		    ^

WARNING:LONG_LINE_STRING: line length of 103 exceeds 100 columns
#833: FILE: net/ipv4/udp.c:1294:
+	LIMIT_NETDEBUG(KERN_DEBUG "UDP%s: short packet: From %u.%u.%u.%u:%u %d/%d to %u.%u.%u.%u:%u\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#834: FILE: net/ipv4/udp.c:1295:
+		       is_udplite? "-Lite" : "",
 		                 ^

WARNING:LONG_LINE_STRING: line length of 105 exceeds 100 columns
#853: FILE: net/ipv4/udp.c:1309:
+	LIMIT_NETDEBUG(KERN_DEBUG "UDP%s: bad checksum. From %d.%d.%d.%d:%d to %d.%d.%d.%d:%d ulen %d\n",

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#854: FILE: net/ipv4/udp.c:1310:
+		       is_udplite? "-Lite" : "",
 		                 ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#871: FILE: net/ipv4/udp.c:1372:
+^I * ^IUDP-Lite's partial checksum coverage (RFC 3828).$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#871: FILE: net/ipv4/udp.c:1372:
+	/*
+	 * 	UDP-Lite's partial checksum coverage (RFC 3828).

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#874: FILE: net/ipv4/udp.c:1375:
+	 * The case coverage > packet length is handled by send module. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#884: FILE: net/ipv4/udp.c:1385:
+        /* The receiver specifies a minimum checksum coverage value. To make$

ERROR:CODE_INDENT: code indent should use tabs where possible
#885: FILE: net/ipv4/udp.c:1386:
+         * sense, this should be set to at least 8 (as done below). If zero is$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#886: FILE: net/ipv4/udp.c:1387:
+	 * used, this again means full checksum coverage.                     */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#969: FILE: net/ipv4/udp.c:1500:
+^Iint ^Iis_lite = IS_UDPLITE(sk);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#980: FILE: net/ipv4/udp.c:1514:
+				 * Update count of really received datagrams. */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#990: FILE: net/ipv4/udp.c:1559:
+struct proto ^Iudplite_prot = {$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000043284.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 38 errors, 53 warnings, 16 checks, 964 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000043284.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
