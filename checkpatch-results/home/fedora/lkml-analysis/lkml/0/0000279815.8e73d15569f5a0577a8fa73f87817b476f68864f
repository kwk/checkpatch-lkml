ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#57: 
--- a/arch/i386/config.in	Mon May 24 13:52:10 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#94: FILE: arch/i386/kernel/mmconfig.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LINE_SPACING: Missing a blank line after declarations
#117: FILE: arch/i386/kernel/mmconfig.c:24:
+	u32 dev_base = pci_mmcfg_base_addr | (bus << 20) | (devfn << 12);
+	if (dev_base != mmcfg_last_accessed_device) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus > 255'
#127: FILE: arch/i386/kernel/mmconfig.c:34:
+	if (!value || (bus > 255) || (devfn > 255) || (reg > 4095))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'devfn > 255'
#127: FILE: arch/i386/kernel/mmconfig.c:34:
+	if (!value || (bus > 255) || (devfn > 255) || (reg > 4095))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg > 4095'
#127: FILE: arch/i386/kernel/mmconfig.c:34:
+	if (!value || (bus > 255) || (devfn > 255) || (reg > 4095))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: arch/i386/kernel/mmconfig.c:62:
+^Iif ((bus > 255) || (devfn > 255) || (reg > 4095)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus > 255'
#155: FILE: arch/i386/kernel/mmconfig.c:62:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095)) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'devfn > 255'
#155: FILE: arch/i386/kernel/mmconfig.c:62:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095)) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg > 4095'
#155: FILE: arch/i386/kernel/mmconfig.c:62:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095)) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: arch/i386/kernel/mmconfig.c:91:
+^Iint result; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: arch/i386/kernel/mmconfig.c:94:
+^Iresult = pci_mmcfg_read(0, dev->bus->number, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: arch/i386/kernel/mmconfig.c:104:
+^Iint result; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: arch/i386/kernel/mmconfig.c:107:
+^Iresult = pci_mmcfg_read(0, dev->bus->number, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: arch/i386/kernel/mmconfig.c:108:
+ ^I^I^I^Iwhere, 2, &data);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#201: FILE: arch/i386/kernel/mmconfig.c:108:
+ ^I^I^I^Iwhere, 2, &data);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: arch/i386/kernel/mmconfig.c:108:
+	result = pci_mmcfg_read(0, dev->bus->number, dev->devfn, 
+ 				where, 2, &data);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: arch/i386/kernel/mmconfig.c:108:
+ ^I^I^I^Iwhere, 2, &data);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: arch/i386/kernel/mmconfig.c:117:
+^Ireturn pci_mmcfg_read(0, dev->bus->number, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: arch/i386/kernel/mmconfig.c:123:
+^Ireturn pci_mmcfg_write(0, dev->bus->number, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: arch/i386/kernel/mmconfig.c:129:
+^Ireturn pci_mmcfg_write(0, dev->bus->number, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: arch/i386/kernel/mmconfig.c:135:
+^Ireturn pci_mmcfg_write(0, dev->bus->number, dev->devfn, $

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#241: FILE: arch/i386/kernel/mmconfig.c:148:
+struct pci_ops * __devinit pci_mmcfg_init(void)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#243: FILE: arch/i386/kernel/mmconfig.c:150:
+	if ((pci_probe & PCI_PROBE_MMCONF) == 0)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#247: FILE: arch/i386/kernel/mmconfig.c:154:
+	if (!pci_mmcfg_base_addr)
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#252: FILE: arch/i386/kernel/mmconfig.c:159:
+	printk(KERN_INFO "PCI: Using MMCONFIG\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: arch/i386/kernel/mmconfig.c:168:
+int pci_mcfg_read(int seg, int bus, int dev, int fn, int reg, int len, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: arch/i386/kernel/mmconfig.c:169:
+int pci_mcfg_read(int seg, int bus, int dev, int fn, int reg, int len, 
+				u32 *value)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: arch/i386/kernel/mmconfig.c:174:
+int pci_mcfg_write(int seg, int bus, int dev, int fn, int reg, int len, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: arch/i386/kernel/mmconfig.c:175:
+int pci_mcfg_write(int seg, int bus, int dev, int fn, int reg, int len, 
+				u32 *value)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: arch/i386/kernel/pci-i386.h:77:
+int pci_mcfg_read(int seg, int bus, int dev, int fn, int reg, int len, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: arch/i386/kernel/pci-i386.h:78:
+int pci_mcfg_read(int seg, int bus, int dev, int fn, int reg, int len, 
+				u32 *value);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#300: FILE: arch/i386/kernel/pci-i386.h:79:
+int pci_mcfg_write(int seg, int bus, int dev, int fn, int reg, int len, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: arch/i386/kernel/pci-i386.h:80:
+int pci_mcfg_write(int seg, int bus, int dev, int fn, int reg, int len, 
+				u32 *value);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#302: FILE: arch/i386/kernel/pci-i386.h:81:
+struct pci_ops * __devinit pci_mmcfg_init(void);

ERROR:SPACING: space required before the open brace '{'
#331: FILE: arch/i386/kernel/pci-pc.c:1452:
+	if (pci_root_ops){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: arch/i386/kernel/pci-pc.c:1462:
+^Iif ((pci_probe & (PCI_PROBE_CONF1 | PCI_PROBE_CONF2)) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#341: FILE: arch/i386/kernel/pci-pc.c:1462:
+	if ((pci_probe & (PCI_PROBE_CONF1 | PCI_PROBE_CONF2)) 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#342: FILE: arch/i386/kernel/pci-pc.c:1463:
+	if ((pci_probe & (PCI_PROBE_CONF1 | PCI_PROBE_CONF2)) 
+		&& (tmp = pci_check_direct())) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#348: FILE: arch/i386/kernel/pci-pc.c:1469:
+		}
+		else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#348: FILE: arch/i386/kernel/pci-pc.c:1469:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#411: FILE: arch/x86_64/kernel/mmconfig.c:1:
+/*

WARNING:LINE_SPACING: Missing a blank line after declarations
#434: FILE: arch/x86_64/kernel/mmconfig.c:24:
+	u32 dev_base = pci_mmcfg_base_addr | (bus << 20) | (devfn << 12);
+	if (dev_base != mmcfg_last_accessed_device) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: arch/x86_64/kernel/mmconfig.c:30:
+static int pci_mmcfg_read(int seg, int bus, int devfn, int reg, int len, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: arch/x86_64/kernel/mmconfig.c:31:
+static int pci_mmcfg_read(int seg, int bus, int devfn, int reg, int len, 
+				u32 *value)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus > 255'
#443: FILE: arch/x86_64/kernel/mmconfig.c:33:
+	if (!value || (bus > 255) || (devfn > 255) || (reg > 4095))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'devfn > 255'
#443: FILE: arch/x86_64/kernel/mmconfig.c:33:
+	if (!value || (bus > 255) || (devfn > 255) || (reg > 4095))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg > 4095'
#443: FILE: arch/x86_64/kernel/mmconfig.c:33:
+	if (!value || (bus > 255) || (devfn > 255) || (reg > 4095))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#463: FILE: arch/x86_64/kernel/mmconfig.c:53:
+static int pci_mmcfg_write(int seg, int bus, int devfn, int reg, int len, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#464: FILE: arch/x86_64/kernel/mmconfig.c:54:
+static int pci_mmcfg_write(int seg, int bus, int devfn, int reg, int len, 
+				u32 value)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#466: FILE: arch/x86_64/kernel/mmconfig.c:56:
+^Iif ((bus > 255) || (devfn > 255) || (reg > 4095)) $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus > 255'
#466: FILE: arch/x86_64/kernel/mmconfig.c:56:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095)) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'devfn > 255'
#466: FILE: arch/x86_64/kernel/mmconfig.c:56:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095)) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg > 4095'
#466: FILE: arch/x86_64/kernel/mmconfig.c:56:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095)) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: arch/x86_64/kernel/mmconfig.c:79:
+static int pci_mmcfg_read_config_byte(struct pci_dev *dev, int where, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#490: FILE: arch/x86_64/kernel/mmconfig.c:80:
+static int pci_mmcfg_read_config_byte(struct pci_dev *dev, int where, 
+					u8 *value)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#492: FILE: arch/x86_64/kernel/mmconfig.c:82:
+^Iint result; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#495: FILE: arch/x86_64/kernel/mmconfig.c:85:
+^Iresult = pci_mmcfg_read(0, dev->bus->number, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#503: FILE: arch/x86_64/kernel/mmconfig.c:93:
+static int pci_mmcfg_read_config_word(struct pci_dev *dev, int where, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#504: FILE: arch/x86_64/kernel/mmconfig.c:94:
+static int pci_mmcfg_read_config_word(struct pci_dev *dev, int where, 
+					u16 *value)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#506: FILE: arch/x86_64/kernel/mmconfig.c:96:
+^Iint result; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#509: FILE: arch/x86_64/kernel/mmconfig.c:99:
+^Iresult = pci_mmcfg_read(0, dev->bus->number, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#510: FILE: arch/x86_64/kernel/mmconfig.c:100:
+ ^I^I^I^Iwhere, 2, &data);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#510: FILE: arch/x86_64/kernel/mmconfig.c:100:
+ ^I^I^I^Iwhere, 2, &data);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#510: FILE: arch/x86_64/kernel/mmconfig.c:100:
+	result = pci_mmcfg_read(0, dev->bus->number, dev->devfn, 
+ 				where, 2, &data);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: arch/x86_64/kernel/mmconfig.c:100:
+ ^I^I^I^Iwhere, 2, &data);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#517: FILE: arch/x86_64/kernel/mmconfig.c:107:
+static int pci_mmcfg_read_config_dword(struct pci_dev *dev, int where, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: arch/x86_64/kernel/mmconfig.c:108:
+static int pci_mmcfg_read_config_dword(struct pci_dev *dev, int where, 
+					u32 *value)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#520: FILE: arch/x86_64/kernel/mmconfig.c:110:
+^Ireturn pci_mmcfg_read(0, dev->bus->number, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#524: FILE: arch/x86_64/kernel/mmconfig.c:114:
+static int pci_mmcfg_write_config_byte(struct pci_dev *dev, int where, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#525: FILE: arch/x86_64/kernel/mmconfig.c:115:
+static int pci_mmcfg_write_config_byte(struct pci_dev *dev, int where, 
+					u8 value)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: arch/x86_64/kernel/mmconfig.c:117:
+^Ireturn pci_mmcfg_write(0, dev->bus->number, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#531: FILE: arch/x86_64/kernel/mmconfig.c:121:
+static int pci_mmcfg_write_config_word(struct pci_dev *dev, int where, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: arch/x86_64/kernel/mmconfig.c:122:
+static int pci_mmcfg_write_config_word(struct pci_dev *dev, int where, 
+					u16 value)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#534: FILE: arch/x86_64/kernel/mmconfig.c:124:
+^Ireturn pci_mmcfg_write(0, dev->bus->number, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#538: FILE: arch/x86_64/kernel/mmconfig.c:128:
+static int pci_mmcfg_write_config_dword(struct pci_dev *dev, int where, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#541: FILE: arch/x86_64/kernel/mmconfig.c:131:
+^Ireturn pci_mmcfg_write(0, dev->bus->number, dev->devfn, $

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#554: FILE: arch/x86_64/kernel/mmconfig.c:144:
+struct pci_ops * __devinit pci_mmcfg_init(void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#561: FILE: arch/x86_64/kernel/mmconfig.c:151:
+	printk(KERN_INFO "PCI: Using MMCONFIG\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#570: FILE: arch/x86_64/kernel/mmconfig.c:160:
+int pci_mcfg_read(int seg, int bus, int dev, int fn, int reg, int len, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#571: FILE: arch/x86_64/kernel/mmconfig.c:161:
+int pci_mcfg_read(int seg, int bus, int dev, int fn, int reg, int len, 
+				u32 *value)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#576: FILE: arch/x86_64/kernel/mmconfig.c:166:
+int pci_mcfg_write(int seg, int bus, int dev, int fn, int reg, int len, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#577: FILE: arch/x86_64/kernel/mmconfig.c:167:
+int pci_mcfg_write(int seg, int bus, int dev, int fn, int reg, int len, 
+				u32 *value)

CHECK:BRACES: Unbalanced braces around else statement
#604: FILE: arch/x86_64/kernel/pci-pc.c:576:
+	else {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#614: FILE: arch/x86_64/kernel/pci-pc.c:586:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#614: FILE: arch/x86_64/kernel/pci-pc.c:586:
+		else {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#637: FILE: arch/x86_64/kernel/pci-pc.c:616:
+	if (!dir) {
+		dir = pci_check_direct();
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#676: FILE: arch/x86_64/kernel/pci-x86_64.h:81:
+int pci_mcfg_read(int seg, int bus, int dev, int fn, int reg, int len, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#677: FILE: arch/x86_64/kernel/pci-x86_64.h:82:
+int pci_mcfg_read(int seg, int bus, int dev, int fn, int reg, int len, 
+				u32 *value);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#678: FILE: arch/x86_64/kernel/pci-x86_64.h:83:
+int pci_mcfg_write(int seg, int bus, int dev, int fn, int reg, int len, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#679: FILE: arch/x86_64/kernel/pci-x86_64.h:84:
+int pci_mcfg_write(int seg, int bus, int dev, int fn, int reg, int len, 
+				u32 *value);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#680: FILE: arch/x86_64/kernel/pci-x86_64.h:85:
+struct pci_ops * __devinit pci_mmcfg_init(void);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#738: FILE: drivers/pci/pci.c:219:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000279815.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 45 errors, 15 warnings, 33 checks, 724 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000279815.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
