CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: include/linux/rcupdate.h:231:
+extern void init_rcu_boost_late(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#104: FILE: include/linux/rcupdate.h:232:
+extern void __rcu_preempt_boost(void);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#294: FILE: kernel/rcupreempt.c:111:
+};
+#define RCU_BOOST_ELEMENTS 4

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#298: FILE: kernel/rcupreempt.c:115:
+static struct task_struct *rcu_boost_task = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#354: FILE: kernel/rcupreempt.c:171:
+	static time_t lastprint = 0;

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '+=' should be on the previous line
#390: FILE: kernel/rcupreempt.c:207:
+					sum.rbs_stats[event][state]
+					    += per_cpu(rcu_boost_dat,

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#398: FILE: kernel/rcupreempt.c:215:
+	printk(KERN_ALERT

WARNING:SPLIT_STRING: quoted string split across lines
#400: FILE: kernel/rcupreempt.c:217:
+	       "rcu_boost_dat: idx=%d "
+	       "b=%ld ul=%ld ub=%ld boost: a=%ld b=%ld\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#411: FILE: kernel/rcupreempt.c:228:
+		printk(KERN_ALERT "rcu_boost_dat %s %s\n",

WARNING:MEMORY_BARRIER: memory barrier without comment
#461: FILE: kernel/rcupreempt.c:278:
+		smp_wmb();

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: kernel/rcupreempt.c:321:
+^I^I^I             /*  Administrators can always adjust */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#572: FILE: kernel/rcupreempt.c:389:
+	while (!list_empty(&list)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#629: FILE: kernel/rcupreempt.c:446:
+	do {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#634: FILE: kernel/rcupreempt.c:451:
+		for_each_possible_cpu(cpu) {
+

WARNING:TYPO_SPELLING: 'unstalled' may be misspelled - perhaps 'installed'?
#654: FILE: kernel/rcupreempt.c:471:
+		 * Sleep to allow any unstalled RCU read-side critical
 		                      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#680: FILE: kernel/rcupreempt.c:497:
+	printk(KERN_ALERT "Starting RCU priority booster\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#684: FILE: kernel/rcupreempt.c:501:
+		printk(KERN_ALERT

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rbdp"
#712: FILE: kernel/rcupreempt.c:529:
+	if (rbdp == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#714: FILE: kernel/rcupreempt.c:531:
+		printk("Preempted RCU read-side critical section too early.\n");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#727: FILE: kernel/rcupreempt.c:544:
+	if (current->rcub_state != RCU_BOOST_IDLE) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#788: FILE: kernel/rcupreempt.c:605:
+{
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000001398.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 8 warnings, 10 checks, 767 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000001398.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
