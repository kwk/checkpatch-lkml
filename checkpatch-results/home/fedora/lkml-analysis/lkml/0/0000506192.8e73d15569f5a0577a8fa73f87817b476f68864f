WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
DMCA, SSSCA, W3C?  Who cares?  http://thefreeworld.net/  (volunteers needed)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#74: FILE: mm/swap_state.c:156:
+	struct page * page;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#82: FILE: mm/swap_state.c:164:
+		if (exclusive_swap_page(page)) {
+			delete_from_swap_cache(page);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <UnlockPage>
#85: FILE: mm/swap_state.c:167:
+		UnlockPage(page);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#124: FILE: mm/filemap.c:765:
+struct page * find_trylock_page (struct address_space *mapping,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#124: FILE: mm/filemap.c:765:
+struct page * find_trylock_page (struct address_space *mapping,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: mm/filemap.c:766:
+struct page * find_trylock_page (struct address_space *mapping,
+		unsigned long offset)

CHECK:CAMELCASE: Avoid CamelCase: <TryLockPage>
#132: FILE: mm/filemap.c:773:
+		if (TryLockPage(page)) {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#154: FILE: include/linux/swap.h:144:
+extern void free_swap_and_swap_cache(swp_entry_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'swp_entry_t' should also have an identifier name
#154: FILE: include/linux/swap.h:144:
+extern void free_swap_and_swap_cache(swp_entry_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#164: FILE: include/linux/pagemap.h:80:
+extern struct page * find_trylock_page (struct address_space *, unsigned long);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: include/linux/pagemap.h:80:
+extern struct page * find_trylock_page (struct address_space *, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#164: FILE: include/linux/pagemap.h:80:
+extern struct page * find_trylock_page (struct address_space *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#164: FILE: include/linux/pagemap.h:80:
+extern struct page * find_trylock_page (struct address_space *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#164: FILE: include/linux/pagemap.h:80:
+extern struct page * find_trylock_page (struct address_space *, unsigned long);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000506192.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 7 warnings, 5 checks, 101 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000506192.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
