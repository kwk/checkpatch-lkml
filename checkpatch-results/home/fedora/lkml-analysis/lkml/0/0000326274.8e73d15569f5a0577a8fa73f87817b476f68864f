WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
> Here it is, and it is soooo much nicer than my previous implementation. It

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#65: 
--- a/Documentation/kernel-parameters.txt	Tue Nov  4 13:30:42 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#117: FILE: arch/i386/kernel/acpi/boot.c:326:
size)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#120: FILE: arch/i386/kernel/acpi/boot.c:328:
+	struct fadt_descriptor_rev2 *fadt =0;
 	                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#123: FILE: arch/i386/kernel/acpi/boot.c:330:
+	fadt = (struct fadt_descriptor_rev2*) __acpi_map_table(phys,size);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#123: FILE: arch/i386/kernel/acpi/boot.c:330:
+	fadt = (struct fadt_descriptor_rev2*) __acpi_map_table(phys,size);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#123: FILE: arch/i386/kernel/acpi/boot.c:330:
+	fadt = (struct fadt_descriptor_rev2*) __acpi_map_table(phys,size);
 	                                                           ^

ERROR:SPACING: space required before the open parenthesis '('
#124: FILE: arch/i386/kernel/acpi/boot.c:331:
+	if(!fadt) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#125: FILE: arch/i386/kernel/acpi/boot.c:332:
+		printk(KERN_WARNING PREFIX "Unable to map FADT\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: arch/i386/kernel/timers/timer_pm.c:75:
+^I * Even with HZ = 100, delta is at maximum 35796 ticks, so it can $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#172: FILE: arch/i386/kernel/timers/timer_pm.c:90:
+	static int first_run = 1;
+	last_offset = offset_tick;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#187: FILE: arch/i386/kernel/timers/timer_pm.c:104:
+	lost = delta/(USEC_PER_SEC/HZ);
 	            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#187: FILE: arch/i386/kernel/timers/timer_pm.c:104:
+	lost = delta/(USEC_PER_SEC/HZ);
 	                          ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#188: FILE: arch/i386/kernel/timers/timer_pm.c:105:
+	offset_delay = delta%(USEC_PER_SEC/HZ);
 	                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#188: FILE: arch/i386/kernel/timers/timer_pm.c:105:
+	offset_delay = delta%(USEC_PER_SEC/HZ);
 	                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: arch/i386/kernel/timers/timer_pm.c:108:
+^Imonotonic_base += delta; $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#194: FILE: arch/i386/kernel/timers/timer_pm.c:111:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: arch/i386/kernel/timers/timer_pm.c:116:
+^I/* don't calculate delay for first run, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#200: FILE: arch/i386/kernel/timers/timer_pm.c:117:
+	/* don't calculate delay for first run, 
+	   or if we've got less then a tick */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#200: FILE: arch/i386/kernel/timers/timer_pm.c:117:
+	   or if we've got less then a tick */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lost < 1'
#201: FILE: arch/i386/kernel/timers/timer_pm.c:118:
+	if (first_run || (lost < 1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#216: FILE: arch/i386/kernel/timers/timer_pm.c:131:
+	unsigned seq;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#226: FILE: arch/i386/kernel/timers/timer_pm.c:141:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: arch/i386/kernel/timers/timer_pm.c:145:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#231: FILE: arch/i386/kernel/timers/timer_pm.c:146:
+	
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#234: FILE: arch/i386/kernel/timers/timer_pm.c:149:
+	ret = cyc2us(ret)*1000;
 	                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#250: FILE: arch/i386/kernel/timers/timer_pm.c:180:
+	delta = (now - offset)&ACPI_PM_MASK;
 	                      ^

CHECK:SPACING: No space is necessary after a cast
#261: FILE: arch/i386/kernel/timers/timer_pm.c:182:
+	return (unsigned long) offset_delay + cyc2us(delta);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: drivers/acpi/Kconfig:283:
+^I  voltage scaling, unlike the commonly used Time Stamp Counter $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: drivers/acpi/Kconfig:286:
+^I  So, if you see messages like 'Losing too many ticks!' in the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: drivers/acpi/Kconfig:288:
+^I  does not yet have an HPET (see above), you should say "Y" $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000326274.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 6 warnings, 12 checks, 206 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000326274.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
