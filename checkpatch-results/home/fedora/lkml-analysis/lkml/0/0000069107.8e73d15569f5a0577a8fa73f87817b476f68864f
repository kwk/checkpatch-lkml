ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#84: FILE: tc/m_police.c:37:
ES[/BYTES] ]\n");

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#86: FILE: tc/m_police.c:38:
+	fprintf(stderr, "                [ peakrate BPS ] [ avrate BPS ] [ overhe=

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#86: FILE: tc/m_police.c:38:
+	fprintf(stderr, "                [ peakrate BPS ] [ avrate BPS ] [ overhe=

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#86: FILE: tc/m_police.c:38:
+	fprintf(stderr, "                [ peakrate BPS ] [ avrate BPS ] [ overhe=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#86: FILE: tc/m_police.c:38:
+	fprintf(stderr, "                [ peakrate BPS ] [ avrate BPS ] [ overhe=
 	                                                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open square bracket '['
#86: FILE: tc/m_police.c:38:
+	fprintf(stderr, "                [ peakrate BPS ] [ avrate BPS ] [ overhe=

ERROR:SPACING: space prohibited before that close square bracket ']'
#86: FILE: tc/m_police.c:38:
+	fprintf(stderr, "                [ peakrate BPS ] [ avrate BPS ] [ overhe=

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#98: FILE: tc/m_police.c:137:
+	unsigned buffer=3D0, mtu=3D0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#98: FILE: tc/m_police.c:137:
+	unsigned buffer=3D0, mtu=3D0;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#98: FILE: tc/m_police.c:137:
+	unsigned buffer=3D0, mtu=3D0;
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#99: FILE: tc/m_police.c:138:
+	__u8 mpu=3D0;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#100: FILE: tc/m_police.c:139:
+	__s8 overhead=3D0;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#101: FILE: tc/m_police.c:140:
+	int atm=3D0;
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#118: FILE: tc/m_police.c:204:
+		} else if (strcmp(*argv, "overhead") =3D=3D 0) {
 		                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#118: FILE: tc/m_police.c:204:
+		} else if (strcmp(*argv, "overhead") =3D=3D 0) {
 		                                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#118: FILE: tc/m_police.c:204:
+		} else if (strcmp(*argv, "overhead") =3D=3D 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#128: FILE: tc/m_police.c:214:
+		} else if (strcmp(*argv, "atm") =3D=3D 0) {
 		                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#128: FILE: tc/m_police.c:214:
+		} else if (strcmp(*argv, "atm") =3D=3D 0) {
 		                                   ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#128: FILE: tc/m_police.c:214:
+		} else if (strcmp(*argv, "atm") =3D=3D 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: tc/m_police.c:215:
+^I^I  ^Iatm =3D 1;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#129: FILE: tc/m_police.c:215:
+^I^I  ^Iatm =3D 1;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#129: FILE: tc/m_police.c:215:
+		  	atm =3D 1;
 		  	    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: tc/m_police.c:281:
+^I  ^Itc_calc_ratespec(&p.rate, rtab, p.rate.rate, Rcell_log, mtu, mpu, atm,=$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#142: FILE: tc/m_police.c:281:
+^I  ^Itc_calc_ratespec(&p.rate, rtab, p.rate.rate, Rcell_log, mtu, mpu, atm,=$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#142: FILE: tc/m_police.c:281:
+	  	tc_calc_ratespec(&p.rate, rtab, p.rate.rate, Rcell_log, mtu, mpu, atm,=
 	  	                                                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:OxE)
#142: FILE: tc/m_police.c:281:
+	  	tc_calc_ratespec(&p.rate, rtab, p.rate.rate, Rcell_log, mtu, mpu, atm,=
 	  	                                                                      ^

CHECK:CAMELCASE: Avoid CamelCase: <Rcell_log>
#142: FILE: tc/m_police.c:281:
+	  	tc_calc_ratespec(&p.rate, rtab, p.rate.rate, Rcell_log, mtu, mpu, atm,=

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: tc/m_police.c:288:
+^I  ^Itc_calc_ratespec(&p.peakrate, ptab, p.peakrate.rate, Pcell_log, mtu, m=$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#157: FILE: tc/m_police.c:288:
+^I  ^Itc_calc_ratespec(&p.peakrate, ptab, p.peakrate.rate, Pcell_log, mtu, m=$

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#157: FILE: tc/m_police.c:288:
+	  	tc_calc_ratespec(&p.peakrate, ptab, p.peakrate.rate, Pcell_log, mtu, m=
 	  	                                                                      ^

CHECK:CAMELCASE: Avoid CamelCase: <Pcell_log>
#157: FILE: tc/m_police.c:288:
+	  	tc_calc_ratespec(&p.peakrate, ptab, p.peakrate.rate, Pcell_log, mtu, m=

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#171: FILE: tc/q_cbq.c:36:
+	fprintf(stderr, "               [ overhead BYTES ] [ atm ]\n");

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#171: FILE: tc/q_cbq.c:36:
+	fprintf(stderr, "               [ overhead BYTES ] [ atm ]\n");

ERROR:SPACING: space prohibited after that open square bracket '['
#171: FILE: tc/q_cbq.c:36:
+	fprintf(stderr, "               [ overhead BYTES ] [ atm ]\n");

ERROR:SPACING: space prohibited before that close square bracket ']'
#171: FILE: tc/q_cbq.c:36:
+	fprintf(stderr, "               [ overhead BYTES ] [ atm ]\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#180: FILE: tc/q_cbq.c:56:
+	unsigned avpkt=3D0, allot=3D0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#180: FILE: tc/q_cbq.c:56:
+	unsigned avpkt=3D0, allot=3D0;
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#180: FILE: tc/q_cbq.c:56:
+	unsigned avpkt=3D0, allot=3D0;
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#181: FILE: tc/q_cbq.c:57:
+	__u8 mpu=3D0;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#182: FILE: tc/q_cbq.c:58:
+	__s8 overhead=3D0;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#183: FILE: tc/q_cbq.c:59:
+	int atm=3D0;
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#200: FILE: tc/q_cbq.c:120:
+		} else if (strcmp(*argv, "overhead") =3D=3D 0) {
 		                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#200: FILE: tc/q_cbq.c:120:
+		} else if (strcmp(*argv, "overhead") =3D=3D 0) {
 		                                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#200: FILE: tc/q_cbq.c:120:
+		} else if (strcmp(*argv, "overhead") =3D=3D 0) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#206: FILE: tc/q_cbq.c:126:
+		} else if (strcmp(*argv, "atm") =3D=3D 0) {
 		                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#206: FILE: tc/q_cbq.c:126:
+		} else if (strcmp(*argv, "atm") =3D=3D 0) {
 		                                   ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#206: FILE: tc/q_cbq.c:126:
+		} else if (strcmp(*argv, "atm") =3D=3D 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: tc/q_cbq.c:127:
+^I^I  ^Iatm =3D 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#207: FILE: tc/q_cbq.c:127:
+^I^I  ^Iatm =3D 1;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#207: FILE: tc/q_cbq.c:127:
+		  	atm =3D 1;
 		  	    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#231: FILE: tc/q_cbq.c:185:
+	__u8 mpu=3D0;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#232: FILE: tc/q_cbq.c:186:
+	__s8 overhead =3D 0;
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#233: FILE: tc/q_cbq.c:187:
+	int atm =3D 0;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#246: FILE: tc/q_cbq.c:305:
+		} else if (strcmp(*argv, "overhead") =3D=3D 0) {
 		                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#246: FILE: tc/q_cbq.c:305:
+		} else if (strcmp(*argv, "overhead") =3D=3D 0) {
 		                                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#246: FILE: tc/q_cbq.c:305:
+		} else if (strcmp(*argv, "overhead") =3D=3D 0) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#252: FILE: tc/q_cbq.c:311:
+		} else if (strcmp(*argv, "atm") =3D=3D 0) {
 		                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#252: FILE: tc/q_cbq.c:311:
+		} else if (strcmp(*argv, "atm") =3D=3D 0) {
 		                                   ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#252: FILE: tc/q_cbq.c:311:
+		} else if (strcmp(*argv, "atm") =3D=3D 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: tc/q_cbq.c:312:
+^I^I  ^Iatm =3D 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#253: FILE: tc/q_cbq.c:312:
+^I^I  ^Iatm =3D 1;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#253: FILE: tc/q_cbq.c:312:
+		  	atm =3D 1;
 		  	    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#268: FILE: tc/q_cbq.c:356:
+		tc_calc_ratespec(&r, rtab, r.rate, cell_log, pktsize, mpu, atm, overhead=
 		                                                                        ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#297: FILE: tc/q_htb.c:37:
+		"... class add ... htb rate R1 [burst B1] [mpu B] [overhead O] [atm]\n"

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#297: FILE: tc/q_htb.c:37:
+		"... class add ... htb rate R1 [burst B1] [mpu B] [overhead O] [atm]\n"

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#297: FILE: tc/q_htb.c:37:
+		"... class add ... htb rate R1 [burst B1] [mpu B] [overhead O] [atm]\n"

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#297: FILE: tc/q_htb.c:37:
+		"... class add ... htb rate R1 [burst B1] [mpu B] [overhead O] [atm]\n"

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#316: FILE: tc/q_htb.c:110:
+	unsigned mtu;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#317: FILE: tc/q_htb.c:111:
+	__u8 mpu8=3D0;
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#318: FILE: tc/q_htb.c:112:
+	__s8 overhead=3D0;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#319: FILE: tc/q_htb.c:113:
+	int atm=3D0;
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#331: FILE: tc/q_htb.c:140:
+		} else if (matches(*argv, "atm") =3D=3D 0) {
 		                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#331: FILE: tc/q_htb.c:140:
+		} else if (matches(*argv, "atm") =3D=3D 0) {
 		                                    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#331: FILE: tc/q_htb.c:140:
+		} else if (matches(*argv, "atm") =3D=3D 0) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#332: FILE: tc/q_htb.c:141:
+			atm =3D 1;
 			    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#350: FILE: tc/q_htb.c:213:
+	tc_calc_ratespec(&opt.rate, rtab, opt.rate.rate, cell_log, mtu, mpu8, atm=
 	                                                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#352: FILE: tc/q_htb.c:214:
+	tc_calc_ratespec(&opt.ceil, ctab, opt.ceil.rate, cell_log, mtu, mpu8, atm=
 	                                                                         ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#372: FILE: tc/q_htb.c:262:
+			sprint_size((__s8)(hopt->rate.mpu>>8), b3));
 			                                 ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#380: FILE: tc/q_htb.c:269:
+			sprint_size((__s8)(hopt->ceil.mpu>>8), b3));
 			                                 ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#405: FILE: tc/q_tbf.c:46:
+	unsigned buffer=3D0, mtu=3D0, latency=3D0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#405: FILE: tc/q_tbf.c:46:
+	unsigned buffer=3D0, mtu=3D0, latency=3D0;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#405: FILE: tc/q_tbf.c:46:
+	unsigned buffer=3D0, mtu=3D0, latency=3D0;
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#405: FILE: tc/q_tbf.c:46:
+	unsigned buffer=3D0, mtu=3D0, latency=3D0;
 	                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#406: FILE: tc/q_tbf.c:47:
+	__u8 mpu=3D0;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#407: FILE: tc/q_tbf.c:48:
+	__s8 overhead=3D0;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#408: FILE: tc/q_tbf.c:49:
+	int atm=3D0;
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#425: FILE: tc/q_tbf.c:125:
+		} else if (strcmp(*argv, "overhead") =3D=3D 0) {
 		                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#425: FILE: tc/q_tbf.c:125:
+		} else if (strcmp(*argv, "overhead") =3D=3D 0) {
 		                                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#425: FILE: tc/q_tbf.c:125:
+		} else if (strcmp(*argv, "overhead") =3D=3D 0) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#436: FILE: tc/q_tbf.c:136:
+		} else if (strcmp(*argv, "atm") =3D=3D 0) {
 		                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#436: FILE: tc/q_tbf.c:136:
+		} else if (strcmp(*argv, "atm") =3D=3D 0) {
 		                                   ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#436: FILE: tc/q_tbf.c:136:
+		} else if (strcmp(*argv, "atm") =3D=3D 0) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#437: FILE: tc/q_tbf.c:137:
+			atm =3D 1;
 			    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#451: FILE: tc/q_tbf.c:189:
+	tc_calc_ratespec(&opt.rate, rtab, opt.rate.rate, Rcell_log, mtu, mpu, atm=
 	                                                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: tc/q_tbf.c:192:
+^I  ^Itc_calc_ratespec(&opt.peakrate, ptab, opt.peakrate.rate, Pcell_log, mt=$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#462: FILE: tc/q_tbf.c:192:
+^I  ^Itc_calc_ratespec(&opt.peakrate, ptab, opt.peakrate.rate, Pcell_log, mt=$

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#462: FILE: tc/q_tbf.c:192:
+	  	tc_calc_ratespec(&opt.peakrate, ptab, opt.peakrate.rate, Pcell_log, mt=
 	  	                                                                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#478: FILE: tc/q_tbf.c:231:
+			1<<qopt->rate.cell_log,
 			 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#494: FILE: tc/q_tbf.c:247:
+					1<<qopt->peakrate.cell_log,
 					 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#524: FILE: tc/tc_core.c:52:
+static int tc_align_to_cells(int size)=20
                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#528: FILE: tc/tc_core.c:56:
+	cells =3D size / ATM_CELL_PAYLOAD;
 	      ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#529: FILE: tc/tc_core.c:57:
+	if (size % ATM_CELL_PAYLOAD !=3D 0)
 	                            ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#536: FILE: tc/tc_core.c:61:
+}
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'senarios' may be misspelled - perhaps 'scenarios'?
#545: FILE: tc/tc_core.c:68:
+ * senarios:
    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'senario' may be misspelled - perhaps 'scenario'?
#574: FILE: tc/tc_core.c:93:
+ * For senario (a), the ratetable[6] entry covers two cases: one were a si=
        ^^^^^^^

WARNING:TYPO_SPELLING: 'larg' may be misspelled - perhaps 'large'?
#578: FILE: tc/tc_core.c:95:
+ * required.  It can't be right for both.  Unfortunately the error is larg=
                                                                       ^^^^

WARNING:TYPO_SPELLING: 'senario' may be misspelled - perhaps 'scenario'?
#580: FILE: tc/tc_core.c:96:
+ * The same problem arises in senario (c) for ratetable[5].  The problem
                               ^^^^^^^

WARNING:TYPO_SPELLING: 'senario' may be misspelled - perhaps 'scenario'?
#581: FILE: tc/tc_core.c:97:
+ * doesn't happen for senario (b), because the boundary between rate table
                       ^^^^^^^

WARNING:TYPO_SPELLING: 'senario' may be misspelled - perhaps 'scenario'?
#598: FILE: tc/tc_core.c:109:
+ * in most cases.  In the worst case senario, considering all possible ATM=
                                      ^^^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#604: FILE: tc/tc_core.c:114:
+static int tc_calc_cell_align(int atm_cell_tax, char overhead, int cell_lo=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#606: FILE: tc/tc_core.c:115:
+static int tc_calc_cell_align(int atm_cell_tax, char overhead, int cell_lo=
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#609: FILE: tc/tc_core.c:118:
+  ^Iif (!atm_cell_tax)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#609: FILE: tc/tc_core.c:118:
+  ^Iif (!atm_cell_tax)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: tc/tc_core.c:118:
+  ^Iif (!atm_cell_tax)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#610: FILE: tc/tc_core.c:119:
+^I  ^Ireturn 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#610: FILE: tc/tc_core.c:119:
+^I  ^Ireturn 0;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#611: FILE: tc/tc_core.c:120:
+	cell_size =3D 1 << cell_log;
 	          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#615: FILE: tc/tc_core.c:124:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#619: FILE: tc/tc_core.c:128:
+void tc_calc_ratespec(struct tc_ratespec* spec, __u32* rtab, unsigned bps,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#619: FILE: tc/tc_core.c:128:
+void tc_calc_ratespec(struct tc_ratespec* spec, __u32* rtab, unsigned bps,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#619: FILE: tc/tc_core.c:128:
+void tc_calc_ratespec(struct tc_ratespec* spec, __u32* rtab, unsigned bps,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#620: FILE: tc/tc_core.c:129:
+void tc_calc_ratespec(struct tc_ratespec* spec, __u32* rtab, unsigned bps,
+	int cell_log, unsigned mtu, unsigned char mpu, int atm_cell_tax,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#620: FILE: tc/tc_core.c:129:
+	int cell_log, unsigned mtu, unsigned char mpu, int atm_cell_tax,

ERROR:CODE_INDENT: code indent should use tabs where possible
#641: FILE: tc/tc_core.c:143:
+^I  ^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#641: FILE: tc/tc_core.c:143:
+^I  ^I/*$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#649: FILE: tc/tc_core.c:151:
+		int sz =3D ((i+1)<<cell_log) - 1 + overhead;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#649: FILE: tc/tc_core.c:151:
+		int sz =3D ((i+1)<<cell_log) - 1 + overhead;
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#649: FILE: tc/tc_core.c:151:
+		int sz =3D ((i+1)<<cell_log) - 1 + overhead;
 		              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#649: FILE: tc/tc_core.c:151:
+		int sz =3D ((i+1)<<cell_log) - 1 + overhead;
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#654: FILE: tc/tc_core.c:155:
+			sz =3D tc_align_to_cells(sz);
 			   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#655: FILE: tc/tc_core.c:156:
+		rtab[i] =3D tc_calc_xmittime(bps, sz);
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#659: FILE: tc/tc_core.c:159:
+	spec->cell_align =3D tc_calc_cell_align(atm_cell_tax, overhead, cell_log)=
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#659: FILE: tc/tc_core.c:159:
+	spec->cell_align =3D tc_calc_cell_align(atm_cell_tax, overhead, cell_log)=
 	                                                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#661: FILE: tc/tc_core.c:160:
+	spec->cell_log =3D cell_log;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#662: FILE: tc/tc_core.c:161:
+	spec->feature =3D 0x8000 | (atm_cell_tax ? 1 : 0);
 	              ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#663: FILE: tc/tc_core.c:162:
+	spec->mpu =3D mpu | (unsigned)(overhead << 8);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#663: FILE: tc/tc_core.c:162:
+	spec->mpu =3D mpu | (unsigned)(overhead << 8);
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#664: FILE: tc/tc_core.c:163:
+	spec->rate =3D bps;
 	           ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#677: FILE: tc/tc_core.h:10:
+void tc_calc_ratespec(struct tc_ratespec* spec, __u32* rtab, unsigned bps,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#677: FILE: tc/tc_core.h:10:
+void tc_calc_ratespec(struct tc_ratespec* spec, __u32* rtab, unsigned bps,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#677: FILE: tc/tc_core.h:10:
+void tc_calc_ratespec(struct tc_ratespec* spec, __u32* rtab, unsigned bps,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#678: FILE: tc/tc_core.h:11:
+void tc_calc_ratespec(struct tc_ratespec* spec, __u32* rtab, unsigned bps,
+	int cell_log, unsigned mtu, unsigned char mpu, int atm_cell_tax,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#678: FILE: tc/tc_core.h:11:
+	int cell_log, unsigned mtu, unsigned char mpu, int atm_cell_tax,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000069107.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 105 errors, 26 warnings, 12 checks, 574 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000069107.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
