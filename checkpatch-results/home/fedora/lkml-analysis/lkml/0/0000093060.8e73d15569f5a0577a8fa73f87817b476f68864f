ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#55: FILE: mm/mlock.c:13:
vm_area_struct **prev,

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#57: FILE: mm/mlock.c:14:
+static int do_mlock(unsigned long start, size_t len,unsigned int jump_hole)
                                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#63: FILE: mm/mlock.c:16:
+	unsigned long  end=0,vmoff=0;
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#63: FILE: mm/mlock.c:16:
+	unsigned long  end=0,vmoff=0;
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#63: FILE: mm/mlock.c:16:
+	unsigned long  end=0,vmoff=0;
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#64: FILE: mm/mlock.c:17:
+	unsigned long  pages=0;
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#65: FILE: mm/mlock.c:18:
+	struct mm_struct *mm=current->mm;
 	                    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#66: FILE: mm/mlock.c:19:
+	struct vm_area_struct * vma, *prev, **pprev,*next;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#66: FILE: mm/mlock.c:19:
+	struct vm_area_struct * vma, *prev, **pprev,*next;
 	                                           ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#66: FILE: mm/mlock.c:19:
+	struct vm_area_struct * vma, *prev, **pprev,*next;
 	                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#67: FILE: mm/mlock.c:20:
+	int ret=0;
 	       ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#87: FILE: mm/mlock.c:30:
+	if (!vma || vma->vm_start > start)
[...]
+    else if (vma->vm_start < start){
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: mm/mlock.c:32:
+    else if (vma->vm_start < start){$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 24)
#89: FILE: mm/mlock.c:32:
+    else if (vma->vm_start < start){
+			prev=vma;

ERROR:SPACING: space required before the open brace '{'
#89: FILE: mm/mlock.c:32:
+    else if (vma->vm_start < start){

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#90: FILE: mm/mlock.c:33:
+			prev=vma;
 			    ^

ERROR:SPACING: space required before the open parenthesis '('
#92: FILE: mm/mlock.c:35:
+			if(!ret)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#92: FILE: mm/mlock.c:35:
+			if(!ret)
[...]
+			else {
[...]

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#93: FILE: mm/mlock.c:36:
+				vma=prev->vm_next;
 				   ^

CHECK:BRACES: Unbalanced braces around else statement
#94: FILE: mm/mlock.c:37:
+			else {

ERROR:SPACING: space required before the open brace '{'
#104: FILE: mm/mlock.c:42:
+	while(vma->vm_start < end){

ERROR:SPACING: space required before the open parenthesis '('
#104: FILE: mm/mlock.c:42:
+	while(vma->vm_start < end){

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#105: FILE: mm/mlock.c:43:
+		vmoff =vma->vm_end; /* Record where we have proceeded. */
 		      ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#106: FILE: mm/mlock.c:44:
+		if (vma->vm_end > end){
+    	   	ret = split_vma(mm, vma, end, 0);

ERROR:SPACING: space required before the open brace '{'
#106: FILE: mm/mlock.c:44:
+		if (vma->vm_end > end){

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: mm/mlock.c:45:
+    ^I   ^Iret = split_vma(mm, vma, end, 0);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#107: FILE: mm/mlock.c:45:
+    ^I   ^Iret = split_vma(mm, vma, end, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: mm/mlock.c:45:
+    ^I   ^Iret = split_vma(mm, vma, end, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: mm/mlock.c:46:
+   ^I^I^Iif (ret)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#108: FILE: mm/mlock.c:46:
+   ^I^I^Iif (ret)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: mm/mlock.c:46:
+   ^I^I^Iif (ret)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: mm/mlock.c:47:
+^I^I   ^I^Igoto out;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#109: FILE: mm/mlock.c:47:
+^I^I   ^I^Igoto out;$

ERROR:SPACING: space required before the open parenthesis '('
#111: FILE: mm/mlock.c:49:
+		if(vma->vm_flags & VM_LOCKED)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#114: FILE: mm/mlock.c:52:
+		vma->vm_wire_change =1;
 		                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#115: FILE: mm/mlock.c:53:
+		pages += (vma->vm_end-vma->vm_start) >> PAGE_SHIFT;
 		                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: mm/mlock.c:55:
+    ^Iif (!(vma->vm_flags & VM_IO)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#117: FILE: mm/mlock.c:55:
+    ^Iif (!(vma->vm_flags & VM_IO)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: mm/mlock.c:55:
+    ^Iif (!(vma->vm_flags & VM_IO)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#117: FILE: mm/mlock.c:55:
+    	if (!(vma->vm_flags & VM_IO)) {
+   			ret = make_pages_wired(vma->vm_start, vma->vm_end);

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: mm/mlock.c:56:
+   ^I^I^Iret = make_pages_wired(vma->vm_start, vma->vm_end);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#118: FILE: mm/mlock.c:56:
+   ^I^I^Iret = make_pages_wired(vma->vm_start, vma->vm_end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: mm/mlock.c:56:
+   ^I^I^Iret = make_pages_wired(vma->vm_start, vma->vm_end);$

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#119: FILE: mm/mlock.c:57:
+			if(ret<0){
 			      ^

ERROR:SPACING: space required before the open brace '{'
#119: FILE: mm/mlock.c:57:
+			if(ret<0){

ERROR:SPACING: space required before the open parenthesis '('
#119: FILE: mm/mlock.c:57:
+			if(ret<0){

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#121: FILE: mm/mlock.c:59:
+				vma->vm_wire_change =0;
 				                    ^

ERROR:SPACING: spaces required around that '==' (ctx:WxV)
#126: FILE: mm/mlock.c:64:
+		if(vma->vm_end ==end)
 		               ^

ERROR:SPACING: space required before the open parenthesis '('
#126: FILE: mm/mlock.c:64:
+		if(vma->vm_end ==end)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#128: FILE: mm/mlock.c:66:
+		prev =vma;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#129: FILE: mm/mlock.c:67:
+		vma =vma->vm_next;
 		    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: mm/mlock.c:68:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: mm/mlock.c:71:
+         */$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#133: FILE: mm/mlock.c:71:
+		 * we may jump over holes.
+         */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required before the open brace '{'
#134: FILE: mm/mlock.c:72:
+		if(jump_hole){

ERROR:SPACING: space required before the open parenthesis '('
#134: FILE: mm/mlock.c:72:
+		if(jump_hole){

ERROR:SPACING: space required before the open parenthesis '('
#135: FILE: mm/mlock.c:73:
+			if(vma)

ERROR:SPACING: space required before the open brace '{'
#140: FILE: mm/mlock.c:78:
+		else if (!vma || vma->vm_start != prev->vm_end){

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#140: FILE: mm/mlock.c:78:
+		}
+		else if (!vma || vma->vm_start != prev->vm_end){

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxO)
#152: FILE: mm/mlock.c:85:
+	pprev =&prev;
 	      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#152: FILE: mm/mlock.c:85:
+	pprev =&prev;
 	       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#173: FILE: mm/mlock.c:90:
+	 * Whether success or not,try to merge the vmas.
+     */

ERROR:SPACING: space required before the open brace '{'
#174: FILE: mm/mlock.c:91:
+	while( vma && vma->vm_end <= vmoff ){

ERROR:SPACING: space prohibited after that open parenthesis '('
#174: FILE: mm/mlock.c:91:
+	while( vma && vma->vm_end <= vmoff ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#174: FILE: mm/mlock.c:91:
+	while( vma && vma->vm_end <= vmoff ){

ERROR:SPACING: space required before the open parenthesis '('
#174: FILE: mm/mlock.c:91:
+	while( vma && vma->vm_end <= vmoff ){

ERROR:SPACING: space required before the open parenthesis '('
#175: FILE: mm/mlock.c:92:
+		if(vma->vm_wire_change) {

ERROR:SPACING: space required before the open brace '{'
#176: FILE: mm/mlock.c:93:
+			if(ret){

ERROR:SPACING: space required before the open parenthesis '('
#176: FILE: mm/mlock.c:93:
+			if(ret){

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#180: FILE: mm/mlock.c:97:
+			vma->vm_wire_change =0;
 			                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#182: FILE: mm/mlock.c:99:
+		next=vma->vm_next;
 		    ^

ERROR:SPACING: space required before the open parenthesis '('
#183: FILE: mm/mlock.c:100:
+		if(next && next->vm_wire_change) {

ERROR:SPACING: space required before the open brace '{'
#184: FILE: mm/mlock.c:101:
+			if(ret){

ERROR:SPACING: space required before the open parenthesis '('
#184: FILE: mm/mlock.c:101:
+			if(ret){

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#188: FILE: mm/mlock.c:105:
+			next->vm_wire_change=0;
 			                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#190: FILE: mm/mlock.c:107:
+		*pprev=vma_merge(mm, *pprev, vma->vm_start, vma->vm_end, vma->vm_flags,
 		      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: mm/mlock.c:108:
+		*pprev=vma_merge(mm, *pprev, vma->vm_start, vma->vm_end, vma->vm_flags,
+					vma->anon_vma,vma->vm_file, vma->vm_pgoff, vma_policy(vma));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#191: FILE: mm/mlock.c:108:
+					vma->anon_vma,vma->vm_file, vma->vm_pgoff, vma_policy(vma));
 					             ^

ERROR:SPACING: space required before the open parenthesis '('
#192: FILE: mm/mlock.c:109:
+		if(*pprev)

ERROR:SPACING: spaces required around that '=' (ctx:WxO)
#193: FILE: mm/mlock.c:110:
+			vma =*pprev;
 			    ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#193: FILE: mm/mlock.c:110:
+			vma =*pprev;
 			     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#194: FILE: mm/mlock.c:111:
+		vma =vma->vm_next;
 		    ^

ERROR:SPACING: space required before the open parenthesis '('
#201: FILE: mm/mlock.c:114:
+	if(!ret)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#213: FILE: mm/mlock.c:122:
+	unsigned long  end=0,vmoff=0;
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#213: FILE: mm/mlock.c:122:
+	unsigned long  end=0,vmoff=0;
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#213: FILE: mm/mlock.c:122:
+	unsigned long  end=0,vmoff=0;
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#214: FILE: mm/mlock.c:123:
+	unsigned long  pages=0;
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#215: FILE: mm/mlock.c:124:
+	struct mm_struct *mm=current->mm;
 	                    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#216: FILE: mm/mlock.c:125:
+	struct vm_area_struct * vma, *prev, **pprev, *next;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#217: FILE: mm/mlock.c:126:
+	int ret=0;
 	       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: mm/mlock.c:137:
+    else if (vma->vm_start < start){$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 16)
#225: FILE: mm/mlock.c:137:
+    else if (vma->vm_start < start){
+		prev=vma;

ERROR:SPACING: space required before the open brace '{'
#225: FILE: mm/mlock.c:137:
+    else if (vma->vm_start < start){

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#226: FILE: mm/mlock.c:138:
+		prev=vma;
 		    ^

ERROR:SPACING: space required before the open parenthesis '('
#228: FILE: mm/mlock.c:140:
+		if(!ret)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#229: FILE: mm/mlock.c:141:
+			vma=prev->vm_next;
 			   ^

ERROR:SPACING: space required before the open brace '{'
#236: FILE: mm/mlock.c:146:
+	while(vma->vm_start < end){

ERROR:SPACING: space required before the open parenthesis '('
#236: FILE: mm/mlock.c:146:
+	while(vma->vm_start < end){

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#237: FILE: mm/mlock.c:147:
+		vmoff =vma->vm_end;
 		      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: mm/mlock.c:148:
+    ^Iif (vma->vm_end > end){$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#238: FILE: mm/mlock.c:148:
+    ^Iif (vma->vm_end > end){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: mm/mlock.c:148:
+    ^Iif (vma->vm_end > end){$

ERROR:SPACING: space required before the open brace '{'
#238: FILE: mm/mlock.c:148:
+    	if (vma->vm_end > end){

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: mm/mlock.c:149:
+    ^I   ^Iret = split_vma(mm, vma, end, 0);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#239: FILE: mm/mlock.c:149:
+    ^I   ^Iret = split_vma(mm, vma, end, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: mm/mlock.c:149:
+    ^I   ^Iret = split_vma(mm, vma, end, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: mm/mlock.c:150:
+   ^I ^I^Iif (ret)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#240: FILE: mm/mlock.c:150:
+   ^I ^I^Iif (ret)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: mm/mlock.c:150:
+   ^I ^I^Iif (ret)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: mm/mlock.c:151:
+^I   ^I^I^Igoto out;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#241: FILE: mm/mlock.c:151:
+^I   ^I^I^Igoto out;$

ERROR:SPACING: space required before the open parenthesis '('
#246: FILE: mm/mlock.c:154:
+		if(!(vma->vm_flags & VM_LOCKED))

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#250: FILE: mm/mlock.c:157:
+		vma->vm_wire_change=1;
 		                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#251: FILE: mm/mlock.c:158:
+		pages += (vma->vm_end -vma->vm_start) >>PAGE_SHIFT;
 		                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:WxV)
#251: FILE: mm/mlock.c:158:
+		pages += (vma->vm_end -vma->vm_start) >>PAGE_SHIFT;
 		                                      ^

ERROR:SPACING: spaces required around that '==' (ctx:WxV)
#268: FILE: mm/mlock.c:161:
+		if(vma->vm_end ==end)
 		               ^

ERROR:SPACING: space required before the open parenthesis '('
#268: FILE: mm/mlock.c:161:
+		if(vma->vm_end ==end)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#270: FILE: mm/mlock.c:163:
+		prev =vma;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#271: FILE: mm/mlock.c:164:
+		vma =vma->vm_next;
 		    ^

ERROR:SPACING: space required before the open brace '{'
#280: FILE: mm/mlock.c:169:
+		if(jump_hole){

ERROR:SPACING: space required before the open parenthesis '('
#280: FILE: mm/mlock.c:169:
+		if(jump_hole){

ERROR:SPACING: space required before the open parenthesis '('
#281: FILE: mm/mlock.c:170:
+			if(!vma)

ERROR:SPACING: space required before the open brace '{'
#286: FILE: mm/mlock.c:175:
+		else if (!vma || (vma->vm_start != prev->vm_end) ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#286: FILE: mm/mlock.c:175:
+		else if (!vma || (vma->vm_start != prev->vm_end) ){

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#286: FILE: mm/mlock.c:175:
+		}
+		else if (!vma || (vma->vm_start != prev->vm_end) ){

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#287: FILE: mm/mlock.c:176:
+			ret= -ENOMEM;
 			   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxO)
#294: FILE: mm/mlock.c:182:
+	pprev =&prev;
 	      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#294: FILE: mm/mlock.c:182:
+	pprev =&prev;
 	       ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#297: FILE: mm/mlock.c:185:
+	while( vma && vma->vm_end <= vmoff ){
+			if(!ret && vma->vm_wire_change){

ERROR:SPACING: space required before the open brace '{'
#297: FILE: mm/mlock.c:185:
+	while( vma && vma->vm_end <= vmoff ){

ERROR:SPACING: space prohibited after that open parenthesis '('
#297: FILE: mm/mlock.c:185:
+	while( vma && vma->vm_end <= vmoff ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#297: FILE: mm/mlock.c:185:
+	while( vma && vma->vm_end <= vmoff ){

ERROR:SPACING: space required before the open parenthesis '('
#297: FILE: mm/mlock.c:185:
+	while( vma && vma->vm_end <= vmoff ){

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#298: FILE: mm/mlock.c:186:
+			if(!ret && vma->vm_wire_change){
+	    		if (!(vma->vm_flags & VM_IO))

ERROR:SPACING: space required before the open brace '{'
#298: FILE: mm/mlock.c:186:
+			if(!ret && vma->vm_wire_change){

ERROR:SPACING: space required before the open parenthesis '('
#298: FILE: mm/mlock.c:186:
+			if(!ret && vma->vm_wire_change){

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: mm/mlock.c:187:
+^I    ^I^Iif (!(vma->vm_flags & VM_IO))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#299: FILE: mm/mlock.c:187:
+^I    ^I^Iif (!(vma->vm_flags & VM_IO))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#299: FILE: mm/mlock.c:187:
+	    		if (!(vma->vm_flags & VM_IO))
+					make_pages_unwired(mm, vma->vm_start, vma->vm_end);

ERROR:SPACING: spaces required around that '&=' (ctx:WxO)
#301: FILE: mm/mlock.c:189:
+				vma->vm_flags &=~VM_LOCKED;
 				              ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#301: FILE: mm/mlock.c:189:
+				vma->vm_flags &=~VM_LOCKED;
 				                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#303: FILE: mm/mlock.c:191:
+			vma->vm_wire_change =0;
 			                    ^

ERROR:SPACING: space required before the open brace '{'
#305: FILE: mm/mlock.c:193:
+			if(next){

ERROR:SPACING: space required before the open parenthesis '('
#305: FILE: mm/mlock.c:193:
+			if(next){

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#306: FILE: mm/mlock.c:194:
+				if(!ret && next->vm_wire_change){
+		    		if (!(next->vm_flags & VM_IO))

ERROR:SPACING: space required before the open brace '{'
#306: FILE: mm/mlock.c:194:
+				if(!ret && next->vm_wire_change){

ERROR:SPACING: space required before the open parenthesis '('
#306: FILE: mm/mlock.c:194:
+				if(!ret && next->vm_wire_change){

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: mm/mlock.c:195:
+^I^I    ^I^Iif (!(next->vm_flags & VM_IO))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#307: FILE: mm/mlock.c:195:
+^I^I    ^I^Iif (!(next->vm_flags & VM_IO))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 48)
#307: FILE: mm/mlock.c:195:
+		    		if (!(next->vm_flags & VM_IO))
+						make_pages_unwired(mm, next->vm_start,next->vm_end);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#308: FILE: mm/mlock.c:196:
+						make_pages_unwired(mm, next->vm_start,next->vm_end);
 						                                     ^

ERROR:SPACING: spaces required around that '&=' (ctx:WxO)
#309: FILE: mm/mlock.c:197:
+					next->vm_flags &=~VM_LOCKED;
 					               ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#309: FILE: mm/mlock.c:197:
+					next->vm_flags &=~VM_LOCKED;
 					                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#311: FILE: mm/mlock.c:199:
+				next->vm_wire_change =0;
 				                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#313: FILE: mm/mlock.c:201:
+		*pprev =vma_merge(mm, *pprev, vma->vm_start, vma->vm_end, vma->vm_flags,
 		       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: mm/mlock.c:202:
+		*pprev =vma_merge(mm, *pprev, vma->vm_start, vma->vm_end, vma->vm_flags,
+		vma->anon_vma,vma->vm_file, vma->vm_pgoff, vma_policy(vma));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#314: FILE: mm/mlock.c:202:
+		vma->anon_vma,vma->vm_file, vma->vm_pgoff, vma_policy(vma));
 		             ^

ERROR:SPACING: space required before the open parenthesis '('
#315: FILE: mm/mlock.c:203:
+		if(*pprev)

ERROR:SPACING: spaces required around that '=' (ctx:WxO)
#316: FILE: mm/mlock.c:204:
+			vma =*pprev;
 			    ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#316: FILE: mm/mlock.c:204:
+			vma =*pprev;
 			     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#317: FILE: mm/mlock.c:205:
+		vma =vma->vm_next;
 		    ^

ERROR:SPACING: space required before the open parenthesis '('
#320: FILE: mm/mlock.c:208:
+	if(!ret)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#322: FILE: mm/mlock.c:210:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#341: FILE: mm/mlock.c:247:
+	ret = do_munlock(start, len,0);
 	                           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#350: FILE: mm/mlock.c:255:
+	struct vm_area_struct * vma;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#361: FILE: mm/mlock.c:265:
+	vma=mm->mmap;
 	   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#363: FILE: mm/mlock.c:267:
+	ret=do_mlock(start,TASK_SIZE,1);
 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#363: FILE: mm/mlock.c:267:
+	ret=do_mlock(start,TASK_SIZE,1);
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#363: FILE: mm/mlock.c:267:
+	ret=do_mlock(start,TASK_SIZE,1);
 	                            ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#377: FILE: mm/mlock.c:275:
+	struct vm_area_struct * vma;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#380: FILE: mm/mlock.c:278:
+	vma=mm->mmap;
 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#382: FILE: mm/mlock.c:280:
+	do_munlock(start,TASK_SIZE,1);
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#382: FILE: mm/mlock.c:280:
+	do_munlock(start,TASK_SIZE,1);
 	                          ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093060.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 134 errors, 32 warnings, 7 checks, 353 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093060.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
