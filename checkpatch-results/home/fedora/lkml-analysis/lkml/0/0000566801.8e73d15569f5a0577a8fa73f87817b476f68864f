WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
diff -urpN old-linux/include/net/irda/irlmp.h linux/include/net/irda/irlmp.h

ERROR:POINTER_LOCATION: "foo*	 bar" should be "foo *bar"
#91: FILE: include/net/irda/irqueue.h:92:
+void*	 hashbin_remove_this( hashbin_t* hashbin, irda_queue_t* entry);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#91: FILE: include/net/irda/irqueue.h:92:
+void*	 hashbin_remove_this( hashbin_t* hashbin, irda_queue_t* entry);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#91: FILE: include/net/irda/irqueue.h:92:
+void*	 hashbin_remove_this( hashbin_t* hashbin, irda_queue_t* entry);

ERROR:SPACING: space prohibited after that open parenthesis '('
#91: FILE: include/net/irda/irqueue.h:92:
+void*	 hashbin_remove_this( hashbin_t* hashbin, irda_queue_t* entry);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#146: FILE: net/irda/af_irda.c:2151:
+				    NULL, (void *) self);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'node->saddr == new->saddr'
#171: FILE: net/irda/discovery.c:79:
+		if ((node->saddr == new->saddr) &&
+		    ((node->daddr == new->daddr) || 
+		     (strcmp(node->nickname, new->nickname) == 0)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'node->daddr == new->daddr'
#171: FILE: net/irda/discovery.c:79:
+		if ((node->saddr == new->saddr) &&
+		    ((node->daddr == new->daddr) || 
+		     (strcmp(node->nickname, new->nickname) == 0)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: net/irda/discovery.c:80:
+^I^I    ((node->daddr == new->daddr) || $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#179: FILE: net/irda/discovery.c:86:
+			hashbin_remove_this(cachelog, (irda_queue_t *) node);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'curr->saddr == saddr'
#198: FILE: net/irda/discovery.c:159:
+		if ((curr->saddr == saddr) &&
+		    (force ||
+		     ((jiffies - curr->timestamp) > DISCOVERY_EXPIRE_TIMEOUT)))

CHECK:SPACING: No space is necessary after a cast
#206: FILE: net/irda/discovery.c:166:
+			curr = hashbin_remove_this(log, (irda_queue_t *) curr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: net/irda/discovery.c:308:
+int discovery_proc_read(char *buf, char **start, off_t offset, int length, $

ERROR:SPACING: space prohibited after that open parenthesis '('
#235: FILE: net/irda/discovery.c:324:
+	while (( discovery != NULL) && (len < length)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "discovery"
#235: FILE: net/irda/discovery.c:324:
+	while (( discovery != NULL) && (len < length)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#257: FILE: net/irda/ircomm/ircomm_tty_attach.c:240:
+		(void *) self);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "info"
#295: FILE: net/irda/irlap_event.c:510:
+		ASSERT(info != NULL, return -1;);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#297: FILE: net/irda/irlap_event.c:512:
+		IRDA_DEBUG(1, __FUNCTION__ "(), Receiving event %d, %s\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: net/irda/irlap_event.c:517:
+^I^I^Iirlap_discovery_indication(self, info->discovery); $

WARNING:TYPO_SPELLING: 'beeing' may be misspelled - perhaps 'being'?
#316: FILE: net/irda/irlmp.c:908:
+ *	This device is no longer been discovered, and therefore it is beeing
   	                                                              ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: net/irda/irlmp.c:911:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: net/irda/irlmp.c:916:
+void irlmp_discovery_expiry(discovery_t *expiry) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#327: FILE: net/irda/irlmp.c:919:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#328: FILE: net/irda/irlmp.c:920:
+	IRDA_DEBUG(3, __FUNCTION__ "()\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "expiry"
#330: FILE: net/irda/irlmp.c:922:
+	ASSERT(expiry != NULL, return;);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: net/irda/irlmp.c:923:
+^I$

CHECK:SPACING: No space is necessary after a cast
#332: FILE: net/irda/irlmp.c:924:
+	client = (irlmp_client_t *) hashbin_get_first(irlmp->clients);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "client"
#333: FILE: net/irda/irlmp.c:925:
+	while (client != NULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'client->callback3'
#335: FILE: net/irda/irlmp.c:927:
+		if ((client->callback3) &&
+		    (client->hint_mask & expiry->hints.word & 0x7f7f))

CHECK:SPACING: No space is necessary after a cast
#340: FILE: net/irda/irlmp.c:932:
+		client = (irlmp_client_t *) hashbin_get_next(irlmp->clients);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#444: FILE: net/irda/irqueue.c:452:
 	
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#446: FILE: net/irda/irqueue.c:454:
+/* $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#447: FILE: net/irda/irqueue.c:455:
+/* 
+ *  Function hashbin_remove (hashbin, hashv, name)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#457: FILE: net/irda/irqueue.c:465:
+void* hashbin_remove_this( hashbin_t* hashbin, irda_queue_t* entry)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#457: FILE: net/irda/irqueue.c:465:
+void* hashbin_remove_this( hashbin_t* hashbin, irda_queue_t* entry)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#457: FILE: net/irda/irqueue.c:465:
+void* hashbin_remove_this( hashbin_t* hashbin, irda_queue_t* entry)

ERROR:SPACING: space prohibited after that open parenthesis '('
#457: FILE: net/irda/irqueue.c:465:
+void* hashbin_remove_this( hashbin_t* hashbin, irda_queue_t* entry)

ERROR:SPACING: space prohibited after that open parenthesis '('
#463: FILE: net/irda/irqueue.c:471:
+	IRDA_DEBUG( 4, __FUNCTION__ "()\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#463: FILE: net/irda/irqueue.c:471:
+	IRDA_DEBUG( 4, __FUNCTION__ "()\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#465: FILE: net/irda/irqueue.c:473:
+	ASSERT( hashbin != NULL, return NULL;);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "hashbin"
#465: FILE: net/irda/irqueue.c:473:
+	ASSERT( hashbin != NULL, return NULL;);

ERROR:SPACING: space prohibited after that open parenthesis '('
#466: FILE: net/irda/irqueue.c:474:
+	ASSERT( hashbin->magic == HB_MAGIC, return NULL;);

ERROR:SPACING: space prohibited after that open parenthesis '('
#467: FILE: net/irda/irqueue.c:475:
+	ASSERT( entry != NULL, return NULL;);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "entry"
#467: FILE: net/irda/irqueue.c:475:
+	ASSERT( entry != NULL, return NULL;);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#468: FILE: net/irda/irqueue.c:476:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry->q_next == NULL'
#470: FILE: net/irda/irqueue.c:478:
+	if((entry->q_next == NULL) || (entry->q_prev == NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry->q_prev == NULL'
#470: FILE: net/irda/irqueue.c:478:
+	if((entry->q_next == NULL) || (entry->q_prev == NULL))

ERROR:SPACING: space required before the open parenthesis '('
#470: FILE: net/irda/irqueue.c:478:
+	if((entry->q_next == NULL) || (entry->q_prev == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!entry->q_next"
#470: FILE: net/irda/irqueue.c:478:
+	if((entry->q_next == NULL) || (entry->q_prev == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!entry->q_prev"
#470: FILE: net/irda/irqueue.c:478:
+	if((entry->q_next == NULL) || (entry->q_prev == NULL))

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#474: FILE: net/irda/irqueue.c:482:
+	/*
+	 * Locate hashbin

ERROR:SPACING: space prohibited after that open parenthesis '('
#477: FILE: net/irda/irqueue.c:485:
+	bin = GET_HASHBIN( hashv );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#477: FILE: net/irda/irqueue.c:485:
+	bin = GET_HASHBIN( hashv );

ERROR:SPACING: space prohibited after that open parenthesis '('
#480: FILE: net/irda/irqueue.c:488:
+	if ( hashbin->hb_type & HB_GLOBAL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#480: FILE: net/irda/irqueue.c:488:
+	if ( hashbin->hb_type & HB_GLOBAL ) {

ERROR:SPACING: space prohibited after that open square bracket '['
#481: FILE: net/irda/irqueue.c:489:
+		spin_lock_irqsave( &hashbin->hb_mutex[ bin ], flags);

ERROR:SPACING: space prohibited before that close square bracket ']'
#481: FILE: net/irda/irqueue.c:489:
+		spin_lock_irqsave( &hashbin->hb_mutex[ bin ], flags);

ERROR:SPACING: space prohibited after that open parenthesis '('
#481: FILE: net/irda/irqueue.c:489:
+		spin_lock_irqsave( &hashbin->hb_mutex[ bin ], flags);

ERROR:SPACING: space prohibited after that open parenthesis '('
#483: FILE: net/irda/irqueue.c:491:
+	} else if ( hashbin->hb_type & HB_LOCAL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#483: FILE: net/irda/irqueue.c:491:
+	} else if ( hashbin->hb_type & HB_LOCAL ) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#489: FILE: net/irda/irqueue.c:497:
+	/*
+	 * Dequeue the entry...

CHECK:SPACING: No space is necessary after a cast
#491: FILE: net/irda/irqueue.c:499:
+	dequeue_general( (irda_queue_t**) &hashbin->hb_queue[ bin ],

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#491: FILE: net/irda/irqueue.c:499:
+	dequeue_general( (irda_queue_t**) &hashbin->hb_queue[ bin ],

ERROR:SPACING: space prohibited after that open square bracket '['
#491: FILE: net/irda/irqueue.c:499:
+	dequeue_general( (irda_queue_t**) &hashbin->hb_queue[ bin ],

ERROR:SPACING: space prohibited before that close square bracket ']'
#491: FILE: net/irda/irqueue.c:499:
+	dequeue_general( (irda_queue_t**) &hashbin->hb_queue[ bin ],

ERROR:SPACING: space prohibited after that open parenthesis '('
#491: FILE: net/irda/irqueue.c:499:
+	dequeue_general( (irda_queue_t**) &hashbin->hb_queue[ bin ],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#492: FILE: net/irda/irqueue.c:500:
+	dequeue_general( (irda_queue_t**) &hashbin->hb_queue[ bin ],
+			 (irda_queue_t*) entry );

CHECK:SPACING: No space is necessary after a cast
#492: FILE: net/irda/irqueue.c:500:
+			 (irda_queue_t*) entry );

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#492: FILE: net/irda/irqueue.c:500:
+			 (irda_queue_t*) entry );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#492: FILE: net/irda/irqueue.c:500:
+			 (irda_queue_t*) entry );

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#498: FILE: net/irda/irqueue.c:506:
+	/*
+	 *  Check if this item is the currently selected item, and in

ERROR:SPACING: space prohibited after that open parenthesis '('
#501: FILE: net/irda/irqueue.c:509:
+	if ( entry == hashbin->hb_current)

ERROR:SPACING: space prohibited after that open parenthesis '('
#505: FILE: net/irda/irqueue.c:513:
+	if ( hashbin->hb_type & HB_GLOBAL) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#505: FILE: net/irda/irqueue.c:513:
+	if ( hashbin->hb_type & HB_GLOBAL) {
[...]
+	} else if ( hashbin->hb_type & HB_LOCAL) {
[...]

ERROR:SPACING: space prohibited after that open square bracket '['
#506: FILE: net/irda/irqueue.c:514:
+		spin_unlock_irq( &hashbin->hb_mutex[ bin]);

ERROR:SPACING: space prohibited after that open parenthesis '('
#506: FILE: net/irda/irqueue.c:514:
+		spin_unlock_irq( &hashbin->hb_mutex[ bin]);

ERROR:SPACING: space prohibited after that open parenthesis '('
#508: FILE: net/irda/irqueue.c:516:
+	} else if ( hashbin->hb_type & HB_LOCAL) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#509: FILE: net/irda/irqueue.c:517:
+		restore_flags( flags);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000566801.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 44 errors, 10 warnings, 24 checks, 412 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000566801.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
