WARNING:TYPO_SPELLING: 'betwen' may be misspelled - perhaps 'between'?
#19: 
Subject: Re: Race betwen the NMI handler and the RTC clock in practially all
                  ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'practially' may be misspelled - perhaps 'practically'?
#19: 
Subject: Re: Race betwen the NMI handler and the RTC clock in practially all
                                                              ^^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
--- linux-2.6.9-nmifix.diff.orig/arch/i386/kernel/time.c	2004-10-25 08:08:26.000000000 -0500

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#58: FILE: arch/i386/kernel/time.c:90:
+volatile unsigned long cmos_lock = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#58: FILE: arch/i386/kernel/time.c:90:
+volatile unsigned long cmos_lock = 0;

WARNING:INCLUDE_LINUX: Use #include <linux/mc146818rtc.h> instead of <asm/mc146818rtc.h>
#72: FILE: include/asm-i386/mach-default/mach_traps.h:10:
+#include <asm/mc146818rtc.h>

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#131: FILE: include/asm-i386/mc146818rtc.h:33:
+extern volatile unsigned long cmos_lock;

WARNING:LINE_SPACING: Missing a blank line after declarations
#141: FILE: include/asm-i386/mc146818rtc.h:43:
+	unsigned long new;
+	new = ((smp_processor_id()+1) << 8) | reg;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#141: FILE: include/asm-i386/mc146818rtc.h:43:
+	new = ((smp_processor_id()+1) << 8) | reg;
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#154: FILE: include/asm-i386/mc146818rtc.h:56:
+}
+static inline int do_i_have_lock_cmos(void)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#156: FILE: include/asm-i386/mc146818rtc.h:58:
+	return (cmos_lock >> 8) == (smp_processor_id()+1);
 	                                              ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#158: FILE: include/asm-i386/mc146818rtc.h:60:
+}
+static inline unsigned char current_lock_cmos_reg(void)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#162: FILE: include/asm-i386/mc146818rtc.h:64:
+}
+#define lock_cmos_prefix(reg) \

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#167: FILE: include/asm-i386/mc146818rtc.h:69:
+#define lock_cmos_suffix(reg) \
+		unlock_cmos();			\
+		local_irq_restore(cmos_flags);	\
+	} while (0)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:LINE_SPACING: Missing a blank line after declarations
#197: FILE: include/asm-i386/mc146818rtc.h:91:
+	unsigned char val;
+	lock_cmos_prefix(addr);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#203: FILE: include/asm-i386/mc146818rtc.h:97:
+}
+static inline void CMOS_WRITE(unsigned char val, unsigned char addr)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000237295.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 8 warnings, 6 checks, 152 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000237295.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
