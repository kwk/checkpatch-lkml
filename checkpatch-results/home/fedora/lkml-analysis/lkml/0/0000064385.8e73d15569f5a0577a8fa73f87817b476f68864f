WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#51: FILE: kernel/power/ui.c:568:
+ * ^I^IThe user may press C to continue booting, perhaps$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#52: FILE: kernel/power/ui.c:569:
+ * ^I^Iinvalidating the image,  or space to reboot. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#52: FILE: kernel/power/ui.c:569:
+ * ^I^Iinvalidating the image,  or space to reboot. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#53: FILE: kernel/power/ui.c:570:
+ * ^I^IThis works from either the serial console or normally $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#53: FILE: kernel/power/ui.c:570:
+ * ^I^IThis works from either the serial console or normally $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#54: FILE: kernel/power/ui.c:571:
+ * ^I^Iattached keyboard.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#56: FILE: kernel/power/ui.c:573:
+ * ^I^INote that we come in here from init, while the kernel is$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#57: FILE: kernel/power/ui.c:574:
+ * ^I^Ilocked. If we want to get events from the serial console,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#58: FILE: kernel/power/ui.c:575:
+ * ^I^Iwe need to temporarily unlock the kernel.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#60: FILE: kernel/power/ui.c:577:
+ * ^I^Isuspend_early_boot_message may also be called post-boot.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#61: FILE: kernel/power/ui.c:578:
+ * ^I^IIn this case, it simply printks the message and returns.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#64: FILE: kernel/power/ui.c:581:
+ * ^I^Iint^Idefault_answer. What to do when we timeout. This$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#65: FILE: kernel/power/ui.c:582:
+ * ^I^I^Iwill normally be continue, but the user might$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#66: FILE: kernel/power/ui.c:583:
+ * ^I^I^Iprovide command line options (__setup) to override$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#67: FILE: kernel/power/ui.c:584:
+ * ^I^I^Iparticular cases.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#68: FILE: kernel/power/ui.c:585:
+ * ^I^IChar *. Pointer to a string explaining why we're moaning.$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#71: FILE: kernel/power/ui.c:588:
+#define say(message, a...) printk(KERN_EMERG message, ##a)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: kernel/power/ui.c:599:
+^I^Iprinted_len = vsnprintf(local_printf_buf, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: kernel/power/ui.c:600:
+^I^I^I^Isizeof(local_printf_buf), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: kernel/power/ui.c:600:
+		printed_len = vsnprintf(local_printf_buf, 
+				sizeof(local_printf_buf), 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#90: FILE: kernel/power/ui.c:607:
+		printk(name_suspend "%s\n", local_printf_buf);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#96: FILE: kernel/power/ui.c:613:
+	 * enable the keyboard handler by setting the running flag */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#105: FILE: kernel/power/ui.c:622:
+		switch (message_detail) {
+		 case 0:
[...]
+		 case 1:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:TABSTOP: Statements should start on a tabstop
#106: FILE: kernel/power/ui.c:623:
+		 case 0:

WARNING:TABSTOP: Statements should start on a tabstop
#112: FILE: kernel/power/ui.c:629:
+		 case 1:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: kernel/power/ui.c:637:
+		say("Default action if you don't select one in %d seconds is: %s.\n",
+			message_timeout,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: kernel/power/ui.c:649:
+		say("Default action if you don't select one in %d seconds is: %s.\n",
+			message_timeout,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: kernel/power/ui.c:653:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!continue_req'
#145: FILE: kernel/power/ui.c:662:
+	if ((warning_reason) && (!continue_req))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: kernel/power/ui.c:664:
+^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#155: FILE: kernel/power/ui.c:672:
+}
+#undef say

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000064385.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 19 warnings, 5 checks, 111 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000064385.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
