WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#33: 
> suspend. (While radeonfb was suspended -> no usefull output). Can you
                                               ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
--- linux-2.6.9-ppc-g4-peval/include/linux/reboot.h	2004-06-16 13:20:26.000000000 +0800

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#70: FILE: include/linux/suspend.h:4:
+#if (defined(CONFIG_X86)) || (defined (CONFIG_PPC32))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#88: FILE: kernel/power/disk.c:33:
+extern int write_page_caches(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#89: FILE: kernel/power/disk.c:34:
+extern int read_page_caches(void);

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: kernel/power/disk.c:56:
+ ^I^I/* device_power_down(PMSG_SUSPEND); */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#101: FILE: kernel/power/disk.c:56:
+ ^I^I/* device_power_down(PMSG_SUSPEND); */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: kernel/power/disk.c:56:
+ ^I^I/* device_power_down(PMSG_SUSPEND); */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#116: FILE: kernel/power/disk.c:114:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: kernel/power/disk.c:157:
+^Iif (!resume) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#145: FILE: kernel/power/disk.c:158:
+		if ((error = write_page_caches())) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:CAMELCASE: Avoid CamelCase: <Finish>
#146: FILE: kernel/power/disk.c:159:
+			goto Finish;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#156: FILE: kernel/power/disk.c:190:
+	if ((error = prepare(0)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#165: FILE: kernel/power/disk.c:247:
+	if ((error = prepare(1)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: kernel/power/swsusp.c:221:
+^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#205: FILE: kernel/power/swsusp.c:222:
+#define ONE_PAGE_PBE_NUM	(PAGE_SIZE/sizeof(struct pbe))
                         	          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#210: FILE: kernel/power/swsusp.c:227:
+#define pgdir_for_each_safe(pos, n, head) \
+	for(pos = head, n = pos ? (suspend_pagedir_t*)pos->dummy.val : NULL; \
+		pos != NULL; \
+		pos = n, n = pos ? (suspend_pagedir_t *)pos->dummy.val : NULL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#210: FILE: kernel/power/swsusp.c:227:
+#define pgdir_for_each_safe(pos, n, head) \
+	for(pos = head, n = pos ? (suspend_pagedir_t*)pos->dummy.val : NULL; \
+		pos != NULL; \
+		pos = n, n = pos ? (suspend_pagedir_t *)pos->dummy.val : NULL)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#211: FILE: kernel/power/swsusp.c:228:
+	for(pos = head, n = pos ? (suspend_pagedir_t*)pos->dummy.val : NULL; \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#211: FILE: kernel/power/swsusp.c:228:
+	for(pos = head, n = pos ? (suspend_pagedir_t*)pos->dummy.val : NULL; \

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pos"
#212: FILE: kernel/power/swsusp.c:229:
+		pos != NULL; \

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#219: FILE: kernel/power/swsusp.c:236:
+	suspend_pagedir_t *next, *cur;
+	pgdir_for_each_safe(cur, next, head) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: kernel/power/swsusp.c:241:
+/* $

WARNING:TYPO_SPELLING: 'funtion' may be misspelled - perhaps 'function'?
#227: FILE: kernel/power/swsusp.c:244:
+ * a callback funtion in foreach pbe loop.
               ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: kernel/power/swsusp.c:247:
+ * @param p    private data $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: kernel/power/swsusp.c:250:
+ * @return  0 is ok, otherwise $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: kernel/power/swsusp.c:252:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: kernel/power/swsusp.c:252:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: kernel/power/swsusp.c:256:
+ * for_each_pbe $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: kernel/power/swsusp.c:258:
+ * @param pbe pointer of the pbe head $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: kernel/power/swsusp.c:260:
+ * @param p   private data $

WARNING:REPEATED_WORD: Possible repeated word: 'max'
#244: FILE: kernel/power/swsusp.c:261:
+ * @param max max the the pbe numbers

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#244: FILE: kernel/power/swsusp.c:261:
+ * @param max max the the pbe numbers

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#248: FILE: kernel/power/swsusp.c:265:
+static int for_each_pbe(struct pbe *pbe, swsup_pbe_t fun, void *p, int max)
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pgdir"
#254: FILE: kernel/power/swsusp.c:271:
+	while (pgdir != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#256: FILE: kernel/power/swsusp.c:273:
+		unsigned long nums;
+		next = (struct pbe*)pgdir->dummy.val;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#256: FILE: kernel/power/swsusp.c:273:
+		next = (struct pbe*)pgdir->dummy.val;

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#257: FILE: kernel/power/swsusp.c:274:
+		for (nums = 0; nums < ONE_PAGE_PBE_NUM; nums++, pgdir++, i ++) {
 		                                                           ^

ERROR:SPACING: space required before the open parenthesis '('
#261: FILE: kernel/power/swsusp.c:278:
+			if((error = fun(pgdir, p, i))) { /* got error */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#261: FILE: kernel/power/swsusp.c:278:
+			if((error = fun(pgdir, p, i))) { /* got error */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: kernel/power/swsusp.c:286:
+/* for_each_pbe_copy_back $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#269: FILE: kernel/power/swsusp.c:286:
+}
+/* for_each_pbe_copy_back 

WARNING:TYPO_SPELLING: 'usefuly' may be misspelled - perhaps 'usefully'?
#271: FILE: kernel/power/swsusp.c:288:
+ * That usefuly for  writing the code in assemble code.
         ^^^^^^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#276: FILE: kernel/power/swsusp.c:293:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: kernel/power/swsusp.c:294:
+#define GET_ADDRESS(x) __pa(x) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#281: FILE: kernel/power/swsusp.c:298:
+asmlinkage void for_each_pbe_copy_back(void)
+{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pgdir"
#286: FILE: kernel/power/swsusp.c:303:
+	while (pgdir != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#288: FILE: kernel/power/swsusp.c:305:
+		unsigned long nums, i;
+		pgdir = (struct pbe *)GET_ADDRESS(pgdir);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#289: FILE: kernel/power/swsusp.c:306:
+		next = (struct pbe*)pgdir->dummy.val;

WARNING:LINE_SPACING: Missing a blank line after declarations
#292: FILE: kernel/power/swsusp.c:309:
+			register unsigned long *orig, *copy;
+			orig = (unsigned long *)pgdir->orig_address;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#293: FILE: kernel/power/swsusp.c:310:
+			if (orig == 0) goto end;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#296: FILE: kernel/power/swsusp.c:313:
+#if 0

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#299: FILE: kernel/power/swsusp.c:316:
+			for (i = 0; i < PAGE_SIZE / sizeof(unsigned long); i+=4) {
 			                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#301: FILE: kernel/power/swsusp.c:318:
+				*(orig + i+1) = *(copy + i+1);
 				          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#301: FILE: kernel/power/swsusp.c:318:
+				*(orig + i+1) = *(copy + i+1);
 				                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#302: FILE: kernel/power/swsusp.c:319:
+				*(orig + i+2) = *(copy + i+2);
 				          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#302: FILE: kernel/power/swsusp.c:319:
+				*(orig + i+2) = *(copy + i+2);
 				                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#303: FILE: kernel/power/swsusp.c:320:
+				*(orig + i+3) = *(copy + i+3);
 				          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#303: FILE: kernel/power/swsusp.c:320:
+				*(orig + i+3) = *(copy + i+3);
 				                          ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#306: FILE: kernel/power/swsusp.c:323:
+			pgdir ++;
 			      ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#319: FILE: kernel/power/swsusp.c:336:
+		return (1);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#332: FILE: kernel/power/swsusp.c:349:
+^I} $

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#375: FILE: kernel/power/swsusp.c:411:
+static void inline mod_printk_progress(int i)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#377: FILE: kernel/power/swsusp.c:413:
+	if (mod_progress == 0) mod_progress = 1;

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#378: FILE: kernel/power/swsusp.c:414:
+	if (!(i%100))
 	       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#379: FILE: kernel/power/swsusp.c:415:
+		printk( "\b\b\b\b%3d%%", i / mod_progress );

ERROR:SPACING: space prohibited after that open parenthesis '('
#379: FILE: kernel/power/swsusp.c:415:
+		printk( "\b\b\b\b%3d%%", i / mod_progress );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#379: FILE: kernel/power/swsusp.c:415:
+		printk( "\b\b\b\b%3d%%", i / mod_progress );

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#386: FILE: kernel/power/swsusp.c:422:
+	BUG_ON(p->address == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#387: FILE: kernel/power/swsusp.c:423:
+	BUG_ON(p->orig_address == 0);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#388: FILE: kernel/power/swsusp.c:424:
+	if ((error = write_page(p->address, &p->swap_address))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#388: FILE: kernel/power/swsusp.c:424:
+	if ((error = write_page(p->address, &p->swap_address))) {
+		return error;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: kernel/power/swsusp.c:428:
+^Ipr_debug("write_one_pbe: %p, o{%p} c{%p} %lu %d\n", p, $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'write_one_pbe', this function's name, in a string
#392: FILE: kernel/power/swsusp.c:428:
+	pr_debug("write_one_pbe: %p, o{%p} c{%p} %lu %d\n", p, 

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#393: FILE: kernel/power/swsusp.c:429:
+	pr_debug("write_one_pbe: %p, o{%p} c{%p} %lu %d\n", p, 
+			(void *)p->orig_address, (void *)p->address,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#394: FILE: kernel/power/swsusp.c:430:
+^I^I^Ip->swap_address.val, cur); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: kernel/power/swsusp.c:442:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#423: FILE: kernel/power/swsusp.c:445:
+	printk( "Writing data to swap (%d pages)...     ", nr_copy_pages);

ERROR:SPACING: space prohibited after that open parenthesis '('
#423: FILE: kernel/power/swsusp.c:445:
+	printk( "Writing data to swap (%d pages)...     ", nr_copy_pages);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#452: FILE: kernel/power/swsusp.c:520:
+^I^Iif (error) { $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#452: FILE: kernel/power/swsusp.c:520:
+		if (error) { 
+			break;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#456: FILE: kernel/power/swsusp.c:524:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#475: FILE: kernel/power/swsusp.c:658:
+^Ispin_lock_irq(&zone->lru_lock); $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#477: FILE: kernel/power/swsusp.c:660:
+		struct list_head * entry = zone->inactive_list.prev;

WARNING:LINE_SPACING: Missing a blank line after declarations
#478: FILE: kernel/power/swsusp.c:661:
+		struct list_head * entry = zone->inactive_list.prev;
+		while (entry != &zone->inactive_list) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#480: FILE: kernel/power/swsusp.c:663:
+				struct page * page = list_entry(entry, struct page, lru);

WARNING:LINE_SPACING: Missing a blank line after declarations
#481: FILE: kernel/power/swsusp.c:664:
+				struct page * page = list_entry(entry, struct page, lru);
+				inactive += fun(page, p);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#482: FILE: kernel/power/swsusp.c:665:
+^I^I^I} else { $

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#483: FILE: kernel/power/swsusp.c:666:
+				inactive ++;
 				         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#489: FILE: kernel/power/swsusp.c:672:
+		struct list_head * entry = zone->active_list.prev;

WARNING:LINE_SPACING: Missing a blank line after declarations
#490: FILE: kernel/power/swsusp.c:673:
+		struct list_head * entry = zone->active_list.prev;
+		while (entry != &zone->active_list) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#492: FILE: kernel/power/swsusp.c:675:
+				struct page * page = list_entry(entry, struct page, lru);

WARNING:LINE_SPACING: Missing a blank line after declarations
#493: FILE: kernel/power/swsusp.c:676:
+				struct page * page = list_entry(entry, struct page, lru);
+				active += fun(page, p);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#495: FILE: kernel/power/swsusp.c:678:
+				active ++;
 				       ^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#506: FILE: kernel/power/swsusp.c:689:
+int swsusp_pagecache = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#515: FILE: kernel/power/swsusp.c:698:
+static suspend_pagedir_t *pagedir_cache = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#516: FILE: kernel/power/swsusp.c:699:
+static int nr_copy_page_caches = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#521: FILE: kernel/power/swsusp.c:704:
+	struct zone *zone;
+	for_each_zone(zone) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#522: FILE: kernel/power/swsusp.c:705:
+		if (!is_highmem(zone)) {
+			spin_lock_irq(&zone->lru_lock);
+		}

WARNING:LINE_SPACING: Missing a blank line after declarations
#531: FILE: kernel/power/swsusp.c:714:
+	struct zone *zone;
+	for_each_zone(zone) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#532: FILE: kernel/power/swsusp.c:715:
+		if (!is_highmem(zone)) {
+			spin_unlock_irq(&zone->lru_lock);
+		}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#542: FILE: kernel/power/swsusp.c:725:
+	BUG_ON(PageReserved(page) && PageNosave(page));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#544: FILE: kernel/power/swsusp.c:727:
+		printk("not valid page\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#548: FILE: kernel/power/swsusp.c:731:
+		printk("nosave\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#552: FILE: kernel/power/swsusp.c:735:
+		printk("[nosave]\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#556: FILE: kernel/power/swsusp.c:739:
+		printk("slab\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#561: FILE: kernel/power/swsusp.c:744:
+		struct pbe *p = find_pbe_by_index(pagedir_cache, nr_copy_page_caches, -1);
+		BUG_ON(p == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#561: FILE: kernel/power/swsusp.c:744:
+		BUG_ON(p == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#561: FILE: kernel/power/swsusp.c:744:
+		BUG_ON(p == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#563: FILE: kernel/power/swsusp.c:746:
+		BUG_ON(p->address == 0);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#565: FILE: kernel/power/swsusp.c:748:
+		/*pr_debug("setup_page_caches: cur %p, o{%p}, d{%p}, nr %u\n",
+				(void*)p, (void*)p->orig_address,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#566: FILE: kernel/power/swsusp.c:749:
+				(void*)p->address, nr_copy_page_caches);*/

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#567: FILE: kernel/power/swsusp.c:750:
+		nr_copy_page_caches ++;
 		                    ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#571: FILE: kernel/power/swsusp.c:754:
+	return (1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#582: FILE: kernel/power/swsusp.c:765:
+static inline void collide_set_bit(unsigned char *bitmap, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#583: FILE: kernel/power/swsusp.c:766:
+static inline void collide_set_bit(unsigned char *bitmap, 
+		unsigned long bitnum)

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#587: FILE: kernel/power/swsusp.c:770:
+	bitmap[bitnum / 8] |= (1 << (bitnum%8));
 	                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#590: FILE: kernel/power/swsusp.c:773:
+static inline int collide_is_bit_set(unsigned char *bitmap, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#591: FILE: kernel/power/swsusp.c:774:
+static inline int collide_is_bit_set(unsigned char *bitmap, 
+		unsigned long bitnum)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#592: FILE: kernel/power/swsusp.c:775:
+{               $

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#595: FILE: kernel/power/swsusp.c:778:
+	return !!(bitmap[bitnum / 8] & (1 << (bitnum%8)));
 	                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: kernel/power/swsusp.c:786:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#604: FILE: kernel/power/swsusp.c:787:
+ * four pages are enough for bitmap $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#609: FILE: kernel/power/swsusp.c:792:
+^Iunsigned char *bitmap = $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#613: FILE: kernel/power/swsusp.c:796:
+	if (bitmap == NULL) {
+		return NULL;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bitmap"
#613: FILE: kernel/power/swsusp.c:796:
+	if (bitmap == NULL) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#619: FILE: kernel/power/swsusp.c:802:
+	BUG_ON(collide_is_bit_set(bitmap, (unsigned long)bitmap) == 1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#621: FILE: kernel/power/swsusp.c:804:
+	BUG_ON(collide_is_bit_set(bitmap, (unsigned long)bitmap) == 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#622: FILE: kernel/power/swsusp.c:805:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pgdir"
#623: FILE: kernel/power/swsusp.c:806:
+	while (pgdir != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#625: FILE: kernel/power/swsusp.c:808:
+		unsigned long nums;
+		next = (struct pbe*)pgdir->dummy.val;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#625: FILE: kernel/power/swsusp.c:808:
+		next = (struct pbe*)pgdir->dummy.val;

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#629: FILE: kernel/power/swsusp.c:812:
+			pgdir ++;
 			      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#648: FILE: kernel/power/swsusp.c:831:
+static suspend_pagedir_t * alloc_one_pagedir(suspend_pagedir_t *prev, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#648: FILE: kernel/power/swsusp.c:831:
+static suspend_pagedir_t * alloc_one_pagedir(suspend_pagedir_t *prev, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#649: FILE: kernel/power/swsusp.c:832:
+static suspend_pagedir_t * alloc_one_pagedir(suspend_pagedir_t *prev, 
+		unsigned char *collide)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#656: FILE: kernel/power/swsusp.c:839:
+	if (!pgdir) {
+		return NULL;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#664: FILE: kernel/power/swsusp.c:847:
+			if (!pgdir) {
+				return NULL;
+			}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#670: FILE: kernel/power/swsusp.c:853:
+^I/*pr_debug("pgdir: %p, %p, %d\n", $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#671: FILE: kernel/power/swsusp.c:854:
+	/*pr_debug("pgdir: %p, %p, %d\n", 
+			pgdir, prev, sizeof(suspend_pagedir_t)); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#671: FILE: kernel/power/swsusp.c:854:
+			pgdir, prev, sizeof(suspend_pagedir_t)); */

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#677: FILE: kernel/power/swsusp.c:860:
+			prev[i].dummy.val= (unsigned long)pgdir;
 			                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#687: FILE: kernel/power/swsusp.c:870:
+	int diff = 0, ret = 0;
+	do {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#697: FILE: kernel/power/swsusp.c:880:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#698: FILE: kernel/power/swsusp.c:881:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#699: FILE: kernel/power/swsusp.c:882:
+ * alloc_pagedir $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#707: FILE: kernel/power/swsusp.c:890:
+static int alloc_pagedir(struct pbe **pbe, int pbe_nums, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#708: FILE: kernel/power/swsusp.c:891:
+static int alloc_pagedir(struct pbe **pbe, int pbe_nums, 
+		unsigned char *collide, int page_nums)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#716: FILE: kernel/power/swsusp.c:899:
+^Ielse $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_pagedir', this function's name, in a string
#719: FILE: kernel/power/swsusp.c:902:
+	pr_debug("alloc_pagedir: %d, %d\n", pbe_nums, after_alloc);

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#740: FILE: kernel/power/swsusp.c:923:
+static char *page_cache_buf = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#742: FILE: kernel/power/swsusp.c:925:
+static int bio_read_page(pgoff_t page_off, void * page);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pagecache_read_pbe', this function's name, in a string
#751: FILE: kernel/power/swsusp.c:934:
+	pr_debug("pagecache_read_pbe: %p, o{%p} c{%p} %lu\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#752: FILE: kernel/power/swsusp.c:935:
+^I^I^Ip, (void *)p->orig_address, (void *)p->address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#752: FILE: kernel/power/swsusp.c:935:
+	pr_debug("pagecache_read_pbe: %p, o{%p} c{%p} %lu\n",
+			p, (void *)p->orig_address, (void *)p->address, 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#756: FILE: kernel/power/swsusp.c:939:
+	if (error) return error;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#757: FILE: kernel/power/swsusp.c:940:
+	memcpy((void*)p->address, (void*)page_cache_buf, PAGE_SIZE);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#757: FILE: kernel/power/swsusp.c:940:
+	memcpy((void*)p->address, (void*)page_cache_buf, PAGE_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#769: FILE: kernel/power/swsusp.c:952:
+^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#770: FILE: kernel/power/swsusp.c:953:
+	if (swsusp_pagecache == 0) return 0;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#774: FILE: kernel/power/swsusp.c:957:
+	printk( "Reading PageCaches from swap (%d pages)...     ", nr_copy_page_caches);

ERROR:SPACING: space prohibited after that open parenthesis '('
#774: FILE: kernel/power/swsusp.c:957:
+	printk( "Reading PageCaches from swap (%d pages)...     ", nr_copy_page_caches);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#776: FILE: kernel/power/swsusp.c:959:
+	error = for_each_pbe(pagedir_cache, pagecache_read_pbe, NULL,
+			nr_copy_page_caches);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#777: FILE: kernel/power/swsusp.c:960:
+	printk("\b\b\b\bdone\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pagecache_write_pbe', this function's name, in a string
#792: FILE: kernel/power/swsusp.c:975:
+	pr_debug("pagecache_write_pbe: %p, o{%p} c{%p} %d ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#793: FILE: kernel/power/swsusp.c:976:
+	pr_debug("pagecache_write_pbe: %p, o{%p} c{%p} %d ",
+			p, (void *)p->orig_address, (void *)p->address, cur);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#794: FILE: kernel/power/swsusp.c:977:
+	BUG_ON(p->address == 0);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#795: FILE: kernel/power/swsusp.c:978:
+	memcpy((void *)page_cache_buf, (void*)p->address, PAGE_SIZE);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#797: FILE: kernel/power/swsusp.c:980:
+	if (error) return error;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#807: FILE: kernel/power/swsusp.c:990:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#811: FILE: kernel/power/swsusp.c:994:
+^Iprintk( "Writing PageCaches to swap (%d pages)...     ", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#811: FILE: kernel/power/swsusp.c:994:
+	printk( "Writing PageCaches to swap (%d pages)...     ", 

ERROR:SPACING: space prohibited after that open parenthesis '('
#811: FILE: kernel/power/swsusp.c:994:
+	printk( "Writing PageCaches to swap (%d pages)...     ", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#812: FILE: kernel/power/swsusp.c:995:
+	printk( "Writing PageCaches to swap (%d pages)...     ", 
+			nr_copy_page_caches);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#813: FILE: kernel/power/swsusp.c:996:
+^Ierror = for_each_pbe(pagedir_cache, pagecache_write_pbe, NULL, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#814: FILE: kernel/power/swsusp.c:997:
+	error = for_each_pbe(pagedir_cache, pagecache_write_pbe, NULL, 
+			nr_copy_page_caches);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#815: FILE: kernel/power/swsusp.c:998:
+	printk("\b\b\b\bdone\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#826: FILE: kernel/power/swsusp.c:1009:
+		if (!is_highmem(zone)) {
+			count_page_caches(zone, 1);
+		}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#843: FILE: kernel/power/swsusp.c:1026:
+		ClearPagePcs(mem_map+i);
 		                    ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#848: FILE: kernel/power/swsusp.c:1031:
+		if (!is_highmem(zone)) {
+			nr_copy_page_caches += count_page_caches(zone, 0);
+		}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#859: FILE: kernel/power/swsusp.c:1042:
+	if ((error = swsusp_swap_check())) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#873: FILE: kernel/power/swsusp.c:1056:
+		if (nr_copy_page_caches == 0) {
+			return 0;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#886: FILE: kernel/power/swsusp.c:1069:
+^I^Iprintk("swsusp: need %d pages, free %d pages\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#886: FILE: kernel/power/swsusp.c:1069:
+		printk("swsusp: need %d pages, free %d pages\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#887: FILE: kernel/power/swsusp.c:1070:
+		printk("swsusp: need %d pages, free %d pages\n", 
+				nr_copy_pages, nr_free_pages());

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#888: FILE: kernel/power/swsusp.c:1071:
+		printk("swsusp: Freeing memory:...     ");

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#891: FILE: kernel/power/swsusp.c:1074:
+			schedule_timeout(HZ/5);
 			                   ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#896: FILE: kernel/power/swsusp.c:1079:
+			recal ++;
 			      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#897: FILE: kernel/power/swsusp.c:1080:
+			printk("\b\b\b\b\b%5d", nr_free_pages());

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#899: FILE: kernel/power/swsusp.c:1082:
+		printk("   done\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#907: FILE: kernel/power/swsusp.c:1090:
+		printk("swsusp_alloc failed, %d\n", error);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#913: FILE: kernel/power/swsusp.c:1096:
+	printk("swsusp: Need to copy %u pages, %u page_caches\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#914: FILE: kernel/power/swsusp.c:1097:
+	printk("swsusp: Need to copy %u pages, %u page_caches\n",
+			nr_copy_pages, nr_copy_page_caches);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#918: FILE: kernel/power/swsusp.c:1101:
+		pr_debug("after setup_pagedir_pbe \n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#921: FILE: kernel/power/swsusp.c:1104:
+^I^Iif (error) $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#936: FILE: kernel/power/swsusp.c:1146:
+		BUG_ON(zone->nr_inactive == 0 && zone->nr_active == 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#967: FILE: kernel/power/swsusp.c:1184:
+^I^I^I^Istruct pbe * pbe = find_pbe_by_index(pagedir_nosave, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#967: FILE: kernel/power/swsusp.c:1184:
+				struct pbe * pbe = find_pbe_by_index(pagedir_nosave, 

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#969: FILE: kernel/power/swsusp.c:1186:
+				BUG_ON(pbe == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pbe"
#969: FILE: kernel/power/swsusp.c:1186:
+				BUG_ON(pbe == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#972: FILE: kernel/power/swsusp.c:1189:
+				BUG_ON(pbe->orig_address == 0);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1128: FILE: kernel/power/swsusp.c:1298:
+		printk("suspend: Allocating pagedir failed.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1135: FILE: kernel/power/swsusp.c:1304:
+		printk("suspend: Allocating image pages failed.\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1298: FILE: kernel/power/swsusp.c:1436:
+static struct block_device * resume_bdev __nosavedata;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1307: FILE: kernel/power/swsusp.c:1481:
+static int bio_read_page(pgoff_t page_off, void * page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1313: FILE: kernel/power/swsusp.c:1486:
+static int bio_write_page(pgoff_t page_off, void * page)

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#1329: FILE: kernel/power/swsusp.c:1557:
+static void **eaten_memory = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1334: FILE: kernel/power/swsusp.c:1562:
+	static int eaten_i = 0;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1336: FILE: kernel/power/swsusp.c:1564:
+	printk("\b%c", eaten_progess[eaten_i]);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1337: FILE: kernel/power/swsusp.c:1565:
+	eaten_i ++;
 	        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1338: FILE: kernel/power/swsusp.c:1566:
+	if (eaten_i > 3) eaten_i = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1346: FILE: kernel/power/swsusp.c:1574:
+^Ipr_debug("check_one_pbe: %p %p o{%p} ", $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_one_pbe', this function's name, in a string
#1346: FILE: kernel/power/swsusp.c:1574:
+	pr_debug("check_one_pbe: %p %p o{%p} ", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1347: FILE: kernel/power/swsusp.c:1575:
+	pr_debug("check_one_pbe: %p %p o{%p} ", 
+			p, (void*)addr, (void*)p->orig_address);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1347: FILE: kernel/power/swsusp.c:1575:
+			p, (void*)addr, (void*)p->orig_address);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1347: FILE: kernel/power/swsusp.c:1575:
+			p, (void*)addr, (void*)p->orig_address);

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#1351: FILE: kernel/power/swsusp.c:1579:
+			eaten_memory = (void**)addr;

ERROR:SPACING: space required before the open parenthesis '('
#1356: FILE: kernel/power/swsusp.c:1584:
+		if(!addr)

ERROR:SPACING: space required before the open parenthesis '('
#1358: FILE: kernel/power/swsusp.c:1586:
+	} while(collide_is_bit_set(collide, addr));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1359: FILE: kernel/power/swsusp.c:1587:
+	pr_debug("c{%p} done\n", (void*)addr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1373: FILE: kernel/power/swsusp.c:1601:
+	int ret = for_each_pbe(pbe, check_one_pbe, collide, nr_copy_pages);
+	c = eaten_memory;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_one_pbe', this function's name, in a string
#1389: FILE: kernel/power/swsusp.c:1617:
+	pr_debug("read_one_pbe: %p o{%p} c{%p} %lu, %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1390: FILE: kernel/power/swsusp.c:1618:
+	pr_debug("read_one_pbe: %p o{%p} c{%p} %lu, %d\n",
+			p, (void *)p->orig_address, (void *)p->address,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1394: FILE: kernel/power/swsusp.c:1622:
+^Ireturn error;                                                $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1402: FILE: kernel/power/swsusp.c:1628:
+static void __init swsusp_copy_pagedir(suspend_pagedir_t *d_pgdir, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1403: FILE: kernel/power/swsusp.c:1629:
+static void __init swsusp_copy_pagedir(suspend_pagedir_t *d_pgdir, 
+		suspend_pagedir_t *s_pgdir)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "s_pgdir"
#1407: FILE: kernel/power/swsusp.c:1633:
+	while (s_pgdir != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1410: FILE: kernel/power/swsusp.c:1636:
+		suspend_pagedir_t *d_next = (suspend_pagedir_t *)d_pgdir->dummy.val;
+		for (i = 0; i < ONE_PAGE_PBE_NUM; i++) {

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1414: FILE: kernel/power/swsusp.c:1640:
+			s_pgdir ++; d_pgdir ++;
 			        ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1414: FILE: kernel/power/swsusp.c:1640:
+			s_pgdir ++; d_pgdir ++;
 			                    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1427: FILE: kernel/power/swsusp.c:1650:
+	suspend_pagedir_t * addr = NULL;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1432: FILE: kernel/power/swsusp.c:1653:
+	BUG_ON(bitmap == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bitmap"
#1432: FILE: kernel/power/swsusp.c:1653:
+	BUG_ON(bitmap == NULL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1435: FILE: kernel/power/swsusp.c:1655:
+	printk("Relocating pagedir ...");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1436: FILE: kernel/power/swsusp.c:1656:
+^Ierror = alloc_pagedir(&addr, nr_copy_pages, bitmap, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1437: FILE: kernel/power/swsusp.c:1657:
+	error = alloc_pagedir(&addr, nr_copy_pages, bitmap, 
+			swsusp_info.pagedir_pages);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1438: FILE: kernel/power/swsusp.c:1658:
+	if (error < 0) {
 		return error;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1442: FILE: kernel/power/swsusp.c:1662:
+	if (check_pagedir(addr, bitmap)) {
+		return -ENOMEM;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1445: FILE: kernel/power/swsusp.c:1665:
+^Icollide_bitmap_free(bitmap);^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1447: FILE: kernel/power/swsusp.c:1667:
+	printk("     done\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1463: FILE: kernel/power/swsusp.c:1675:
+	printk(" %d done.\n", nr_copy_pages);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1484: FILE: kernel/power/swsusp.c:1689:
+^Ipr_debug("read_one_pagedir: %p, %d, %lu, %p\n", $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_one_pagedir', this function's name, in a string
#1484: FILE: kernel/power/swsusp.c:1689:
+	pr_debug("read_one_pagedir: %p, %d, %lu, %p\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1485: FILE: kernel/power/swsusp.c:1690:
+	pr_debug("read_one_pagedir: %p, %d, %lu, %p\n", 
+			pgdir, i, offset, (void*)next);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1485: FILE: kernel/power/swsusp.c:1690:
+			pgdir, i, offset, (void*)next);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1486: FILE: kernel/power/swsusp.c:1691:
+	if ((error = bio_read_page(offset, (void *)pgdir))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1486: FILE: kernel/power/swsusp.c:1691:
+	if ((error = bio_read_page(offset, (void *)pgdir))) {
+		return error;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1505: FILE: kernel/power/swsusp.c:1700:
+ * reading pagedir from swap device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1512: FILE: kernel/power/swsusp.c:1707:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1517: FILE: kernel/power/swsusp.c:1712:
+	printk("pmdisk: Reading pagedir (%d Pages)\n",n);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1517: FILE: kernel/power/swsusp.c:1712:
+	printk("pmdisk: Reading pagedir (%d Pages)\n",n);
 	                                             ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1520: FILE: kernel/power/swsusp.c:1715:
+		if (error) break;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1523: FILE: kernel/power/swsusp.c:1718:
+	BUG_ON(i != n);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1524: FILE: kernel/power/swsusp.c:1719:
+^Iif (error)^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1526: FILE: kernel/power/swsusp.c:1721:
+^I$

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#1585: FILE: kernel/sysctl.c:808:
+		.extra1		= &zero,

Commit d91bff3011cf ("proc/sysctl: add shared variables for range
check") added some shared const variables to be used instead of a local
copy in each source file.

Consider replacing the sysctl range checking value with the shared
one in include/linux/sysctl.h.  The following conversion scheme may
be used::

  &zero     ->  SYSCTL_ZERO
  &one      ->  SYSCTL_ONE
  &int_max  ->  SYSCTL_INT_MAX

See:

  1. https://lore.kernel.org/lkml/20190430180111.10688-1-mcroce@redhat.com/
  2. https://lore.kernel.org/lkml/20190531131422.14970-1-mcroce@redhat.com/

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1597: FILE: include/linux/sysctl.h:173:
+	VM_SWSUSP_PAGECACHE=29,	/* Enable/Disable Suspend PageCaches */
 	                   ^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#1602: FILE: include/linux/sysctl.h:175:
Hu Gang / Steve

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227829.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 123 errors, 91 warnings, 44 checks, 1496 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227829.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
