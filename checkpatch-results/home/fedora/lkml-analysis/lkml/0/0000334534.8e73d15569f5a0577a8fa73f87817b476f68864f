WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
diff -urN linux-2.6/arch/s390/kernel/compat_ioctl.c linux-2.6-s390/arch/s390/kernel/compat_ioctl.c

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: arch/s390/kernel/compat_linux.c:1561:
+        char _f[8];$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: arch/s390/kernel/compat_linux.c:1561:
+        char _f[8];$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#67: FILE: arch/s390/kernel/compat_linux.c:1586:
+	err |= __put_user (s.totalhigh, &info->totalhigh);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#68: FILE: arch/s390/kernel/compat_linux.c:1587:
+	err |= __put_user (s.freehigh, &info->freehigh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#69: FILE: arch/s390/kernel/compat_linux.c:1588:
+	err |= __put_user (s.mem_unit, &info->mem_unit);

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: arch/s390/kernel/compat_linux.c:2791:
+        return do_fork(clone_flags & ~CLONE_IDLETASK, newsp, &regs, 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: arch/s390/kernel/compat_linux.c:2791:
+        return do_fork(clone_flags & ~CLONE_IDLETASK, newsp, &regs, 0,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#106: FILE: arch/s390/kernel/compat_linux.c:2795:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#113: FILE: arch/s390/kernel/compat_signal.c:565:
 		switch (regs->gprs[2]) {
+			case -ERESTART_RESTARTBLOCK:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#129: FILE: arch/s390/kernel/ptrace.c:324:
+		} else if (addr < (addr_t) &dummy32->regs.acrs[0]) {

CHECK:SPACING: No space is necessary after a cast
#133: FILE: arch/s390/kernel/ptrace.c:328:
+		} else if (addr < (addr_t) &dummy32->regs.orig_gpr2) {

CHECK:SPACING: No space is necessary after a cast
#134: FILE: arch/s390/kernel/ptrace.c:329:
+			offset = PT_ACR0 + addr - (addr_t) &dummy32->regs.acrs;

CHECK:SPACING: No space is necessary after a cast
#135: FILE: arch/s390/kernel/ptrace.c:330:
+			tmp = *(__u32*)((addr_t) __KSTK_PTREGS(child) + offset);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#135: FILE: arch/s390/kernel/ptrace.c:330:
+			tmp = *(__u32*)((addr_t) __KSTK_PTREGS(child) + offset);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#139: FILE: arch/s390/kernel/ptrace.c:334:
+			tmp = *(__u32*)((addr_t) __KSTK_PTREGS(child) + offset);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#139: FILE: arch/s390/kernel/ptrace.c:334:
+			tmp = *(__u32*)((addr_t) __KSTK_PTREGS(child) + offset);

CHECK:SPACING: No space is necessary after a cast
#149: FILE: arch/s390/kernel/ptrace.c:399:
+		} else if (addr < (addr_t) &dummy32->regs.acrs[0]) {

CHECK:SPACING: No space is necessary after a cast
#153: FILE: arch/s390/kernel/ptrace.c:403:
+		} else if (addr < (addr_t) &dummy32->regs.orig_gpr2) {

CHECK:SPACING: No space is necessary after a cast
#154: FILE: arch/s390/kernel/ptrace.c:404:
+			offset = PT_ACR0 + addr - (addr_t) &dummy32->regs.acrs;

CHECK:SPACING: No space is necessary after a cast
#155: FILE: arch/s390/kernel/ptrace.c:405:
+			*(__u32*)((addr_t) __KSTK_PTREGS(child) + offset) = tmp;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#155: FILE: arch/s390/kernel/ptrace.c:405:
+			*(__u32*)((addr_t) __KSTK_PTREGS(child) + offset) = tmp;

CHECK:SPACING: No space is necessary after a cast
#158: FILE: arch/s390/kernel/ptrace.c:408:
+			*(__u32*)((addr_t) __KSTK_PTREGS(child) + offset) = tmp;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#158: FILE: arch/s390/kernel/ptrace.c:408:
+			*(__u32*)((addr_t) __KSTK_PTREGS(child) + offset) = tmp;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000334534.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 6 warnings, 11 checks, 106 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000334534.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
