CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: include/asm-i386/uaccess.h:65:
+extern int FASTCALL(__fixmap_access_ok(unsigned long, unsigned long, int));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#72: FILE: include/asm-i386/uaccess.h:65:
+extern int FASTCALL(__fixmap_access_ok(unsigned long, unsigned long, int));

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#72: FILE: include/asm-i386/uaccess.h:65:
+extern int FASTCALL(__fixmap_access_ok(unsigned long, unsigned long, int));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#72: FILE: include/asm-i386/uaccess.h:65:
+extern int FASTCALL(__fixmap_access_ok(unsigned long, unsigned long, int));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#82: FILE: include/asm-i386/uaccess.h:88:
+#define access_ok(type,addr,size) (__range_ok(addr,size) == 0 || \
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#82: FILE: include/asm-i386/uaccess.h:88:
+#define access_ok(type,addr,size) (__range_ok(addr,size) == 0 || \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#82: FILE: include/asm-i386/uaccess.h:88:
+#define access_ok(type,addr,size) (__range_ok(addr,size) == 0 || \
                                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#82: FILE: include/asm-i386/uaccess.h:88:
+#define access_ok(type,addr,size) (__range_ok(addr,size) == 0 || \
+				   __fixmap_access_ok((unsigned long)(addr), \
+						      (size), (type)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'size' - possible side-effects?
#82: FILE: include/asm-i386/uaccess.h:88:
+#define access_ok(type,addr,size) (__range_ok(addr,size) == 0 || \
+				   __fixmap_access_ok((unsigned long)(addr), \
+						      (size), (type)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#89: FILE: include/asm-i386/uaccess.h:94:
+#define access_ok(type,addr,size) ((__range_ok(addr,size) == 0) ? \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#89: FILE: include/asm-i386/uaccess.h:94:
+#define access_ok(type,addr,size) ((__range_ok(addr,size) == 0) ? \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#89: FILE: include/asm-i386/uaccess.h:94:
+#define access_ok(type,addr,size) ((__range_ok(addr,size) == 0) ? \
                                                    ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#89: FILE: include/asm-i386/uaccess.h:94:
+#define access_ok(type,addr,size) ((__range_ok(addr,size) == 0) ? \
 			 ((type) == VERIFY_READ || boot_cpu_data.wp_works_ok || \
+			  __verify_write((void *)(addr),(size))) : \
+			  __fixmap_access_ok((unsigned long)(addr),size,type))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'size' - possible side-effects?
#89: FILE: include/asm-i386/uaccess.h:94:
+#define access_ok(type,addr,size) ((__range_ok(addr,size) == 0) ? \
 			 ((type) == VERIFY_READ || boot_cpu_data.wp_works_ok || \
+			  __verify_write((void *)(addr),(size))) : \
+			  __fixmap_access_ok((unsigned long)(addr),size,type))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#92: FILE: include/asm-i386/uaccess.h:96:
+			  __verify_write((void *)(addr),(size))) : \
 			                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#93: FILE: include/asm-i386/uaccess.h:97:
+			  __fixmap_access_ok((unsigned long)(addr),size,type))
 			                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#93: FILE: include/asm-i386/uaccess.h:97:
+			  __fixmap_access_ok((unsigned long)(addr),size,type))
 			                                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#190: FILE: mm/memory.c:680:
+	pte_t *pte;
+	pgd = pgd_offset_k(pg);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#211: FILE: mm/memory.c:701:
+	unsigned long limit = addr + size;
+	if (limit < addr)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#223: FILE: mm/memory.c:713:
+EXPORT_SYMBOL(__fixmap_access_ok);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#226: FILE: mm/memory.c:716:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000371873.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 6 warnings, 6 checks, 176 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000371873.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
