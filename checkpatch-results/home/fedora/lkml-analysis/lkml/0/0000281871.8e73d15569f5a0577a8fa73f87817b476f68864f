WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
diff -ruN linux-2.6.6-mm2/arch/ppc/Kconfig linux-2.6.6-mm2.perfctr-2.7.2.ppc/arch/ppc/Kconfig

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#98: FILE: drivers/perfctr/ppc.c:1:
+/* $Id: ppc.c,v 1.5 2004/05/13 23:32:49 mikpe Exp $

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#98: FILE: drivers/perfctr/ppc.c:1:
+/* $Id: ppc.c,v 1.5 2004/05/13 23:32:49 mikpe Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/perfctr/ppc.c:34:
+    PM_604,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: drivers/perfctr/ppc.c:35:
+    PM_604e,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: drivers/perfctr/ppc.c:36:
+    PM_750,^I/* XXX: Minor event set diffs between IBM and Moto. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: drivers/perfctr/ppc.c:37:
+    PM_7400,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: drivers/perfctr/ppc.c:38:
+    PM_7450,$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#137: FILE: drivers/perfctr/ppc.c:40:
+};
+static enum pm_type pm_type;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <MMCR0_PMCjCE>
#172: FILE: drivers/perfctr/ppc.c:75:
+#define MMCR0_PMCjCE		0x00004000 /* Enable event on PMC2-PMC6 overflow.

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space prohibited after that open parenthesis '('
#363: FILE: drivers/perfctr/ppc.c:266:
+	switch( pmc ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#363: FILE: drivers/perfctr/ppc.c:266:
+	switch( pmc ) {

ERROR:SPACING: space required before the open parenthesis '('
#363: FILE: drivers/perfctr/ppc.c:266:
+	switch( pmc ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#386: FILE: drivers/perfctr/ppc.c:289:
+	if( perfctr_cstatus_has_tsc(cstatus) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#386: FILE: drivers/perfctr/ppc.c:289:
+	if( perfctr_cstatus_has_tsc(cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#386: FILE: drivers/perfctr/ppc.c:289:
+	if( perfctr_cstatus_has_tsc(cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#389: FILE: drivers/perfctr/ppc.c:292:
+	for(i = 0; i < nrctrs; ++i) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#391: FILE: drivers/perfctr/ppc.c:294:
+		unsigned int pmc = state->pmc[i].map;
+		ctrs->pmc[i] = read_pmc(pmc);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#394: FILE: drivers/perfctr/ppc.c:297:
+	if( state->cstatus & (1<<30) ) {
 	                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#394: FILE: drivers/perfctr/ppc.c:297:
+	if( state->cstatus & (1<<30) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#394: FILE: drivers/perfctr/ppc.c:297:
+	if( state->cstatus & (1<<30) ) {

ERROR:SPACING: space required before the open parenthesis '('
#394: FILE: drivers/perfctr/ppc.c:297:
+	if( state->cstatus & (1<<30) ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#396: FILE: drivers/perfctr/ppc.c:299:
+		unsigned int mmcr0 = mfspr(SPRN_MMCR0);
+		state->ppc_mmcr[0] = mmcr0;

ERROR:SPACING: space prohibited after that open parenthesis '('
#403: FILE: drivers/perfctr/ppc.c:306:
+	switch( pmc ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#403: FILE: drivers/perfctr/ppc.c:306:
+	switch( pmc ) {

ERROR:SPACING: space required before the open parenthesis '('
#403: FILE: drivers/perfctr/ppc.c:306:
+	switch( pmc ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#422: FILE: drivers/perfctr/ppc.c:325:
+	switch( pm_type ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#422: FILE: drivers/perfctr/ppc.c:325:
+	switch( pm_type ) {

ERROR:SPACING: space required before the open parenthesis '('
#422: FILE: drivers/perfctr/ppc.c:325:
+	switch( pm_type ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#442: FILE: drivers/perfctr/ppc.c:345:
+	if( state->control.nrictrs || nrctrs > nr_pmcs )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#442: FILE: drivers/perfctr/ppc.c:345:
+	if( state->control.nrictrs || nrctrs > nr_pmcs )

ERROR:SPACING: space required before the open parenthesis '('
#442: FILE: drivers/perfctr/ppc.c:345:
+	if( state->control.nrictrs || nrctrs > nr_pmcs )

WARNING:SIZEOF_PARENTHESIS: sizeof evntsel should be sizeof(evntsel)
#446: FILE: drivers/perfctr/ppc.c:349:
+	memset(evntsel, 0, sizeof evntsel);

ERROR:SPACING: space required before the open parenthesis '('
#447: FILE: drivers/perfctr/ppc.c:350:
+	for(i = 0; i < nrctrs; ++i) {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#450: FILE: drivers/perfctr/ppc.c:353:
+		if( pmc >= nr_pmcs || (pmc_mask & (1<<pmc)) )
 		                                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#450: FILE: drivers/perfctr/ppc.c:353:
+		if( pmc >= nr_pmcs || (pmc_mask & (1<<pmc)) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#450: FILE: drivers/perfctr/ppc.c:353:
+		if( pmc >= nr_pmcs || (pmc_mask & (1<<pmc)) )

ERROR:SPACING: space required before the open parenthesis '('
#450: FILE: drivers/perfctr/ppc.c:353:
+		if( pmc >= nr_pmcs || (pmc_mask & (1<<pmc)) )

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#452: FILE: drivers/perfctr/ppc.c:355:
+		pmc_mask |= (1<<pmc);
 		              ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#455: FILE: drivers/perfctr/ppc.c:358:
+		if( evntsel[pmc] > pmc_max_event(pmc) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#455: FILE: drivers/perfctr/ppc.c:358:
+		if( evntsel[pmc] > pmc_max_event(pmc) )

ERROR:SPACING: space required before the open parenthesis '('
#455: FILE: drivers/perfctr/ppc.c:358:
+		if( evntsel[pmc] > pmc_max_event(pmc) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#459: FILE: drivers/perfctr/ppc.c:362:
+	switch( pm_type ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#459: FILE: drivers/perfctr/ppc.c:362:
+	switch( pm_type ) {

ERROR:SPACING: space required before the open parenthesis '('
#459: FILE: drivers/perfctr/ppc.c:362:
+	switch( pm_type ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#461: FILE: drivers/perfctr/ppc.c:364:
+		if( state->control.ppc.mmcr2 & MMCR2_RESERVED )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#461: FILE: drivers/perfctr/ppc.c:364:
+		if( state->control.ppc.mmcr2 & MMCR2_RESERVED )

ERROR:SPACING: space required before the open parenthesis '('
#461: FILE: drivers/perfctr/ppc.c:364:
+		if( state->control.ppc.mmcr2 & MMCR2_RESERVED )

ERROR:SPACING: space prohibited after that open parenthesis '('
#466: FILE: drivers/perfctr/ppc.c:369:
+		if( state->control.ppc.mmcr2 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#466: FILE: drivers/perfctr/ppc.c:369:
+		if( state->control.ppc.mmcr2 )

ERROR:SPACING: space required before the open parenthesis '('
#466: FILE: drivers/perfctr/ppc.c:369:
+		if( state->control.ppc.mmcr2 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#471: FILE: drivers/perfctr/ppc.c:374:
+	if( state->control.ppc.mmcr0 & MMCR0_RESERVED )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#471: FILE: drivers/perfctr/ppc.c:374:
+	if( state->control.ppc.mmcr0 & MMCR0_RESERVED )

ERROR:SPACING: space required before the open parenthesis '('
#471: FILE: drivers/perfctr/ppc.c:374:
+	if( state->control.ppc.mmcr0 & MMCR0_RESERVED )

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#474: FILE: drivers/perfctr/ppc.c:377:
+			      | (evntsel[0] << (31-25))
 			                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#475: FILE: drivers/perfctr/ppc.c:378:
+			      | (evntsel[1] << (31-31)));
 			                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#477: FILE: drivers/perfctr/ppc.c:380:
+	state->ppc_mmcr[1] = ((  evntsel[2] << (31-4))
 	                                          ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#477: FILE: drivers/perfctr/ppc.c:380:
+	state->ppc_mmcr[1] = ((  evntsel[2] << (31-4))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#478: FILE: drivers/perfctr/ppc.c:381:
+			      | (evntsel[3] << (31-9))
 			                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#479: FILE: drivers/perfctr/ppc.c:382:
+			      | (evntsel[4] << (31-14))
 			                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#480: FILE: drivers/perfctr/ppc.c:383:
+			      | (evntsel[5] << (31-20)));
 			                          ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#489: FILE: drivers/perfctr/ppc.c:392:
+	switch( pm_type ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#489: FILE: drivers/perfctr/ppc.c:392:
+	switch( pm_type ) {

ERROR:SPACING: space required before the open parenthesis '('
#489: FILE: drivers/perfctr/ppc.c:392:
+	switch( pm_type ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#492: FILE: drivers/perfctr/ppc.c:395:
+		if( state->ppc_mmcr[0] & (MMCR0_FCECE | MMCR0_TRIGGER) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#492: FILE: drivers/perfctr/ppc.c:395:
+		if( state->ppc_mmcr[0] & (MMCR0_FCECE | MMCR0_TRIGGER) )

ERROR:SPACING: space required before the open parenthesis '('
#492: FILE: drivers/perfctr/ppc.c:395:
+		if( state->ppc_mmcr[0] & (MMCR0_FCECE | MMCR0_TRIGGER) )

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#493: FILE: drivers/perfctr/ppc.c:396:
+			state->cstatus |= (1<<30);
 			                    ^

WARNING:DEFAULT_NO_BREAK: switch default: should use break
#494: FILE: drivers/perfctr/ppc.c:397:
+	default:
+		;

switch default case is sometimes written as "default:;".  This can
cause new cases added below default to be defective.

A "break;" should be added after empty default statement to avoid
unwanted fallthrough.

ERROR:SPACING: space prohibited after that open parenthesis '('
#519: FILE: drivers/perfctr/ppc.c:422:
+	if( cache->k1.id == state->k1.id ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#519: FILE: drivers/perfctr/ppc.c:422:
+	if( cache->k1.id == state->k1.id ) {

ERROR:SPACING: space required before the open parenthesis '('
#519: FILE: drivers/perfctr/ppc.c:422:
+	if( cache->k1.id == state->k1.id ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#519: FILE: drivers/perfctr/ppc.c:422:
+	if( cache->k1.id == state->k1.id ) {
+		return;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#536: FILE: drivers/perfctr/ppc.c:439:
+	if( value != cache->ppc_mmcr[2] ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#536: FILE: drivers/perfctr/ppc.c:439:
+	if( value != cache->ppc_mmcr[2] ) {

ERROR:SPACING: space required before the open parenthesis '('
#536: FILE: drivers/perfctr/ppc.c:439:
+	if( value != cache->ppc_mmcr[2] ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#541: FILE: drivers/perfctr/ppc.c:444:
+	if( value != cache->ppc_mmcr[1] ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#541: FILE: drivers/perfctr/ppc.c:444:
+	if( value != cache->ppc_mmcr[1] ) {

ERROR:SPACING: space required before the open parenthesis '('
#541: FILE: drivers/perfctr/ppc.c:444:
+	if( value != cache->ppc_mmcr[1] ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#546: FILE: drivers/perfctr/ppc.c:449:
+	if( value != cache->ppc_mmcr[0] ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#546: FILE: drivers/perfctr/ppc.c:449:
+	if( value != cache->ppc_mmcr[0] ) {

ERROR:SPACING: space required before the open parenthesis '('
#546: FILE: drivers/perfctr/ppc.c:449:
+	if( value != cache->ppc_mmcr[0] ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#555: FILE: drivers/perfctr/ppc.c:458:
+	switch( pm_type ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#555: FILE: drivers/perfctr/ppc.c:458:
+	switch( pm_type ) {

ERROR:SPACING: space required before the open parenthesis '('
#555: FILE: drivers/perfctr/ppc.c:458:
+	switch( pm_type ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#566: FILE: drivers/perfctr/ppc.c:469:
+	switch( pm_type ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#566: FILE: drivers/perfctr/ppc.c:469:
+	switch( pm_type ) {

ERROR:SPACING: space required before the open parenthesis '('
#566: FILE: drivers/perfctr/ppc.c:469:
+	switch( pm_type ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#608: FILE: drivers/perfctr/ppc.c:511:
+/* Call perfctr_cpu_ireload() just before perfctr_cpu_resume() to
+   bypass internal caching and force a reload if the I-mode PMCs. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#608: FILE: drivers/perfctr/ppc.c:511:
+   bypass internal caching and force a reload if the I-mode PMCs. */

ERROR:SPACING: space required before the open parenthesis '('
#627: FILE: drivers/perfctr/ppc.c:530:
+	for(pmc_mask = 0; pmc < nrctrs; ++pmc) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#628: FILE: drivers/perfctr/ppc.c:531:
+		if( (int)state->pmc[pmc].start < 0 ) { /* PPC-specific */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#628: FILE: drivers/perfctr/ppc.c:531:
+		if( (int)state->pmc[pmc].start < 0 ) { /* PPC-specific */

ERROR:SPACING: space required before the open parenthesis '('
#628: FILE: drivers/perfctr/ppc.c:531:
+		if( (int)state->pmc[pmc].start < 0 ) { /* PPC-specific */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#636: FILE: drivers/perfctr/ppc.c:539:
+	/* XXX: HW cleared MMCR0[ENINT]. We presumably cleared the entire
+	   MMCR0, so the re-enable occurs automatically later, no? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#636: FILE: drivers/perfctr/ppc.c:539:
+	   MMCR0, so the re-enable occurs automatically later, no? */

ERROR:SPACING: space required before the open parenthesis '('
#646: FILE: drivers/perfctr/ppc.c:549:
+	for(; i < nrctrs; ++i)

ERROR:SPACING: space prohibited after that open parenthesis '('
#647: FILE: drivers/perfctr/ppc.c:550:
+		if( state->control.ireset[i] < 0 )	/* PPC-specific */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#647: FILE: drivers/perfctr/ppc.c:550:
+		if( state->control.ireset[i] < 0 )	/* PPC-specific */

ERROR:SPACING: space required before the open parenthesis '('
#647: FILE: drivers/perfctr/ppc.c:550:
+		if( state->control.ireset[i] < 0 )	/* PPC-specific */

ERROR:SPACING: space required before the open parenthesis '('
#658: FILE: drivers/perfctr/ppc.c:561:
+	for(i = perfctr_cstatus_nractrs(cstatus); i < nrctrs; ++i)

ERROR:SPACING: space prohibited after that open parenthesis '('
#682: FILE: drivers/perfctr/ppc.c:585:
+	if( !(perfctr_info.cpu_features & PERFCTR_FEATURE_PCINT)

ERROR:SPACING: space required before the open parenthesis '('
#682: FILE: drivers/perfctr/ppc.c:585:
+	if( !(perfctr_info.cpu_features & PERFCTR_FEATURE_PCINT)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#683: FILE: drivers/perfctr/ppc.c:586:
+	if( !(perfctr_info.cpu_features & PERFCTR_FEATURE_PCINT)
+	    && state->control.nrictrs )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#683: FILE: drivers/perfctr/ppc.c:586:
+	    && state->control.nrictrs )

ERROR:SPACING: space prohibited after that open parenthesis '('
#687: FILE: drivers/perfctr/ppc.c:590:
+	if( err < 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#687: FILE: drivers/perfctr/ppc.c:590:
+	if( err < 0 )

ERROR:SPACING: space required before the open parenthesis '('
#687: FILE: drivers/perfctr/ppc.c:590:
+	if( err < 0 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#690: FILE: drivers/perfctr/ppc.c:593:
+	if( err < 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#690: FILE: drivers/perfctr/ppc.c:593:
+	if( err < 0 )

ERROR:SPACING: space required before the open parenthesis '('
#690: FILE: drivers/perfctr/ppc.c:593:
+	if( err < 0 )

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#704: FILE: drivers/perfctr/ppc.c:607:
+	if( perfctr_cstatus_has_ictrs(state->cstatus) )
+	    perfctr_cpu_isuspend(state);

ERROR:SPACING: space prohibited after that open parenthesis '('
#704: FILE: drivers/perfctr/ppc.c:607:
+	if( perfctr_cstatus_has_ictrs(state->cstatus) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#704: FILE: drivers/perfctr/ppc.c:607:
+	if( perfctr_cstatus_has_ictrs(state->cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#704: FILE: drivers/perfctr/ppc.c:607:
+	if( perfctr_cstatus_has_ictrs(state->cstatus) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#708: FILE: drivers/perfctr/ppc.c:611:
+	if( perfctr_cstatus_has_tsc(cstatus) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#708: FILE: drivers/perfctr/ppc.c:611:
+	if( perfctr_cstatus_has_tsc(cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#708: FILE: drivers/perfctr/ppc.c:611:
+	if( perfctr_cstatus_has_tsc(cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#711: FILE: drivers/perfctr/ppc.c:614:
+	for(i = 0; i < nractrs; ++i)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#717: FILE: drivers/perfctr/ppc.c:620:
+	if( perfctr_cstatus_has_ictrs(state->cstatus) )
+	    perfctr_cpu_iresume(state);

ERROR:SPACING: space prohibited after that open parenthesis '('
#717: FILE: drivers/perfctr/ppc.c:620:
+	if( perfctr_cstatus_has_ictrs(state->cstatus) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#717: FILE: drivers/perfctr/ppc.c:620:
+	if( perfctr_cstatus_has_ictrs(state->cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#717: FILE: drivers/perfctr/ppc.c:620:
+	if( perfctr_cstatus_has_ictrs(state->cstatus) )

WARNING:LINE_SPACING: Missing a blank line after declarations
#724: FILE: drivers/perfctr/ppc.c:627:
+		unsigned int i, cstatus, nrctrs;
+		perfctr_cpu_read_counters(state, &now);

ERROR:SPACING: space prohibited after that open parenthesis '('
#726: FILE: drivers/perfctr/ppc.c:629:
+		if( perfctr_cstatus_has_tsc(cstatus) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#726: FILE: drivers/perfctr/ppc.c:629:
+		if( perfctr_cstatus_has_tsc(cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#726: FILE: drivers/perfctr/ppc.c:629:
+		if( perfctr_cstatus_has_tsc(cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#729: FILE: drivers/perfctr/ppc.c:632:
+		for(i = 0; i < nrctrs; ++i)

ERROR:SPACING: space prohibited after that open parenthesis '('
#742: FILE: drivers/perfctr/ppc.c:645:
+	if( perfctr_cstatus_has_tsc(cstatus) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#742: FILE: drivers/perfctr/ppc.c:645:
+	if( perfctr_cstatus_has_tsc(cstatus) ) {

ERROR:SPACING: space required before the open parenthesis '('
#742: FILE: drivers/perfctr/ppc.c:645:
+	if( perfctr_cstatus_has_tsc(cstatus) ) {

ERROR:SPACING: space required before the open parenthesis '('
#747: FILE: drivers/perfctr/ppc.c:650:
+	for(i = 0; i < nractrs; ++i) {

WARNING:SIZEOF_PARENTHESIS: sizeof *cache should be sizeof(*cache)
#758: FILE: drivers/perfctr/ppc.c:661:
+	memset(cache, 0, sizeof *cache);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#783: FILE: drivers/perfctr/ppc.c:686:
+/* These are the known bus-to-core ratios, indexed by PLL_CFG.
+   Multiplied by 2 since half-multiplier steps are present. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#783: FILE: drivers/perfctr/ppc.c:686:
+   Multiplied by 2 since half-multiplier steps are present. */

ERROR:SPACING: space prohibited after that open parenthesis '('
#826: FILE: drivers/perfctr/ppc.c:729:
+	switch( pll_type ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#826: FILE: drivers/perfctr/ppc.c:729:
+	switch( pll_type ) {

ERROR:SPACING: space required before the open parenthesis '('
#826: FILE: drivers/perfctr/ppc.c:729:
+	switch( pll_type ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#836: FILE: drivers/perfctr/ppc.c:739:
+		switch( (hid1 >> 16) & 0x3 ) { /* HID1[PI0,PS] */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#836: FILE: drivers/perfctr/ppc.c:739:
+		switch( (hid1 >> 16) & 0x3 ) { /* HID1[PI0,PS] */

ERROR:SPACING: space required before the open parenthesis '('
#836: FILE: drivers/perfctr/ppc.c:739:
+		switch( (hid1 >> 16) & 0x3 ) { /* HID1[PI0,PS] */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#838: FILE: drivers/perfctr/ppc.c:741:
+			shift = 31-4;	/* access HID1[PCE] */
 			          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#841: FILE: drivers/perfctr/ppc.c:744:
+			shift = 31-20;	/* access HID1[PC0] */
 			          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#844: FILE: drivers/perfctr/ppc.c:747:
+			shift = 31-28;	/* access HID1[PC1] */
 			          ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#868: FILE: drivers/perfctr/ppc.c:771:
+	if( !ratio )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#868: FILE: drivers/perfctr/ppc.c:771:
+	if( !ratio )

ERROR:SPACING: space required before the open parenthesis '('
#868: FILE: drivers/perfctr/ppc.c:771:
+	if( !ratio )

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#869: FILE: drivers/perfctr/ppc.c:772:
+		printk(KERN_WARNING "perfctr/%s: unknown PLL_CFG 0x%x\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#871: FILE: drivers/perfctr/ppc.c:774:
+	return (4/2) * ratio;
 	         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#877: FILE: drivers/perfctr/ppc.c:780:
+	unsigned int tb_to_core = tb_to_core_ratio(pll_type);
+	perfctr_info.tsc_to_cpu_mult = tb_to_core;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#878: FILE: drivers/perfctr/ppc.c:781:
+	return tb_ticks_per_jiffy * tb_to_core * (HZ/10) / (1000/10);
 	                                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#878: FILE: drivers/perfctr/ppc.c:781:
+	return tb_ticks_per_jiffy * tb_to_core * (HZ/10) / (1000/10);
 	                                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#900: FILE: drivers/perfctr/ppc.c:803:
+	for(;;) {		/* for each line */

ERROR:SPACING: space prohibited after that open parenthesis '('
#901: FILE: drivers/perfctr/ppc.c:804:
+		if( strncmp(p, "core ", 5) == 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#901: FILE: drivers/perfctr/ppc.c:804:
+		if( strncmp(p, "core ", 5) == 0 )

ERROR:SPACING: space required before the open parenthesis '('
#901: FILE: drivers/perfctr/ppc.c:804:
+		if( strncmp(p, "core ", 5) == 0 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#904: FILE: drivers/perfctr/ppc.c:807:
+			if( strncmp(p, "clock\t", 6) != 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#904: FILE: drivers/perfctr/ppc.c:807:
+			if( strncmp(p, "clock\t", 6) != 0 )

ERROR:SPACING: space required before the open parenthesis '('
#904: FILE: drivers/perfctr/ppc.c:807:
+			if( strncmp(p, "clock\t", 6) != 0 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#907: FILE: drivers/perfctr/ppc.c:810:
+			while( *p == '\t' )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#907: FILE: drivers/perfctr/ppc.c:810:
+			while( *p == '\t' )

ERROR:SPACING: space required before the open parenthesis '('
#907: FILE: drivers/perfctr/ppc.c:810:
+			while( *p == '\t' )

ERROR:SPACING: space prohibited after that open parenthesis '('
#909: FILE: drivers/perfctr/ppc.c:812:
+			if( *p != ':' )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#909: FILE: drivers/perfctr/ppc.c:812:
+			if( *p != ':' )

ERROR:SPACING: space required before the open parenthesis '('
#909: FILE: drivers/perfctr/ppc.c:812:
+			if( *p != ':' )

ERROR:SPACING: space prohibited after that open parenthesis '('
#913: FILE: drivers/perfctr/ppc.c:816:
+			} while( *p == ' ' );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#913: FILE: drivers/perfctr/ppc.c:816:
+			} while( *p == ' ' );

ERROR:SPACING: space required before the open parenthesis '('
#913: FILE: drivers/perfctr/ppc.c:816:
+			} while( *p == ' ' );

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#914: FILE: drivers/perfctr/ppc.c:817:
+			mhz = simple_strtoul(p, 0, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:SPACING: space prohibited after that open parenthesis '('
#915: FILE: drivers/perfctr/ppc.c:818:
+			if( mhz )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#915: FILE: drivers/perfctr/ppc.c:818:
+			if( mhz )

ERROR:SPACING: space required before the open parenthesis '('
#915: FILE: drivers/perfctr/ppc.c:818:
+			if( mhz )

ERROR:SPACING: space prohibited after that open parenthesis '('
#917: FILE: drivers/perfctr/ppc.c:820:
+		} while( 0 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#917: FILE: drivers/perfctr/ppc.c:820:
+		} while( 0 );

ERROR:SPACING: space required before the open parenthesis '('
#917: FILE: drivers/perfctr/ppc.c:820:
+		} while( 0 );

ERROR:SPACING: space required before the open parenthesis '('
#918: FILE: drivers/perfctr/ppc.c:821:
+		for(;;) {	/* skip to next line */

ERROR:SPACING: space prohibited after that open parenthesis '('
#919: FILE: drivers/perfctr/ppc.c:822:
+			switch( *p++ ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#919: FILE: drivers/perfctr/ppc.c:822:
+			switch( *p++ ) {

ERROR:SPACING: space required before the open parenthesis '('
#919: FILE: drivers/perfctr/ppc.c:822:
+			switch( *p++ ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#939: FILE: drivers/perfctr/ppc.c:842:
+	if( khz )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#939: FILE: drivers/perfctr/ppc.c:842:
+	if( khz )

ERROR:SPACING: space required before the open parenthesis '('
#939: FILE: drivers/perfctr/ppc.c:842:
+	if( khz )

WARNING:SIZEOF_PARENTHESIS: sizeof m should be sizeof(m)
#942: FILE: drivers/perfctr/ppc.c:845:
+	memset(&m, 0, sizeof m);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#944: FILE: drivers/perfctr/ppc.c:847:
+	m.size = (sizeof buf)-1;
 	                     ^

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#944: FILE: drivers/perfctr/ppc.c:847:
+	m.size = (sizeof buf)-1;

ERROR:SPACING: space prohibited after that open parenthesis '('
#947: FILE: drivers/perfctr/ppc.c:850:
+	if( ppc_md.show_percpuinfo != 0 &&

ERROR:SPACING: space required before the open parenthesis '('
#947: FILE: drivers/perfctr/ppc.c:850:
+	if( ppc_md.show_percpuinfo != 0 &&

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#947: FILE: drivers/perfctr/ppc.c:850:
+	if( ppc_md.show_percpuinfo != 0 &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#948: FILE: drivers/perfctr/ppc.c:851:
+	if( ppc_md.show_percpuinfo != 0 &&
+	    ppc_md.show_percpuinfo(&m, 0) == 0 &&

ERROR:SPACING: space prohibited before that close parenthesis ')'
#949: FILE: drivers/perfctr/ppc.c:852:
+	    (khz = parse_clock_khz(&m)) != 0 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#953: FILE: drivers/perfctr/ppc.c:856:
+	if( ppc_md.show_cpuinfo != 0 &&

ERROR:SPACING: space required before the open parenthesis '('
#953: FILE: drivers/perfctr/ppc.c:856:
+	if( ppc_md.show_cpuinfo != 0 &&

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#953: FILE: drivers/perfctr/ppc.c:856:
+	if( ppc_md.show_cpuinfo != 0 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#954: FILE: drivers/perfctr/ppc.c:857:
+	if( ppc_md.show_cpuinfo != 0 &&
+	    ppc_md.show_cpuinfo(&m) == 0 &&

ERROR:SPACING: space prohibited before that close parenthesis ')'
#955: FILE: drivers/perfctr/ppc.c:858:
+	    (khz = parse_clock_khz(&m)) != 0 )

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#958: FILE: drivers/perfctr/ppc.c:861:
+	printk(KERN_WARNING "perfctr/%s: unable to determine CPU speed\n",

ERROR:SPACING: space prohibited after that open parenthesis '('
#972: FILE: drivers/perfctr/ppc.c:875:
+	switch( PVR_VER(pvr) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#972: FILE: drivers/perfctr/ppc.c:875:
+	switch( PVR_VER(pvr) ) {

ERROR:SPACING: space required before the open parenthesis '('
#972: FILE: drivers/perfctr/ppc.c:875:
+	switch( PVR_VER(pvr) ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1013: FILE: drivers/perfctr/ppc.c:916:
+		printk(KERN_WARNING "perfctr/%s: unknown PowerPC with "

WARNING:SPLIT_STRING: quoted string split across lines
#1014: FILE: drivers/perfctr/ppc.c:917:
+		printk(KERN_WARNING "perfctr/%s: unknown PowerPC with "
+		       "PVR 0x%08x -- bailing out\n", __FILE__, pvr);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1028: FILE: drivers/perfctr/ppc.c:931:
+	/* PREEMPT note: when called via smp_call_function(),
+	   this is in IRQ context with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1028: FILE: drivers/perfctr/ppc.c:931:
+	   this is in IRQ context with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1035: FILE: drivers/perfctr/ppc.c:938:
+	/* PREEMPT note: when called via smp_call_function(),
+	   this is in IRQ context with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1035: FILE: drivers/perfctr/ppc.c:938:
+	   this is in IRQ context with preemption disabled. */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1048: FILE: drivers/perfctr/ppc.c:951:
+	if( err )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1048: FILE: drivers/perfctr/ppc.c:951:
+	if( err )

ERROR:SPACING: space required before the open parenthesis '('
#1048: FILE: drivers/perfctr/ppc.c:951:
+	if( err )

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1075: FILE: drivers/perfctr/ppc.c:978:
+static const char *current_service = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: space prohibited after that open parenthesis '('
#1083: FILE: drivers/perfctr/ppc.c:986:
+	if( !ret )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1083: FILE: drivers/perfctr/ppc.c:986:
+	if( !ret )

ERROR:SPACING: space required before the open parenthesis '('
#1083: FILE: drivers/perfctr/ppc.c:986:
+	if( !ret )

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1092: FILE: drivers/perfctr/ppc.c:995:
+	/* PREEMPT note: when called via smp_call_function(),
+	   this is in IRQ context with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1092: FILE: drivers/perfctr/ppc.c:995:
+	   this is in IRQ context with preemption disabled. */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1099: FILE: drivers/perfctr/ppc.c:1002:
+	if( service != current_service ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1099: FILE: drivers/perfctr/ppc.c:1002:
+	if( service != current_service ) {

ERROR:SPACING: space required before the open parenthesis '('
#1099: FILE: drivers/perfctr/ppc.c:1002:
+	if( service != current_service ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1100: FILE: drivers/perfctr/ppc.c:1003:
+		printk(KERN_ERR "%s: attempt by %s to release while reserved by %s\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1101: FILE: drivers/perfctr/ppc.c:1004:
+		       __FUNCTION__, service, current_service);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1114: FILE: drivers/perfctr/ppc_tests.c:1:
+/* $Id: ppc_tests.c,v 1.3 2004/05/13 23:32:49 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1114: FILE: drivers/perfctr/ppc_tests.c:1:
+/* $Id: ppc_tests.c,v 1.3 2004/05/13 23:32:49 mikpe Exp $

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#1125: FILE: drivers/perfctr/ppc_tests.c:12:
+#include <asm/processor.h>

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'S' - possible side-effects?
#1130: FILE: drivers/perfctr/ppc_tests.c:17:
+#define X2(S)	S"; "S

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1130: FILE: drivers/perfctr/ppc_tests.c:17:
+#define X2(S)	S"; "S

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1136: FILE: drivers/perfctr/ppc_tests.c:23:
+	unsigned int i, dummy;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1136: FILE: drivers/perfctr/ppc_tests.c:23:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1136: FILE: drivers/perfctr/ppc_tests.c:23:
+	for(i = 0; i < NITER/8; ++i)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1143: FILE: drivers/perfctr/ppc_tests.c:30:
+	unsigned int i, dummy;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1143: FILE: drivers/perfctr/ppc_tests.c:30:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1143: FILE: drivers/perfctr/ppc_tests.c:30:
+	for(i = 0; i < NITER/8; ++i)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1150: FILE: drivers/perfctr/ppc_tests.c:37:
+	unsigned int i, dummy;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1150: FILE: drivers/perfctr/ppc_tests.c:37:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1150: FILE: drivers/perfctr/ppc_tests.c:37:
+	for(i = 0; i < NITER/8; ++i)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1157: FILE: drivers/perfctr/ppc_tests.c:44:
+	unsigned int i, dummy;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1157: FILE: drivers/perfctr/ppc_tests.c:44:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1157: FILE: drivers/perfctr/ppc_tests.c:44:
+	for(i = 0; i < NITER/8; ++i)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1164: FILE: drivers/perfctr/ppc_tests.c:51:
+	unsigned int i, dummy;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1164: FILE: drivers/perfctr/ppc_tests.c:51:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1164: FILE: drivers/perfctr/ppc_tests.c:51:
+	for(i = 0; i < NITER/8; ++i)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1171: FILE: drivers/perfctr/ppc_tests.c:58:
+	unsigned int i, dummy;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1171: FILE: drivers/perfctr/ppc_tests.c:58:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1171: FILE: drivers/perfctr/ppc_tests.c:58:
+	for(i = 0; i < NITER/8; ++i)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1178: FILE: drivers/perfctr/ppc_tests.c:65:
+	unsigned int i, dummy;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1178: FILE: drivers/perfctr/ppc_tests.c:65:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1178: FILE: drivers/perfctr/ppc_tests.c:65:
+	for(i = 0; i < NITER/8; ++i)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1185: FILE: drivers/perfctr/ppc_tests.c:72:
+	unsigned int i;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1185: FILE: drivers/perfctr/ppc_tests.c:72:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1185: FILE: drivers/perfctr/ppc_tests.c:72:
+	for(i = 0; i < NITER/8; ++i)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1192: FILE: drivers/perfctr/ppc_tests.c:79:
+	unsigned int i;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1192: FILE: drivers/perfctr/ppc_tests.c:79:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1192: FILE: drivers/perfctr/ppc_tests.c:79:
+	for(i = 0; i < NITER/8; ++i)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1199: FILE: drivers/perfctr/ppc_tests.c:86:
+	unsigned int i;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1199: FILE: drivers/perfctr/ppc_tests.c:86:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1199: FILE: drivers/perfctr/ppc_tests.c:86:
+	for(i = 0; i < NITER/8; ++i)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1206: FILE: drivers/perfctr/ppc_tests.c:93:
+	unsigned int i;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1206: FILE: drivers/perfctr/ppc_tests.c:93:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1206: FILE: drivers/perfctr/ppc_tests.c:93:
+	for(i = 0; i < NITER/8; ++i)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1213: FILE: drivers/perfctr/ppc_tests.c:100:
+	unsigned int i;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1213: FILE: drivers/perfctr/ppc_tests.c:100:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1213: FILE: drivers/perfctr/ppc_tests.c:100:
+	for(i = 0; i < NITER/8; ++i)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1219: FILE: drivers/perfctr/ppc_tests.c:106:
+	unsigned i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1220: FILE: drivers/perfctr/ppc_tests.c:107:
+	unsigned i;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1220: FILE: drivers/perfctr/ppc_tests.c:107:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1220: FILE: drivers/perfctr/ppc_tests.c:107:
+	for(i = 0; i < NITER/8; ++i)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1227: FILE: drivers/perfctr/ppc_tests.c:114:
+	unsigned int start, stop;
+	start = mfspr(SPRN_PMC1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1236: FILE: drivers/perfctr/ppc_tests.c:123:
+	unsigned int pvr = mfspr(SPRN_PVR);
+	printk(KERN_INFO "Please email the following PERFCTR INIT lines "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1236: FILE: drivers/perfctr/ppc_tests.c:123:
+	printk(KERN_INFO "Please email the following PERFCTR INIT lines "

WARNING:SPLIT_STRING: quoted string split across lines
#1237: FILE: drivers/perfctr/ppc_tests.c:124:
+	printk(KERN_INFO "Please email the following PERFCTR INIT lines "
+	       "to mikpe@csd.uu.se\n"

WARNING:SPLIT_STRING: quoted string split across lines
#1239: FILE: drivers/perfctr/ppc_tests.c:126:
+	       KERN_INFO "To remove this message, rebuild the driver "
+	       "with CONFIG_PERFCTR_INIT_TESTS=n\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1240: FILE: drivers/perfctr/ppc_tests.c:127:
+	printk(KERN_INFO "PERFCTR INIT: PVR 0x%08x, CPU clock %u kHz, TB clock %u kHz\n",

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1243: FILE: drivers/perfctr/ppc_tests.c:130:
+	       tb_ticks_per_jiffy*(HZ/10)/(1000/10));
 	                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1243: FILE: drivers/perfctr/ppc_tests.c:130:
+	       tb_ticks_per_jiffy*(HZ/10)/(1000/10));
 	                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1243: FILE: drivers/perfctr/ppc_tests.c:130:
+	       tb_ticks_per_jiffy*(HZ/10)/(1000/10));
 	                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1243: FILE: drivers/perfctr/ppc_tests.c:130:
+	       tb_ticks_per_jiffy*(HZ/10)/(1000/10));
 	                                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1251: FILE: drivers/perfctr/ppc_tests.c:138:
+	if( have_mmcr1 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1251: FILE: drivers/perfctr/ppc_tests.c:138:
+	if( have_mmcr1 ) {

ERROR:SPACING: space required before the open parenthesis '('
#1251: FILE: drivers/perfctr/ppc_tests.c:138:
+	if( have_mmcr1 ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1255: FILE: drivers/perfctr/ppc_tests.c:142:
+^I}^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1279: FILE: drivers/perfctr/ppc_tests.c:166:
+	mtspr(SPRN_PMC1, 0x80000000-100);
 	                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1280: FILE: drivers/perfctr/ppc_tests.c:167:
+	mmcr0 = (1<<(31-6)) | (0x01 << 6);
 	          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1280: FILE: drivers/perfctr/ppc_tests.c:167:
+	mmcr0 = (1<<(31-6)) | (0x01 << 6);
 	               ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1281: FILE: drivers/perfctr/ppc_tests.c:168:
+	if( pmc1ce )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1281: FILE: drivers/perfctr/ppc_tests.c:168:
+	if( pmc1ce )

ERROR:SPACING: space required before the open parenthesis '('
#1281: FILE: drivers/perfctr/ppc_tests.c:168:
+	if( pmc1ce )

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1282: FILE: drivers/perfctr/ppc_tests.c:169:
+		mmcr0 |= (1<<(31-16));
 		           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1282: FILE: drivers/perfctr/ppc_tests.c:169:
+		mmcr0 |= (1<<(31-16));
 		                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1286: FILE: drivers/perfctr/ppc_tests.c:173:
+	} while( !(mfspr(SPRN_PMC1) & 0x80000000) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1286: FILE: drivers/perfctr/ppc_tests.c:173:
+	} while( !(mfspr(SPRN_PMC1) & 0x80000000) );

ERROR:SPACING: space required before the open parenthesis '('
#1286: FILE: drivers/perfctr/ppc_tests.c:173:
+	} while( !(mfspr(SPRN_PMC1) & 0x80000000) );

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1288: FILE: drivers/perfctr/ppc_tests.c:175:
+	printk(KERN_INFO "PERFCTR INIT: %s(%u): MMCR0[FC] is %u, PMC1 is %#x\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1289: FILE: drivers/perfctr/ppc_tests.c:176:
+	       __FUNCTION__, pmc1ce,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1290: FILE: drivers/perfctr/ppc_tests.c:177:
+	       !!(mfspr(SPRN_MMCR0) & (1<<(31-0))), mfspr(SPRN_PMC1));
 	                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1290: FILE: drivers/perfctr/ppc_tests.c:177:
+	       !!(mfspr(SPRN_MMCR0) & (1<<(31-0))), mfspr(SPRN_PMC1));
 	                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1317: FILE: drivers/perfctr/ppc_tests.c:204:
+	mtspr(SPRN_PMC1, 0x80000000-100);
 	                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1318: FILE: drivers/perfctr/ppc_tests.c:205:
+	mmcr0 = (1<<(31-18)) | (0x01 << 6) | (0x01 << 0);
 	          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1318: FILE: drivers/perfctr/ppc_tests.c:205:
+	mmcr0 = (1<<(31-18)) | (0x01 << 6) | (0x01 << 0);
 	               ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1319: FILE: drivers/perfctr/ppc_tests.c:206:
+	if( pmc1ce )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1319: FILE: drivers/perfctr/ppc_tests.c:206:
+	if( pmc1ce )

ERROR:SPACING: space required before the open parenthesis '('
#1319: FILE: drivers/perfctr/ppc_tests.c:206:
+	if( pmc1ce )

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1320: FILE: drivers/perfctr/ppc_tests.c:207:
+		mmcr0 |= (1<<(31-16));
 		           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1320: FILE: drivers/perfctr/ppc_tests.c:207:
+		mmcr0 |= (1<<(31-16));
 		                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1324: FILE: drivers/perfctr/ppc_tests.c:211:
+	} while( !(mfspr(SPRN_PMC1) & 0x80000000) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1324: FILE: drivers/perfctr/ppc_tests.c:211:
+	} while( !(mfspr(SPRN_PMC1) & 0x80000000) );

ERROR:SPACING: space required before the open parenthesis '('
#1324: FILE: drivers/perfctr/ppc_tests.c:211:
+	} while( !(mfspr(SPRN_PMC1) & 0x80000000) );

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1326: FILE: drivers/perfctr/ppc_tests.c:213:
+	printk(KERN_INFO "PERFCTR INIT: %s(%u): MMCR0[TRIGGER] is %u, PMC1 is %#x, PMC2 is %#x\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1327: FILE: drivers/perfctr/ppc_tests.c:214:
+	       __FUNCTION__, pmc1ce,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1328: FILE: drivers/perfctr/ppc_tests.c:215:
+	       !!(mfspr(SPRN_MMCR0) & (1<<(31-18))), mfspr(SPRN_PMC1), mfspr(SPRN_PMC2));
 	                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1328: FILE: drivers/perfctr/ppc_tests.c:215:
+	       !!(mfspr(SPRN_MMCR0) & (1<<(31-18))), mfspr(SPRN_PMC1), mfspr(SPRN_PMC2));
 	                                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1344: FILE: drivers/perfctr/ppc_tests.c:231:
+	/* PMC1 = "processor cycles",
+	   PMC2 = "completed instructions",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1346: FILE: drivers/perfctr/ppc_tests.c:233:
+	   no interrupts */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1380: FILE: drivers/perfctr/ppc_tests.c:267:
+	printk(KERN_INFO "PERFCTR INIT: NITER == %u\n", NITER);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1381: FILE: drivers/perfctr/ppc_tests.c:268:
+	printk(KERN_INFO "PERFCTR INIT: loop overhead is %u cycles\n", loop);

ERROR:SPACING: space required before the open parenthesis '('
#1382: FILE: drivers/perfctr/ppc_tests.c:269:
+	for(i = 0; i < ARRAY_SIZE(ticks); ++i) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1384: FILE: drivers/perfctr/ppc_tests.c:271:
+		unsigned int x;
+		if( !ticks[i] )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1384: FILE: drivers/perfctr/ppc_tests.c:271:
+		if( !ticks[i] )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1384: FILE: drivers/perfctr/ppc_tests.c:271:
+		if( !ticks[i] )

ERROR:SPACING: space required before the open parenthesis '('
#1384: FILE: drivers/perfctr/ppc_tests.c:271:
+		if( !ticks[i] )

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1387: FILE: drivers/perfctr/ppc_tests.c:274:
+		printk(KERN_INFO "PERFCTR INIT: %s cost is %u.%u cycles (%u total)\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1388: FILE: drivers/perfctr/ppc_tests.c:275:
+		       name[i], x/10, x%10, ticks[i]);
 		                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1388: FILE: drivers/perfctr/ppc_tests.c:275:
+		       name[i], x/10, x%10, ticks[i]);
 		                       ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1404: FILE: drivers/perfctr/ppc_tests.h:1:
+/* $Id: ppc_tests.h,v 1.1 2004/01/12 01:59:11 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1404: FILE: drivers/perfctr/ppc_tests.h:1:
+/* $Id: ppc_tests.h,v 1.1 2004/01/12 01:59:11 mikpe Exp $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1412: FILE: drivers/perfctr/ppc_tests.h:9:
+extern void perfctr_ppc_init_tests(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1420: FILE: include/asm-ppc/perfctr.h:1:
+/* $Id: perfctr.h,v 1.4 2004/05/12 21:28:27 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1420: FILE: include/asm-ppc/perfctr.h:1:
+/* $Id: perfctr.h,v 1.4 2004/05/12 21:28:27 mikpe Exp $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1465: FILE: include/asm-ppc/perfctr.h:46:
+	/* The two tsc fields must be inlined. Placing them in a
+	   sub-struct causes unwanted internal padding on x86-64. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1465: FILE: include/asm-ppc/perfctr.h:46:
+	   sub-struct causes unwanted internal padding on x86-64. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1480: FILE: include/asm-ppc/perfctr.h:61:
+/* cstatus is a re-encoding of control.tsc_on/nractrs/nrictrs
+   which should have less overhead in most cases */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1480: FILE: include/asm-ppc/perfctr.h:61:
+   which should have less overhead in most cases */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1487: FILE: include/asm-ppc/perfctr.h:68:
+	return (tsc_on<<31) | (nrictrs<<16) | ((nractrs+nrictrs)<<8) | nractrs;
 	              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1487: FILE: include/asm-ppc/perfctr.h:68:
+	return (tsc_on<<31) | (nrictrs<<16) | ((nractrs+nrictrs)<<8) | nractrs;
 	                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1487: FILE: include/asm-ppc/perfctr.h:68:
+	return (tsc_on<<31) | (nrictrs<<16) | ((nractrs+nrictrs)<<8) | nractrs;
 	                                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1487: FILE: include/asm-ppc/perfctr.h:68:
+	return (tsc_on<<31) | (nrictrs<<16) | ((nractrs+nrictrs)<<8) | nractrs;
 	                                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1527: FILE: include/asm-ppc/perfctr.h:108:
+#define SI_PMC_OVF	(__SI_FAULT|'P')
                   	           ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1541: FILE: include/asm-ppc/perfctr.h:122:
+extern int perfctr_cpu_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1542: FILE: include/asm-ppc/perfctr.h:123:
+extern void perfctr_cpu_exit(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1548: FILE: include/asm-ppc/perfctr.h:129:
+extern const char *perfctr_cpu_reserve(const char *service);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1549: FILE: include/asm-ppc/perfctr.h:130:
+extern void perfctr_cpu_release(const char *service);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1552: FILE: include/asm-ppc/perfctr.h:133:
+/* PRE: state has no running interrupt-mode counters.
+   Check that the new control data is valid.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1554: FILE: include/asm-ppc/perfctr.h:135:
+   Returns a negative error code if the control data is invalid. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1555: FILE: include/asm-ppc/perfctr.h:136:
+extern int perfctr_cpu_update_control(struct perfctr_cpu_state *state, int is_global);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1558: FILE: include/asm-ppc/perfctr.h:139:
+/* Read a-mode counters. Subtract from start and accumulate into sums.
+   Must be called with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1558: FILE: include/asm-ppc/perfctr.h:139:
+   Must be called with preemption disabled. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1559: FILE: include/asm-ppc/perfctr.h:140:
+extern void perfctr_cpu_suspend(struct perfctr_cpu_state *state);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1562: FILE: include/asm-ppc/perfctr.h:143:
+/* Write control registers. Read a-mode counters into start.
+   Must be called with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1562: FILE: include/asm-ppc/perfctr.h:143:
+   Must be called with preemption disabled. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1563: FILE: include/asm-ppc/perfctr.h:144:
+extern void perfctr_cpu_resume(struct perfctr_cpu_state *state);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1566: FILE: include/asm-ppc/perfctr.h:147:
+/* Perform an efficient combined suspend/resume operation.
+   Must be called with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1566: FILE: include/asm-ppc/perfctr.h:147:
+   Must be called with preemption disabled. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1567: FILE: include/asm-ppc/perfctr.h:148:
+extern void perfctr_cpu_sample(struct perfctr_cpu_state *state);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1570: FILE: include/asm-ppc/perfctr.h:151:
+/* The type of a perfctr overflow interrupt handler.
+   It will be called in IRQ context, with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1570: FILE: include/asm-ppc/perfctr.h:151:
+   It will be called in IRQ context, with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1574: FILE: include/asm-ppc/perfctr.h:155:
+/* XXX: The hardware supports overflow interrupts, but the driver
+   does not yet enable this due to an erratum in 750/7400/7410. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1574: FILE: include/asm-ppc/perfctr.h:155:
+   does not yet enable this due to an erratum in 750/7400/7410. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1578: FILE: include/asm-ppc/perfctr.h:159:
+extern void perfctr_cpu_set_ihandler(perfctr_ihandler_t);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1579: FILE: include/asm-ppc/perfctr.h:160:
+extern void perfctr_cpu_ireload(struct perfctr_cpu_state*);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1579: FILE: include/asm-ppc/perfctr.h:160:
+extern void perfctr_cpu_ireload(struct perfctr_cpu_state*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct perfctr_cpu_state*' should also have an identifier name
#1579: FILE: include/asm-ppc/perfctr.h:160:
+extern void perfctr_cpu_ireload(struct perfctr_cpu_state*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1580: FILE: include/asm-ppc/perfctr.h:161:
+extern unsigned int perfctr_cpu_identify_overflow(struct perfctr_cpu_state*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1580: FILE: include/asm-ppc/perfctr.h:161:
+extern unsigned int perfctr_cpu_identify_overflow(struct perfctr_cpu_state*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct perfctr_cpu_state*' should also have an identifier name
#1580: FILE: include/asm-ppc/perfctr.h:161:
+extern unsigned int perfctr_cpu_identify_overflow(struct perfctr_cpu_state*);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000281871.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 193 errors, 94 warnings, 74 checks, 1540 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000281871.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
