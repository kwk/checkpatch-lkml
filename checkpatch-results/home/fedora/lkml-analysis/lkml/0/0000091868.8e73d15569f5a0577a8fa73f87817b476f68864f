CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'request->status == TAPE_REQUEST_IN_IO'
#90: FILE: drivers/s390/char/tape_core.c:1092:
+	if (irb->scsw.cc != 0 && (irb->scsw.fctl & SCSW_FCTL_START_FUNC) &&
+	    (request->status == TAPE_REQUEST_IN_IO)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required after that ',' (ctx:VxV)
#92: FILE: drivers/s390/char/tape_core.c:1094:
+		DBF_EVENT(3,"(%08x): deferred cc=%i, fctl=%i. restarting\n",
 		           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: drivers/s390/char/tape_core.c:1095:
+		DBF_EVENT(3,"(%08x): deferred cc=%i, fctl=%i. restarting\n",
+			device->cdev_id, irb->scsw.cc, irb->scsw.fctl);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#113: FILE: drivers/s390/char/tape.h:253:
+extern int tape_cancel_io(struct tape_device *, struct tape_request *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tape_device *' should also have an identifier name
#113: FILE: drivers/s390/char/tape.h:253:
+extern int tape_cancel_io(struct tape_device *, struct tape_request *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tape_request *' should also have an identifier name
#113: FILE: drivers/s390/char/tape.h:253:
+extern int tape_cancel_io(struct tape_device *, struct tape_request *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: drivers/s390/char/tape_std.c:47:
+	DBF_EVENT(3, "%08x: Assignment timeout. Device busy.\n",
 			device->cdev_id);

ERROR:SPACING: space required before the open parenthesis '('
#141: FILE: drivers/s390/char/tape_std.c:49:
+	if(rc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: drivers/s390/char/tape_std.c:51:
+		PRINT_ERR("(%s): Assign timeout: Cancel failed with rc = %i\n",
+			device->cdev->dev.bus_id, rc);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091868.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 2 warnings, 5 checks, 89 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091868.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
