WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#91: FILE: drivers/acpi/Kconfig:273:
+config ACPI_SYSFS
+	tristate "ACPI object support in sysfs"
+	depends on EXPERIMENTAL && ACPI
+	default m
+	help
+	  This driver adds support for exposing ACPI objects in sysfs.
+	  Reading and writing the objects can preform operations allowing
+	  userspace to interact with ACPI namespace.
+       

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'preform' may be misspelled - perhaps 'perform'?
#97: FILE: drivers/acpi/Kconfig:279:
+	  Reading and writing the objects can preform operations allowing
 	                                      ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: drivers/acpi/Kconfig:281:
+       $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#117: FILE: drivers/acpi/acpi_ksyms.c:101:
+EXPORT_SYMBOL(acpi_os_allocate);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#158: FILE: include/linux/sysfs.h:53:
+	char    *(*open)(struct kobject *, struct attribute *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct attribute *' should also have an identifier name
#158: FILE: include/linux/sysfs.h:53:
+	char    *(*open)(struct kobject *, struct attribute *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#159: FILE: include/linux/sysfs.h:54:
+	void    (*release)(struct kobject *, struct attribute *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct attribute *' should also have an identifier name
#159: FILE: include/linux/sysfs.h:54:
+	void    (*release)(struct kobject *, struct attribute *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#159: FILE: include/linux/sysfs.h:54:
+	void    (*release)(struct kobject *, struct attribute *, char *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#166: FILE: drivers/acpi/acpi_sysfs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#185: FILE: drivers/acpi/acpi_sysfs.c:20:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#186: FILE: drivers/acpi/acpi_sysfs.c:21:
+ * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#198: FILE: drivers/acpi/acpi_sysfs.c:33:
+ACPI_MODULE_NAME		("acpi_sysfs")

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#251: FILE: drivers/acpi/acpi_sysfs.c:86:
+#define WBUF(x) (&x->write_buf)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#252: FILE: drivers/acpi/acpi_sysfs.c:87:
+#define RBUF(x) (&x->read_buf)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#277: FILE: drivers/acpi/acpi_sysfs.c:112:
+fixup_pointer(

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: drivers/acpi/acpi_sysfs.c:121:
+^I^I                (unsigned long)off);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: drivers/acpi/acpi_sysfs.c:124:
+^I^I                (unsigned long)range->pointer);$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#293: FILE: drivers/acpi/acpi_sysfs.c:128:
+fixup_string(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#317: FILE: drivers/acpi/acpi_sysfs.c:152:
+fixup_buffer(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#348: FILE: drivers/acpi/acpi_sysfs.c:183:
+fixup_element(

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#358: FILE: drivers/acpi/acpi_sysfs.c:193:
+	switch (obj->type) {
+		case ACPI_TYPE_STRING:
[...]
+		case ACPI_TYPE_BUFFER:
[...]
+		case ACPI_TYPE_PACKAGE:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#372: FILE: drivers/acpi/acpi_sysfs.c:207:
+fixup_package(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: drivers/acpi/acpi_sysfs.c:258:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: drivers/acpi/acpi_sysfs.c:258:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: drivers/acpi/acpi_sysfs.c:264:
+^I^I                            (unsigned long)cur_arg[i]);$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#458: FILE: drivers/acpi/acpi_sysfs.c:293:
+acpi_sysfs_read_special(

WARNING:LINE_SPACING: Missing a blank line after declarations
#481: FILE: drivers/acpi/acpi_sysfs.c:316:
+		union acpi_object *obj;
+		obj = acpi_os_allocate(sizeof(union acpi_object));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#491: FILE: drivers/acpi/acpi_sysfs.c:326:
+^I^I                   (ACPI_SYSFS_MAJOR << 16) | ACPI_SYSFS_MINOR;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#507: FILE: drivers/acpi/acpi_sysfs.c:342:
+^I^I^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#538: FILE: drivers/acpi/acpi_sysfs.c:373:
+acpi_sysfs_read(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#557: FILE: drivers/acpi/acpi_sysfs.c:392:
+^I^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#562: FILE: drivers/acpi/acpi_sysfs.c:397:
+			ssize_t ret_val;
+			ret_val = acpi_sysfs_read_special(device->handle,

ERROR:CODE_INDENT: code indent should use tabs where possible
#563: FILE: drivers/acpi/acpi_sysfs.c:398:
+^I^I^I                                  data->name,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#564: FILE: drivers/acpi/acpi_sysfs.c:399:
+^I^I^I                                  &buffer,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#565: FILE: drivers/acpi/acpi_sysfs.c:400:
+^I^I^I                                  WBUF(data));$

WARNING:TYPO_SPELLING: 'strucure' may be misspelled - perhaps 'structure'?
#589: FILE: drivers/acpi/acpi_sysfs.c:424:
+		 * write be an acpi_object strucure which we insert into a
 		                           ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#599: FILE: drivers/acpi/acpi_sysfs.c:434:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#601: FILE: drivers/acpi/acpi_sysfs.c:436:
+^I^I                              arg_list, &buffer);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#611: FILE: drivers/acpi/acpi_sysfs.c:446:
+^I^I              &buffer, TO_OFFSET);$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#634: FILE: drivers/acpi/acpi_sysfs.c:469:
+acpi_sysfs_write(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#668: FILE: drivers/acpi/acpi_sysfs.c:503:
+acpi_sysfs_open(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#675: FILE: drivers/acpi/acpi_sysfs.c:510:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: drivers/acpi/acpi_sysfs.c:510:
+ $

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*data)...) over kmalloc(sizeof(struct acpi_private_data)...)
#679: FILE: drivers/acpi/acpi_sysfs.c:514:
+	data = kmalloc(sizeof(struct acpi_private_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#697: FILE: drivers/acpi/acpi_sysfs.c:532:
+acpi_sysfs_release(

WARNING:RETURN_VOID: void function return statements are not generally useful
#714: FILE: drivers/acpi/acpi_sysfs.c:549:
+	return;
+}

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#716: FILE: drivers/acpi/acpi_sysfs.c:551:
+static struct acpi_bin_files *
+find_bin_file(char *name) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#750: FILE: drivers/acpi/acpi_sysfs.c:585:
+^I                                         chandle, &chandle))) {$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#751: FILE: drivers/acpi/acpi_sysfs.c:586:
+	                                         chandle, &chandle))) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#756: FILE: drivers/acpi/acpi_sysfs.c:591:
+		switch (type) {
+			case ACPI_TYPE_INTEGER:
+			case ACPI_TYPE_STRING:
+			case ACPI_TYPE_BUFFER:
+			case ACPI_TYPE_METHOD:
[...]
+			default:

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#780: FILE: drivers/acpi/acpi_sysfs.c:615:
+			if ((!strcmp(pathname, "_INI")) ||
[...]
+			    continue;

WARNING:TABSTOP: Statements should start on a tabstop
#794: FILE: drivers/acpi/acpi_sysfs.c:629:
+			    continue;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*bin_file)...) over kmalloc(sizeof(struct acpi_bin_files)...)
#809: FILE: drivers/acpi/acpi_sysfs.c:644:
+			bin_file = kmalloc(sizeof(struct acpi_bin_files),

ERROR:CODE_INDENT: code indent should use tabs where possible
#810: FILE: drivers/acpi/acpi_sysfs.c:645:
+^I^I^I                   GFP_KERNEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#820: FILE: drivers/acpi/acpi_sysfs.c:655:
+^I^I^I                            GFP_KERNEL);$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IRGRP' are not preferred. Consider using octal permissions '0440'.
#828: FILE: drivers/acpi/acpi_sysfs.c:663:
+			attrib->attr.mode = S_IFREG | S_IRUSR | S_IRGRP |

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:CODE_INDENT: code indent should use tabs where possible
#829: FILE: drivers/acpi/acpi_sysfs.c:664:
+^I^I^I                    S_IWUSR | S_IWGRP;$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IWGRP' are not preferred. Consider using octal permissions '0220'.
#829: FILE: drivers/acpi/acpi_sysfs.c:664:
+			                    S_IWUSR | S_IWGRP;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#865: FILE: drivers/acpi/acpi_sysfs.c:700:
+^Iacpi_object_type^Itype;^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#876: FILE: drivers/acpi/acpi_sysfs.c:711:
+^I                                         chandle, &chandle))) {$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#877: FILE: drivers/acpi/acpi_sysfs.c:712:
+	                                         chandle, &chandle))) {
+

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#882: FILE: drivers/acpi/acpi_sysfs.c:717:
+		switch (type) {
+			case ACPI_TYPE_INTEGER:
+			case ACPI_TYPE_STRING:
+			case ACPI_TYPE_BUFFER:
+			case ACPI_TYPE_METHOD:
[...]
+			default:

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#917: FILE: drivers/acpi/acpi_sysfs.c:752:
+acpi_sysfs_add(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#932: FILE: drivers/acpi/acpi_sysfs.c:767:
+^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#934: FILE: drivers/acpi/acpi_sysfs.c:769:
+acpi_sysfs_del(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#949: FILE: drivers/acpi/acpi_sysfs.c:784:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#960: FILE: drivers/acpi/acpi_sysfs.c:795:
+^I                             ACPI_UINT32_MAX, acpi_sysfs_add,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#966: FILE: drivers/acpi/acpi_sysfs.c:801:
+^I                             ACPI_UINT32_MAX, acpi_sysfs_add,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#972: FILE: drivers/acpi/acpi_sysfs.c:807:
+^I                             ACPI_UINT32_MAX, acpi_sysfs_add,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#978: FILE: drivers/acpi/acpi_sysfs.c:813:
+^I                             ACPI_UINT32_MAX, acpi_sysfs_add,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#987: FILE: drivers/acpi/acpi_sysfs.c:822:
+^I                          ACPI_UINT32_MAX, acpi_sysfs_del,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#988: FILE: drivers/acpi/acpi_sysfs.c:823:
+^I                          NULL, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#991: FILE: drivers/acpi/acpi_sysfs.c:826:
+^I                          ACPI_UINT32_MAX, acpi_sysfs_del,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#992: FILE: drivers/acpi/acpi_sysfs.c:827:
+^I                          NULL, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#995: FILE: drivers/acpi/acpi_sysfs.c:830:
+^I                          ACPI_UINT32_MAX, acpi_sysfs_del,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#996: FILE: drivers/acpi/acpi_sysfs.c:831:
+^I                          NULL, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#999: FILE: drivers/acpi/acpi_sysfs.c:834:
+^I                          ACPI_UINT32_MAX, acpi_sysfs_del,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1000: FILE: drivers/acpi/acpi_sysfs.c:835:
+^I                          NULL, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1016: FILE: drivers/acpi/acpi_sysfs.c:851:
+^I                          ACPI_UINT32_MAX, acpi_sysfs_del,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1017: FILE: drivers/acpi/acpi_sysfs.c:852:
+^I                          NULL, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1019: FILE: drivers/acpi/acpi_sysfs.c:854:
+^I                          ACPI_UINT32_MAX, acpi_sysfs_del,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1020: FILE: drivers/acpi/acpi_sysfs.c:855:
+^I                          NULL, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1022: FILE: drivers/acpi/acpi_sysfs.c:857:
+^I                          ACPI_UINT32_MAX, acpi_sysfs_del,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1023: FILE: drivers/acpi/acpi_sysfs.c:858:
+^I                          NULL, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1025: FILE: drivers/acpi/acpi_sysfs.c:860:
+^I                          ACPI_UINT32_MAX, acpi_sysfs_del,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1026: FILE: drivers/acpi/acpi_sysfs.c:861:
+^I                          NULL, NULL);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000248167.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 49 errors, 20 warnings, 18 checks, 942 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000248167.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
