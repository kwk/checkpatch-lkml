WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#63: 
Modification made but it would be good to have some feedback from the arch maintainers:

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#81: FILE: include/asm-ia64/page.h:59:
+extern void clear_page (void *page, int order);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#81: FILE: include/asm-ia64/page.h:59:
+extern void clear_page (void *page, int order);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#103: FILE: include/asm-i386/page.h:21:
+#define clear_page(page, order)	mmx_clear_page((void *)(page),order)
                                	                             ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#152: FILE: include/asm-sparc/page.h:34:
+^Ido { ^Iclear_page(addr, 0);^I^I\$

CHECK:SPACING: No space is necessary after a cast
#171: FILE: include/asm-s390/page.h:30:
+	rp.subreg.odd = (unsigned long) 4096 << order;

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long) 4096' could be '4096UL'
#171: FILE: include/asm-s390/page.h:30:
+	rp.subreg.odd = (unsigned long) 4096 << order;

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#185: FILE: include/asm-s390/page.h:70:
+	while (nr-- >0) {
 	            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: include/asm-s390/page.h:71:
+        ^Iasm volatile ("   lgr  2,%0\n"$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#186: FILE: include/asm-s390/page.h:71:
+        ^Iasm volatile ("   lgr  2,%0\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: include/asm-s390/page.h:71:
+        ^Iasm volatile ("   lgr  2,%0\n"$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#224: FILE: arch/i386/lib/mmx.c:141:
+	for(i=0;i<((4096/64) << order);i++)
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#224: FILE: arch/i386/lib/mmx.c:141:
+	for(i=0;i<((4096/64) << order);i++)
 	       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#224: FILE: arch/i386/lib/mmx.c:141:
+	for(i=0;i<((4096/64) << order);i++)
 	         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#224: FILE: arch/i386/lib/mmx.c:141:
+	for(i=0;i<((4096/64) << order);i++)
 	                ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#224: FILE: arch/i386/lib/mmx.c:141:
+	for(i=0;i<((4096/64) << order);i++)
 	                              ^

ERROR:SPACING: space required before the open parenthesis '('
#224: FILE: arch/i386/lib/mmx.c:141:
+	for(i=0;i<((4096/64) << order);i++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#242: FILE: arch/i386/lib/mmx.c:270:
+	for(i=0;i<((4096/128) << order);i++)
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#242: FILE: arch/i386/lib/mmx.c:270:
+	for(i=0;i<((4096/128) << order);i++)
 	       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#242: FILE: arch/i386/lib/mmx.c:270:
+	for(i=0;i<((4096/128) << order);i++)
 	         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#242: FILE: arch/i386/lib/mmx.c:270:
+	for(i=0;i<((4096/128) << order);i++)
 	                ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#242: FILE: arch/i386/lib/mmx.c:270:
+	for(i=0;i<((4096/128) << order);i++)
 	                               ^

ERROR:SPACING: space required before the open parenthesis '('
#242: FILE: arch/i386/lib/mmx.c:270:
+	for(i=0;i<((4096/128) << order);i++)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#251: FILE: arch/i386/lib/mmx.c:362:
+static void slow_clear_page(void * page, int order)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#259: FILE: arch/i386/lib/mmx.c:369:
+		:"a" (0),"1" (page),"0" (1024 << order)
 		^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#259: FILE: arch/i386/lib/mmx.c:369:
+		:"a" (0),"1" (page),"0" (1024 << order)
 		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#259: FILE: arch/i386/lib/mmx.c:369:
+		:"a" (0),"1" (page),"0" (1024 << order)
 		                   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#265: FILE: arch/i386/lib/mmx.c:373:
+void mmx_clear_page(void * page, int order)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#285: FILE: include/asm-x86_64/mmx.h:11:
+extern void mmx_clear_page(void *page, int order);

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#380: FILE: include/asm-sh/page.h:49:
+	while (nr-- >0) {
 	            ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#407: FILE: include/asm-i386/mmx.h:11:
+extern void mmx_clear_page(void *page, int order);

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#449: FILE: include/asm-sh64/page.h:57:
+	while (nr-- >0) {
 	            ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#449: FILE: include/asm-sh64/page.h:57:
+	while (nr-- >0) {
+		sh64_page_clear(page++, 0);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:INLINE: plain inline is preferred over __inline__
#502: FILE: include/asm-ppc64/page.h:105:
+static __inline__ void clear_page(void *addr, int order)

CHECK:CAMELCASE: Avoid CamelCase: <dCacheL1LinesPerPage>
#508: FILE: include/asm-ppc64/page.h:110:
+	lines = naca->dCacheL1LinesPerPage << order;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#521: FILE: include/asm-m32r/page.h:14:
+extern void _clear_page(void *to);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#533: FILE: include/asm-m32r/page.h:26:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#551: FILE: include/asm-alpha/page.h:18:
+extern void _clear_page(void *page);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#557: FILE: include/asm-alpha/page.h:24:
+	while (nr--)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#622: FILE: include/asm-m68k/page.h:72:
+			       "1" (((PAGE_SIZE<<(order)) - 16) / 16 - 1));
 			                       ^

ERROR:SPACING: space prohibited after that '-' (ctx:WxW)
#622: FILE: include/asm-m68k/page.h:72:
+			       "1" (((PAGE_SIZE<<(order)) - 16) / 16 - 1));
 			                                  ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#646: FILE: include/asm-mips/page.h:42:
+extern void _clear_page(void * page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#646: FILE: include/asm-mips/page.h:42:
+extern void _clear_page(void * page);

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#652: FILE: include/asm-mips/page.h:48:
+	while (nr-- >0) {
 	            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#713: FILE: include/asm-v850/page.h:40:
+#define clear_page(page, order)	memset ((void *)(page), 0, PAGE_SIZE << (order))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#713: FILE: include/asm-v850/page.h:40:
+#define clear_page(page, order)	memset ((void *)(page), 0, PAGE_SIZE << (order))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#718: FILE: include/asm-v850/page.h:44:
+^Ido { ^Iclear_page(addr, 0);^I^I\$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#885: FILE: arch/mips/mm/pg-r4k.c:42:
+void _clear_page(void * page) __attribute__((alias("clear_page_array")));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("clear_page_array") over __attribute__((alias("clear_page_array")))
#885: FILE: arch/mips/mm/pg-r4k.c:42:
+void _clear_page(void * page) __attribute__((alias("clear_page_array")));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#928: FILE: include/asm-sparc64/page.h:17:
+extern void _clear_page(void *page, unsigned long order);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#929: FILE: include/asm-sparc64/page.h:18:
+#define clear_page(X,Y)	_clear_page((void *)(X),(Y))
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#929: FILE: include/asm-sparc64/page.h:18:
+#define clear_page(X,Y)	_clear_page((void *)(X),(Y))
                        	                       ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#996: FILE: mm/page_alloc.c:554:
+	if (PageHighMem(page)) {
[...]
+	} else
[...]

ERROR:SPACING: space required before the open parenthesis '('
#999: FILE: mm/page_alloc.c:557:
+		for(i = 0; i < 1 << order; i++)

CHECK:BRACES: Unbalanced braces around else statement
#1001: FILE: mm/page_alloc.c:559:
+	} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000218619.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 11 warnings, 15 checks, 721 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000218619.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
