WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#76: FILE: kernel/cpufreq.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#77: FILE: kernel/cpufreq.c:2:
+ *  linux/kernel/cpufreq.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#82: FILE: kernel/cpufreq.c:7:
+ *  $Id: cpufreq.c,v 1.32 2002/07/18 22:23:31 db Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#109: FILE: kernel/cpufreq.c:34:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#112: FILE: kernel/cpufreq.c:37:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#118: FILE: kernel/cpufreq.c:43:
+static DECLARE_MUTEX            (cpufreq_notifier_sem);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#124: FILE: kernel/cpufreq.c:49:
+static struct cpufreq_driver   ^I*cpufreq_driver;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#126: FILE: kernel/cpufreq.c:51:
+static DECLARE_MUTEX            (cpufreq_driver_sem);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#134: FILE: kernel/cpufreq.c:59:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#161: FILE: kernel/cpufreq.c:86:
+
+

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#174: FILE: kernel/cpufreq.c:99:
+	max = simple_strtoul(str, &str, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#177: FILE: kernel/cpufreq.c:102:
+		max = simple_strtoul(str + 1, NULL, 0);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#187: FILE: kernel/cpufreq.c:112:
+__setup("cpufreq=", cpufreq_setup);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#189: FILE: kernel/cpufreq.c:114:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: kernel/cpufreq.c:125:
+^I    ^Iloops_per_jiffy = scale(cpufreq_ref_loops, cpufreq_ref_freq,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#200: FILE: kernel/cpufreq.c:125:
+^I    ^Iloops_per_jiffy = scale(cpufreq_ref_loops, cpufreq_ref_freq,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#204: FILE: kernel/cpufreq.c:129:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#210: FILE: kernel/cpufreq.c:135:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#234: FILE: kernel/cpufreq.c:159:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#256: FILE: kernel/cpufreq.c:181:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: kernel/cpufreq.c:193:
+ *^Icommand line parameter, information obtained from the cpufreq $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpufreq_set', this function's name, in a string
#282: FILE: kernel/cpufreq.c:207:
+		panic("cpufreq_set() called from interrupt context!");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#303: FILE: kernel/cpufreq.c:228:
+		if (cpu >= NR_CPUS) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#314: FILE: kernel/cpufreq.c:239:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#345: FILE: kernel/cpufreq.c:270:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#370: FILE: kernel/cpufreq.c:295:
+
+

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#388: FILE: kernel/cpufreq.c:313:
+	else if (cpu < NR_CPUS)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: kernel/cpufreq.c:315:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#396: FILE: kernel/cpufreq.c:321:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: kernel/cpufreq.c:337:
+^I$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#415: FILE: kernel/cpufreq.c:340:
+	else if (cpu < NR_CPUS)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#423: FILE: kernel/cpufreq.c:348:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpufreq_restore', this function's name, in a string
#436: FILE: kernel/cpufreq.c:361:
+		panic("cpufreq_restore() called from interrupt context!");

CHECK:BRACES: braces {} should be used on all arms of this statement
#445: FILE: kernel/cpufreq.c:370:
+		if (cpufreq_driver->sync)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#447: FILE: kernel/cpufreq.c:372:
+		else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#449: FILE: kernel/cpufreq.c:374:
+			int i;
+			for (i=0; i < NR_CPUS; i++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#449: FILE: kernel/cpufreq.c:374:
+			for (i=0; i < NR_CPUS; i++)
 			      ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#449: FILE: kernel/cpufreq.c:374:
+			for (i=0; i < NR_CPUS; i++)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#462: FILE: kernel/cpufreq.c:387:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#473: FILE: kernel/cpufreq.c:398:
+cpufreq_procctl_min(ctl_table *ctl, int write, struct file *filp,
                                                             ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#474: FILE: kernel/cpufreq.c:399:
+cpufreq_procctl_min(ctl_table *ctl, int write, struct file *filp,
+		void *buffer, size_t *lenp)

CHECK:BRACES: braces {} should be used on all arms of this statement
#485: FILE: kernel/cpufreq.c:410:
+	if (!cpufreq_driver)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#487: FILE: kernel/cpufreq.c:412:
+	else {

CHECK:SPACING: No space is necessary after a cast
#490: FILE: kernel/cpufreq.c:415:
+		else if (((int) ctl->extra1) < NR_CPUS)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#490: FILE: kernel/cpufreq.c:415:
+		else if (((int) ctl->extra1) < NR_CPUS)

CHECK:SPACING: No space is necessary after a cast
#491: FILE: kernel/cpufreq.c:416:
+			printout = cpufreq_driver->freq[(int) ctl->extra1].min;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#494: FILE: kernel/cpufreq.c:419:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#506: FILE: kernel/cpufreq.c:431:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#508: FILE: kernel/cpufreq.c:433:
+cpufreq_procctl_max(ctl_table *ctl, int write, struct file *filp,
                                                             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: kernel/cpufreq.c:434:
+cpufreq_procctl_max(ctl_table *ctl, int write, struct file *filp,
+		void *buffer, size_t *lenp)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#519: FILE: kernel/cpufreq.c:444:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#521: FILE: kernel/cpufreq.c:446:
+	if (!cpufreq_driver)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#523: FILE: kernel/cpufreq.c:448:
+	else {

CHECK:SPACING: No space is necessary after a cast
#526: FILE: kernel/cpufreq.c:451:
+		else if (((int) ctl->extra1) < NR_CPUS)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#526: FILE: kernel/cpufreq.c:451:
+		else if (((int) ctl->extra1) < NR_CPUS)

CHECK:SPACING: No space is necessary after a cast
#527: FILE: kernel/cpufreq.c:452:
+			printout = cpufreq_driver->freq[(int) ctl->extra1].max;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#542: FILE: kernel/cpufreq.c:467:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#544: FILE: kernel/cpufreq.c:469:
+cpufreq_procctl_sync(ctl_table *ctl, int write, struct file *filp,
                                                              ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#545: FILE: kernel/cpufreq.c:470:
+cpufreq_procctl_sync(ctl_table *ctl, int write, struct file *filp,
+		void *buffer, size_t *lenp)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: kernel/cpufreq.c:480:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#559: FILE: kernel/cpufreq.c:484:
+^Ielse $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#574: FILE: kernel/cpufreq.c:499:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#576: FILE: kernel/cpufreq.c:501:
+cpufreq_procctl(ctl_table *ctl, int write, struct file *filp,
                                                         ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#581: FILE: kernel/cpufreq.c:506:
+ ^Iunsigned int cpu = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#581: FILE: kernel/cpufreq.c:506:
+ ^Iunsigned int cpu = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: kernel/cpufreq.c:506:
+ ^Iunsigned int cpu = 0;$

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#598: FILE: kernel/cpufreq.c:523:
+		freq = simple_strtoul(buf, &p, 0);

CHECK:SPACING: No space is necessary after a cast
#607: FILE: kernel/cpufreq.c:532:
+			cpu = (int) ctl->extra1;

CHECK:SPACING: No space is necessary after a cast
#619: FILE: kernel/cpufreq.c:544:
+			cpu = (int) ctl->extra1;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#621: FILE: kernel/cpufreq.c:546:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#649: FILE: kernel/cpufreq.c:574:
+^I^I^I$

CHECK:SPACING: No space is necessary after a cast
#658: FILE: kernel/cpufreq.c:583:
+			cpu = (int) table->extra1;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#660: FILE: kernel/cpufreq.c:585:
+^I^I$

CHECK:SPACING: No space is necessary after a cast
#682: FILE: kernel/cpufreq.c:607:
+			cpu = (int) table->extra1;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#692: FILE: kernel/cpufreq.c:617:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#694: FILE: kernel/cpufreq.c:619:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#699: FILE: kernel/cpufreq.c:624:
+
+

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#702: FILE: kernel/cpufreq.c:627:
+ * @driver_data: A struct cpufreq_driver containing the values submitted by the CPU Frequency driver.

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#704: FILE: kernel/cpufreq.c:629:
+ * driver_data should contain the following elements: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#705: FILE: kernel/cpufreq.c:630:
+ * freq.min is the minimum frequency the CPU / the CPUs can be set to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#706: FILE: kernel/cpufreq.c:631:
+ * (optional), freq.max is the maximum frequency (optional), freq.cur $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#707: FILE: kernel/cpufreq.c:632:
+ * is the current frequency, validate points to a function returning $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#708: FILE: kernel/cpufreq.c:633:
+ * the closest available CPU frequency, and setspeed points to a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#714: FILE: kernel/cpufreq.c:639:
+ *   Registers a CPU Frequency driver to this core code. This code $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#716: FILE: kernel/cpufreq.c:641:
+ * (and isn't unregistered in the meantime). $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#725: FILE: kernel/cpufreq.c:650:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#730: FILE: kernel/cpufreq.c:655:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#735: FILE: kernel/cpufreq.c:660:
+^I * or if it is invalid, use the values determined $

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#744: FILE: kernel/cpufreq.c:669:
+		j = NR_CPUS;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#745: FILE: kernel/cpufreq.c:670:
+	for (i=0; i<j; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#745: FILE: kernel/cpufreq.c:670:
+	for (i=0; i<j; i++) {
 	           ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cpufreq_freq_limit.max < cpufreq_driver->freq[i].max'
#746: FILE: kernel/cpufreq.c:671:
+		if (!cpufreq_driver->freq[i].max ||
+		    (cpufreq_freq_limit.max && 
+		     (cpufreq_freq_limit.max < cpufreq_driver->freq[i].max)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#747: FILE: kernel/cpufreq.c:672:
+^I^I    (cpufreq_freq_limit.max && $

ERROR:CODE_INDENT: code indent should use tabs where possible
#749: FILE: kernel/cpufreq.c:674:
+^I     ^I^Icpufreq_driver->freq[i].max = cpufreq_freq_limit.max;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#749: FILE: kernel/cpufreq.c:674:
+^I     ^I^Icpufreq_driver->freq[i].max = cpufreq_freq_limit.max;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#750: FILE: kernel/cpufreq.c:675:
+^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cpufreq_driver->freq[i].min < cpufreq_freq_limit.min'
#751: FILE: kernel/cpufreq.c:676:
+		if (!cpufreq_driver->freq[i].min ||
+		    (cpufreq_driver->freq[i].min < cpufreq_freq_limit.min))

ERROR:CODE_INDENT: code indent should use tabs where possible
#753: FILE: kernel/cpufreq.c:678:
+^I    ^I^Icpufreq_driver->freq[i].min = cpufreq_freq_limit.min;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#753: FILE: kernel/cpufreq.c:678:
+^I    ^I^Icpufreq_driver->freq[i].min = cpufreq_freq_limit.min;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#754: FILE: kernel/cpufreq.c:679:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#755: FILE: kernel/cpufreq.c:680:
+		if (cpufreq_driver->sync) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#758: FILE: kernel/cpufreq.c:683:
+		} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#759: FILE: kernel/cpufreq.c:684:
+			BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#760: FILE: kernel/cpufreq.c:685:
+^I} $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#762: FILE: kernel/cpufreq.c:687:
+	printk(KERN_INFO "CPU clock: %d.%03d MHz (%d.%03d-%d.%03d MHz)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#763: FILE: kernel/cpufreq.c:688:
+	printk(KERN_INFO "CPU clock: %d.%03d MHz (%d.%03d-%d.%03d MHz)\n",
+		cpufreq_driver->freq[0].cur / 1000, cpufreq_driver->freq[0].cur % 1000,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#773: FILE: kernel/cpufreq.c:698:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#777: FILE: kernel/cpufreq.c:702:
+ *    Unregister the current CPUFreq driver. Only call this if you have $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#802: FILE: include/linux/cpufreq.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#803: FILE: include/linux/cpufreq.h:2:
+ *  linux/include/linux/cpufreq.h

ERROR:TRAILING_WHITESPACE: trailing whitespace
#807: FILE: include/linux/cpufreq.h:6:
+ *            $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#809: FILE: include/linux/cpufreq.h:8:
+ * $Id: cpufreq.h,v 1.11 2002/07/18 22:23:30 db Exp $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#821: FILE: include/linux/cpufreq.h:20:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#824: FILE: include/linux/cpufreq.h:23:
+                ctl_name: CPU_NR_FREQ_MAX, \$

WARNING:INDENTED_LABEL: labels should not be indented
#824: FILE: include/linux/cpufreq.h:23:
+                ctl_name: CPU_NR_FREQ_MAX, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#825: FILE: include/linux/cpufreq.h:24:
+                procname: "speed-max", \$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#825: FILE: include/linux/cpufreq.h:24:
+                procname: "speed-max", \
                         ^

WARNING:INDENTED_LABEL: labels should not be indented
#825: FILE: include/linux/cpufreq.h:24:
+                procname: "speed-max", \

ERROR:CODE_INDENT: code indent should use tabs where possible
#826: FILE: include/linux/cpufreq.h:25:
+                mode: 0444, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#827: FILE: include/linux/cpufreq.h:26:
+                proc_handler: cpufreq_procctl_max, \$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#827: FILE: include/linux/cpufreq.h:26:
+                proc_handler: cpufreq_procctl_max, \
                             ^

WARNING:INDENTED_LABEL: labels should not be indented
#827: FILE: include/linux/cpufreq.h:26:
+                proc_handler: cpufreq_procctl_max, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#828: FILE: include/linux/cpufreq.h:27:
+                extra1: (void*) (cpunr), }$

CHECK:SPACING: No space is necessary after a cast
#828: FILE: include/linux/cpufreq.h:27:
+                extra1: (void*) (cpunr), }

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#828: FILE: include/linux/cpufreq.h:27:
+                extra1: (void*) (cpunr), }

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#828: FILE: include/linux/cpufreq.h:27:
+                extra1: (void*) (cpunr), }
                       ^

WARNING:INDENTED_LABEL: labels should not be indented
#828: FILE: include/linux/cpufreq.h:27:
+                extra1: (void*) (cpunr), }

ERROR:CODE_INDENT: code indent should use tabs where possible
#831: FILE: include/linux/cpufreq.h:30:
+                ctl_name: CPU_NR_FREQ_MIN, \$

WARNING:INDENTED_LABEL: labels should not be indented
#831: FILE: include/linux/cpufreq.h:30:
+                ctl_name: CPU_NR_FREQ_MIN, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#832: FILE: include/linux/cpufreq.h:31:
+                procname: "speed-min", \$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#832: FILE: include/linux/cpufreq.h:31:
+                procname: "speed-min", \
                         ^

WARNING:INDENTED_LABEL: labels should not be indented
#832: FILE: include/linux/cpufreq.h:31:
+                procname: "speed-min", \

ERROR:CODE_INDENT: code indent should use tabs where possible
#833: FILE: include/linux/cpufreq.h:32:
+                mode: 0444, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#834: FILE: include/linux/cpufreq.h:33:
+                proc_handler: cpufreq_procctl_min, \$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#834: FILE: include/linux/cpufreq.h:33:
+                proc_handler: cpufreq_procctl_min, \
                             ^

WARNING:INDENTED_LABEL: labels should not be indented
#834: FILE: include/linux/cpufreq.h:33:
+                proc_handler: cpufreq_procctl_min, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#835: FILE: include/linux/cpufreq.h:34:
+                extra1: (void*) (cpunr), }$

CHECK:SPACING: No space is necessary after a cast
#835: FILE: include/linux/cpufreq.h:34:
+                extra1: (void*) (cpunr), }

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#835: FILE: include/linux/cpufreq.h:34:
+                extra1: (void*) (cpunr), }

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#835: FILE: include/linux/cpufreq.h:34:
+                extra1: (void*) (cpunr), }
                       ^

WARNING:INDENTED_LABEL: labels should not be indented
#835: FILE: include/linux/cpufreq.h:34:
+                extra1: (void*) (cpunr), }

ERROR:CODE_INDENT: code indent should use tabs where possible
#838: FILE: include/linux/cpufreq.h:37:
+                ctl_name: CPU_NR_FREQ_MIN, \$

WARNING:INDENTED_LABEL: labels should not be indented
#838: FILE: include/linux/cpufreq.h:37:
+                ctl_name: CPU_NR_FREQ_MIN, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#839: FILE: include/linux/cpufreq.h:38:
+                procname: "speed", \$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#839: FILE: include/linux/cpufreq.h:38:
+                procname: "speed", \
                         ^

WARNING:INDENTED_LABEL: labels should not be indented
#839: FILE: include/linux/cpufreq.h:38:
+                procname: "speed", \

ERROR:CODE_INDENT: code indent should use tabs where possible
#840: FILE: include/linux/cpufreq.h:39:
+                mode: 0644, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#841: FILE: include/linux/cpufreq.h:40:
+                proc_handler: cpufreq_procctl, \$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#841: FILE: include/linux/cpufreq.h:40:
+                proc_handler: cpufreq_procctl, \
                             ^

WARNING:INDENTED_LABEL: labels should not be indented
#841: FILE: include/linux/cpufreq.h:40:
+                proc_handler: cpufreq_procctl, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#842: FILE: include/linux/cpufreq.h:41:
+                strategy: cpufreq_sysctl, \$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#842: FILE: include/linux/cpufreq.h:41:
+                strategy: cpufreq_sysctl, \
                         ^

WARNING:INDENTED_LABEL: labels should not be indented
#842: FILE: include/linux/cpufreq.h:41:
+                strategy: cpufreq_sysctl, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#843: FILE: include/linux/cpufreq.h:42:
+                extra1: (void*) (cpunr), }$

CHECK:SPACING: No space is necessary after a cast
#843: FILE: include/linux/cpufreq.h:42:
+                extra1: (void*) (cpunr), }

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#843: FILE: include/linux/cpufreq.h:42:
+                extra1: (void*) (cpunr), }

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#843: FILE: include/linux/cpufreq.h:42:
+                extra1: (void*) (cpunr), }
                       ^

WARNING:INDENTED_LABEL: labels should not be indented
#843: FILE: include/linux/cpufreq.h:42:
+                extra1: (void*) (cpunr), }

ERROR:CODE_INDENT: code indent should use tabs where possible
#846: FILE: include/linux/cpufreq.h:45:
+                ctl_name: CPU_NR_FREQ_SYNC, \$

WARNING:INDENTED_LABEL: labels should not be indented
#846: FILE: include/linux/cpufreq.h:45:
+                ctl_name: CPU_NR_FREQ_SYNC, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#847: FILE: include/linux/cpufreq.h:46:
+                procname: "speed-sync", \$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#847: FILE: include/linux/cpufreq.h:46:
+                procname: "speed-sync", \
                         ^

WARNING:INDENTED_LABEL: labels should not be indented
#847: FILE: include/linux/cpufreq.h:46:
+                procname: "speed-sync", \

ERROR:CODE_INDENT: code indent should use tabs where possible
#848: FILE: include/linux/cpufreq.h:47:
+                mode: 0444, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#849: FILE: include/linux/cpufreq.h:48:
+                proc_handler: cpufreq_procctl_sync }$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#849: FILE: include/linux/cpufreq.h:48:
+                proc_handler: cpufreq_procctl_sync }
                             ^

WARNING:INDENTED_LABEL: labels should not be indented
#849: FILE: include/linux/cpufreq.h:48:
+                proc_handler: cpufreq_procctl_sync }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#861: FILE: include/linux/cpufreq.h:60:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#878: FILE: include/linux/cpufreq.h:77:
+void cpufreq_updateminmax(struct cpufreq_freqs *freq, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#879: FILE: include/linux/cpufreq.h:78:
+^I^I^I  unsigned int min, $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#897: FILE: include/linux/cpufreq.h:96:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#905: FILE: include/linux/cpufreq.h:104:
+^Istruct cpufreq_freqs    *freq;^I$

WARNING:TYPO_SPELLING: 'compatibilty' may be misspelled - perhaps 'compatibility'?
#923: FILE: include/linux/sysctl.h:653:
+	CPU_NR   = 1,           /* compatibilty reasons */
 	                           ^^^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#966: FILE: include/linux/sysctl.h:696:
+
+

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#971: FILE: include/linux/sysctl.h:701:
+#define CTL_CPU_VARS_CPUFREQ(cpunr) CTL_CPU_VARS_SPEED_MAX(cpunr), \
+                                    CTL_CPU_VARS_SPEED_MIN(cpunr), \
+                                    CTL_CPU_VARS_SPEED(cpunr),  \
+                                    CTL_CPU_VARS_SPEED_SYNC, 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpunr' - possible side-effects?
#971: FILE: include/linux/sysctl.h:701:
+#define CTL_CPU_VARS_CPUFREQ(cpunr) CTL_CPU_VARS_SPEED_MAX(cpunr), \
+                                    CTL_CPU_VARS_SPEED_MIN(cpunr), \
+                                    CTL_CPU_VARS_SPEED(cpunr),  \
+                                    CTL_CPU_VARS_SPEED_SYNC, 

ERROR:CODE_INDENT: code indent should use tabs where possible
#972: FILE: include/linux/sysctl.h:702:
+                                    CTL_CPU_VARS_SPEED_MIN(cpunr), \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: include/linux/sysctl.h:702:
+                                    CTL_CPU_VARS_SPEED_MIN(cpunr), \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#973: FILE: include/linux/sysctl.h:703:
+                                    CTL_CPU_VARS_SPEED(cpunr),  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#973: FILE: include/linux/sysctl.h:703:
+                                    CTL_CPU_VARS_SPEED(cpunr),  \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#974: FILE: include/linux/sysctl.h:704:
+                                    CTL_CPU_VARS_SPEED_SYNC, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#974: FILE: include/linux/sysctl.h:704:
+                                    CTL_CPU_VARS_SPEED_SYNC, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#974: FILE: include/linux/sysctl.h:704:
+                                    CTL_CPU_VARS_SPEED_SYNC, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#979: FILE: include/linux/sysctl.h:709:
+/* one ctl_table_vars_{0,1,...,(NR_CPUS-1)} for each CPU - this is only the $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#980: FILE: include/linux/sysctl.h:710:
+ * macro for the definitions in kernel/sysctl.c */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#982: FILE: include/linux/sysctl.h:712:
+                CTL_CPU_VARS_CPUFREQ(cpunr)\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#982: FILE: include/linux/sysctl.h:712:
+                CTL_CPU_VARS_CPUFREQ(cpunr)\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#983: FILE: include/linux/sysctl.h:713:
+                { ctl_name: 0, }, }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#983: FILE: include/linux/sysctl.h:713:
+                { ctl_name: 0, }, }$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 's' may be better as '(s)' to avoid precedence issues
#986: FILE: include/linux/sysctl.h:716:
+#define CPU_ENUM(s) { \
+                ctl_name: (CPU_NR + s), \
+                procname: #s, \
+                mode: 0555, \
+                child: ctl_cpu_vars_##s }

ERROR:CODE_INDENT: code indent should use tabs where possible
#987: FILE: include/linux/sysctl.h:717:
+                ctl_name: (CPU_NR + s), \$

WARNING:INDENTED_LABEL: labels should not be indented
#987: FILE: include/linux/sysctl.h:717:
+                ctl_name: (CPU_NR + s), \

ERROR:CODE_INDENT: code indent should use tabs where possible
#988: FILE: include/linux/sysctl.h:718:
+                procname: #s, \$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#988: FILE: include/linux/sysctl.h:718:
+                procname: #s, \
                         ^

WARNING:INDENTED_LABEL: labels should not be indented
#988: FILE: include/linux/sysctl.h:718:
+                procname: #s, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#989: FILE: include/linux/sysctl.h:719:
+                mode: 0555, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#990: FILE: include/linux/sysctl.h:720:
+                child: ctl_cpu_vars_##s }$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#990: FILE: include/linux/sysctl.h:720:
+                child: ctl_cpu_vars_##s }
                      ^

WARNING:INDENTED_LABEL: labels should not be indented
#990: FILE: include/linux/sysctl.h:720:
+                child: ctl_cpu_vars_##s }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#992: FILE: include/linux/sysctl.h:722:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1004: FILE: kernel/sysctl.c:98:
+extern int cpufreq_sysctl(ctl_table *table, int *name, int nlen,
+	       void *oldval, size_t *oldlenp,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1006: FILE: kernel/sysctl.c:100:
+extern int

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1007: FILE: kernel/sysctl.c:101:
+cpufreq_procctl(ctl_table *ctl, int write, struct file *filp,
                                                         ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1008: FILE: kernel/sysctl.c:102:
+cpufreq_procctl(ctl_table *ctl, int write, struct file *filp,
+	       void *buffer, size_t *lenp);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1009: FILE: kernel/sysctl.c:103:
+extern int

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1010: FILE: kernel/sysctl.c:104:
+cpufreq_procctl_max(ctl_table *ctl, int write, struct file *filp,
                                                             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1011: FILE: kernel/sysctl.c:105:
+cpufreq_procctl_max(ctl_table *ctl, int write, struct file *filp,
+	       void *buffer, size_t *lenp);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1012: FILE: kernel/sysctl.c:106:
+extern int

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1013: FILE: kernel/sysctl.c:107:
+cpufreq_procctl_min(ctl_table *ctl, int write, struct file *filp,
                                                             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1014: FILE: kernel/sysctl.c:108:
+cpufreq_procctl_min(ctl_table *ctl, int write, struct file *filp,
+	       void *buffer, size_t *lenp);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1015: FILE: kernel/sysctl.c:109:
+extern int

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1016: FILE: kernel/sysctl.c:110:
+cpufreq_procctl_sync(ctl_table *ctl, int write, struct file *filp,
                                                              ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1017: FILE: kernel/sysctl.c:111:
+cpufreq_procctl_sync(ctl_table *ctl, int write, struct file *filp,
+	       void *buffer, size_t *lenp);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1044: FILE: kernel/sysctl.c:368:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1047: FILE: kernel/sysctl.c:371:
+        CTL_TABLE_CPU_VARS(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1047: FILE: kernel/sysctl.c:371:
+        CTL_TABLE_CPU_VARS(0);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1293: FILE: Documentation/cpufreq:39:
+a boot parameter to set limits on the speed settings which may occur. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1327: FILE: Documentation/cpufreq:73:
+CPUFreq uses a "sysctl" interface which is located in $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1332: FILE: Documentation/cpufreq:78:
+CPUFreq: speed-max, speed-min, speed-sync and speed: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1334: FILE: Documentation/cpufreq:80:
+speed^I^I    shows the current CPU frequency in kHz, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1412: FILE: Documentation/cpufreq:158:
+transition. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1415: FILE: Documentation/cpufreq:161:
+consisting of five values: cpu, min, max, cur and new.  min and max $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1416: FILE: Documentation/cpufreq:162:
+are the minimum and maximum frequency rates that the device can $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1417: FILE: Documentation/cpufreq:163:
+tolerate. cur is the current/old speed.  new is the new speed, but $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1418: FILE: Documentation/cpufreq:164:
+might only be valid during the CPUFREQ_PRECHANGE or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1419: FILE: Documentation/cpufreq:165:
+CPUFREQ_POSTCHANGE phases. And cpu is either the number of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1432: FILE: Documentation/cpufreq:178:
+    of CPUFREQ_PRECHANGE. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1475: FILE: Documentation/cpufreq:221:
+following definition: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1477: FILE: Documentation/cpufreq:223:
+^I^I^I^I       unsigned int kHz). $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1485: FILE: Documentation/cpufreq:231:
+following definition: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1486: FILE: Documentation/cpufreq:232:
+     void setspeed_function (unsigned int cpu, unsigned int kHz). $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1487: FILE: Documentation/cpufreq:233:
+This function shall perform the transition to the new CPU frequency $

WARNING:TYPO_SPELLING: 'snyc' may be misspelled - perhaps 'sync'?
#1491: FILE: Documentation/cpufreq:237:
+unsigned int snyc: one if all CPUs need to run on the same core frequency
              ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1492: FILE: Documentation/cpufreq:238:
+all the time, or zero if asynchronous frequencies are possible. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1521: FILE: Documentation/cpufreq:267:
+* kfree() the struct cpufreq_driver only after the call to $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000443744.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 104 errors, 72 warnings, 59 checks, 1482 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000443744.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
