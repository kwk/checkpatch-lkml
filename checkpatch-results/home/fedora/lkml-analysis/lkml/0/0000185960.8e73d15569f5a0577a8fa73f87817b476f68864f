WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
--- a6d962c4f559f3644678574a66310084fd13d130/fs/namespace.c  (mode:100644 sha1:3b93e5d750ebf8452ea1264251c5b55cc89f48f8)

WARNING:LINE_SPACING: Missing a blank line after declarations
#67: FILE: fs/namespace.c:57:
+	int err = 0;
+	spin_lock(&vfsmount_lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#72: FILE: fs/namespace.c:62:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#94: FILE: fs/namespace.c:84:
+	int err = inc_nr_mounts(owner);
+	if (err)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#101: FILE: fs/namespace.c:91:
+		return ERR_PTR(-ENOMEM);
+	} else {

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#161: FILE: fs/namespace.c:529:
+	if (!capable(CAP_SYS_ADMIN) && (nd.mnt->mnt_owner != current->user ||
 	                                ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#171: FILE: fs/namespace.c:553:
+static struct user_struct *mount_is_safe(struct nameidata *nd)
                                                            ^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#214: FILE: fs/namespace.c:589:
+	res = q = clone_mnt(mnt, dentry, owner);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#259: FILE: fs/namespace.c:673:
+	struct user_struct *owner = mount_is_safe(nd);
 	                                          ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#260: FILE: fs/namespace.c:674:
+	struct user_struct *owner = mount_is_safe(nd);
+	if (IS_ERR(owner))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#407: FILE: include/linux/fs.h:43:
+};
+extern struct mounts_stat_struct mounts_stat;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#429: FILE: include/linux/mount.h:68:
+extern struct vfsmount *alloc_vfsmnt(const char *name,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#458: FILE: include/linux/sysctl.h:670:
+	FS_NRMOUNT=9,	/* int:current number of mounts */
 	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#459: FILE: include/linux/sysctl.h:671:
+	FS_MAXMOUNT=10,	/* int:maximum number of mounts allowed */
 	           ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000185960.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 8 warnings, 4 checks, 386 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000185960.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
