WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
This is the 2nd Part wich adds Multiboot compatibility to vmlinux, by adding a Multibootheader to 

WARNING:TYPO_SPELLING: 'wich' may be misspelled - perhaps 'which'?
#35: 
This is the 2nd Part wich adds Multiboot compatibility to vmlinux, by adding a Multibootheader to 
                     ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#58: 
Look at the "Debian Installation Disk's" for an example that this is usefull, at the moment they use 4 different kernel Images for the (i386) Installation disks, with this patch they would only need 1 kernel Image. 
                                                                     ^^^^^^^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#67: 
MfG, Christian König. (and sorry for my poor English).
                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#232: FILE: arch/i386/kernel/setup.c:673:
+static int __init mboot_2_e820_map(struct e820entry * biosmap, int nr_map)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#235: FILE: arch/i386/kernel/setup.c:676:
+	struct multiboot_memory_map *addr;
+	addr = (struct multiboot_memory_map *)mbootinfo->mmap_addr;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#237: FILE: arch/i386/kernel/setup.c:678:
+	while((char *)addr < (mbootinfo->mmap_addr + mbootinfo->mmap_length)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#238: FILE: arch/i386/kernel/setup.c:679:
+	while((char *)addr < (mbootinfo->mmap_addr + mbootinfo->mmap_length)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#239: FILE: arch/i386/kernel/setup.c:680:
+		biosmap[nr_map].addr = addr->base_addr_low + ((unsigned long long)addr->base_addr_high << 32);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#240: FILE: arch/i386/kernel/setup.c:681:
+		biosmap[nr_map].size = addr->length_low + ((unsigned long long)addr->length_high << 32);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#244: FILE: arch/i386/kernel/setup.c:685:
+			((char *)addr + addr->size + sizeof (addr->size));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#270: FILE: arch/i386/kernel/setup.c:719:
+		} else {
[...]
 		if (ALT_MEM_K < EXT_MEM_K) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: arch/i386/kernel/setup.c:733:
+  ^I}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#278: FILE: arch/i386/kernel/setup.c:733:
+  ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: arch/i386/kernel/setup.c:733:
+  ^I}$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#299: FILE: arch/i386/kernel/setup.c:812:
+#define INFBOUND(a,b)	if (b > a) a = b
                   ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#299: FILE: arch/i386/kernel/setup.c:812:
+#define INFBOUND(a,b)	if (b > a) a = b

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#299: FILE: arch/i386/kernel/setup.c:812:
+#define INFBOUND(a,b)	if (b > a) a = b

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#299: FILE: arch/i386/kernel/setup.c:812:
+#define INFBOUND(a,b)	if (b > a) a = b

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#299: FILE: arch/i386/kernel/setup.c:812:
+#define INFBOUND(a,b)	if (b > a) a = b

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#299: FILE: arch/i386/kernel/setup.c:812:
+#define INFBOUND(a,b)	if (b > a) a = b

ERROR:SPACING: space required after that ',' (ctx:VxV)
#300: FILE: arch/i386/kernel/setup.c:813:
+#define SUPBOUND(a,b)	if (b < a) a = b
                   ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#300: FILE: arch/i386/kernel/setup.c:813:
+#define SUPBOUND(a,b)	if (b < a) a = b

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#300: FILE: arch/i386/kernel/setup.c:813:
+#define SUPBOUND(a,b)	if (b < a) a = b

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#300: FILE: arch/i386/kernel/setup.c:813:
+#define SUPBOUND(a,b)	if (b < a) a = b

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#300: FILE: arch/i386/kernel/setup.c:813:
+#define SUPBOUND(a,b)	if (b < a) a = b

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#300: FILE: arch/i386/kernel/setup.c:813:
+#define SUPBOUND(a,b)	if (b < a) a = b

CHECK:LINE_SPACING: Please don't use multiple blank lines
#302: FILE: arch/i386/kernel/setup.c:815:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#316: FILE: arch/i386/kernel/setup.c:829:
+		for(i=0;i<mbootinfo->mods_count;i++) {
 		     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#316: FILE: arch/i386/kernel/setup.c:829:
+		for(i=0;i<mbootinfo->mods_count;i++) {
 		       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#316: FILE: arch/i386/kernel/setup.c:829:
+		for(i=0;i<mbootinfo->mods_count;i++) {
 		         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#316: FILE: arch/i386/kernel/setup.c:829:
+		for(i=0;i<mbootinfo->mods_count;i++) {
 		                               ^

ERROR:SPACING: space required before the open parenthesis '('
#316: FILE: arch/i386/kernel/setup.c:829:
+		for(i=0;i<mbootinfo->mods_count;i++) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#317: FILE: arch/i386/kernel/setup.c:830:
+			INFBOUND(start_pfn,addr[i].mod_end);
 			                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#322: FILE: arch/i386/kernel/setup.c:835:
+			SUPBOUND(mboot_module_start,addr[i].mod_start);
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: arch/i386/kernel/setup.c:836:
+			INFBOUND(mboot_module_end,addr[i].mod_end);
 			                         ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#325: FILE: arch/i386/kernel/setup.c:838:
+
+		}

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#326: FILE: arch/i386/kernel/setup.c:839:
+		printk(KERN_INFO "Multiboot module mem 0x%lx - 0x%lx\n",mboot_module_start, mboot_module_end);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#326: FILE: arch/i386/kernel/setup.c:839:
+		printk(KERN_INFO "Multiboot module mem 0x%lx - 0x%lx\n",mboot_module_start, mboot_module_end);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#326: FILE: arch/i386/kernel/setup.c:839:
+		printk(KERN_INFO "Multiboot module mem 0x%lx - 0x%lx\n",mboot_module_start, mboot_module_end);
 		                                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#334: FILE: arch/i386/kernel/setup.c:847:
+#define PFN_UP(x)	(((x) + PAGE_SIZE-1) >> PAGE_SHIFT)
                  	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#347: FILE: arch/i386/kernel/setup.c:860:
+			SUPBOUND(mboot_mem_start,(unsigned long)mbootinfo->mods_addr);
 			                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#348: FILE: arch/i386/kernel/setup.c:861:
+			INFBOUND(mboot_mem_end,(unsigned long)mbootinfo->mods_addr +
 			                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#351: FILE: arch/i386/kernel/setup.c:864:
+			for(i=0;i<mbootinfo->mods_count;i++) {
 			     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#351: FILE: arch/i386/kernel/setup.c:864:
+			for(i=0;i<mbootinfo->mods_count;i++) {
 			       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#351: FILE: arch/i386/kernel/setup.c:864:
+			for(i=0;i<mbootinfo->mods_count;i++) {
 			         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#351: FILE: arch/i386/kernel/setup.c:864:
+			for(i=0;i<mbootinfo->mods_count;i++) {
 			                               ^

ERROR:SPACING: space required before the open parenthesis '('
#351: FILE: arch/i386/kernel/setup.c:864:
+			for(i=0;i<mbootinfo->mods_count;i++) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#355: FILE: arch/i386/kernel/setup.c:868:
+				SUPBOUND(mboot_mem_start,(unsigned long)addr->string);
 				                        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#356: FILE: arch/i386/kernel/setup.c:869:
+				for(str = addr->string;str[0] != 0;str++);
 				                      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#356: FILE: arch/i386/kernel/setup.c:869:
+				for(str = addr->string;str[0] != 0;str++);
 				                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#356: FILE: arch/i386/kernel/setup.c:869:
+				for(str = addr->string;str[0] != 0;str++);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#356: FILE: arch/i386/kernel/setup.c:869:
+				for(str = addr->string;str[0] != 0;str++);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#357: FILE: arch/i386/kernel/setup.c:870:
+				INFBOUND(mboot_mem_end,(unsigned long)str);
 				                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#361: FILE: arch/i386/kernel/setup.c:874:
+			SUPBOUND(mboot_mem_start,(unsigned int)mbootinfo->mods_addr);
 			                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#362: FILE: arch/i386/kernel/setup.c:875:
+			INFBOUND(mboot_mem_end,(unsigned int)mbootinfo->mods_addr);
 			                      ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#365: FILE: arch/i386/kernel/setup.c:878:
+
+		}

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#370: FILE: arch/i386/kernel/setup.c:883:
+		printk(KERN_NOTICE "Reserving Multiboot Memory 0x%lx - 0x%lx\n",mboot_mem_start,mboot_mem_end);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#370: FILE: arch/i386/kernel/setup.c:883:
+		printk(KERN_NOTICE "Reserving Multiboot Memory 0x%lx - 0x%lx\n",mboot_mem_start,mboot_mem_end);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#370: FILE: arch/i386/kernel/setup.c:883:
+		printk(KERN_NOTICE "Reserving Multiboot Memory 0x%lx - 0x%lx\n",mboot_mem_start,mboot_mem_end);
 		                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#370: FILE: arch/i386/kernel/setup.c:883:
+		printk(KERN_NOTICE "Reserving Multiboot Memory 0x%lx - 0x%lx\n",mboot_mem_start,mboot_mem_end);
 		                                                                               ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#388: FILE: arch/i386/kernel/setup.c:906:
+	if (mbootinfo) {
+

CHECK:CAMELCASE: Avoid CamelCase: <orig_video_isVGA>
#396: FILE: arch/i386/kernel/setup.c:914:
+		screen_info.orig_video_isVGA = 1;	/* 0x0f */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#402: FILE: arch/i386/kernel/setup.c:920:
+	} else {
  	screen_info = SCREEN_INFO;

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#454: FILE: arch/i386/mm/init.c:545:
+#define FREE_RESERVED_MEM(addr) {\
+	ClearPageReserved(virt_to_page(addr)); \
+	set_page_count(virt_to_page(addr), 1); \
+	free_page(addr); \
+	totalram_pages++; \
+}

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#474: FILE: arch/i386/mm/init.c:559:
+		printk ("Freeing Multiboot memory: %ldk freed\n", (mboot_mem_end - mboot_mem_start) >> 10);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#474: FILE: arch/i386/mm/init.c:559:
+		printk ("Freeing Multiboot memory: %ldk freed\n", (mboot_mem_end - mboot_mem_start) >> 10);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#474: FILE: arch/i386/mm/init.c:559:
+		printk ("Freeing Multiboot memory: %ldk freed\n", (mboot_mem_end - mboot_mem_start) >> 10);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mbootinfo->mods_count > 0'
#476: FILE: arch/i386/mm/init.c:561:
+		if ((mbootinfo->flags & MBOOTINFO_HAVE_MODULE) && (mbootinfo->mods_count > 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#479: FILE: arch/i386/mm/init.c:564:
+			printk ("Freeing Multiboot-Module memory: %ldk freed\n", (mboot_module_end - mboot_module_start) >> 10);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#479: FILE: arch/i386/mm/init.c:564:
+			printk ("Freeing Multiboot-Module memory: %ldk freed\n", (mboot_module_end - mboot_module_start) >> 10);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#479: FILE: arch/i386/mm/init.c:564:
+			printk ("Freeing Multiboot-Module memory: %ldk freed\n", (mboot_module_end - mboot_module_start) >> 10);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#595: FILE: include/asm-i386/multiboot.h:1:
+/* multiboot.h - the header for Multiboot */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#597: FILE: include/asm-i386/multiboot.h:3:
+   $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#597: FILE: include/asm-i386/multiboot.h:3:
+/* Copyright (C) 1999, 2001  Free Software Foundation, Inc.
+   

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#602: FILE: include/asm-i386/multiboot.h:8:
+   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#607: FILE: include/asm-i386/multiboot.h:13:
+   $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#609: FILE: include/asm-i386/multiboot.h:15:
+   aint with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#610: FILE: include/asm-i386/multiboot.h:16:
+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#610: FILE: include/asm-i386/multiboot.h:16:
+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#661: FILE: include/asm-i386/multiboot.h:67:
+struct multiboot_header
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#662: FILE: include/asm-i386/multiboot.h:68:
+  unsigned int magic;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: include/asm-i386/multiboot.h:69:
+  unsigned int flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: include/asm-i386/multiboot.h:70:
+  unsigned int checksum;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: include/asm-i386/multiboot.h:71:
+  unsigned int header_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#666: FILE: include/asm-i386/multiboot.h:72:
+  unsigned int load_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: include/asm-i386/multiboot.h:73:
+  unsigned int load_end_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#668: FILE: include/asm-i386/multiboot.h:74:
+  unsigned int bss_end_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: include/asm-i386/multiboot.h:75:
+  unsigned int entry_addr;$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#674: FILE: include/asm-i386/multiboot.h:80:
+struct multiboot_aout_symbol_table
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: include/asm-i386/multiboot.h:81:
+  unsigned int tabsize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: include/asm-i386/multiboot.h:82:
+  unsigned int strsize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: include/asm-i386/multiboot.h:83:
+  unsigned int addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#678: FILE: include/asm-i386/multiboot.h:84:
+  unsigned int reserved;$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#683: FILE: include/asm-i386/multiboot.h:89:
+struct multiboot_elf_section_header_table
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: include/asm-i386/multiboot.h:90:
+  unsigned int num;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: include/asm-i386/multiboot.h:91:
+  unsigned int size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: include/asm-i386/multiboot.h:92:
+  unsigned int addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#687: FILE: include/asm-i386/multiboot.h:93:
+  unsigned int shndx;$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#692: FILE: include/asm-i386/multiboot.h:98:
+struct multiboot_module
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: include/asm-i386/multiboot.h:99:
+  unsigned int mod_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: include/asm-i386/multiboot.h:100:
+  unsigned int mod_end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: include/asm-i386/multiboot.h:101:
+  char *string;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: include/asm-i386/multiboot.h:102:
+  unsigned int reserved;$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#701: FILE: include/asm-i386/multiboot.h:107:
+struct multiboot_info
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#702: FILE: include/asm-i386/multiboot.h:108:
+  unsigned int flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: include/asm-i386/multiboot.h:109:
+  unsigned int mem_lower;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: include/asm-i386/multiboot.h:110:
+  unsigned int mem_upper;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: include/asm-i386/multiboot.h:111:
+  unsigned int boot_device;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#706: FILE: include/asm-i386/multiboot.h:112:
+  char *cmdline;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: include/asm-i386/multiboot.h:113:
+  unsigned int mods_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#708: FILE: include/asm-i386/multiboot.h:114:
+  struct multiboot_module *mods_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: include/asm-i386/multiboot.h:115:
+  union$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: include/asm-i386/multiboot.h:116:
+  {$

ERROR:OPEN_BRACE: open brace '{' following union go on the same line
#710: FILE: include/asm-i386/multiboot.h:116:
+  union
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: include/asm-i386/multiboot.h:117:
+    struct multiboot_aout_symbol_table aout_sym;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: include/asm-i386/multiboot.h:118:
+    struct multiboot_elf_section_header_table elf_sec;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: include/asm-i386/multiboot.h:119:
+  } u;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: include/asm-i386/multiboot.h:120:
+  unsigned int mmap_length;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: include/asm-i386/multiboot.h:121:
+  char *mmap_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: include/asm-i386/multiboot.h:122:
+  unsigned int drives_length;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: include/asm-i386/multiboot.h:123:
+  unsigned int drives_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: include/asm-i386/multiboot.h:124:
+  unsigned int config_table;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: include/asm-i386/multiboot.h:125:
+  char *boot_loader_name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#720: FILE: include/asm-i386/multiboot.h:126:
+  struct apm_bios_info *apm_table;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: include/asm-i386/multiboot.h:127:
+  unsigned int vbe_control_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: include/asm-i386/multiboot.h:128:
+  unsigned int vbe_mode_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#723: FILE: include/asm-i386/multiboot.h:129:
+  unsigned short vbe_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: include/asm-i386/multiboot.h:130:
+  unsigned short vbe_interface_seg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: include/asm-i386/multiboot.h:131:
+  unsigned short vbe_interface_off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: include/asm-i386/multiboot.h:132:
+  unsigned short vbe_interface_len;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#730: FILE: include/asm-i386/multiboot.h:136:
+/* The memory map. Be careful that the offset 0 is base_addr_low
+   but no size.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#730: FILE: include/asm-i386/multiboot.h:136:
+   but no size.  */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#732: FILE: include/asm-i386/multiboot.h:138:
+struct multiboot_memory_map
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: include/asm-i386/multiboot.h:139:
+  unsigned int size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: include/asm-i386/multiboot.h:140:
+  unsigned int base_addr_low;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#735: FILE: include/asm-i386/multiboot.h:141:
+  unsigned int base_addr_high;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#736: FILE: include/asm-i386/multiboot.h:142:
+  unsigned int length_low;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#737: FILE: include/asm-i386/multiboot.h:143:
+  unsigned int length_high;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#738: FILE: include/asm-i386/multiboot.h:144:
+  unsigned int  type;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000493478.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 45 errors, 77 warnings, 18 checks, 619 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000493478.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
