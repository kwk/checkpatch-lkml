CHECK:SPACING: No space is necessary after a cast
#287: FILE: include/asm-alpha/thread_info.h:55:
+  ((void *) __get_free_pages(GFP_KERNEL,1))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: include/asm-alpha/thread_info.h:55:
+  ((void *) __get_free_pages(GFP_KERNEL,1))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#287: FILE: include/asm-alpha/thread_info.h:55:
+  ((void *) __get_free_pages(GFP_KERNEL,1))
                                        ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#302: FILE: include/asm-arm/thread_info.h:95:
+extern void *alloc_thread_stack(struct task_struct *task);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#303: FILE: include/asm-arm/thread_info.h:96:
+extern void free_thread_stack(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#303: FILE: include/asm-arm/thread_info.h:96:
+extern void free_thread_stack(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#317: FILE: include/asm-arm26/thread_info.h:87:
+extern void *alloc_thread_stack(struct task_struct *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#318: FILE: include/asm-arm26/thread_info.h:88:
+extern void free_thread_stack(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#318: FILE: include/asm-arm26/thread_info.h:88:
+extern void free_thread_stack(void *);

CHECK:SPACING: No space is necessary after a cast
#334: FILE: include/asm-cris/thread_info.h:70:
+#define alloc_thread_stack(tsk) ((void *) __get_free_pages(GFP_KERNEL,1))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#334: FILE: include/asm-cris/thread_info.h:70:
+#define alloc_thread_stack(tsk) ((void *) __get_free_pages(GFP_KERNEL,1))
                                                                      ^

CHECK:SPACING: No space is necessary after a cast
#431: FILE: include/asm-ia64/thread_info.h:56:
+#define alloc_thread_stack(tsk)	((char *) (tsk) + IA64_TASK_SIZE)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#478: FILE: include/asm-m68k/thread_info.h:29:
+#define alloc_thread_stack(tsk)   ((void *)__get_free_pages(GFP_KERNEL,0))
                                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#479: FILE: include/asm-m68k/thread_info.h:30:
+#define free_thread_stack(stk)  free_pages((unsigned long)(stk),0)
                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#483: FILE: include/asm-m68k/thread_info.h:32:
+#define alloc_thread_stack(tsk)   ((void *)__get_free_pages(GFP_KERNEL,1))
                                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#484: FILE: include/asm-m68k/thread_info.h:33:
+#define free_thread_stack(stk)  free_pages((unsigned long)(stk),1)
                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#627: FILE: include/asm-s390/thread_info.h:83:
+#define free_thread_stack(stk) free_pages((unsigned long)(stk),THREAD_ORDER)
                                                               ^

CHECK:SPACING: No space is necessary after a cast
#644: FILE: include/asm-sh/thread_info.h:61:
+#define alloc_thread_stack(tsk) ((void *) __get_free_pages(GFP_KERNEL,1))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#644: FILE: include/asm-sh/thread_info.h:61:
+#define alloc_thread_stack(tsk) ((void *) __get_free_pages(GFP_KERNEL,1))
                                                                      ^

CHECK:SPACING: No space is necessary after a cast
#664: FILE: include/asm-sh64/thread_info.h:64:
+#define alloc_thread_stack(tsk) ((void *) __get_free_pages(GFP_KERNEL,1))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#664: FILE: include/asm-sh64/thread_info.h:64:
+#define alloc_thread_stack(tsk) ((void *) __get_free_pages(GFP_KERNEL,1))
                                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#747: FILE: include/asm-sparc64/thread_info.h:179:
+	free_pages((unsigned long)(stk),__THREAD_INFO_ORDER)
 	                               ^

CHECK:SPACING: No space is necessary after a cast
#765: FILE: include/asm-um/thread_info.h:56:
+	((void *) kmalloc(THREAD_SIZE, GFP_KERNEL))

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#765: FILE: include/asm-um/thread_info.h:56:
+	((void *) kmalloc(THREAD_SIZE, GFP_KERNEL))

CHECK:SPACING: No space is necessary after a cast
#802: FILE: include/asm-x86_64/thread_info.h:77:
+	((void *) __get_free_pages(GFP_KERNEL,THREAD_ORDER))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#802: FILE: include/asm-x86_64/thread_info.h:77:
+	((void *) __get_free_pages(GFP_KERNEL,THREAD_ORDER))
 	                                     ^

CHECK:SPACING: No space is necessary after a cast
#819: FILE: include/asm-xtensa/thread_info.h:94:
+#define alloc_thread_stack(tsk) ((void *) __get_free_pages(GFP_KERNEL,1))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#819: FILE: include/asm-xtensa/thread_info.h:94:
+#define alloc_thread_stack(tsk) ((void *) __get_free_pages(GFP_KERNEL,1))
                                                                      ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155245.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 4 warnings, 12 checks, 638 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155245.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
