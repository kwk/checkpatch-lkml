ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#58: FILE: arch/ppc64/kernel/prom.c:112:
+static void * prom_alloc(unsigned long size, unsigned long *mem_start)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#81: FILE: arch/ppc64/kernel/prom.c:277:
+static int __devinit finish_node_interrupts(struct device_node *np,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around np->intrs
#94: FILE: arch/ppc64/kernel/prom.c:293:
+	np->intrs = prom_alloc(intlen * sizeof(*(np->intrs)), mem_start);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#108: FILE: arch/ppc64/kernel/prom.c:342:
+static int __devinit interpret_pci_props(struct device_node *np,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: arch/ppc64/kernel/prom.c:361:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: arch/ppc64/kernel/prom.c:361:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: arch/ppc64/kernel/prom.c:362:
+ ^Iif (measure_only)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#144: FILE: arch/ppc64/kernel/prom.c:362:
+ ^Iif (measure_only)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: arch/ppc64/kernel/prom.c:362:
+ ^Iif (measure_only)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: arch/ppc64/kernel/prom.c:363:
+ ^I^Ireturn 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#145: FILE: arch/ppc64/kernel/prom.c:363:
+ ^I^Ireturn 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: arch/ppc64/kernel/prom.c:363:
+ ^I^Ireturn 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: arch/ppc64/kernel/prom.c:364:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: arch/ppc64/kernel/prom.c:364:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: arch/ppc64/kernel/prom.c:365:
+ ^Inp->addrs = adr;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#147: FILE: arch/ppc64/kernel/prom.c:365:
+ ^Inp->addrs = adr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: arch/ppc64/kernel/prom.c:365:
+ ^Inp->addrs = adr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: arch/ppc64/kernel/prom.c:366:
+ ^Inp->n_addrs = n_addrs;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#148: FILE: arch/ppc64/kernel/prom.c:366:
+ ^Inp->n_addrs = n_addrs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/ppc64/kernel/prom.c:366:
+ ^Inp->n_addrs = n_addrs;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: arch/ppc64/kernel/prom.c:367:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: arch/ppc64/kernel/prom.c:367:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: arch/ppc64/kernel/prom.c:368:
+ ^Ifor (i = 0; i < n_addrs; i++) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#150: FILE: arch/ppc64/kernel/prom.c:368:
+ ^Ifor (i = 0; i < n_addrs; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: arch/ppc64/kernel/prom.c:368:
+ ^Ifor (i = 0; i < n_addrs; i++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: arch/ppc64/kernel/prom.c:369:
+ ^I^Iadr[i].space = pci_addrs[i].addr.a_hi;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#151: FILE: arch/ppc64/kernel/prom.c:369:
+ ^I^Iadr[i].space = pci_addrs[i].addr.a_hi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/ppc64/kernel/prom.c:369:
+ ^I^Iadr[i].space = pci_addrs[i].addr.a_hi;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: arch/ppc64/kernel/prom.c:370:
+ ^I^Iadr[i].address = pci_addrs[i].addr.a_lo |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#152: FILE: arch/ppc64/kernel/prom.c:370:
+ ^I^Iadr[i].address = pci_addrs[i].addr.a_lo |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: arch/ppc64/kernel/prom.c:370:
+ ^I^Iadr[i].address = pci_addrs[i].addr.a_lo |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: arch/ppc64/kernel/prom.c:372:
+ ^I^Iadr[i].size = pci_addrs[i].size_lo;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#154: FILE: arch/ppc64/kernel/prom.c:372:
+ ^I^Iadr[i].size = pci_addrs[i].size_lo;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: arch/ppc64/kernel/prom.c:372:
+ ^I^Iadr[i].size = pci_addrs[i].size_lo;$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#169: FILE: arch/ppc64/kernel/prom.c:520:
+static int __devinit finish_node(struct device_node *np,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000198227.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 22 warnings, 1 checks, 238 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000198227.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
