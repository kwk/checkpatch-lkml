WARNING:TYPO_SPELLING: 'beggining' may be misspelled - perhaps 'beginning'?
#37: 
My email client added spaces in the beggining of some of the lines
                                    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
diff -uprN -X ../dontdiff linux-2.6.9-rc1-mm2/kernel/kallsyms.c linux-2.6.9-rc1-mm2-kall/kernel/kallsyms.c

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#81: FILE: kernel/kallsyms.c:51:
+/* expand a compressed symbol data into the resulting uncompressed string,
+   given the offset to where the symbol is in the compressed stream */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#81: FILE: kernel/kallsyms.c:51:
+   given the offset to where the symbol is in the compressed stream */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#89: FILE: kernel/kallsyms.c:58:
+	 * masking out the "is_exported" bit */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#96: FILE: kernel/kallsyms.c:64:
+	/* update the offset to return the offset for the next symbol on
+	   the compressed stream */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#96: FILE: kernel/kallsyms.c:64:
+	   the compressed stream */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#100: FILE: kernel/kallsyms.c:68:
+	/* for every byte on the compressed symbol data, copy the table
+	   entry for that byte */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#100: FILE: kernel/kallsyms.c:68:
+	   entry for that byte */

ERROR:SPACING: space prohibited after that open square bracket '['
#103: FILE: kernel/kallsyms.c:70:
+		tptr = &kallsyms_token_table[ kallsyms_token_index[*data] ];

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close square bracket ']'
#103: FILE: kernel/kallsyms.c:70:
+		tptr = &kallsyms_token_table[ kallsyms_token_index[*data] ];

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#126: FILE: kernel/kallsyms.c:88:
+/* find the offset on the compressed stream given and index in the
+   kallsyms array */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#126: FILE: kernel/kallsyms.c:88:
+   kallsyms array */

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: kernel/kallsyms.c:94:
+        /* use the closest marker we have. We have markers every$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: kernel/kallsyms.c:95:
+           256 positions, so that should be close enough */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#133: FILE: kernel/kallsyms.c:95:
+        /* use the closest marker we have. We have markers every
+           256 positions, so that should be close enough */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#133: FILE: kernel/kallsyms.c:95:
+           256 positions, so that should be close enough */

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: kernel/kallsyms.c:98:
+        /* sequentially scan all the symbols up to the point we're$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: kernel/kallsyms.c:99:
+           searching for. Every symbol is stored in a$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#137: FILE: kernel/kallsyms.c:99:
+        /* sequentially scan all the symbols up to the point we're
+           searching for. Every symbol is stored in a

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#140: FILE: kernel/kallsyms.c:102:
+	   pointer for every symbol we wish to skip */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#160: FILE: kernel/kallsyms.c:153:
+		/* search for the first aliased symbol. Aliased symbols are
+		   symbols with the same address */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#160: FILE: kernel/kallsyms.c:153:
+		   symbols with the same address */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#214: FILE: kernel/kallsyms.c:338:
+	 * using get_symbol_offset for every symbol */

WARNING:TYPO_SPELLING: 'decompresion' may be misspelled - perhaps 'decompression'?
#235: FILE: scripts/kallsyms.c:21:
+ *  decompresion can work without "special cases".
     ^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#248: FILE: scripts/kallsyms.c:33:
+ * very long substrings probably don't repeat themselves too often. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#255: FILE: scripts/kallsyms.c:38:
+ * to speed up compression, at the expense of a little compression ratio */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#262: FILE: scripts/kallsyms.c:45:
+ * search the bad list. */

WARNING:TYPO_SPELLING: 'aray' may be misspelled - perhaps 'array'?
#294: FILE: scripts/kallsyms.c:74:
+/* aray of pointers into the symbol table sorted by name */
    ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#301: FILE: scripts/kallsyms.c:81:
+	 * token into the table */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#348: FILE: scripts/kallsyms.c:196:
+ * might still be compressed itself, so the function needs to be recursive */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#356: FILE: scripts/kallsyms.c:204:
+		 * we are looking for, then end the search */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#379: FILE: scripts/kallsyms.c:256:
+	 * every 256 symbols */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#396: FILE: scripts/kallsyms.c:271:
+		if (table[i].flags & SYM_FLAG_EXPORTED) k |= 0x80;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#432: FILE: scripts/kallsyms.c:354:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'lenghts' may be misspelled - perhaps 'lengths'?
#433: FILE: scripts/kallsyms.c:355:
+/* build the counts for all the tokens that start with "data", and have lenghts
                                                                         ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#434: FILE: scripts/kallsyms.c:356:
+ * from 2 to "len" */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#460: FILE: scripts/kallsyms.c:393:
+			 * the good or bad list, is a comparison to zero */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#471: FILE: scripts/kallsyms.c:405:
+			 * different list */

WARNING:TYPO_SPELLING: 'lenghts' may be misspelled - perhaps 'lengths'?
#485: FILE: scripts/kallsyms.c:420:
+/* decrease the counts for all the tokens that start with "data", and have lenghts
                                                                            ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#488: FILE: scripts/kallsyms.c:423:
+ * The two separate functions exist only because of compression performance */

CHECK:SPACING: No space is necessary after a cast
#514: FILE: scripts/kallsyms.c:468:
+	return strcmp( (*((struct sym_entry **) a))->sym,

ERROR:SPACING: space prohibited after that open parenthesis '('
#514: FILE: scripts/kallsyms.c:468:
+	return strcmp( (*((struct sym_entry **) a))->sym,

CHECK:SPACING: No space is necessary after a cast
#515: FILE: scripts/kallsyms.c:469:
+				(*((struct sym_entry **) b))->sym );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#515: FILE: scripts/kallsyms.c:469:
+				(*((struct sym_entry **) b))->sym );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#518: FILE: scripts/kallsyms.c:472:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#521: FILE: scripts/kallsyms.c:475:
+ * and __stop___ksymtab */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#525: FILE: scripts/kallsyms.c:479:
+	char buf[KSYM_NAME_LEN+32];
 	                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: scripts/kallsyms.c:486:
+	result = bsearch(&ksym, sorted_table, cnt,
+				sizeof(struct sym_entry *), symbol_sort);

ERROR:SPACING: space required before the open parenthesis '('
#534: FILE: scripts/kallsyms.c:488:
+	if(!result) return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#534: FILE: scripts/kallsyms.c:488:
+	if(!result) return 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#547: FILE: scripts/kallsyms.c:501:
+	 * symbol is faster */

ERROR:SPACING: space prohibited after that open parenthesis '('
#558: FILE: scripts/kallsyms.c:510:
+		if ( symbol_valid(&table[i]) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#558: FILE: scripts/kallsyms.c:510:
+		if ( symbol_valid(&table[i]) ) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#569: FILE: scripts/kallsyms.c:519:
+		if (table[i].flags & SYM_FLAG_VALID) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#578: FILE: scripts/kallsyms.c:527:
+			if( is_exported(table[i].sym) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#578: FILE: scripts/kallsyms.c:527:
+			if( is_exported(table[i].sym) )

ERROR:SPACING: space required before the open parenthesis '('
#578: FILE: scripts/kallsyms.c:527:
+			if( is_exported(table[i].sym) )

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#588: FILE: scripts/kallsyms.c:536:
+ * to update the counts */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#596: FILE: scripts/kallsyms.c:543:
 	for (i = 0; i < cnt; i++) {
+

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#597: FILE: scripts/kallsyms.c:544:
+		if (!(table[i].flags & SYM_FLAG_VALID)) continue;

ERROR:SPACING: space required before the open parenthesis '('
#621: FILE: scripts/kallsyms.c:573:
+			if(table[i].flags & SYM_FLAG_SAMPLED)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#644: FILE: scripts/kallsyms.c:611:
+	 * fast string functions */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#646: FILE: scripts/kallsyms.c:613:
 	for (i = 255; i >= 0; i--) {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#648: FILE: scripts/kallsyms.c:615:
+		 * original char code */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#650: FILE: scripts/kallsyms.c:617:
 		if (!best_table_len[i]) {
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000254445.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 38 warnings, 10 checks, 588 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000254445.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
