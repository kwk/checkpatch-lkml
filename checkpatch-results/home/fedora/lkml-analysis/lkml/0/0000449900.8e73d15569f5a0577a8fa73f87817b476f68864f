ERROR:SPACING: space required before the open parenthesis '('
#104: FILE: kernel/suspend.c:423:
+		if(swapfile_used[swp_type(entry)] != SWAPFILE_SUSPEND)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 18)
#113: FILE: kernel/suspend.c:449:
+		if(swapfile_used[swp_type(entry)] != SWAPFILE_SUSPEND)
 		  panic("\nNot enough swapspace for pagedir on suspend device" );

ERROR:SPACING: space required before the open parenthesis '('
#113: FILE: kernel/suspend.c:449:
+		if(swapfile_used[swp_type(entry)] != SWAPFILE_SUSPEND)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#122: FILE: kernel/suspend.c:469:
+	if(swapfile_used[swp_type(entry)] != SWAPFILE_SUSPEND)
 	  panic("\nNot enough swapspace for header on suspend device" );

ERROR:SPACING: space required before the open parenthesis '('
#122: FILE: kernel/suspend.c:469:
+	if(swapfile_used[swp_type(entry)] != SWAPFILE_SUSPEND)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#188: FILE: mm/swapfile.c:125:
+				entry = swp_entry(type,offset);
 				                      ^

CHECK:SPACING: No space is necessary after a cast
#258: FILE: mm/swapfile.c:958:
+	rw_swap_page_nolock(READ, swp_entry(type,0), (char *) swap_header);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#258: FILE: mm/swapfile.c:958:
+	rw_swap_page_nolock(READ, swp_entry(type,0), (char *) swap_header);
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#267: FILE: mm/swapfile.c:1011:
+		maxpages = swp_offset(swp_entry(0,~0UL)) - 1;
 		                                 ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#267: FILE: mm/swapfile.c:1011:
+		maxpages = swp_offset(swp_entry(0,~0UL)) - 1;
 		                                  ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#333: FILE: include/linux/swapops.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#350: FILE: include/linux/swapops.h:18:
+static inline swp_entry_t swp_entry(unsigned type, pgoff_t offset)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#363: FILE: include/linux/swapops.h:31:
+static inline unsigned swp_type(swp_entry_t entry)

CHECK:BIT_MACRO: Prefer using the BIT macro
#417: FILE: include/linux/swap.h:23:
+#define MAX_SWAPFILES		(1 << MAX_SWAPFILES_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#480: FILE: include/asm-alpha/pgtable.h:345:
+#define __swp_entry(type, offset)	((swp_entry_t) { pte_val(mk_swap_pte((type),(offset))) })
                                  	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#499: FILE: include/asm-arm/pgtable.h:147:
+#define __swp_entry(type,offset) ((swp_entry_t) { ((type) << 2) | ((offset) << 9) })
                         ^

CHECK:SPACING: No space is necessary after a cast
#537: FILE: include/asm-ia64/pgtable.h:407:
+#define __swp_entry(type,offset)	((swp_entry_t) { ((type) << 1) | ((long) (offset) << 9) })

ERROR:SPACING: space required after that ',' (ctx:VxV)
#537: FILE: include/asm-ia64/pgtable.h:407:
+#define __swp_entry(type,offset)	((swp_entry_t) { ((type) << 1) | ((long) (offset) << 9) })
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#556: FILE: include/asm-m68k/pgtable.h:150:
+#define __swp_entry(type,offset) ((swp_entry_t) { ((type) | ((offset) << 7)) })
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#590: FILE: include/asm-mips/pgtable.h:498:
+#define __swp_entry(type,offset) ((swp_entry_t) { ((type) << 1) | ((offset) << 8) })
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#609: FILE: include/asm-mips64/pgtable.h:558:
+#define __swp_entry(type,offset) ((swp_entry_t) { pte_val(mk_swap_pte((type),(offset))) })
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#609: FILE: include/asm-mips64/pgtable.h:558:
+#define __swp_entry(type,offset) ((swp_entry_t) { pte_val(mk_swap_pte((type),(offset))) })
                                                                             ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#624: FILE: include/asm-parisc/pgtable.h:316:
+#define __swp_offset(x)                   ( (((x).val >> 6) &  0x7) | \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#624: FILE: include/asm-parisc/pgtable.h:316:
+#define __swp_offset(x)                   ( (((x).val >> 6) &  0x7) | \
 					  (((x).val >> 7) & ~0x7) )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#627: FILE: include/asm-parisc/pgtable.h:318:
+#define __swp_entry(type, offset)         ((swp_entry_t) { (type) | \
 					    ((offset &  0x7) << 6) | \
 					    ((offset & ~0x7) << 7) })

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#627: FILE: include/asm-parisc/pgtable.h:318:
+#define __swp_entry(type, offset)         ((swp_entry_t) { (type) | \
 					    ((offset &  0x7) << 6) | \
 					    ((offset & ~0x7) << 7) })

ERROR:SPACING: space prohibited before that close parenthesis ')'
#685: FILE: include/asm-s390/pgtable.h:489:
+#define __swp_offset(entry)	(((entry).val >> 12) & 0x7FFFF )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#686: FILE: include/asm-s390/pgtable.h:490:
+#define __swp_entry(type,offset) ((swp_entry_t) { pte_val(mk_swap_pte((type),(offset))) })
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#686: FILE: include/asm-s390/pgtable.h:490:
+#define __swp_entry(type,offset) ((swp_entry_t) { pte_val(mk_swap_pte((type),(offset))) })
                                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#706: FILE: include/asm-s390x/pgtable.h:510:
+#define __swp_entry(type,offset) ((swp_entry_t) { pte_val(mk_swap_pte((type),(offset))) })
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#706: FILE: include/asm-s390x/pgtable.h:510:
+#define __swp_entry(type,offset) ((swp_entry_t) { pte_val(mk_swap_pte((type),(offset))) })
                                                                             ^

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#747: FILE: include/asm-sparc/pgtable.h:381:
+#define __swp_entry(type,offset)	((swp_entry_t) { (((type) & 0x7f) << 2) | (((offset) & 0x3ffff) << 9) })

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#747: FILE: include/asm-sparc/pgtable.h:381:
+#define __swp_entry(type,offset)	((swp_entry_t) { (((type) & 0x7f) << 2) | (((offset) & 0x3ffff) << 9) })
                         ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000449900.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 6 warnings, 6 checks, 639 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000449900.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
