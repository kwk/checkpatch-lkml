WARNING:LINE_SPACING: Missing a blank line after declarations
#82: FILE: arch/ppc64/kernel/bpa_setup.c:75:
+	struct device_node *cpu;
+	cpu = spe->parent->parent;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#96: FILE: arch/ppc64/kernel/bpa_setup.c:89:
+	} __attribute__((packed)) *p;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#102: FILE: arch/ppc64/kernel/bpa_setup.c:95:
+	p = (void*)get_property(spe, prop, &proplen);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#103: FILE: arch/ppc64/kernel/bpa_setup.c:96:
+	WARN_ON(proplen != sizeof (*p));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#111: FILE: arch/ppc64/kernel/bpa_setup.c:104:
+	/* We need to call memory_present *before* the call to sparse_init,
+	   but we can initialize the page structs only *after* that call.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#112: FILE: arch/ppc64/kernel/bpa_setup.c:105:
+	   Thus, we're being called twice. */

CHECK:BRACES: braces {} should be used on all arms of this statement
#113: FILE: arch/ppc64/kernel/bpa_setup.c:106:
+	if (early)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#115: FILE: arch/ppc64/kernel/bpa_setup.c:108:
+	else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#117: FILE: arch/ppc64/kernel/bpa_setup.c:110:
+		/* As the pages backing SPU LS and I/O are outside the range
+		   of regular memory, their page structs were not initialized

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#118: FILE: arch/ppc64/kernel/bpa_setup.c:111:
+		   by free_area_init. Do it here instead. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#121: FILE: arch/ppc64/kernel/bpa_setup.c:114:
+			struct page *page = pfn_to_page(pfn);
+			set_page_links(page, ZONE_DMA, node_id, pfn);

WARNING:LINE_SPACING: Missing a blank line after declarations
#133: FILE: arch/ppc64/kernel/bpa_setup.c:126:
+	struct device_node *node;
+	for (node = of_find_node_by_type(NULL, "spe");

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#188: FILE: fs/spufs/context.c:20:
  * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:LINE_SPACING: Missing a blank line after declarations
#264: FILE: fs/spufs/file.c:106:
+	unsigned long offset = address - vma->vm_start;
+	offset += vma->vm_pgoff << PAGE_SHIFT;

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#282: FILE: fs/spufs/file.c:124:
+static struct vm_operations_struct spufs_mem_mmap_vmops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#368: FILE: fs/spufs/spufs.h:67:
+struct spu_context * alloc_spu_context(struct address_space *local_store);

WARNING:LINE_SPACING: Missing a blank line after declarations
#401: FILE: fs/spufs/switch.c:2220:
+	unsigned char *p;
+	for (p = csa->lscsa->ls; p < csa->lscsa->ls + LS_SIZE; p += PAGE_SIZE)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000150659.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 12 warnings, 2 checks, 301 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000150659.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
