WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#57: FILE: mm/page_alloc.c:88:
+	BUG_ON(PagePrivate(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#58: FILE: mm/page_alloc.c:89:
+	BUG_ON(page->mapping);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#59: FILE: mm/page_alloc.c:90:
+	BUG_ON(PageLocked(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#60: FILE: mm/page_alloc.c:91:
+	BUG_ON(PageLRU(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#61: FILE: mm/page_alloc.c:92:
+	BUG_ON(PageActive(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#62: FILE: mm/page_alloc.c:93:
+	BUG_ON(PageWriteback(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#72: FILE: mm/page_alloc.c:106:
+	BUG_ON(page_idx & ~mask);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#82: FILE: mm/page_alloc.c:118:
+		BUG_ON(area >= zone->free_area + MAX_ORDER);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#94: FILE: mm/page_alloc.c:131:
+		BUG_ON(BAD_RANGE(zone,buddy1));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#94: FILE: mm/page_alloc.c:131:
+		BUG_ON(BAD_RANGE(zone,buddy1));
 		                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#95: FILE: mm/page_alloc.c:132:
+		BUG_ON(BAD_RANGE(zone,buddy2));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#95: FILE: mm/page_alloc.c:132:
+		BUG_ON(BAD_RANGE(zone,buddy2));
 		                     ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#105: FILE: mm/page_alloc.c:165:
+		BUG_ON(BAD_RANGE(zone,page));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#105: FILE: mm/page_alloc.c:165:
+		BUG_ON(BAD_RANGE(zone,page));
 		                     ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#115: FILE: mm/page_alloc.c:174:
+	BUG_ON(BAD_RANGE(zone,page));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#115: FILE: mm/page_alloc.c:174:
+	BUG_ON(BAD_RANGE(zone,page));
 	                     ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#125: FILE: mm/page_alloc.c:196:
+			BUG_ON(BAD_RANGE(zone,page));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#125: FILE: mm/page_alloc.c:196:
+			BUG_ON(BAD_RANGE(zone,page));
 			                     ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#139: FILE: mm/page_alloc.c:207:
+			BUG_ON(BAD_RANGE(zone,page));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#139: FILE: mm/page_alloc.c:207:
+			BUG_ON(BAD_RANGE(zone,page));
 			                     ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#140: FILE: mm/page_alloc.c:208:
+			BUG_ON(PageLRU(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#141: FILE: mm/page_alloc.c:209:
+			BUG_ON(PageActive(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#151: FILE: mm/page_alloc.c:260:
+	BUG_ON(in_interrupt());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#174: FILE: mm/page_alloc.c:287:
+					BUG_ON(PagePrivate(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#175: FILE: mm/page_alloc.c:288:
+					BUG_ON(page->mapping);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#176: FILE: mm/page_alloc.c:289:
+					BUG_ON(PageLocked(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#177: FILE: mm/page_alloc.c:290:
+					BUG_ON(PageLRU(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#178: FILE: mm/page_alloc.c:291:
+					BUG_ON(PageActive(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#179: FILE: mm/page_alloc.c:292:
+					BUG_ON(PageDirty(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#180: FILE: mm/page_alloc.c:293:
+					BUG_ON(PageWriteback(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#190: FILE: mm/page_alloc.c:305:
+			BUG_ON(!nr_pages--);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#200: FILE: mm/page_alloc.c:776:
+	BUG_ON(zone_start_paddr & ~PAGE_MASK);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452729.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 26 warnings, 0 checks, 151 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452729.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
