WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
# Switch IDE to taskfile IO and remove non-taskfile code.

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# New IDE PIO handlers for taskfile IO (they use bio walking).

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
# Bartlomiej Zolnierkiewicz <bzolnier@elka.pw.edu.pl>

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
 drivers/ide/ide-taskfile.c |  545 ++++++++++++++++++---------------------------

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "task->prehandler"
#524: FILE: drivers/ide/ide-taskfile.c:168:
+		if (task->prehandler != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#554: FILE: drivers/ide/ide-taskfile.c:361:
+	 * (ks) Last sector was transfered, wait until drive is ready.
 	                        ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'willl' may be misspelled - perhaps 'will'?
#555: FILE: drivers/ide/ide-taskfile.c:362:
+	 * This can take up to 10 usec. We willl wait max 50 us.
 	                                   ^^^^^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#558: FILE: drivers/ide/ide-taskfile.c:365:
+		udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#566: FILE: drivers/ide/ide-taskfile.c:373:
+				unsigned nsect, int rw)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#629: FILE: drivers/ide/ide-taskfile.c:397:
+ide_startstop_t task_in_intr (ide_drive_t *drive)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#639: FILE: drivers/ide/ide-taskfile.c:407:
+			return DRIVER(drive)->error(drive, __FUNCTION__, stat);

WARNING:TYPO_SPELLING: 'verifyied' may be misspelled - perhaps 'verified'?
#656: FILE: drivers/ide/ide-taskfile.c:415:
+	 * Status was already verifyied.
 	                      ^^^^^^^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#732: FILE: drivers/ide/ide-taskfile.c:458:
+			return DRIVER(drive)->error(drive, __FUNCTION__, stat);

WARNING:TYPO_SPELLING: 'verifyied' may be misspelled - perhaps 'verified'?
#740: FILE: drivers/ide/ide-taskfile.c:466:
+	 * Status was already verifyied.
 	                      ^^^^^^^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#851: FILE: drivers/ide/ide-taskfile.c:517:
+			return DRIVER(drive)->error(drive, __FUNCTION__, stat);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#865: FILE: drivers/ide/ide-taskfile.c:528:
+		return DRIVER(drive)->error(drive, __FUNCTION__, stat);

WARNING:TYPO_SPELLING: 'verifyied' may be misspelled - perhaps 'verified'?
#869: FILE: drivers/ide/ide-taskfile.c:532:
+	 * Status was already verifyied.
 	                      ^^^^^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#907: FILE: drivers/ide/ide-taskfile.c:554:
+ide_startstop_t pre_task_out_intr (ide_drive_t *drive, struct request *rq)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#933: FILE: drivers/ide/ide-taskfile.c:560:
+		printk(KERN_ERR "%s: no DRQ after issuing WRITE%s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#934: FILE: drivers/ide/ide-taskfile.c:561:
+		printk(KERN_ERR "%s: no DRQ after issuing WRITE%s\n",
+				drive->name, drive->addressing ? "_EXT" : "");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1026: FILE: drivers/ide/ide-taskfile.c:583:
+			return DRIVER(drive)->error(drive, __FUNCTION__, stat);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1042: FILE: drivers/ide/ide-taskfile.c:594:
+		return DRIVER(drive)->error(drive, __FUNCTION__, stat);

WARNING:TYPO_SPELLING: 'verifyied' may be misspelled - perhaps 'verified'?
#1046: FILE: drivers/ide/ide-taskfile.c:598:
+	 * Status was already verifyied.
 	                      ^^^^^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1129: FILE: drivers/ide/ide-taskfile.c:631:
+ide_startstop_t pre_task_mulout_intr (ide_drive_t *drive, struct request *rq)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1135: FILE: drivers/ide/ide-taskfile.c:637:
+		printk(KERN_ERR "%s: no DRQ after issuing MULTWRITE%s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1136: FILE: drivers/ide/ide-taskfile.c:638:
+		printk(KERN_ERR "%s: no DRQ after issuing MULTWRITE%s\n",
+				drive->name, drive->addressing ? "_EXT" : "");

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#1153: FILE: drivers/ide/ide-taskfile.c:989:
+			rq.nr_sectors = (args->hobRegister[IDE_NSECTOR_OFFSET_HOB] << 8) | args->tfRegister[IDE_NSECTOR_OFFSET];

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <hobRegister>
#1153: FILE: drivers/ide/ide-taskfile.c:989:
+			rq.nr_sectors = (args->hobRegister[IDE_NSECTOR_OFFSET_HOB] << 8) | args->tfRegister[IDE_NSECTOR_OFFSET];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <tfRegister>
#1153: FILE: drivers/ide/ide-taskfile.c:989:
+			rq.nr_sectors = (args->hobRegister[IDE_NSECTOR_OFFSET_HOB] << 8) | args->tfRegister[IDE_NSECTOR_OFFSET];

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1160: FILE: drivers/ide/ide-taskfile.c:994:
+		rq.hard_cur_sectors = rq.current_nr_sectors = rq.nr_sectors;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1171: FILE: include/linux/blkdev.h:459:
+extern void blk_rq_prep_restart(struct request *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#1171: FILE: include/linux/blkdev.h:459:
+extern void blk_rq_prep_restart(struct request *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000369612.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 25 warnings, 8 checks, 1136 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000369612.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
