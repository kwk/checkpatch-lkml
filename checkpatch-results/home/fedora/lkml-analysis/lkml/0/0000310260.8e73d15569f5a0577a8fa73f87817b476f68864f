WARNING:TYPO_SPELLING: 'priting' may be misspelled - perhaps 'printing'?
#46: 
        * Fixed a problem with not responding to Ctrl+C during priting of
                                                               ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
I have pasted below eth.patch for review. When using the ethernet interface, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: drivers/net/Kconfig:190:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#86: FILE: drivers/net/kgdb_eth.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: drivers/net/kgdb_eth.c:4:
+ * Copyright (C), 2004 Amit S. Kale $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: drivers/net/kgdb_eth.c:13:
+ * Restructured for generic a gdb interface $

WARNING:TYPO_SPELLING: 'Reveral' may be misspelled - perhaps 'Reversal'?
#99: FILE: drivers/net/kgdb_eth.c:14:
+ * Reveral changes to make it free of device driver changes.
    ^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#101: FILE: drivers/net/kgdb_eth.c:16:
+ * ^Iby Amit S. Kale <amitkale@emsyssoft.com>$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#129: FILE: drivers/net/kgdb_eth.c:44:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#131: FILE: drivers/net/kgdb_eth.c:46:
+#include <asm/bitops.h>

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#133: FILE: drivers/net/kgdb_eth.c:48:
+#include <asm/atomic.h>

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#145: FILE: drivers/net/kgdb_eth.c:60:
+static unsigned int	kgdb_remoteip = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#147: FILE: drivers/net/kgdb_eth.c:62:
+static unsigned short	kgdb_sendport= 6442;
                      	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#149: FILE: drivers/net/kgdb_eth.c:64:
+static unsigned char	kgdb_remotemac[6] = {0xff,0xff,0xff,0xff,0xff,0xff};
                     	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#149: FILE: drivers/net/kgdb_eth.c:64:
+static unsigned char	kgdb_remotemac[6] = {0xff,0xff,0xff,0xff,0xff,0xff};
                     	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#149: FILE: drivers/net/kgdb_eth.c:64:
+static unsigned char	kgdb_remotemac[6] = {0xff,0xff,0xff,0xff,0xff,0xff};
                     	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#149: FILE: drivers/net/kgdb_eth.c:64:
+static unsigned char	kgdb_remotemac[6] = {0xff,0xff,0xff,0xff,0xff,0xff};
                     	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#149: FILE: drivers/net/kgdb_eth.c:64:
+static unsigned char	kgdb_remotemac[6] = {0xff,0xff,0xff,0xff,0xff,0xff};
                     	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: drivers/net/kgdb_eth.c:65:
+static unsigned char	kgdb_localmac[6] = {0xff,0xff,0xff,0xff,0xff,0xff};
                     	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: drivers/net/kgdb_eth.c:65:
+static unsigned char	kgdb_localmac[6] = {0xff,0xff,0xff,0xff,0xff,0xff};
                     	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: drivers/net/kgdb_eth.c:65:
+static unsigned char	kgdb_localmac[6] = {0xff,0xff,0xff,0xff,0xff,0xff};
                     	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: drivers/net/kgdb_eth.c:65:
+static unsigned char	kgdb_localmac[6] = {0xff,0xff,0xff,0xff,0xff,0xff};
                     	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: drivers/net/kgdb_eth.c:65:
+static unsigned char	kgdb_localmac[6] = {0xff,0xff,0xff,0xff,0xff,0xff};
                     	                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: drivers/net/kgdb_eth.c:69:
+static irqreturn_t^I(*kgdbeth_irqhandler)(int, void *, struct pt_regs *) = $

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#155: FILE: drivers/net/kgdb_eth.c:69:
NULL;

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#157: FILE: drivers/net/kgdb_eth.c:71:
+struct net_device *kgdb_netdevice = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#160: FILE: drivers/net/kgdb_eth.c:74:
+static int xlockholdcount = 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#167: FILE: drivers/net/kgdb_eth.c:81:
+ * Keeping 1 as the initial count prevents kfree_skb from freeing it. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#182: FILE: drivers/net/kgdb_eth.c:96:
+/*
+ * Returns next skb from kgdb skbs.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#206: FILE: drivers/net/kgdb_eth.c:120:
+	if (i == bufnum) {
+		panic("kgdb ethernet buffer overflow\n");
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: drivers/net/kgdb_eth.c:146:
+/* Holds xmitlock of the ethernet device $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#233: FILE: drivers/net/kgdb_eth.c:147:
+ * Recursive calls allowed */

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#236: FILE: drivers/net/kgdb_eth.c:150:
+	if (spin_is_locked(&kgdb_netdevice->xmit_lock)) {

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

WARNING:BRACES: braces {} are not necessary for single statement blocks
#237: FILE: drivers/net/kgdb_eth.c:151:
+		if (kgdb_netdevice->xmit_lock_owner == smp_processor_id()) {
+			goto gotit;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: drivers/net/kgdb_eth.c:162:
+/* releases xmitlock of the ethernet device $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#249: FILE: drivers/net/kgdb_eth.c:163:
+ * Recursive calls allowed */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#259: FILE: drivers/net/kgdb_eth.c:173:
+/*
+ * Get a char if available, return -1 if nothing available.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#279: FILE: drivers/net/kgdb_eth.c:193:
+/*
+ * Wait until the interface can accept a char, then write it.

CHECK:SPACING: No space is necessary after a cast
#291: FILE: drivers/net/kgdb_eth.c:205:
+	if (!(in_dev = (struct in_device *) kgdb_netdevice->ip_ptr)) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#291: FILE: drivers/net/kgdb_eth.c:205:
+	if (!(in_dev = (struct in_device *) kgdb_netdevice->ip_ptr)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#291: FILE: drivers/net/kgdb_eth.c:205:
+	if (!(in_dev = (struct in_device *) kgdb_netdevice->ip_ptr)) {
+		panic("No in_device available for interface!\n");
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#295: FILE: drivers/net/kgdb_eth.c:209:
+	if (!(in_dev->ifa_list)) {
+		panic("No interface address set for interface!\n");
+	}

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#301: FILE: drivers/net/kgdb_eth.c:215:
+	ip_len = eth_len = udp_len + sizeof(struct iphdr);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#308: FILE: drivers/net/kgdb_eth.c:222:
+	memcpy(skb->data, (unsigned char *) buf, len);

CHECK:SPACING: No space is necessary after a cast
#311: FILE: drivers/net/kgdb_eth.c:225:
+	udph = (struct udphdr *) skb_push(skb, sizeof(*udph));

CHECK:SPACING: No space is necessary after a cast
#331: FILE: drivers/net/kgdb_eth.c:245:
+	eth = (struct ethhdr *) skb_push(skb, ETH_HLEN);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#337: FILE: drivers/net/kgdb_eth.c:251:
+	if (atomic_read(&skb->users) != 1) {
+		BUG();
+	}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#338: FILE: drivers/net/kgdb_eth.c:252:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BRACES: braces {} are not necessary for single statement blocks
#345: FILE: drivers/net/kgdb_eth.c:259:
+	if (!kgdbeth_sendbufchars) {
+		return;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#354: FILE: drivers/net/kgdb_eth.c:268:
+	if (kgdbeth_sendbufchars == MAXINCHUNK) {
+		kgdbeth_flush();
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#360: FILE: drivers/net/kgdb_eth.c:274:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#362: FILE: drivers/net/kgdb_eth.c:276:
+/*
+ * In the interrupt state the target machine will not respond to any

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: drivers/net/kgdb_eth.c:285:
+^I    ^Ikgdb_netdevice->hard_start_xmit(send_skb, kgdb_netdevice);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#371: FILE: drivers/net/kgdb_eth.c:285:
+^I    ^Ikgdb_netdevice->hard_start_xmit(send_skb, kgdb_netdevice);$

WARNING:TYPO_SPELLING: 'tha' may be misspelled - perhaps 'than'?
#385: FILE: drivers/net/kgdb_eth.c:299:
+	unsigned char *sha, *tha;
 	                     ^^^

CHECK:SPACING: No space is necessary after a cast
#386: FILE: drivers/net/kgdb_eth.c:300:
+	struct in_device *in_dev = (struct in_device *) kgdb_netdevice->ip_ptr;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#390: FILE: drivers/net/kgdb_eth.c:304:
+	if (kgdb_netdevice->flags & IFF_NOARP) {
+		return 0;
+	}

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#400: FILE: drivers/net/kgdb_eth.c:314:
+	skb->h.raw = skb->nh.raw = skb->data;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#411: FILE: drivers/net/kgdb_eth.c:325:
+	if (arp->ar_op != htons(ARPOP_REQUEST)) {
+		return 0;
+	}

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#417: FILE: drivers/net/kgdb_eth.c:331:
+	arp_ptr= (unsigned char *)(arp+1);
 	       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#417: FILE: drivers/net/kgdb_eth.c:331:
+	arp_ptr= (unsigned char *)(arp+1);
 	                              ^

WARNING:TYPO_SPELLING: 'tha' may be misspelled - perhaps 'than'?
#422: FILE: drivers/net/kgdb_eth.c:336:
+	tha = arp_ptr;
 	^^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#426: FILE: drivers/net/kgdb_eth.c:340:
+	if (tip != in_dev->ifa_list->ifa_address) {
+		return 0;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#430: FILE: drivers/net/kgdb_eth.c:344:
+	if (kgdb_remoteip != sip) {
+		return 0;
+	}

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#435: FILE: drivers/net/kgdb_eth.c:349:
+	/*
+	 * Check for bad requests for 127.x.x.x and requests for multicast

WARNING:BRACES: braces {} are not necessary for single statement blocks
#439: FILE: drivers/net/kgdb_eth.c:353:
+	if (LOOPBACK(tip) || MULTICAST(tip)) {
+		return 0;
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#448: FILE: drivers/net/kgdb_eth.c:362:
+		 * out by now. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#458: FILE: drivers/net/kgdb_eth.c:372:
+^Iarp = (struct arphdr *) skb_put(send_skb, sizeof(struct arphdr) + 2 * $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#474: FILE: drivers/net/kgdb_eth.c:387:
+	/*
+	 * Fill out the arp protocol part.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#487: FILE: drivers/net/kgdb_eth.c:400:
+	arp_ptr=(unsigned char *)(arp + 1);
 	       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#499: FILE: drivers/net/kgdb_eth.c:412:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#501: FILE: drivers/net/kgdb_eth.c:414:
+/*
+ * Accept an skbuff from net_device layer and add the payload onto

ERROR:TRAILING_WHITESPACE: trailing whitespace
#512: FILE: drivers/net/kgdb_eth.c:425:
+ * a debugging session begins. It's necessary to respond to the request as $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#521: FILE: drivers/net/kgdb_eth.c:433:
+	struct iphdr	*iph = (struct iphdr*)skb->data;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#522: FILE: drivers/net/kgdb_eth.c:434:
+	struct udphdr	*udph= (struct udphdr*)(skb->data+(iph->ihl<<2));

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#522: FILE: drivers/net/kgdb_eth.c:434:
+	struct udphdr	*udph= (struct udphdr*)(skb->data+(iph->ihl<<2));
 	             	     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#522: FILE: drivers/net/kgdb_eth.c:434:
+	struct udphdr	*udph= (struct udphdr*)(skb->data+(iph->ihl<<2));
 	             	                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#522: FILE: drivers/net/kgdb_eth.c:434:
+	struct udphdr	*udph= (struct udphdr*)(skb->data+(iph->ihl<<2));
 	             	                                           ^

CHECK:SPACING: No space is necessary after a cast
#523: FILE: drivers/net/kgdb_eth.c:435:
+	unsigned char	*data = (unsigned char *) udph + sizeof(struct udphdr);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#527: FILE: drivers/net/kgdb_eth.c:439:
+	if (!kgdb_initialized || !kgdb_netdevice) {
+		goto out;
+	}

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#530: FILE: drivers/net/kgdb_eth.c:442:
+	if (skb->protocol == __constant_htons(ETH_P_ARP) && !send_skb) {

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#535: FILE: drivers/net/kgdb_eth.c:447:
+^I^Ibe16_to_cpu(udph->dest) != kgdb_listenport) $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#535: FILE: drivers/net/kgdb_eth.c:447:
+	if (iph->protocol != IPPROTO_UDP ||
+		be16_to_cpu(udph->dest) != kgdb_listenport) 

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#545: FILE: drivers/net/kgdb_eth.c:457:
+		if (chr == 3)
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#547: FILE: drivers/net/kgdb_eth.c:459:
+			if (!atomic_read(&debugger_active)) {
+				breakpoint();
+			}

WARNING:SPACING: space prohibited before semicolon
#561: FILE: drivers/net/kgdb_eth.c:473:
+		atomic_inc(&kgdb_buf_in_cnt) ;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#572: FILE: drivers/net/kgdb_eth.c:484:
+/*
+ * Initializes ethernet interface to kgdb.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#582: FILE: drivers/net/kgdb_eth.c:494:
+	extern void kgdb_respond_ok(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "kgdb_netdevice"
#589: FILE: drivers/net/kgdb_eth.c:501:
+		kgdb_netdevice != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BRACES: braces {} are not necessary for single statement blocks
#591: FILE: drivers/net/kgdb_eth.c:503:
+		if (strncmp(kgdb_netdevice->name, kgdb_netdevname, IFNAMSIZ) == 0) {
+			break;
+		}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#596: FILE: drivers/net/kgdb_eth.c:508:
+		printk("kgdbeth: Unable to find interface %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#597: FILE: drivers/net/kgdb_eth.c:509:
+		printk("kgdbeth: Unable to find interface %s\n",
+				kgdb_netdevname);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#600: FILE: drivers/net/kgdb_eth.c:512:
+	if (!(kgdb_netdevice->flags & IFF_UP)) {
+		return -EINVAL;
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#612: FILE: drivers/net/kgdb_eth.c:524:
+		printk("kgdbeth: Interface %s doesn't have an interrupt"

WARNING:SPLIT_STRING: quoted string split across lines
#613: FILE: drivers/net/kgdb_eth.c:525:
+		printk("kgdbeth: Interface %s doesn't have an interrupt"
+			" handler cannot use it\n", kgdb_netdevname);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#617: FILE: drivers/net/kgdb_eth.c:529:
+		send_skbs[i] = kmalloc(sizeof (struct sk_buff), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*send_skbs[i])...) over kmalloc(sizeof (struct sk_buff)...)
#617: FILE: drivers/net/kgdb_eth.c:529:
+		send_skbs[i] = kmalloc(sizeof (struct sk_buff), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#620: FILE: drivers/net/kgdb_eth.c:532:
+			printk("kgdbeth: not enough memory\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around send_skbs[i]->users
#623: FILE: drivers/net/kgdb_eth.c:535:
+		atomic_set(&(send_skbs[i]->users), 1);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LINE_SPACING: Please don't use multiple blank lines
#626: FILE: drivers/net/kgdb_eth.c:538:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#631: FILE: drivers/net/kgdb_eth.c:543:
+/*
+ * kgdbeth_read_char

WARNING:BRACES: braces {} are not necessary for single statement blocks
#642: FILE: drivers/net/kgdb_eth.c:554:
+		if (send_skb) {
+			kgdb_eth_reply_arp();
+		}

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#652: FILE: drivers/net/kgdb_eth.c:564:
+/*
+ * Hold onto the xmitlock and keep holding till the session ends.

WARNING:REPEATED_WORD: Possible repeated word: 'not'
#654: FILE: drivers/net/kgdb_eth.c:566:
+ * Respond to last arp request we have received. It may not not have be

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#657: FILE: drivers/net/kgdb_eth.c:569:
+static void kgdbeth_begin_session(void) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#680: FILE: drivers/net/kgdb_eth.c:592:
+static int __init parse_hw_addr(char **ptr, unsigned char *addr,
+		unsigned char delimiter)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#684: FILE: drivers/net/kgdb_eth.c:596:
+	while(**ptr != delimiter)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#684: FILE: drivers/net/kgdb_eth.c:596:
+	while(**ptr != delimiter)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#688: FILE: drivers/net/kgdb_eth.c:600:
+		if (sscanf(*ptr, "%x", &c) != 1) {
+			return 1;
+		}

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#688: FILE: drivers/net/kgdb_eth.c:600:
+		if (sscanf(*ptr, "%x", &c) != 1) {
+			return 1;
+		}

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#694: FILE: drivers/net/kgdb_eth.c:606:
+		while((**ptr != delimiter) && (*(*ptr -1) != ':'));
 		                                      ^

ERROR:SPACING: space required before the open parenthesis '('
#694: FILE: drivers/net/kgdb_eth.c:606:
+		while((**ptr != delimiter) && (*(*ptr -1) != ':'));

WARNING:LINE_SPACING: Missing a blank line after declarations
#706: FILE: drivers/net/kgdb_eth.c:618:
+	struct net_device *ndev = (struct net_device *)data;
+	daemonize("kgdbeth");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#707: FILE: drivers/net/kgdb_eth.c:619:
+	while (!ndev->ip_ptr) {
+		schedule();
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#714: FILE: drivers/net/kgdb_eth.c:626:
+int kgdbeth_event(struct notifier_block * self, unsigned long val, void * $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#714: FILE: drivers/net/kgdb_eth.c:626:
+int kgdbeth_event(struct notifier_block * self, unsigned long val, void * 

WARNING:BRACES: braces {} are not necessary for single statement blocks
#717: FILE: drivers/net/kgdb_eth.c:628:
+	if (strcmp(((struct net_device *)data)->name, kgdb_netdevname)) {
+		goto out;
+	}

ERROR:SPACING: spaces required around that '!=' (ctx:VxW)
#720: FILE: drivers/net/kgdb_eth.c:631:
+	if (val!= NETDEV_UP)
 	       ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#727: FILE: drivers/net/kgdb_eth.c:638:
+}
+static struct notifier_block nb = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#728: FILE: drivers/net/kgdb_eth.c:639:
+       .notifier_call = kgdbeth_event,$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#732: FILE: drivers/net/kgdb_eth.c:643:
+/*
+ * Syntax for this cmdline option is

WARNING:LINE_SPACING: Missing a blank line after declarations
#740: FILE: drivers/net/kgdb_eth.c:651:
+	char *ipaddrptr = ipaddrstr;
+	extern int register_netdevice_notifier(struct notifier_block *nb);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#740: FILE: drivers/net/kgdb_eth.c:651:
+	extern int register_netdevice_notifier(struct notifier_block *nb);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#742: FILE: drivers/net/kgdb_eth.c:653:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#744: FILE: drivers/net/kgdb_eth.c:655:
+		printk("KGDB_ETH: couldn't register notifier\n");

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#763: FILE: drivers/net/kgdb_eth.c:674:
+	kgdb_listenport = simple_strtoul(str, &str, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#789: FILE: drivers/net/kgdb_eth.c:700:
+	printk("Invalid syntax for option kgdbeth=\n");

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#793: FILE: drivers/net/kgdb_eth.c:704:
+__setup("kgdbeth=", kgdbeth_opt);

WARNING:LINE_SPACING: Missing a blank line after declarations
#826: FILE: net/core/dev.c:1407:
+	int ret;
+	int kgdb_net_interrupt(struct sk_buff *skb);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#826: FILE: net/core/dev.c:1407:
+	int kgdb_net_interrupt(struct sk_buff *skb);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#830: FILE: net/core/dev.c:1411:
+	if ((ret = kgdb_net_interrupt(skb)) == NET_RX_DROP) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#830: FILE: net/core/dev.c:1411:
+	if ((ret = kgdb_net_interrupt(skb)) == NET_RX_DROP) {
+		return ret;
+	}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000310260.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 40 errors, 68 warnings, 24 checks, 768 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000310260.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
