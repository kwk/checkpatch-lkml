WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
   usability and functionality.  If you put a cap on the resource limit to N,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#206: FILE: include/linux/oom_kill.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#207: FILE: include/linux/oom_kill.h:2:
+ * include/linux/oom_kill.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around p->bio_parent
#341: FILE: kernel/exit.c:661:
+		list_add_tail(&p->bio_sibling, &(p->bio_parent)->bio_children);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#413: FILE: kernel/sysctl.c:850:
+		.extra1		= &zero,

Commit d91bff3011cf ("proc/sysctl: add shared variables for range
check") added some shared const variables to be used instead of a local
copy in each source file.

Consider replacing the sysctl range checking value with the shared
one in include/linux/sysctl.h.  The following conversion scheme may
be used::

  &zero     ->  SYSCTL_ZERO
  &one      ->  SYSCTL_ONE
  &int_max  ->  SYSCTL_INT_MAX

See:

  1. https://lore.kernel.org/lkml/20190430180111.10688-1-mcroce@redhat.com/
  2. https://lore.kernel.org/lkml/20190531131422.14970-1-mcroce@redhat.com/

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#454: FILE: mm/oom_kill.c:29:
+unsigned int lca_level = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#457: FILE: mm/oom_kill.c:32:
+struct task_struct *last_chosen_parent = NULL;

WARNING:TYPO_SPELLING: 'childs' may be misspelled - perhaps 'children'?
#471: FILE: mm/oom_kill.c:70:
+	 * machine with an endless amount of childs.
 	                                     ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#501: FILE: mm/oom_kill.c:134:
+	pr_debug("OOMkill: task %d (%s) got %lu points\n",
+			p->pid, p->comm, points);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#514: FILE: mm/oom_kill.c:147:
+static struct task_struct * find_lca(task_t *p1, task_t *p2)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#531: FILE: mm/oom_kill.c:164:
+^I^Ilist_move_tail(&tsk2->bio_sibling, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: mm/oom_kill.c:165:
+		list_move_tail(&tsk2->bio_sibling, 
+				&tsk2->bio_parent->bio_children);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#538: FILE: mm/oom_kill.c:171:
+		tsk1 = list_entry(tsk1->bio_children.next, struct task_struct,
+				bio_sibling);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#540: FILE: mm/oom_kill.c:173:
+		tsk2 = list_entry(tsk2->bio_children.prev, struct task_struct,
+				bio_sibling);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#582: FILE: mm/oom_kill.c:216:
+				printk("releasing memory: process %d (%s) count=%lu\n", p->pid, p->comm, count++);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#582: FILE: mm/oom_kill.c:216:
+				printk("releasing memory: process %d (%s) count=%lu\n", p->pid, p->comm, count++);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#602: FILE: mm/oom_kill.c:239:
+	switch (lca_level) {
+		case 0:
[...]
+		case 1:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#611: FILE: mm/oom_kill.c:248:
+				timeout = jiffies + (1<<lca_time++) * HZ;
 				                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#623: FILE: mm/oom_kill.c:260:
+	if (lca) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#626: FILE: mm/oom_kill.c:263:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#643: FILE: mm/oom_kill.c:291:
+		printk(KERN_WARNING "tried to kill mm-less task %d (%s)!\n", p->pid, p->comm);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#650: FILE: mm/oom_kill.c:298:
+		printk(KERN_WARNING "2ed tried to kill init!\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#716: FILE: mm/oom_kill.c:338:
+	if (!(test_tsk_thread_flag(t, TIF_MEMDIE) || (t->flags & PF_EXITING)
+		|| (t->flags & PF_DEAD)) && t->mm)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#723: FILE: mm/oom_kill.c:345:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000183561.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 9 warnings, 9 checks, 524 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000183561.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
