CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#139: FILE: include/linux/mm.h:340:
+extern void FASTCALL(__page_cache_release(struct page *));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#154: FILE: mm/nommu.c:126:
+	BUG_ON(!PageNommuAnon(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#160: FILE: mm/nommu.c:132:
+	BUG_ON(!PageNommuAnon(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#166: FILE: mm/nommu.c:138:
+	BUG_ON(!PageNommuAnon(page));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: mm/nommu.c:143:
+static void set_aligned_area_anon_vma(unsigned long start, unsigned long end,
+					struct vm_area_struct *vma)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#173: FILE: mm/nommu.c:145:
+	start = (start + PAGE_SIZE-1) & ~(PAGE_SIZE-1);
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#173: FILE: mm/nommu.c:145:
+	start = (start + PAGE_SIZE-1) & ~(PAGE_SIZE-1);
 	                                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#174: FILE: mm/nommu.c:146:
+	end = end & ~(PAGE_SIZE-1);
 	                       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#178: FILE: mm/nommu.c:150:
+		struct page *page;
+		page = virt_to_page(start);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#179: FILE: mm/nommu.c:151:
+		BUG_ON(PageNommuAnon(page));

CHECK:CAMELCASE: Avoid CamelCase: <__SetPageNommuAnon>
#180: FILE: mm/nommu.c:152:
+		__SetPageNommuAnon(page);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#188: FILE: mm/nommu.c:160:
+	start = (start + PAGE_SIZE-1) & ~(PAGE_SIZE-1);
 	                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#188: FILE: mm/nommu.c:160:
+	start = (start + PAGE_SIZE-1) & ~(PAGE_SIZE-1);
 	                                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#189: FILE: mm/nommu.c:161:
+	end = end & ~(PAGE_SIZE-1);
 	                       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#193: FILE: mm/nommu.c:165:
+		struct page *page;
+		page = virt_to_page(start);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#194: FILE: mm/nommu.c:166:
+		BUG_ON(!PageNommuAnon(page));

CHECK:CAMELCASE: Avoid CamelCase: <__ClearPageNommuAnon>
#196: FILE: mm/nommu.c:168:
+		__ClearPageNommuAnon(page);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#245: FILE: mm/nommu.c:216:
+			 * ramfs/tmpfs mustn't be released here */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: No space is necessary after a cast
#247: FILE: mm/nommu.c:218:
+				realalloc -= kobjsize((void *) vma->vm_start);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: mm/nommu.c:221:
+				clear_aligned_area_anon_vma(vma->vm_start,
+								vma->vm_end);

CHECK:SPACING: No space is necessary after a cast
#251: FILE: mm/nommu.c:222:
+				kfree((void *) vma->vm_start);

WARNING:LINE_SPACING: Missing a blank line after declarations
#275: FILE: mm/nommu.c:246:
+		struct vm_area_struct *vma;
+		vma = page_vma(page);

WARNING:LINE_SPACING: Missing a blank line after declarations
#291: FILE: mm/nommu.c:262:
+		struct vm_area_struct *vma;
+		vma = page_vma(page);

WARNING:LINE_SPACING: Missing a blank line after declarations
#310: FILE: mm/nommu.c:281:
+		struct vm_area_struct *vma;
+		vma = page_vma(page);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#345: FILE: mm/nommu.c:315:
+		BUG_ON(PageNommuAnon(__page) && page_vma(__page) != __vma);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#352: FILE: mm/nommu.c:319:
+				printk(KERN_INFO "get_user_pages on unaligned"

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#353: FILE: mm/nommu.c:320:
+						"anonymous area is unsupported\n");				dump_stack();

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPLIT_STRING: quoted string split across lines
#353: FILE: mm/nommu.c:320:
+				printk(KERN_INFO "get_user_pages on unaligned"
+						"anonymous area is unsupported\n");				dump_stack();

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#353: FILE: mm/nommu.c:320:
+				printk(KERN_INFO "get_user_pages on unaligned"
+						"anonymous area is unsupported\n");				dump_stack();

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#495: FILE: fs/binfmt_flat.c:460:
+		printk("BINFMT_FLAT: bad flat file version 0x%x (supported 0x%lx and 0x%lx)\n", rev, FLAT_VERSION, OLD_FLAT_VERSION);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#495: FILE: fs/binfmt_flat.c:460:
+		printk("BINFMT_FLAT: bad flat file version 0x%x (supported 0x%lx and 0x%lx)\n", rev, FLAT_VERSION, OLD_FLAT_VERSION);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000094344.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 18 warnings, 13 checks, 423 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000094344.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
