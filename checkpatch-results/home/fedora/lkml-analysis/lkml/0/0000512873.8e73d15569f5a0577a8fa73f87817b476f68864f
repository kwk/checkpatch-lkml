WARNING:TYPO_SPELLING: 'Infact' may be misspelled - perhaps 'In fact'?
#76: 
		performance in the I/O loads. Infact even dbench runs even
		                              ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#81: 


WARNING:REPEATED_WORD: Possible repeated word: 'very'
#93: 
very very small deviation ;) (but of course dbench isn't the only

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#122: FILE: mm/page_alloc.c:383:
+			page rmqueue(z, order);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'z' should also have an identifier name
#122: FILE: mm/page_alloc.c:383:
+			page rmqueue(z, order);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'order' should also have an identifier name
#122: FILE: mm/page_alloc.c:383:
+			page rmqueue(z, order);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: mm/page_alloc.c:388:
+^I^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited before semicolon
#138: FILE: mm/page_alloc.c:738:
+		zone->need_balance ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: mm/page_io.c:81:
+ ^I} else$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#150: FILE: mm/page_io.c:81:
+ ^I} else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: mm/page_io.c:81:
+ ^I} else$

CHECK:BRACES: Unbalanced braces around else statement
#150: FILE: mm/page_io.c:81:
+ 	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#207: FILE: mm/vmscan.c:58:
+	if ((PageInactive(page) || PageActive(page)) && PageReferenced(page))

WARNING:SPACING: space prohibited before semicolon
#213: FILE: mm/vmscan.c:64:
+	right_classzone ;

WARNING:SPACING: space prohibited before semicolon
#215: FILE: mm/vmscan.c:66:
+		right_classzone ;

WARNING:LONG_LINE: line length of 150 exceeds 100 columns
#247: FILE: mm/vmscan.c:333:
+static int FASTCALL(shrink_cache(struct list_head * lru, int * max_scan, int this_max_scan, int nr_pages, zone_t * classzone, unsigned int gfp_mask));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#247: FILE: mm/vmscan.c:333:
+static int FASTCALL(shrink_cache(struct list_head * lru, int * max_scan, int this_max_scan, int nr_pages, zone_t * classzone, unsigned int gfp_mask));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#247: FILE: mm/vmscan.c:333:
+static int FASTCALL(shrink_cache(struct list_head * lru, int * max_scan, int this_max_scan, int nr_pages, zone_t * classzone, unsigned int gfp_mask));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#247: FILE: mm/vmscan.c:333:
+static int FASTCALL(shrink_cache(struct list_head * lru, int * max_scan, int this_max_scan, int nr_pages, zone_t * classzone, unsigned int gfp_mask));

WARNING:LONG_LINE: line length of 139 exceeds 100 columns
#248: FILE: mm/vmscan.c:334:
+static int shrink_cache(struct list_head * lru, int * max_scan, int this_max_scan, int nr_pages, zone_t * classzone, unsigned int gfp_mask)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#248: FILE: mm/vmscan.c:334:
+static int shrink_cache(struct list_head * lru, int * max_scan, int this_max_scan, int nr_pages, zone_t * classzone, unsigned int gfp_mask)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#248: FILE: mm/vmscan.c:334:
+static int shrink_cache(struct list_head * lru, int * max_scan, int this_max_scan, int nr_pages, zone_t * classzone, unsigned int gfp_mask)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#248: FILE: mm/vmscan.c:334:
+static int shrink_cache(struct list_head * lru, int * max_scan, int this_max_scan, int nr_pages, zone_t * classzone, unsigned int gfp_mask)

ERROR:SPACING: space prohibited after that '&&' (ctx:WxW)
#257: FILE: mm/vmscan.c:340:
+	while (__max_scan && this_max_scan && (entry lru->prev) !lru) {
 	                  ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#278: FILE: mm/vmscan.c:360:
+				if (PageInactive(page)) {
[...]
+				} else if (PageActive(page)) {
[...]
+				} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#284: FILE: mm/vmscan.c:366:
+				} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#285: FILE: mm/vmscan.c:367:
+					BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#334: FILE: mm/vmscan.c:523:
+	struct list_head * entry;

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#337: FILE: mm/vmscan.c:526:
+	entry ¬tive_list.prev;
 	      ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#339: FILE: mm/vmscan.c:528:
+		struct page * page;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#341: FILE: mm/vmscan.c:530:
+		page list_entry(entry, struct page, lru);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'entry' should also have an identifier name
#341: FILE: mm/vmscan.c:530:
+		page list_entry(entry, struct page, lru);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page' should also have an identifier name
#341: FILE: mm/vmscan.c:530:
+		page list_entry(entry, struct page, lru);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'lru' should also have an identifier name
#341: FILE: mm/vmscan.c:530:
+		page list_entry(entry, struct page, lru);

CHECK:SPACING: No space is necessary after a cast
#344: FILE: mm/vmscan.c:533:
+		if (!page->buffers && page_count(page) !)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#357: FILE: mm/vmscan.c:545:
+	int max_scan (nr_inactive_pages + nr_active_pages / DEF_PRIORITY) / priority;

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#365: FILE: mm/vmscan.c:552:
+	nr_pages shrink_cache(&inactive_list, &max_scan, nr_inactive_pages, nr_pages, classzone, gfp_mask);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#365: FILE: mm/vmscan.c:552:
+	nr_pages shrink_cache(&inactive_list, &max_scan, nr_inactive_pages, nr_pages, classzone, gfp_mask);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'nr_inactive_pages' should also have an identifier name
#365: FILE: mm/vmscan.c:552:
+	nr_pages shrink_cache(&inactive_list, &max_scan, nr_inactive_pages, nr_pages, classzone, gfp_mask);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'nr_pages' should also have an identifier name
#365: FILE: mm/vmscan.c:552:
+	nr_pages shrink_cache(&inactive_list, &max_scan, nr_inactive_pages, nr_pages, classzone, gfp_mask);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'classzone' should also have an identifier name
#365: FILE: mm/vmscan.c:552:
+	nr_pages shrink_cache(&inactive_list, &max_scan, nr_inactive_pages, nr_pages, classzone, gfp_mask);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_mask' should also have an identifier name
#365: FILE: mm/vmscan.c:552:
+	nr_pages shrink_cache(&inactive_list, &max_scan, nr_inactive_pages, nr_pages, classzone, gfp_mask);

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#370: FILE: mm/vmscan.c:556:
+	nr_pages shrink_cache(&active_list, &max_scan, nr_active_pages / DEF_PRIORITY, nr_pages, classzone, gfp_mask);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#370: FILE: mm/vmscan.c:556:
+	nr_pages shrink_cache(&active_list, &max_scan, nr_active_pages / DEF_PRIORITY, nr_pages, classzone, gfp_mask);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'nr_pages' should also have an identifier name
#370: FILE: mm/vmscan.c:556:
+	nr_pages shrink_cache(&active_list, &max_scan, nr_active_pages / DEF_PRIORITY, nr_pages, classzone, gfp_mask);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'classzone' should also have an identifier name
#370: FILE: mm/vmscan.c:556:
+	nr_pages shrink_cache(&active_list, &max_scan, nr_active_pages / DEF_PRIORITY, nr_pages, classzone, gfp_mask);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_mask' should also have an identifier name
#370: FILE: mm/vmscan.c:556:
+	nr_pages shrink_cache(&active_list, &max_scan, nr_active_pages / DEF_PRIORITY, nr_pages, classzone, gfp_mask);

WARNING:SPACING: space prohibited before semicolon
#378: FILE: mm/vmscan.c:569:
+	int ret ;

CHECK:SPACING: spaces preferred around that '|' (ctx:WxV)
#387: FILE: mm/vmscan.c:577:
+		ret |swap_out(priority, classzone, gfp_mask, SWAP_CLUSTER_MAX << 2);
 		    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#407: FILE: mm/vmscan.c:612:
+			schedule_timeout(HZ*5);
 			                   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000512873.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 31 warnings, 8 checks, 281 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000512873.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
