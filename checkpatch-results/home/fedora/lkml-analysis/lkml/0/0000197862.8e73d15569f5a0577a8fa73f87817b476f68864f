WARNING:DEPRECATED_API: Deprecated use of 'call_rcu_bh', prefer 'call_rcu' instead
#263: FILE: include/linux/rcupdate.h:63:
+#define call_rcu_bh(head, func) call_rcu(head, func)

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#281: FILE: include/linux/rcupdate.h:106:
+extern void rcu_read_lock(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#282: FILE: include/linux/rcupdate.h:107:
+extern void rcu_read_unlock(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#284: FILE: include/linux/rcupdate.h:109:
+extern int rcu_pending(int cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#285: FILE: include/linux/rcupdate.h:110:
+extern void rcu_check_callbacks(int cpu, int user);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#330: FILE: kernel/rcupdate.c:60:
+};
+struct rcu_ctrlblk {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#334: FILE: kernel/rcupdate.c:64:
+};
+DEFINE_PER_CPU(struct rcu_data, rcu_data) = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#340: FILE: kernel/rcupdate.c:70:
+};
+struct rcu_ctrlblk rcu_ctrlblk = {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#445: FILE: kernel/rcupdate.c:99:
+	if (--current->rcu_read_lock_nesting == 0) {
+		read_unlock(current->rcu_read_lock_ptr);
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#580: FILE: kernel/rcupdate.c:123:
+	smp_mb();

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#582: FILE: kernel/rcupdate.c:125:
+	schedule_timeout(HZ/GRACE_PERIODS_PER_SEC);
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#583: FILE: kernel/rcupdate.c:126:
+	if (rcu_ctrlblk.batch == oldbatch) {
+		_synchronize_kernel();
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#620: FILE: kernel/rcupdate.c:150:
+void call_rcu(struct rcu_head *head,
+	 void (*func)(struct rcu_head *rcu))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!list"
#670: FILE: kernel/rcupdate.c:174:
+	if (list == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#770: FILE: kernel/rcupdate.c:190:
+^Iif ((unsigned long)(jiffies - rcu_ctrlblk.last_sk) > $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#771: FILE: kernel/rcupdate.c:191:
+	    HZ/GRACE_PERIODS_PER_SEC) {
 	      ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#838: FILE: kernel/rcupdate.c:208:
+	return (retval);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000197862.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 4 warnings, 11 checks, 741 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000197862.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
