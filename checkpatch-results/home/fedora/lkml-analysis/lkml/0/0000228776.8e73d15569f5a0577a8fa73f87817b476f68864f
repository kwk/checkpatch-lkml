WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
 (1) A new bit flag PG_compound_slave has been added. This is used to mark the

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#88: 
Signed-Off-By: David Howells <dhowells@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#119: FILE: include/linux/gfp.h:46:
+			__GFP_NOFAIL|__GFP_NORETRY|__GFP_NO_GROW)
 			            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#119: FILE: include/linux/gfp.h:46:
+			__GFP_NOFAIL|__GFP_NORETRY|__GFP_NO_GROW)
 			                          ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#144: FILE: include/linux/mm.h:323:
+#define set_page_count(p,v) ^Iatomic_set(&(p)->_count, (v) - 1)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#144: FILE: include/linux/mm.h:323:
+#define set_page_count(p,v) 	atomic_set(&(p)->_count, (v) - 1)
                         ^

CHECK:SPACING: No space is necessary after a cast
#159: FILE: include/linux/mm.h:332:
+		page = (struct page *) page->private;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#165: FILE: include/linux/mm.h:337:
+static inline unsigned compound_page_order(struct page *page)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#170: FILE: include/linux/mm.h:339:
+	unsigned order = 0;

CHECK:SPACING: No space is necessary after a cast
#190: FILE: include/linux/mm.h:356:
+		dtor = (page_dtor_t) page[1].mapping;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#208: FILE: include/linux/mm.h:374:
+extern fastcall void put_page(struct page *page);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:CAMELCASE: Avoid CamelCase: <__ClearPageCompound>
#236: FILE: include/linux/page-flags.h:298:
+#define __ClearPageCompound(page)	__clear_bit(PG_compound, &(page)->flags)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#350: FILE: mm/hugetlb.c:55:
+	page = alloc_pages_node(nid, GFP_HIGHUSER|__GFP_NOWARN,
 	                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: mm/hugetlb.c:56:
+	page = alloc_pages_node(nid, GFP_HIGHUSER|__GFP_NOWARN,
 					HUGETLB_PAGE_ORDER);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#362: FILE: mm/internal.h:13:
+extern void fastcall free_hot_cold_page(struct page *page, int cold);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#363: FILE: mm/internal.h:14:
+extern fastcall void __init __free_pages_bootmem(struct page *page, unsigned int order);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#379: FILE: mm/page_alloc.c:85:
+	printk(KERN_EMERG

CHECK:SPACING: No space is necessary after a cast
#383: FILE: mm/page_alloc.c:89:
+	       (unsigned long) page->flags,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#391: FILE: mm/page_alloc.c:97:
+	printk(KERN_EMERG "\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#392: FILE: mm/page_alloc.c:98:
+	printk(KERN_EMERG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#396: FILE: mm/page_alloc.c:102:
+	printk(KERN_EMERG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#398: FILE: mm/page_alloc.c:104:
+	printk(KERN_EMERG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#408: FILE: mm/page_alloc.c:114:
+				printk(KERN_EMERG "...\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#539: FILE: mm/page_alloc.c:207:
+			     (xpage->flags & (

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "xpage->mapping"
#551: FILE: mm/page_alloc.c:219:
+			     xpage->mapping != NULL ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#552: FILE: mm/page_alloc.c:220:
+			     xpage->private != (unsigned long) page

WARNING:RETURN_VOID: void function return statements are not generally useful
#566: FILE: mm/page_alloc.c:234:
+	return;
+}

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#571: FILE: mm/page_alloc.c:239:
+	if (unlikely(

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page->mapping"
#573: FILE: mm/page_alloc.c:241:
+		page->mapping != NULL ||

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#575: FILE: mm/page_alloc.c:243:
+		(page->flags & (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#583: FILE: mm/page_alloc.c:251:
+			1 << PG_writeback ))

WARNING:RETURN_VOID: void function return statements are not generally useful
#601: FILE: mm/page_alloc.c:269:
+	return;
+}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#685: FILE: mm/page_alloc.c:384:
+	free_pages_check(__FUNCTION__, page, order);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#749: FILE: mm/page_alloc.c:455:
+	    (pgflags & (

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#762: FILE: mm/page_alloc.c:466:
+		bad_page(__FUNCTION__, page, page, order);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#777: FILE: mm/page_alloc.c:478:
+	 * on the second page */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: No space is necessary after a cast
#790: FILE: mm/page_alloc.c:491:
+			xpage->private = (unsigned long) page;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#853: FILE: mm/page_alloc.c:648:
+	free_pages_check(__FUNCTION__, page, 0);

CHECK:SPACING: No space is necessary after a cast
#898: FILE: mm/page_alloc.c:1064:
+		page = (struct page *) page->private;

CHECK:SPACING: No space is necessary after a cast
#902: FILE: mm/page_alloc.c:1068:
+			dtor = (page_dtor_t) page[1].mapping;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#912: FILE: mm/page_alloc.c:1078:
+EXPORT_SYMBOL(put_page);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#979: FILE: mm/page_alloc.c:2230:
+int min_free_kbytes_sysctl_handler(ctl_table *table, int write,
                                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#980: FILE: mm/page_alloc.c:2231:
+int min_free_kbytes_sysctl_handler(ctl_table *table, int write,
 		struct file *file, void __user *buffer, size_t *length, loff_t *ppos)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228776.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 18 warnings, 23 checks, 867 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228776.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
