WARNING:REPEATED_WORD: Possible repeated word: 'that'
#44: 
which show that that tracing has no overhead when unused and

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#67: 
http://opersys.com/ftp/pub/LTT/ExtraPatches/patch-ltt-linux-2.5.44-bk2-021029-2.2.bz2

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#81: FILE: MAINTAINERS:988:
+P:	Karim Yaghmour
+M:	karim@opersys.com

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'L:' before 'W:'
#83: FILE: MAINTAINERS:990:
+W:	http://www.opersys.com/LTT
+L:	ltt-dev@listserv.shafik.org

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#93: FILE: include/asm-generic/trace.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#94: FILE: include/asm-generic/trace.h:2:
+ * linux/include/asm-generic/trace.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: include/asm-generic/trace.h:36:
+static inline void get_timestamp(struct timeval *now, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: include/asm-generic/trace.h:49:
+static inline void get_time_or_tsc(struct timeval *now, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: include/asm-generic/trace.h:57:
+ *^I@time_delta: previously calculated or retrieved time delta $

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#160: FILE: include/asm-generic/trace.h:68:
+ *	have_tsc: - Does this platform have a useable TSC?
   	                                      ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: include/asm-generic/trace.h:80:
+ *^ISets up the timers needed on each CPU for checking asynchronous $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: include/asm-generic/trace.h:81:
+ *^Itasks needing attention.  This is only the case when TSC timestamping $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#183: FILE: include/linux/trace.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#184: FILE: include/linux/trace.h:2:
+ * linux/include/linux/trace.h

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#189: FILE: include/linux/trace.h:7:
+ * This contains the necessary definitions for tracing the
+ * the system.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#209: FILE: include/linux/trace.h:27:
+#define LTT_PACKED_STRUCT __attribute__ ((packed))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#209: FILE: include/linux/trace.h:27:
+#define LTT_PACKED_STRUCT __attribute__ ((packed))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#254: FILE: include/linux/trace.h:72:
+extern int trace_set_config(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#254: FILE: include/linux/trace.h:72:
+extern int trace_set_config(

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LINE_SPACING: Missing a blank line after declarations
#259: FILE: include/linux/trace.h:77:
+	void		*eip_lower_bound,	/* Lower bound eip address */
+	void		*eip_upper_bound);	/* Upper bound eip address */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#260: FILE: include/linux/trace.h:78:
+extern int trace_get_config(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#260: FILE: include/linux/trace.h:78:
+extern int trace_get_config(

WARNING:LINE_SPACING: Missing a blank line after declarations
#265: FILE: include/linux/trace.h:83:
+	void		**eip_lower_bound,	/* Lower bound eip address */
+	void		**eip_upper_bound);	/* Upper bound eip address */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#266: FILE: include/linux/trace.h:84:
+extern int trace_create_event(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#266: FILE: include/linux/trace.h:84:
+extern int trace_create_event(

WARNING:LINE_SPACING: Missing a blank line after declarations
#270: FILE: include/linux/trace.h:88:
+	int		format_type,		/* Type of formatting used to log event data */
+	char		*format_data);		/* Data specific to format */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#271: FILE: include/linux/trace.h:89:
+extern int trace_create_owned_event(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#271: FILE: include/linux/trace.h:89:
+extern int trace_create_owned_event(

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#276: FILE: include/linux/trace.h:94:
+^Ipid_t^I^Iowner_pid);      ^I/* PID of event's owner */$

WARNING:LINE_SPACING: Missing a blank line after declarations
#276: FILE: include/linux/trace.h:94:
+	char		*format_data,		/* Data specific to format */
+	pid_t		owner_pid);      	/* PID of event's owner */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#277: FILE: include/linux/trace.h:95:
+extern void trace_destroy_event(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#277: FILE: include/linux/trace.h:95:
+extern void trace_destroy_event(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#279: FILE: include/linux/trace.h:97:
+extern void trace_destroy_owners_events(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#279: FILE: include/linux/trace.h:97:
+extern void trace_destroy_owners_events(

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#280: FILE: include/linux/trace.h:98:
+	pid_t		owner_pid);		/* The PID of the process' who's events are to be deleted */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#281: FILE: include/linux/trace.h:99:
+extern void trace_reregister_custom_events(void);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#282: FILE: include/linux/trace.h:100:
+extern int trace_std_formatted_event(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#282: FILE: include/linux/trace.h:100:
+extern int trace_std_formatted_event(

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#284: FILE: include/linux/trace.h:102:
+	...);					/* The parameters to be printed out in the event string */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#285: FILE: include/linux/trace.h:103:
+extern int trace_raw_event(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#285: FILE: include/linux/trace.h:103:
+extern int trace_raw_event(

WARNING:LINE_SPACING: Missing a blank line after declarations
#288: FILE: include/linux/trace.h:106:
+	int		event_size,		/* The size of the raw data */
+	void		*event_data);		/* Pointer to the raw event data */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#289: FILE: include/linux/trace.h:107:
+extern int trace_event(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#289: FILE: include/linux/trace.h:107:
+extern int trace_event(

WARNING:LINE_SPACING: Missing a blank line after declarations
#291: FILE: include/linux/trace.h:109:
+	u8		event_id,		/* Event ID (as defined in this header file) */
+	void		*event_struct);		/* Structure describing the event */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#292: FILE: include/linux/trace.h:110:
+extern int trace_get_pending_write_count(void);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#293: FILE: include/linux/trace.h:111:
+extern int trace(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#293: FILE: include/linux/trace.h:111:
+extern int trace(

WARNING:LINE_SPACING: Missing a blank line after declarations
#296: FILE: include/linux/trace.h:114:
+	void		*event_struct,		/* Structure describing the event */
+	u8		cpu_id);		/* CPU associated with event */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#297: FILE: include/linux/trace.h:115:
+extern void tracer_switch_buffers(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#297: FILE: include/linux/trace.h:115:
+extern void tracer_switch_buffers(

WARNING:LINE_SPACING: Missing a blank line after declarations
#300: FILE: include/linux/trace.h:118:
+	trace_time_delta	current_tsc,	/* TSC value associated with current time */
+	u8			cpu_id);	/* CPU associated with event */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#301: FILE: include/linux/trace.h:119:
+extern int trace_mmap_buffer(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#301: FILE: include/linux/trace.h:119:
+extern int trace_mmap_buffer(

WARNING:LINE_SPACING: Missing a blank line after declarations
#304: FILE: include/linux/trace.h:122:
+	unsigned long	length,			/* Length of mapping range */
+	unsigned long	*start_addr);		/* Pointer to mapping start address */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#305: FILE: include/linux/trace.h:123:
+extern int trace_valid_handle(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#305: FILE: include/linux/trace.h:123:
+extern int trace_valid_handle(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#307: FILE: include/linux/trace.h:125:
+extern int trace_alloc_handle(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#307: FILE: include/linux/trace.h:125:
+extern int trace_alloc_handle(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#309: FILE: include/linux/trace.h:127:
+extern int trace_free_handle(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#309: FILE: include/linux/trace.h:127:
+extern int trace_free_handle(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#311: FILE: include/linux/trace.h:129:
+extern int trace_free_daemon_handle(void);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#312: FILE: include/linux/trace.h:130:
+extern void trace_free_all_handles(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#312: FILE: include/linux/trace.h:130:
+extern void trace_free_all_handles(

ERROR:POINTER_LOCATION: "foo*	bar" should be "foo *bar"
#313: FILE: include/linux/trace.h:131:
+	struct task_struct*	task_ptr);	/* Pointer to task who's handles are to be freed */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#314: FILE: include/linux/trace.h:132:
+extern int tracer_set_buffer_size(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#314: FILE: include/linux/trace.h:132:
+extern int tracer_set_buffer_size(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#316: FILE: include/linux/trace.h:134:
+extern int tracer_set_n_buffers(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#316: FILE: include/linux/trace.h:134:
+extern int tracer_set_n_buffers(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#318: FILE: include/linux/trace.h:136:
+extern int tracer_set_default_config(void);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#320: FILE: include/linux/trace.h:138:
+extern asmlinkage int sys_trace(

WARNING:LINE_SPACING: Missing a blank line after declarations
#324: FILE: include/linux/trace.h:142:
+	unsigned long	command_arg1,		/* Argument "1" to command */
+	unsigned long	command_arg2);		/* Argument "2" to command */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#327: FILE: include/linux/trace.h:145:
+static inline void TRACE_EVENT(u8 event_id, void* data)

WARNING:TYPO_SPELLING: 'begining' may be misspelled - perhaps 'beginning'?
#351: FILE: include/linux/trace.h:169:
+	TRACE_EV_BUFFER_START,	/* Mark the begining of a trace buffer */
 	                      	            ^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#364: FILE: include/linux/trace.h:182:
+#define TRACER_MAGIC_NUMBER     0x00D6B7ED	/* That day marks an important historical event ... */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#367: FILE: include/linux/trace.h:185:
+typedef struct _trace_start {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#383: FILE: include/linux/trace.h:201:
+typedef struct _trace_syscall_entry {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#390: FILE: include/linux/trace.h:208:
+typedef struct _trace_trap_entry {

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#392: FILE: include/linux/trace.h:210:
+	u32 address;		/* Address where trap occured */
 	            		                      ^^^^^^^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#397: FILE: include/linux/trace.h:215:
+typedef struct _trace_trap_entry {

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#399: FILE: include/linux/trace.h:217:
+	u32 address;		/* Address where trap occured */
 	            		                      ^^^^^^^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#419: FILE: include/linux/trace.h:237:
+typedef struct _trace_irq_entry {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#440: FILE: include/linux/trace.h:258:
+typedef struct _trace_schedchange {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#445: FILE: include/linux/trace.h:263:
+static inline void TRACE_SCHEDCHANGE(task_t * task_out, task_t * task_in)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#445: FILE: include/linux/trace.h:263:
+static inline void TRACE_SCHEDCHANGE(task_t * task_out, task_t * task_in)

CHECK:SPACING: No space is necessary after a cast
#449: FILE: include/linux/trace.h:267:
+	sched_event.out = (u32) task_out->pid;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#450: FILE: include/linux/trace.h:268:
+	sched_event.in = (u32) task_in;

CHECK:SPACING: No space is necessary after a cast
#451: FILE: include/linux/trace.h:269:
+	sched_event.out_state = (u32) task_out->state;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#463: FILE: include/linux/trace.h:281:
+};
+typedef struct _trace_soft_irq {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#463: FILE: include/linux/trace.h:281:
+typedef struct _trace_soft_irq {

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#480: FILE: include/linux/trace.h:298:
+	TRACE_EV_PROCESS_FORK,		/* A fork or clone occured */
 	                      		                   ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#481: FILE: include/linux/trace.h:299:
+	TRACE_EV_PROCESS_EXIT,		/* An exit occured */
 	                      		           ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#482: FILE: include/linux/trace.h:300:
+	TRACE_EV_PROCESS_WAIT,		/* A wait occured */
 	                      		          ^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#486: FILE: include/linux/trace.h:304:
+};
+typedef struct _trace_process {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#486: FILE: include/linux/trace.h:304:
+typedef struct _trace_process {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#501: FILE: include/linux/trace.h:319:
+}
+static inline void TRACE_PROCESS_EXIT(u32 data1, u32 data2)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#509: FILE: include/linux/trace.h:327:
+	/* Regardless of whether this trace statement is active or not, these
+	two function must be called, otherwise there will be inconsistencies

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#510: FILE: include/linux/trace.h:328:
+	in the kernel's structures. */

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#521: FILE: include/linux/trace.h:339:
+	TRACE_EV_FILE_SYSTEM_EXEC,			/* An exec occured */
 	                          			           ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#522: FILE: include/linux/trace.h:340:
+	TRACE_EV_FILE_SYSTEM_OPEN,			/* An open occured */
 	                          			           ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#523: FILE: include/linux/trace.h:341:
+	TRACE_EV_FILE_SYSTEM_CLOSE,			/* A close occured */
 	                           			           ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#524: FILE: include/linux/trace.h:342:
+	TRACE_EV_FILE_SYSTEM_READ,			/* A read occured */
 	                          			          ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#525: FILE: include/linux/trace.h:343:
+	TRACE_EV_FILE_SYSTEM_WRITE,			/* A write occured */
 	                           			           ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#526: FILE: include/linux/trace.h:344:
+	TRACE_EV_FILE_SYSTEM_SEEK,			/* A seek occured */
 	                          			          ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#527: FILE: include/linux/trace.h:345:
+	TRACE_EV_FILE_SYSTEM_IOCTL,			/* An ioctl occured */
 	                           			            ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#528: FILE: include/linux/trace.h:346:
+	TRACE_EV_FILE_SYSTEM_SELECT,			/* A select occured */
 	                            			            ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#529: FILE: include/linux/trace.h:347:
+	TRACE_EV_FILE_SYSTEM_POLL			/* A poll occured */
 	                         			          ^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#531: FILE: include/linux/trace.h:349:
+};
+typedef struct _trace_file_system {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#531: FILE: include/linux/trace.h:349:
+typedef struct _trace_file_system {

CHECK:SPACING: No space is necessary after a cast
#544: FILE: include/linux/trace.h:362:
+	fs_event.file_name = (char*) file_name;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#544: FILE: include/linux/trace.h:362:
+	fs_event.file_name = (char*) file_name;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#555: FILE: include/linux/trace.h:373:
+};
+typedef struct _trace_timer {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#555: FILE: include/linux/trace.h:373:
+typedef struct _trace_timer {

WARNING:TYPO_SPELLING: 'Swaping' may be misspelled - perhaps 'Swapping'?
#577: FILE: include/linux/trace.h:395:
+	TRACE_EV_MEMORY_SWAP_IN,		/* Swaping pages in */
 	                        		   ^^^^^^^

WARNING:TYPO_SPELLING: 'Swaping' may be misspelled - perhaps 'Swapping'?
#578: FILE: include/linux/trace.h:396:
+	TRACE_EV_MEMORY_SWAP_OUT,		/* Swaping pages out */
 	                         		   ^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#582: FILE: include/linux/trace.h:400:
+};
+typedef struct _trace_memory {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#582: FILE: include/linux/trace.h:400:
+typedef struct _trace_memory {

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#598: FILE: include/linux/trace.h:416:
+	TRACE_EV_SOCKET_CALL = 1,	/* A socket call occured */
 	                         	                 ^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#603: FILE: include/linux/trace.h:421:
+};
+typedef struct _trace_socket {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#603: FILE: include/linux/trace.h:421:
+typedef struct _trace_socket {

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#621: FILE: include/linux/trace.h:439:
+	TRACE_EV_IPC_CALL = 1,		/* A System V IPC call occured */
 	                      		                       ^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#626: FILE: include/linux/trace.h:444:
+};
+typedef struct _trace_ipc {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#626: FILE: include/linux/trace.h:444:
+typedef struct _trace_ipc {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#647: FILE: include/linux/trace.h:465:
+};
+typedef struct _trace_network {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#647: FILE: include/linux/trace.h:465:
+typedef struct _trace_network {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#662: FILE: include/linux/trace.h:480:
+typedef struct _trace_buffer_start {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#669: FILE: include/linux/trace.h:487:
+typedef struct _trace_buffer_end {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#676: FILE: include/linux/trace.h:494:
+/* ***WARNING*** These structures should never be used as is, use the provided custom
+   event creation and logging functions. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#676: FILE: include/linux/trace.h:494:
+   event creation and logging functions. */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#677: FILE: include/linux/trace.h:495:
+typedef struct _trace_new_event {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#687: FILE: include/linux/trace.h:505:
+typedef struct _trace_custom {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#694: FILE: include/linux/trace.h:512:
+typedef struct _trace_change_mask {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#698: FILE: include/linux/trace.h:516:
+
+

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#716: FILE: include/linux/trace.h:534:
+#define TRACER_FIRST_EVENT_SIZE   (sizeof(u8) + sizeof(trace_time_delta) + sizeof(trace_buffer_start) + sizeof(uint16_t))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#719: FILE: include/linux/trace.h:537:
+#define TRACER_START_TRACE_EVENT_SIZE   (sizeof(u8) + sizeof(trace_time_delta) + sizeof(trace_start) + sizeof(uint16_t))

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#731: FILE: include/linux/trace.h:549:
+	TRACER_START = TRACER_MAGIC_NUMBER,	/* Start tracing events using the current configuration */

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#734: FILE: include/linux/trace.h:552:
+	TRACER_CONFIG_MEMORY_BUFFERS,		/* Set the memory buffers the daemon wants us to use */

WARNING:LONG_LINE_COMMENT: line length of 118 exceeds 100 columns
#742: FILE: include/linux/trace.h:560:
+	TRACER_CONFIG_SYSCALL_EIP_DEPTH,	/* Set the call depth at which the EIP should be fetched on syscall */

WARNING:LONG_LINE_COMMENT: line length of 118 exceeds 100 columns
#743: FILE: include/linux/trace.h:561:
+	TRACER_CONFIG_SYSCALL_EIP_LOWER,	/* Set the lowerbound address from which EIP is recorded on syscall */

WARNING:LONG_LINE_COMMENT: line length of 118 exceeds 100 columns
#744: FILE: include/linux/trace.h:562:
+	TRACER_CONFIG_SYSCALL_EIP_UPPER,	/* Set the upperbound address from which EIP is recorded on syscall */

WARNING:TYPO_SPELLING: 'comitted' may be misspelled - perhaps 'committed'?
#745: FILE: include/linux/trace.h:563:
+	TRACER_DATA_COMITTED,			/* The daemon has comitted the last trace */
 	                     			                  ^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#752: FILE: include/linux/trace.h:570:
+	TRACER_GET_BUFFER_CONTROL,		/* Get the buffer control data for the lockless schem*/

WARNING:LONG_LINE_COMMENT: line length of 113 exceeds 100 columns
#753: FILE: include/linux/trace.h:571:
+	TRACER_CONFIG_N_MEMORY_BUFFERS,		/* Set the number of memory buffers the daemon wants us to use */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#765: FILE: include/linux/trace.h:583:
+/* For the lockless scheme:
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#766: FILE: include/linux/trace.h:584:
+   A trace index is composed of two parts, a buffer number and a buffer $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#767: FILE: include/linux/trace.h:585:
+   offset.  The actual number of buffers allocated is a run-time decision, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#768: FILE: include/linux/trace.h:586:
+   although it must be a power of two for efficient computation.  We define $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#769: FILE: include/linux/trace.h:587:
+   a maximum number of bits for the buffer number, because the fill_count $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#770: FILE: include/linux/trace.h:588:
+   array in buffer_control must have a fixed size.  offset_bits must be at $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#772: FILE: include/linux/trace.h:590:
+   lost size word (since a buffer must be able to hold an event of maximum $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#773: FILE: include/linux/trace.h:591:
+   size).  Making offset_bits larger reduces fragmentation.  Making it $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#774: FILE: include/linux/trace.h:592:
+   smaller increases trace responsiveness. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#777: FILE: include/linux/trace.h:595:
+/* We need at least enough room for the max custom event, and we also need
+   room for the start and end event.  We also need it to be a power of 2. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#777: FILE: include/linux/trace.h:595:
+   room for the start and end event.  We also need it to be a power of 2. */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#778: FILE: include/linux/trace.h:596:
+#define TRACER_LOCKLESS_MIN_BUF_SIZE CUSTOM_EVENT_MAX_SIZE + 8192 /* 16K */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#780: FILE: include/linux/trace.h:598:
+/* Because we use atomic_t as the type for fill_counts, which has only 24
+   usable bits, we have 2**24 = 16M max for each buffer. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#780: FILE: include/linux/trace.h:598:
+   usable bits, we have 2**24 = 16M max for each buffer. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#783: FILE: include/linux/trace.h:601:
+/* Since we multiply n buffers by the buffer size, this provides a sanity
+   check, much less than the 256*16M possible. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#783: FILE: include/linux/trace.h:601:
+   check, much less than the 256*16M possible. */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#809: FILE: include/linux/trace.h:627:
+#define LTT_PERCPU_TIMER_FREQ  (HZ/10);
                                   ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#809: FILE: include/linux/trace.h:627:
+#define LTT_PERCPU_TIMER_FREQ  (HZ/10);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#813: FILE: include/linux/trace.h:631:
+struct lockless_buffer_control
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#824: FILE: include/linux/trace.h:642:
+^Iu32 last_event_index; /* For full-buffers state */ $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#832: FILE: include/linux/trace.h:650:
+struct locking_buffer_control
+{

WARNING:TYPO_SPELLING: 'writting' may be misspelled - perhaps 'writing'?
#833: FILE: include/linux/trace.h:651:
+	char* write_buf; /* Buffer used for writting */
 	                                    ^^^^^^^^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#833: FILE: include/linux/trace.h:651:
+	char* write_buf; /* Buffer used for writting */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#834: FILE: include/linux/trace.h:652:
+	char* read_buf; /* Buffer used for reading */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#835: FILE: include/linux/trace.h:653:
+	char* write_buf_end; /* End of write buffer */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#836: FILE: include/linux/trace.h:654:
+	char* read_buf_end; /* End of read buffer */

WARNING:TYPO_SPELLING: 'writting' may be misspelled - perhaps 'writing'?
#837: FILE: include/linux/trace.h:655:
+	char* current_write_pos; /* Current position for writting */
 	                                                 ^^^^^^^^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#837: FILE: include/linux/trace.h:655:
+	char* current_write_pos; /* Current position for writting */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#838: FILE: include/linux/trace.h:656:
+	char* read_limit; /* Limit at which read should stop */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#839: FILE: include/linux/trace.h:657:
+	char* write_limit; /* Limit at which write should stop */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#843: FILE: include/linux/trace.h:661:
+/* Data structure containing per-buffer tracing information. */ $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#845: FILE: include/linux/trace.h:663:
+struct buffer_control
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#854: FILE: include/linux/trace.h:672:
+^Iunion $

ERROR:OPEN_BRACE: open brace '{' following union go on the same line
#855: FILE: include/linux/trace.h:673:
+	union 
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#861: FILE: include/linux/trace.h:679:
+/* Data structure for sharing per-buffer information between driver and $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#862: FILE: include/linux/trace.h:680:
+/* Data structure for sharing per-buffer information between driver and 
+   daemon (via ioctl) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#862: FILE: include/linux/trace.h:680:
+   daemon (via ioctl) */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#864: FILE: include/linux/trace.h:682:
+struct shared_buffer_control
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#877: FILE: include/linux/trace.h:695:
+/* Data structure for sharing buffer-commit information between driver and $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#878: FILE: include/linux/trace.h:696:
+/* Data structure for sharing buffer-commit information between driver and 
+   daemon (via ioctl) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#878: FILE: include/linux/trace.h:696:
+   daemon (via ioctl) */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#880: FILE: include/linux/trace.h:698:
+struct buffers_committed
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#885: FILE: include/linux/trace.h:703:
+/* Data structure for sharing architecture-specific info between driver and $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#886: FILE: include/linux/trace.h:704:
+/* Data structure for sharing architecture-specific info between driver and 
+   daemon (via ioctl) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#886: FILE: include/linux/trace.h:704:
+   daemon (via ioctl) */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#888: FILE: include/linux/trace.h:706:
+struct ltt_arch_info
+{

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#894: FILE: include/linux/trace.h:712:
+#define _index(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.index)
                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#896: FILE: include/linux/trace.h:714:
+#define _bufno_bits(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.bufno_bits)
                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#898: FILE: include/linux/trace.h:716:
+#define _n_buffers(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.n_buffers)
                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#900: FILE: include/linux/trace.h:718:
+#define _offset_bits(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.offset_bits)
                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#902: FILE: include/linux/trace.h:720:
+#define _offset_mask(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.offset_mask)
                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#904: FILE: include/linux/trace.h:722:
+#define _index_mask(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.index_mask)
                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#906: FILE: include/linux/trace.h:724:
+#define _buffers_produced(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.buffers_produced)
                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#908: FILE: include/linux/trace.h:726:
+#define _buffers_consumed(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.buffers_consumed)
                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#910: FILE: include/linux/trace.h:728:
+#define _buffers_full(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.buffers_full)
                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#912: FILE: include/linux/trace.h:730:
+#define _fill_count(sbc, cpu, i) (((sbc)+(cpu))->scheme.lockless.fill_count[(i)])
                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#914: FILE: include/linux/trace.h:732:
+#define _trace_buffer(sbc, cpu) (((sbc)+(cpu))->trace_buffer)
                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#916: FILE: include/linux/trace.h:734:
+#define _buffer_id(sbc, cpu) (((sbc)+(cpu))->buffer_id)
                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#918: FILE: include/linux/trace.h:736:
+#define _events_lost(sbc, cpu) (((sbc)+(cpu))->events_lost)
                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#920: FILE: include/linux/trace.h:738:
+#define _buffer_start_time(sbc, cpu) (((sbc)+(cpu))->buffer_start_time)
                                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#922: FILE: include/linux/trace.h:740:
+#define _buffer_start_tsc(sbc, cpu) (((sbc)+(cpu))->buffer_start_tsc)
                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#924: FILE: include/linux/trace.h:742:
+#define _last_event_index(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.last_event_index)
                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#926: FILE: include/linux/trace.h:744:
+#define _last_event_timestamp(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.last_event_timestamp)
                                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#928: FILE: include/linux/trace.h:746:
+#define _last_event_tsc(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.last_event_tsc)
                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#930: FILE: include/linux/trace.h:748:
+#define _write_buf(sbc, cpu) (((sbc)+(cpu))->scheme.locking.write_buf)
                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#932: FILE: include/linux/trace.h:750:
+#define _read_buf(sbc, cpu) (((sbc)+(cpu))->scheme.locking.read_buf)
                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#934: FILE: include/linux/trace.h:752:
+#define _write_buf_end(sbc, cpu) (((sbc)+(cpu))->scheme.locking.write_buf_end)
                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#936: FILE: include/linux/trace.h:754:
+#define _read_buf_end(sbc, cpu) (((sbc)+(cpu))->scheme.locking.read_buf_end)
                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#938: FILE: include/linux/trace.h:756:
+#define _current_write_pos(sbc, cpu) (((sbc)+(cpu))->scheme.locking.current_write_pos)
                                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#940: FILE: include/linux/trace.h:758:
+#define _read_limit(sbc, cpu) (((sbc)+(cpu))->scheme.locking.read_limit)
                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#942: FILE: include/linux/trace.h:760:
+#define _write_limit(sbc, cpu) (((sbc)+(cpu))->scheme.locking.write_limit)
                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#944: FILE: include/linux/trace.h:762:
+#define _signal_sent(sbc, cpu) (((sbc)+(cpu))->scheme.locking.signal_sent)
                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#946: FILE: include/linux/trace.h:764:
+#define _waiting_for_cpu(sbc, cpu) (((sbc)+(cpu))->waiting_for_cpu)
                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#948: FILE: include/linux/trace.h:766:
+#define _waiting_for_cpu_async(sbc, cpu) (((sbc)+(cpu))->waiting_for_cpu_async)
                                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#963: FILE: include/linux/trace.h:781:
+^Iatomic_set(&waiting_for_cpu(cpu_id), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#976: FILE: include/linux/trace.h:794:
+^Iatomic_set(&waiting_for_cpu(cpu_id), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#989: FILE: include/linux/trace.h:807:
+^Iatomic_set(&waiting_for_cpu_async(cpu_id), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1002: FILE: include/linux/trace.h:820:
+^Iatomic_set(&waiting_for_cpu_async(cpu_id), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1013: FILE: include/linux/trace.h:831:
+static inline trace_time_delta calc_time_delta(struct timeval *now, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1027: FILE: include/linux/trace.h:845:
+ *^Ithe buffer start time and now, if TSC timestamping is being used. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1029: FILE: include/linux/trace.h:847:
+static inline void recalc_time_delta(struct timeval *now, $

ERROR:SPACING: space required before the open parenthesis '('
#1033: FILE: include/linux/trace.h:851:
+	if(using_tsc == 0)

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#1040: FILE: include/linux/trace.h:858:
+ *	Returns 1 if this platform has a cmpxchg useable by 
   	                                         ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1040: FILE: include/linux/trace.h:858:
+ *^IReturns 1 if this platform has a cmpxchg useable by $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1052: FILE: include/linux/trace.h:870:
+/* If cmpxchg isn't defined for the architecture, we don't want to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1053: FILE: include/linux/trace.h:871:
+   generate a link error - the locking scheme will still be available. */  $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1053: FILE: include/linux/trace.h:871:
+/* If cmpxchg isn't defined for the architecture, we don't want to 
+   generate a link error - the locking scheme will still be available. */  

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1053: FILE: include/linux/trace.h:871:
+   generate a link error - the locking scheme will still be available. */  

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1055: FILE: include/linux/trace.h:873:
+#define cmpxchg(p,o,n) 0
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1055: FILE: include/linux/trace.h:873:
+#define cmpxchg(p,o,n) 0
                    ^

WARNING:INLINE: plain inline is preferred over __inline__
#1058: FILE: include/linux/trace.h:876:
+extern __inline__ int ltt_set_bit(int nr, void *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#1071: FILE: include/linux/trace.h:889:
+extern __inline__ int ltt_clear_bit(int nr, void *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#1084: FILE: include/linux/trace.h:902:
+extern __inline__ int ltt_test_bit(int nr, void *addr)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000418648.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 52 errors, 100 warnings, 84 checks, 1062 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000418648.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
