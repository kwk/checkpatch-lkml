WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#73: FILE: arch/ia64/Kconfig:81:
+config HOTPLUG_CPU
+    bool "Support for hot-pluggable CPUs (EXPERIMENTAL)"
+    depends on SMP && HOTPLUG && EXPERIMENTAL
+	default n
+    ---help---
+      Say Y here to experiment with turning CPUs off and on.  CPUs
+      can be controlled through /sys/devices/system/cpu/cpu#.
+      Say N if you want to disable cpu hotplug.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#142: FILE: arch/ia64/kernel/irq.c:1030:
+^Iint ^I^Iirq, new_cpu;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#144: FILE: arch/ia64/kernel/irq.c:1032:
+	for (irq=0; irq < NR_IRQS; irq++) {
 	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#157: FILE: arch/ia64/kernel/irq.c:1045:
+		if (any_online_cpu(mask) == NR_CPUS) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: arch/ia64/kernel/irq.c:1058:
+			if (desc->handler && desc->handler->disable &&
+				desc->handler->enable && desc->handler->set_affinity) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: arch/ia64/kernel/irq.c:1064:
+				WARN_ON((!(desc->handler) || !(desc->handler->disable) ||
+						!(desc->handler->enable) ||

WARNING:LINE_SPACING: Missing a blank line after declarations
#186: FILE: arch/ia64/kernel/irq.c:1074:
+	unsigned int irq;
+	extern void ia64_process_pending_intr(void);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#186: FILE: arch/ia64/kernel/irq.c:1074:
+	extern void ia64_process_pending_intr(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#188: FILE: arch/ia64/kernel/irq.c:1076:
+	ia64_set_itv(1<<16);
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#206: FILE: arch/ia64/kernel/irq.c:1094:
+	for (irq=0; irq < NR_IRQS; irq++) {
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#208: FILE: arch/ia64/kernel/irq.c:1096:
+			vectors_in_migration[irq]=0;
 			                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#272: FILE: arch/ia64/kernel/process.c:193:
+	extern void ia64_cpu_local_tick (void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#272: FILE: arch/ia64/kernel/process.c:193:
+	extern void ia64_cpu_local_tick (void);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#278: FILE: arch/ia64/kernel/process.c:199:
+	 * it "work" for testing purposes. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:MEMORY_BARRIER: memory barrier without comment
#291: FILE: arch/ia64/kernel/process.c:212:
+	wmb();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#292: FILE: arch/ia64/kernel/process.c:213:
+	ia64_cpu_local_tick ();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#298: FILE: arch/ia64/kernel/process.c:219:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#402: FILE: arch/ia64/kernel/smpboot.c:387:
 static int __devinit

CHECK:BRACES: braces {} should be used on all arms of this statement
#416: FILE: arch/ia64/kernel/smpboot.c:398:
+	if (!keventd_up() || current_is_keventd())
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#418: FILE: arch/ia64/kernel/smpboot.c:400:
+	else {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#448: FILE: arch/ia64/kernel/smpboot.c:476:
+	for (cpu = 0; cpu < NR_CPUS; cpu++) {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#464: FILE: arch/ia64/kernel/smpboot.c:591:
+static int __devinit cpu_enable(unsigned int cpu)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#466: FILE: arch/ia64/kernel/smpboot.c:593:
+	per_cpu(cpu_state,cpu) = CPU_UP_PREPARE;
 	                 ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#467: FILE: arch/ia64/kernel/smpboot.c:594:
+	wmb();

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#486: FILE: arch/ia64/kernel/smpboot.c:613:
+	printk ("Disabled cpu %u\n", smp_processor_id());

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#486: FILE: arch/ia64/kernel/smpboot.c:613:
+	printk ("Disabled cpu %u\n", smp_processor_id());

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#496: FILE: arch/ia64/kernel/smpboot.c:623:
+		if (per_cpu(cpu_state, cpu) == CPU_DEAD)
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#507: FILE: arch/ia64/kernel/smpboot.c:634:
+		schedule_timeout(HZ/10);
 		                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#509: FILE: arch/ia64/kernel/smpboot.c:636:
+ ^Iprintk(KERN_ERR "CPU %u didn't die...\n", cpu);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#509: FILE: arch/ia64/kernel/smpboot.c:636:
+ ^Iprintk(KERN_ERR "CPU %u didn't die...\n", cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: arch/ia64/kernel/smpboot.c:636:
+ ^Iprintk(KERN_ERR "CPU %u didn't die...\n", cpu);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#509: FILE: arch/ia64/kernel/smpboot.c:636:
+ 	printk(KERN_ERR "CPU %u didn't die...\n", cpu);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#512: FILE: arch/ia64/kernel/smpboot.c:639:
+static int __devinit cpu_enable(unsigned int cpu)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#519: FILE: arch/ia64/kernel/smpboot.c:646:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#525: FILE: arch/ia64/kernel/smpboot.c:652:
+	BUG();

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#539: FILE: arch/ia64/kernel/smpboot.c:687:
+	if (cpu_isset(cpu, cpu_callin_map))
+	{

WARNING:MEMORY_BARRIER: memory barrier without comment
#544: FILE: arch/ia64/kernel/smpboot.c:692:
+			mb();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#557: FILE: arch/ia64/kernel/smp.c:74:
+extern void cpu_halt (void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#557: FILE: arch/ia64/kernel/smp.c:74:
+extern void cpu_halt (void);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#589: FILE: arch/ia64/kernel/smp.c:107:
+	BUG();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#590: FILE: arch/ia64/kernel/smp.c:108:
+	for (;;);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#611: FILE: arch/ia64/kernel/time.c:248:
+	if (unlikely(cpu_is_offline(smp_processor_id()))) {
+		return IRQ_HANDLED;
+	}

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#625: FILE: include/asm-ia64/smp.h:123:
+extern void lock_ipi_calllock(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#626: FILE: include/asm-ia64/smp.h:124:
+extern void unlock_ipi_calllock(void);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'vec' may be better as '(vec)' to avoid precedence issues
#681: FILE: arch/ia64/kernel/irq_ia64.c:91:
+#	define IS_RESCHEDULE(vec)	(vec == IA64_IPI_RESCHEDULE)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#713: FILE: arch/ia64/kernel/irq_ia64.c:176:
+	extern unsigned int vectors_in_migration[NR_IRQS];

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#735: FILE: arch/ia64/kernel/irq_ia64.c:198:
+			vectors_in_migration[local_vector_to_irq(vector)]=0;
 			                                                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#751: FILE: arch/ia64/kernel/irq_ia64.c:214:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#776: FILE: arch/ia64/kernel/sal.c:139:
+	no_int_routing=1;
 	              ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000283913.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 29 warnings, 10 checks, 653 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000283913.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
