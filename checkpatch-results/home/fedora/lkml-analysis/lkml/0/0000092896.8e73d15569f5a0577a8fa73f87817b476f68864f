ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#50: FILE: drivers/media/dvb/dvb-core/dvb_frontend.h:107:
+	void* misc_priv;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#56: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#61: FILE: drivers/media/dvb/frontends/bsbe1.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#77: FILE: drivers/media/dvb/frontends/bsbe1.h:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#78: FILE: drivers/media/dvb/frontends/bsbe1.h:18:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#130: FILE: drivers/media/dvb/frontends/bsbe1.h:70:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#131: FILE: drivers/media/dvb/frontends/bsbe1.h:71:
+static int alps_bsbe1_set_symbol_rate(struct dvb_frontend* fe, u32 srate, u32 ratio)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#136: FILE: drivers/media/dvb/frontends/bsbe1.h:76:
+	if (srate < 1500000) { aclk = 0xb7; bclk = 0x47; }

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#137: FILE: drivers/media/dvb/frontends/bsbe1.h:77:
+	else if (srate < 3000000) { aclk = 0xb7; bclk = 0x4b; }

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#137: FILE: drivers/media/dvb/frontends/bsbe1.h:77:
+	if (srate < 1500000) { aclk = 0xb7; bclk = 0x47; }
+	else if (srate < 3000000) { aclk = 0xb7; bclk = 0x4b; }

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#138: FILE: drivers/media/dvb/frontends/bsbe1.h:78:
+	else if (srate < 7000000) { aclk = 0xb7; bclk = 0x4f; }

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#138: FILE: drivers/media/dvb/frontends/bsbe1.h:78:
+	else if (srate < 3000000) { aclk = 0xb7; bclk = 0x4b; }
+	else if (srate < 7000000) { aclk = 0xb7; bclk = 0x4f; }

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#139: FILE: drivers/media/dvb/frontends/bsbe1.h:79:
+	else if (srate < 14000000) { aclk = 0xb7; bclk = 0x53; }

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#139: FILE: drivers/media/dvb/frontends/bsbe1.h:79:
+	else if (srate < 7000000) { aclk = 0xb7; bclk = 0x4f; }
+	else if (srate < 14000000) { aclk = 0xb7; bclk = 0x53; }

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#140: FILE: drivers/media/dvb/frontends/bsbe1.h:80:
+	else if (srate < 30000000) { aclk = 0xb6; bclk = 0x53; }

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#140: FILE: drivers/media/dvb/frontends/bsbe1.h:80:
+	else if (srate < 14000000) { aclk = 0xb7; bclk = 0x53; }
+	else if (srate < 30000000) { aclk = 0xb6; bclk = 0x53; }

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#141: FILE: drivers/media/dvb/frontends/bsbe1.h:81:
+	else if (srate < 45000000) { aclk = 0xb4; bclk = 0x51; }

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#141: FILE: drivers/media/dvb/frontends/bsbe1.h:81:
+	else if (srate < 30000000) { aclk = 0xb6; bclk = 0x53; }
+	else if (srate < 45000000) { aclk = 0xb4; bclk = 0x51; }

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#147: FILE: drivers/media/dvb/frontends/bsbe1.h:87:
+	stv0299_writereg(fe, 0x21, (ratio      ) & 0xf0);
 	                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#147: FILE: drivers/media/dvb/frontends/bsbe1.h:87:
+	stv0299_writereg(fe, 0x21, (ratio      ) & 0xf0);

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#152: FILE: drivers/media/dvb/frontends/bsbe1.h:92:
+static int alps_bsbe1_pll_set(struct dvb_frontend* fe, struct i2c_adapter *i2c, struct dvb_frontend_parameters* params)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#152: FILE: drivers/media/dvb/frontends/bsbe1.h:92:
+static int alps_bsbe1_pll_set(struct dvb_frontend* fe, struct i2c_adapter *i2c, struct dvb_frontend_parameters* params)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#152: FILE: drivers/media/dvb/frontends/bsbe1.h:92:
+static int alps_bsbe1_pll_set(struct dvb_frontend* fe, struct i2c_adapter *i2c, struct dvb_frontend_parameters* params)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'params->frequency < 950000'
#159: FILE: drivers/media/dvb/frontends/bsbe1.h:99:
+	if ((params->frequency < 950000) || (params->frequency > 2150000))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'params->frequency > 2150000'
#159: FILE: drivers/media/dvb/frontends/bsbe1.h:99:
+	if ((params->frequency < 950000) || (params->frequency > 2150000))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#191: FILE: drivers/media/dvb/frontends/lnbp21.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#209: FILE: drivers/media/dvb/frontends/lnbp21.h:19:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#210: FILE: drivers/media/dvb/frontends/lnbp21.h:20:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#235: FILE: drivers/media/dvb/frontends/lnbp21.h:45:
+	void			(*release_chain)(struct dvb_frontend* fe);

CHECK:SPACING: No space is necessary after a cast
#240: FILE: drivers/media/dvb/frontends/lnbp21.h:50:
+	struct lnbp21 *lnbp21 = (struct lnbp21 *) fe->misc_priv;

ERROR:SPACING: space required before the open parenthesis '('
#247: FILE: drivers/media/dvb/frontends/lnbp21.h:57:
+	switch(voltage) {

CHECK:SPACING: No space is necessary after a cast
#268: FILE: drivers/media/dvb/frontends/lnbp21.h:78:
+	struct lnbp21 *lnbp21 = (struct lnbp21 *) fe->misc_priv;

CHECK:SPACING: No space is necessary after a cast
#286: FILE: drivers/media/dvb/frontends/lnbp21.h:96:
+	struct lnbp21 *lnbp21 = (struct lnbp21 *) fe->misc_priv;

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#299: FILE: drivers/media/dvb/frontends/lnbp21.h:109:
+static int lnbp21_init(struct dvb_frontend *fe, struct i2c_adapter *i2c, u8 override_set, u8 override_clear)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*lnbp21)...) over kmalloc(sizeof(struct lnbp21)...)
#301: FILE: drivers/media/dvb/frontends/lnbp21.h:111:
+	struct lnbp21 *lnbp21 = kmalloc(sizeof(struct lnbp21), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092896.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 5 warnings, 7 checks, 441 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092896.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
