CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#32: 
> * Måns Rullgård <mru@inprovide.com> wrote:
     ^

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#46: 
--- a/drivers/char/sysrq.c	2004-10-29 13:19:05 +02:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#57: FILE: drivers/char/sysrq.c:224:
+}
+static struct sysrq_key_op sysrq_unrt_op = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: include/linux/sched.h:1032:
+extern void normalize_rt_tasks(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: kernel/sched.c:4597:
+       struct task_struct *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: kernel/sched.c:4598:
+       prio_array_t *array;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: kernel/sched.c:4599:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: kernel/sched.c:4600:
+       runqueue_t *rq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: kernel/sched.c:4602:
+       read_lock_irq(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: kernel/sched.c:4603:
+       for_each_process (p) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#107: FILE: kernel/sched.c:4603:
+       for_each_process (p) {
+               if (!rt_task(p))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#107: FILE: kernel/sched.c:4603:
+       for_each_process (p) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: kernel/sched.c:4604:
+               if (!rt_task(p))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: kernel/sched.c:4604:
+               if (!rt_task(p))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#108: FILE: kernel/sched.c:4604:
+               if (!rt_task(p))
+                       continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: kernel/sched.c:4605:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: kernel/sched.c:4605:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: kernel/sched.c:4607:
+               rq = task_rq_lock(p, &flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: kernel/sched.c:4607:
+               rq = task_rq_lock(p, &flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: kernel/sched.c:4609:
+               array = p->array;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: kernel/sched.c:4609:
+               array = p->array;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: kernel/sched.c:4610:
+               if (array)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: kernel/sched.c:4610:
+               if (array)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#114: FILE: kernel/sched.c:4610:
+               if (array)
+                       deactivate_task(p, task_rq(p));

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: kernel/sched.c:4611:
+                       deactivate_task(p, task_rq(p));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: kernel/sched.c:4611:
+                       deactivate_task(p, task_rq(p));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: kernel/sched.c:4612:
+               __setscheduler(p, SCHED_NORMAL, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: kernel/sched.c:4612:
+               __setscheduler(p, SCHED_NORMAL, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: kernel/sched.c:4613:
+               if (array) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: kernel/sched.c:4613:
+               if (array) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#117: FILE: kernel/sched.c:4613:
+               if (array) {
+                       __activate_task(p, task_rq(p));

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: kernel/sched.c:4614:
+                       __activate_task(p, task_rq(p));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: kernel/sched.c:4614:
+                       __activate_task(p, task_rq(p));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: kernel/sched.c:4615:
+                       resched_task(rq->curr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: kernel/sched.c:4615:
+                       resched_task(rq->curr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: kernel/sched.c:4616:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: kernel/sched.c:4616:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: kernel/sched.c:4618:
+               task_rq_unlock(rq, &flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: kernel/sched.c:4618:
+               task_rq_unlock(rq, &flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: kernel/sched.c:4619:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: kernel/sched.c:4620:
+       read_unlock_irq(&tasklist_lock);$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#127: FILE: kernel/sched.c:4623:
+EXPORT_SYMBOL(normalize_rt_tasks);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235978.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 26 warnings, 3 checks, 71 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235978.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
