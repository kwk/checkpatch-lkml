WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
diff -Nru linux-2.5.61/drivers/char/Kconfig linux98-2.5.61/drivers/char/Kconfig

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#36: FILE: drivers/char/Kconfig:578:
+config PC9800_OLDLP
+	tristate "NEC PC-9800 old-style printer port support"
+	depends on X86_PC9800 && !PARPORT
+	---help---
+	  If you intend to attach a printer to the parallel port of NEC PC-9801
+	  /PC-9821 with OLD compatibility mode, Say Y.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#43: FILE: drivers/char/Kconfig:585:
+config PC9800_OLDLP_CONSOLE
+	bool "Support for console on line printer"
+	depends on PC9800_OLDLP
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#63: FILE: drivers/char/Kconfig:847:
+config RTC98
+	tristate "NEC PC-9800 Real Time Clock Support"
+	depends on X86_PC9800
+	default y
+	---help---
+	  If you say Y here and create a character special file /dev/rtc with
+	  major number 10 and minor number 135 using mknod ("man mknod"), you
+	  will get access to the real time clock (or hardware clock) built
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#98: FILE: drivers/char/lp_old98.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#99: FILE: drivers/char/lp_old98.c:2:
+ *	linux/drivers/char/lp_old98.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#126: FILE: drivers/char/lp_old98.c:29:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#127: FILE: drivers/char/lp_old98.c:30:
+#include <asm/uaccess.h>

CHECK:CAMELCASE: Avoid CamelCase: <LP_MASK_nBUSY>
#146: FILE: drivers/char/lp_old98.c:49:
+#define	LP_MASK_nBUSY	(1 << 2)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BIT_MACRO: Prefer using the BIT macro
#146: FILE: drivers/char/lp_old98.c:49:
+#define	LP_MASK_nBUSY	(1 << 2)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:CAMELCASE: Avoid CamelCase: <LP_MASK_nSTROBE>
#147: FILE: drivers/char/lp_old98.c:50:
+#define	LP_MASK_nSTROBE	(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#147: FILE: drivers/char/lp_old98.c:50:
+#define	LP_MASK_nSTROBE	(1 << 7)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#157: FILE: drivers/char/lp_old98.c:60:
+#define	DC1	'\x11'

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#158: FILE: drivers/char/lp_old98.c:61:
+#define	DC3	'\x13'

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#169: FILE: drivers/char/lp_old98.c:72:
+static	int	dc1_check	= 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#172: FILE: drivers/char/lp_old98.c:75:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#180: FILE: drivers/char/lp_old98.c:83:
+static DECLARE_WAIT_QUEUE_HEAD (lp_old98_waitq);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#186: FILE: drivers/char/lp_old98.c:89:
+	if (inb(LP_PORT_STATUS) & LP_MASK_nBUSY)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#188: FILE: drivers/char/lp_old98.c:91:
+	else {

CHECK:SPACING: No space is necessary after a cast
#189: FILE: drivers/char/lp_old98.c:92:
+		struct timer_list *t = (struct timer_list *) data;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#232: FILE: drivers/char/lp_old98.c:135:
+		printk(KERN_DEBUG "lp_old98: success after %d counts.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: drivers/char/lp_old98.c:146:
+    $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/char/lp_old98.c:146:
+    $

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#250: FILE: drivers/char/lp_old98.c:153:
+	lp.stats.chars ++;
 	               ^

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#261: FILE: drivers/char/lp_old98.c:164:
+#if LINUX_VERSION_CODE < 0x20200

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#262: FILE: drivers/char/lp_old98.c:165:
+static long lp_old98_write(struct inode * inode, struct file * file,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#262: FILE: drivers/char/lp_old98.c:165:
+static long lp_old98_write(struct inode * inode, struct file * file,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#263: FILE: drivers/char/lp_old98.c:166:
+			   const char * buf, unsigned long count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#265: FILE: drivers/char/lp_old98.c:168:
+static ssize_t lp_old98_write(struct file * file,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#266: FILE: drivers/char/lp_old98.c:169:
+			      const char * buf, size_t count,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: drivers/char/lp_old98.c:171:
+#endif    $

WARNING:LINE_SPACING: Missing a blank line after declarations
#283: FILE: drivers/char/lp_old98.c:186:
+		unsigned long bytes_written = 0;
+		unsigned long copy_size

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#284: FILE: drivers/char/lp_old98.c:187:
+		unsigned long copy_size
+			= (count < LP_BUFFER_SIZE ? count : LP_BUFFER_SIZE);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:BRACES: braces {} should be used on all arms of this statement
#290: FILE: drivers/char/lp_old98.c:193:
+			if (lp_old98_char(lp.lp_buffer[bytes_written]))
[...]
+			else {
[...]

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#291: FILE: drivers/char/lp_old98.c:194:
+				bytes_written ++;
 				              ^

CHECK:BRACES: Unbalanced braces around else statement
#292: FILE: drivers/char/lp_old98.c:195:
+			else {

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#299: FILE: drivers/char/lp_old98.c:202:
+				lp.stats.sleeps ++;
 				                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#302: FILE: drivers/char/lp_old98.c:205:
+				printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#304: FILE: drivers/char/lp_old98.c:207:
+				       "lp_old98: sleeping at %d characters"
+				       " for %d jiffies\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#325: FILE: drivers/char/lp_old98.c:228:
+static int lp_old98_open(struct inode * inode, struct file * file)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#325: FILE: drivers/char/lp_old98.c:228:
+static int lp_old98_open(struct inode * inode, struct file * file)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#337: FILE: drivers/char/lp_old98.c:240:
+	if (dc1_check && (lp.flags & LP_ABORTOPEN)
+	    && !(file->f_flags & O_NONBLOCK)) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#375: FILE: drivers/char/lp_old98.c:278:
+	if ((lp.lp_buffer = kmalloc(LP_BUFFER_SIZE, GFP_KERNEL)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#387: FILE: drivers/char/lp_old98.c:290:
+static int lp_old98_release(struct inode * inode, struct file * file)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#387: FILE: drivers/char/lp_old98.c:290:
+static int lp_old98_release(struct inode * inode, struct file * file)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#403: FILE: drivers/char/lp_old98.c:306:
+	if ((data = inb(LP_PORT_EXTMODE)) != 0xFF && (data & 0x10)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#404: FILE: drivers/char/lp_old98.c:307:
+		printk(KERN_INFO

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#409: FILE: drivers/char/lp_old98.c:312:
+	if ((pc98_hw_flags & PC98_HW_H98)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#410: FILE: drivers/char/lp_old98.c:313:
+	if ((pc98_hw_flags & PC98_HW_H98)
+	    && ((data = inb(LP_PORT_H98MODE)) & 0x01)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#411: FILE: drivers/char/lp_old98.c:314:
+		printk(KERN_INFO

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#426: FILE: drivers/char/lp_old98.c:329:
+		lp.time = arg * HZ/100;
 		                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#476: FILE: drivers/char/lp_old98.c:379:
+^Icase LPSETIRQ: $

WARNING:CONST_STRUCT: struct file_operations should normally be const
#483: FILE: drivers/char/lp_old98.c:386:
+static struct file_operations lp_old98_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: drivers/char/lp_old98.c:409:
+static void lp_old98_console_write(struct console *console,
+				    const char *s, unsigned int count)

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#509: FILE: drivers/char/lp_old98.c:412:
+	static unsigned int timeout_run = 0;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#574: FILE: drivers/char/lp_old98.c:477:
+	if (pc98_hw_flags & PC98_HW_H98)
+	    if (!request_region(LP_PORT_H98MODE, 1, "lp_old98") {

WARNING:TABSTOP: Statements should start on a tabstop
#575: FILE: drivers/char/lp_old98.c:478:
+	    if (!request_region(LP_PORT_H98MODE, 1, "lp_old98") {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 12)
#575: FILE: drivers/char/lp_old98.c:478:
+	    if (!request_region(LP_PORT_H98MODE, 1, "lp_old98") {
[...]
+	    if (request_region(LP_PORT_STATUS, 1, "lp_old98")) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#576: FILE: drivers/char/lp_old98.c:479:
+		printk(KERN_ERR

WARNING:TABSTOP: Statements should start on a tabstop
#579: FILE: drivers/char/lp_old98.c:482:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#581: FILE: drivers/char/lp_old98.c:484:
+	if (request_region(LP_PORT_DATA,   1, "lp_old98")) {
+	    if (request_region(LP_PORT_STATUS, 1, "lp_old98")) {

WARNING:TABSTOP: Statements should start on a tabstop
#582: FILE: drivers/char/lp_old98.c:485:
+	    if (request_region(LP_PORT_STATUS, 1, "lp_old98")) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#583: FILE: drivers/char/lp_old98.c:486:
+		if (request_region(LP_PORT_STROBE, 1, "lp_old98")) {
+		    if (request_region(LP_PORT_EXTMODE, 1, "lp_old98")) {

WARNING:TABSTOP: Statements should start on a tabstop
#584: FILE: drivers/char/lp_old98.c:487:
+		    if (request_region(LP_PORT_EXTMODE, 1, "lp_old98")) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#585: FILE: drivers/char/lp_old98.c:488:
+			if (register_chrdev(LP_MAJOR, "lp", &lp_old98_fops)) {
+			    printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#586: FILE: drivers/char/lp_old98.c:489:
+			    printk(KERN_ERR

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#589: FILE: drivers/char/lp_old98.c:492:
+			} else {
[...]
+			    register_console(&lp_old98_console);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#592: FILE: drivers/char/lp_old98.c:495:
+			    printk(KERN_INFO "lp_old98: console ready\n");

WARNING:TABSTOP: Statements should start on a tabstop
#599: FILE: drivers/char/lp_old98.c:502:
+			    return 0;

WARNING:TABSTOP: Statements should start on a tabstop
#601: FILE: drivers/char/lp_old98.c:504:
+		    }

WARNING:TABSTOP: Statements should start on a tabstop
#605: FILE: drivers/char/lp_old98.c:508:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#609: FILE: drivers/char/lp_old98.c:512:
+	if (pc98_hw_flags & PC98_HW_H98)
+	    release_region(LP_PORT_H98MODE, 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#612: FILE: drivers/char/lp_old98.c:515:
+	printk(KERN_ERR "lp_old98: I/O ports already occupied, giving up.\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#636: FILE: drivers/char/lp_old98.c:539:
+        int ints[4];$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: drivers/char/lp_old98.c:539:
+        int ints[4];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#638: FILE: drivers/char/lp_old98.c:541:
+        str = get_options(str, ARRAY_SIZE(ints), ints);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: drivers/char/lp_old98.c:541:
+        str = get_options(str, ARRAY_SIZE(ints), ints);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#639: FILE: drivers/char/lp_old98.c:542:
+        if (ints[0] > 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: drivers/char/lp_old98.c:542:
+        if (ints[0] > 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#641: FILE: drivers/char/lp_old98.c:544:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: drivers/char/lp_old98.c:544:
+        return 1;$

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#643: FILE: drivers/char/lp_old98.c:546:
+__setup("lp_old98_dc1_check=", lp_old98_setup);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#657: FILE: drivers/char/upd4990a.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#658: FILE: drivers/char/upd4990a.c:2:
+ * NEC PC-9800 Real Time Clock interface for Linux^I$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#689: FILE: drivers/char/upd4990a.c:33:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#690: FILE: drivers/char/upd4990a.c:34:
+#include <asm/uaccess.h>

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#693: FILE: drivers/char/upd4990a.c:37:
+#define BCD_TO_BINARY(val)	(((val) >> 4) * 10 + ((val) & 0xF))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#694: FILE: drivers/char/upd4990a.c:38:
+#define BINARY_TO_BCD(val)	((((val) / 10) << 4) | ((val) % 10))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#711: FILE: drivers/char/upd4990a.c:55:
+static int rtc_ioctl(struct inode *inode, struct file *file,
+			unsigned int cmd, unsigned long arg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#714: FILE: drivers/char/upd4990a.c:58:
+static int rtc_read_proc(char *page, char **start, off_t off,
+			  int count, int *eof, void *data);

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#728: FILE: drivers/char/upd4990a.c:72:
+ * rtc_status but before mod_timer is called, which would then reenable the
                                                                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#734: FILE: drivers/char/upd4990a.c:78:
+static const unsigned char days_in_mo[] = $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#735: FILE: drivers/char/upd4990a.c:79:
+static const unsigned char days_in_mo[] = 
+{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#737: FILE: drivers/char/upd4990a.c:81:
+extern spinlock_t rtc_lock;	/* defined in arch/i386/kernel/time.c */

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#744: FILE: drivers/char/upd4990a.c:88:
+	/* Kernel timer does del_timer internally before calling
+	   each timer entry, so this is unnecessary.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#745: FILE: drivers/char/upd4990a.c:89:
+	   del_timer(&rtc_uie_timer);  */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#777: FILE: drivers/char/upd4990a.c:121:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#788: FILE: drivers/char/upd4990a.c:132:
+		 * confusing. And no, xchg() is not the answer. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#810: FILE: drivers/char/upd4990a.c:154:
+^I^Iretval = sizeof(unsigned long); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#821: FILE: drivers/char/upd4990a.c:165:
+^Istruct rtc_time wtime; $

ERROR:SPACING: space required before the open brace '{'
#837: FILE: drivers/char/upd4990a.c:181:
+		if (!(rtc_status & RTC_UIE_TIMER_ON)){

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#864: FILE: drivers/char/upd4990a.c:208:
+		if ((wtime.tm_year = BCD_TO_BINARY(raw.year)) < 95)

CHECK:SPACING: No space is necessary after a cast
#877: FILE: drivers/char/upd4990a.c:221:
+		if (copy_from_user(&wtime, (struct rtc_time *) arg,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#878: FILE: drivers/char/upd4990a.c:222:
+		if (copy_from_user(&wtime, (struct rtc_time *) arg,
+				    sizeof (struct rtc_time)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#878: FILE: drivers/char/upd4990a.c:222:
+				    sizeof (struct rtc_time)))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#889: FILE: drivers/char/upd4990a.c:233:
+		/* For acceptable year domain (1995 - 2094),
+		   this IS sufficient.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#889: FILE: drivers/char/upd4990a.c:233:
+		   this IS sufficient.  */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#895: FILE: drivers/char/upd4990a.c:239:
+^I^I^I$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#897: FILE: drivers/char/upd4990a.c:241:
+		if (wtime.tm_hour >= 24
+		    || wtime.tm_min >= 60 || wtime.tm_sec >= 60)

WARNING:SIZEOF_PARENTHESIS: sizeof wtime should be sizeof(wtime)
#920: FILE: drivers/char/upd4990a.c:264:
+	return copy_to_user((void *)arg, &wtime, sizeof wtime) ? -EFAULT : 0;

ERROR:SPACING: space required before the open parenthesis '('
#933: FILE: drivers/char/upd4990a.c:277:
+	if(rtc_status & RTC_IS_OPEN)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#947: FILE: drivers/char/upd4990a.c:291:
+static int rtc_fasync(int fd, struct file *filp, int on)
                                            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#949: FILE: drivers/char/upd4990a.c:293:
+	return fasync_helper(fd, filp, on, &rtc_async_queue);
 	                         ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#962: FILE: drivers/char/upd4990a.c:306:
+	 * committed, and no timer is running. */

WARNING:CONST_STRUCT: struct file_operations should normally be const
#986: FILE: drivers/char/upd4990a.c:330:
+static struct file_operations rtc_fops = {

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#997: FILE: drivers/char/upd4990a.c:341:
+static struct miscdevice rtc_dev=
                                 ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#998: FILE: drivers/char/upd4990a.c:342:
+static struct miscdevice rtc_dev=
+{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1007: FILE: drivers/char/upd4990a.c:351:
+		printk(KERN_ERR "upd4990a: could not acquire I/O port %#x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1008: FILE: drivers/char/upd4990a.c:352:
+		printk(KERN_ERR "upd4990a: could not acquire I/O port %#x\n",
+			UPD4990A_IO);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1012: FILE: drivers/char/upd4990a.c:356:
+#if 0

WARNING:TYPO_SPELLING: 'Calender' may be misspelled - perhaps 'Calendar'?
#1013: FILE: drivers/char/upd4990a.c:357:
+	printk(KERN_INFO "\xB6\xDA\xDD\xC0\xDE \xC4\xDE\xB9\xB2 Driver\n");  /* Calender Clock Driver */
 	                                                                        ^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#1013: FILE: drivers/char/upd4990a.c:357:
+	printk(KERN_INFO "\xB6\xDA\xDD\xC0\xDE \xC4\xDE\xB9\xB2 Driver\n");  /* Calender Clock Driver */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1013: FILE: drivers/char/upd4990a.c:357:
+	printk(KERN_INFO "\xB6\xDA\xDD\xC0\xDE \xC4\xDE\xB9\xB2 Driver\n");  /* Calender Clock Driver */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1015: FILE: drivers/char/upd4990a.c:359:
+	printk(KERN_INFO

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1027: FILE: drivers/char/upd4990a.c:371:
+module_init (rtc_init);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1038: FILE: drivers/char/upd4990a.c:382:
+module_exit (rtc_exit);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1059: FILE: drivers/char/upd4990a.c:403:
+	if ((year = BCD_TO_BINARY(data.year) + 1900) < 1995)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1090: FILE: include/asm-i386/upd4990a.h:1:
+/*

CHECK:CAMELCASE: Avoid CamelCase: <_ASM_I386_uPD4990A_H>
#1102: FILE: include/asm-i386/upd4990a.h:13:
+#ifndef _ASM_I386_uPD4990A_H

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1105: FILE: include/asm-i386/upd4990a.h:16:
+#include <asm/io.h>

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'usec' - possible side-effects?
#1124: FILE: include/asm-i386/upd4990a.h:35:
+#define UPD4990A_DELAY(usec)						\
+	do {								\
+		if (__builtin_constant_p((usec)) && (usec) < 5)	\
+			__asm__ (".rept %c1\n\toutb %%al,%0\n\t.endr"	\
+				 : : "N" (0x5F),			\
+				     "i" (((usec) * 10 + 5) / 6));	\
+		else {							\
+			int _count = ((usec) * 10 + 5) / 6;		\
+			__asm__ volatile ("1: outb %%al,%1\n\tloop 1b"	\
+					  : "=c" (_count)		\
+					  : "N" (0x5F), "0" (_count));	\
+		}							\
+	} while (0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1146: FILE: include/linux/upd4990a.h:1:
+/*

CHECK:CAMELCASE: Avoid CamelCase: <_LINUX_uPD4990A_H>
#1158: FILE: include/linux/upd4990a.h:13:
+#ifndef _LINUX_uPD4990A_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1184: FILE: include/linux/upd4990a.h:39:
+/* Parallel commands (3 bits)
+   0-6 are same with serial commands.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1184: FILE: include/linux/upd4990a.h:39:
+   0-6 are same with serial commands.  */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bit' - possible side-effects?
#1192: FILE: include/linux/upd4990a.h:47:
+# define UPD4990A_OUTPUT_DATA(bit)			\
+	do {						\
+		UPD4990A_OUTPUT_DATA_CLK((bit), 0);	\
+		UPD4990A_DELAY(1); /* t-DSU */		\
+		UPD4990A_OUTPUT_DATA_CLK((bit), 1);	\
+		UPD4990A_DELAY(1); /* t-DHLD */	\
+	} while (0)

WARNING:INLINE: plain inline is preferred over __inline__
#1201: FILE: include/linux/upd4990a.h:56:
+static __inline__ void upd4990a_serial_command(int command)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1212: FILE: include/linux/upd4990a.h:67:
+	/* 19 microseconds extra delay is needed
+	   iff previous mode is TIME READ command  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1212: FILE: include/linux/upd4990a.h:67:
+	   iff previous mode is TIME READ command  */

WARNING:INLINE: plain inline is preferred over __inline__
#1232: FILE: include/linux/upd4990a.h:87:
+static __inline__ void upd4990a_get_time(struct upd4990a_raw_data *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1233: FILE: include/linux/upd4990a.h:88:
+static __inline__ void upd4990a_get_time(struct upd4990a_raw_data *buf,
+					  int leave_register_hold)

CHECK:SPACING: No space is necessary after a cast
#1252: FILE: include/linux/upd4990a.h:107:
+		((u8 *) buf)[byte] = tmp;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1256: FILE: include/linux/upd4990a.h:111:
+	/* The uPD4990A users' manual says that we should issue `Register
+	   Hold' command after each data retrieval, or next `Time Read'

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1257: FILE: include/linux/upd4990a.h:112:
+	   command may not work correctly.  */

WARNING:INLINE: plain inline is preferred over __inline__
#1262: FILE: include/linux/upd4990a.h:117:
+static __inline__ void upd4990a_set_time(const struct upd4990a_raw_data *data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1263: FILE: include/linux/upd4990a.h:118:
+static __inline__ void upd4990a_set_time(const struct upd4990a_raw_data *data,
+					  int time_set_only)

CHECK:SPACING: No space is necessary after a cast
#1272: FILE: include/linux/upd4990a.h:127:
+		u8 tmp = ((const u8 *) data)[byte];

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000392772.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 39 errors, 76 warnings, 32 checks, 1230 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000392772.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
