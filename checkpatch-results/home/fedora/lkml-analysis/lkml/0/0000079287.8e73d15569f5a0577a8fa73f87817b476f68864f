WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#71: FILE: include/asm-i386/mach-default/mach_page.h:1:
+#ifndef __ASM_MACH_PAGE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: include/asm-i386/mach-xen/mach_page.h:1:
+#ifndef __ASM_MACH_PAGE_H

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#111: FILE: include/asm-i386/mach-xen/mach_page.h:34:
+	asm (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#118: FILE: include/asm-i386/mach-xen/mach_page.h:41:
+		: "=r" (pfn) : "m" (machine_to_phys_mapping[mfn]) );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#133: FILE: include/asm-i386/mach-xen/mach_page.h:56:
+typedef unsigned long long paddr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#134: FILE: include/asm-i386/mach-xen/mach_page.h:57:
+typedef unsigned long long maddr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#136: FILE: include/asm-i386/mach-xen/mach_page.h:59:
+typedef unsigned long paddr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#137: FILE: include/asm-i386/mach-xen/mach_page.h:60:
+typedef unsigned long maddr_t;

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_pte' - possible side-effects?
#143: FILE: include/asm-i386/mach-xen/mach_page.h:66:
+#define pte_mfn(_pte) (((_pte).pte_low >> PAGE_SHIFT) |\
+                       (((_pte).pte_high & 0xfff) << (32-PAGE_SHIFT)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: include/asm-i386/mach-xen/mach_page.h:67:
+                       (((_pte).pte_high & 0xfff) << (32-PAGE_SHIFT)))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: include/asm-i386/mach-xen/mach_page.h:67:
+                       (((_pte).pte_high & 0xfff) << (32-PAGE_SHIFT)))$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#144: FILE: include/asm-i386/mach-xen/mach_page.h:67:
+                       (((_pte).pte_high & 0xfff) << (32-PAGE_SHIFT)))
                                                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__va' - possible side-effects?
#147: FILE: include/asm-i386/mach-xen/mach_page.h:70:
+#define virt_to_ptep(__va)						\
+({									\
+	pgd_t *__pgd = pgd_offset_k((unsigned long)(__va));		\
+	pud_t *__pud = pud_offset(__pgd, (unsigned long)(__va));	\
+	pmd_t *__pmd = pmd_offset(__pud, (unsigned long)(__va));	\
+	pte_offset_kernel(__pmd, (unsigned long)(__va));		\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__va' - possible side-effects?
#155: FILE: include/asm-i386/mach-xen/mach_page.h:78:
+#define arbitrary_virt_to_machine(__va)					\
+({									\
+	maddr_t m = (maddr_t)pte_mfn(*virt_to_ptep(__va)) << PAGE_SHIFT;\
+	m | ((unsigned long)(__va) & (PAGE_SIZE-1));			\
+})

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#158: FILE: include/asm-i386/mach-xen/mach_page.h:81:
+	m | ((unsigned long)(__va) & (PAGE_SIZE-1));			\
 	                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'va' - possible side-effects?
#161: FILE: include/asm-i386/mach-xen/mach_page.h:84:
+#define make_lowmem_page_readonly(va, feature) do {		\
+	pte_t *pte;						\
+	int rc;							\
+								\
+	if (xen_feature(feature))				\
+		return;						\
+								\
+	pte = virt_to_ptep(va);					\
+	rc = HYPERVISOR_update_va_mapping(			\
+		(unsigned long)va, pte_wrprotect(*pte), 0);	\
+	BUG_ON(rc);						\
+} while (0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#161: FILE: include/asm-i386/mach-xen/mach_page.h:84:
+#define make_lowmem_page_readonly(va, feature) do {		\
+	pte_t *pte;						\
+	int rc;							\
+								\
+	if (xen_feature(feature))				\
+		return;						\
+								\
+	pte = virt_to_ptep(va);					\
+	rc = HYPERVISOR_update_va_mapping(			\
+		(unsigned long)va, pte_wrprotect(*pte), 0);	\
+	BUG_ON(rc);						\
+} while (0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#171: FILE: include/asm-i386/mach-xen/mach_page.h:94:
+	BUG_ON(rc);						\

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000079287.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 9 warnings, 7 checks, 118 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000079287.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
