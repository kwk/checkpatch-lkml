WARNING:TYPO_SPELLING: 'concensus' may be misspelled - perhaps 'consensus'?
#34: 
2.4 but if the concensus is that it's a new 2.5 feature that's fine.
               ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
> The I/O to dump the core would race other changes on the mm. The right fix

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#77: FILE: fs/binfmt_aout.c:34:
+static int aout_core_dump(long signr, struct pt_regs * regs,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#78: FILE: fs/binfmt_aout.c:35:
+static int aout_core_dump(long signr, struct pt_regs * regs,
+	struct file *file, struct mm_struct * mm);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#78: FILE: fs/binfmt_aout.c:35:
+	struct file *file, struct mm_struct * mm);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#87: FILE: fs/binfmt_aout.c:82:
+static int aout_core_dump(long signr, struct pt_regs * regs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: fs/binfmt_aout.c:83:
+static int aout_core_dump(long signr, struct pt_regs * regs,
+	struct file * file, struct mm_struct * mm)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#88: FILE: fs/binfmt_aout.c:83:
+	struct file * file, struct mm_struct * mm)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#88: FILE: fs/binfmt_aout.c:83:
+	struct file * file, struct mm_struct * mm)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: fs/binfmt_elf.c:59:
+static int elf_core_dump(long signr, struct pt_regs * regs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: fs/binfmt_elf.c:60:
+static int elf_core_dump(long signr, struct pt_regs * regs,
+	struct file * file, struct mm_struct * mm);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#105: FILE: fs/binfmt_elf.c:60:
+	struct file * file, struct mm_struct * mm);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#105: FILE: fs/binfmt_elf.c:60:
+	struct file * file, struct mm_struct * mm);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#114: FILE: fs/binfmt_elf.c:985:
+static int elf_core_dump(long signr, struct pt_regs * regs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: fs/binfmt_elf.c:986:
+static int elf_core_dump(long signr, struct pt_regs * regs,
+	struct file * file, struct mm_struct * mm)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#115: FILE: fs/binfmt_elf.c:986:
+	struct file * file, struct mm_struct * mm)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#115: FILE: fs/binfmt_elf.c:986:
+	struct file * file, struct mm_struct * mm)

ERROR:SPACING: space required before the open parenthesis '('
#133: FILE: fs/binfmt_elf.c:1163:
+	for(vma = mm->mmap; vma != NULL; vma = vma->vm_next) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "vma"
#133: FILE: fs/binfmt_elf.c:1163:
+	for(vma = mm->mmap; vma != NULL; vma = vma->vm_next) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#142: FILE: fs/binfmt_elf.c:1192:
+	for(vma = mm->mmap; vma != NULL; vma = vma->vm_next) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "vma"
#142: FILE: fs/binfmt_elf.c:1192:
+	for(vma = mm->mmap; vma != NULL; vma = vma->vm_next) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#160: FILE: fs/exec.c:921:
+	char corename[6+sizeof(current->comm)+10];
 	               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#160: FILE: fs/exec.c:921:
+	char corename[6+sizeof(current->comm)+10];
 	                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: fs/exec.c:942:
+ ^Iif (atomic_read(&current->mm->mm_users) != 1)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#178: FILE: fs/exec.c:942:
+ ^Iif (atomic_read(&current->mm->mm_users) != 1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: fs/exec.c:942:
+ ^Iif (atomic_read(&current->mm->mm_users) != 1)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: fs/exec.c:943:
+ ^I^Isprintf(&corename[4], ".%d", current->pid);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#179: FILE: fs/exec.c:943:
+ ^I^Isprintf(&corename[4], ".%d", current->pid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: fs/exec.c:943:
+ ^I^Isprintf(&corename[4], ".%d", current->pid);$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#193: FILE: fs/exec.c:965:
+	if ((mm = kmem_cache_alloc(mm_cachep, SLAB_KERNEL)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#228: FILE: include/linux/binfmts.h:44:
+	int (*core_dump)(long signr, struct pt_regs * regs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: include/linux/binfmts.h:45:
+	int (*core_dump)(long signr, struct pt_regs * regs,
+			struct file * file, struct mm_struct *mm);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#229: FILE: include/linux/binfmts.h:45:
+			struct file * file, struct mm_struct *mm);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#245: FILE: kernel/fork.c:125:
+int dup_mmap(struct mm_struct * mm)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#254: FILE: kernel/fork.c:200:
+struct mm_struct * mm_init(struct mm_struct * mm)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#254: FILE: kernel/fork.c:200:
+struct mm_struct * mm_init(struct mm_struct * mm)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000547615.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 6 warnings, 9 checks, 145 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000547615.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
