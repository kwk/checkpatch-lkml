WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
                                                                               

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#91: FILE: fs/block_dev.c:134:
+static int blkdev_direct_IO(int rw, struct file * filp, struct kiobuf * iobuf, unsigned long blocknr, int blocksize)
                                                   ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#91: FILE: fs/block_dev.c:134:
+static int blkdev_direct_IO(int rw, struct file * filp, struct kiobuf * iobuf, unsigned long blocknr, int blocksize)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#91: FILE: fs/block_dev.c:134:
+static int blkdev_direct_IO(int rw, struct file * filp, struct kiobuf * iobuf, unsigned long blocknr, int blocksize)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#91: FILE: fs/block_dev.c:134:
+static int blkdev_direct_IO(int rw, struct file * filp, struct kiobuf * iobuf, unsigned long blocknr, int blocksize)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#93: FILE: fs/block_dev.c:136:
+	struct inode * inode = filp->f_dentry->d_inode->i_mapping->host;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#105: FILE: fs/ext2/inode.c:595:
+static int ext2_direct_IO(int rw, struct file * filp, struct kiobuf * iobuf, unsigned long blocknr, int blocksize)
                                                 ^^^^

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#105: FILE: fs/ext2/inode.c:595:
+static int ext2_direct_IO(int rw, struct file * filp, struct kiobuf * iobuf, unsigned long blocknr, int blocksize)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#105: FILE: fs/ext2/inode.c:595:
 }
+static int ext2_direct_IO(int rw, struct file * filp, struct kiobuf * iobuf, unsigned long blocknr, int blocksize)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#105: FILE: fs/ext2/inode.c:595:
+static int ext2_direct_IO(int rw, struct file * filp, struct kiobuf * iobuf, unsigned long blocknr, int blocksize)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#105: FILE: fs/ext2/inode.c:595:
+static int ext2_direct_IO(int rw, struct file * filp, struct kiobuf * iobuf, unsigned long blocknr, int blocksize)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#107: FILE: fs/ext2/inode.c:597:
+	struct inode * inode = filp->f_dentry->d_inode->i_mapping->host;

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#139: FILE: fs/nfs/file.c:205:
+	direct_IO: nfs_direct_IO,
 	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#139: FILE: fs/nfs/file.c:205:
+	direct_IO: nfs_direct_IO,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#179: FILE: include/linux/fs.h:398:
+	int (*direct_IO)(int, struct file *, struct kiobuf *, unsigned long, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#179: FILE: include/linux/fs.h:398:
+	int (*direct_IO)(int, struct file *, struct kiobuf *, unsigned long, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiobuf *' should also have an identifier name
#179: FILE: include/linux/fs.h:398:
+	int (*direct_IO)(int, struct file *, struct kiobuf *, unsigned long, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#179: FILE: include/linux/fs.h:398:
+	int (*direct_IO)(int, struct file *, struct kiobuf *, unsigned long, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#179: FILE: include/linux/fs.h:398:
+	int (*direct_IO)(int, struct file *, struct kiobuf *, unsigned long, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#192: FILE: include/linux/nfs_fs.h:279:
+extern int  nfs_direct_IO(int, struct file *, struct kiobuf *, unsigned long, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#192: FILE: include/linux/nfs_fs.h:279:
+extern int  nfs_direct_IO(int, struct file *, struct kiobuf *, unsigned long, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#192: FILE: include/linux/nfs_fs.h:279:
+extern int  nfs_direct_IO(int, struct file *, struct kiobuf *, unsigned long, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiobuf *' should also have an identifier name
#192: FILE: include/linux/nfs_fs.h:279:
+extern int  nfs_direct_IO(int, struct file *, struct kiobuf *, unsigned long, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#192: FILE: include/linux/nfs_fs.h:279:
+extern int  nfs_direct_IO(int, struct file *, struct kiobuf *, unsigned long, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#192: FILE: include/linux/nfs_fs.h:279:
+extern int  nfs_direct_IO(int, struct file *, struct kiobuf *, unsigned long, int);

WARNING:INLINE: plain inline is preferred over __inline__
#207: FILE: include/linux/nfs_fs.h:315:
+static __inline__ int

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#251: FILE: mm/filemap.c:1610:
+		retval = mapping->a_ops->direct_IO(rw, filp, iobuf, (offset+progress) >> blocksize_bits, blocksize);
 		                                       ^^^^

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#251: FILE: mm/filemap.c:1610:
+		retval = mapping->a_ops->direct_IO(rw, filp, iobuf, (offset+progress) >> blocksize_bits, blocksize);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#251: FILE: mm/filemap.c:1610:
+		retval = mapping->a_ops->direct_IO(rw, filp, iobuf, (offset+progress) >> blocksize_bits, blocksize);
 		                                                           ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000358382.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 19 warnings, 3 checks, 169 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000358382.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
