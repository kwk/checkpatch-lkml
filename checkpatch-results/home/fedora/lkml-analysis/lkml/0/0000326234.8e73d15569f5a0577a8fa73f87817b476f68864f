WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
     > http://lists.freebsd.org/pipermail/freebsd-bugs/2003-September/003069.html

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#82: FILE: fs/lockd/svclock.c:117:
+		dprintk("lockd: check f=%p pd=%d %Ld-%Ld ty=%d cookie=%s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: fs/lockd/svclock.c:118:
+		dprintk("lockd: check f=%p pd=%d %Ld-%Ld ty=%d cookie=%s\n",
 				block->b_file, fl->fl_pid,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#95: FILE: fs/lockd/svclock.c:576:
+	NLMDBG_COOKIE_BUF

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: fs/lockd/svclock.c:579:
+^Idprintk("callback: looking for cookie %s \n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#100: FILE: fs/lockd/svclock.c:579:
+	dprintk("callback: looking for cookie %s \n", 

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#117: FILE: fs/lockd/xdr.c:58:
+	else if(len<=NLM_MAXCOOKIELEN)
 	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#117: FILE: fs/lockd/xdr.c:58:
+	else if(len<=NLM_MAXCOOKIELEN)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#117: FILE: fs/lockd/xdr.c:58:
 	}
+	else if(len<=NLM_MAXCOOKIELEN)

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#126: FILE: fs/lockd/xdr.c:67:
+			"lockd: bad cookie size %d (only cookies under %d bytes are supported.)\n", len,

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#127: FILE: fs/lockd/xdr.c:67:
NLM_MAXCOOKIELEN);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#145: FILE: fs/lockd/xdr.c:537:
+#define NLM_cookie_sz		1+QUADLEN(NLM_MAXCOOKIELEN)
                      		 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#145: FILE: fs/lockd/xdr.c:537:
+#define NLM_cookie_sz		1+QUADLEN(NLM_MAXCOOKIELEN)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#163: FILE: fs/lockd/xdr.c:657:
+			strcpy(buf-3, "...");
 			          ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#182: FILE: fs/lockd/xdr4.c:59:
+	else if(len<=NLM_MAXCOOKIELEN)
 	           ^

ERROR:SPACING: space required before the open parenthesis '('
#182: FILE: fs/lockd/xdr4.c:59:
+	else if(len<=NLM_MAXCOOKIELEN)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#182: FILE: fs/lockd/xdr4.c:59:
 	}
+	else if(len<=NLM_MAXCOOKIELEN)

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#191: FILE: fs/lockd/xdr4.c:68:
+			"lockd: bad cookie size %d (only cookies under %d bytes are supported.)\n", len,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#201: FILE: fs/lockd/xdr4.c:543:
+#define NLM4_cookie_sz		1+XDR_QUADLEN(NLM_MAXCOOKIELEN)
                       		 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#201: FILE: fs/lockd/xdr4.c:543:
+#define NLM4_cookie_sz		1+XDR_QUADLEN(NLM_MAXCOOKIELEN)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#218: FILE: include/linux/lockd/debug.h:57:
+extern const char *__nlmdbg_cookie2a(const struct nlm_cookie *, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct nlm_cookie *' should also have an identifier name
#218: FILE: include/linux/lockd/debug.h:57:
+extern const char *__nlmdbg_cookie2a(const struct nlm_cookie *, char *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#218: FILE: include/linux/lockd/debug.h:57:
+extern const char *__nlmdbg_cookie2a(const struct nlm_cookie *, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#218: FILE: include/linux/lockd/debug.h:57:
+extern const char *__nlmdbg_cookie2a(const struct nlm_cookie *, char *, int);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#219: FILE: include/linux/lockd/debug.h:58:
+#define NLMDBG_COOKIE_BUF   ^Ichar __nlmdbg_cookie_buf[2*NLM_MAXCOOKIELEN+1];$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#219: FILE: include/linux/lockd/debug.h:58:
+#define NLMDBG_COOKIE_BUF   	char __nlmdbg_cookie_buf[2*NLM_MAXCOOKIELEN+1];
                             	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#219: FILE: include/linux/lockd/debug.h:58:
+#define NLMDBG_COOKIE_BUF   	char __nlmdbg_cookie_buf[2*NLM_MAXCOOKIELEN+1];
                             	                                           ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#219: FILE: include/linux/lockd/debug.h:58:
+#define NLMDBG_COOKIE_BUF   	char __nlmdbg_cookie_buf[2*NLM_MAXCOOKIELEN+1];

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: include/linux/lockd/debug.h:60:
+    __nlmdbg_cookie2a(__nlmdbg_cookie_buf, sizeof(__nlmdbg_cookie_buf), (c))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#245: FILE: include/linux/lockd/xdr.h:43:
+#define NLM_MAXCOOKIELEN    ^I32$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000326234.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 13 warnings, 7 checks, 152 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000326234.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
