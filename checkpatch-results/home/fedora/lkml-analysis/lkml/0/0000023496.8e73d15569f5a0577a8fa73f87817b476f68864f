WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#47: FILE: drivers/amba/Kconfig:31:
+config ARM_AMBA_PL080_BUILTIN
+	bool "AMBA PrimeCell DMAC PL080 driver built in" if

Kconfig symbols should have a help text which fully describes
it.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#49: FILE: drivers/amba/Kconfig:32:
(ARCH_VERSATILE_PB || MACH_VERSATILE_AB) && ARM_AMBA_DMA

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: drivers/amba/Kconfig:43:
+^Idef_tristate n  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#86: FILE: drivers/amba/pl080.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#87: FILE: drivers/amba/pl080.c:2:
+ * drivers/amba/pl080.c - ARM PrimeCell DMA Controller PL080 driver

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#109: FILE: drivers/amba/pl080.c:24:
+#include <asm/io.h>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#137: FILE: drivers/amba/pl080.c:52:
+# define pl080_do_resume ^INULL$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#142: FILE: drivers/amba/pl080.c:57:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#143: FILE: drivers/amba/pl080.c:58:
+static int	pl080_request(dmach_t cnum, dma_t * cdata);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#144: FILE: drivers/amba/pl080.c:59:
+static void	pl080_free(dmach_t cnum, dma_t * cdata);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#145: FILE: drivers/amba/pl080.c:60:
+static void ^Ipl080_enable(dmach_t cnum, dma_t * cdata);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#145: FILE: drivers/amba/pl080.c:60:
+static void 	pl080_enable(dmach_t cnum, dma_t * cdata);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#146: FILE: drivers/amba/pl080.c:61:
+static void ^Ipl080_disable(dmach_t cnum, dma_t * cdata);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#146: FILE: drivers/amba/pl080.c:61:
+static void 	pl080_disable(dmach_t cnum, dma_t * cdata);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#147: FILE: drivers/amba/pl080.c:62:
+static int	pl080_residue(dmach_t cnum, dma_t * cdata);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#148: FILE: drivers/amba/pl080.c:63:
+static int	pl080_setspeed(dmach_t cnum, dma_t * cdata, int newspeed);

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#152: FILE: drivers/amba/pl080.c:67:
+	void __iomem *	base;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#158: FILE: drivers/amba/pl080.c:73:
+	struct dma_pool * pool;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#160: FILE: drivers/amba/pl080.c:75:
+	chanlli * chanllis;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#168: FILE: drivers/amba/pl080.c:83:
+static int pl080_request(dmach_t cnum, dma_t * cdata){

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#168: FILE: drivers/amba/pl080.c:83:
+static int pl080_request(dmach_t cnum, dma_t * cdata){

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#168: FILE: drivers/amba/pl080.c:83:
+static int pl080_request(dmach_t cnum, dma_t * cdata){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#172: FILE: drivers/amba/pl080.c:87:
+	if(try_module_get(pl080_driver.drv.owner)){

ERROR:SPACING: space required before the open parenthesis '('
#172: FILE: drivers/amba/pl080.c:87:
+	if(try_module_get(pl080_driver.drv.owner)){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#172: FILE: drivers/amba/pl080.c:87:
+	if(try_module_get(pl080_driver.drv.owner)){
+		retval = 0;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#179: FILE: drivers/amba/pl080.c:94:
+static void pl080_free(dmach_t chan_num, dma_t * cdata){

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#179: FILE: drivers/amba/pl080.c:94:
+static void pl080_free(dmach_t chan_num, dma_t * cdata){

ERROR:SPACING: space required before the open brace '{'
#179: FILE: drivers/amba/pl080.c:94:
+static void pl080_free(dmach_t chan_num, dma_t * cdata){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pl080.chanllis[chan_num].va_list'
#185: FILE: drivers/amba/pl080.c:100:
+	if((pl080.chanllis[chan_num].va_list) &&
(pl080.chanllis[chan_num].bus_list)){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#185: FILE: drivers/amba/pl080.c:100:
+	if((pl080.chanllis[chan_num].va_list) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: drivers/amba/pl080.c:101:
+	if((pl080.chanllis[chan_num].va_list) &&
+		dma_pool_free(pl080.pool, pl080.chanllis[chan_num].va_list,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: drivers/amba/pl080.c:101:
+	if((pl080.chanllis[chan_num].va_list) &&
pl080.chanllis[chan_num].bus_list);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: drivers/amba/pl080.c:102:
+		dma_pool_free(pl080.pool, pl080.chanllis[chan_num].va_list,
+		pl080.chanllis[chan_num].num_entries = 0;

ERROR:SPACING: space required before the open parenthesis '('
#197: FILE: drivers/amba/pl080.c:110:
+	for(i = 0; i < MAX_DMA_CHANNELS; i++)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#200: FILE: drivers/amba/pl080.c:113:
+	if(!active_count)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#200: FILE: drivers/amba/pl080.c:113:
+	if(!active_count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#220: FILE: drivers/amba/pl080.c:131:
+inline void pl080_enable(dmach_t cnum, dma_t * cdata){

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#220: FILE: drivers/amba/pl080.c:131:
+inline void pl080_enable(dmach_t cnum, dma_t * cdata){

ERROR:SPACING: space required before the open brace '{'
#220: FILE: drivers/amba/pl080.c:131:
+inline void pl080_enable(dmach_t cnum, dma_t * cdata){

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#221: FILE: drivers/amba/pl080.c:132:
+	void __iomem * cbase = pl080.base + PL080_OS_CHAN_BASE + (cnum *

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#223: FILE: drivers/amba/pl080.c:133:
+	volatile unsigned int r = 0;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxW)
#228: FILE: drivers/amba/pl080.c:138:
+	while((readl(pl080.base + PL080_OS_ENCHNS) & (1<< cnum)) &
 	                                               ^

ERROR:SPACING: space required before the open parenthesis '('
#228: FILE: drivers/amba/pl080.c:138:
+	while((readl(pl080.base + PL080_OS_ENCHNS) & (1<< cnum)) &

WARNING:MEMORY_BARRIER: memory barrier without comment
#232: FILE: drivers/amba/pl080.c:141:
+	mb();

ERROR:SPACING: space prohibited before that close parenthesis ')'
#233: FILE: drivers/amba/pl080.c:142:
+	r = readl(cbase + PL080_OS_CCFG );

WARNING:MEMORY_BARRIER: memory barrier without comment
#234: FILE: drivers/amba/pl080.c:143:
+	mb();

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#244: FILE: drivers/amba/pl080.c:151:
+ * ^Iremaining in the channel's FIFO.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#256: FILE: drivers/amba/pl080.c:161:
+inline void pl080_disable(dmach_t cnum, dma_t * cdata){

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#256: FILE: drivers/amba/pl080.c:161:
+inline void pl080_disable(dmach_t cnum, dma_t * cdata){

ERROR:SPACING: space required before the open brace '{'
#256: FILE: drivers/amba/pl080.c:161:
+inline void pl080_disable(dmach_t cnum, dma_t * cdata){

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#257: FILE: drivers/amba/pl080.c:162:
+	void __iomem * cbase = pl080.base + PL080_OS_CHAN_BASE + (cnum *

ERROR:SPACING: space prohibited before that close parenthesis ')'
#259: FILE: drivers/amba/pl080.c:163:
+	volatile unsigned int r = readl(cbase + PL080_OS_CCFG );

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#259: FILE: drivers/amba/pl080.c:163:
+	volatile unsigned int r = readl(cbase + PL080_OS_CCFG );

WARNING:MEMORY_BARRIER: memory barrier without comment
#262: FILE: drivers/amba/pl080.c:166:
+	mb();

ERROR:SPACING: space prohibited before that close parenthesis ')'
#263: FILE: drivers/amba/pl080.c:167:
+	writel(r | PL080_MASK_HALT, cbase + PL080_OS_CCFG );

WARNING:MEMORY_BARRIER: memory barrier without comment
#264: FILE: drivers/amba/pl080.c:168:
+	mb();

ERROR:SPACING: space required before the open brace '{'
#265: FILE: drivers/amba/pl080.c:169:
+	while(readl(cbase + PL080_OS_CCFG ) & PL080_MASK_ACTIVE){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#265: FILE: drivers/amba/pl080.c:169:
+	while(readl(cbase + PL080_OS_CCFG ) & PL080_MASK_ACTIVE){

ERROR:SPACING: space required before the open parenthesis '('
#265: FILE: drivers/amba/pl080.c:169:
+	while(readl(cbase + PL080_OS_CCFG ) & PL080_MASK_ACTIVE){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#265: FILE: drivers/amba/pl080.c:169:
+	while(readl(cbase + PL080_OS_CCFG ) & PL080_MASK_ACTIVE){
+		;
+	}

ERROR:SPACING: space prohibited before that close parenthesis ')'
#273: FILE: drivers/amba/pl080.c:176:
+	r = readl(cbase + PL080_OS_CCFG );

WARNING:MEMORY_BARRIER: memory barrier without comment
#274: FILE: drivers/amba/pl080.c:177:
+	mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#277: FILE: drivers/amba/pl080.c:179:
+	mb();

ERROR:SPACING: space required before the open brace '{'
#278: FILE: drivers/amba/pl080.c:180:
+	while(readl(cbase + PL080_OS_CCFG ) & PL080_MASK_CEN){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#278: FILE: drivers/amba/pl080.c:180:
+	while(readl(cbase + PL080_OS_CCFG ) & PL080_MASK_CEN){

ERROR:SPACING: space required before the open parenthesis '('
#278: FILE: drivers/amba/pl080.c:180:
+	while(readl(cbase + PL080_OS_CCFG ) & PL080_MASK_CEN){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#278: FILE: drivers/amba/pl080.c:180:
+	while(readl(cbase + PL080_OS_CCFG ) & PL080_MASK_CEN){
+		;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: drivers/amba/pl080.c:185:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: drivers/amba/pl080.c:188:
+ * ASSUME returns bytes $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#288: FILE: drivers/amba/pl080.c:190:
+static int pl080_residue(dmach_t cnum, dma_t * cdata){

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#288: FILE: drivers/amba/pl080.c:190:
+static int pl080_residue(dmach_t cnum, dma_t * cdata){

ERROR:SPACING: space required before the open brace '{'
#288: FILE: drivers/amba/pl080.c:190:
+static int pl080_residue(dmach_t cnum, dma_t * cdata){

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#289: FILE: drivers/amba/pl080.c:191:
+	void __iomem * cbase = pl080.base + PL080_OS_CHAN_BASE + (cnum *

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#291: FILE: drivers/amba/pl080.c:192:
+	volatile unsigned int r = 0;

WARNING:MEMORY_BARRIER: memory barrier without comment
#294: FILE: drivers/amba/pl080.c:195:
+	mb();

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#298: FILE: drivers/amba/pl080.c:198:
+	/* The number of source width transfers (AACI == 32 bits) completed
+	r = readl(cbase + PL080_OS_CCTL ) & PL080_MASK_TSFR_SIZE;

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#307: FILE: drivers/amba/pl080.c:207:
+static int pl080_setspeed(dmach_t cnum, dma_t * cdata, int newspeed){

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#307: FILE: drivers/amba/pl080.c:207:
+static int pl080_setspeed(dmach_t cnum, dma_t * cdata, int newspeed){

ERROR:SPACING: space required before the open brace '{'
#307: FILE: drivers/amba/pl080.c:207:
+static int pl080_setspeed(dmach_t cnum, dma_t * cdata, int newspeed){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: drivers/amba/pl080.c:212:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: drivers/amba/pl080.c:224:
+/* $

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#331: FILE: drivers/amba/pl080.c:230:
+	.reset_cycle		= pl080_reset_cycle ,
 	            		                    ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#332: FILE: drivers/amba/pl080.c:231:
+	.configure_chan		= pl080_configure_chan ,
 	               		                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#333: FILE: drivers/amba/pl080.c:232:
+^I.make_llis^I^I= pl080_make_llis^I , $

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#333: FILE: drivers/amba/pl080.c:232:
+	.make_llis		= pl080_make_llis	 , 
 	          		                 	 ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#342: FILE: drivers/amba/pl080.c:241:
+static int __devinit pl080_probe(struct amba_device *dev, void *id)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#344: FILE: drivers/amba/pl080.c:243:
+	int ret,i;
 	       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: drivers/amba/pl080.c:260:
+	pl080.chanllis = kmalloc(sizeof(chanlli) * MAX_DMA_CHANNELS,
+	if (!pl080.chanllis) {

ERROR:SPACING: space required before the open brace '{'
#367: FILE: drivers/amba/pl080.c:265:
+	for(i = 0; i < MAX_DMA_CHANNELS; i++){

ERROR:SPACING: space required before the open parenthesis '('
#367: FILE: drivers/amba/pl080.c:265:
+	for(i = 0; i < MAX_DMA_CHANNELS; i++){

ERROR:SPACING: space required before the open parenthesis '('
#373: FILE: drivers/amba/pl080.c:271:
+	if(!(pl080.pool = dma_pool_create(pl080_driver.drv.name, (struct

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#373: FILE: drivers/amba/pl080.c:271:
+	if(!(pl080.pool = dma_pool_create(pl080_driver.drv.name, (struct

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#376: FILE: drivers/amba/pl080.c:273:
+			PL080_MAX_LLIS_SIZE, PL080_ALIGN, PL080_ALLOC))){
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#384: FILE: drivers/amba/pl080.c:281:
+^I$

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#400: FILE: drivers/amba/pl080.c:297:
+static int __devexit pl080_remove(struct amba_device *dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#413: FILE: drivers/amba/pl080.c:310:
+int pl080_init_dma(dma_t * dma_chan, struct dma_ops * ops){

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#413: FILE: drivers/amba/pl080.c:310:
+int pl080_init_dma(dma_t * dma_chan, struct dma_ops * ops){

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#413: FILE: drivers/amba/pl080.c:310:
+int pl080_init_dma(dma_t * dma_chan, struct dma_ops * ops){

ERROR:SPACING: space required before the open brace '{'
#413: FILE: drivers/amba/pl080.c:310:
+int pl080_init_dma(dma_t * dma_chan, struct dma_ops * ops){

ERROR:SPACING: space required before the open brace '{'
#416: FILE: drivers/amba/pl080.c:313:
+	for(i = 0; i < MAX_DMA_CHANNELS; i++){

ERROR:SPACING: space required before the open parenthesis '('
#416: FILE: drivers/amba/pl080.c:313:
+	for(i = 0; i < MAX_DMA_CHANNELS; i++){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#416: FILE: drivers/amba/pl080.c:313:
+	for(i = 0; i < MAX_DMA_CHANNELS; i++){
+		dma_chan[i].dma_base = (unsigned int)pl080.base;
+	}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#419: FILE: drivers/amba/pl080.c:316:
+^Iops->request ^I= pl080_request;$

WARNING:SPACING: space prohibited before semicolon
#421: FILE: drivers/amba/pl080.c:318:
+	ops->enable	= pl080_enable ;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#422: FILE: drivers/amba/pl080.c:319:
+^Iops->disable ^I= pl080_disable;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#423: FILE: drivers/amba/pl080.c:320:
+^Iops->residue ^I= pl080_residue;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#424: FILE: drivers/amba/pl080.c:321:
+^Iops->setspeed ^I= pl080_setspeed;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#425: FILE: drivers/amba/pl080.c:322:
+^Iops->type ^I= pl080_type;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#426: FILE: drivers/amba/pl080.c:323:
+^I$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#441: FILE: drivers/amba/pl080.c:338:
+static void pl080_close_dma(void){

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#443: FILE: drivers/amba/pl080.c:340:
+^Ipl080_driver.dmac_ops->request ^I= NULL;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#443: FILE: drivers/amba/pl080.c:340:
+	unsigned long flags = claim_dma_lock();
+	pl080_driver.dmac_ops->request 	= NULL;

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#447: FILE: drivers/amba/pl080.c:344:
+static int __devexit pl080_remove(struct amba_device *dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#450: FILE: drivers/amba/pl080.c:347:
+	int retval = -EINVAL;
+	pl080_close_dma();

ERROR:SPACING: space required before the open brace '{'
#451: FILE: drivers/amba/pl080.c:348:
+	if(pl080.pool){

ERROR:SPACING: space required before the open parenthesis '('
#451: FILE: drivers/amba/pl080.c:348:
+	if(pl080.pool){

WARNING:NEEDLESS_IF: dma_pool_destroy(NULL) is safe and this check is probably not required
#452: FILE: drivers/amba/pl080.c:349:
+	if(pl080.pool){
+		dma_pool_destroy(pl080.pool);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#467: FILE: drivers/amba/pl080.c:364:
+^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#470: FILE: drivers/amba/pl080.c:367:
+}
+/*

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#493: FILE: drivers/amba/pl080.c:390:
+dma_addr_t pl080_make_llis(dmach_t chan_num, unsigned int address, unsigned
int length, unsigned int packet_size, pl080_lli * setting){
+
+	int i;
+	unsigned int num_llis = 0;
+	/*
+	 * Whether we increment the lli address to indicate the bus
+	 * for this transfer
+	 */
+	unsigned int bus_increment = setting->next;
+	pl080_lli * llis_bus = NULL;
+	pl080_lli * llis_va = NULL;
+
+	if(NULL != pl080.chanllis[chan_num].va_list){

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#503: FILE: drivers/amba/pl080.c:399:
+	pl080_lli * llis_bus = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#504: FILE: drivers/amba/pl080.c:400:
+	pl080_lli * llis_va = NULL;

ERROR:SPACING: space required before the open brace '{'
#506: FILE: drivers/amba/pl080.c:402:
+	if(NULL != pl080.chanllis[chan_num].va_list){

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#506: FILE: drivers/amba/pl080.c:402:
+	if(NULL != pl080.chanllis[chan_num].va_list){

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:SPACING: space required before the open parenthesis '('
#506: FILE: drivers/amba/pl080.c:402:
+	if(NULL != pl080.chanllis[chan_num].va_list){

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#512: FILE: drivers/amba/pl080.c:407:
+		dma_pool_free(pl080.pool, pl080.chanllis[chan_num].va_list,
+		pl080.chanllis[chan_num].num_entries = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#517: FILE: drivers/amba/pl080.c:412:
+ ^I * dma_chan[chan_num] holds the DMA buffer info$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#517: FILE: drivers/amba/pl080.c:412:
+ ^I * dma_chan[chan_num] holds the DMA buffer info$

ERROR:SPACING: space required before the open brace '{'
#523: FILE: drivers/amba/pl080.c:418:
+	if(PL080_MAX_LLIS_SIZE < num_llis * sizeof(pl080_lli)){

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#523: FILE: drivers/amba/pl080.c:418:
+	if(PL080_MAX_LLIS_SIZE < num_llis * sizeof(pl080_lli)){

ERROR:SPACING: space required before the open parenthesis '('
#523: FILE: drivers/amba/pl080.c:418:
+	if(PL080_MAX_LLIS_SIZE < num_llis * sizeof(pl080_lli)){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#524: FILE: drivers/amba/pl080.c:419:
+		printk(KERN_ERR "pl080.c::make_lli_aaci() - 0x%08x bytes

CHECK:CAMELCASE: Avoid CamelCase: <Failed>
#533: FILE: drivers/amba/pl080.c:425:
+		printk(KERN_ERR "pl080.c::make_lli_aaci() - Failed to get

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#540: FILE: drivers/amba/pl080.c:431:
+	llis_va	= (pl080_lli *) pl080.chanllis[chan_num].va_list;

CHECK:SPACING: No space is necessary after a cast
#541: FILE: drivers/amba/pl080.c:432:
+	llis_bus = (pl080_lli *) pl080.chanllis[chan_num].bus_list;

ERROR:SPACING: space required before the open brace '{'
#543: FILE: drivers/amba/pl080.c:434:
+	for(i = 0; i < num_llis - 1; i++){

ERROR:SPACING: space required before the open parenthesis '('
#543: FILE: drivers/amba/pl080.c:434:
+	for(i = 0; i < num_llis - 1; i++){

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: drivers/amba/pl080.c:436:
+ (i * packet_size));$

CHECK:SPACING: No space is necessary after a cast
#552: FILE: drivers/amba/pl080.c:443:
+		llis_va[i].next = (dma_addr_t)((unsigned int) &llis_bus[i +

CHECK:SPACING: No space is necessary after a cast
#559: FILE: drivers/amba/pl080.c:448:
+	llis_va[i].next = (dma_addr_t)((unsigned int) &llis_bus[0] +

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#575: FILE: drivers/amba/pl080.c:463:
+static int pl080_ignore_this_irq(dmach_t dma_chan){

ERROR:SPACING: space required before the open brace '{'
#575: FILE: drivers/amba/pl080.c:463:
+static int pl080_ignore_this_irq(dmach_t dma_chan){

WARNING:LINE_SPACING: Missing a blank line after declarations
#577: FILE: drivers/amba/pl080.c:465:
+	unsigned int r = readl(pl080.base + PL080_OS_ISR);
+	return !(r & 1 << dma_chan);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#583: FILE: drivers/amba/pl080.c:471:
+static unsigned int errCtr = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:CAMELCASE: Avoid CamelCase: <errCtr>
#583: FILE: drivers/amba/pl080.c:471:
+static unsigned int errCtr = 0;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#584: FILE: drivers/amba/pl080.c:472:
+static void pl080_pre_irq(dmach_t dma_chan){

ERROR:SPACING: space required before the open brace '{'
#584: FILE: drivers/amba/pl080.c:472:
+static void pl080_pre_irq(dmach_t dma_chan){

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#585: FILE: drivers/amba/pl080.c:473:
+static void pl080_pre_irq(dmach_t dma_chan){
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#587: FILE: drivers/amba/pl080.c:475:
+	unsigned int isr_err = readl(pl080.base + PL080_OS_ISR_ERR);
+	if((1 << dma_chan) & isr_err){

ERROR:SPACING: space required before the open brace '{'
#587: FILE: drivers/amba/pl080.c:475:
+	if((1 << dma_chan) & isr_err){

ERROR:SPACING: space required before the open parenthesis '('
#587: FILE: drivers/amba/pl080.c:475:
+	if((1 << dma_chan) & isr_err){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#587: FILE: drivers/amba/pl080.c:475:
+	if((1 << dma_chan) & isr_err){
+		errCtr++;
+	}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#591: FILE: drivers/amba/pl080.c:479:
+}
+/* Clear any interrupts on the correct channel */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#592: FILE: drivers/amba/pl080.c:480:
+static void pl080_post_irq(dmach_t dma_chan){

ERROR:SPACING: space required before the open brace '{'
#592: FILE: drivers/amba/pl080.c:480:
+static void pl080_post_irq(dmach_t dma_chan){

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#593: FILE: drivers/amba/pl080.c:481:
+static void pl080_post_irq(dmach_t dma_chan){
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#604: FILE: drivers/amba/pl080.c:492:
+void pl080_configure(void){

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#619: FILE: drivers/amba/pl080.c:507:
+void pl080_configure_chan(dmach_t chan_num, struct amba_dma_data * data){

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#619: FILE: drivers/amba/pl080.c:507:
+void pl080_configure_chan(dmach_t chan_num, struct amba_dma_data * data){

ERROR:SPACING: space required before the open brace '{'
#619: FILE: drivers/amba/pl080.c:507:
+void pl080_configure_chan(dmach_t chan_num, struct amba_dma_data * data){

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#645: FILE: drivers/amba/pl080.c:532:
+
+}

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#654: FILE: drivers/amba/pl080.c:541:
+void pl080_reset_cycle(dmach_t cnum){

ERROR:SPACING: space required before the open brace '{'
#654: FILE: drivers/amba/pl080.c:541:
+void pl080_reset_cycle(dmach_t cnum){

ERROR:POINTER_LOCATION: "(foo * )" should be "(foo *)"
#655: FILE: drivers/amba/pl080.c:542:
+	void __iomem * cbase = (void __iomem * )((unsigned int)pl080.base +

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#655: FILE: drivers/amba/pl080.c:542:
+	void __iomem * cbase = (void __iomem * )((unsigned int)pl080.base +

ERROR:SPACING: space prohibited before that close parenthesis ')'
#655: FILE: drivers/amba/pl080.c:542:
+	void __iomem * cbase = (void __iomem * )((unsigned int)pl080.base +

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#665: FILE: drivers/amba/pl080.c:550:
+void pl080_transfer_configure(dmach_t chan_num, pl080_lli *setting,
unsigned int ccfg){
+
+	unsigned int chan_base = (unsigned int)pl080.base +
PL080_OS_CHAN_BASE;
+	chan_base += chan_num * PL080_OS_CHAN;
+
+	writel(setting->start, chan_base + PL080_OS_CSRC);
+	writel(setting->dest , chan_base + PL080_OS_CDST);
+	writel(setting->next , chan_base + PL080_OS_CLLI);
+	writel(setting->cword, chan_base + PL080_OS_CCTL);
+	writel(ccfg , chan_base + PL080_OS_CCFG);
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#667: FILE: drivers/amba/pl080.c:551:
+void pl080_transfer_configure(dmach_t chan_num, pl080_lli *setting,
+

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#673: FILE: drivers/amba/pl080.c:556:
+	writel(setting->dest , chan_base + PL080_OS_CDST);
 	                     ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#674: FILE: drivers/amba/pl080.c:557:
+	writel(setting->next , chan_base + PL080_OS_CLLI);
 	                     ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#676: FILE: drivers/amba/pl080.c:559:
+	writel(ccfg , chan_base + PL080_OS_CCFG);
 	            ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#693: FILE: include/linux/amba/pl080.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#707: FILE: include/linux/amba/pl080.h:15:
+#define AMBA_PL080_H $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#709: FILE: include/linux/amba/pl080.h:17:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#712: FILE: include/linux/amba/pl080.h:20:
+ * ^ISource burst data from memory to DMAC$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#714: FILE: include/linux/amba/pl080.h:22:
+ *^I^IOn burst request from peripheral $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#730: FILE: include/linux/amba/pl080.h:38:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#737: FILE: include/linux/amba/pl080.h:44:
+#define PL080_MAX_LLIS_SIZE	0x2000	/* Size (bytes) of each buffer
+#define PL080_ALIGN		8	/* Alignment each buffer allocated

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#739: FILE: include/linux/amba/pl080.h:45:
+#define PL080_ALIGN		8	/* Alignment each buffer allocated
+#define PL080_ALLOC		0	/* Boundary not to cross 0 == N/A */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#740: FILE: include/linux/amba/pl080.h:46:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#740: FILE: include/linux/amba/pl080.h:46:
+ $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#761: FILE: include/linux/amba/pl080.h:66:
+ *^IWidth ^I^I^I- bits$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#784: FILE: include/linux/amba/pl080.h:88:
+#define PL080_FCMASK_M2P_DMA	0x00000800	/* Memory-to-peripheral DMA
+#define PL080_FCMASK_P2M_DMA	0x00001000	/* Peripheral-to-memory DMA

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#786: FILE: include/linux/amba/pl080.h:89:
+#define PL080_FCMASK_P2M_DMA	0x00001000	/* Peripheral-to-memory DMA
+#define PL080_FCMASK_P2P_DMA	0x00001800	/* Source

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#788: FILE: include/linux/amba/pl080.h:90:
+#define PL080_FCMASK_P2P_DMA	0x00001800	/* Source
+#define PL080_FCMASK_P2P_DST	0x00002000	/* Source

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#790: FILE: include/linux/amba/pl080.h:91:
+#define PL080_FCMASK_P2P_DST	0x00002000	/* Source
+#define PL080_FCMASK_M2P_PER	0x00002800	/* Memory-to-peripheral

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#792: FILE: include/linux/amba/pl080.h:92:
+#define PL080_FCMASK_M2P_PER	0x00002800	/* Memory-to-peripheral
+#define PL080_FCMASK_P2P_PER	0x00003000	/* Peripheral-to-memory

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#794: FILE: include/linux/amba/pl080.h:93:
+#define PL080_FCMASK_P2P_PER	0x00003000	/* Peripheral-to-memory
+#define PL080_FCMASK_P2P_SRC	0x00003800	/* Source

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#796: FILE: include/linux/amba/pl080.h:94:
+#define PL080_FCMASK_P2P_SRC	0x00003800	/* Source
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#800: FILE: include/linux/amba/pl080.h:97:
+	dma_addr_t bus_list;	/* the linked lli list bus     address for
+	void	*  va_list;	/* the linked lli list virtual address for

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#802: FILE: include/linux/amba/pl080.h:98:
+	void	*  va_list;	/* the linked lli list virtual address for
+	unsigned int num_entries; /* number of entries - might not be

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#804: FILE: include/linux/amba/pl080.h:99:
+	unsigned int num_entries; /* number of entries - might not be
+	unsigned int index_next; /* Index of next lli to load */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#810: FILE: include/linux/amba/pl080.h:105:
+typedef struct _lli{

WARNING:SPACING: missing space after struct definition
#810: FILE: include/linux/amba/pl080.h:105:
+typedef struct _lli{

WARNING:NEW_TYPEDEFS: do not add new typedefs
#820: FILE: include/linux/amba/pl080.h:115:
+typedef struct _periph_id_dma_channel_settings {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#829: FILE: include/linux/amba/pl080.h:124:
+extern chanlli * chanllis;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#831: FILE: include/linux/amba/pl080.h:126:
+int		pl080_init_dma		(dma_t * dma_chan, struct dma_ops *

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#831: FILE: include/linux/amba/pl080.h:126:
+int		pl080_init_dma		(dma_t * dma_chan, struct dma_ops *

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#833: FILE: include/linux/amba/pl080.h:127:
+void		pl080_reset_cycle	(dmach_t chan_num);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#834: FILE: include/linux/amba/pl080.h:128:
+dma_addr_t	pl080_make_llis		(dmach_t chan_num, unsigned int

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#837: FILE: include/linux/amba/pl080.h:129:
+void		pl080_configure_chan	(dmach_t chan_num, struct

WARNING:NEW_TYPEDEFS: do not add new typedefs
#842: FILE: include/linux/amba/pl080.h:132:
+typedef struct _pl080_extra_ops {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#843: FILE: include/linux/amba/pl080.h:133:
+^Ivoid ^I(*reset_cycle)(dmach_t cnum);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#844: FILE: include/linux/amba/pl080.h:134:
+^Ivoid ^I(*configure_chan)(dmach_t chan_num, struct amba_dma_data *$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#848: FILE: include/linux/amba/pl080.h:136:
+^Ivoid ^I(*transfer_configure)(dmach_t chan_num, pl080_lli *setting,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#848: FILE: include/linux/amba/pl080.h:136:
+	dma_addr_t (*make_llis)(dmach_t chan_num, unsigned int address,
+	void 	(*transfer_configure)(dmach_t chan_num, pl080_lli *setting,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#849: FILE: include/linux/amba/pl080.h:136:
+	dma_addr_t (*make_llis)(dmach_t chan_num, unsigned int address,
unsigned int ccfg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#850: FILE: include/linux/amba/pl080.h:137:
+	void 	(*transfer_configure)(dmach_t chan_num, pl080_lli *setting,
+} pl080_extra_ops;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#852: FILE: include/linux/amba/pl080.h:139:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#855: FILE: include/linux/amba/pl080.h:142:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#868: FILE: include/linux/module.h:384:
+extern struct module *try_find_module(const char *name);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#880: FILE: kernel/module.c:300:
+/* $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#880: FILE: kernel/module.c:300:
 }
+/* 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#883: FILE: kernel/module.c:303:
+ */ $

WARNING:LINE_SPACING: Missing a blank line after declarations
#887: FILE: kernel/module.c:307:
+	struct module *mod;
+	mutex_lock(&module_mutex);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000023496.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 113 errors, 72 warnings, 30 checks, 824 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000023496.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
