WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
  . sclp_add_request now returns an error code if a request couldn't be started

WARNING:REPEATED_WORD: Possible repeated word: 'and'
#154: FILE: drivers/s390/char/sclp.c:43:
+/* Data for read and and init requests. */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#183: FILE: drivers/s390/char/sclp.c:53:
+static volatile enum sclp_init_state_t {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#190: FILE: drivers/s390/char/sclp.c:60:
+static volatile enum sclp_running_state_t {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#196: FILE: drivers/s390/char/sclp.c:66:
+static volatile enum sclp_reading_state_t {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#202: FILE: drivers/s390/char/sclp.c:72:
+static volatile enum sclp_activation_state_t {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#210: FILE: drivers/s390/char/sclp.c:80:
+static volatile enum sclp_mask_state_t {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#267: FILE: drivers/s390/char/sclp.c:119:
+ * force restart of running request. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#296: FILE: drivers/s390/char/sclp.c:147:
+ * Called while sclp_lock is locked. */

CHECK:BRACES: braces {} should be used on all arms of this statement
#305: FILE: drivers/s390/char/sclp.c:156:
+	if (req->start_count <= SCLP_REQUEST_RETRY) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#308: FILE: drivers/s390/char/sclp.c:159:
+	} else

WARNING:TYPO_SPELLING: 'Sucessfully' may be misspelled - perhaps 'Successfully'?
#311: FILE: drivers/s390/char/sclp.c:162:
+		/* Sucessfully started request */
 		   ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#410: FILE: drivers/s390/char/sclp.c:237:
+EXPORT_SYMBOL(sclp_add_request);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#413: FILE: drivers/s390/char/sclp.c:240:
+ * if all events were dispatched, non-zero otherwise. */

CHECK:SPACING: No space is necessary after a cast
#437: FILE: drivers/s390/char/sclp.c:256:
+		evbuf = (struct evbuf_header *) ((addr_t) sccb + offset);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#461: FILE: drivers/s390/char/sclp.c:265:
+		if (reg && reg->receiver_fn) {
[...]
+		} else if (reg == NULL)
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reg"
#465: FILE: drivers/s390/char/sclp.c:269:
+		} else if (reg == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#466: FILE: drivers/s390/char/sclp.c:270:
+			rc = -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:SPACING: No space is necessary after a cast
#530: FILE: drivers/s390/char/sclp.c:283:
+	sccb = (struct sccb_header *) req->sccb;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: drivers/s390/char/sclp.c:285:
+	if (req->status == SCLP_REQ_DONE && (sccb->response_code == 0x20 ||
+	    sccb->response_code == 0x220))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#594: FILE: drivers/s390/char/sclp.c:312:
+ * NULL otherwise. Called while sclp_lock is locked. */

CHECK:SPACING: No space is necessary after a cast
#603: FILE: drivers/s390/char/sclp.c:321:
+		if (sccb == (u32) (addr_t) req->sccb)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#603: FILE: drivers/s390/char/sclp.c:321:
+		if (sccb == (u32) (addr_t) req->sccb)
+				return req;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#611: FILE: drivers/s390/char/sclp.c:329:
+ * request on queue. */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#670: FILE: drivers/s390/char/sclp.c:356:
+	    sclp_activation_state == sclp_activation_state_active ) {

CHECK:SPACING: No space is necessary after a cast
#708: FILE: drivers/s390/char/sclp.c:380:
+	return (u64) (jiffies / HZ) << 32;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#712: FILE: drivers/s390/char/sclp.c:384:
+ * is running, no timers are served on the calling CPU. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#722: FILE: drivers/s390/char/sclp.c:393:
+	 * mechanism */

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#778: FILE: drivers/s390/char/sclp.c:428:
+EXPORT_SYMBOL(sclp_sync_wait);

CHECK:BRACES: braces {} should be used on all arms of this statement
#810: FILE: drivers/s390/char/sclp.c:447:
+			if (reg->sclp_receive_mask != receive_mask ||
[...]
+			} else
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#815: FILE: drivers/s390/char/sclp.c:452:
+				break;
+			} else

CHECK:BRACES: Unbalanced braces around else statement
#815: FILE: drivers/s390/char/sclp.c:452:
+			} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#910: FILE: drivers/s390/char/sclp.c:501:
+ * Called while sclp_lock is locked. */

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#996: FILE: drivers/s390/char/sclp.c:550:
+EXPORT_SYMBOL(sclp_register);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1016: FILE: drivers/s390/char/sclp.c:564:
+EXPORT_SYMBOL(sclp_unregister);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1021: FILE: drivers/s390/char/sclp.c:567:
+ * remaining event buffers. */

CHECK:SPACING: No space is necessary after a cast
#1046: FILE: drivers/s390/char/sclp.c:575:
+	evbuf = (struct evbuf_header *) (sccb + 1);

CHECK:SPACING: No space is necessary after a cast
#1053: FILE: drivers/s390/char/sclp.c:582:
+			memcpy(evbuf, (void *) ((addr_t) evbuf + evbuf->length),

CHECK:SPACING: No space is necessary after a cast
#1058: FILE: drivers/s390/char/sclp.c:587:
+					((addr_t) evbuf + evbuf->length);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1064: FILE: drivers/s390/char/sclp.c:593:
+EXPORT_SYMBOL(sclp_remove_processed);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1136: FILE: drivers/s390/char/sclp.c:630:
+ * success, non-zero otherwise. */

CHECK:SPACING: No space is necessary after a cast
#1141: FILE: drivers/s390/char/sclp.c:635:
+	struct init_sccb *sccb = (struct init_sccb *) sclp_init_sccb;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1160: FILE: drivers/s390/char/sclp.c:654:
+	if (calculate)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1162: FILE: drivers/s390/char/sclp.c:656:
+	else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1252: FILE: drivers/s390/char/sclp.c:701:
+ * otherwise. */

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1285: FILE: drivers/s390/char/sclp.c:726:
+EXPORT_SYMBOL(sclp_deactivate);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1294: FILE: drivers/s390/char/sclp.c:730:
+ * success, non-zero otherwise. */

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1342: FILE: drivers/s390/char/sclp.c:755:
+EXPORT_SYMBOL(sclp_reactivate);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1351: FILE: drivers/s390/char/sclp.c:758:
+ * request state to done. */

CHECK:SPACING: No space is necessary after a cast
#1369: FILE: drivers/s390/char/sclp.c:768:
+	if (finished_sccb != (u32) (addr_t) sclp_init_sccb) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1370: FILE: drivers/s390/char/sclp.c:769:
+		printk(KERN_WARNING SCLP_HEADER "unsolicited interrupt "

WARNING:SPLIT_STRING: quoted string split across lines
#1371: FILE: drivers/s390/char/sclp.c:770:
+		printk(KERN_WARNING SCLP_HEADER "unsolicited interrupt "
+		       "for buffer at 0x%x\n", finished_sccb);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1445: FILE: drivers/s390/char/sclp.c:797:
+ * Return non-zero otherwise. */

CHECK:SPACING: No space is necessary after a cast
#1465: FILE: drivers/s390/char/sclp.c:816:
+		sccb = (struct init_sccb *) sclp_init_req.sccb;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1475: FILE: drivers/s390/char/sclp.c:826:
+		 * with IRQs enabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1480: FILE: drivers/s390/char/sclp.c:831:
+		 * with IRQs enabled. */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1481: FILE: drivers/s390/char/sclp.c:832:
+		ctl_clear_bit(0,9);
 		               ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1484: FILE: drivers/s390/char/sclp.c:835:
+		if (sclp_init_req.status == SCLP_REQ_DONE &&
[...]
+		} else
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1488: FILE: drivers/s390/char/sclp.c:839:
+			break;
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#1488: FILE: drivers/s390/char/sclp.c:839:
+		} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1500: FILE: drivers/s390/char/sclp.c:849:
+ * events from interfering with rebooted system. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1519: FILE: drivers/s390/char/sclp.c:862:
+ * otherwise. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1588: FILE: drivers/s390/char/sclp.c:911:
+	 * IRQs enabled. */

CHECK:SPACING: No space is necessary after a cast
#1633: FILE: drivers/s390/char/sclp_con.c:60:
+		list_add_tail((struct list_head *) page, &sclp_con_pages);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1674: FILE: drivers/s390/char/sclp_cpi.c:199:
+		printk(KERN_WARNING "cpi: could not register to hardware "

WARNING:SPLIT_STRING: quoted string split across lines
#1675: FILE: drivers/s390/char/sclp_cpi.c:200:
+		printk(KERN_WARNING "cpi: could not register to hardware "
+		       "console.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1680: FILE: drivers/s390/char/sclp_cpi.c:204:
+		printk(KERN_WARNING "cpi: no control program identification "

WARNING:SPLIT_STRING: quoted string split across lines
#1681: FILE: drivers/s390/char/sclp_cpi.c:205:
+		printk(KERN_WARNING "cpi: no control program identification "
+		       "support\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1689: FILE: drivers/s390/char/sclp_cpi.c:212:
+		printk(KERN_WARNING "cpi: couldn't allocate request\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1700: FILE: drivers/s390/char/sclp_cpi.c:223:
+		printk(KERN_WARNING "cpi: could not start request\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1711: FILE: drivers/s390/char/sclp_cpi.c:233:
+		printk(KERN_WARNING "cpi: failed with response code 0x%x\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1747: FILE: drivers/s390/char/sclp_quiesce.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1748: FILE: drivers/s390/char/sclp_quiesce.c:2:
+ *  drivers/s390/char/sclp_quiesce.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#1762: FILE: drivers/s390/char/sclp_quiesce.c:16:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1768: FILE: drivers/s390/char/sclp_quiesce.c:22:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1773: FILE: drivers/s390/char/sclp_quiesce.c:27:
+ * to indicate completion. */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1775: FILE: drivers/s390/char/sclp_quiesce.c:29:
+do_load_quiesce_psw(void * __unused)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1786: FILE: drivers/s390/char/sclp_quiesce.c:40:
+	while (i < NR_CPUS) {

CHECK:SPACING: No space is necessary after a cast
#1836: FILE: drivers/s390/char/sclp_quiesce.c:90:
+	_machine_restart = (void *) do_machine_quiesce;

CHECK:CAMELCASE: Avoid CamelCase: <EvTyp_SigQuiesce_Mask>
#1843: FILE: drivers/s390/char/sclp_quiesce.c:97:
+	.receive_mask = EvTyp_SigQuiesce_Mask,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1855: FILE: drivers/s390/char/sclp_quiesce.c:109:
+		printk(KERN_WARNING "sclp: could not register quiesce handler "

WARNING:SPLIT_STRING: quoted string split across lines
#1856: FILE: drivers/s390/char/sclp_quiesce.c:110:
+		printk(KERN_WARNING "sclp: could not register quiesce handler "
+		       "(rc=%d)\n", rc);

CHECK:BRACES: Unbalanced braces around else statement
#1911: FILE: drivers/s390/char/sclp_rw.c:408:
+		} else

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1977: FILE: drivers/s390/char/sclp_rw.c:463:
+		return -ENOSYS;

ERROR:SPACING: space required after that ',' (ctx:OxV)
#2011: FILE: drivers/s390/char/sclp_rw.h:91:
+int sclp_emit_buffer(struct sclp_buffer *,void (*)(struct sclp_buffer *,int));
                                          ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#2011: FILE: drivers/s390/char/sclp_rw.h:91:
+int sclp_emit_buffer(struct sclp_buffer *,void (*)(struct sclp_buffer *,int));
                                                                        ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sclp_buffer *' should also have an identifier name
#2011: FILE: drivers/s390/char/sclp_rw.h:91:
+int sclp_emit_buffer(struct sclp_buffer *,void (*)(struct sclp_buffer *,int));

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:SPACING: No space is necessary after a cast
#2047: FILE: drivers/s390/char/sclp_tty.c:266:
+		list_add_tail((struct list_head *) page, &sclp_tty_pages);

CHECK:SPACING: No space is necessary after a cast
#2129: FILE: drivers/s390/char/sclp_vt220.c:127:
+		list_add_tail((struct list_head *) page, &sclp_vt220_empty);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request"
#2137: FILE: drivers/s390/char/sclp_vt220.c:135:
+	if (request == NULL && sclp_vt220_flush_later)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000220518.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 56 warnings, 29 checks, 2099 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000220518.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
