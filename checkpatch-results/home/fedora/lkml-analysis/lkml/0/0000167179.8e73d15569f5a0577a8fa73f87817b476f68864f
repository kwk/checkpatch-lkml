WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#49: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#53: FILE: include/linux/ntp.h:1:
+/*  linux/include/linux/ntp.h

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#53: FILE: include/linux/ntp.h:1:
+/*  linux/include/linux/ntp.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#66: FILE: include/linux/ntp.h:14:
+int ntp_adjtimex(struct timex*);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct timex*' should also have an identifier name
#66: FILE: include/linux/ntp.h:14:
+int ntp_adjtimex(struct timex*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#141: FILE: kernel/ntp.c:1:
+/********************************************************************

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#142: FILE: kernel/ntp.c:2:
+* linux/kernel/ntp.c

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#142: FILE: kernel/ntp.c:2:
+/********************************************************************
+* linux/kernel/ntp.c

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#160: FILE: kernel/ntp.c:20:
+* along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#161: FILE: kernel/ntp.c:21:
+* Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#189: FILE: kernel/ntp.c:49:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#206: FILE: kernel/ntp.c:66:
+int tickadj = 500/HZ ? : 1;		/* microsecs */
                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#208: FILE: kernel/ntp.c:68:
+
+

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#222: FILE: kernel/ntp.c:82:
+long time_freq = (((NSEC_PER_SEC + HZ/2) % HZ - HZ/2) << SHIFT_USEC) / NSEC_PER_USEC;
                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#222: FILE: kernel/ntp.c:82:
+long time_freq = (((NSEC_PER_SEC + HZ/2) % HZ - HZ/2) << SHIFT_USEC) / NSEC_PER_USEC;
                                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: kernel/ntp.c:83:
+                                        /* frequency offset (scaled ppm) */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space prohibited after that open parenthesis '('
#233: FILE: kernel/ntp.c:93:
+	if ( (time_adjust_step = time_adjust) != 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#233: FILE: kernel/ntp.c:93:
+	if ( (time_adjust_step = time_adjust) != 0 ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#233: FILE: kernel/ntp.c:93:
+	if ( (time_adjust_step = time_adjust) != 0 ) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#260: FILE: kernel/ntp.c:120:
+		long ltemp = -time_phase >> (SHIFT_SCALE - 10);
+		time_phase += ltemp << (SHIFT_SCALE - 10);

WARNING:LINE_SPACING: Missing a blank line after declarations
#264: FILE: kernel/ntp.c:124:
+		long ltemp = time_phase >> (SHIFT_SCALE - 10);
+		time_phase -= ltemp << (SHIFT_SCALE - 10);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#277: FILE: kernel/ntp.c:137:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#293: FILE: kernel/ntp.c:153:
+	if ( time_maxerror > NTP_PHASE_LIMIT ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#293: FILE: kernel/ntp.c:153:
+	if ( time_maxerror > NTP_PHASE_LIMIT ) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#308: FILE: kernel/ntp.c:168:
+	switch (time_state) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#326: FILE: kernel/ntp.c:186:
+			printk(KERN_NOTICE "Clock: inserting leap second 23:59:60 UTC\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#338: FILE: kernel/ntp.c:198:
+			printk(KERN_NOTICE "Clock: deleting leap second 23:59:59 UTC\n");

ERROR:SPACING: space prohibited after that '-' (ctx:WxW)
#435: FILE: kernel/ntp.c:295:
+		if (txc->offset <= - MAXPHASE || txc->offset >= MAXPHASE )
 		                   ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#435: FILE: kernel/ntp.c:295:
+		if (txc->offset <= - MAXPHASE || txc->offset >= MAXPHASE )

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#440: FILE: kernel/ntp.c:300:
+		if (txc->tick <  900000/USER_HZ ||
 		                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: kernel/ntp.c:301:
+		if (txc->tick <  900000/USER_HZ ||
+				txc->tick > 1100000/USER_HZ)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#441: FILE: kernel/ntp.c:301:
+				txc->tick > 1100000/USER_HZ)
 				                   ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#450: FILE: kernel/ntp.c:310:
+#if 0	/* STA_CLOCKERR is never set yet */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#470: FILE: kernel/ntp.c:330:
+			if (txc->maxerror < 0
+					|| txc->maxerror >= NTP_PHASE_LIMIT) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#479: FILE: kernel/ntp.c:339:
+			if (txc->esterror < 0
+					|| txc->esterror >= NTP_PHASE_LIMIT) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#497: FILE: kernel/ntp.c:357:
+				if ((time_next_adjust = txc->offset) == 0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#499: FILE: kernel/ntp.c:359:
+			} else if ( time_status & (STA_PLL | STA_PPSTIME) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#499: FILE: kernel/ntp.c:359:
+			} else if ( time_status & (STA_PLL | STA_PPSTIME) ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: kernel/ntp.c:363:
+^I^I^I            pps_offset : txc->offset;$

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#533: FILE: kernel/ntp.c:393:
+						if (ltemp < 0)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#535: FILE: kernel/ntp.c:395:
+						else

CHECK:BRACES: Unbalanced braces around else statement
#537: FILE: kernel/ntp.c:397:
+					} else /* calibration interval too short (p. 12) */

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#542: FILE: kernel/ntp.c:402:
+						if (ltemp < 0)

WARNING:TABSTOP: Statements should start on a tabstop
#546: FILE: kernel/ntp.c:406:
+					    else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (44, 44)
#546: FILE: kernel/ntp.c:406:
+					    else
+				    	    time_freq += ltemp >> (time_constant +

ERROR:CODE_INDENT: code indent should use tabs where possible
#547: FILE: kernel/ntp.c:407:
+^I^I^I^I    ^I    time_freq += ltemp >> (time_constant +$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#547: FILE: kernel/ntp.c:407:
+^I^I^I^I    ^I    time_freq += ltemp >> (time_constant +$

CHECK:BRACES: Unbalanced braces around else statement
#550: FILE: kernel/ntp.c:410:
+					} else /* calibration interval too long (p. 12) */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#568: FILE: kernel/ntp.c:428:
+	if ((time_status & (STA_UNSYNC|STA_CLOCKERR)) != 0
[...]
+			result = TIME_ERROR;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#568: FILE: kernel/ntp.c:428:
+	if ((time_status & (STA_UNSYNC|STA_CLOCKERR)) != 0
 	                              ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#569: FILE: kernel/ntp.c:429:
+	if ((time_status & (STA_UNSYNC|STA_CLOCKERR)) != 0
+		|| ((time_status & (STA_PPSFREQ|STA_PPSTIME)) != 0

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#569: FILE: kernel/ntp.c:429:
+		|| ((time_status & (STA_PPSFREQ|STA_PPSTIME)) != 0
 		                               ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#570: FILE: kernel/ntp.c:430:
+		|| ((time_status & (STA_PPSFREQ|STA_PPSTIME)) != 0
+		&& (time_status & STA_PPSSIGNAL) == 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#572: FILE: kernel/ntp.c:432:
+		/* p. 24, (b) */
+		|| ((time_status & (STA_PPSTIME|STA_PPSJITTER))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#572: FILE: kernel/ntp.c:432:
+		|| ((time_status & (STA_PPSTIME|STA_PPSJITTER))
 		                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#573: FILE: kernel/ntp.c:433:
+		== (STA_PPSTIME|STA_PPSJITTER))
 		               ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#575: FILE: kernel/ntp.c:435:
+		/* p. 24, (c) */
+		|| ((time_status & STA_PPSFREQ) != 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#576: FILE: kernel/ntp.c:436:
+		|| ((time_status & STA_PPSFREQ) != 0
+		&& (time_status & (STA_PPSWANDER|STA_PPSERROR)) != 0))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#576: FILE: kernel/ntp.c:436:
+		&& (time_status & (STA_PPSWANDER|STA_PPSERROR)) != 0))
 		                                ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#580: FILE: kernel/ntp.c:440:
+	if ((txc->modes & ADJ_OFFSET_SINGLESHOT) == ADJ_OFFSET_SINGLESHOT)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#582: FILE: kernel/ntp.c:442:
+	else {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000167179.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 19 warnings, 26 checks, 1033 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000167179.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
