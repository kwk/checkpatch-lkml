WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
diff -ur -x .dep* -x .hdep* -x *.[oas] -x *~ -x #* -x *CVS* -x *.orig -x *.rej -x *.old -x .menu* -x asm -x local.h -x System.map -x autoconf.h -x compile.h -x version.h -x .version -x defkeymap.c -x uni_hash.tbl -x zImage -x vmlinux -x vmlinuz -x TAGS -x bootsect -x *RCS* -x conmakehash -x map -x build -x build -x configure -x *target* -x *.flags -x *.bak linux-ac.clean/CREDITS linux-ac/CREDITS

WARNING:TYPO_SPELLING: 'possibilty' may be misspelled - perhaps 'possibility'?
#78: FILE: Documentation/Configure.help:117:
+  Enable the possibilty of suspendig machine. It doesn't need APM.
              ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: Documentation/Configure.help:134:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#113: FILE: MAINTAINERS:1472:
+P:	Gabor Kuti
+M:	seasons@falcon.sch.bme.hu

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'S:' before 'W:'
#117: FILE: MAINTAINERS:1476:
+W:	http://falcon.sch.bme.hu/~seasons/linux
+S:	Maintained

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#242: FILE: drivers/acpi/ospm/system/sm.c:150:
+	system->states[4] = TRUE;;

WARNING:TYPO_SPELLING: 'explicitely' may be misspelled - perhaps 'explicitly'?
#267: FILE: drivers/acpi/ospm/system/sm_osl.c:692:
+		   specs. That explicitely says: jumping from other
 		               ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#267: FILE: drivers/acpi/ospm/system/sm_osl.c:692:
+		/* That && trick is *not going to work*. Read gcc
+		   specs. That explicitely says: jumping from other

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: drivers/acpi/ospm/system/sm_osl.c:693:
+^I^I   function is *not allowed*. */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#268: FILE: drivers/acpi/ospm/system/sm_osl.c:693:
+		   function is *not allowed*. */ 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bh->b_rdev != suspend_device'
#289: FILE: drivers/block/ll_rw_blk.c:1031:
+	if (suspend_device && (bh->b_rdev != suspend_device))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#337: FILE: drivers/char/sysrq.c:322:
+static void sysrq_handle_swsusp(int key, struct pt_regs *pt_regs,
+		struct kbd_struct *kbd, struct tty_struct *tty) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: drivers/char/sysrq.c:323:
+static void sysrq_handle_swsusp(int key, struct pt_regs *pt_regs,
+		struct kbd_struct *kbd, struct tty_struct *tty) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: drivers/char/sysrq.c:324:
+        if(!software_suspend_enabled) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: drivers/char/sysrq.c:324:
+        if(!software_suspend_enabled) {$

ERROR:SPACING: space required before the open parenthesis '('
#339: FILE: drivers/char/sysrq.c:324:
+        if(!software_suspend_enabled) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#340: FILE: drivers/char/sysrq.c:325:
+		printk("Software Suspend is not possible now\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#345: FILE: drivers/char/sysrq.c:330:
+}
+static struct sysrq_key_op sysrq_swsusp_op = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#346: FILE: drivers/char/sysrq.c:331:
+	handler:	sysrq_handle_swsusp,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#347: FILE: drivers/char/sysrq.c:332:
+	help_msg:	"suspenD",
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#347: FILE: drivers/char/sysrq.c:332:
+	help_msg:	"suspenD",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#348: FILE: drivers/char/sysrq.c:333:
+	action_msg:	"Software suspend\n",
 	          ^

WARNING:INDENTED_LABEL: labels should not be indented
#348: FILE: drivers/char/sysrq.c:333:
+	action_msg:	"Software suspend\n",

WARNING:TYPO_SPELLING: 'accross' may be misspelled - perhaps 'across'?
#421: FILE: drivers/ide/ide-disk.c:1525:
+	panic("Attempted to corrupt something: ide operation was pending accross suspend/resume.\n");
 	                                                                 ^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#427: FILE: drivers/ide/ide-disk.c:1531:
+	int i;
+	for (i=0; i<MAX_HWIFS; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#427: FILE: drivers/ide/ide-disk.c:1531:
+	for (i=0; i<MAX_HWIFS; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#427: FILE: drivers/ide/ide-disk.c:1531:
+	for (i=0; i<MAX_HWIFS; i++) {
 	           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#429: FILE: drivers/ide/ide-disk.c:1533:
+		struct hwgroup_s *hwgroup = ide_hwifs[i].hwgroup;
+		if (!hwgroup) continue;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#429: FILE: drivers/ide/ide-disk.c:1533:
+		if (!hwgroup) continue;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hwgroup->handler'
#430: FILE: drivers/ide/ide-disk.c:1534:
+		if ((hwgroup->handler) && (hwgroup->handler != panic_box))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hwgroup->handler != panic_box'
#430: FILE: drivers/ide/ide-disk.c:1534:
+		if ((hwgroup->handler) && (hwgroup->handler != panic_box))

WARNING:LINE_SPACING: Missing a blank line after declarations
#439: FILE: drivers/ide/ide-disk.c:1543:
+	int i;
+	printk("ide_disk_suspend()\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#439: FILE: drivers/ide/ide-disk.c:1543:
+	printk("ide_disk_suspend()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ide_disk_suspend', this function's name, in a string
#439: FILE: drivers/ide/ide-disk.c:1543:
+	printk("ide_disk_suspend()\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#441: FILE: drivers/ide/ide-disk.c:1545:
+		printk("*");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#444: FILE: drivers/ide/ide-disk.c:1548:
+	for (i=0; i<MAX_HWIFS; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#444: FILE: drivers/ide/ide-disk.c:1548:
+	for (i=0; i<MAX_HWIFS; i++) {
 	           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#447: FILE: drivers/ide/ide-disk.c:1551:
+		if (!hwgroup) continue;

WARNING:LINE_SPACING: Missing a blank line after declarations
#461: FILE: drivers/ide/ide-disk.c:1565:
+	int i;
+	printk("ide_disk_unsuspend()\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#461: FILE: drivers/ide/ide-disk.c:1565:
+	printk("ide_disk_unsuspend()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ide_disk_unsuspend', this function's name, in a string
#461: FILE: drivers/ide/ide-disk.c:1565:
+	printk("ide_disk_unsuspend()\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#462: FILE: drivers/ide/ide-disk.c:1566:
+	for (i=0; i<MAX_HWIFS; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#462: FILE: drivers/ide/ide-disk.c:1566:
+	for (i=0; i<MAX_HWIFS; i++) {
 	           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#465: FILE: drivers/ide/ide-disk.c:1569:
+		if (!hwgroup) continue;

WARNING:LINE_SPACING: Missing a blank line after declarations
#475: FILE: drivers/ide/ide-disk.c:1579:
+	int i;
+	printk("ide_disk_resume()\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#475: FILE: drivers/ide/ide-disk.c:1579:
+	printk("ide_disk_resume()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ide_disk_resume', this function's name, in a string
#475: FILE: drivers/ide/ide-disk.c:1579:
+	printk("ide_disk_resume()\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#476: FILE: drivers/ide/ide-disk.c:1580:
+	for (i=0; i<MAX_HWIFS; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#476: FILE: drivers/ide/ide-disk.c:1580:
+	for (i=0; i<MAX_HWIFS; i++) {
 	           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#479: FILE: drivers/ide/ide-disk.c:1583:
+		if (!hwgroup) continue;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#531: FILE: drivers/net/pcnet32.c:1180:
+^I^I^Iif (! lp->dxsuflo) $

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#531: FILE: drivers/net/pcnet32.c:1180:
+			if (! lp->dxsuflo) 
 			    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#549: FILE: drivers/net/pcnet32.c:1716:
 
+

WARNING:LONG_LINE_COMMENT: line length of 119 exceeds 100 columns
#556: FILE: drivers/net/pcnet32.c:1722:
+ *  compile-command: "gcc -D__KERNEL__ -I/usr/src/linux/include/linux -Wall -Wstrict-prototypes -O2 -m486 -c pcnet32.c"

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#664: FILE: fs/jbd/journal.c:252:
+		if (current->flags & PF_FREEZE) { /* The simpler the better. Flushing journal isn't a

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#665: FILE: fs/jbd/journal.c:253:
+		if (current->flags & PF_FREEZE) { /* The simpler the better. Flushing journal isn't a
+						     good idea, because that depends on threads that

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#666: FILE: fs/jbd/journal.c:254:
+						     may be already stopped. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#669: FILE: fs/jbd/journal.c:257:
+^I^I^Ijbd_debug(1, "Resuming kjournald\n");^I^I^I^I^I^I$

CHECK:BRACES: Unbalanced braces around else statement
#670: FILE: fs/jbd/journal.c:258:
+		} else		/* we assume on resume that commits are already there,

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#671: FILE: fs/jbd/journal.c:259:
+		} else		/* we assume on resume that commits are already there,
+				   so we don't sleep */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#671: FILE: fs/jbd/journal.c:259:
+				   so we don't sleep */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#683: FILE: fs/reiserfs/journal.c:61:
+#include <linux/suspend.h> $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: fs/reiserfs/journal.c:1876:
+  current->flags |= PF_KERNTHREAD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: fs/reiserfs/journal.c:1891:
+    if (current->flags & PF_FREEZE) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#701: FILE: fs/reiserfs/journal.c:1891:
+    if (current->flags & PF_FREEZE) {
+	    printk("Now suspending kreiserfsd\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#702: FILE: fs/reiserfs/journal.c:1892:
+	    printk("Now suspending kreiserfsd\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#704: FILE: fs/reiserfs/journal.c:1894:
+	    printk("Resuming kreiserfsd\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: fs/reiserfs/journal.c:1895:
+    } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#705: FILE: fs/reiserfs/journal.c:1895:
+    } else
[...]
+	    interruptible_sleep_on_timeout(&reiserfs_commit_thread_wait, 5 * HZ) ;

CHECK:BRACES: Unbalanced braces around else statement
#705: FILE: fs/reiserfs/journal.c:1895:
+    } else

WARNING:SPACING: space prohibited before semicolon
#707: FILE: fs/reiserfs/journal.c:1897:
+	    interruptible_sleep_on_timeout(&reiserfs_commit_thread_wait, 5 * HZ) ;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#747: FILE: include/asm-i386/suspend.h:1:
+#ifndef __ASM_I386_SWSUSP_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#769: FILE: include/asm-i386/suspend.h:23:
+
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#788: FILE: include/asm-i386/suspend.h:42:
+} __attribute__((packed));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#792: FILE: include/asm-i386/suspend.h:46:
+#define loaddebug(thread,register) \
                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#793: FILE: include/asm-i386/suspend.h:47:
+               __asm__("movl %0,%%db" #register  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: include/asm-i386/suspend.h:47:
+               __asm__("movl %0,%%db" #register  \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#794: FILE: include/asm-i386/suspend.h:48:
+                       : /* no output */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: include/asm-i386/suspend.h:48:
+                       : /* no output */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#795: FILE: include/asm-i386/suspend.h:49:
+                       :"r" ((thread)->debugreg[register]))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: include/asm-i386/suspend.h:49:
+                       :"r" ((thread)->debugreg[register]))$

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#795: FILE: include/asm-i386/suspend.h:49:
+                       :"r" ((thread)->debugreg[register]))
                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#797: FILE: include/asm-i386/suspend.h:51:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#797: FILE: include/asm-i386/suspend.h:51:
+
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: include/asm-i386/suspend.h:51:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#800: FILE: include/asm-i386/suspend.h:54:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#805: FILE: include/asm-i386/suspend.h:59:
+ * many assumptions about the layout of the stack this far down.) Also, the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#806: FILE: include/asm-i386/suspend.h:60:
+ * handy little __builtin_frame_pointer(level) where level > 0, is blatantly $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#807: FILE: include/asm-i386/suspend.h:61:
+ * buggy - it returns the value of the stack at the proper location, not the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#809: FILE: include/asm-i386/suspend.h:63:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#814: FILE: include/asm-i386/suspend.h:68:
+ * place. $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#816: FILE: include/asm-i386/suspend.h:70:
+static inline void save_processor_context (void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#834: FILE: include/asm-i386/suspend.h:88:
+^I * so it's avoided. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#854: FILE: include/asm-i386/suspend.h:108:
+^I * control registers $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#870: FILE: include/asm-i386/suspend.h:124:
+	struct tss_struct * t = &init_tss[nr];

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#872: FILE: include/asm-i386/suspend.h:126:
+	printk("Tss desc..."); mdelay(1000);

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#873: FILE: include/asm-i386/suspend.h:127:
+	set_tss_desc(nr,t);	/* This just modifies memory; should not be neccessary. But... This is neccessary, because 386 hardware has concept of busy tsc or some similar stupidity. */
 	                   	                                            ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#873: FILE: include/asm-i386/suspend.h:127:
+	set_tss_desc(nr,t);	/* This just modifies memory; should not be neccessary. But... This is neccessary, because 386 hardware has concept of busy tsc or some similar stupidity. */
 	                   	                                                                       ^^^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 189 exceeds 100 columns
#873: FILE: include/asm-i386/suspend.h:127:
+	set_tss_desc(nr,t);	/* This just modifies memory; should not be neccessary. But... This is neccessary, because 386 hardware has concept of busy tsc or some similar stupidity. */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#873: FILE: include/asm-i386/suspend.h:127:
+	set_tss_desc(nr,t);	/* This just modifies memory; should not be neccessary. But... This is neccessary, because 386 hardware has concept of busy tsc or some similar stupidity. */
 	               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#874: FILE: include/asm-i386/suspend.h:128:
+        gdt_table[__TSS(nr)].b &= 0xfffffdff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#874: FILE: include/asm-i386/suspend.h:128:
+        gdt_table[__TSS(nr)].b &= 0xfffffdff;$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#876: FILE: include/asm-i386/suspend.h:130:
+	printk("Tr..."); mdelay(1000);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#879: FILE: include/asm-i386/suspend.h:133:
+	printk("LDT..."); mdelay(1000);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#882: FILE: include/asm-i386/suspend.h:136:
+	printk("Debug..."); mdelay(1000);

ERROR:SPACING: space required before the open brace '{'
#886: FILE: include/asm-i386/suspend.h:140:
+	if (current->thread.debugreg[7]){

ERROR:CODE_INDENT: code indent should use tabs where possible
#887: FILE: include/asm-i386/suspend.h:141:
+                loaddebug(&current->thread, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#887: FILE: include/asm-i386/suspend.h:141:
+                loaddebug(&current->thread, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#888: FILE: include/asm-i386/suspend.h:142:
+                loaddebug(&current->thread, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#888: FILE: include/asm-i386/suspend.h:142:
+                loaddebug(&current->thread, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#889: FILE: include/asm-i386/suspend.h:143:
+                loaddebug(&current->thread, 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#889: FILE: include/asm-i386/suspend.h:143:
+                loaddebug(&current->thread, 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#890: FILE: include/asm-i386/suspend.h:144:
+                loaddebug(&current->thread, 3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#890: FILE: include/asm-i386/suspend.h:144:
+                loaddebug(&current->thread, 3);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#891: FILE: include/asm-i386/suspend.h:145:
+                /* no 4 and 5 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#892: FILE: include/asm-i386/suspend.h:146:
+                loaddebug(&current->thread, 6);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#892: FILE: include/asm-i386/suspend.h:146:
+                loaddebug(&current->thread, 6);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#893: FILE: include/asm-i386/suspend.h:147:
+                loaddebug(&current->thread, 7);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#893: FILE: include/asm-i386/suspend.h:147:
+                loaddebug(&current->thread, 7);$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#896: FILE: include/asm-i386/suspend.h:150:
+
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#901: FILE: include/asm-i386/suspend.h:155:
+        /* restore FPU regs if necessary */$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#903: FILE: include/asm-i386/suspend.h:157:
+	printk("FPU..."); mdelay(1000);

ERROR:CODE_INDENT: code indent should use tabs where possible
#904: FILE: include/asm-i386/suspend.h:158:
+        kernel_fpu_end();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#904: FILE: include/asm-i386/suspend.h:158:
+        kernel_fpu_end();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#909: FILE: include/asm-i386/suspend.h:163:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#915: FILE: include/asm-i386/suspend.h:169:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#916: FILE: include/asm-i386/suspend.h:170:
+ * Note that it is critical that this function is declared inline.  $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#921: FILE: include/asm-i386/suspend.h:175:
+static inline void restore_processor_context (void)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#929: FILE: include/asm-i386/suspend.h:183:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#937: FILE: include/asm-i386/suspend.h:191:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#949: FILE: include/asm-i386/suspend.h:203:
+^I * note that even though gcc has constructs to specify memory $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#952: FILE: include/asm-i386/suspend.h:206:
+^I * bad since we don't have a stack set up when we enter, and we $

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#971: FILE: include/asm-i386/suspend.h:225:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#972: FILE: include/asm-i386/suspend.h:226:
+	printk("Reloading old TR..."); mdelay(1000);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#977: FILE: include/asm-i386/suspend.h:231:
+	printk("Calling fix_processor_context..."); mdelay(1000);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#988: FILE: include/asm-i386/suspend.h:242:
+
+

WARNING:IF_1: Consider removing the #if 1 and its #endif
#989: FILE: include/asm-i386/suspend.h:243:
+#if 1

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#991: FILE: include/asm-i386/suspend.h:245:
+static int loop __nosavedata = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#992: FILE: include/asm-i386/suspend.h:246:
+static int loop2 __nosavedata = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#999: FILE: include/asm-i386/suspend.h:253:
+ * stack pointer, but excluding the instruction pointer) will be loaded with $

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#1014: FILE: include/asm-i386/suspend.h:268:
+		save_processor_context();	/* We need to capture registers and memory at "same time" */

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#1015: FILE: include/asm-i386/suspend.h:269:
+		do_magic_suspend_2();		/* If everything goes okay, this function does not return */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1020: FILE: include/asm-i386/suspend.h:274:
+^I * place in memory $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1023: FILE: include/asm-i386/suspend.h:277:
+        __asm__( "movl %%ecx,%%cr3\n" ::"c"(__pa(swapper_pg_dir)));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1023: FILE: include/asm-i386/suspend.h:277:
+        __asm__( "movl %%ecx,%%cr3\n" ::"c"(__pa(swapper_pg_dir)));$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1023: FILE: include/asm-i386/suspend.h:277:
+        __asm__( "movl %%ecx,%%cr3\n" ::"c"(__pa(swapper_pg_dir)));

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#1032: FILE: include/asm-i386/suspend.h:286:
+	/* Critical section here: noone should touch memory from now */
 	                          ^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1034: FILE: include/asm-i386/suspend.h:288:
+	for (loop=0; loop < nr_copy_pages; loop++) {
 	         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1036: FILE: include/asm-i386/suspend.h:290:
+		/* You may not call something (like copy_page) here:
+		   We may absolutely not use stack at this point */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1036: FILE: include/asm-i386/suspend.h:290:
+		   We may absolutely not use stack at this point */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1037: FILE: include/asm-i386/suspend.h:291:
+		for (loop2=0; loop2 < PAGE_SIZE; loop2++) {
 		          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1038: FILE: include/asm-i386/suspend.h:292:
+			*(((char *)((pagedir_nosave+loop)->orig_address))+loop2) =
 			                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1038: FILE: include/asm-i386/suspend.h:292:
+			*(((char *)((pagedir_nosave+loop)->orig_address))+loop2) =
 			                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1039: FILE: include/asm-i386/suspend.h:293:
+				*(((char *)((pagedir_nosave+loop)->address))+loop2);
 				                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1039: FILE: include/asm-i386/suspend.h:293:
+				*(((char *)((pagedir_nosave+loop)->address))+loop2);
 				                                            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1044: FILE: include/asm-i386/suspend.h:298:
+/* FIXME: What about page tables? Writing data pages may toggle
+   accessed/dirty bits in our page tables. That should be no problems

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1045: FILE: include/asm-i386/suspend.h:299:
+   with 4MB page tables. That's why we require have_pse. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1048: FILE: include/asm-i386/suspend.h:302:
+/* Danger: previous loop probably destroyed our current stack. Better hope it did not use
+   any stack space, itself.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1059: FILE: include/asm-i386/suspend.h:313:
+#endif $

WARNING:INLINE: plain inline is preferred over __inline__
#1082: FILE: include/linux/bitops.h:44:
+extern __inline__ int generic_fls(int x)

WARNING:INLINE: plain inline is preferred over __inline__
#1111: FILE: include/linux/bitops.h:73:
+extern __inline__ int get_bitmask_order(unsigned int count)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1114: FILE: include/linux/bitops.h:76:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1139: FILE: include/linux/init.h:115:
+#define __nosavedata __attribute__ ((__section__ (".data.nosave")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1139: FILE: include/linux/init.h:115:
+#define __nosavedata __attribute__ ((__section__ (".data.nosave")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.nosave") over __attribute__((__section__(".data.nosave")))
#1139: FILE: include/linux/init.h:115:
+#define __nosavedata __attribute__ ((__section__ (".data.nosave")))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1198: FILE: include/linux/reboot.h:55:
+extern void software_suspend(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#1213: FILE: include/linux/sched.h:433:
+#define PF_KERNTHREAD	0x00040000	/* this thread is a kernel thread that cannot be sent signals to */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1221: FILE: include/linux/suspend.h:1:
+#ifndef _LINUX_SWSUSP_H

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1236: FILE: include/linux/suspend.h:16:
+typedef struct pbe {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1239: FILE: include/linux/suspend.h:19:
+^Iswp_entry_t swap_address;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1240: FILE: include/linux/suspend.h:20:
+^Iswp_entry_t dummy;^I^I/* we need scratch space at $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1261: FILE: include/linux/suspend.h:41:
+#define SUSPEND_PD_PAGES(x)     (((x)*sizeof(struct pbe))/PAGE_SIZE+1)
                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1261: FILE: include/linux/suspend.h:41:
+#define SUSPEND_PD_PAGES(x)     (((x)*sizeof(struct pbe))/PAGE_SIZE+1)
                                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1261: FILE: include/linux/suspend.h:41:
+#define SUSPEND_PD_PAGES(x)     (((x)*sizeof(struct pbe))/PAGE_SIZE+1)
                                                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1262: FILE: include/linux/suspend.h:42:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1262: FILE: include/linux/suspend.h:42:
+   $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1266: FILE: include/linux/suspend.h:46:
+extern int shrink_mem(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1269: FILE: include/linux/suspend.h:49:
+extern void software_suspend(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1270: FILE: include/linux/suspend.h:50:
+extern void software_resume(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1271: FILE: include/linux/suspend.h:51:
+extern int resume_setup(char *str);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1273: FILE: include/linux/suspend.h:53:
+extern int register_suspend_notifier(struct notifier_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_block *' should also have an identifier name
#1273: FILE: include/linux/suspend.h:53:
+extern int register_suspend_notifier(struct notifier_block *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1274: FILE: include/linux/suspend.h:54:
+extern int unregister_suspend_notifier(struct notifier_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_block *' should also have an identifier name
#1274: FILE: include/linux/suspend.h:54:
+extern int unregister_suspend_notifier(struct notifier_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1275: FILE: include/linux/suspend.h:55:
+extern void refrigerator(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1275: FILE: include/linux/suspend.h:55:
+extern void refrigerator(unsigned long);

ERROR:SPACING: space required before the open parenthesis '('
#1278: FILE: include/linux/suspend.h:58:
+#define software_suspend()		do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1279: FILE: include/linux/suspend.h:59:
+#define software_resume()		do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1280: FILE: include/linux/suspend.h:60:
+#define register_suspend_notifier(a)	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1281: FILE: include/linux/suspend.h:61:
+#define unregister_suspend_notifier(a)	do { } while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1282: FILE: include/linux/suspend.h:62:
+#define refrigerator(a)			do { BUG(); } while(0)

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space required before the open parenthesis '('
#1282: FILE: include/linux/suspend.h:62:
+#define refrigerator(a)			do { BUG(); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1282: FILE: include/linux/suspend.h:62:
+#define refrigerator(a)			do { BUG(); } while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1315: FILE: init/main.c:526:
+	/* This has to be before mounting root, because even readonly mount of reiserfs would replay
+	   log corrupting stuff */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1315: FILE: init/main.c:526:
+	   log corrupting stuff */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1370: FILE: kernel/softirq.c:368:
+ ^Icurrent->flags |= PF_IOTHREAD;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1370: FILE: kernel/softirq.c:368:
+ ^Icurrent->flags |= PF_IOTHREAD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1370: FILE: kernel/softirq.c:368:
+ ^Icurrent->flags |= PF_IOTHREAD;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1378: FILE: kernel/suspend.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1388: FILE: kernel/suspend.c:11:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1393: FILE: kernel/suspend.c:16:
+ * Steve Doddi <dirk@loth.demon.co.uk>: $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1463: FILE: kernel/suspend.c:86:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#1464: FILE: kernel/suspend.c:87:
+#include <asm/mmu_context.h>

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#1465: FILE: kernel/suspend.c:88:
+#include <asm/pgtable.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1466: FILE: kernel/suspend.c:89:
+#include <asm/io.h>

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#1468: FILE: kernel/suspend.c:91:
+unsigned char software_suspend_enabled = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1472: FILE: kernel/suspend.c:95:
+/* With SUSPEND_CONSOLE defined, it suspend looks *really* cool, but
+   we probably do not take enough locks for switching consoles, etc,

CHECK:SPACING: No space is necessary after a cast
#1480: FILE: kernel/suspend.c:103:
+#define ADDRESS(x) ((unsigned long) phys_to_virt(((x) << PAGE_SHIFT)))

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1482: FILE: kernel/suspend.c:105:
+extern void wakeup_bdflush(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1483: FILE: kernel/suspend.c:106:
+extern int C_A_D;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1486: FILE: kernel/suspend.c:109:
+extern char _text, _etext, _edata, __bss_start, _end;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1487: FILE: kernel/suspend.c:110:
+extern char __nosave_begin, __nosave_end;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1489: FILE: kernel/suspend.c:112:
+extern int console_loglevel;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1490: FILE: kernel/suspend.c:113:
+extern kdev_t suspend_device;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1491: FILE: kernel/suspend.c:114:
+extern int is_head_of_free_region(struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#1491: FILE: kernel/suspend.c:114:
+extern int is_head_of_free_region(struct page *);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1497: FILE: kernel/suspend.c:120:
+static int __nosavedata resume_dev = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1501: FILE: kernel/suspend.c:124:
+static int orig_loglevel = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1506: FILE: kernel/suspend.c:129:
+static int resume_status = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1510: FILE: kernel/suspend.c:133:
+static unsigned int nr_copy_pages __nosavedata = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1512: FILE: kernel/suspend.c:135:
+static int pm_suspend_state = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1515: FILE: kernel/suspend.c:138:
+   must be freed after resume $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1515: FILE: kernel/suspend.c:138:
+/* Suspend pagedir is allocated before final copy, therefore it
+   must be freed after resume 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1519: FILE: kernel/suspend.c:142:
+   time of suspend, that must be freed. Second is "pagedir_nosave", $

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#1523: FILE: kernel/suspend.c:146:
+static suspend_pagedir_t *pagedir_nosave __nosavedata = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1525: FILE: kernel/suspend.c:148:
+static int pagedir_order __nosavedata = 0;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1559: FILE: kernel/suspend.c:182:
+		printk("%s", func); \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1560: FILE: kernel/suspend.c:183:
+		printk(f, ## a); \

ERROR:SPACING: space required before the open parenthesis '('
#1561: FILE: kernel/suspend.c:184:
+	} while(0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1564: FILE: kernel/suspend.c:187:
+#define PRINTK(f, a...)	printk(f, ## a)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1581: FILE: kernel/suspend.c:204:
+#define INTERESTING(p) \
+			/* We don't want to touch kernel_threads..*/ \
+			if (p->flags & PF_IOTHREAD) \
+				continue; \
+			if (p == current) \
+				continue; \
+			if (p->state == TASK_ZOMBIE) \
+				continue;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#1581: FILE: kernel/suspend.c:204:
+#define INTERESTING(p) \
+			/* We don't want to touch kernel_threads..*/ \
+			if (p->flags & PF_IOTHREAD) \
+				continue; \
+			if (p == current) \
+				continue; \
+			if (p->state == TASK_ZOMBIE) \
+				continue;

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p' may be better as '(p)' to avoid precedence issues
#1581: FILE: kernel/suspend.c:204:
+#define INTERESTING(p) \
+			/* We don't want to touch kernel_threads..*/ \
+			if (p->flags & PF_IOTHREAD) \
+				continue; \
+			if (p == current) \
+				continue; \
+			if (p->state == TASK_ZOMBIE) \
+				continue;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1581: FILE: kernel/suspend.c:204:
+#define INTERESTING(p) \
+			/* We don't want to touch kernel_threads..*/ \
+			if (p->flags & PF_IOTHREAD) \
+				continue; \
+			if (p == current) \
+				continue; \
+			if (p->state == TASK_ZOMBIE) \
+				continue;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1594: FILE: kernel/suspend.c:217:
+	/* You need correct to work with real-time processes.
+	   OTOH, this way one process may see (via /proc/) some other

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1596: FILE: kernel/suspend.c:219:
+^I   suspended. We probably do not care. $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1599: FILE: kernel/suspend.c:222:
+	long save;
+	save = current->state;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1602: FILE: kernel/suspend.c:225:
+	printk(":");

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#1605: FILE: kernel/suspend.c:228:
+		flush_signals(current); /* We have signaled a kernel thread, which isn't normal behaviour

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#1606: FILE: kernel/suspend.c:229:
+					   and that may lead to 100%CPU sucking because those threads

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1606: FILE: kernel/suspend.c:229:
+		flush_signals(current); /* We have signaled a kernel thread, which isn't normal behaviour
+					   and that may lead to 100%CPU sucking because those threads

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1607: FILE: kernel/suspend.c:230:
+					   just don't manage signals. */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1612: FILE: kernel/suspend.c:235:
+	printk(":");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1621: FILE: kernel/suspend.c:244:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1622: FILE: kernel/suspend.c:245:
+	PRINTS( "Waiting for tasks to stop... " );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1622: FILE: kernel/suspend.c:245:
+	PRINTS( "Waiting for tasks to stop... " );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1623: FILE: kernel/suspend.c:246:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1630: FILE: kernel/suspend.c:253:
+			unsigned long flags;
+			INTERESTING(p);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1635: FILE: kernel/suspend.c:258:
+			/* FIXME: smp problem here: we may not access other process' flags
+			   without locking */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1635: FILE: kernel/suspend.c:258:
+			   without locking */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1646: FILE: kernel/suspend.c:269:
+			PRINTK( "\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1646: FILE: kernel/suspend.c:269:
+			PRINTK( "\n" );

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1647: FILE: kernel/suspend.c:270:
+			printk(KERN_ERR " stopping tasks failed (%d tasks remaining)\n", todo );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1647: FILE: kernel/suspend.c:270:
+			printk(KERN_ERR " stopping tasks failed (%d tasks remaining)\n", todo );

ERROR:SPACING: space required before the open parenthesis '('
#1650: FILE: kernel/suspend.c:273:
+	} while(todo);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1651: FILE: kernel/suspend.c:274:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1652: FILE: kernel/suspend.c:275:
+	PRINTK( " ok\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1652: FILE: kernel/suspend.c:275:
+	PRINTK( " ok\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1660: FILE: kernel/suspend.c:283:
+	PRINTR( "Restarting tasks..." );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1660: FILE: kernel/suspend.c:283:
+	PRINTR( "Restarting tasks..." );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1664: FILE: kernel/suspend.c:287:
+^I^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1665: FILE: kernel/suspend.c:288:
+		if (p->flags & PF_FROZEN) p->flags &= ~PF_FROZEN;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1667: FILE: kernel/suspend.c:290:
+			printk(KERN_INFO " Strange, %s not stopped\n", p->comm );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1667: FILE: kernel/suspend.c:290:
+			printk(KERN_INFO " Strange, %s not stopped\n", p->comm );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1671: FILE: kernel/suspend.c:294:
+	PRINTK( " done\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1671: FILE: kernel/suspend.c:294:
+	PRINTK( " done\n" );

WARNING:INLINE: plain inline is preferred over __inline__
#1679: FILE: kernel/suspend.c:302:
+static __inline__ int fill_suspend_header(struct suspend_header *sh)

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#1683: FILE: kernel/suspend.c:306:
+	sh->version_code = LINUX_VERSION_CODE;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1712: FILE: kernel/suspend.c:335:
+		printk(KERN_ERR "Hm, tq_disk is not empty after run_task_queue\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1730: FILE: kernel/suspend.c:353:
+^I$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mark_swapfiles', this function's name, in a string
#1733: FILE: kernel/suspend.c:356:
+		panic("Out of memory in mark_swapfiles");

CHECK:SPACING: No space is necessary after a cast
#1737: FILE: kernel/suspend.c:360:
+	rw_swap_page_nolock(READ, entry, (char *) cur);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1740: FILE: kernel/suspend.c:363:
+^I  ^Iif (!memcmp("SUSP1R",cur->swh.magic.magic,6))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1740: FILE: kernel/suspend.c:363:
+^I  ^Iif (!memcmp("SUSP1R",cur->swh.magic.magic,6))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1740: FILE: kernel/suspend.c:363:
+	  	if (!memcmp("SUSP1R",cur->swh.magic.magic,6))
 	  	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1740: FILE: kernel/suspend.c:363:
+	  	if (!memcmp("SUSP1R",cur->swh.magic.magic,6))
 	  	                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1741: FILE: kernel/suspend.c:364:
+^I^I  ^Imemcpy(cur->swh.magic.magic,"SWAP-SPACE",10);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1741: FILE: kernel/suspend.c:364:
+^I^I  ^Imemcpy(cur->swh.magic.magic,"SWAP-SPACE",10);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1741: FILE: kernel/suspend.c:364:
+		  	memcpy(cur->swh.magic.magic,"SWAP-SPACE",10);
 		  	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1741: FILE: kernel/suspend.c:364:
+		  	memcpy(cur->swh.magic.magic,"SWAP-SPACE",10);
 		  	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1742: FILE: kernel/suspend.c:365:
+		else if (!memcmp("SUSP2R",cur->swh.magic.magic,6))
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1742: FILE: kernel/suspend.c:365:
+		else if (!memcmp("SUSP2R",cur->swh.magic.magic,6))
 		                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1743: FILE: kernel/suspend.c:366:
+			memcpy(cur->swh.magic.magic,"SWAPSPACE2",10);
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1743: FILE: kernel/suspend.c:366:
+			memcpy(cur->swh.magic.magic,"SWAPSPACE2",10);
 			                                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1744: FILE: kernel/suspend.c:367:
+^I^Ielse printk("%sUnable to find suspended-data signature (%.10s - misspelled?\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1744: FILE: kernel/suspend.c:367:
+		else printk("%sUnable to find suspended-data signature (%.10s - misspelled?\n", 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1744: FILE: kernel/suspend.c:367:
+		else printk("%sUnable to find suspended-data signature (%.10s - misspelled?\n", 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1745: FILE: kernel/suspend.c:368:
+^I^I      ^Iname_resume, cur->swh.magic.magic);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1745: FILE: kernel/suspend.c:368:
+^I^I      ^Iname_resume, cur->swh.magic.magic);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1747: FILE: kernel/suspend.c:370:
+^I  ^Iif ((!memcmp("SWAP-SPACE",cur->swh.magic.magic,10)))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1747: FILE: kernel/suspend.c:370:
+^I  ^Iif ((!memcmp("SWAP-SPACE",cur->swh.magic.magic,10)))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1747: FILE: kernel/suspend.c:370:
+	  	if ((!memcmp("SWAP-SPACE",cur->swh.magic.magic,10)))
 	  	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1747: FILE: kernel/suspend.c:370:
+	  	if ((!memcmp("SWAP-SPACE",cur->swh.magic.magic,10)))
 	  	                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1748: FILE: kernel/suspend.c:371:
+^I^I  ^Imemcpy(cur->swh.magic.magic,"SUSP1R....",10);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1748: FILE: kernel/suspend.c:371:
+^I^I  ^Imemcpy(cur->swh.magic.magic,"SUSP1R....",10);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1748: FILE: kernel/suspend.c:371:
+		  	memcpy(cur->swh.magic.magic,"SUSP1R....",10);
 		  	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1748: FILE: kernel/suspend.c:371:
+		  	memcpy(cur->swh.magic.magic,"SUSP1R....",10);
 		  	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1749: FILE: kernel/suspend.c:372:
+		else if ((!memcmp("SWAPSPACE2",cur->swh.magic.magic,10)))
 		                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1749: FILE: kernel/suspend.c:372:
+		else if ((!memcmp("SWAPSPACE2",cur->swh.magic.magic,10)))
 		                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1750: FILE: kernel/suspend.c:373:
+			memcpy(cur->swh.magic.magic,"SUSP2R....",10);
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1750: FILE: kernel/suspend.c:373:
+			memcpy(cur->swh.magic.magic,"SUSP2R....",10);
 			                                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1751: FILE: kernel/suspend.c:374:
+		else panic("\nSwapspace is not swapspace (%.10s)\n", cur->swh.magic.magic);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1757: FILE: kernel/suspend.c:380:
+^I$

CHECK:SPACING: No space is necessary after a cast
#1761: FILE: kernel/suspend.c:384:
+static void read_swapfiles(void) /* This is called before saving image */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1764: FILE: kernel/suspend.c:387:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1765: FILE: kernel/suspend.c:388:
+	len=strlen(resume_file);
 	   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1767: FILE: kernel/suspend.c:390:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1769: FILE: kernel/suspend.c:392:
+	for(i=0; i<MAX_SWAPFILES; i++) {
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1769: FILE: kernel/suspend.c:392:
+	for(i=0; i<MAX_SWAPFILES; i++) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#1769: FILE: kernel/suspend.c:392:
+	for(i=0; i<MAX_SWAPFILES; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1771: FILE: kernel/suspend.c:394:
+			swapfile_used[i]=SWAPFILE_UNUSED;
 			                ^

ERROR:SPACING: space required before the open parenthesis '('
#1773: FILE: kernel/suspend.c:396:
+			if(!len) {

WARNING:LONG_LINE_STRING: line length of 108 exceeds 100 columns
#1774: FILE: kernel/suspend.c:397:
+	    			PRINTS(KERN_WARNING "resume= option should be used to set suspend device" );

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#1774: FILE: kernel/suspend.c:397:
+^I    ^I^I^IPRINTS(KERN_WARNING "resume= option should be used to set suspend device" );$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1774: FILE: kernel/suspend.c:397:
+^I    ^I^I^IPRINTS(KERN_WARNING "resume= option should be used to set suspend device" );$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1774: FILE: kernel/suspend.c:397:
+	    			PRINTS(KERN_WARNING "resume= option should be used to set suspend device" );

ERROR:SPACING: space required before the open parenthesis '('
#1775: FILE: kernel/suspend.c:398:
+				if(root_swap == 0xFFFF) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1775: FILE: kernel/suspend.c:398:
+				if(root_swap == 0xFFFF) {
[...]
+				} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1778: FILE: kernel/suspend.c:401:
+				} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1779: FILE: kernel/suspend.c:402:
+^I^I^I^I^Iswapfile_used[i] = SWAPFILE_IGNORED;^I^I^I^I  $

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1779: FILE: kernel/suspend.c:402:
+					swapfile_used[i] = SWAPFILE_IGNORED;				  

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#1781: FILE: kernel/suspend.c:404:
+^I  ^I^I^I/* we ignore all swap devices that are not the resume_file */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1781: FILE: kernel/suspend.c:404:
+^I  ^I^I^I/* we ignore all swap devices that are not the resume_file */$

ERROR:SPACING: space required before the open parenthesis '('
#1782: FILE: kernel/suspend.c:405:
+				if(resume_device == swap_info[i].swap_device) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1786: FILE: kernel/suspend.c:409:
+^I^I^I^I^IPRINTS( "device %s (%x != %x) ignored\n", swap_info[i].swap_file->d_name.name, swap_info[i].swap_device, resume_device );^I^I^I^I  $

WARNING:LONG_LINE: line length of 194 exceeds 100 columns
#1786: FILE: kernel/suspend.c:409:
+					PRINTS( "device %s (%x != %x) ignored\n", swap_info[i].swap_file->d_name.name, swap_info[i].swap_device, resume_device );				  

ERROR:SPACING: space prohibited after that open parenthesis '('
#1786: FILE: kernel/suspend.c:409:
+					PRINTS( "device %s (%x != %x) ignored\n", swap_info[i].swap_file->d_name.name, swap_info[i].swap_device, resume_device );				  

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1786: FILE: kernel/suspend.c:409:
+					PRINTS( "device %s (%x != %x) ignored\n", swap_info[i].swap_file->d_name.name, swap_info[i].swap_device, resume_device );				  

ERROR:CODE_INDENT: code indent should use tabs where possible
#1787: FILE: kernel/suspend.c:410:
+^I^I^I^I  ^Iswapfile_used[i] = SWAPFILE_IGNORED;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1787: FILE: kernel/suspend.c:410:
+^I^I^I^I  ^Iswapfile_used[i] = SWAPFILE_IGNORED;$

CHECK:SPACING: No space is necessary after a cast
#1795: FILE: kernel/suspend.c:418:
+static void lock_swapdevices(void) /* This is called after saving image so modification

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1796: FILE: kernel/suspend.c:419:
+static void lock_swapdevices(void) /* This is called after saving image so modification
+				      will be lost after resume... and that's what we want. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1796: FILE: kernel/suspend.c:419:
+				      will be lost after resume... and that's what we want. */

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#1801: FILE: kernel/suspend.c:424:
+	for(i = 0; i< MAX_SWAPFILES; i++)
 	            ^

ERROR:SPACING: space required before the open parenthesis '('
#1801: FILE: kernel/suspend.c:424:
+	for(i = 0; i< MAX_SWAPFILES; i++)

ERROR:SPACING: space required before the open parenthesis '('
#1802: FILE: kernel/suspend.c:425:
+		if(swapfile_used[i] == SWAPFILE_IGNORED) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#1803: FILE: kernel/suspend.c:426:
+			PRINTS( "device %s locked\n", swap_info[i].swap_file->d_name.name );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1803: FILE: kernel/suspend.c:426:
+			PRINTS( "device %s locked\n", swap_info[i].swap_file->d_name.name );

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1805: FILE: kernel/suspend.c:428:
+			swap_info[i].flags ^= 0xFF; /* we make the device unusable. A new call to
+						       lock_swapdevices can unlock the devices. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1805: FILE: kernel/suspend.c:428:
+						       lock_swapdevices can unlock the devices. */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1818: FILE: kernel/suspend.c:441:
+	PRINTS( "Writing data to swap (%d pages): ", nr_copy_pages );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1818: FILE: kernel/suspend.c:441:
+	PRINTS( "Writing data to swap (%d pages): ", nr_copy_pages );

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1819: FILE: kernel/suspend.c:442:
+	for (i=0; i<nr_copy_pages; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1819: FILE: kernel/suspend.c:442:
+	for (i=0; i<nr_copy_pages; i++) {
 	           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1820: FILE: kernel/suspend.c:443:
+		if (!(i%100))
 		       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1821: FILE: kernel/suspend.c:444:
+			PRINTK( "." );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1821: FILE: kernel/suspend.c:444:
+			PRINTK( "." );

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1822: FILE: kernel/suspend.c:445:
+		if (!(entry = get_swap_page()).val)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1823: FILE: kernel/suspend.c:446:
+			panic("\nNot enough swapspace when writing data" );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1824: FILE: kernel/suspend.c:447:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#1825: FILE: kernel/suspend.c:448:
+		if(swapfile_used[SWP_TYPE(entry)] != SWAPFILE_SUSPEND)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1826: FILE: kernel/suspend.c:449:
+			panic("\nPage %d: not enough swapspace on suspend device", i );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1827: FILE: kernel/suspend.c:450:
+^I    $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1828: FILE: kernel/suspend.c:451:
+		address = (pagedir_nosave+i)->address;
 		                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1832: FILE: kernel/suspend.c:455:
+			long dummy1, dummy2;
+			get_swaphandle_info(entry, &dummy1, &suspend_device, &dummy2);

CHECK:SPACING: No space is necessary after a cast
#1834: FILE: kernel/suspend.c:457:
+		rw_swap_page_nolock(WRITE, entry, (char *) address);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1835: FILE: kernel/suspend.c:458:
+		(pagedir_nosave+i)->swap_address = entry;
 		               ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1838: FILE: kernel/suspend.c:461:
+	PRINTS( "Writing pagedir (%d pages): ", nr_pgdir_pages);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1839: FILE: kernel/suspend.c:462:
+	for (i=0; i<nr_pgdir_pages; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1839: FILE: kernel/suspend.c:462:
+	for (i=0; i<nr_pgdir_pages; i++) {
 	           ^

CHECK:SPACING: No space is necessary after a cast
#1840: FILE: kernel/suspend.c:463:
+		cur = (union diskpage *)((char *) pagedir_nosave)+i;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1840: FILE: kernel/suspend.c:463:
+		cur = (union diskpage *)((char *) pagedir_nosave)+i;
 		                                                 ^

CHECK:SPACING: No space is necessary after a cast
#1841: FILE: kernel/suspend.c:464:
+		if ((char *) cur != (((char *) pagedir_nosave) + i*PAGE_SIZE))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1841: FILE: kernel/suspend.c:464:
+		if ((char *) cur != (((char *) pagedir_nosave) + i*PAGE_SIZE))
 		                                                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1843: FILE: kernel/suspend.c:466:
+		PRINTK( "." );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1843: FILE: kernel/suspend.c:466:
+		PRINTK( "." );

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1844: FILE: kernel/suspend.c:467:
+		if (!(entry = get_swap_page()).val) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1845: FILE: kernel/suspend.c:468:
+			printk(KERN_CRIT "Not enough swapspace when writing pgdir\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1845: FILE: kernel/suspend.c:468:
+			printk(KERN_CRIT "Not enough swapspace when writing pgdir\n" );

CHECK:SPACING: No space is necessary after a cast
#1847: FILE: kernel/suspend.c:470:
+			free_page((unsigned long) buffer);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 18)
#1851: FILE: kernel/suspend.c:474:
+		if(swapfile_used[SWP_TYPE(entry)] != SWAPFILE_SUSPEND)
+		  panic("\nNot enough swapspace for pagedir on suspend device" );

ERROR:SPACING: space required before the open parenthesis '('
#1851: FILE: kernel/suspend.c:474:
+		if(swapfile_used[SWP_TYPE(entry)] != SWAPFILE_SUSPEND)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1852: FILE: kernel/suspend.c:475:
+		  panic("\nNot enough swapspace for pagedir on suspend device" );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1858: FILE: kernel/suspend.c:481:
+^I^Icur->link.next = prev;^I^I^I^I$

CHECK:SPACING: No space is necessary after a cast
#1860: FILE: kernel/suspend.c:483:
+		rw_swap_page_nolock(WRITE, entry, (char *) cur);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1864: FILE: kernel/suspend.c:487:
+	if (sizeof(struct suspend_header) > PAGE_SIZE-sizeof(swp_entry_t))
 	                                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1866: FILE: kernel/suspend.c:489:
+		panic("sizeof(struct suspend_header) too big: %d",
+				sizeof(struct suspend_header));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1869: FILE: kernel/suspend.c:492:
+	if (!(entry = get_swap_page()).val)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1870: FILE: kernel/suspend.c:493:
+		panic( "\nNot enough swapspace when writing header" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1870: FILE: kernel/suspend.c:493:
+		panic( "\nNot enough swapspace when writing header" );

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#1871: FILE: kernel/suspend.c:494:
+	if(swapfile_used[SWP_TYPE(entry)] != SWAPFILE_SUSPEND)
+	  panic("\nNot enough swapspace for header on suspend device" );

ERROR:SPACING: space required before the open parenthesis '('
#1871: FILE: kernel/suspend.c:494:
+	if(swapfile_used[SWP_TYPE(entry)] != SWAPFILE_SUSPEND)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1872: FILE: kernel/suspend.c:495:
+	  panic("\nNot enough swapspace for header on suspend device" );

CHECK:SPACING: No space is necessary after a cast
#1874: FILE: kernel/suspend.c:497:
+	cur = (void *) buffer;

ERROR:SPACING: space required before the open parenthesis '('
#1875: FILE: kernel/suspend.c:498:
+	if(fill_suspend_header(&cur->sh))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1877: FILE: kernel/suspend.c:500:
+^I^I$

CHECK:SPACING: No space is necessary after a cast
#1881: FILE: kernel/suspend.c:504:
+	rw_swap_page_nolock(WRITE, entry, (char *) cur);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1884: FILE: kernel/suspend.c:507:
+	PRINTK( ", signature" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1884: FILE: kernel/suspend.c:507:
+	PRINTK( ", signature" );

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1885: FILE: kernel/suspend.c:508:
+#if 0

ERROR:SPACING: space prohibited after that open parenthesis '('
#1890: FILE: kernel/suspend.c:513:
+	PRINTK( ", done\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1890: FILE: kernel/suspend.c:513:
+	PRINTK( ", done\n" );

CHECK:SPACING: No space is necessary after a cast
#1893: FILE: kernel/suspend.c:516:
+	free_page((unsigned long) buffer);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1903: FILE: kernel/suspend.c:526:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#1906: FILE: kernel/suspend.c:529:
+	for(loop = 0; loop < max_mapnr; loop++) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1907: FILE: kernel/suspend.c:530:
+		if(PageHighMem(mem_map+loop))
 		                      ^

ERROR:SPACING: space required before the open parenthesis '('
#1907: FILE: kernel/suspend.c:530:
+		if(PageHighMem(mem_map+loop))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1909: FILE: kernel/suspend.c:532:
+		if(!PageReserved(mem_map+loop)) {
 		                        ^

ERROR:SPACING: space required before the open parenthesis '('
#1909: FILE: kernel/suspend.c:532:
+		if(!PageReserved(mem_map+loop)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1909: FILE: kernel/suspend.c:532:
+		if(!PageReserved(mem_map+loop)) {
[...]
+		} else if(PageReserved(mem_map+loop)) {
[...]
+		} else panic("No third thing should be possible");
[...]

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1910: FILE: kernel/suspend.c:533:
+			if(PageNosave(mem_map+loop))
 			                     ^

ERROR:SPACING: space required before the open parenthesis '('
#1910: FILE: kernel/suspend.c:533:
+			if(PageNosave(mem_map+loop))

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1913: FILE: kernel/suspend.c:536:
+			if((chunk_size=is_head_of_free_region(mem_map+loop))!=0) {
 			              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1913: FILE: kernel/suspend.c:536:
+			if((chunk_size=is_head_of_free_region(mem_map+loop))!=0) {
 			                                             ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#1913: FILE: kernel/suspend.c:536:
+			if((chunk_size=is_head_of_free_region(mem_map+loop))!=0) {
 			                                                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1913: FILE: kernel/suspend.c:536:
+			if((chunk_size=is_head_of_free_region(mem_map+loop))!=0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1913: FILE: kernel/suspend.c:536:
+			if((chunk_size=is_head_of_free_region(mem_map+loop))!=0) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1917: FILE: kernel/suspend.c:540:
+		} else if(PageReserved(mem_map+loop)) {
 		                              ^

ERROR:SPACING: space required before the open parenthesis '('
#1917: FILE: kernel/suspend.c:540:
+		} else if(PageReserved(mem_map+loop)) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1918: FILE: kernel/suspend.c:541:
+			if(PageNosave(mem_map+loop))
 			                     ^

ERROR:SPACING: space required before the open parenthesis '('
#1918: FILE: kernel/suspend.c:541:
+			if(PageNosave(mem_map+loop))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1925: FILE: kernel/suspend.c:548:
+^I^I^I^I&__nosave_begin && ADDRESS(loop) < $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1927: FILE: kernel/suspend.c:550:
+				printk("[nosave]");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1930: FILE: kernel/suspend.c:553:
+^I^I^I/* Hmm, perhaps copying all reserved pages is not too healthy as they may contain $

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#1930: FILE: kernel/suspend.c:553:
+			/* Hmm, perhaps copying all reserved pages is not too healthy as they may contain 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1931: FILE: kernel/suspend.c:554:
+			/* Hmm, perhaps copying all reserved pages is not too healthy as they may contain 
+			   critical bios data? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1931: FILE: kernel/suspend.c:554:
+			   critical bios data? */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1932: FILE: kernel/suspend.c:555:
+		} else panic("No third thing should be possible");

ERROR:SPACING: space required before the open parenthesis '('
#1935: FILE: kernel/suspend.c:558:
+		if(pagedir_p) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1951: FILE: kernel/suspend.c:574:
+	for(i=0; i < num_physpages; i++, page++) {
 	     ^

ERROR:SPACING: space required before the open parenthesis '('
#1951: FILE: kernel/suspend.c:574:
+	for(i=0; i < num_physpages; i++, page++) {

ERROR:SPACING: space required before the open parenthesis '('
#1952: FILE: kernel/suspend.c:575:
+		if(!PageTestandClearNosave(page))

ERROR:SPACING: space required before the open parenthesis '('
#1955: FILE: kernel/suspend.c:578:
+		if(ADDRESS(i) >= this_pagedir && ADDRESS(i) < this_pagedir_end)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1957: FILE: kernel/suspend.c:580:
+^I^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1972: FILE: kernel/suspend.c:595:
+	p = pagedir = (suspend_pagedir_t *)__get_free_pages(GFP_ATOMIC, pagedir_order);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required before the open parenthesis '('
#1973: FILE: kernel/suspend.c:596:
+	if(!pagedir)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1977: FILE: kernel/suspend.c:600:
+	for(i=0; i < 1<<pagedir_order; i++)
 	     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1977: FILE: kernel/suspend.c:600:
+	for(i=0; i < 1<<pagedir_order; i++)
 	              ^

ERROR:SPACING: space required before the open parenthesis '('
#1977: FILE: kernel/suspend.c:600:
+	for(i=0; i < 1<<pagedir_order; i++)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1979: FILE: kernel/suspend.c:602:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#1980: FILE: kernel/suspend.c:603:
+	while(nr_copy_pages--) {

ERROR:SPACING: space required before the open parenthesis '('
#1982: FILE: kernel/suspend.c:605:
+		if(!p->address) {

CHECK:SPACING: No space is necessary after a cast
#1984: FILE: kernel/suspend.c:607:
+			free_suspend_pagedir((unsigned long) pagedir);

ERROR:SPACING: space required before the open parenthesis '('
#2002: FILE: kernel/suspend.c:625:
+	if(vc_allocate(SUSPEND_CONSOLE))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2004: FILE: kernel/suspend.c:627:
+	   * we don't want to mess the screen for now. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2007: FILE: kernel/suspend.c:630:
+	set_console (SUSPEND_CONSOLE);

ERROR:SPACING: space required before the open parenthesis '('
#2008: FILE: kernel/suspend.c:631:
+	if(vt_waitactive(SUSPEND_CONSOLE)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2021: FILE: kernel/suspend.c:644:
+	set_console (orig_fgconsole);

WARNING:RETURN_VOID: void function return statements are not generally useful
#2024: FILE: kernel/suspend.c:647:
+	return;
+}

ERROR:SPACING: space prohibited after that open parenthesis '('
#2028: FILE: kernel/suspend.c:651:
+	PRINTS( "Stopping processes\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2028: FILE: kernel/suspend.c:651:
+	PRINTS( "Stopping processes\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#2031: FILE: kernel/suspend.c:654:
+		PRINTS( "Not all processes stopped!\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2031: FILE: kernel/suspend.c:654:
+		PRINTS( "Not all processes stopped!\n" );

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#2049: FILE: kernel/suspend.c:672:
+	void **c= eaten_memory, *m;
 	        ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2051: FILE: kernel/suspend.c:674:
+	printk("Eating pages ");

CHECK:SPACING: No space is necessary after a cast
#2052: FILE: kernel/suspend.c:675:
+	while ((m = (void *) get_free_page(GFP_HIGHUSER))) {

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#2055: FILE: kernel/suspend.c:678:
+		if (!(i%100))
 		       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2056: FILE: kernel/suspend.c:679:
+^I^I^Iprintk( ".(%d)", i ); $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2056: FILE: kernel/suspend.c:679:
+			printk( ".(%d)", i ); 

ERROR:SPACING: space prohibited after that open parenthesis '('
#2056: FILE: kernel/suspend.c:679:
+			printk( ".(%d)", i ); 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2056: FILE: kernel/suspend.c:679:
+			printk( ".(%d)", i ); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2059: FILE: kernel/suspend.c:682:
+^I^Ii++; $

WARNING:IF_1: Consider removing the #if 1 and its #endif
#2060: FILE: kernel/suspend.c:683:
+#if 1

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2068: FILE: kernel/suspend.c:691:
+	printk("(%dK)\n", i*4);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2068: FILE: kernel/suspend.c:691:
+	printk("(%dK)\n", i*4);
 	                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2075: FILE: kernel/suspend.c:698:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2076: FILE: kernel/suspend.c:699:
+	printk( "Freeing pages " );

ERROR:SPACING: space prohibited after that open parenthesis '('
#2076: FILE: kernel/suspend.c:699:
+	printk( "Freeing pages " );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2076: FILE: kernel/suspend.c:699:
+	printk( "Freeing pages " );

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#2078: FILE: kernel/suspend.c:701:
+		if (!(i%5000))
+		printk( "." ); 

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#2078: FILE: kernel/suspend.c:701:
+		if (!(i%5000))
 		       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2079: FILE: kernel/suspend.c:702:
+^I^Iprintk( "." ); $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2079: FILE: kernel/suspend.c:702:
+		printk( "." ); 

ERROR:SPACING: space prohibited after that open parenthesis '('
#2079: FILE: kernel/suspend.c:702:
+		printk( "." ); 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2079: FILE: kernel/suspend.c:702:
+		printk( "." ); 

CHECK:SPACING: No space is necessary after a cast
#2082: FILE: kernel/suspend.c:705:
+		if (f) { free_page( (long) f ); i++; }

ERROR:SPACING: space prohibited after that open parenthesis '('
#2082: FILE: kernel/suspend.c:705:
+		if (f) { free_page( (long) f ); i++; }

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2082: FILE: kernel/suspend.c:705:
+		if (f) { free_page( (long) f ); i++; }

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2082: FILE: kernel/suspend.c:705:
+		if (f) { free_page( (long) f ); i++; }

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2084: FILE: kernel/suspend.c:707:
+	printk( "(%dK)\n", i*4 );

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2084: FILE: kernel/suspend.c:707:
+	printk( "(%dK)\n", i*4 );
 	                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#2084: FILE: kernel/suspend.c:707:
+	printk( "(%dK)\n", i*4 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2084: FILE: kernel/suspend.c:707:
+	printk( "(%dK)\n", i*4 );

WARNING:IF_1: Consider removing the #if 1 and its #endif
#2095: FILE: kernel/suspend.c:718:
+#if 1

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2098: FILE: kernel/suspend.c:721:
+		printk(".");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2099: FILE: kernel/suspend.c:722:
+	printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2101: FILE: kernel/suspend.c:724:
+	printk("Using memeat\n");

ERROR:SPACING: space required before the open parenthesis '('
#2123: FILE: kernel/suspend.c:746:
+	if(!pm_suspend_state) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2123: FILE: kernel/suspend.c:746:
+	if(!pm_suspend_state) {
[...]
+	} else
[...]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2124: FILE: kernel/suspend.c:747:
+		if(pm_send_all(PM_SUSPEND,(void *)3)) {
 		                         ^

ERROR:SPACING: space required before the open parenthesis '('
#2124: FILE: kernel/suspend.c:747:
+		if(pm_send_all(PM_SUSPEND,(void *)3)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2125: FILE: kernel/suspend.c:748:
+			printk(KERN_WARNING "Problem while sending suspend event\n");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2126: FILE: kernel/suspend.c:749:
+			return(1);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2128: FILE: kernel/suspend.c:751:
+		pm_suspend_state=1;
 		                ^

CHECK:BRACES: Unbalanced braces around else statement
#2129: FILE: kernel/suspend.c:752:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2130: FILE: kernel/suspend.c:753:
+		printk(KERN_WARNING "PM suspend state already raised\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2131: FILE: kernel/suspend.c:754:
+^I  $

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2132: FILE: kernel/suspend.c:755:
+	return(0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2140: FILE: kernel/suspend.c:763:
+  ^Iif(flags & RESUME_PHASE2) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2140: FILE: kernel/suspend.c:763:
+  ^Iif(flags & RESUME_PHASE2) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2140: FILE: kernel/suspend.c:763:
+  ^Iif(flags & RESUME_PHASE2) {$

ERROR:SPACING: space required before the open parenthesis '('
#2140: FILE: kernel/suspend.c:763:
+  	if(flags & RESUME_PHASE2) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#2145: FILE: kernel/suspend.c:768:
+  ^Iif(flags & RESUME_PHASE1) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2145: FILE: kernel/suspend.c:768:
+  ^Iif(flags & RESUME_PHASE1) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2145: FILE: kernel/suspend.c:768:
+  ^Iif(flags & RESUME_PHASE1) {$

ERROR:SPACING: space required before the open parenthesis '('
#2145: FILE: kernel/suspend.c:768:
+  	if(flags & RESUME_PHASE1) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#2150: FILE: kernel/suspend.c:773:
+  ^Iif(flags & RESUME_PHASE2) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2150: FILE: kernel/suspend.c:773:
+  ^Iif(flags & RESUME_PHASE2) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2150: FILE: kernel/suspend.c:773:
+  ^Iif(flags & RESUME_PHASE2) {$

ERROR:SPACING: space required before the open parenthesis '('
#2150: FILE: kernel/suspend.c:773:
+  	if(flags & RESUME_PHASE2) {

ERROR:SPACING: space required before the open parenthesis '('
#2151: FILE: kernel/suspend.c:774:
+		if(pm_suspend_state) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2151: FILE: kernel/suspend.c:774:
+		if(pm_suspend_state) {
[...]
+		} else
[...]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2152: FILE: kernel/suspend.c:775:
+			if(pm_send_all(PM_RESUME,(void *)0))
 			                        ^

ERROR:SPACING: space required before the open parenthesis '('
#2152: FILE: kernel/suspend.c:775:
+			if(pm_send_all(PM_RESUME,(void *)0))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2153: FILE: kernel/suspend.c:776:
+				printk(KERN_WARNING "Problem while sending resume event\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2154: FILE: kernel/suspend.c:777:
+			pm_suspend_state=0;
 			                ^

CHECK:BRACES: Unbalanced braces around else statement
#2155: FILE: kernel/suspend.c:778:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2156: FILE: kernel/suspend.c:779:
+			printk(KERN_WARNING "PM suspend state wasn't raised\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#2170: FILE: kernel/suspend.c:793:
+	PRINTS( "/critical section: Counting pages to copy" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2170: FILE: kernel/suspend.c:793:
+	PRINTS( "/critical section: Counting pages to copy" );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2173: FILE: kernel/suspend.c:796:
+^I$

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#2174: FILE: kernel/suspend.c:797:
+	PRINTK(" (pages needed: %d+%d=%d free: %d)\n",nr_copy_pages,PAGES_FOR_IO,nr_needed_pages,nr_free_pages());

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2174: FILE: kernel/suspend.c:797:
+	PRINTK(" (pages needed: %d+%d=%d free: %d)\n",nr_copy_pages,PAGES_FOR_IO,nr_needed_pages,nr_free_pages());
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2174: FILE: kernel/suspend.c:797:
+	PRINTK(" (pages needed: %d+%d=%d free: %d)\n",nr_copy_pages,PAGES_FOR_IO,nr_needed_pages,nr_free_pages());
 	                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2174: FILE: kernel/suspend.c:797:
+	PRINTK(" (pages needed: %d+%d=%d free: %d)\n",nr_copy_pages,PAGES_FOR_IO,nr_needed_pages,nr_free_pages());
 	                                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2174: FILE: kernel/suspend.c:797:
+	PRINTK(" (pages needed: %d+%d=%d free: %d)\n",nr_copy_pages,PAGES_FOR_IO,nr_needed_pages,nr_free_pages());
 	                                                                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#2175: FILE: kernel/suspend.c:798:
+	if(nr_free_pages() < nr_needed_pages) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#2176: FILE: kernel/suspend.c:799:
+		printk(KERN_CRIT "%sCouldn't get enough free pages, on %d pages short\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2177: FILE: kernel/suspend.c:800:
+		       name_suspend, nr_needed_pages-nr_free_pages());
 		                                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2182: FILE: kernel/suspend.c:805:
+	si_swapinfo(&i);	/* FIXME: si_swapinfo(&i) returns all swap devices information.
+				   We should only consider resume_device. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2182: FILE: kernel/suspend.c:805:
+				   We should only consider resume_device. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#2184: FILE: kernel/suspend.c:807:
+		printk(KERN_CRIT "%sThere's not enough swap space available, on %ld pages short\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2185: FILE: kernel/suspend.c:808:
+		       name_suspend, nr_needed_pages-i.freeswap);
 		                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2190: FILE: kernel/suspend.c:813:
+^IPRINTK( "Alloc pagedir\n" ); $

ERROR:SPACING: space prohibited after that open parenthesis '('
#2190: FILE: kernel/suspend.c:813:
+	PRINTK( "Alloc pagedir\n" ); 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2190: FILE: kernel/suspend.c:813:
+	PRINTK( "Alloc pagedir\n" ); 

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2191: FILE: kernel/suspend.c:814:
+	pagedir_save = pagedir_nosave = create_suspend_pagedir(nr_copy_pages);

ERROR:SPACING: space required before the open parenthesis '('
#2192: FILE: kernel/suspend.c:815:
+	if(!pagedir_nosave) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#2194: FILE: kernel/suspend.c:817:
+		printk(KERN_CRIT "%sCouldn't allocate enough pages\n",name_suspend);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2194: FILE: kernel/suspend.c:817:
+		printk(KERN_CRIT "%sCouldn't allocate enough pages\n",name_suspend);
 		                                                     ^

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#2212: FILE: kernel/suspend.c:835:
+	suspend_device = -1;					/* We do not want any writes, thanx */

ERROR:SPACING: space prohibited after that open parenthesis '('
#2215: FILE: kernel/suspend.c:838:
+	PRINTS( "critical section/: done (%d pages copied)\n", nr_copy_pages );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2215: FILE: kernel/suspend.c:838:
+	PRINTS( "critical section/: done (%d pages copied)\n", nr_copy_pages );

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#2219: FILE: kernel/suspend.c:842:
+	lock_swapdevices();	/* This will unlock ignored swap devices since writing is finished */

ERROR:SPACING: space prohibited after that open parenthesis '('
#2222: FILE: kernel/suspend.c:845:
+	PRINTS( "Syncing disks\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2222: FILE: kernel/suspend.c:845:
+	PRINTS( "Syncing disks\n" );

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2228: FILE: kernel/suspend.c:851:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#2238: FILE: kernel/suspend.c:861:
+	printk(KERN_EMERG "%sTrying to power down.\n", name_suspend);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#2240: FILE: kernel/suspend.c:863:
+	printk(KERN_EMERG "shift_state: %04x\n", shift_state);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2248: FILE: kernel/suspend.c:871:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#2249: FILE: kernel/suspend.c:872:
+	printk(KERN_EMERG "%sProbably not capable for powerdown. System halted.\n", name_suspend);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2251: FILE: kernel/suspend.c:874:
+	while (1);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2258: FILE: kernel/suspend.c:881:
+#if 0

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#2259: FILE: kernel/suspend.c:882:
+	/* Should not be neccessary -- we saved whole CPU context */
 	                 ^^^^^^^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#2260: FILE: kernel/suspend.c:883:
+	PRINTR( "Activating task\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2260: FILE: kernel/suspend.c:883:
+	PRINTR( "Activating task\n" );

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2261: FILE: kernel/suspend.c:884:
+	activate_mm(current->mm,current->mm);
 	                       ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#2276: FILE: kernel/suspend.c:899:
+	mb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2277: FILE: kernel/suspend.c:900:
+^Ispin_lock_irq(&suspend_pagedir_lock);^I/* Done to disable interrupts */ $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2279: FILE: kernel/suspend.c:902:
+	printk( "Waiting for DMAs to settle down...\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#2279: FILE: kernel/suspend.c:902:
+	printk( "Waiting for DMAs to settle down...\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2281: FILE: kernel/suspend.c:904:
+	mdelay(1000);	/* We do not want some readahead with DMA to corrupt our memory, right?
+			   Do it with disabled interrupts for best effect. That way, if some

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2282: FILE: kernel/suspend.c:905:
+			   driver scheduled DMA, we have good chance for DMA to finish ;-). */

ERROR:SPACING: space prohibited after that open parenthesis '('
#2292: FILE: kernel/suspend.c:915:
+	PRINTR( "Freeing prev allocated pagedir\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2292: FILE: kernel/suspend.c:915:
+	PRINTR( "Freeing prev allocated pagedir\n" );

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#2294: FILE: kernel/suspend.c:917:
+	__flush_tlb_global();		/* Even mappings of "global" things (vmalloc) need to be fixed */

ERROR:SPACING: space prohibited after that open parenthesis '('
#2298: FILE: kernel/suspend.c:921:
+	PRINTK( "Fixing swap signatures... " );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2298: FILE: kernel/suspend.c:921:
+	PRINTK( "Fixing swap signatures... " );

ERROR:SPACING: space prohibited after that open parenthesis '('
#2300: FILE: kernel/suspend.c:923:
+	PRINTK( "ok\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2300: FILE: kernel/suspend.c:923:
+	PRINTK( "ok\n" );

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2302: FILE: kernel/suspend.c:925:
+#if 0

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#2303: FILE: kernel/suspend.c:926:
+	restore_task ();	/* Should not be neccessary! */
 	                	                 ^^^^^^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2303: FILE: kernel/suspend.c:926:
+	restore_task ();	/* Should not be neccessary! */

WARNING:MEMORY_BARRIER: memory barrier without comment
#2313: FILE: kernel/suspend.c:936:
+	mb();

WARNING:IF_1: Consider removing the #if 1 and its #endif
#2322: FILE: kernel/suspend.c:945:
+#if 1

WARNING:LONG_LINE_COMMENT: line length of 130 exceeds 100 columns
#2323: FILE: kernel/suspend.c:946:
+		suspend_power_down ();	/* FIXME: if suspend_power_down is commented out, console is lost after few suspends ?! */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2323: FILE: kernel/suspend.c:946:
+		suspend_power_down ();	/* FIXME: if suspend_power_down is commented out, console is lost after few suspends ?! */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2328: FILE: kernel/suspend.c:951:
+	printk(KERN_WARNING "%sSuspend failed, trying to recover...\n", name_suspend);

WARNING:MEMORY_BARRIER: memory barrier without comment
#2332: FILE: kernel/suspend.c:955:
+	mb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2334: FILE: kernel/suspend.c:957:
+^Ispin_lock_irq(&suspend_pagedir_lock);^I/* Done to disable interrupts */ $

CHECK:SPACING: No space is necessary after a cast
#2337: FILE: kernel/suspend.c:960:
+	free_pages((unsigned long) pagedir_nosave, pagedir_order);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2342: FILE: kernel/suspend.c:965:
+^Iprintk(KERN_WARNING "%sLeaving do_magic_suspend_2...\n", name_suspend);^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2342: FILE: kernel/suspend.c:965:
+	printk(KERN_WARNING "%sLeaving do_magic_suspend_2...\n", name_suspend);	

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_magic_suspend_2', this function's name, in a string
#2342: FILE: kernel/suspend.c:965:
+	printk(KERN_WARNING "%sLeaving do_magic_suspend_2...\n", name_suspend);	

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#2361: FILE: kernel/suspend.c:984:
+			/* No need to invalidate any vfsmnt list -- they will be valid after resume, anyway.

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#2363: FILE: kernel/suspend.c:986:
+			 * We sync here -- so you have consistent filesystem state when things go wrong.

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#2364: FILE: kernel/suspend.c:987:
+			 * -- so that noone writes to disk after we do atomic copy of data.
 			              ^^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#2366: FILE: kernel/suspend.c:989:
+			PRINTS( "Syncing disks before copy\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2366: FILE: kernel/suspend.c:989:
+			PRINTS( "Syncing disks before copy\n" );

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2368: FILE: kernel/suspend.c:991:
+#if 0

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2369: FILE: kernel/suspend.c:992:
+			schedule_timeout(1*HZ);	/* Is this needed to get data properly to disk? */
 			                  ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#2372: FILE: kernel/suspend.c:995:
+			if(drivers_suspend()==0)
 			                    ^

ERROR:SPACING: space required before the open parenthesis '('
#2372: FILE: kernel/suspend.c:995:
+			if(drivers_suspend()==0)

WARNING:LONG_LINE_COMMENT: line length of 126 exceeds 100 columns
#2373: FILE: kernel/suspend.c:996:
+				do_magic(0);			/* This function returns after machine woken up from resume */

ERROR:SPACING: space prohibited after that open parenthesis '('
#2379: FILE: kernel/suspend.c:1002:
+	PRINTR( "Done resume from %x\n", resume_dev );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2379: FILE: kernel/suspend.c:1002:
+	PRINTR( "Done resume from %x\n", resume_dev );

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2381: FILE: kernel/suspend.c:1004:
+	restore_console ();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2385: FILE: kernel/suspend.c:1008:
+^I{ routine: (void *)(void *)do_software_suspend, $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2385: FILE: kernel/suspend.c:1008:
+struct tq_struct suspend_tq =
+	{ routine: (void *)(void *)do_software_suspend, 

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2386: FILE: kernel/suspend.c:1009:
+	  data: 0 };
 	      ^

ERROR:SPACING: space required before the open parenthesis '('
#2394: FILE: kernel/suspend.c:1017:
+	if(!software_suspend_enabled)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2408: FILE: kernel/suspend.c:1031:
+	char *topointer=(char *)to, *frompointer=(char *)from;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2408: FILE: kernel/suspend.c:1031:
+	char *topointer=(char *)to, *frompointer=(char *)from;
 	                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2410: FILE: kernel/suspend.c:1033:
+	for(i=0; i < 1 << pagedir_order; i++) {
 	     ^

ERROR:SPACING: space required before the open parenthesis '('
#2410: FILE: kernel/suspend.c:1033:
+	for(i=0; i < 1 << pagedir_order; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2421: FILE: kernel/suspend.c:1044:
+ * Returns true if given address/order collides with any orig_address $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2424: FILE: kernel/suspend.c:1047:
+static int does_collide_order(suspend_pagedir_t *pagedir, unsigned long addr,
+		int order)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2427: FILE: kernel/suspend.c:1050:
+	unsigned long addre = addr + (PAGE_SIZE<<order);
 	                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2428: FILE: kernel/suspend.c:1051:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2429: FILE: kernel/suspend.c:1052:
+	for(i=0; i < nr_copy_pages; i++)
 	     ^

ERROR:SPACING: space required before the open parenthesis '('
#2429: FILE: kernel/suspend.c:1052:
+	for(i=0; i < nr_copy_pages; i++)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2430: FILE: kernel/suspend.c:1053:
+		if((pagedir+i)->orig_address >= addr &&
 		           ^

ERROR:SPACING: space required before the open parenthesis '('
#2430: FILE: kernel/suspend.c:1053:
+		if((pagedir+i)->orig_address >= addr &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2431: FILE: kernel/suspend.c:1054:
+		if((pagedir+i)->orig_address >= addr &&
+			(pagedir+i)->orig_address < addre)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2431: FILE: kernel/suspend.c:1054:
+			(pagedir+i)->orig_address < addre)
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2446: FILE: kernel/suspend.c:1069:
+	for(i=0; i < nr_copy_pages; i++) {
 	     ^

ERROR:SPACING: space required before the open parenthesis '('
#2446: FILE: kernel/suspend.c:1069:
+	for(i=0; i < nr_copy_pages; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#2451: FILE: kernel/suspend.c:1074:
+			if(!addr)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2455: FILE: kernel/suspend.c:1078:
+		(pagedir_nosave+i)->address = addr;
 		               ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2463: FILE: kernel/suspend.c:1086:
+	/* This is deep magic
+	   We have to avoid recursion (not to overflow kernel stack), and that's why

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2470: FILE: kernel/suspend.c:1093:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#2471: FILE: kernel/suspend.c:1094:
+	if(!does_collide_order(old_pagedir, (unsigned long)old_pagedir, pagedir_order)) {

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#2472: FILE: kernel/suspend.c:1095:
+		printk("not neccessary\n");
 		            ^^^^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2472: FILE: kernel/suspend.c:1095:
+		printk("not neccessary\n");

CHECK:SPACING: No space is necessary after a cast
#2476: FILE: kernel/suspend.c:1099:
+	while ((m = (void *) __get_free_pages(GFP_ATOMIC, pagedir_order))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2481: FILE: kernel/suspend.c:1104:
+^I^Iprintk( "." ); $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2481: FILE: kernel/suspend.c:1104:
+		printk( "." ); 

ERROR:SPACING: space prohibited after that open parenthesis '('
#2481: FILE: kernel/suspend.c:1104:
+		printk( "." ); 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2481: FILE: kernel/suspend.c:1104:
+		printk( "." ); 

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2489: FILE: kernel/suspend.c:1112:
+	pagedir_nosave = new_pagedir = m;

ERROR:SPACING: space required before the open parenthesis '('
#2493: FILE: kernel/suspend.c:1116:
+	while(c) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2494: FILE: kernel/suspend.c:1117:
+		printk(":");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2500: FILE: kernel/suspend.c:1123:
+	printk("okay\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2511: FILE: kernel/suspend.c:1134:
+	printk(KERN_ERR "%s%s\n",name_resume,reason);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2511: FILE: kernel/suspend.c:1134:
+	printk(KERN_ERR "%s%s\n",name_resume,reason);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2511: FILE: kernel/suspend.c:1134:
+	printk(KERN_ERR "%s%s\n",name_resume,reason);
 	                                    ^

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#2517: FILE: kernel/suspend.c:1140:
+	if(sh->version_code != LINUX_VERSION_CODE)

ERROR:SPACING: space required before the open parenthesis '('
#2517: FILE: kernel/suspend.c:1140:
+	if(sh->version_code != LINUX_VERSION_CODE)

ERROR:SPACING: space required before the open parenthesis '('
#2519: FILE: kernel/suspend.c:1142:
+	if(sh->num_physpages != num_physpages)

ERROR:SPACING: space required before the open parenthesis '('
#2521: FILE: kernel/suspend.c:1144:
+	if(strncmp(sh->machine, system_utsname.machine, 8))

ERROR:SPACING: space required before the open parenthesis '('
#2523: FILE: kernel/suspend.c:1146:
+	if(strncmp(sh->version, system_utsname.version, 20))

ERROR:SPACING: space required before the open parenthesis '('
#2525: FILE: kernel/suspend.c:1148:
+	if(sh->num_cpus != smp_num_cpus)

ERROR:SPACING: space required before the open parenthesis '('
#2527: FILE: kernel/suspend.c:1150:
+	if(sh->page_size != PAGE_SIZE)

WARNING:LONG_LINE_STRING: line length of 102 exceeds 100 columns
#2535: FILE: kernel/suspend.c:1158:
+	if ((pos%PAGE_SIZE) || (count != PAGE_SIZE)) panic("Sorry, dave, I can't let you do that!\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#2535: FILE: kernel/suspend.c:1158:
+	struct buffer_head *bh;
+	if ((pos%PAGE_SIZE) || (count != PAGE_SIZE)) panic("Sorry, dave, I can't let you do that!\n");

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#2535: FILE: kernel/suspend.c:1158:
+	if ((pos%PAGE_SIZE) || (count != PAGE_SIZE)) panic("Sorry, dave, I can't let you do that!\n");
 	        ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'count != PAGE_SIZE'
#2535: FILE: kernel/suspend.c:1158:
+	if ((pos%PAGE_SIZE) || (count != PAGE_SIZE)) panic("Sorry, dave, I can't let you do that!\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2535: FILE: kernel/suspend.c:1158:
+	if ((pos%PAGE_SIZE) || (count != PAGE_SIZE)) panic("Sorry, dave, I can't let you do that!\n");

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2536: FILE: kernel/suspend.c:1159:
+	bh = bread(dev, pos/PAGE_SIZE, PAGE_SIZE);
 	                   ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!bh->b_data'
#2537: FILE: kernel/suspend.c:1160:
+	if (!bh || (!bh->b_data)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2537: FILE: kernel/suspend.c:1160:
+	if (!bh || (!bh->b_data)) {
+		return -1;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2543: FILE: kernel/suspend.c:1166:
+} $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2547: FILE: kernel/suspend.c:1170:
+int resume_try_to_read(const char * specialfile)

CHECK:SPACING: No space is necessary after a cast
#2555: FILE: kernel/suspend.c:1178:
+	cur = (void *) get_free_page(GFP_ATOMIC);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2557: FILE: kernel/suspend.c:1180:
+		printk( "%sNot enough memory?\n", name_resume );

ERROR:SPACING: space prohibited after that open parenthesis '('
#2557: FILE: kernel/suspend.c:1180:
+		printk( "%sNot enough memory?\n", name_resume );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2557: FILE: kernel/suspend.c:1180:
+		printk( "%sNot enough memory?\n", name_resume );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2562: FILE: kernel/suspend.c:1185:
+	printk("Resuming from device %x\n", resume_device);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2565: FILE: kernel/suspend.c:1188:
+	if (!blksize_size[MAJOR(resume_device)]) {
[...]
+	} else blksize = blksize_size[MAJOR(resume_device)][MINOR(resume_device)];
[...]

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2566: FILE: kernel/suspend.c:1189:
+		printk("Blocksize not known?\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2567: FILE: kernel/suspend.c:1190:
+	} else blksize = blksize_size[MAJOR(resume_device)][MINOR(resume_device)];

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2569: FILE: kernel/suspend.c:1192:
+		printk("Blocksize not set?\n");

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#2574: FILE: kernel/suspend.c:1197:
+#define READTO(pos, ptr) \
+	if (bdev_read(resume_device, pos, ptr, PAGE_SIZE)) { error = -EIO; goto resume_read_error; }

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#2574: FILE: kernel/suspend.c:1197:
+#define READTO(pos, ptr) \
+	if (bdev_read(resume_device, pos, ptr, PAGE_SIZE)) { error = -EIO; goto resume_read_error; }

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2575: FILE: kernel/suspend.c:1198:
+	if (bdev_read(resume_device, pos, ptr, PAGE_SIZE)) { error = -EIO; goto resume_read_error; }

ERROR:CODE_INDENT: code indent should use tabs where possible
#2579: FILE: kernel/suspend.c:1202:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2579: FILE: kernel/suspend.c:1202:
+        }$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2584: FILE: kernel/suspend.c:1207:
+	if ((!memcmp("SWAP-SPACE",cur->swh.magic.magic,10)) ||
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2584: FILE: kernel/suspend.c:1207:
+	if ((!memcmp("SWAP-SPACE",cur->swh.magic.magic,10)) ||
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2585: FILE: kernel/suspend.c:1208:
+	    (!memcmp("SWAPSPACE2",cur->swh.magic.magic,10))) {
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2585: FILE: kernel/suspend.c:1208:
+	    (!memcmp("SWAPSPACE2",cur->swh.magic.magic,10))) {
 	                                              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2586: FILE: kernel/suspend.c:1209:
+		printk(KERN_ERR "%sThis is normal swap space\n", name_resume );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2586: FILE: kernel/suspend.c:1209:
+		printk(KERN_ERR "%sThis is normal swap space\n", name_resume );

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2593: FILE: kernel/suspend.c:1216:
+	if (!memcmp("SUSP1R",cur->swh.magic.magic,6))
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2593: FILE: kernel/suspend.c:1216:
+	if (!memcmp("SUSP1R",cur->swh.magic.magic,6))
 	                                         ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#2593: FILE: kernel/suspend.c:1216:
+	if (!memcmp("SUSP1R",cur->swh.magic.magic,6))
[...]
+	else if (!memcmp("SUSP2R",cur->swh.magic.magic,6))
[...]
+	else {
[...]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2594: FILE: kernel/suspend.c:1217:
+		memcpy(cur->swh.magic.magic,"SWAP-SPACE",10);
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2594: FILE: kernel/suspend.c:1217:
+		memcpy(cur->swh.magic.magic,"SWAP-SPACE",10);
 		                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2595: FILE: kernel/suspend.c:1218:
+	else if (!memcmp("SUSP2R",cur->swh.magic.magic,6))
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2595: FILE: kernel/suspend.c:1218:
+	else if (!memcmp("SUSP2R",cur->swh.magic.magic,6))
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2596: FILE: kernel/suspend.c:1219:
+		memcpy(cur->swh.magic.magic,"SWAPSPACE2",10);
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2596: FILE: kernel/suspend.c:1219:
+		memcpy(cur->swh.magic.magic,"SWAPSPACE2",10);
 		                                        ^

CHECK:BRACES: Unbalanced braces around else statement
#2597: FILE: kernel/suspend.c:1220:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2598: FILE: kernel/suspend.c:1221:
+^I^Ipanic("%sUnable to find suspended-data signature (%.10s - misspelled?\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2599: FILE: kernel/suspend.c:1222:
+		panic("%sUnable to find suspended-data signature (%.10s - misspelled?\n", 
+			name_resume, cur->swh.magic.magic);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2601: FILE: kernel/suspend.c:1224:
+	printk( "%sSignature found, resuming\n", name_resume );

ERROR:SPACING: space prohibited after that open parenthesis '('
#2601: FILE: kernel/suspend.c:1224:
+	printk( "%sSignature found, resuming\n", name_resume );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2601: FILE: kernel/suspend.c:1224:
+	printk( "%sSignature found, resuming\n", name_resume );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2610: FILE: kernel/suspend.c:1233:
+^I/* Probably this is the same machine */^I$

ERROR:SPACING: space required before the open parenthesis '('
#2621: FILE: kernel/suspend.c:1244:
+	if(!pagedir_nosave)

ERROR:SPACING: space prohibited after that open parenthesis '('
#2624: FILE: kernel/suspend.c:1247:
+	PRINTR( "%sReading pagedir, ", name_resume );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2624: FILE: kernel/suspend.c:1247:
+	PRINTR( "%sReading pagedir, ", name_resume );

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#2627: FILE: kernel/suspend.c:1250:
+	error=-EIO;
 	     ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#2627: FILE: kernel/suspend.c:1250:
+	error=-EIO;
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2628: FILE: kernel/suspend.c:1251:
+	for (i=nr_pgdir_pages-1; i>=0; i--) {
 	      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2628: FILE: kernel/suspend.c:1251:
+	for (i=nr_pgdir_pages-1; i>=0; i--) {
 	                     ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#2628: FILE: kernel/suspend.c:1251:
+	for (i=nr_pgdir_pages-1; i>=0; i--) {
 	                          ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#2630: FILE: kernel/suspend.c:1253:
+			panic( "Preliminary end of suspended data?" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2630: FILE: kernel/suspend.c:1253:
+			panic( "Preliminary end of suspended data?" );

CHECK:SPACING: No space is necessary after a cast
#2631: FILE: kernel/suspend.c:1254:
+		cur = (union diskpage *)((char *) pagedir_nosave)+i;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2631: FILE: kernel/suspend.c:1254:
+		cur = (union diskpage *)((char *) pagedir_nosave)+i;
 		                                                 ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#2636: FILE: kernel/suspend.c:1259:
+		panic( "Suspended data too long?" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2636: FILE: kernel/suspend.c:1259:
+		panic( "Suspended data too long?" );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2638: FILE: kernel/suspend.c:1261:
+	printk("Relocating pagedir");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2639: FILE: kernel/suspend.c:1262:
+	if((error=relocate_pagedir())!=0)
 	         ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#2639: FILE: kernel/suspend.c:1262:
+	if((error=relocate_pagedir())!=0)
 	                             ^

ERROR:SPACING: space required before the open parenthesis '('
#2639: FILE: kernel/suspend.c:1262:
+	if((error=relocate_pagedir())!=0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2639: FILE: kernel/suspend.c:1262:
+	if((error=relocate_pagedir())!=0)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2641: FILE: kernel/suspend.c:1264:
+	if((error=check_pagedir())!=0)
 	         ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#2641: FILE: kernel/suspend.c:1264:
+	if((error=check_pagedir())!=0)
 	                          ^

ERROR:SPACING: space required before the open parenthesis '('
#2641: FILE: kernel/suspend.c:1264:
+	if((error=check_pagedir())!=0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2641: FILE: kernel/suspend.c:1264:
+	if((error=check_pagedir())!=0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#2644: FILE: kernel/suspend.c:1267:
+	PRINTK( "image data (%d pages): ", nr_copy_pages );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2644: FILE: kernel/suspend.c:1267:
+	PRINTK( "image data (%d pages): ", nr_copy_pages );

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2646: FILE: kernel/suspend.c:1269:
+	for(i=0; i < nr_copy_pages; i++) {
 	     ^

ERROR:SPACING: space required before the open parenthesis '('
#2646: FILE: kernel/suspend.c:1269:
+	for(i=0; i < nr_copy_pages; i++) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2647: FILE: kernel/suspend.c:1270:
+		swp_entry_t swap_address = (pagedir_nosave+i)->swap_address;
 		                                          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2648: FILE: kernel/suspend.c:1271:
+		swp_entry_t swap_address = (pagedir_nosave+i)->swap_address;
+		if (!(i%100))

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#2648: FILE: kernel/suspend.c:1271:
+		if (!(i%100))
 		       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#2649: FILE: kernel/suspend.c:1272:
+			PRINTK( "." );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2649: FILE: kernel/suspend.c:1272:
+			PRINTK( "." );

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2650: FILE: kernel/suspend.c:1273:
+		next.val = SWP_OFFSET (swap_address) * PAGE_SIZE;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2652: FILE: kernel/suspend.c:1275:
+		/* You do not need to check for overlaps...
+		   ... check_pagedir already did this work */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2652: FILE: kernel/suspend.c:1275:
+		   ... check_pagedir already did this work */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2653: FILE: kernel/suspend.c:1276:
+		READTO(next.val, (char *)((pagedir_nosave+i)->address));
 		                                         ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#2655: FILE: kernel/suspend.c:1278:
+	PRINTK( " done\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2655: FILE: kernel/suspend.c:1278:
+	PRINTK( " done\n" );

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#2659: FILE: kernel/suspend.c:1282:
+	switch (error) {
+		case 0:
[...]
+		case -EINVAL:
[...]
+		case -EIO:
[...]
+		case -ENOENT:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2666: FILE: kernel/suspend.c:1289:
+			printk( "%sI/O error\n", name_resume);

ERROR:SPACING: space prohibited after that open parenthesis '('
#2666: FILE: kernel/suspend.c:1289:
+			printk( "%sI/O error\n", name_resume);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2670: FILE: kernel/suspend.c:1293:
+			printk( "%s%s: No such file or directory\n", name_resume, specialfile);

ERROR:SPACING: space prohibited after that open parenthesis '('
#2670: FILE: kernel/suspend.c:1293:
+			printk( "%s%s: No such file or directory\n", name_resume, specialfile);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2674: FILE: kernel/suspend.c:1297:
+			printk( "%sError %d resuming\n", name_resume, error );

ERROR:SPACING: space prohibited after that open parenthesis '('
#2674: FILE: kernel/suspend.c:1297:
+			printk( "%sError %d resuming\n", name_resume, error );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2674: FILE: kernel/suspend.c:1297:
+			printk( "%sError %d resuming\n", name_resume, error );

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2690: FILE: kernel/suspend.c:1313:
+	printk(KERN_WARNING "Software Suspend has a malfunctioning SMP support. Disabled :(\n");

ERROR:SPACING: space required before the open parenthesis '('
#2695: FILE: kernel/suspend.c:1318:
+	if(!resume_status)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2698: FILE: kernel/suspend.c:1321:
+	printk( "%s", name_resume );

ERROR:SPACING: space prohibited after that open parenthesis '('
#2698: FILE: kernel/suspend.c:1321:
+	printk( "%s", name_resume );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2698: FILE: kernel/suspend.c:1321:
+	printk( "%s", name_resume );

ERROR:SPACING: space required before the open parenthesis '('
#2699: FILE: kernel/suspend.c:1322:
+	if(resume_status == NORESUME) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2701: FILE: kernel/suspend.c:1324:
+		printk( "disabled\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#2701: FILE: kernel/suspend.c:1324:
+		printk( "disabled\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2701: FILE: kernel/suspend.c:1324:
+		printk( "disabled\n" );

ERROR:SPACING: space required before the open parenthesis '('
#2709: FILE: kernel/suspend.c:1332:
+	if(!resume_file[0] && resume_status == RESUME_SPECIFIED) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2710: FILE: kernel/suspend.c:1333:
+		printk( "nowhere to resume from\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#2710: FILE: kernel/suspend.c:1333:
+		printk( "nowhere to resume from\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2710: FILE: kernel/suspend.c:1333:
+		printk( "nowhere to resume from\n" );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2714: FILE: kernel/suspend.c:1337:
+	printk( "resuming from %s\n", resume_file);

ERROR:SPACING: space prohibited after that open parenthesis '('
#2714: FILE: kernel/suspend.c:1337:
+	printk( "resuming from %s\n", resume_file);

ERROR:SPACING: space required before the open parenthesis '('
#2715: FILE: kernel/suspend.c:1338:
+	if(resume_try_to_read(resume_file))

WARNING:RETURN_VOID: void function return statements are not generally useful
#2723: FILE: kernel/suspend.c:1346:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2725: FILE: kernel/suspend.c:1348:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#2728: FILE: kernel/suspend.c:1351:
+	if(resume_status)

ERROR:SPACING: space prohibited after that open parenthesis '('
#2731: FILE: kernel/suspend.c:1354:
+	strncpy( resume_file, str, 255 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2731: FILE: kernel/suspend.c:1354:
+	strncpy( resume_file, str, 255 );

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#2739: FILE: kernel/suspend.c:1362:
+	if(!resume_status)
+	  printk(KERN_WARNING "noresume option has overridden a resume= option\n");

ERROR:SPACING: space required before the open parenthesis '('
#2739: FILE: kernel/suspend.c:1362:
+	if(!resume_status)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2740: FILE: kernel/suspend.c:1363:
+	  printk(KERN_WARNING "noresume option has overridden a resume= option\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2742: FILE: kernel/suspend.c:1365:
+^I$

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#2746: FILE: kernel/suspend.c:1369:
+__setup("noresume", software_noresume);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#2747: FILE: kernel/suspend.c:1370:
+__setup("resume=", resume_setup);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2749: FILE: kernel/suspend.c:1372:
+EXPORT_SYMBOL(software_suspend);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2750: FILE: kernel/suspend.c:1373:
+EXPORT_SYMBOL(software_suspend_enabled);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2751: FILE: kernel/suspend.c:1374:
+EXPORT_SYMBOL(refrigerator);

ERROR:SPACING: space required before the open parenthesis '('
#2770: FILE: kernel/sys.c:329:
+		if(!software_suspend_enabled)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2772: FILE: kernel/sys.c:331:
+^I^I$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2800: FILE: mm/page_alloc.c:255:
+	unsigned type;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2803: FILE: mm/page_alloc.c:258:
+	for (type=0;type < MAX_NR_ZONES; type++) {
 	         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#2803: FILE: mm/page_alloc.c:258:
+	for (type=0;type < MAX_NR_ZONES; type++) {
 	           ^

WARNING:LONG_LINE_COMMENT: line length of 134 exceeds 100 columns
#2808: FILE: mm/page_alloc.c:263:
+		spin_lock_irqsave(&zone->lock, flags);	/* Should not matter as we need quiescent system for suspend anyway, but... */

WARNING:LINE_SPACING: Missing a blank line after declarations
#2808: FILE: mm/page_alloc.c:263:
+		struct list_head *head, *curr;
+		spin_lock_irqsave(&zone->lock, flags);	/* Should not matter as we need quiescent system for suspend anyway, but... */

ERROR:SPACING: space required before the open parenthesis '('
#2815: FILE: mm/page_alloc.c:270:
+			for(;;) {

ERROR:SPACING: space required before the open parenthesis '('
#2816: FILE: mm/page_alloc.c:271:
+				if(!curr) {

ERROR:SPACING: space required before the open parenthesis '('
#2820: FILE: mm/page_alloc.c:275:
+				if(p != memlist_entry(curr, struct page, list)) {

ERROR:SPACING: space required before the open parenthesis '('
#2828: FILE: mm/page_alloc.c:283:
+		} while(order--);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2831: FILE: mm/page_alloc.c:286:
+
+	}

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2845: FILE: mm/page_io.c:90:
+extern long suspend_device;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000466077.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 404 errors, 260 warnings, 104 checks, 2630 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000466077.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
