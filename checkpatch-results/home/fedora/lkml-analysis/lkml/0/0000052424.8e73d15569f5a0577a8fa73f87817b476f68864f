WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
this in -mm, so that it stands some chance of getting upstreamed at some point.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#41: FILE: drivers/block/DAC960.c:6135:
+  wait_queue_t __wait;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#42: FILE: drivers/block/DAC960.c:6136:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#42: FILE: drivers/block/DAC960.c:6136:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#43: FILE: drivers/block/DAC960.c:6137:
+  init_waitqueue_entry(&__wait, current);$

CHECK:CAMELCASE: Avoid CamelCase: <Controller>
#51: FILE: drivers/block/DAC960.c:6320:
+	  add_wait_queue(&Controller->CommandWaitQueue, &__wait);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <CommandWaitQueue>
#51: FILE: drivers/block/DAC960.c:6320:
+	  add_wait_queue(&Controller->CommandWaitQueue, &__wait);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#53: FILE: drivers/block/DAC960.c:6322:
+^I  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: drivers/block/DAC960.c:6331:
+^I   $

WARNING:LINE_SPACING: Missing a blank line after declarations
#75: FILE: drivers/net/tokenring/ibmtr.c:854:
+	wait_queue_t __wait;
+	init_waitqueue_entry(&__wait, current);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#108: FILE: include/linux/wait.h:367:
+extern void __deprecated FASTCALL(sleep_on(wait_queue_head_t *q));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#109: FILE: include/linux/wait.h:368:
+extern long __deprecated FASTCALL(sleep_on_timeout(wait_queue_head_t *q,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: include/linux/wait.h:369:
+extern long __deprecated FASTCALL(sleep_on_timeout(wait_queue_head_t *q,
 				      signed long timeout));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#112: FILE: include/linux/wait.h:370:
+extern void __deprecated FASTCALL(interruptible_sleep_on(wait_queue_head_t *q));

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#123: FILE: kernel/sched.c:3121:
+#define SLEEP_ON_BKLCHECK				\
+	if (unlikely(!kernel_locked()) &&		\
+	    sleep_on_bkl_warnings < 10) {		\
+		sleep_on_bkl_warnings++;		\
+		WARN_ON(1);				\
+	}

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000052424.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 5 warnings, 6 checks, 121 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000052424.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
