WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
 * Complete rework onf arch_prepare_kretprobe() and trampoline_probe_handler()

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#39: 
signed-off-by: Rusty Lynch <rusty.lynch@intel.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: arch/x86_64/kernel/kprobes.c:280:
+        struct kretprobe_instance *ri;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: arch/x86_64/kernel/kprobes.c:280:
+        struct kretprobe_instance *ri;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: arch/x86_64/kernel/kprobes.c:282:
+        if ((ri = get_free_rp_inst(rp)) != NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: arch/x86_64/kernel/kprobes.c:282:
+        if ((ri = get_free_rp_inst(rp)) != NULL) {$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#74: FILE: arch/x86_64/kernel/kprobes.c:282:
+        if ((ri = get_free_rp_inst(rp)) != NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: arch/x86_64/kernel/kprobes.c:283:
+                ri->rp = rp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: arch/x86_64/kernel/kprobes.c:283:
+                ri->rp = rp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: arch/x86_64/kernel/kprobes.c:284:
+                ri->task = current;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: arch/x86_64/kernel/kprobes.c:284:
+                ri->task = current;$

CHECK:SPACING: No space is necessary after a cast
#77: FILE: arch/x86_64/kernel/kprobes.c:285:
+		ri->ret_addr = (kprobe_opcode_t *) *sara;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: arch/x86_64/kernel/kprobes.c:290:
+                add_rp_inst(ri);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: arch/x86_64/kernel/kprobes.c:290:
+                add_rp_inst(ri);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: arch/x86_64/kernel/kprobes.c:291:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: arch/x86_64/kernel/kprobes.c:291:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: arch/x86_64/kernel/kprobes.c:292:
+                rp->nmissed++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: arch/x86_64/kernel/kprobes.c:292:
+                rp->nmissed++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: arch/x86_64/kernel/kprobes.c:293:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: arch/x86_64/kernel/kprobes.c:293:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: arch/x86_64/kernel/kprobes.c:406:
+        struct kretprobe_instance *ri = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: arch/x86_64/kernel/kprobes.c:406:
+        struct kretprobe_instance *ri = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: arch/x86_64/kernel/kprobes.c:407:
+        struct hlist_head *head;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: arch/x86_64/kernel/kprobes.c:407:
+        struct hlist_head *head;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: arch/x86_64/kernel/kprobes.c:408:
+        struct hlist_node *node, *tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: arch/x86_64/kernel/kprobes.c:408:
+        struct hlist_node *node, *tmp;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#131: FILE: arch/x86_64/kernel/kprobes.c:410:
+	unsigned long trampoline_address =(unsigned long)&kretprobe_trampoline;
 	                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: arch/x86_64/kernel/kprobes.c:412:
+        head = kretprobe_inst_table_head(current);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/x86_64/kernel/kprobes.c:412:
+        head = kretprobe_inst_table_head(current);$

WARNING:REPEATED_WORD: Possible repeated word: 'return'
#145: FILE: arch/x86_64/kernel/kprobes.c:418:
+	 * have a return probe installed on them, and/or more then one return
+	 * return probe was registered for a target function.

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: arch/x86_64/kernel/kprobes.c:423:
+         *       function, the first instance's ret_addr will point to the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: arch/x86_64/kernel/kprobes.c:428:
+                if (ri->task != current)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: arch/x86_64/kernel/kprobes.c:428:
+                if (ri->task != current)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: arch/x86_64/kernel/kprobes.c:430:
+                        continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: arch/x86_64/kernel/kprobes.c:430:
+                        continue;$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#177: FILE: arch/x86_64/kernel/kprobes.c:447:
+	BUG_ON(!orig_ret_address || (orig_ret_address == trampoline_address));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: arch/x86_64/kernel/kprobes.c:453:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: arch/x86_64/kernel/kprobes.c:454:
+         * By returning a non-zero value, we are telling$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: arch/x86_64/kernel/kprobes.c:455:
+         * kprobe_handler() that we have handled unlocking$

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: arch/x86_64/kernel/kprobes.c:456:
+         * and re-enabling preemption.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: arch/x86_64/kernel/kprobes.c:457:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: arch/x86_64/kernel/kprobes.c:458:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: arch/x86_64/kernel/kprobes.c:458:
+        return 1;$

CHECK:SPACING: No space is necessary after a cast
#208: FILE: arch/x86_64/kernel/kprobes.c:792:
+	.addr = (kprobe_opcode_t *) &kretprobe_trampoline,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174408.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 19 warnings, 2 checks, 164 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174408.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
