CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#64: FILE: kernel/uprobes.c:310:
+void remove_uprobe_breakpoints(struct address_space *mapping,
+				struct page *page, unsigned long offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: kernel/uprobes.c:326:
+		upage = find_get_page(mapping,
+				uprobe->offset >> PAGE_CACHE_SHIFT);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'page_off >= offset'
#83: FILE: kernel/uprobes.c:329:
+			if ((page_off >= offset) &&
+					(page_off < (offset + PAGE_SIZE)) &&
+					((page_off - offset) <= size))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: kernel/uprobes.c:330:
+			if ((page_off >= offset) &&
+					(page_off < (offset + PAGE_SIZE)) &&

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around uprobe->kp.opcode
#88: FILE: kernel/uprobes.c:334:
+						&(uprobe->kp.opcode),

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#148: FILE: mm/filemap.c:1171:
+int file_send_actor(read_descriptor_t * desc, struct page *page,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: mm/filemap.c:1172:
+int file_send_actor(read_descriptor_t * desc, struct page *page,
+			unsigned long offset, unsigned long size,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#203: FILE: include/linux/kprobes.h:243:
+extern void init_uprobes(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#204: FILE: include/linux/kprobes.h:244:
+extern void remove_uprobe_breakpoints(struct address_space *mapping,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: include/linux/kprobes.h:245:
+extern void remove_uprobe_breakpoints(struct address_space *mapping,
+				struct page *page, unsigned long offset,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#211: FILE: include/linux/kprobes.h:251:
+}
+static inline void remove_uprobe_breakpoints(struct address_space *mapping,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: include/linux/kprobes.h:252:
+static inline void remove_uprobe_breakpoints(struct address_space *mapping,
+				struct page *page, unsigned long offset,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#250: FILE: include/linux/fs.h:1599:
+extern int file_read_actor(read_descriptor_t * desc, struct page *page,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#250: FILE: include/linux/fs.h:1599:
+extern int file_read_actor(read_descriptor_t * desc, struct page *page,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: include/linux/fs.h:1600:
+extern int file_read_actor(read_descriptor_t * desc, struct page *page,
+		unsigned long offset, unsigned long size, struct address_space *mapping);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#252: FILE: include/linux/fs.h:1601:
+extern int file_send_actor(read_descriptor_t * desc, struct page *page,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#252: FILE: include/linux/fs.h:1601:
+extern int file_send_actor(read_descriptor_t * desc, struct page *page,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: include/linux/fs.h:1602:
+extern int file_send_actor(read_descriptor_t * desc, struct page *page,
+		unsigned long offset, unsigned long size, struct address_space *mapping);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000079321.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 0 warnings, 15 checks, 173 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000079321.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
