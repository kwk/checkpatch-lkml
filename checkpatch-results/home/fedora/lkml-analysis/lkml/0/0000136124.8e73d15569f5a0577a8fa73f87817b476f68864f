WARNING:LINE_SPACING: Missing a blank line after declarations
#67: FILE: drivers/mtd/chips/sharp.c:166:
+	map_word map_cmd;
+	map_cmd.x[0] = cmd;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#80: FILE: drivers/mtd/chips/sharp.c:176:
+	tmp = map_read(map, base+0);
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#83: FILE: drivers/mtd/chips/sharp.c:178:
+	sharp_send_cmd(map, CMD_READ_ID, base+0);
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#88: FILE: drivers/mtd/chips/sharp.c:180:
+	read0 = map_read(map, base+0);
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#89: FILE: drivers/mtd/chips/sharp.c:181:
+	read4 = map_read(map, base+4);
 	                          ^

ERROR:SPACING: space required before the open brace '{'
#90: FILE: drivers/mtd/chips/sharp.c:182:
+	if(read0.x[0] == 0x89898989){

ERROR:SPACING: space required before the open parenthesis '('
#90: FILE: drivers/mtd/chips/sharp.c:182:
+	if(read0.x[0] == 0x89898989){

ERROR:SPACING: space required before the open brace '{'
#93: FILE: drivers/mtd/chips/sharp.c:184:
+		switch(read4.x[0]){

ERROR:SPACING: space required before the open parenthesis '('
#93: FILE: drivers/mtd/chips/sharp.c:184:
+		switch(read4.x[0]){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#103: FILE: drivers/mtd/chips/sharp.c:206:
+			printk("Sort-of looks like sharp flash, 0x%08lx 0x%08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: drivers/mtd/chips/sharp.c:207:
+			printk("Sort-of looks like sharp flash, 0x%08lx 0x%08lx\n",
+				read0.x[0], read4.x[0]);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#107: FILE: drivers/mtd/chips/sharp.c:209:
+	}else if((map_read(map, base+0).x[0] == CMD_READ_ID)){
 	                            ^

ERROR:SPACING: space required before the open brace '{'
#107: FILE: drivers/mtd/chips/sharp.c:209:
+	}else if((map_read(map, base+0).x[0] == CMD_READ_ID)){

ERROR:SPACING: space required after that close brace '}'
#107: FILE: drivers/mtd/chips/sharp.c:209:
+	}else if((map_read(map, base+0).x[0] == CMD_READ_ID)){

ERROR:SPACING: space required before the open parenthesis '('
#107: FILE: drivers/mtd/chips/sharp.c:209:
+	}else if((map_read(map, base+0).x[0] == CMD_READ_ID)){

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#111: FILE: drivers/mtd/chips/sharp.c:212:
+		map_write(map, tmp, base+0);
 		                        ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#115: FILE: drivers/mtd/chips/sharp.c:214:
+		printk("Doesn't look like sharp flash, 0x%08lx 0x%08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: drivers/mtd/chips/sharp.c:215:
+		printk("Doesn't look like sharp flash, 0x%08lx 0x%08lx\n",
+			read0.x[0], read4.x[0]);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#142: FILE: drivers/mtd/chips/sharp.c:240:
+			if((status.x[0] & SR_READY)==SR_READY)
 			                           ^

ERROR:SPACING: space required before the open parenthesis '('
#142: FILE: drivers/mtd/chips/sharp.c:240:
+			if((status.x[0] & SR_READY)==SR_READY)

ERROR:SPACING: space required before the open parenthesis '('
#183: FILE: drivers/mtd/chips/sharp.c:379:
+			if((status.x[0] & SR_READY) == SR_READY)

ERROR:SPACING: space required before the open parenthesis '('
#191: FILE: drivers/mtd/chips/sharp.c:386:
+		if(!(status.x[0] & SR_ERRORS))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#195: FILE: drivers/mtd/chips/sharp.c:389:
+		printk("sharp: error writing byte at addr=%08lx status=%08lx\n", adr, status.x[0]);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#226: FILE: drivers/mtd/chips/sharp.c:457:
+		if((status.x[0] & SR_READY)==SR_READY){
 		                           ^

ERROR:SPACING: space required before the open brace '{'
#226: FILE: drivers/mtd/chips/sharp.c:457:
+		if((status.x[0] & SR_READY)==SR_READY){

ERROR:SPACING: space required before the open parenthesis '('
#226: FILE: drivers/mtd/chips/sharp.c:457:
+		if((status.x[0] & SR_READY)==SR_READY){

ERROR:SPACING: space required before the open brace '{'
#260: FILE: drivers/mtd/chips/sharp.c:509:
+	if(!(status.x[0] & SR_ERRORS)){

ERROR:SPACING: space required before the open parenthesis '('
#260: FILE: drivers/mtd/chips/sharp.c:509:
+	if(!(status.x[0] & SR_ERRORS)){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#269: FILE: drivers/mtd/chips/sharp.c:516:
+	printk("sharp: error erasing block at addr=%08lx status=%08lx\n", adr, status.x[0]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#291: FILE: drivers/mtd/chips/sharp.c:537:
+	printk("status=%08lx\n", status.x[0]);

ERROR:SPACING: space required before the open parenthesis '('
#299: FILE: drivers/mtd/chips/sharp.c:542:
+		if((status.x[0] & SR_READY) == SR_READY)

ERROR:SPACING: space required before the open brace '{'
#309: FILE: drivers/mtd/chips/sharp.c:550:
+	if(!(status.x[0] & SR_ERRORS)){

ERROR:SPACING: space required before the open parenthesis '('
#309: FILE: drivers/mtd/chips/sharp.c:550:
+	if(!(status.x[0] & SR_ERRORS)){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#317: FILE: drivers/mtd/chips/sharp.c:556:
+	printk("sharp: error unlocking block at addr=%08lx status=%08lx\n", adr, status.x[0]);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000136124.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 7 warnings, 8 checks, 259 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000136124.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
