ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: fs/proc/proc_tty.c:108:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ld"
#88: FILE: fs/proc/proc_tty.c:111:
+		if (ld == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#116: FILE: include/linux/tty.h:325:
+#define TTY_THROTTLED ^I^I0^I/* Call unthrottle() at threshold min */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#117: FILE: include/linux/tty.h:326:
+#define TTY_IO_ERROR ^I^I1^I/* Canse an I/O error (may be no ldisc too) */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#118: FILE: include/linux/tty.h:327:
+#define TTY_OTHER_CLOSED ^I2^I/* Other side (if any) has closed */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#119: FILE: include/linux/tty.h:328:
+#define TTY_EXCLUSIVE ^I^I3^I/* Exclusive open mode */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#120: FILE: include/linux/tty.h:329:
+#define TTY_DEBUG ^I^I4^I/* Debugging */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#121: FILE: include/linux/tty.h:330:
+#define TTY_DO_WRITE_WAKEUP ^I5^I/* Call write_wakeup after queuing new */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#122: FILE: include/linux/tty.h:331:
+#define TTY_PUSH ^I^I6^I/* n_tty private */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#123: FILE: include/linux/tty.h:332:
+#define TTY_CLOSING ^I^I7^I/* ->close() in progress */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#124: FILE: include/linux/tty.h:333:
+#define TTY_DONT_FLIP ^I^I8^I/* Defer buffer flip */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#125: FILE: include/linux/tty.h:334:
+#define TTY_LDISC ^I^I9^I/* Line discipline attached */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#126: FILE: include/linux/tty.h:335:
+#define TTY_HW_COOK_OUT ^I14^I/* Hardware can do output cooking */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#127: FILE: include/linux/tty.h:336:
+#define TTY_HW_COOK_IN ^I^I15^I/* Hardware can do input cooking */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#128: FILE: include/linux/tty.h:337:
+#define TTY_PTY_LOCK ^I^I16^I/* pty private */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#129: FILE: include/linux/tty.h:338:
+#define TTY_NO_WRITE_SPLIT ^I17^I/* Preserve write boundaries to driver */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#130: FILE: include/linux/tty.h:339:
+#define TTY_HUPPED ^I^I18^I/* Post driver->hangup() */$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#146: FILE: include/linux/tty.h:401:
+extern struct tty_ldisc *tty_ldisc_ref(struct tty_struct *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#146: FILE: include/linux/tty.h:401:
+extern struct tty_ldisc *tty_ldisc_ref(struct tty_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#147: FILE: include/linux/tty.h:402:
+extern void tty_ldisc_deref(struct tty_ldisc *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_ldisc *' should also have an identifier name
#147: FILE: include/linux/tty.h:402:
+extern void tty_ldisc_deref(struct tty_ldisc *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#148: FILE: include/linux/tty.h:403:
+extern struct tty_ldisc *tty_ldisc_ref_wait(struct tty_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#148: FILE: include/linux/tty.h:403:
+extern struct tty_ldisc *tty_ldisc_ref_wait(struct tty_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#150: FILE: include/linux/tty.h:405:
+extern struct tty_ldisc *tty_ldisc_get(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#150: FILE: include/linux/tty.h:405:
+extern struct tty_ldisc *tty_ldisc_get(int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#151: FILE: include/linux/tty.h:406:
+extern void tty_ldisc_put(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#151: FILE: include/linux/tty.h:406:
+extern void tty_ldisc_put(int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#153: FILE: include/linux/tty.h:408:
+extern void tty_wakeup(struct tty_struct *tty);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#155: FILE: include/linux/tty.h:410:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: drivers/net/ppp_async.c:121:
+ * FIXME: this is no longer true. The _close path for the ldisc is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: drivers/net/ppp_async.c:122:
+ * now guaranteed to be sane. $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#196: FILE: drivers/net/ppp_async.c:256:
+/*
+ * Called in process context only. May be re-entered by multiple

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: drivers/net/ppp_async.c:259:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: drivers/net/ppp_async.c:259:
+ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#219: FILE: drivers/net/ppp_async.c:833:
+/* Called when the tty driver has data for us. Runs parallel with the
+   other ldisc functions but will not be re-entered */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#219: FILE: drivers/net/ppp_async.c:833:
+   other ldisc functions but will not be re-entered */

WARNING:TYPO_SPELLING: 'nowdays' may be misspelled - perhaps 'nowadays'?
#231: FILE: drivers/net/ppp_synctty.c:176:
+ * FIXME: Fixed in tty_io nowdays.
                           ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: drivers/net/slip.c:919:
+  $

WARNING:LINE_SPACING: Missing a blank line after declarations
#303: FILE: drivers/char/pcmcia/synclink_cs.c:569:
+	struct tty_ldisc *ld = tty_ldisc_ref(tty);
+	if (ld) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#314: FILE: drivers/char/pcmcia/synclink_cs.c:580:
+	struct tty_ldisc *ld;
+	if (!tty)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#363: FILE: drivers/char/pcmcia/synclink_cs.c:2714:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#364: FILE: drivers/char/pcmcia/synclink_cs.c:2715:
+^Ildisc_flush_buffer(tty);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#403: FILE: drivers/char/tty_io.c:268:
+ */    $

WARNING:LINE_SPACING: Missing a blank line after declarations
#408: FILE: drivers/char/tty_io.c:273:
+	unsigned long flags;
+	spin_lock_irqsave(&tty_termios_lock, flags);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#425: FILE: drivers/char/tty_io.c:290:
 {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#445: FILE: drivers/char/tty_io.c:304:
+		if(tty_ldiscs[disc].refcount)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#449: FILE: drivers/char/tty_io.c:308:
+        }$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: drivers/char/tty_io.c:308:
+        }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#457: FILE: drivers/char/tty_io.c:315:
 
+

ERROR:SPACING: space required before the open parenthesis '('
#473: FILE: drivers/char/tty_io.c:330:
+	if(ld->flags & LDISC_FLAG_DEFINED)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#481: FILE: drivers/char/tty_io.c:338:
+EXPORT_SYMBOL_GPL(tty_ldisc_get);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#489: FILE: drivers/char/tty_io.c:346:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space required before the open parenthesis '('
#493: FILE: drivers/char/tty_io.c:350:
+	if(ld->refcount <= 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#494: FILE: drivers/char/tty_io.c:351:
+		BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#498: FILE: drivers/char/tty_io.c:355:
+      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: drivers/char/tty_io.c:355:
+      $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#499: FILE: drivers/char/tty_io.c:356:
+EXPORT_SYMBOL_GPL(tty_ldisc_put);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#525: FILE: drivers/char/tty_io.c:382:
+	if(test_bit(TTY_LDISC, &tty->flags))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#525: FILE: drivers/char/tty_io.c:382:
+	if(test_bit(TTY_LDISC, &tty->flags))

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#555: FILE: drivers/char/tty_io.c:412:
+EXPORT_SYMBOL_GPL(tty_ldisc_ref_wait);

ERROR:SPACING: space required before the open parenthesis '('
#568: FILE: drivers/char/tty_io.c:425:
+	if(tty_ldisc_try(tty))

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#573: FILE: drivers/char/tty_io.c:430:
+EXPORT_SYMBOL_GPL(tty_ldisc_ref);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#575: FILE: drivers/char/tty_io.c:432:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#578: FILE: drivers/char/tty_io.c:435:
+{
+

ERROR:SPACING: space required before the open parenthesis '('
#581: FILE: drivers/char/tty_io.c:438:
+	if(ld == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ld"
#581: FILE: drivers/char/tty_io.c:438:
+	if(ld == NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#582: FILE: drivers/char/tty_io.c:439:
+		BUG();

ERROR:SPACING: space required before the open parenthesis '('
#585: FILE: drivers/char/tty_io.c:442:
+	if(ld->refcount == 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#586: FILE: drivers/char/tty_io.c:443:
+		printk(KERN_EMERG "tty_ldisc_deref: no references.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tty_ldisc_deref', this function's name, in a string
#586: FILE: drivers/char/tty_io.c:443:
+		printk(KERN_EMERG "tty_ldisc_deref: no references.\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space required before the open parenthesis '('
#589: FILE: drivers/char/tty_io.c:446:
+	if(ld->refcount == 0)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#594: FILE: drivers/char/tty_io.c:451:
+EXPORT_SYMBOL_GPL(tty_ldisc_deref);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#626: FILE: drivers/char/tty_io.c:482:
+	if (ld == NULL)
+	{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ld"
#626: FILE: drivers/char/tty_io.c:482:
+	if (ld == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#631: FILE: drivers/char/tty_io.c:485:
+                sprintf(modname, "tty-ldisc-%d", ldisc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: drivers/char/tty_io.c:485:
+                sprintf(modname, "tty-ldisc-%d", ldisc);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#632: FILE: drivers/char/tty_io.c:486:
+                request_module (modname);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: drivers/char/tty_io.c:486:
+                request_module (modname);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#632: FILE: drivers/char/tty_io.c:486:
+                request_module (modname);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#636: FILE: drivers/char/tty_io.c:489:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ld"
#637: FILE: drivers/char/tty_io.c:490:
+	if (ld == NULL)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#651: FILE: drivers/char/tty_io.c:501:
+	if(tty->ldisc.refcount)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#651: FILE: drivers/char/tty_io.c:501:
+	if(tty->ldisc.refcount)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#654: FILE: drivers/char/tty_io.c:504:
+		/* Free the new ldisc we grabbed. Must drop the lock
+		   first. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#654: FILE: drivers/char/tty_io.c:504:
+		   first. */

ERROR:SPACING: space required before the open parenthesis '('
#657: FILE: drivers/char/tty_io.c:507:
+		if(wait_event_interruptible(tty_ldisc_wait, tty->ldisc.refcount == 0) < 0)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#707: FILE: drivers/char/tty_io.c:554:
+	/* At this point we hold a reference to the new ldisc and a
+	    reference to the old ldisc. If we ended up flipping back

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#708: FILE: drivers/char/tty_io.c:555:
+	    to the existing ldisc we have two references to it */

ERROR:SPACING: space required before the open parenthesis '('
#741: FILE: drivers/char/tty_io.c:682:
+		if(ld) {

ERROR:SPACING: space required before the open parenthesis '('
#742: FILE: drivers/char/tty_io.c:683:
+			if(ld->write_wakeup)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#749: FILE: drivers/char/tty_io.c:690:
+EXPORT_SYMBOL_GPL(tty_wakeup);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#767: FILE: drivers/char/tty_io.c:739:
+^Iif(ld != NULL)^I$

ERROR:SPACING: space required before the open parenthesis '('
#767: FILE: drivers/char/tty_io.c:739:
+	if(ld != NULL)	

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#767: FILE: drivers/char/tty_io.c:739:
+	if(ld != NULL)	

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#794: FILE: drivers/char/tty_io.c:759:
 	if (tty->driver.flags & TTY_DRIVER_RESET_TERMIOS)
+	{

WARNING:LINE_SPACING: Missing a blank line after declarations
#809: FILE: drivers/char/tty_io.c:762:
+		unsigned long flags;
+		spin_lock_irqsave(&tty_termios_lock, flags);

ERROR:CODE_INDENT: code indent should use tabs where possible
#810: FILE: drivers/char/tty_io.c:763:
+                *tty->termios = tty->driver.init_termios;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#810: FILE: drivers/char/tty_io.c:763:
+                *tty->termios = tty->driver.init_termios;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#817: FILE: drivers/char/tty_io.c:769:
+	/* tty_deferred_ldisc_switch(N_TTY);
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#827: FILE: drivers/char/tty_io.c:802:
+	/* We don't want to have driver/ldisc interactions beyond
+	   the ones we did here. The driver layer expects no

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#829: FILE: drivers/char/tty_io.c:804:
+	   can't yet guarantee all that */

ERROR:SPACING: space required before the open parenthesis '('
#832: FILE: drivers/char/tty_io.c:807:
+	if(ld)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#862: FILE: drivers/char/tty_io.c:953:
+	/* We want to wait for the line discipline to sort out in this
+	   situation */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#862: FILE: drivers/char/tty_io.c:953:
+	   situation */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#868: FILE: drivers/char/tty_io.c:957:
+		i = (ld->read)(tty,file,buf,count);
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#868: FILE: drivers/char/tty_io.c:957:
+		i = (ld->read)(tty,file,buf,count);
 		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#868: FILE: drivers/char/tty_io.c:957:
+		i = (ld->read)(tty,file,buf,count);
 		                           ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (ld->read)
#868: FILE: drivers/char/tty_io.c:957:
+		i = (ld->read)(tty,file,buf,count);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#898: FILE: drivers/char/tty_io.c:1083:
+		ret = do_tty_write(ld->write, tty, file,
+				(const unsigned char __user *)buf, count);

ERROR:SPACING: space required before the open parenthesis '('
#920: FILE: drivers/char/tty_io.c:1281:
+	if(!test_bit(TTY_LDISC, &tty->flags))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#921: FILE: drivers/char/tty_io.c:1282:
+		printk(KERN_ERR "init_dev but no ldisc\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#946: FILE: drivers/char/tty_io.c:1565:
+         * side waiters as the file is closing so user count on the file$

ERROR:CODE_INDENT: code indent should use tabs where possible
#947: FILE: drivers/char/tty_io.c:1566:
+         * side is zero.$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#951: FILE: drivers/char/tty_io.c:1570:
+	while(tty->ldisc.refcount)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#951: FILE: drivers/char/tty_io.c:1570:
+	while(tty->ldisc.refcount)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#974: FILE: drivers/char/tty_io.c:1591:
+^Itty_set_termios_ldisc(tty,N_TTY); $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#974: FILE: drivers/char/tty_io.c:1591:
+	tty_set_termios_ldisc(tty,N_TTY); 
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#984: FILE: drivers/char/tty_io.c:1600:
+		tty_set_termios_ldisc(o_tty,N_TTY);
 		                           ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1004: FILE: drivers/char/tty_io.c:1791:
+		ret = (ld->poll)(tty, filp, wait);
 		                      ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (ld->poll)
#1004: FILE: drivers/char/tty_io.c:1791:
+		ret = (ld->poll)(tty, filp, wait);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (tty->driver.ioctl)
#1048: FILE: drivers/char/tty_io.c:2168:
+		retval = (tty->driver.ioctl)(tty, file, cmd, arg);

ERROR:SPACING: space required before the open parenthesis '('
#1059: FILE: drivers/char/tty_io.c:2175:
+		if(likely(test_bit(TTY_LDISC, &tty->flags)))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1098: FILE: drivers/char/tty_io.c:2279:
+^Iunsigned long ^Iflags;$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!disc"
#1102: FILE: drivers/char/tty_io.c:2283:
+	if (disc == NULL)       /*  !TTY_LDISC */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1131: FILE: drivers/char/tty_io.c:2325:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#1133: FILE: drivers/char/tty_io.c:2327:
+	if(test_bit(TTY_DONT_FLIP, &tty->flags))

ERROR:SPACING: space required before the open parenthesis '('
#1135: FILE: drivers/char/tty_io.c:2329:
+	else if(disc == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!disc"
#1135: FILE: drivers/char/tty_io.c:2329:
+	else if(disc == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1159: FILE: drivers/char/tty_io.c:2583:
+	memset(tty_ldiscs, 0, NR_LDISCS*sizeof(struct tty_ldisc));
 	                               ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1186: FILE: drivers/char/tty_ioctl.c:109:
+	/* FIXME: we need to decide on some locking/ordering semantics
+	   for the set_termios notification eventually */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1186: FILE: drivers/char/tty_ioctl.c:109:
+	   for the set_termios notification eventually */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#1208: FILE: drivers/char/tty_ioctl.c:145:
+	if (ld != NULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (ld->set_termios)
#1210: FILE: drivers/char/tty_ioctl.c:147:
+			(ld->set_termios)(tty, &old_termios);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#1234: FILE: drivers/char/tty_ioctl.c:176:
+	if (ld != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#1366: FILE: drivers/char/amiserial.c:1609:
+	if (ld != NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1392: FILE: drivers/char/cyclades.c:2801:
+  struct tty_ldisc *ld;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1403: FILE: drivers/char/cyclades.c:2920:
+    ld = tty_ldisc_ref(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1404: FILE: drivers/char/cyclades.c:2921:
+    if (ld) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 11)
#1404: FILE: drivers/char/cyclades.c:2921:
+    if (ld) {
+	   if (ld->flush_buffer)

WARNING:TABSTOP: Statements should start on a tabstop
#1405: FILE: drivers/char/cyclades.c:2922:
+	   if (ld->flush_buffer)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 15)
#1405: FILE: drivers/char/cyclades.c:2922:
+	   if (ld->flush_buffer)
+	       ld->flush_buffer(tty);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1408: FILE: drivers/char/cyclades.c:2925:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1416: FILE: drivers/char/cyclades.c:4695:
+    tty_wakeup(tty);$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#1441: FILE: drivers/char/epca.c:590:
+		if (ld != NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#1442: FILE: drivers/char/epca.c:591:
+			if(ld->flush_buffer)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#1461: FILE: drivers/char/epca.c:703:
+		if (ld != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1541: FILE: drivers/char/generic_serial.c:729:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#1553: FILE: drivers/char/generic_serial.c:804:
+	if (ld != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1554: FILE: drivers/char/generic_serial.c:805:
+^I^Iif (ld->flush_buffer) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1572: FILE: drivers/char/isicom.c:506:
+^Itty_wakeup(tty);^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#1589: FILE: drivers/char/isicom.c:1202:
+	if (ld != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#1626: FILE: drivers/char/moxa.c:683:
+	if (ld != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1741: FILE: drivers/char/n_tty.c:126:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1741: FILE: drivers/char/n_tty.c:126:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1757: FILE: drivers/char/n_tty.c:139:
+ *^IReset the read buffer counters, clear the flags, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1781: FILE: drivers/char/n_tty.c:167:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1781: FILE: drivers/char/n_tty.c:167:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1796: FILE: drivers/char/n_tty.c:187:
+ *^Iat this instant in time. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1798: FILE: drivers/char/n_tty.c:189:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1798: FILE: drivers/char/n_tty.c:189:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1822: FILE: drivers/char/n_tty.c:283:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1822: FILE: drivers/char/n_tty.c:283:
+ $

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#1835: FILE: drivers/char/n_tty.c:377:
+ *	Perform erase and neccessary output when an erase character is
   	                  ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1839: FILE: drivers/char/n_tty.c:381:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1839: FILE: drivers/char/n_tty.c:381:
+ $

WARNING:TYPO_SPELLING: 'optio' may be misspelled - perhaps 'option'?
#1848: FILE: drivers/char/n_tty.c:499:
+ *	isig		-	handle the ISIG optio
   	    		 	                ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1858: FILE: drivers/char/n_tty.c:509:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1858: FILE: drivers/char/n_tty.c:509:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1875: FILE: drivers/char/n_tty.c:530:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1875: FILE: drivers/char/n_tty.c:530:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1895: FILE: drivers/char/n_tty.c:559:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1895: FILE: drivers/char/n_tty.c:559:
+ $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1903: FILE: drivers/char/n_tty.c:566:
+		printk(KERN_WARNING "%s: %d input overrun(s)\n", tty_name(tty, buf),

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#1916: FILE: drivers/char/n_tty.c:579:
+ *	the error case if neccessary. Locking as per n_tty_receive_buf.
   	                  ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1931: FILE: drivers/char/n_tty.c:604:
+ *^IThis is serialized with respect to itself by the rules for the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1951: FILE: drivers/char/n_tty.c:808:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1951: FILE: drivers/char/n_tty.c:808:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1989: FILE: drivers/char/n_tty.c:858:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1989: FILE: drivers/char/n_tty.c:858:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2004: FILE: drivers/char/n_tty.c:947:
+ *^Iand is protected from re-entry by the tty layer. The user is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2008: FILE: drivers/char/n_tty.c:951:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2008: FILE: drivers/char/n_tty.c:951:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2036: FILE: drivers/char/n_tty.c:1019:
+ *^ICalled from the terminal layer when this line discipline is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2037: FILE: drivers/char/n_tty.c:1020:
+ *^Ibeing shut down, either because of a close or becsuse of a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2041: FILE: drivers/char/n_tty.c:1024:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2041: FILE: drivers/char/n_tty.c:1024:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2053: FILE: drivers/char/n_tty.c:1038:
+ *^ICalled when this line discipline is being attached to the $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2080: FILE: drivers/char/n_tty.c:1076:
+ * ^Icopy_from_read_buf^I-^Icopy read data directly$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2095: FILE: drivers/char/n_tty.c:1091:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2095: FILE: drivers/char/n_tty.c:1091:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2142: FILE: drivers/char/n_tty.c:1151:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2142: FILE: drivers/char/n_tty.c:1151:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2158: FILE: drivers/char/n_tty.c:1167:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2158: FILE: drivers/char/n_tty.c:1167:
+ $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2174: FILE: drivers/char/n_tty.c:1183:
+		printk("n_tty_read_chan: called with read_buf == NULL?!?\n");

ERROR:SPACING: space required before the open parenthesis '('
#2179: FILE: drivers/char/n_tty.c:1188:
+	if(c < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2181: FILE: drivers/char/n_tty.c:1190:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2213: FILE: drivers/char/n_tty.c:1364:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2213: FILE: drivers/char/n_tty.c:1364:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2240: FILE: drivers/char/n_tty.c:1454:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2240: FILE: drivers/char/n_tty.c:1454:
+ $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#2272: FILE: drivers/char/riscom8.c:1205:
+	if (ld != NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#2273: FILE: drivers/char/riscom8.c:1206:
+		if(ld->flush_buffer)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2344: FILE: drivers/char/synclink.c:1027:
+	struct tty_ldisc *ld = tty_ldisc_ref(tty);
+	if (ld) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#2355: FILE: drivers/char/synclink.c:1038:
+	struct tty_ldisc *ld;
+	if (!tty)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2404: FILE: drivers/char/synclink.c:3370:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2405: FILE: drivers/char/synclink.c:3371:
+^Ildisc_flush_buffer(tty);^I$

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#2418: FILE: drivers/char/synclink.c:7034:
+				ldisc_receive_buf(tty, info->intermediate_rxbuffer, info->flag_buf, framesize);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#2429: FILE: drivers/char/synclink.c:7206:
+			ldisc_receive_buf(tty, info->intermediate_rxbuffer, info->flag_buf, framesize);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2452: FILE: drivers/char/synclinkmp.c:751:
+	struct tty_ldisc *ld = tty_ldisc_ref(tty);
+	if (ld) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#2463: FILE: drivers/char/synclinkmp.c:762:
+	struct tty_ldisc *ld;
+	if (!tty)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2525: FILE: drivers/char/synclinkmp.c:5017:
+				ldisc_receive_buf(tty,info->tmp_rx_buf,
 				                     ^

ERROR:SPACING: space required before the open parenthesis '('
#2552: FILE: drivers/char/pcxx.c:635:
+		if(tty->ldisc.num != N_TTY) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2567: FILE: drivers/char/serial167.c:1923:
+    if (tty->ldisc.num != N_TTY) {$

ERROR:SPACING: space required before the open parenthesis '('
#2623: FILE: drivers/bluetooth/hci_ldisc.c:193:
+		if(ld->flush_buffer)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2637: FILE: drivers/bluetooth/hci_ldisc.c:291:
+	/* FIXME: why is this needed. Note don't use ldisc_ref here as the
+	   open path is before the ldisc is referencable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2637: FILE: drivers/bluetooth/hci_ldisc.c:291:
+	   open path is before the ldisc is referencable */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2658: FILE: Documentation/tty.txt:15:
+discipline number and the ldisc structure. At the point of registration the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2663: FILE: Documentation/tty.txt:20:
+After the return the ldisc data has been copied so you may free your own $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2675: FILE: Documentation/tty.txt:32:
+discipline. The reference count of the tty_ldisc structure within a tty $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2711: FILE: Documentation/tty.txt:68:
+^I^I^Ildisc must deal with serialization issues. May $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2719: FILE: Documentation/tty.txt:76:
+^I^I^Imay occur in parallel. May sleep. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2765: FILE: Documentation/tty.txt:122:
+ldisc change to complete and then return a reference to the new ldisc. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2771: FILE: Documentation/tty.txt:128:
+A caution: The ldisc->open(), ldisc->close() and driver->set_ldisc $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2774: FILE: Documentation/tty.txt:131:
+code calling its own functions must be careful in this case. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2783: FILE: Documentation/tty.txt:140:
+^I^I^Ireturn from this call the driver must make no $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2787: FILE: Documentation/tty.txt:144:
+^I^I^Isleep. May occur in parallel in special cases. $

WARNING:TYPO_SPELLING: 'tht' may be misspelled - perhaps 'the'?
#2797: FILE: Documentation/tty.txt:154:
+write_room()	-	Return the number of characters tht can be stuffed
             	 	                                ^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2807: FILE: Documentation/tty.txt:164:
+set_ldisc()^I-^INotifier for discipline change. At the point this $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247008.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 95 errors, 101 warnings, 33 checks, 2571 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247008.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
