WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
--- linux-2.5.62-numaq/arch/i386/kernel/io_apic.c	24 Feb 2003 06:55:02 -0000	1.2

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/topology.h> instead of <asm/topology.h>
#31: FILE: arch/i386/kernel/io_apic.c:38:
+#include <asm/topology.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#41: FILE: arch/i386/kernel/io_apic.c:1007:
+unsigned int inline ioapic_to_node(unsigned int ioapic)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#46: FILE: arch/i386/kernel/io_apic.c:1012:
+int irq_vector[MAX_NUMNODES][NR_IRQS] = {[0 ... MAX_NUMNODES-1] = { FIRST_DEVICE_VECTOR , 0 }};
                                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#46: FILE: arch/i386/kernel/io_apic.c:1012:
+int irq_vector[MAX_NUMNODES][NR_IRQS] = {[0 ... MAX_NUMNODES-1] = { FIRST_DEVICE_VECTOR , 0 }};
                                                                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#55: FILE: arch/i386/kernel/io_apic.c:1017:
+	static int current_vector[MAX_NUMNODES] = {[0 ... MAX_NUMNODES-1] = FIRST_DEVICE_VECTOR},
 	                                                              ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#58: FILE: arch/i386/kernel/io_apic.c:1020:
+	printk("requesting vector for node%d/irq%d\n", node, irq);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#61: FILE: arch/i386/kernel/io_apic.c:1023:
+			printk("returning previous allocation (node%d) vector0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#62: FILE: arch/i386/kernel/io_apic.c:1024:
+			printk("returning previous allocation (node%d) vector0x%x\n",
+				i, IO_APIC_VECTOR(irq,i));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#62: FILE: arch/i386/kernel/io_apic.c:1024:
+				i, IO_APIC_VECTOR(irq,i));
 				                     ^

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#89: FILE: arch/i386/kernel/io_apic.c:1042:
+	printk("returning new allocation node%d/irq%d -> vector0x%x\n", node, irq, current_vector[node]);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#89: FILE: arch/i386/kernel/io_apic.c:1042:
+	printk("returning new allocation node%d/irq%d -> vector0x%x\n", node, irq, current_vector[node]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: arch/i386/kernel/io_apic.c:1109:
+^I^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#129: FILE: arch/i386/kernel/io_apic.c:1112:
+					printk("setting interrupt gate for cpu%d, irq%d -> vector0x%x %p",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: arch/i386/kernel/io_apic.c:1113:
+					printk("setting interrupt gate for cpu%d, irq%d -> vector0x%x %p",
+						i, irq, vector, interrupt[irq]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#203: FILE: arch/i386/kernel/io_apic.c:2096:
+	printk("before setup_ioapic_ids_from_mpc\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#205: FILE: arch/i386/kernel/io_apic.c:2098:
+	printk("before sync_Arb_IDs\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: arch/i386/kernel/io_apic.c:2231:
+^I^Iprintk(KERN_ERR "NODE%d IOAPIC[%d]: Invalid reference to IRQ 0/n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#221: FILE: arch/i386/kernel/io_apic.c:2231:
+		printk(KERN_ERR "NODE%d IOAPIC[%d]: Invalid reference to IRQ 0/n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: arch/i386/kernel/io_apic.c:2232:
+		printk(KERN_ERR "NODE%d IOAPIC[%d]: Invalid reference to IRQ 0/n", 
+			node, ioapic);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#235: FILE: arch/i386/kernel/io_apic.c:2255:
+	printk(KERN_DEBUG "NODE[%d] IOAPIC[%d]: Set PCI routing entry (%d-%d -> 0x%x -> "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: arch/i386/kernel/io_apic.c:2256:
+^I^I"IRQ %d)\n", node, ioapic, $

WARNING:SPLIT_STRING: quoted string split across lines
#236: FILE: arch/i386/kernel/io_apic.c:2256:
+	printk(KERN_DEBUG "NODE[%d] IOAPIC[%d]: Set PCI routing entry (%d-%d -> 0x%x -> "
+		"IRQ %d)\n", node, ioapic, 

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#245: FILE: arch/i386/kernel/io_apic.c:2264:
+			printk("setting interrupt gate for cpu%d, irq%d -> vector%d %p",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: arch/i386/kernel/io_apic.c:2265:
+			printk("setting interrupt gate for cpu%d, irq%d -> vector%d %p",
+				i, irq, vector, interrupt[irq]);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpu' - possible side-effects?
#264: FILE: include/asm-generic/topology.h:51:
+#define for_each_cpu_on_node(cpu, node, mask) \
+        for(mask = node_to_cpumask(node); \
+            cpu = __ffs(mask), mask != 0; \
+            mask &= ~(1UL<<cpu))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mask' - possible side-effects?
#264: FILE: include/asm-generic/topology.h:51:
+#define for_each_cpu_on_node(cpu, node, mask) \
+        for(mask = node_to_cpumask(node); \
+            cpu = __ffs(mask), mask != 0; \
+            mask &= ~(1UL<<cpu))

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: include/asm-generic/topology.h:52:
+        for(mask = node_to_cpumask(node); \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: include/asm-generic/topology.h:52:
+        for(mask = node_to_cpumask(node); \$

ERROR:SPACING: space required before the open parenthesis '('
#265: FILE: include/asm-generic/topology.h:52:
+        for(mask = node_to_cpumask(node); \

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: include/asm-generic/topology.h:53:
+            cpu = __ffs(mask), mask != 0; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: include/asm-generic/topology.h:53:
+            cpu = __ffs(mask), mask != 0; \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: include/asm-generic/topology.h:54:
+            mask &= ~(1UL<<cpu))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: include/asm-generic/topology.h:54:
+            mask &= ~(1UL<<cpu))$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#267: FILE: include/asm-generic/topology.h:54:
+            mask &= ~(1UL<<cpu))
                          ^

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#303: FILE: include/asm-i386/hw_irq.h:27:
+extern unsigned int inline ioapic_to_node(unsigned int ioapic);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#303: FILE: include/asm-i386/hw_irq.h:27:
+extern unsigned int inline ioapic_to_node(unsigned int ioapic);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000389501.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 15 warnings, 11 checks, 258 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000389501.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
