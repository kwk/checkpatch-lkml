WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
diff -ruN 832-suspend-old/kernel/power/suspend.c 832-suspend-new/kernel/power/suspend.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#39: FILE: kernel/power/suspend.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#53: FILE: kernel/power/suspend.c:15:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#58: FILE: kernel/power/suspend.c:20:
+ * Steve Doddi <dirk@loth.demon.co.uk>: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: kernel/power/suspend.c:45:
+ * Variable definitions which are needed if PM is enabled but $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#97: FILE: kernel/power/suspend.c:59:
+#include <asm/uaccess.h>

ERROR:SPACING: exactly one space required after that #ifdef
#105: FILE: kernel/power/suspend.c:67:
+#ifdef  CONFIG_X86

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#110: FILE: kernel/power/suspend.c:72:
+static int suspend_acpi_state_used = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#113: FILE: kernel/power/suspend.c:75:
+struct partial_device_tree * suspend_device_tree;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#120: FILE: kernel/power/suspend.c:82:
+	BUG_ON(smp_processor_id() != 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space required before the open parenthesis '('
#123: FILE: kernel/power/suspend.c:85:
+#define ensure_on_processor_zero() do { } while(0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#127: FILE: kernel/power/suspend.c:89:
+extern u32 acpi_leave_sleep_state (u8 sleep_state);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#134: FILE: kernel/power/suspend.c:96:
+void display_device_tree(struct partial_device_tree * tree, char * header)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#134: FILE: kernel/power/suspend.c:96:
+void display_device_tree(struct partial_device_tree * tree, char * header)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#136: FILE: kernel/power/suspend.c:98:
+	struct device * dev;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#139: FILE: kernel/power/suspend.c:101:
+		printk(header);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#140: FILE: kernel/power/suspend.c:102:
+	printk(" === Tree %p ===\n\n", tree);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#142: FILE: kernel/power/suspend.c:104:
+	printk(" -- Active\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#144: FILE: kernel/power/suspend.c:106:
+		printk("   %p->%p", dev, dev->parent);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#145: FILE: kernel/power/suspend.c:107:
+		printk(" %s\n", dev->kobj.k_name ? dev->kobj.k_name : "<null>");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#147: FILE: kernel/power/suspend.c:109:
+	printk("\n -- DPM Off\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#149: FILE: kernel/power/suspend.c:111:
+		printk("   %p->%p", dev, dev->parent);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#150: FILE: kernel/power/suspend.c:112:
+		printk(" %s\n", dev->kobj.k_name ? dev->kobj.k_name : "<null>");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: kernel/power/suspend.c:114:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#153: FILE: kernel/power/suspend.c:115:
+	printk("\n -- DPM Off IRQ\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#155: FILE: kernel/power/suspend.c:117:
+		printk("   %p->%p", dev, dev->parent);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#156: FILE: kernel/power/suspend.c:118:
+		printk(" %s\n", dev->kobj.k_name ? dev->kobj.k_name : "<null>");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#158: FILE: kernel/power/suspend.c:120:
+	printk("\n--- Done ---\n");

ERROR:SPACING: space required before the open parenthesis '('
#161: FILE: kernel/power/suspend.c:123:
+#define display_device_tree(tree, header) do { } while(0)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#178: FILE: kernel/power/suspend.c:140:
+	switch (stage) {
+		case SUSPEND_DRIVERS_USED_DEVICES_IRQS_DISABLED:
[...]
+		case SUSPEND_DRIVERS_USED_DEVICES_IRQS_ENABLED:
[...]
+		case SUSPEND_DRIVERS_UNUSED_DEVICES_IRQS_DISABLED:
[...]
+		case SUSPEND_DRIVERS_UNUSED_DEVICES_IRQS_ENABLED:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#180: FILE: kernel/power/suspend.c:142:
+			BUG_ON(!irqs_disabled());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#187: FILE: kernel/power/suspend.c:149:
+			BUG_ON(irqs_disabled());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: kernel/power/suspend.c:151:
+			display_device_tree(suspend_device_tree,
+				"suspend_drivers_resume stage 1.");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'suspend_drivers_resume', this function's name, in a string
#189: FILE: kernel/power/suspend.c:151:
+				"suspend_drivers_resume stage 1.");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: kernel/power/suspend.c:154:
+			display_device_tree(suspend_device_tree,
+				"Post resume tree call.");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#196: FILE: kernel/power/suspend.c:158:
+			BUG_ON(!irqs_disabled());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: kernel/power/suspend.c:160:
+			display_device_tree(&default_device_tree,
+				"suspend_drivers_resume stage 2.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'suspend_drivers_resume', this function's name, in a string
#198: FILE: kernel/power/suspend.c:160:
+				"suspend_drivers_resume stage 2.\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#203: FILE: kernel/power/suspend.c:165:
+			BUG_ON(irqs_disabled());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: kernel/power/suspend.c:168:
+			display_device_tree(&default_device_tree,
+				"Post power up.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: kernel/power/suspend.c:174:
+			display_device_tree(&default_device_tree,
+				"suspend_drivers_resume stage 3.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'suspend_drivers_resume', this function's name, in a string
#212: FILE: kernel/power/suspend.c:174:
+				"suspend_drivers_resume stage 3.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: kernel/power/suspend.c:177:
+			display_device_tree(&default_device_tree,
+				"Post resume default device tree.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: kernel/power/suspend.c:180:
+			if (suspend_acpi_state_used &&
+				pm_ops && pm_ops->finish)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#238: FILE: kernel/power/suspend.c:200:
+	switch (stage) {
+		case SUSPEND_DRIVERS_UNUSED_DEVICES_IRQS_DISABLED:
[...]
+		case SUSPEND_DRIVERS_UNUSED_DEVICES_IRQS_ENABLED:
[...]
+		case SUSPEND_DRIVERS_USED_DEVICES_IRQS_DISABLED:
[...]
+		case SUSPEND_DRIVERS_USED_DEVICES_IRQS_ENABLED:
[...]
+		case SUSPEND_DRIVERS_PRE_POWERDOWN: /* Power down system */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#240: FILE: kernel/power/suspend.c:202:
+			BUG_ON(!irqs_disabled());

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#242: FILE: kernel/power/suspend.c:204:
+				result = device_power_down_tree(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: kernel/power/suspend.c:207:
+			display_device_tree(&default_device_tree,
+				"Post suspend power down device tree.\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#249: FILE: kernel/power/suspend.c:211:
+			BUG_ON(irqs_disabled());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: kernel/power/suspend.c:213:
+			display_device_tree(&default_device_tree,
+				"suspend_drivers_suspend stage 1.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'suspend_drivers_suspend', this function's name, in a string
#251: FILE: kernel/power/suspend.c:213:
+				"suspend_drivers_suspend stage 1.\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#252: FILE: kernel/power/suspend.c:214:
+			result = device_suspend_tree(

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#257: FILE: kernel/power/suspend.c:219:
+			BUG_ON(!irqs_disabled());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#264: FILE: kernel/power/suspend.c:226:
+			BUG_ON(irqs_disabled());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: kernel/power/suspend.c:228:
+			display_device_tree(suspend_device_tree,
+				"suspend_drivers_suspend stage 2.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'suspend_drivers_suspend', this function's name, in a string
#266: FILE: kernel/power/suspend.c:228:
+				"suspend_drivers_suspend stage 2.\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#267: FILE: kernel/power/suspend.c:229:
+			result = device_suspend_tree(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: kernel/power/suspend.c:232:
+			display_device_tree(suspend_device_tree,
+				"Post suspend device tree.\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#274: FILE: kernel/power/suspend.c:236:
+			BUG_ON(irqs_disabled());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: kernel/power/suspend.c:238:
+			display_device_tree(suspend_device_tree,
+				"suspend_drivers_suspend stage 3.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'suspend_drivers_suspend', this function's name, in a string
#276: FILE: kernel/power/suspend.c:238:
+				"suspend_drivers_suspend stage 3.\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#278: FILE: kernel/power/suspend.c:240:
+			result = device_suspend_tree(

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#292: FILE: kernel/power/suspend.c:254:
+		printk("%s per-cpu:", zone->name);

CHECK:BRACES: braces {} should be used on all arms of this statement
#294: FILE: kernel/power/suspend.c:256:
+		if (!zone->present_pages) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#295: FILE: kernel/power/suspend.c:257:
+			printk(" empty\n");

CHECK:BRACES: Unbalanced braces around else statement
#297: FILE: kernel/power/suspend.c:259:
+		} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#298: FILE: kernel/power/suspend.c:260:
+			printk("\n");

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#300: FILE: kernel/power/suspend.c:262:
+		for (cpu = 0; cpu < NR_CPUS; ++cpu) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#309: FILE: kernel/power/suspend.c:271:
+				printk("cpu %d %s: low %d, high %d, batch %d, count %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: kernel/power/suspend.c:272:
+				printk("cpu %d %s: low %d, high %d, batch %d, count %d.\n",
+					cpu,

ERROR:SPACING: space required before the open parenthesis '('
#320: FILE: kernel/power/suspend.c:282:
+#define show_pcp_lists() do { } while(0)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#327: FILE: kernel/power/suspend.c:289:
+	struct class * class;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#328: FILE: kernel/power/suspend.c:290:
+	struct class_device * class_dev;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: kernel/power/suspend.c:304:
+^I^I^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#343: FILE: kernel/power/suspend.c:305:
+	BUG_ON(suspend_device_tree);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#364: FILE: kernel/power/suspend.c:326:
+	if (pm_ops) pm_ops->pm_disk_mode = pm_disk_mode_save;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: kernel/power/suspend.c:327:
+^I^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#370: FILE: kernel/power/suspend.c:332:
+		display_device_tree(&default_device_tree,
+			" ==== POST DEVICE MERGE TREE ====\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#374: FILE: kernel/power/suspend.c:336:
+}
+/* Variables to be preserved over suspend */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#377: FILE: kernel/power/suspend.c:339:
+unsigned long orig_mem_free = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#379: FILE: kernel/power/suspend.c:341:
+extern void do_suspend2_lowlevel(int resume);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#380: FILE: kernel/power/suspend.c:342:
+extern unsigned long header_storage_for_plugins(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#381: FILE: kernel/power/suspend.c:343:
+extern int suspend_initialise_plugin_lists(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#382: FILE: kernel/power/suspend.c:344:
+extern void suspend_relinquish_console(void);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#383: FILE: kernel/power/suspend.c:345:
+extern volatile int suspend_io_time[2][2];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#383: FILE: kernel/power/suspend.c:345:
+extern volatile int suspend_io_time[2][2];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#384: FILE: kernel/power/suspend.c:346:
+void empty_suspend_memory_pool(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#385: FILE: kernel/power/suspend.c:347:
+int read_primary_suspend_image(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#386: FILE: kernel/power/suspend.c:348:
+extern void display_nosave_pages(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#387: FILE: kernel/power/suspend.c:349:
+extern int num_writers;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#389: FILE: kernel/power/suspend.c:351:
+extern void suspend_console_proc_init(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#390: FILE: kernel/power/suspend.c:352:
+extern void suspend_console_proc_exit(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#391: FILE: kernel/power/suspend.c:353:
+extern int suspend2_prepare_console(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#392: FILE: kernel/power/suspend.c:354:
+extern void suspend2_cleanup_console(void);

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#394: FILE: kernel/power/suspend.c:356:
+unsigned long * in_use_map = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#394: FILE: kernel/power/suspend.c:356:
+unsigned long * in_use_map = NULL;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#395: FILE: kernel/power/suspend.c:357:
+unsigned long * pageset2_map = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#395: FILE: kernel/power/suspend.c:357:
+unsigned long * pageset2_map = NULL;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#396: FILE: kernel/power/suspend.c:358:
+unsigned long * checksum_map = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#396: FILE: kernel/power/suspend.c:358:
+unsigned long * checksum_map = NULL;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#398: FILE: kernel/power/suspend.c:360:
+unsigned long * unmap_map = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#398: FILE: kernel/power/suspend.c:360:
+unsigned long * unmap_map = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#401: FILE: kernel/power/suspend.c:363:
+char * debug_info_buffer;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#403: FILE: kernel/power/suspend.c:365:
+int image_size_limit = 0;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#407: FILE: kernel/power/suspend.c:369:
+extern void copy_pageset1(void);

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#408: FILE: kernel/power/suspend.c:370:
+extern int allocate_local_pageflags(unsigned long ** pagemap, int setnosave);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#408: FILE: kernel/power/suspend.c:370:
+extern int allocate_local_pageflags(unsigned long ** pagemap, int setnosave);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#409: FILE: kernel/power/suspend.c:371:
+extern void free_pagedir(struct pagedir * p);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#409: FILE: kernel/power/suspend.c:371:
+extern void free_pagedir(struct pagedir * p);

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#410: FILE: kernel/power/suspend.c:372:
+extern int free_local_pageflags(unsigned long ** pagemap);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#410: FILE: kernel/power/suspend.c:372:
+extern int free_local_pageflags(unsigned long ** pagemap);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#414: FILE: kernel/power/suspend.c:376:
+extern int prepare_image(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#419: FILE: kernel/power/suspend.c:381:
+extern int suspend_cleanup_proc(void);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#421: FILE: kernel/power/suspend.c:383:
+extern int suspend2_register_core(struct suspend2_core_ops * ops_pointer);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#421: FILE: kernel/power/suspend.c:383:
+extern int suspend2_register_core(struct suspend2_core_ops * ops_pointer);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#422: FILE: kernel/power/suspend.c:384:
+extern void suspend2_unregister_core(void);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#428: FILE: kernel/power/suspend.c:390:
+static char * suspend_free_mem_descns[MAX_FREEMEM_SLOTS] = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#458: FILE: kernel/power/suspend.c:420:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#466: FILE: kernel/power/suspend.c:428:
+	BUG_ON(slot >= MAX_FREEMEM_SLOTS);

CHECK:BRACES: braces {} should be used on all arms of this statement
#472: FILE: kernel/power/suspend.c:434:
+	if (slot == 0) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#479: FILE: kernel/power/suspend.c:441:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#483: FILE: kernel/power/suspend.c:445:
+	suspend_message(SUSPEND_MEMORY, SUSPEND_HIGH, 0,
+		"%s value %d now %d.\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#496: FILE: kernel/power/suspend.c:458:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#499: FILE: kernel/power/suspend.c:461:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#501: FILE: kernel/power/suspend.c:463:
+	suspend_message(SUSPEND_MEMORY, SUSPEND_HIGH, 0,
+		"Start:       %7d    End: %7d.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#504: FILE: kernel/power/suspend.c:466:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: kernel/power/suspend.c:470:
+			suspend_message(SUSPEND_MEMORY, SUSPEND_HIGH, 0,
+				"%s %7d         %7d.\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#526: FILE: kernel/power/suspend.c:488:
+extern int write_pageset(struct pagedir * pagedir, int whichtowrite);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#526: FILE: kernel/power/suspend.c:488:
+extern int write_pageset(struct pagedir * pagedir, int whichtowrite);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#527: FILE: kernel/power/suspend.c:489:
+extern int write_image_header(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#528: FILE: kernel/power/suspend.c:490:
+extern int read_secondary_pagedir(int overwrittenpagesonly);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#534: FILE: kernel/power/suspend.c:496:
+	if (RAM_TO_SUSPEND > max_mapnr) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#536: FILE: kernel/power/suspend.c:498:
+		prepare_status(1, 1,
+			"Couldn't get enough free pages, on %ld pages short",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#540: FILE: kernel/power/suspend.c:502:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: kernel/power/suspend.c:504:
+	suspend_message(SUSPEND_ANY_SECTION, SUSPEND_LOW, 1,
+		" - Final values: %d and %d.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#543: FILE: kernel/power/suspend.c:505:
+^I^Ipageset1_size, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#557: FILE: kernel/power/suspend.c:519:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: kernel/power/suspend.c:526:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#574: FILE: kernel/power/suspend.c:536:
+^Ireturn -1;^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#580: FILE: kernel/power/suspend.c:542:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: kernel/power/suspend.c:546:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#585: FILE: kernel/power/suspend.c:547:
+	BUG_ON(!irqs_disabled());

ERROR:TRAILING_WHITESPACE: trailing whitespace
#592: FILE: kernel/power/suspend.c:554:
+^I *  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#594: FILE: kernel/power/suspend.c:556:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#597: FILE: kernel/power/suspend.c:559:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#598: FILE: kernel/power/suspend.c:560:
+^I * Other processors have waited for me to make the atomic copy of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: kernel/power/suspend.c:565:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#613: FILE: kernel/power/suspend.c:575:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#618: FILE: kernel/power/suspend.c:580:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#627: FILE: kernel/power/suspend.c:589:
+^I$

WARNING:SPLIT_STRING: quoted string split across lines
#661: FILE: kernel/power/suspend.c:623:
+		panic("Attempt to reload pagedir 2 while aborting "
+				"a suspend failed.");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#663: FILE: kernel/power/suspend.c:625:
+^Ireturn -1;^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#665: FILE: kernel/power/suspend.c:627:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#670: FILE: kernel/power/suspend.c:632:
+	sys_reboot(LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2,
+			LINUX_REBOOT_CMD_POWER_OFF, NULL);

CHECK:BRACES: braces {} should be used on all arms of this statement
#682: FILE: kernel/power/suspend.c:644:
+	if (pm_ops && pm_ops->prepare) {
[...]
+	} else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#683: FILE: kernel/power/suspend.c:645:
+		if (!pm_ops->prepare(state)) {
[...]
+		} else
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#686: FILE: kernel/power/suspend.c:648:
+^I^I^Ielse $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#687: FILE: kernel/power/suspend.c:649:
+				printk("Failed to enter state.\n");

CHECK:BRACES: Unbalanced braces around else statement
#688: FILE: kernel/power/suspend.c:650:
+		} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#689: FILE: kernel/power/suspend.c:651:
+			printk("Prepare ops failed.\n");

CHECK:BRACES: Unbalanced braces around else statement
#690: FILE: kernel/power/suspend.c:652:
+	} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#691: FILE: kernel/power/suspend.c:653:
+		printk("No prepare ops.\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#705: FILE: kernel/power/suspend.c:667:
+	       void * arg);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#706: FILE: kernel/power/suspend.c:668:
+extern void apm_power_off(void);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#713: FILE: kernel/power/suspend.c:675:
+		sys_reboot(LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2,
+				LINUX_REBOOT_CMD_RESTART, NULL);

CHECK:BRACES: braces {} should be used on all arms of this statement
#718: FILE: kernel/power/suspend.c:680:
+	if (suspend_powerdown_method == 3) {
[...]
+	} else if (suspend_powerdown_method == 4) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#726: FILE: kernel/power/suspend.c:688:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#728: FILE: kernel/power/suspend.c:690:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#729: FILE: kernel/power/suspend.c:691:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#750: FILE: kernel/power/suspend.c:712:
+^I$

WARNING:MEMORY_BARRIER: memory barrier without comment
#771: FILE: kernel/power/suspend.c:733:
+	mb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#780: FILE: kernel/power/suspend.c:742:
+ * Key Assumptions : Will be able to read back secondary pagedir (if $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#808: FILE: kernel/power/suspend.c:770:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#814: FILE: kernel/power/suspend.c:776:
+^I$

WARNING:MEMORY_BARRIER: memory barrier without comment
#835: FILE: kernel/power/suspend.c:797:
+	mb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#850: FILE: kernel/power/suspend.c:812:
+ *                   clean up and exit. The state on exiting this routine $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#863: FILE: kernel/power/suspend.c:825:
+		printk(KERN_EMERG name_suspend

WARNING:MEMORY_BARRIER: memory barrier without comment
#873: FILE: kernel/power/suspend.c:835:
+	mb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#876: FILE: kernel/power/suspend.c:838:
+static inline void lru_check_page(struct page * page)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#879: FILE: kernel/power/suspend.c:841:
+		printk("Page %p/%p in inactivelist but not marked LRU.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#880: FILE: kernel/power/suspend.c:842:
+		printk("Page %p/%p in inactivelist but not marked LRU.\n",
+			page, page_address(page));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#888: FILE: kernel/power/suspend.c:850:
+#define SNPRINTF(a...) ^Ilen += suspend_snprintf(debug_info_buffer + len, \$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#888: FILE: kernel/power/suspend.c:850:
+#define SNPRINTF(a...) 	len += suspend_snprintf(debug_info_buffer + len, \
+		PAGE_SIZE - len - 1, ## a)

WARNING:LINE_SPACING: Missing a blank line after declarations
#894: FILE: kernel/power/suspend.c:856:
+	int len = 0;
+	if (!debug_info_buffer) {

CHECK:SPACING: No space is necessary after a cast
#895: FILE: kernel/power/suspend.c:857:
+		debug_info_buffer = (char *) get_zeroed_page(GFP_ATOMIC);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#897: FILE: kernel/power/suspend.c:859:
+			printk("Error! Unable to allocate buffer for"

WARNING:SPLIT_STRING: quoted string split across lines
#898: FILE: kernel/power/suspend.c:860:
+			printk("Error! Unable to allocate buffer for"
+					"software suspend debug info.\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#898: FILE: kernel/power/suspend.c:860:
+			printk("Error! Unable to allocate buffer for"
+					"software suspend debug info.\n");

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#910: FILE: kernel/power/suspend.c:872:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#910: FILE: kernel/power/suspend.c:872:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#910: FILE: kernel/power/suspend.c:872:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#910: FILE: kernel/power/suspend.c:872:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#912: FILE: kernel/power/suspend.c:874:
+		extern struct module *module_list;

WARNING:LINE_SPACING: Missing a blank line after declarations
#913: FILE: kernel/power/suspend.c:875:
+		extern struct module *module_list;
+		this_mod = module_list;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#920: FILE: kernel/power/suspend.c:882:
+		extern int print_module_list_to_buffer(char * buffer, int size);

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#921: FILE: kernel/power/suspend.c:883:
+		len+= print_module_list_to_buffer(debug_info_buffer + len,
 		   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#932: FILE: kernel/power/suspend.c:894:
+^I^I^Ipagedir1.lastpageset_size, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#932: FILE: kernel/power/suspend.c:894:
+		SNPRINTF("- Pageset sizes  : %d (%d low) and %d (%d low).\n",
+			pagedir1.lastpageset_size, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#934: FILE: kernel/power/suspend.c:896:
+^I^I^Ipagedir2.lastpageset_size, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#938: FILE: kernel/power/suspend.c:900:
+	SNPRINTF("- Parameters     : %ld %ld %ld %d %d %d %ld\n",
+			suspend_result,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#947: FILE: kernel/power/suspend.c:909:
+	SNPRINTF("- Parameters     : %ld %ld %d %d %ld\n",
+			suspend_result,

WARNING:SPLIT_STRING: quoted string split across lines
#955: FILE: kernel/power/suspend.c:917:
+		SNPRINTF("- Calculations   : Image size: %lu. "
+			"Ram to suspend: %ld.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#958: FILE: kernel/power/suspend.c:920:
+	SNPRINTF("- Limits         : %lu pages RAM. Initial boot: %lu.\n",
+		max_mapnr, orig_mem_free);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#960: FILE: kernel/power/suspend.c:922:
+	SNPRINTF("- Overall expected compression percentage: %d.\n",
+			100 - expected_compression_ratio());

ERROR:TRAILING_WHITESPACE: trailing whitespace
#961: FILE: kernel/power/suspend.c:923:
+^Ilen+= print_plugin_debug_info(debug_info_buffer + len, $

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#961: FILE: kernel/power/suspend.c:923:
+	len+= print_plugin_debug_info(debug_info_buffer + len, 
 	   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#977: FILE: kernel/power/suspend.c:939:
+		SNPRINTF("- Max ranges used: %d ranges in %d pages.\n",
+			max_ranges_used, num_range_pages);

CHECK:BRACES: braces {} should be used on all arms of this statement
#978: FILE: kernel/power/suspend.c:940:
+	if (suspend_io_time[0][1]) {
[...]
+	else if (num_range_pages)
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#980: FILE: kernel/power/suspend.c:942:
+		SNPRINTF("- I/O speed: Write %d MB/s",
+			(MB((unsigned long) suspend_io_time[0][0]) * HZ /

CHECK:SPACING: No space is necessary after a cast
#980: FILE: kernel/power/suspend.c:942:
+			(MB((unsigned long) suspend_io_time[0][0]) * HZ /

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#984: FILE: kernel/power/suspend.c:946:
+			SNPRINTF(", Read %d MB/s",
+				(MB((unsigned long) suspend_io_time[1][0]) * HZ /

CHECK:SPACING: No space is necessary after a cast
#984: FILE: kernel/power/suspend.c:946:
+				(MB((unsigned long) suspend_io_time[1][0]) * HZ /

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#988: FILE: kernel/power/suspend.c:950:
+	}
+	else if (num_range_pages)

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#994: FILE: kernel/power/suspend.c:956:
+extern int PageInPagedir(struct pagedir * p, struct page * page);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#994: FILE: kernel/power/suspend.c:956:
+extern int PageInPagedir(struct pagedir * p, struct page * page);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#997: FILE: kernel/power/suspend.c:959:
+static char * state_string[3] = { "Source", "Destination", "Dest/Allocd" };

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1006: FILE: kernel/power/suspend.c:968:
+	printk("[ Pagedir %d:", pagedir);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1007: FILE: kernel/power/suspend.c:969:
+	for (i=0; i < 3; i++)
 	      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1009: FILE: kernel/power/suspend.c:971:
+			printk("%s ", state_string[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1010: FILE: kernel/power/suspend.c:972:
+	printk("]");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1013: FILE: kernel/power/suspend.c:975:
+void display_metadata_state(struct page * page)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1018: FILE: kernel/power/suspend.c:980:
+		printk("[ NoSave ]");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1020: FILE: kernel/power/suspend.c:982:
+		printk("[ Reserved ]");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1022: FILE: kernel/power/suspend.c:984:
+		printk("[ Highmem ]");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1027: FILE: kernel/power/suspend.c:989:
+	printk("Page number %lu. Struct page at %p, virt address %p:",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1028: FILE: kernel/power/suspend.c:990:
+	printk("Page number %lu. Struct page at %p, virt address %p:",
+			display_metadata_page,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1032: FILE: kernel/power/suspend.c:994:
+	printk("\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1040: FILE: kernel/power/suspend.c:1002:
+int debuginfo_read_proc(char * page, char ** start, off_t off, int count,

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#1040: FILE: kernel/power/suspend.c:1002:
+int debuginfo_read_proc(char * page, char ** start, off_t off, int count,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1041: FILE: kernel/power/suspend.c:1003:
+int debuginfo_read_proc(char * page, char ** start, off_t off, int count,
+		int *eof, void *data)

CHECK:SPACING: No space is necessary after a cast
#1049: FILE: kernel/power/suspend.c:1011:
+	copy_len = min(info_len - (int) off, count);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1056: FILE: kernel/power/suspend.c:1018:
+^I} $

CHECK:SPACING: No space is necessary after a cast
#1061: FILE: kernel/power/suspend.c:1023:
+	free_pages((unsigned long) debug_info_buffer, 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1074: FILE: kernel/power/suspend.c:1036:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1077: FILE: kernel/power/suspend.c:1039:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1083: FILE: kernel/power/suspend.c:1045:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1090: FILE: kernel/power/suspend.c:1052:
+#endif^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1091: FILE: kernel/power/suspend.c:1053:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1093: FILE: kernel/power/suspend.c:1055:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1125: FILE: kernel/power/suspend.c:1087:
+ * Called From     : $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1134: FILE: kernel/power/suspend.c:1096:
+        /* Suspend always runs on processor 0 */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1134: FILE: kernel/power/suspend.c:1096:
+        /* Suspend always runs on processor 0 */ $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1142: FILE: kernel/power/suspend.c:1104:
+			printk("Image already stored:"

WARNING:SPLIT_STRING: quoted string split across lines
#1143: FILE: kernel/power/suspend.c:1105:
+			printk("Image already stored:"
+				" powering down immediately.");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1146: FILE: kernel/power/suspend.c:1108:
+			return;	/* It might now, but just in case we're using S3*/
+		} else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1147: FILE: kernel/power/suspend.c:1109:
+			printk("Invalidating previous image.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1153: FILE: kernel/power/suspend.c:1115:
+	printk(name_suspend "Initiating a software suspend cycle.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1159: FILE: kernel/power/suspend.c:1121:
+^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1160: FILE: kernel/power/suspend.c:1122:
+	suspend_io_time[0][0] = suspend_io_time[0][1] = suspend_io_time[1][0] =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_activate', this function's name, in a string
#1163: FILE: kernel/power/suspend.c:1125:
+	PRINTFREEMEM("at start of do_activate");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1175: FILE: kernel/power/suspend.c:1137:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1206: FILE: kernel/power/suspend.c:1168:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1222: FILE: kernel/power/suspend.c:1184:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1227: FILE: kernel/power/suspend.c:1189:
+		suspend_message(SUSPEND_ANY_SECTION, SUSPEND_LOW, 1,
+			name_suspend "Not invalidating the image due "

WARNING:SPLIT_STRING: quoted string split across lines
#1228: FILE: kernel/power/suspend.c:1190:
+			name_suspend "Not invalidating the image due "
+			"to Keep Image being enabled.\n");

CHECK:BRACES: Unbalanced braces around else statement
#1230: FILE: kernel/power/suspend.c:1192:
+	} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1249: FILE: kernel/power/suspend.c:1211:
+		 * its level mangling. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1251: FILE: kernel/power/suspend.c:1213:
+			printk("%s", debug_info_buffer + (1023 * i));

CHECK:SPACING: No space is necessary after a cast
#1252: FILE: kernel/power/suspend.c:1214:
+		free_pages((unsigned long) debug_info_buffer, 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1258: FILE: kernel/power/suspend.c:1220:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1263: FILE: kernel/power/suspend.c:1225:
+^I$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_activate', this function's name, in a string
#1279: FILE: kernel/power/suspend.c:1241:
+	PRINTFREEMEM("at end of do_activate");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1284: FILE: kernel/power/suspend.c:1246:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1289: FILE: kernel/power/suspend.c:1251:
+	struct suspend_plugin_ops * this_writer;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1300: FILE: kernel/power/suspend.c:1262:
+		printk(name_suspend "No writers have been registered.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1303: FILE: kernel/power/suspend.c:1265:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1311: FILE: kernel/power/suspend.c:1273:
+		this_writer = list_entry(writer, struct suspend_plugin_ops,
+				ops.writer.writer_list);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1313: FILE: kernel/power/suspend.c:1275:
+^I^I/* $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1318: FILE: kernel/power/suspend.c:1280:
+			printk(name_suspend

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1324: FILE: kernel/power/suspend.c:1286:
+		result = this_writer->ops.writer.parse_image_location(

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1327: FILE: kernel/power/suspend.c:1289:
+		switch (result) {
+			case -EINVAL:
[...]
+			case 0:
[...]
+			case 1:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1329: FILE: kernel/power/suspend.c:1291:
+^I^I^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1330: FILE: kernel/power/suspend.c:1292:
+^I^I^I^I * For this writer, but not a valid $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1334: FILE: kernel/power/suspend.c:1296:
+				printk(name_suspend

WARNING:SPLIT_STRING: quoted string split across lines
#1336: FILE: kernel/power/suspend.c:1298:
+					"Not able to successfully parse this "
+					"resume device. Suspending disabled.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1350: FILE: kernel/power/suspend.c:1312:
+				printk(name_suspend "Suspending enabled.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1361: FILE: kernel/power/suspend.c:1323:
+	printk(name_suspend "No matching writer found. Suspending disabled.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1369: FILE: kernel/power/suspend.c:1331:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1370: FILE: kernel/power/suspend.c:1332:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1384: FILE: kernel/power/suspend.c:1346:
+ * This entry allows all of the settings to be set at once. $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1389: FILE: kernel/power/suspend.c:1351:
+static int suspend_write_compat_proc(struct file *file, const char * buffer,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1390: FILE: kernel/power/suspend.c:1352:
+static int suspend_write_compat_proc(struct file *file, const char * buffer,
+		unsigned long count, void * data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1390: FILE: kernel/power/suspend.c:1352:
+		unsigned long count, void * data)

CHECK:SPACING: No space is necessary after a cast
#1392: FILE: kernel/power/suspend.c:1354:
+	char * buf1 = (char *) get_zeroed_page(GFP_ATOMIC), *curbuf, *lastbuf;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1392: FILE: kernel/power/suspend.c:1354:
+	char * buf1 = (char *) get_zeroed_page(GFP_ATOMIC), *curbuf, *lastbuf;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1393: FILE: kernel/power/suspend.c:1355:
+^Ichar * buf2 = (char *) get_zeroed_page(GFP_ATOMIC); $

CHECK:SPACING: No space is necessary after a cast
#1393: FILE: kernel/power/suspend.c:1355:
+	char * buf2 = (char *) get_zeroed_page(GFP_ATOMIC); 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1393: FILE: kernel/power/suspend.c:1355:
+	char * buf2 = (char *) get_zeroed_page(GFP_ATOMIC); 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1396: FILE: kernel/power/suspend.c:1358:
+	struct suspend_plugin_ops * plugin;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1397: FILE: kernel/power/suspend.c:1359:
+	struct plugin_header * plugin_header = NULL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!buf1'
#1399: FILE: kernel/power/suspend.c:1361:
+	if ((!buf1) || (!buf2))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!buf2'
#1399: FILE: kernel/power/suspend.c:1361:
+	if ((!buf1) || (!buf2))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1404: FILE: kernel/power/suspend.c:1366:
+		int length = count - file_offset;
+		if (length > (PAGE_SIZE - used_size))

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1418: FILE: kernel/power/suspend.c:1380:
+				nextval = simple_strtoul(curbuf, &curbuf, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1421: FILE: kernel/power/suspend.c:1383:
+				switch (i) {
+					case 0:
[...]
+					case 1:
[...]
+					case 2:
[...]
+					case 3:
[...]
+					case 4:
[...]
+					case 5:
[...]
+					case 6:
[...]
+					case 7:

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#1423: FILE: kernel/power/suspend.c:1385:
+						if (nextval != ALL_SETTINGS_VERSION) {

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1424: FILE: kernel/power/suspend.c:1386:
+							printk("Error loading saved settings. This data is for version %ld, but kernel module uses format %d.\n",

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1425: FILE: kernel/power/suspend.c:1387:
+									nextval, ALL_SETTINGS_VERSION);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1425: FILE: kernel/power/suspend.c:1387:
+							printk("Error loading saved settings. This data is for version %ld, but kernel module uses format %d.\n",
+									nextval, ALL_SETTINGS_VERSION);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#1442: FILE: kernel/power/suspend.c:1404:
+						if (suspend_default_console_level > 1)

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#1451: FILE: kernel/power/suspend.c:1413:
+						if (max_async_ios > MAX_READAHEAD)

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#1453: FILE: kernel/power/suspend.c:1415:
+						if (max_async_ios < 1)

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#1459: FILE: kernel/power/suspend.c:1421:
+						if (suspend_powerdown_method < 3)

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#1461: FILE: kernel/power/suspend.c:1423:
+						if (suspend_powerdown_method > 5)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1472: FILE: kernel/power/suspend.c:1434:
+			if (count <= (curbuf - buf1))
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1474: FILE: kernel/power/suspend.c:1436:
+			else {

CHECK:SPACING: No space is necessary after a cast
#1480: FILE: kernel/power/suspend.c:1442:
+		if (((unsigned long) curbuf  & ~PAGE_MASK) + sizeof(plugin_header) > PAGE_SIZE)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1482: FILE: kernel/power/suspend.c:1444:
+^I^I$

CHECK:SPACING: No space is necessary after a cast
#1484: FILE: kernel/power/suspend.c:1446:
+		plugin_header = (struct plugin_header *) curbuf;

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#1486: FILE: kernel/power/suspend.c:1448:
+		if (((unsigned long) curbuf & ~PAGE_MASK) + sizeof(plugin_header) + plugin_header->data_length  > PAGE_SIZE)

CHECK:SPACING: No space is necessary after a cast
#1486: FILE: kernel/power/suspend.c:1448:
+		if (((unsigned long) curbuf & ~PAGE_MASK) + sizeof(plugin_header) + plugin_header->data_length  > PAGE_SIZE)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1488: FILE: kernel/power/suspend.c:1450:
+^I^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1490: FILE: kernel/power/suspend.c:1452:
+			printk("Bad plugin data magic.\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#1496: FILE: kernel/power/suspend.c:1458:
+		if (plugin) {	/* May validly have config saved for a plugin not now loaded */
[...]
+		} else
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'plugin->type == WRITER_PLUGIN'
#1497: FILE: kernel/power/suspend.c:1459:
+			if ((plugin->type == WRITER_PLUGIN) &&
+			    ((!active_writer && plugin->disabled && !plugin_header->disabled) ||
+			     (active_writer == plugin && plugin_header->disabled)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1503: FILE: kernel/power/suspend.c:1465:
+^I^I^I^Iplugin->load_config_info(curbuf + sizeof(struct plugin_header), $

CHECK:BRACES: Unbalanced braces around else statement
#1505: FILE: kernel/power/suspend.c:1467:
+		} else

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#1506: FILE: kernel/power/suspend.c:1468:
+			printk("Data for plugin %s not used because not currently loaded.\n", plugin_header->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1506: FILE: kernel/power/suspend.c:1468:
+			printk("Data for plugin %s not used because not currently loaded.\n", plugin_header->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1515: FILE: kernel/power/suspend.c:1477:
+^I^I$

CHECK:SPACING: No space is necessary after a cast
#1521: FILE: kernel/power/suspend.c:1483:
+	free_pages((unsigned long) buf1, 0);

CHECK:SPACING: No space is necessary after a cast
#1522: FILE: kernel/power/suspend.c:1484:
+	free_pages((unsigned long) buf2, 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1523: FILE: kernel/power/suspend.c:1485:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1525: FILE: kernel/power/suspend.c:1487:
+		printk("Active writer disabled or no active writer and one or more just enabled. Reparsing resume device.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1528: FILE: kernel/power/suspend.c:1490:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1541: FILE: kernel/power/suspend.c:1503:
+static int suspend_read_compat_proc(char * page, char ** start, off_t off, int count,

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#1541: FILE: kernel/power/suspend.c:1503:
+static int suspend_read_compat_proc(char * page, char ** start, off_t off, int count,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1542: FILE: kernel/power/suspend.c:1504:
+static int suspend_read_compat_proc(char * page, char ** start, off_t off, int count,
+		int *eof, void *data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1544: FILE: kernel/power/suspend.c:1506:
+	struct suspend_plugin_ops * this_plugin;

CHECK:SPACING: No space is necessary after a cast
#1545: FILE: kernel/power/suspend.c:1507:
+	char * buffer = (char *) get_zeroed_page(GFP_ATOMIC);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1545: FILE: kernel/power/suspend.c:1507:
+	char * buffer = (char *) get_zeroed_page(GFP_ATOMIC);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1551: FILE: kernel/power/suspend.c:1513:
+		printk("Failed to allocate a buffer for getting "

WARNING:SPLIT_STRING: quoted string split across lines
#1552: FILE: kernel/power/suspend.c:1514:
+		printk("Failed to allocate a buffer for getting "
+				"plugin configuration info.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1555: FILE: kernel/power/suspend.c:1517:
+^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1559: FILE: kernel/power/suspend.c:1521:
+	len = sprintf(buffer, "%d %ld %ld %ld %d %d %d %ld\n",
+			ALL_SETTINGS_VERSION,

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#1571: FILE: kernel/power/suspend.c:1533:
+		page_offset+= copy_len;
 		           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1576: FILE: kernel/power/suspend.c:1538:
+^I/* $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1584: FILE: kernel/power/suspend.c:1546:
+	list_for_each_entry(this_plugin, &suspend_plugins, plugin_list) {
+

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1586: FILE: kernel/power/suspend.c:1548:
+		if (this_plugin->save_config_info) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1588: FILE: kernel/power/suspend.c:1550:
+		} else

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1599: FILE: kernel/power/suspend.c:1561:
+		    (file_pos < (off + count))) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1601: FILE: kernel/power/suspend.c:1563:
+^I^I^Imemcpy(plugin_header.name, this_plugin->name, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1602: FILE: kernel/power/suspend.c:1564:
+			memcpy(plugin_header.name, this_plugin->name, 
+					SUSPEND_MAX_PLUGIN_NAME_LENGTH);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1606: FILE: kernel/power/suspend.c:1568:
+^I^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1613: FILE: kernel/power/suspend.c:1575:
+			memcpy(page + page_offset,
+				 ((char *) &plugin_header) + off + page_offset - file_pos,

CHECK:SPACING: No space is necessary after a cast
#1613: FILE: kernel/power/suspend.c:1575:
+				 ((char *) &plugin_header) + off + page_offset - file_pos,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1614: FILE: kernel/power/suspend.c:1576:
+^I^I^I^I copy_len);^I $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'file_pos >= off'
#1621: FILE: kernel/power/suspend.c:1583:
+		if (plugin_header.data_length && (file_pos >= off) && (file_pos < (off + count))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1626: FILE: kernel/power/suspend.c:1588:
+^I^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1628: FILE: kernel/power/suspend.c:1590:
+			memcpy(page + page_offset,
+				 buffer,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1629: FILE: kernel/power/suspend.c:1591:
+^I^I^I^I copy_len);^I $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1633: FILE: kernel/power/suspend.c:1595:
+
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1636: FILE: kernel/power/suspend.c:1598:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1637: FILE: kernel/power/suspend.c:1599:
+		
+	}

CHECK:SPACING: No space is necessary after a cast
#1638: FILE: kernel/power/suspend.c:1600:
+	free_pages((unsigned long) buffer, 0);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1645: FILE: kernel/power/suspend.c:1607:
+extern void cleanup_suspend_plugins(void);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1673: FILE: kernel/power/suspend.c:1635:
+^I  ^I^I .read_proc^I= suspend_read_compat_proc,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1673: FILE: kernel/power/suspend.c:1635:
+^I  ^I^I .read_proc^I= suspend_read_compat_proc,$

WARNING:TABSTOP: Statements should start on a tabstop
#1675: FILE: kernel/power/suspend.c:1637:
+		  }

WARNING:TABSTOP: Statements should start on a tabstop
#1676: FILE: kernel/power/suspend.c:1638:
+	  }

WARNING:TABSTOP: Statements should start on a tabstop
#1685: FILE: kernel/power/suspend.c:1647:
+		  }

WARNING:TABSTOP: Statements should start on a tabstop
#1686: FILE: kernel/power/suspend.c:1648:
+	  }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1688: FILE: kernel/power/suspend.c:1650:
+^I$

WARNING:TABSTOP: Statements should start on a tabstop
#1696: FILE: kernel/power/suspend.c:1658:
+		  }

WARNING:TABSTOP: Statements should start on a tabstop
#1697: FILE: kernel/power/suspend.c:1659:
+	  }

WARNING:TABSTOP: Statements should start on a tabstop
#1707: FILE: kernel/power/suspend.c:1669:
+		  }

WARNING:TABSTOP: Statements should start on a tabstop
#1708: FILE: kernel/power/suspend.c:1670:
+	  }

WARNING:TABSTOP: Statements should start on a tabstop
#1719: FILE: kernel/power/suspend.c:1681:
+		  }

WARNING:TABSTOP: Statements should start on a tabstop
#1720: FILE: kernel/power/suspend.c:1682:
+	  }

WARNING:TABSTOP: Statements should start on a tabstop
#1729: FILE: kernel/power/suspend.c:1691:
+		  }

WARNING:TABSTOP: Statements should start on a tabstop
#1730: FILE: kernel/power/suspend.c:1692:
+	  }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1732: FILE: kernel/power/suspend.c:1694:
+^I$

WARNING:TABSTOP: Statements should start on a tabstop
#1740: FILE: kernel/power/suspend.c:1702:
+		  }

WARNING:TABSTOP: Statements should start on a tabstop
#1741: FILE: kernel/power/suspend.c:1703:
+	  }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1743: FILE: kernel/power/suspend.c:1705:
+^I  $

WARNING:TABSTOP: Statements should start on a tabstop
#1751: FILE: kernel/power/suspend.c:1713:
+		  }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1756: FILE: kernel/power/suspend.c:1718:
+
+

WARNING:TABSTOP: Statements should start on a tabstop
#1763: FILE: kernel/power/suspend.c:1725:
+		  }

WARNING:TABSTOP: Statements should start on a tabstop
#1764: FILE: kernel/power/suspend.c:1726:
+	  }

WARNING:TABSTOP: Statements should start on a tabstop
#1775: FILE: kernel/power/suspend.c:1737:
+		  }

WARNING:TABSTOP: Statements should start on a tabstop
#1776: FILE: kernel/power/suspend.c:1738:
+	  }

WARNING:TABSTOP: Statements should start on a tabstop
#1786: FILE: kernel/power/suspend.c:1748:
+		  }

WARNING:TABSTOP: Statements should start on a tabstop
#1787: FILE: kernel/power/suspend.c:1749:
+	  }

WARNING:TABSTOP: Statements should start on a tabstop
#1797: FILE: kernel/power/suspend.c:1759:
+		  }

WARNING:TABSTOP: Statements should start on a tabstop
#1798: FILE: kernel/power/suspend.c:1760:
+	  }

WARNING:TABSTOP: Statements should start on a tabstop
#1808: FILE: kernel/power/suspend.c:1770:
+		  }

WARNING:TABSTOP: Statements should start on a tabstop
#1809: FILE: kernel/power/suspend.c:1771:
+	  }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1811: FILE: kernel/power/suspend.c:1773:
+^I$

WARNING:TABSTOP: Statements should start on a tabstop
#1818: FILE: kernel/power/suspend.c:1780:
+		  }

WARNING:TABSTOP: Statements should start on a tabstop
#1819: FILE: kernel/power/suspend.c:1781:
+	  }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1822: FILE: kernel/power/suspend.c:1784:
+^I  $

WARNING:TABSTOP: Statements should start on a tabstop
#1829: FILE: kernel/power/suspend.c:1791:
+		  }

WARNING:TABSTOP: Statements should start on a tabstop
#1830: FILE: kernel/power/suspend.c:1792:
+	  }

WARNING:TABSTOP: Statements should start on a tabstop
#1839: FILE: kernel/power/suspend.c:1801:
+		  }

WARNING:TABSTOP: Statements should start on a tabstop
#1840: FILE: kernel/power/suspend.c:1802:
+	  }

WARNING:TABSTOP: Statements should start on a tabstop
#1852: FILE: kernel/power/suspend.c:1814:
+		  }

WARNING:TABSTOP: Statements should start on a tabstop
#1853: FILE: kernel/power/suspend.c:1815:
+	  }

WARNING:TABSTOP: Statements should start on a tabstop
#1865: FILE: kernel/power/suspend.c:1827:
+		  }

WARNING:TABSTOP: Statements should start on a tabstop
#1866: FILE: kernel/power/suspend.c:1828:
+	  }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1871: FILE: kernel/power/suspend.c:1833:
+extern int debuginfo_read_proc(char * page, char ** start, off_t off, int count,

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#1871: FILE: kernel/power/suspend.c:1833:
+extern int debuginfo_read_proc(char * page, char ** start, off_t off, int count,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1871: FILE: kernel/power/suspend.c:1833:
+extern int debuginfo_read_proc(char * page, char ** start, off_t off, int count,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1872: FILE: kernel/power/suspend.c:1834:
+extern int debuginfo_read_proc(char * page, char ** start, off_t off, int count,
+		int *eof, void *data);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1880: FILE: kernel/power/suspend.c:1842:
+extern int freeze_processes(int no_progress);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1891: FILE: kernel/power/suspend.c:1853:
+		printk(KERN_WARNING name_suspend

WARNING:SPLIT_STRING: quoted string split across lines
#1893: FILE: kernel/power/suspend.c:1855:
+			"The size of swp_entry_t != size of long. "
+			"Please report this!\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1896: FILE: kernel/power/suspend.c:1858:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1900: FILE: kernel/power/suspend.c:1862:
+		printk(KERN_WARNING name_suspend

WARNING:SPLIT_STRING: quoted string split across lines
#1902: FILE: kernel/power/suspend.c:1864:
+			"You need to use a resume2= command line parameter to "
+			"tell Software Suspend 2 where to look for an image.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1908: FILE: kernel/power/suspend.c:1870:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1909: FILE: kernel/power/suspend.c:1871:
+^I^I * Without a usable storage device we can do nothing - $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#1914: FILE: kernel/power/suspend.c:1876:
+			printk(KERN_ALERT name_suspend

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#1917: FILE: kernel/power/suspend.c:1879:
+			printk(KERN_ALERT name_suspend

WARNING:SPLIT_STRING: quoted string split across lines
#1919: FILE: kernel/power/suspend.c:1881:
+				"Missing or invalid storage location "
+				"(resume2= parameter). Please correct and "

WARNING:SPLIT_STRING: quoted string split across lines
#1920: FILE: kernel/power/suspend.c:1882:
+				"(resume2= parameter). Please correct and "
+				"rerun lilo (or equivalent) before "

WARNING:SPLIT_STRING: quoted string split across lines
#1921: FILE: kernel/power/suspend.c:1883:
+				"rerun lilo (or equivalent) before "
+				"suspending.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1934: FILE: kernel/power/suspend.c:1896:
+		printk(KERN_WARNING name_suspend "Resuming disabled as requested.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1942: FILE: kernel/power/suspend.c:1904:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1946: FILE: kernel/power/suspend.c:1908:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1952: FILE: kernel/power/suspend.c:1914:
+	prepare_status(0, 0,
+		"Copying original kernel back (no status - sensitive!)...");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1953: FILE: kernel/power/suspend.c:1915:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1955: FILE: kernel/power/suspend.c:1917:
+	BUG();

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1961: FILE: kernel/power/suspend.c:1923:
+extern void request_abort_suspend(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1962: FILE: kernel/power/suspend.c:1924:
+extern void schedule_suspend_message(int message_number);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1969: FILE: kernel/power/suspend.c:1931:
+	switch (keycode) {
+		case 27:
[...]
+		case 114:
[...]
+		default:

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1987: FILE: kernel/power/suspend.c:1949:
+extern void cleanup_finished_suspend_io(void);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1992: FILE: kernel/power/suspend.c:1954:
+^I.resume1 = do_suspend2_resume_1, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1993: FILE: kernel/power/suspend.c:1955:
+^I.resume2 = do_suspend2_resume_2, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1994: FILE: kernel/power/suspend.c:1956:
+^I.suspend1 = do_suspend2_suspend_1, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1995: FILE: kernel/power/suspend.c:1957:
+^I.suspend2 = do_suspend2_suspend_2, $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2010: FILE: kernel/power/suspend.c:1972:
+extern void suspend_memory_pool_init(void);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2019: FILE: kernel/power/suspend.c:1981:
+	printk("Software Suspend Core.\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2020: FILE: kernel/power/suspend.c:1982:
+	for (i=0; i< numfiles; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#2020: FILE: kernel/power/suspend.c:1982:
+	for (i=0; i< numfiles; i++)
 	           ^

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#2027: FILE: kernel/power/suspend.c:1989:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2027: FILE: kernel/power/suspend.c:1989:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2027: FILE: kernel/power/suspend.c:1989:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2027: FILE: kernel/power/suspend.c:1989:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2039: FILE: kernel/power/suspend.c:2001:
+	printk("Software Suspend Core unloading.\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2042: FILE: kernel/power/suspend.c:2004:
+	for (i=0; i< numfiles; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#2042: FILE: kernel/power/suspend.c:2004:
+	for (i=0; i< numfiles; i++)
 	           ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2057: FILE: kernel/power/suspend.c:2019:
+EXPORT_SYMBOL(attempt_to_parse_resume_device);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227920.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 159 errors, 187 warnings, 96 checks, 2019 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227920.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
