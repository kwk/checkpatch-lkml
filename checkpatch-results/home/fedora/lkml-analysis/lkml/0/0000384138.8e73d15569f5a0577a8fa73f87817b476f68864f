WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#66: FILE: scripts/mkconfigs:2:
+#

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#83: FILE: scripts/mkconfigs:19:
+#   along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#84: FILE: scripts/mkconfigs:20:
+#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: scripts/mkconfigs:22:
+# $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#95: FILE: scripts/mkconfigs:31:
+	KERNVER="`grep VERSION $1 | head -1 | cut -f3 -d' '`.`grep PATCHLEVEL $1 | head -1 | cut -f3 -d' '`.`grep SUBLEVEL $1 | head -1 | cut -f3 -d' '``grep EXTRAVERSION $1 | head -1 | cut -f3 -d' '`"
 	                                                                                                                                                      ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: scripts/mkconfigs:47:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#124: FILE: scripts/mkconfigs:60:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#125: FILE: scripts/mkconfigs:61:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: scripts/mkconfigs:64:
+ * $

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#129: FILE: scripts/mkconfigs:65:
+ * This file is generated automatically by scripts/mkconfigs. Do not edit.

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: scripts/extract-ikconfig:1:
+#! /bin/bash $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#151: FILE: scripts/extract-ikconfig:2:
+# extracts .config info from a [b]zImage file

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#220: FILE: scripts/binoffset.c:1:
+/***************************************************************************

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#235: FILE: scripts/binoffset.c:16:
+#   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#236: FILE: scripts/binoffset.c:17:
+#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#264: FILE: scripts/binoffset.c:45:
+unsigned char	patterns [PAT_SIZE] = {0}; /* byte-sized pattern array */

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#268: FILE: scripts/binoffset.c:49:
+int		num_matches = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#269: FILE: scripts/binoffset.c:50:
+off_t		firstloc = 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#271: FILE: scripts/binoffset.c:52:
+void usage (void)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#273: FILE: scripts/binoffset.c:54:
+	fprintf (stderr, "%s ver. %s\n", progname, VERSION);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#274: FILE: scripts/binoffset.c:55:
+	fprintf (stderr, "usage:  %s filename pattern_bytes\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'usage', this function's name, in a string
#274: FILE: scripts/binoffset.c:55:
+	fprintf (stderr, "usage:  %s filename pattern_bytes\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: scripts/binoffset.c:56:
+	fprintf (stderr, "usage:  %s filename pattern_bytes\n",
+			progname);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#276: FILE: scripts/binoffset.c:57:
+	fprintf (stderr, "        [prints location of pattern_bytes in file]\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#277: FILE: scripts/binoffset.c:58:
+	exit (1);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#280: FILE: scripts/binoffset.c:61:
+int get_pattern (int pat_count, char *pats [])

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#280: FILE: scripts/binoffset.c:61:
+int get_pattern (int pat_count, char *pats [])

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#285: FILE: scripts/binoffset.c:66:
+	fprintf (stderr,"get_pattern: count = %d\n", pat_count);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: scripts/binoffset.c:66:
+	fprintf (stderr,"get_pattern: count = %d\n", pat_count);
 	               ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_pattern', this function's name, in a string
#285: FILE: scripts/binoffset.c:66:
+	fprintf (stderr,"get_pattern: count = %d\n", pat_count);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#287: FILE: scripts/binoffset.c:68:
+		fprintf (stderr, "  pat # %d:  [%s]\n", ix, pats[ix]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#292: FILE: scripts/binoffset.c:73:
+		err = sscanf (pats[ix], "%5i", &tmp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#294: FILE: scripts/binoffset.c:75:
+			fprintf (stderr, "pattern or value error in pattern # %d [%s]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: scripts/binoffset.c:76:
+			fprintf (stderr, "pattern or value error in pattern # %d [%s]\n",
+					ix, pats[ix]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#296: FILE: scripts/binoffset.c:77:
+			usage ();

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#298: FILE: scripts/binoffset.c:79:
+		patterns [ix] = tmp;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#303: FILE: scripts/binoffset.c:84:
+int search_pattern (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#307: FILE: scripts/binoffset.c:88:
+			if (memcmp (&madr[bix], patterns, pat_len) == 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#317: FILE: scripts/binoffset.c:98:
+size_t get_filesize (int fd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#319: FILE: scripts/binoffset.c:100:
+	off_t end_off = lseek (fd, 0, SEEK_END);

WARNING:LINE_SPACING: Missing a blank line after declarations
#320: FILE: scripts/binoffset.c:101:
+	off_t end_off = lseek (fd, 0, SEEK_END);
+	lseek (fd, 0, SEEK_SET);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#320: FILE: scripts/binoffset.c:101:
+	lseek (fd, 0, SEEK_SET);

CHECK:SPACING: No space is necessary after a cast
#321: FILE: scripts/binoffset.c:102:
+	return (size_t) end_off;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#325: FILE: scripts/binoffset.c:106:
+size_t get_filesize (int fd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#330: FILE: scripts/binoffset.c:111:
+	err = fstat (fd, &stat);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#331: FILE: scripts/binoffset.c:112:
+	fprintf (stderr, "filesize: %d\n", err < 0 ? err : stat.st_size);

CHECK:SPACING: No space is necessary after a cast
#334: FILE: scripts/binoffset.c:115:
+	return (size_t) stat.st_size;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#337: FILE: scripts/binoffset.c:118:
+int main (int argc, char *argv [])

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#337: FILE: scripts/binoffset.c:118:
+int main (int argc, char *argv [])

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#342: FILE: scripts/binoffset.c:123:
+		usage ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#344: FILE: scripts/binoffset.c:125:
+	get_pattern (argc - 2, argv + 2);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#348: FILE: scripts/binoffset.c:129:
+	inputfd = open (inputname, O_RDONLY);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#350: FILE: scripts/binoffset.c:131:
+		fprintf (stderr, "%s: cannot open '%s'\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: scripts/binoffset.c:132:
+		fprintf (stderr, "%s: cannot open '%s'\n",
+				progname, inputname);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#352: FILE: scripts/binoffset.c:133:
+		exit (3);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#355: FILE: scripts/binoffset.c:136:
+	filesize = get_filesize (inputfd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#357: FILE: scripts/binoffset.c:138:
+	madr = mmap (0, filesize, PROT_READ, MAP_PRIVATE, inputfd, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#359: FILE: scripts/binoffset.c:140:
+		fprintf (stderr, "mmap error = %d\n", errno);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#360: FILE: scripts/binoffset.c:141:
+		close (inputfd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#361: FILE: scripts/binoffset.c:142:
+		exit (4);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#364: FILE: scripts/binoffset.c:145:
+	search_pattern ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#366: FILE: scripts/binoffset.c:147:
+	if (munmap (madr, filesize))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#367: FILE: scripts/binoffset.c:148:
+		fprintf (stderr, "munmap error = %d\n", errno);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#369: FILE: scripts/binoffset.c:150:
+	if (close (inputfd))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#370: FILE: scripts/binoffset.c:151:
+		fprintf (stderr, "%s: error %d closing '%s'\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: scripts/binoffset.c:152:
+		fprintf (stderr, "%s: error %d closing '%s'\n",
+				progname, errno, inputname);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#373: FILE: scripts/binoffset.c:154:
+	fprintf (stderr, "number of pattern matches = %d\n", num_matches);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#376: FILE: scripts/binoffset.c:157:
+	printf ("%d\n", firstloc);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#377: FILE: scripts/binoffset.c:158:
+	fprintf (stderr, "%d\n", firstloc);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#379: FILE: scripts/binoffset.c:160:
+	exit (num_matches ? 0 : 2);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#387: FILE: kernel/configs.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#388: FILE: kernel/configs.c:2:
+ * kernel/configs.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#408: FILE: kernel/configs.c:22:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#409: FILE: kernel/configs.c:23:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#418: FILE: kernel/configs.c:32:
+#include <asm/uaccess.h>

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#433: FILE: kernel/configs.c:47:
+static int ikconfig_current_size = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#445: FILE: kernel/configs.c:59:
+ikconfig_output_current(struct file *file, char *buf,
+			 size_t len, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#445: FILE: kernel/configs.c:59:
+			 size_t len, loff_t * offset)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#475: FILE: kernel/configs.c:89:
+static struct file_operations ikconfig_file_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#481: FILE: kernel/configs.c:95:
+static struct inode_operations ikconfig_inode_ops = {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#507: FILE: kernel/configs.c:121:
+	printk(KERN_INFO "ikconfig %s with /proc/ikconfig\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ikconfig_dir"
#512: FILE: kernel/configs.c:126:
+	if (ikconfig_dir == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#519: FILE: kernel/configs.c:133:
+	current_config = create_proc_entry("config", S_IFREG | S_IRUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!current_config"
#521: FILE: kernel/configs.c:135:
+	if (current_config == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!built_with"
#534: FILE: kernel/configs.c:148:
+	if (built_with == NULL) {

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#606: FILE: init/Kconfig:111:
+config IKCONFIG
+	bool "Kernel .config support"
+	---help---
+	  This option enables the complete Linux kernel ".config" file 
+	  contents, information on compiler used to build the kernel, 
+	  kernel running when this kernel was built and kernel version 
+	  from Makefile to be saved in kernel. It provides documentation 
+	  of which kernel options are used in a running kernel or in an 
+	  on-disk kernel.  This information can be extracted from the kernel 
+	  image file with the script scripts/extract-ikconfig and used as 
+	  input to rebuild the current kernel or to build another kernel. 
+	  It can also be extracted from a running kernel by reading 
+	  /proc/ikconfig/config and /proc/ikconfig/built_with, if enabled. 
+	  /proc/ikconfig/config will list the configuration that was used 
+	  to build the kernel and /proc/ikconfig/built_with will list 
+	  information on the compiler and host machine that was used to 
+	  build the kernel.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#609: FILE: init/Kconfig:114:
+^I  This option enables the complete Linux kernel ".config" file $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#610: FILE: init/Kconfig:115:
+^I  contents, information on compiler used to build the kernel, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#611: FILE: init/Kconfig:116:
+^I  kernel running when this kernel was built and kernel version $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#612: FILE: init/Kconfig:117:
+^I  from Makefile to be saved in kernel. It provides documentation $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#613: FILE: init/Kconfig:118:
+^I  of which kernel options are used in a running kernel or in an $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#614: FILE: init/Kconfig:119:
+^I  on-disk kernel.  This information can be extracted from the kernel $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#615: FILE: init/Kconfig:120:
+^I  image file with the script scripts/extract-ikconfig and used as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#616: FILE: init/Kconfig:121:
+^I  input to rebuild the current kernel or to build another kernel. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#617: FILE: init/Kconfig:122:
+^I  It can also be extracted from a running kernel by reading $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#618: FILE: init/Kconfig:123:
+^I  /proc/ikconfig/config and /proc/ikconfig/built_with, if enabled. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#619: FILE: init/Kconfig:124:
+^I  /proc/ikconfig/config will list the configuration that was used $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#620: FILE: init/Kconfig:125:
+^I  to build the kernel and /proc/ikconfig/built_with will list $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#621: FILE: init/Kconfig:126:
+^I  information on the compiler and host machine that was used to $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#624: FILE: init/Kconfig:129:
+config IKCONFIG_PROC
+	bool "Enable access to .config through /proc/ikconfig"
+	depends on IKCONFIG
+	---help---
+	  This option enables access to kernel configuration file and build
+	  information through /proc/ikconfig.
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000384138.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 34 errors, 62 warnings, 10 checks, 548 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000384138.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
