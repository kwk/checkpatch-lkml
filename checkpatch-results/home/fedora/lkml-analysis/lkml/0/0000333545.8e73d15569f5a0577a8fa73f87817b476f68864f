ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#70: 
--- a/fs/buffer.c	Mon Sep 29 23:12:35 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#77: FILE: fs/buffer.c:3039:
+EXPORT_SYMBOL(__bforget);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#79: FILE: fs/buffer.c:3041:
+EXPORT_SYMBOL(__wait_on_buffer);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#80: FILE: fs/buffer.c:3042:
+EXPORT_SYMBOL(block_commit_write);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#81: FILE: fs/buffer.c:3043:
+EXPORT_SYMBOL(block_prepare_write);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#82: FILE: fs/buffer.c:3044:
+EXPORT_SYMBOL(block_read_full_page);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#83: FILE: fs/buffer.c:3045:
+EXPORT_SYMBOL(block_sync_page);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#84: FILE: fs/buffer.c:3046:
+EXPORT_SYMBOL(block_truncate_page);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#85: FILE: fs/buffer.c:3047:
+EXPORT_SYMBOL(block_write_full_page);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#86: FILE: fs/buffer.c:3048:
+EXPORT_SYMBOL(buffer_insert_list);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#87: FILE: fs/buffer.c:3049:
+EXPORT_SYMBOL(cont_prepare_write);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#88: FILE: fs/buffer.c:3050:
+EXPORT_SYMBOL(end_buffer_async_write);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#89: FILE: fs/buffer.c:3051:
+EXPORT_SYMBOL(end_buffer_read_sync);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#90: FILE: fs/buffer.c:3052:
+EXPORT_SYMBOL(end_buffer_write_sync);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#91: FILE: fs/buffer.c:3053:
+EXPORT_SYMBOL(file_fsync);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#92: FILE: fs/buffer.c:3054:
+EXPORT_SYMBOL(fsync_bdev);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#93: FILE: fs/buffer.c:3055:
+EXPORT_SYMBOL(fsync_buffers_list);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#94: FILE: fs/buffer.c:3056:
+EXPORT_SYMBOL(generic_block_bmap);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#95: FILE: fs/buffer.c:3057:
+EXPORT_SYMBOL(generic_commit_write);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#96: FILE: fs/buffer.c:3058:
+EXPORT_SYMBOL(generic_cont_expand);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#97: FILE: fs/buffer.c:3059:
+EXPORT_SYMBOL(init_buffer);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#98: FILE: fs/buffer.c:3060:
+EXPORT_SYMBOL(invalidate_bdev);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#99: FILE: fs/buffer.c:3061:
+EXPORT_SYMBOL(ll_rw_block);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#100: FILE: fs/buffer.c:3062:
+EXPORT_SYMBOL(mark_buffer_dirty);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#101: FILE: fs/buffer.c:3063:
+EXPORT_SYMBOL(submit_bh);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#102: FILE: fs/buffer.c:3064:
+EXPORT_SYMBOL(sync_dirty_buffer);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#103: FILE: fs/buffer.c:3065:
+EXPORT_SYMBOL(unlock_buffer);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#112: FILE: fs/dcache.c:1643:
+EXPORT_SYMBOL(d_alloc);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#114: FILE: fs/dcache.c:1645:
+EXPORT_SYMBOL(d_alloc_root);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#115: FILE: fs/dcache.c:1646:
+EXPORT_SYMBOL(d_delete);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#116: FILE: fs/dcache.c:1647:
+EXPORT_SYMBOL(d_find_alias);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#117: FILE: fs/dcache.c:1648:
+EXPORT_SYMBOL(d_instantiate);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#118: FILE: fs/dcache.c:1649:
+EXPORT_SYMBOL(d_invalidate);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#119: FILE: fs/dcache.c:1650:
+EXPORT_SYMBOL(d_lookup);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#120: FILE: fs/dcache.c:1651:
+EXPORT_SYMBOL(d_move);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#121: FILE: fs/dcache.c:1652:
+EXPORT_SYMBOL(d_path);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#122: FILE: fs/dcache.c:1653:
+EXPORT_SYMBOL(d_prune_aliases);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#123: FILE: fs/dcache.c:1654:
+EXPORT_SYMBOL(d_rehash);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#124: FILE: fs/dcache.c:1655:
+EXPORT_SYMBOL(d_splice_alias);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#125: FILE: fs/dcache.c:1656:
+EXPORT_SYMBOL(d_validate);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#126: FILE: fs/dcache.c:1657:
+EXPORT_SYMBOL(dget_locked);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#127: FILE: fs/dcache.c:1658:
+EXPORT_SYMBOL(dput);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#128: FILE: fs/dcache.c:1659:
+EXPORT_SYMBOL(find_inode_number);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#129: FILE: fs/dcache.c:1660:
+EXPORT_SYMBOL(have_submounts);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#130: FILE: fs/dcache.c:1661:
+EXPORT_SYMBOL(is_subdir);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#131: FILE: fs/dcache.c:1662:
+EXPORT_SYMBOL(names_cachep);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#132: FILE: fs/dcache.c:1663:
+EXPORT_SYMBOL(shrink_dcache_anon);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#133: FILE: fs/dcache.c:1664:
+EXPORT_SYMBOL(shrink_dcache_parent);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#134: FILE: fs/dcache.c:1665:
+EXPORT_SYMBOL(shrink_dcache_sb);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#143: FILE: fs/libfs.c:433:
+EXPORT_SYMBOL(dcache_dir_close);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#145: FILE: fs/libfs.c:435:
+EXPORT_SYMBOL(dcache_dir_open);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#146: FILE: fs/libfs.c:436:
+EXPORT_SYMBOL(dcache_readdir);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#147: FILE: fs/libfs.c:437:
+EXPORT_SYMBOL(generic_read_dir);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#148: FILE: fs/libfs.c:438:
+EXPORT_SYMBOL(simple_commit_write);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#149: FILE: fs/libfs.c:439:
+EXPORT_SYMBOL(simple_dir_inode_operations);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#150: FILE: fs/libfs.c:440:
+EXPORT_SYMBOL(simple_dir_operations);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#151: FILE: fs/libfs.c:441:
+EXPORT_SYMBOL(simple_empty);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#152: FILE: fs/libfs.c:442:
+EXPORT_SYMBOL(simple_fill_super);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#153: FILE: fs/libfs.c:443:
+EXPORT_SYMBOL(simple_getattr);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#154: FILE: fs/libfs.c:444:
+EXPORT_SYMBOL(simple_link);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#155: FILE: fs/libfs.c:445:
+EXPORT_SYMBOL(simple_lookup);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#156: FILE: fs/libfs.c:446:
+EXPORT_SYMBOL(simple_pin_fs);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#157: FILE: fs/libfs.c:447:
+EXPORT_SYMBOL(simple_prepare_write);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#158: FILE: fs/libfs.c:448:
+EXPORT_SYMBOL(simple_readpage);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#159: FILE: fs/libfs.c:449:
+EXPORT_SYMBOL(simple_release_fs);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#160: FILE: fs/libfs.c:450:
+EXPORT_SYMBOL(simple_rename);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#161: FILE: fs/libfs.c:451:
+EXPORT_SYMBOL(simple_rmdir);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#162: FILE: fs/libfs.c:452:
+EXPORT_SYMBOL(simple_statfs);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#163: FILE: fs/libfs.c:453:
+EXPORT_SYMBOL(simple_sync_file);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#164: FILE: fs/libfs.c:454:
+EXPORT_SYMBOL(simple_unlink);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#181: FILE: fs/namei.c:2280:
+EXPORT_SYMBOL(__user_walk);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#182: FILE: fs/namei.c:2281:
+EXPORT_SYMBOL(follow_down);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#183: FILE: fs/namei.c:2282:
+EXPORT_SYMBOL(follow_up);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#184: FILE: fs/namei.c:2283:
+EXPORT_SYMBOL(get_write_access); /* binfmt_aout */

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#186: FILE: fs/namei.c:2285:
+EXPORT_SYMBOL(lock_rename);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#187: FILE: fs/namei.c:2286:
+EXPORT_SYMBOL(lookup_create);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#188: FILE: fs/namei.c:2287:
+EXPORT_SYMBOL(lookup_hash);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#189: FILE: fs/namei.c:2288:
+EXPORT_SYMBOL(lookup_one_len);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#190: FILE: fs/namei.c:2289:
+EXPORT_SYMBOL(page_follow_link);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#191: FILE: fs/namei.c:2290:
+EXPORT_SYMBOL(page_readlink);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#192: FILE: fs/namei.c:2291:
+EXPORT_SYMBOL(page_symlink);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#193: FILE: fs/namei.c:2292:
+EXPORT_SYMBOL(page_symlink_inode_operations);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#194: FILE: fs/namei.c:2293:
+EXPORT_SYMBOL(path_lookup);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#195: FILE: fs/namei.c:2294:
+EXPORT_SYMBOL(path_release);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#196: FILE: fs/namei.c:2295:
+EXPORT_SYMBOL(path_walk);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#197: FILE: fs/namei.c:2296:
+EXPORT_SYMBOL(permission);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#198: FILE: fs/namei.c:2297:
+EXPORT_SYMBOL(unlock_rename);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#199: FILE: fs/namei.c:2298:
+EXPORT_SYMBOL(vfs_create);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#200: FILE: fs/namei.c:2299:
+EXPORT_SYMBOL(vfs_follow_link);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#201: FILE: fs/namei.c:2300:
+EXPORT_SYMBOL(vfs_link);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#202: FILE: fs/namei.c:2301:
+EXPORT_SYMBOL(vfs_mkdir);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#203: FILE: fs/namei.c:2302:
+EXPORT_SYMBOL(vfs_mknod);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#204: FILE: fs/namei.c:2303:
+EXPORT_SYMBOL(vfs_permission);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#205: FILE: fs/namei.c:2304:
+EXPORT_SYMBOL(vfs_readlink);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#206: FILE: fs/namei.c:2305:
+EXPORT_SYMBOL(vfs_rename);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#207: FILE: fs/namei.c:2306:
+EXPORT_SYMBOL(vfs_rmdir);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#208: FILE: fs/namei.c:2307:
+EXPORT_SYMBOL(vfs_symlink);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#209: FILE: fs/namei.c:2308:
+EXPORT_SYMBOL(vfs_unlink);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#484: FILE: kernel/sched.c:2867:
+EXPORT_SYMBOL(__cond_resched);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#486: FILE: kernel/sched.c:2869:
+EXPORT_SYMBOL(__wake_up_sync);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#487: FILE: kernel/sched.c:2870:
+EXPORT_SYMBOL(complete);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#488: FILE: kernel/sched.c:2871:
+EXPORT_SYMBOL(default_wake_function);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#489: FILE: kernel/sched.c:2872:
+EXPORT_SYMBOL(idle_cpu);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#490: FILE: kernel/sched.c:2873:
+EXPORT_SYMBOL(interruptible_sleep_on);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#491: FILE: kernel/sched.c:2874:
+EXPORT_SYMBOL(interruptible_sleep_on_timeout);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#492: FILE: kernel/sched.c:2875:
+EXPORT_SYMBOL(io_schedule);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#493: FILE: kernel/sched.c:2876:
+EXPORT_SYMBOL(schedule);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#494: FILE: kernel/sched.c:2877:
+EXPORT_SYMBOL(set_cpus_allowed);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#495: FILE: kernel/sched.c:2878:
+EXPORT_SYMBOL(set_user_nice);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#496: FILE: kernel/sched.c:2879:
+EXPORT_SYMBOL(sleep_on);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#497: FILE: kernel/sched.c:2880:
+EXPORT_SYMBOL(sleep_on_timeout);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#498: FILE: kernel/sched.c:2881:
+EXPORT_SYMBOL(task_nice);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#499: FILE: kernel/sched.c:2882:
+EXPORT_SYMBOL(wait_for_completion);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#500: FILE: kernel/sched.c:2883:
+EXPORT_SYMBOL(wake_up_process);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#501: FILE: kernel/sched.c:2884:
+EXPORT_SYMBOL(yield);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#509: FILE: kernel/sched.c:2892:
+EXPORT_SYMBOL(__preempt_write_lock);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000333545.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 115 warnings, 0 checks, 406 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000333545.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
