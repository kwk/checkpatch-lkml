WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#39: 
or it wont work.
      ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#54: FILE: drivers/block/ll_rw_blk.c:673:
+	printk("sector %llu, nr/cnr %lu/%u\n", (unsigned long long)rq->sector,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#55: FILE: drivers/block/ll_rw_blk.c:674:
+	printk("sector %llu, nr/cnr %lu/%u\n", (unsigned long long)rq->sector,
 						       rq->nr_sectors,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#59: FILE: drivers/block/ll_rw_blk.c:676:
+	printk("bio %p, biotail %p\n", rq->bio, rq->biotail);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#80: FILE: drivers/block/ll_rw_blk.c:1971:
+			printk("end_request: I/O error, dev %s, sector %llu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#81: FILE: drivers/block/ll_rw_blk.c:1972:
+			printk("end_request: I/O error, dev %s, sector %llu\n",
+				kdevname(req->rq_dev),

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#91: FILE: drivers/block/ll_rw_blk.c:1980:
+			printk("%s: bio idx %d >= vcnt %d\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#91: FILE: drivers/block/ll_rw_blk.c:1980:
+			printk("%s: bio idx %d >= vcnt %d\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: drivers/block/ll_rw_blk.c:1981:
+			printk("%s: bio idx %d >= vcnt %d\n", __FUNCTION__,
+						bio->bi_idx, bio->bi_vcnt);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#204: FILE: drivers/block/scsi_ioctl.c:142:
+	reading = writing = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#215: FILE: drivers/block/scsi_ioctl.c:153:
+			/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:SPACING: No space is necessary after a cast
#231: FILE: drivers/block/scsi_ioctl.c:162:
+		uaddr = (unsigned long) hdr.dxferp;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#254: FILE: drivers/block/scsi_ioctl.c:185:
+				copy_from_user(buffer,hdr.dxferp,hdr.dxfer_len);
 				                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#254: FILE: drivers/block/scsi_ioctl.c:185:
+				copy_from_user(buffer,hdr.dxferp,hdr.dxfer_len);
 				                                ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#260: FILE: drivers/block/scsi_ioctl.c:190:
+	rq->bio = rq->biotail = bio;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#268: FILE: drivers/block/scsi_ioctl.c:198:
+		rq->hard_nr_sectors = rq->nr_sectors = bio_sectors(bio);

CHECK:SPACING: No space is necessary after a cast
#317: FILE: drivers/block/scsi_ioctl.c:267:
+			return sg_io(q, bdev, (struct sg_io_hdr *) arg);

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#370: FILE: drivers/ide/ide-cd.c:638:
+static int cdrom_end_request (ide_drive_t *drive, int uptodate)
                                                       ^^^^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#370: FILE: drivers/ide/ide-cd.c:638:
+static int cdrom_end_request (ide_drive_t *drive, int uptodate)

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#382: FILE: drivers/ide/ide-cd.c:656:
+			uptodate = 1;
 			^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#385: FILE: drivers/ide/ide-cd.c:658:
+	return ide_end_request(drive, uptodate, rq->hard_cur_sectors);
 	                              ^^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#455: FILE: drivers/ide/ide-cd.c:1034:
+				printk("%s: bad end_request return\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#455: FILE: drivers/ide/ide-cd.c:1034:
+				printk("%s: bad end_request return\n", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#502: FILE: drivers/ide/ide-cd.c:1232:
+		if (rq->current_nr_sectors != bio_cur_sectors(rq->bio) &&
 			(rq->sector % CD_FRAMESIZE != 0)) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#510: FILE: drivers/ide/ide-cd.c:1331:
+	rq->hard_cur_sectors = rq->current_nr_sectors = bio_cur_sectors(rq->bio);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#519: FILE: drivers/ide/ide-cd.c:1620:
+		printk("%s: rq is gone\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#519: FILE: drivers/ide/ide-cd.c:1620:
+		printk("%s: rq is gone\n", __FUNCTION__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#590: FILE: drivers/ide/ide-cd.c:1829:
+			printk("%s: block pc not aligned, len=%d\n", drive->name, rq->data_len);

CHECK:CAMELCASE: Avoid CamelCase: <SCpnt>
#689: FILE: drivers/scsi/scsi_lib.c:922:
+		if (SCpnt->request->flags & (REQ_CMD | REQ_BLOCK_PC)) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Device>
#766: FILE: drivers/scsi/sd.c:309:
+	Scsi_Device *sdp = SCpnt->device;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#836: FILE: drivers/scsi/sr.c:265:
+	int dev, devm, block=0, this_count, s_size, timeout = SR_TIMEOUT;
 	                    ^

CHECK:SPACING: No space is necessary after a cast
#905: FILE: drivers/scsi/sym53c8xx_2/sym_glue.c:1800:
+	host_data = (struct host_data *) host->hostdata;

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1033: FILE: fs/bio.c:495:
+	pages = kmalloc(nr_pages * sizeof(struct page *), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1042: FILE: fs/bio.c:504:
+	ret = get_user_pages(current, current->mm, uaddr, nr_pages, read, 0,
+								pages, NULL);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1181: FILE: include/linux/bio.h:218:
+extern struct bio *bio_map_user(struct block_device *, unsigned long,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#1181: FILE: include/linux/bio.h:218:
+extern struct bio *bio_map_user(struct block_device *, unsigned long,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1181: FILE: include/linux/bio.h:218:
+extern struct bio *bio_map_user(struct block_device *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1181: FILE: include/linux/bio.h:218:
+extern struct bio *bio_map_user(struct block_device *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1181: FILE: include/linux/bio.h:218:
+extern struct bio *bio_map_user(struct block_device *, unsigned long,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422047.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 21 warnings, 15 checks, 1048 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422047.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
