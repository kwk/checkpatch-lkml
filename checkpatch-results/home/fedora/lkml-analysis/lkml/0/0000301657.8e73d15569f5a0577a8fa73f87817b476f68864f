WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
> .mod file. Then in sumversion find the corresponding .file.o.cmd, and parse

WARNING:TYPO_SPELLING: 'extraversion' may be misspelled - perhaps 'extroversion'?
#54: 
 [<epoch>`:']<version>[`-'<extraversion>]
                           ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'extraversion' may be misspelled - perhaps 'extroversion'?
#59: 
 <extraversion>: Like <version>, but inserted for local
  ^^^^^^^^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'one'
#65: 
one one at a time: digit parts numerically, alphabetical in ASCII

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#76: FILE: include/linux/module.h:131:
+/* Version of form [<epoch>:]<version>[-<extra-version>].
+   Or for CVS/RCS ID version, everything but the number is stripped.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: include/linux/module.h:133:
+           anew. If not mentioned, it's zero.  eg. "2:1.0" is after$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: include/linux/module.h:136:
+           character `.'.  Ordered by numeric sort for numeric parts,$

WARNING:TYPO_SPELLING: 'extraversion' may be misspelled - perhaps 'extroversion'?
#83: FILE: include/linux/module.h:138:
+  <extraversion>: Like <version>, but inserted for local
    ^^^^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: include/linux/module.h:139:
+           customizations, eg "rh3" or "rusty1".$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: include/linux/module.h:146:
+  MODULE_INFO(version, _version "\0xxxxxxxxxxxxxxxxxxxxxxxx")$

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#245: FILE: scripts/modpost.c:250:
+		const char *secstrings
+			= (void *)hdr + sechdrs[hdr->e_shstrndx].sh_offset;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#249: FILE: scripts/modpost.c:254:
+		if (strcmp(secstrings+sechdrs[i].sh_name, ".modinfo") == 0) {
 		                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#301: FILE: scripts/sumversion.c:1:
+#include <netinet/in.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: scripts/sumversion.c:41:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#369: FILE: scripts/sumversion.c:69:
+	uint32_t hash[MD4_HASH_WORDS];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#370: FILE: scripts/sumversion.c:70:
+	uint32_t block[MD4_BLOCK_WORDS];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#371: FILE: scripts/sumversion.c:71:
+	uint64_t byte_count;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#374: FILE: scripts/sumversion.c:74:
+static inline uint32_t lshift(uint32_t x, unsigned int s)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#380: FILE: scripts/sumversion.c:80:
+static inline uint32_t F(uint32_t x, uint32_t y, uint32_t z)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#385: FILE: scripts/sumversion.c:85:
+static inline uint32_t G(uint32_t x, uint32_t y, uint32_t z)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#390: FILE: scripts/sumversion.c:90:
+static inline uint32_t H(uint32_t x, uint32_t y, uint32_t z)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#394: FILE: scripts/sumversion.c:94:
+                        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: scripts/sumversion.c:94:
+                        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: scripts/sumversion.c:94:
+                        $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#395: FILE: scripts/sumversion.c:95:
+#define ROUND1(a,b,c,d,k,s) (a = lshift(a + F(b,c,d) + k, s))
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#395: FILE: scripts/sumversion.c:95:
+#define ROUND1(a,b,c,d,k,s) (a = lshift(a + F(b,c,d) + k, s))
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#395: FILE: scripts/sumversion.c:95:
+#define ROUND1(a,b,c,d,k,s) (a = lshift(a + F(b,c,d) + k, s))
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#395: FILE: scripts/sumversion.c:95:
+#define ROUND1(a,b,c,d,k,s) (a = lshift(a + F(b,c,d) + k, s))
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#395: FILE: scripts/sumversion.c:95:
+#define ROUND1(a,b,c,d,k,s) (a = lshift(a + F(b,c,d) + k, s))
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#395: FILE: scripts/sumversion.c:95:
+#define ROUND1(a,b,c,d,k,s) (a = lshift(a + F(b,c,d) + k, s))
                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#395: FILE: scripts/sumversion.c:95:
+#define ROUND1(a,b,c,d,k,s) (a = lshift(a + F(b,c,d) + k, s))
                                                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#395: FILE: scripts/sumversion.c:95:
+#define ROUND1(a,b,c,d,k,s) (a = lshift(a + F(b,c,d) + k, s))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'k' may be better as '(k)' to avoid precedence issues
#395: FILE: scripts/sumversion.c:95:
+#define ROUND1(a,b,c,d,k,s) (a = lshift(a + F(b,c,d) + k, s))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#396: FILE: scripts/sumversion.c:96:
+#define ROUND2(a,b,c,d,k,s) (a = lshift(a + G(b,c,d) + k + (uint32_t)0x5A827999,s))
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#396: FILE: scripts/sumversion.c:96:
+#define ROUND2(a,b,c,d,k,s) (a = lshift(a + G(b,c,d) + k + (uint32_t)0x5A827999,s))
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#396: FILE: scripts/sumversion.c:96:
+#define ROUND2(a,b,c,d,k,s) (a = lshift(a + G(b,c,d) + k + (uint32_t)0x5A827999,s))
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#396: FILE: scripts/sumversion.c:96:
+#define ROUND2(a,b,c,d,k,s) (a = lshift(a + G(b,c,d) + k + (uint32_t)0x5A827999,s))
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#396: FILE: scripts/sumversion.c:96:
+#define ROUND2(a,b,c,d,k,s) (a = lshift(a + G(b,c,d) + k + (uint32_t)0x5A827999,s))
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#396: FILE: scripts/sumversion.c:96:
+#define ROUND2(a,b,c,d,k,s) (a = lshift(a + G(b,c,d) + k + (uint32_t)0x5A827999,s))
                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#396: FILE: scripts/sumversion.c:96:
+#define ROUND2(a,b,c,d,k,s) (a = lshift(a + G(b,c,d) + k + (uint32_t)0x5A827999,s))
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#396: FILE: scripts/sumversion.c:96:
+#define ROUND2(a,b,c,d,k,s) (a = lshift(a + G(b,c,d) + k + (uint32_t)0x5A827999,s))
                                                                                ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#396: FILE: scripts/sumversion.c:96:
+#define ROUND2(a,b,c,d,k,s) (a = lshift(a + G(b,c,d) + k + (uint32_t)0x5A827999,s))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'k' may be better as '(k)' to avoid precedence issues
#396: FILE: scripts/sumversion.c:96:
+#define ROUND2(a,b,c,d,k,s) (a = lshift(a + G(b,c,d) + k + (uint32_t)0x5A827999,s))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#397: FILE: scripts/sumversion.c:97:
+#define ROUND3(a,b,c,d,k,s) (a = lshift(a + H(b,c,d) + k + (uint32_t)0x6ED9EBA1,s))
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#397: FILE: scripts/sumversion.c:97:
+#define ROUND3(a,b,c,d,k,s) (a = lshift(a + H(b,c,d) + k + (uint32_t)0x6ED9EBA1,s))
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#397: FILE: scripts/sumversion.c:97:
+#define ROUND3(a,b,c,d,k,s) (a = lshift(a + H(b,c,d) + k + (uint32_t)0x6ED9EBA1,s))
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#397: FILE: scripts/sumversion.c:97:
+#define ROUND3(a,b,c,d,k,s) (a = lshift(a + H(b,c,d) + k + (uint32_t)0x6ED9EBA1,s))
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#397: FILE: scripts/sumversion.c:97:
+#define ROUND3(a,b,c,d,k,s) (a = lshift(a + H(b,c,d) + k + (uint32_t)0x6ED9EBA1,s))
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#397: FILE: scripts/sumversion.c:97:
+#define ROUND3(a,b,c,d,k,s) (a = lshift(a + H(b,c,d) + k + (uint32_t)0x6ED9EBA1,s))
                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#397: FILE: scripts/sumversion.c:97:
+#define ROUND3(a,b,c,d,k,s) (a = lshift(a + H(b,c,d) + k + (uint32_t)0x6ED9EBA1,s))
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#397: FILE: scripts/sumversion.c:97:
+#define ROUND3(a,b,c,d,k,s) (a = lshift(a + H(b,c,d) + k + (uint32_t)0x6ED9EBA1,s))
                                                                                ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#397: FILE: scripts/sumversion.c:97:
+#define ROUND3(a,b,c,d,k,s) (a = lshift(a + H(b,c,d) + k + (uint32_t)0x6ED9EBA1,s))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'k' may be better as '(k)' to avoid precedence issues
#397: FILE: scripts/sumversion.c:97:
+#define ROUND3(a,b,c,d,k,s) (a = lshift(a + H(b,c,d) + k + (uint32_t)0x6ED9EBA1,s))

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#400: FILE: scripts/sumversion.c:100:
+static inline void le32_to_cpu_array(uint32_t *buf, unsigned int words)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#408: FILE: scripts/sumversion.c:108:
+static inline void cpu_to_le32_array(uint32_t *buf, unsigned int words)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#416: FILE: scripts/sumversion.c:116:
+static void md4_transform(uint32_t *hash, uint32_t const *in)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#418: FILE: scripts/sumversion.c:118:
+	uint32_t a, b, c, d;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#442: FILE: scripts/sumversion.c:142:
+	ROUND2(a, b, c, d,in[ 0], 3);
 	                 ^

ERROR:SPACING: space prohibited after that open square bracket '['
#442: FILE: scripts/sumversion.c:142:
+	ROUND2(a, b, c, d,in[ 0], 3);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#459: FILE: scripts/sumversion.c:159:
+	ROUND3(a, b, c, d,in[ 0], 3);
 	                 ^

ERROR:SPACING: space prohibited after that open square bracket '['
#459: FILE: scripts/sumversion.c:159:
+	ROUND3(a, b, c, d,in[ 0], 3);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#500: FILE: scripts/sumversion.c:200:
+	const uint32_t avail = sizeof(mctx->block) - (mctx->byte_count & 0x3f);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#535: FILE: scripts/sumversion.c:235:
+		memset(p, 0x00, padding + sizeof (uint64_t));

ERROR:CODE_INDENT: code indent should use tabs where possible
#545: FILE: scripts/sumversion.c:245:
+^I                  sizeof(uint64_t)) / sizeof(uint32_t));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#548: FILE: scripts/sumversion.c:248:
+^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#600: FILE: scripts/sumversion.c:300:
+		if (file[i] == '"' && file[i-1] != '\\')
 		                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#611: FILE: scripts/sumversion.c:311:
+		if (file[i-1] == '*' && file[i] == '/')
 		          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'literal' - possible side-effects?
#628: FILE: scripts/sumversion.c:328:
+#define strneq(str, literal) (strncmp((str), (literal), strlen(literal)) == 0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#637: FILE: scripts/sumversion.c:337:
+	i += skip_whitespace(file+i, len - i);
 	                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#642: FILE: scripts/sumversion.c:342:
+^Imd4_update(md, (unsigned char *)"include", strlen("include"));^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#644: FILE: scripts/sumversion.c:344:
+	i += skip_whitespace(file+i, len - i);
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#648: FILE: scripts/sumversion.c:348:
+		return i-1;
 		        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#649: FILE: scripts/sumversion.c:349:
+	include_file(file+i+1, len - i - 1, base, md);
 	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#649: FILE: scripts/sumversion.c:349:
+	include_file(file+i+1, len - i - 1, base, md);
 	                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#650: FILE: scripts/sumversion.c:350:
+	return i-1;
 	        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#666: FILE: scripts/sumversion.c:366:
+		if (file[i] == '\\' && (i+1 < len) && file[i+1] == '\n') {
 		                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#666: FILE: scripts/sumversion.c:366:
+		if (file[i] == '\\' && (i+1 < len) && file[i+1] == '\n') {
 		                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#680: FILE: scripts/sumversion.c:380:
+			i += parse_string(file+i, len - i, md);
 			                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#686: FILE: scripts/sumversion.c:386:
+		if (file[i] == '/' && file[i+1] == '*') {
 		                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#687: FILE: scripts/sumversion.c:387:
+			i += parse_comment(file+i, len - i);
 			                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#694: FILE: scripts/sumversion.c:394:
+			i += parse_cpp_line(file+i, len - i, fname, md);
 			                        ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#706: FILE: scripts/sumversion.c:406:
+ * figure out source file. */

CHECK:BRACES: braces {} should be used on all arms of this statement
#716: FILE: scripts/sumversion.c:416:
+	if (base) {
[...]
+	} else 
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#719: FILE: scripts/sumversion.c:419:
+^I} else $

CHECK:BRACES: Unbalanced braces around else statement
#719: FILE: scripts/sumversion.c:419:
+	} else 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#730: FILE: scripts/sumversion.c:430:
+	/* There will be a line like so:
+		   deps_drivers/scsi/aic7xxx/aic7xxx_osm.o := \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#751: FILE: scripts/sumversion.c:451:
+	source = malloc(len+1);
 	                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#769: FILE: scripts/sumversion.c:469:
+	/* Source files for module are in .tmp_versions/modname.mod,
+	   after the first line. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#769: FILE: scripts/sumversion.c:469:
+	   after the first line. */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#776: FILE: scripts/sumversion.c:476:
+	strcpy(filelist + strlen(filelist)-2, ".mod");
 	                                  ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#804: FILE: scripts/sumversion.c:504:
+		char *source = get_source_name(fname);
+		if (source && !parse_file(source, &md)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#813: FILE: scripts/sumversion.c:513:
+^I/* sum is of form \0<padding>. */ $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#814: FILE: scripts/sumversion.c:514:
+	md4_final_ascii(&md, sum, 1 + strlen(sum+1));
 	                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#837: FILE: scripts/sumversion.c:537:
+	if (write(fd, sum, strlen(sum)+1) != strlen(sum)+1) {
 	                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#837: FILE: scripts/sumversion.c:537:
+	if (write(fd, sum, strlen(sum)+1) != strlen(sum)+1) {
 	                                                ^

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#850: FILE: scripts/sumversion.c:550:
+	if (strncmp(version, "$Revision", strlen("$Revision")) != 0)

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#857: FILE: scripts/sumversion.c:557:
+	 * $Revision$ or $Revision: */

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#857: FILE: scripts/sumversion.c:557:
+	 * $Revision$ or $Revision: */

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#858: FILE: scripts/sumversion.c:558:
+	len = strlen("$Revision");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#861: FILE: scripts/sumversion.c:561:
+^Iwhile (isspace(version[len])) $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#863: FILE: scripts/sumversion.c:563:
+	memmove(version, version+len, full_len-len);
 	                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#863: FILE: scripts/sumversion.c:563:
+	memmove(version, version+len, full_len-len);
 	                                      ^

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#886: FILE: scripts/sumversion.c:586:
+	/* RCS $Revision gets stripped out. */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000301657.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 39 errors, 20 warnings, 44 checks, 796 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000301657.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
