WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#235: FILE: drivers/net/bonding/bonding.h:208:
+static inline struct slave *bond_get_slave_by_dev(struct bonding *bond, struct net_device *slave_dev)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#269: FILE: drivers/net/e1000/e1000_param.c:545:
 static void __devinit

CHECK:CAMELCASE: Avoid CamelCase: <num_AutoNeg>
#283: FILE: drivers/net/e1000/e1000_param.c:644:
+		if (num_AutoNeg > bd) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <AutoNeg>
#284: FILE: drivers/net/e1000/e1000_param.c:645:
+			an = AutoNeg[bd];

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#382: FILE: drivers/net/forcedeth.c:354:
+#define NV_TX2_TSO_MAX_SIZE	(1<<NV_TX2_TSO_MAX_SHIFT)
                            	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#382: FILE: drivers/net/forcedeth.c:354:
+#define NV_TX2_TSO_MAX_SIZE	(1<<NV_TX2_TSO_MAX_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nv_release_txskb', this function's name, in a string
#445: FILE: drivers/net/forcedeth.c:957:
+	dprintk(KERN_INFO "%s: nv_release_txskb for skbnr %d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#495: FILE: drivers/net/forcedeth.c:1032:
+	u32 size = skb->len-skb->data_len;
 	                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#496: FILE: drivers/net/forcedeth.c:1033:
+	u32 entries = (size >> NV_TX2_TSO_MAX_SHIFT) + ((size & (NV_TX2_TSO_MAX_SIZE-1)) ? 1 : 0);
 	                                                                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#501: FILE: drivers/net/forcedeth.c:1038:
+			   ((skb_shinfo(skb)->frags[i].size & (NV_TX2_TSO_MAX_SIZE-1)) ? 1 : 0);
 			                                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <PacketBuffer>
#532: FILE: drivers/net/forcedeth.c:1059:
+			np->tx_ring.orig[nr].PacketBuffer = cpu_to_le32(np->tx_dma[nr]);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#533: FILE: drivers/net/forcedeth.c:1060:
+			np->tx_ring.orig[nr].FlagLen = cpu_to_le32((bcnt-1) | tx_flags);
 			                                                ^

CHECK:CAMELCASE: Avoid CamelCase: <FlagLen>
#533: FILE: drivers/net/forcedeth.c:1060:
+			np->tx_ring.orig[nr].FlagLen = cpu_to_le32((bcnt-1) | tx_flags);

CHECK:CAMELCASE: Avoid CamelCase: <PacketBufferHigh>
#535: FILE: drivers/net/forcedeth.c:1062:
+			np->tx_ring.ex[nr].PacketBufferHigh = cpu_to_le64(np->tx_dma[nr]) >> 32;

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#536: FILE: drivers/net/forcedeth.c:1063:
+			np->tx_ring.ex[nr].PacketBufferLow = cpu_to_le64(np->tx_dma[nr]) & 0x0FFFFFFFF;

CHECK:CAMELCASE: Avoid CamelCase: <PacketBufferLow>
#536: FILE: drivers/net/forcedeth.c:1063:
+			np->tx_ring.ex[nr].PacketBufferLow = cpu_to_le64(np->tx_dma[nr]) & 0x0FFFFFFFF;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#537: FILE: drivers/net/forcedeth.c:1064:
+			np->tx_ring.ex[nr].FlagLen = cpu_to_le32((bcnt-1) | tx_flags);
 			                                              ^

ERROR:SPACING: space required before the open parenthesis '('
#542: FILE: drivers/net/forcedeth.c:1069:
+	} while(size);

WARNING:LINE_SPACING: Missing a blank line after declarations
#548: FILE: drivers/net/forcedeth.c:1075:
+		u32 size = frag->size;
+		offset = 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#554: FILE: drivers/net/forcedeth.c:1081:
+			np->tx_dma[nr] = pci_map_page(np->pci_dev, frag->page, frag->page_offset+offset, bcnt,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#554: FILE: drivers/net/forcedeth.c:1081:
+			np->tx_dma[nr] = pci_map_page(np->pci_dev, frag->page, frag->page_offset+offset, bcnt,
 			                                                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#561: FILE: drivers/net/forcedeth.c:1087:
+				np->tx_ring.orig[nr].FlagLen = cpu_to_le32((bcnt-1) | tx_flags);
 				                                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#566: FILE: drivers/net/forcedeth.c:1091:
+				np->tx_ring.ex[nr].FlagLen = cpu_to_le32((bcnt-1) | tx_flags);
 				                                              ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#581: FILE: drivers/net/forcedeth.c:1099:
+	if (np->desc_ver == DESC_VER_1 || np->desc_ver == DESC_VER_2) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#593: FILE: drivers/net/forcedeth.c:1110:
 	else
[...]
+	tx_flags_extra = (skb->ip_summed == CHECKSUM_HW ? (NV_TX2_CHECKSUM_L3|NV_TX2_CHECKSUM_L4) : 0);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#596: FILE: drivers/net/forcedeth.c:1112:
+	tx_flags_extra = (skb->ip_summed == CHECKSUM_HW ? (NV_TX2_CHECKSUM_L3|NV_TX2_CHECKSUM_L4) : 0);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#596: FILE: drivers/net/forcedeth.c:1112:
+	tx_flags_extra = (skb->ip_summed == CHECKSUM_HW ? (NV_TX2_CHECKSUM_L3|NV_TX2_CHECKSUM_L4) : 0);
 	                                                                     ^

WARNING:LONG_LINE_STRING: line length of 117 exceeds 100 columns
#615: FILE: drivers/net/forcedeth.c:1121:
+	dprintk(KERN_DEBUG "%s: nv_start_xmit: packet %d (entries %d) queued for transmission. tx_flags_extra: %x\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#666: FILE: drivers/net/gianfar.h:721:
+static inline u32 gfar_read(volatile unsigned *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#666: FILE: drivers/net/gianfar.h:721:
+static inline u32 gfar_read(volatile unsigned *addr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#674: FILE: drivers/net/gianfar.h:728:
+static inline void gfar_write(volatile unsigned *addr, u32 val)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#674: FILE: drivers/net/gianfar.h:728:
+static inline void gfar_write(volatile unsigned *addr, u32 val)

WARNING:LINE_SPACING: Missing a blank line after declarations
#801: FILE: drivers/net/lance.c:362:
+	struct lance_private *lp = dev->priv;
+	if (dev->dma != 4)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#805: FILE: drivers/net/lance.c:366:
+	kfree((void*)lp->rx_buffs);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#884: FILE: drivers/net/ne.c:856:
+	struct pnp_dev *idev = (struct pnp_dev *)ei_status.priv;
+	if (idev)

ERROR:SPACING: space prohibited after that open parenthesis '('
#919: FILE: drivers/net/ne2.c:810:
+	mca_set_adapter_procfn( ei_status.priv, NULL, NULL);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#942: FILE: drivers/net/sk98lin/skge.c:289:
+static __devinit int SkGeInitPCI(SK_AC *pAC)

CHECK:CAMELCASE: Avoid CamelCase: <SkGeInitPCI>
#942: FILE: drivers/net/sk98lin/skge.c:289:
+static __devinit int SkGeInitPCI(SK_AC *pAC)

CHECK:CAMELCASE: Avoid CamelCase: <pAC>
#942: FILE: drivers/net/sk98lin/skge.c:289:
+static __devinit int SkGeInitPCI(SK_AC *pAC)

CHECK:CAMELCASE: Avoid CamelCase: <IoBase>
#972: FILE: drivers/net/sk98lin/skge.c:319:
+	if (!pAC->IoBase) {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#992: FILE: drivers/net/sk98lin/skge.c:489:
+static int __devinit SkGeBoardInit(struct SK_NET_DEVICE *dev, SK_AC *pAC)

CHECK:CAMELCASE: Avoid CamelCase: <SkGeBoardInit>
#992: FILE: drivers/net/sk98lin/skge.c:489:
+static int __devinit SkGeBoardInit(struct SK_NET_DEVICE *dev, SK_AC *pAC)

CHECK:CAMELCASE: Avoid CamelCase: <Ret>
#1026: FILE: drivers/net/sk98lin/skge.c:586:
+		return Ret;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1053: FILE: drivers/net/sk98lin/skge.c:630:
+static __devinit SK_BOOL BoardAllocMem(SK_AC	*pAC)

CHECK:CAMELCASE: Avoid CamelCase: <BoardAllocMem>
#1053: FILE: drivers/net/sk98lin/skge.c:630:
+static __devinit SK_BOOL BoardAllocMem(SK_AC	*pAC)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1063: FILE: drivers/net/sk98lin/skge.c:723:
+static __devinit void BoardInitMem(SK_AC *pAC)

CHECK:CAMELCASE: Avoid CamelCase: <BoardInitMem>
#1063: FILE: drivers/net/sk98lin/skge.c:723:
+static __devinit void BoardInitMem(SK_AC *pAC)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1082: FILE: drivers/net/sk98lin/skge.c:4778:
+	if (sizeof(dma_addr_t) > sizeof(u32) &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1087: FILE: drivers/net/sk98lin/skge.c:4783:
+			printk(KERN_ERR "sk98lin %s unable to obtain 64 bit DMA "

WARNING:SPLIT_STRING: quoted string split across lines
#1088: FILE: drivers/net/sk98lin/skge.c:4784:
+			printk(KERN_ERR "sk98lin %s unable to obtain 64 bit DMA "
+			       "for consistent allocations\n", pci_name(pdev));

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1094: FILE: drivers/net/sk98lin/skge.c:4790:
+			printk(KERN_ERR "sk98lin %s no usable DMA configuration\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1102: FILE: drivers/net/sk98lin/skge.c:4796:
+ ^Ierror = -ENOMEM;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1102: FILE: drivers/net/sk98lin/skge.c:4796:
+ ^Ierror = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1102: FILE: drivers/net/sk98lin/skge.c:4796:
+ ^Ierror = -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1103: FILE: drivers/net/sk98lin/skge.c:4797:
+ ^Idev = alloc_etherdev(sizeof(DEV_NET));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1103: FILE: drivers/net/sk98lin/skge.c:4797:
+ ^Idev = alloc_etherdev(sizeof(DEV_NET));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1103: FILE: drivers/net/sk98lin/skge.c:4797:
+ ^Idev = alloc_etherdev(sizeof(DEV_NET));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1104: FILE: drivers/net/sk98lin/skge.c:4798:
+ ^Iif (!dev) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1104: FILE: drivers/net/sk98lin/skge.c:4798:
+ ^Iif (!dev) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1104: FILE: drivers/net/sk98lin/skge.c:4798:
+ ^Iif (!dev) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1105: FILE: drivers/net/sk98lin/skge.c:4799:
+		printk(KERN_ERR "sk98lin: unable to allocate etherdev "

CHECK:CAMELCASE: Avoid CamelCase: <pNet>
#1112: FILE: drivers/net/sk98lin/skge.c:4805:
+	pNet->pAC = kzalloc(sizeof(SK_AC), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1115: FILE: drivers/net/sk98lin/skge.c:4807:
+		printk(KERN_ERR "sk98lin: unable to allocate adapter "

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1115: FILE: drivers/net/sk98lin/skge.c:4807:
 	if (!pNet->pAC) {
+		printk(KERN_ERR "sk98lin: unable to allocate adapter "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1172: FILE: drivers/net/sk98lin/skge.c:4906:
+			printk(KERN_ERR "sk98lin: unable to allocate etherdev "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1193: FILE: drivers/net/sk98lin/skge.c:4944:
+			printk(KERN_ERR "sk98lin: Could not register device"

WARNING:SPLIT_STRING: quoted string split across lines
#1194: FILE: drivers/net/sk98lin/skge.c:4945:
+			printk(KERN_ERR "sk98lin: Could not register device"
+			       " for second port. (%d)\n", error);

CHECK:CAMELCASE: Avoid CamelCase: <Addr>
#1209: FILE: drivers/net/sk98lin/skge.c:4952:
+		       &pAC->Addr.Net[1].CurrentMacAddress, 6);

CHECK:CAMELCASE: Avoid CamelCase: <Net>
#1209: FILE: drivers/net/sk98lin/skge.c:4952:
+		       &pAC->Addr.Net[1].CurrentMacAddress, 6);

CHECK:CAMELCASE: Avoid CamelCase: <CurrentMacAddress>
#1209: FILE: drivers/net/sk98lin/skge.c:4952:
+		       &pAC->Addr.Net[1].CurrentMacAddress, 6);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1212: FILE: drivers/net/sk98lin/skge.c:4955:
+		printk("%s: %s\n", dev->name, DeviceStr);

CHECK:CAMELCASE: Avoid CamelCase: <DeviceStr>
#1212: FILE: drivers/net/sk98lin/skge.c:4955:
+		printk("%s: %s\n", dev->name, DeviceStr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1213: FILE: drivers/net/sk98lin/skge.c:4956:
+		printk("      PrefPort:B  RlmtMode:Dual Check Link State\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1261: FILE: drivers/net/smc-ultra.c:590:
+	struct pnp_dev *idev = (struct pnp_dev *)ei_status.priv;
+	if (idev)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#1280: FILE: drivers/net/tulip/tulip_core.c:1567:
+#if defined(__i386__) || defined(__x86_64__)	/* Patch up x86 BIOS bug. */

Architecture specific defines should be avoided wherever
possible.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1367: FILE: net/ieee80211/ieee80211_crypt_wep.c:84:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1404: FILE: net/ieee80211/ieee80211_crypt_wep.c:132:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1408: FILE: net/ieee80211/ieee80211_crypt_wep.c:136:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1414: FILE: net/ieee80211/ieee80211_crypt_wep.c:142:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000117832.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 38 warnings, 30 checks, 1166 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000117832.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
