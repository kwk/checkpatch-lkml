WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#104: FILE: include/asm-i386/mach-vmi/mach_msr.h:1:
+#ifndef MACH_MSR_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LINE_SPACING: Missing a blank line after declarations
#112: FILE: include/asm-i386/mach-vmi/mach_msr.h:9:
+	u64 ret;
+	vmi_wrap_call(

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#112: FILE: include/asm-i386/mach-vmi/mach_msr.h:9:
+	vmi_wrap_call(

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#114: FILE: include/asm-i386/mach-vmi/mach_msr.h:11:
+		VMI_OREG64 (ret),

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#120: FILE: include/asm-i386/mach-vmi/mach_msr.h:17:
+#define rdmsr(msr,val1,val2) \
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#120: FILE: include/asm-i386/mach-vmi/mach_msr.h:17:
+#define rdmsr(msr,val1,val2) \
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <valLo>
#127: FILE: include/asm-i386/mach-vmi/mach_msr.h:24:
+static inline void wrmsr(const u32 msr, const u32 valLo, const u32 valHi)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <valHi>
#127: FILE: include/asm-i386/mach-vmi/mach_msr.h:24:
+static inline void wrmsr(const u32 msr, const u32 valLo, const u32 valHi)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#129: FILE: include/asm-i386/mach-vmi/mach_msr.h:26:
+	vmi_wrap_call(

WARNING:LINE_SPACING: Missing a blank line after declarations
#139: FILE: include/asm-i386/mach-vmi/mach_msr.h:36:
+	u64 ret;
+	vmi_wrap_call(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#139: FILE: include/asm-i386/mach-vmi/mach_msr.h:36:
+	vmi_wrap_call(

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#141: FILE: include/asm-i386/mach-vmi/mach_msr.h:38:
+		VMI_OREG64 (ret),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#147: FILE: include/asm-i386/mach-vmi/mach_msr.h:44:
+#define rdtsc(low,high) \
                  ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#160: FILE: include/asm-i386/mach-vmi/mach_msr.h:57:
+#define rdtscll(val) do { val = vmi_rdtsc(); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#162: FILE: include/asm-i386/mach-vmi/mach_msr.h:59:
+#define write_tsc(val1,val2) wrmsr(0x10, val1, val2)
                       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#167: FILE: include/asm-i386/mach-vmi/mach_msr.h:64:
+	u64 ret;
+	vmi_wrap_call(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#167: FILE: include/asm-i386/mach-vmi/mach_msr.h:64:
+	vmi_wrap_call(

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#169: FILE: include/asm-i386/mach-vmi/mach_msr.h:66:
+		VMI_OREG64 (ret),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#175: FILE: include/asm-i386/mach-vmi/mach_msr.h:72:
+#define rdpmc(counter,val1,val2) \
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#175: FILE: include/asm-i386/mach-vmi/mach_msr.h:72:
+#define rdpmc(counter,val1,val2) \
                           ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#188: FILE: include/asm-i386/mach-default/mach_msr.h:1:
+#ifndef MACH_MSR_H

ERROR:SPACING: space required after that ',' (ctx:VxV)
#191: FILE: include/asm-i386/mach-default/mach_msr.h:4:
+#define rdmsr(msr,val1,val2) \
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#191: FILE: include/asm-i386/mach-default/mach_msr.h:4:
+#define rdmsr(msr,val1,val2) \
                       ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#191: FILE: include/asm-i386/mach-default/mach_msr.h:4:
+#define rdmsr(msr,val1,val2) \
+	__asm__ __volatile__("rdmsr" \
+			  : "=a" (val1), "=d" (val2) \
+			  : "c" (msr))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#196: FILE: include/asm-i386/mach-default/mach_msr.h:9:
+#define wrmsr(msr,val1,val2) \
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#196: FILE: include/asm-i386/mach-default/mach_msr.h:9:
+#define wrmsr(msr,val1,val2) \
                       ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#196: FILE: include/asm-i386/mach-default/mach_msr.h:9:
+#define wrmsr(msr,val1,val2) \
+	__asm__ __volatile__("wrmsr" \
+			  : /* no outputs */ \
+			  : "c" (msr), "a" (val1), "d" (val2))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#201: FILE: include/asm-i386/mach-default/mach_msr.h:14:
+#define rdtsc(low,high) \
                  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#201: FILE: include/asm-i386/mach-default/mach_msr.h:14:
+#define rdtsc(low,high) \
+     __asm__ __volatile__("rdtsc" : "=a" (low), "=d" (high))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: include/asm-i386/mach-default/mach_msr.h:15:
+     __asm__ __volatile__("rdtsc" : "=a" (low), "=d" (high))$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#204: FILE: include/asm-i386/mach-default/mach_msr.h:17:
+#define rdtscl(low) \
+     __asm__ __volatile__("rdtsc" : "=a" (low) : : "edx")

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: include/asm-i386/mach-default/mach_msr.h:18:
+     __asm__ __volatile__("rdtsc" : "=a" (low) : : "edx")$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#207: FILE: include/asm-i386/mach-default/mach_msr.h:20:
+#define rdtscll(val) \
+     __asm__ __volatile__("rdtsc" : "=A" (val))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: include/asm-i386/mach-default/mach_msr.h:21:
+     __asm__ __volatile__("rdtsc" : "=A" (val))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#210: FILE: include/asm-i386/mach-default/mach_msr.h:23:
+#define write_tsc(val1,val2) wrmsr(0x10, val1, val2)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#212: FILE: include/asm-i386/mach-default/mach_msr.h:25:
+#define rdpmc(counter,low,high) \
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#212: FILE: include/asm-i386/mach-default/mach_msr.h:25:
+#define rdpmc(counter,low,high) \
                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#212: FILE: include/asm-i386/mach-default/mach_msr.h:25:
+#define rdpmc(counter,low,high) \
+     __asm__ __volatile__("rdpmc" \
+			  : "=a" (low), "=d" (high) \
+			  : "c" (counter))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: include/asm-i386/mach-default/mach_msr.h:26:
+     __asm__ __volatile__("rdpmc" \$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095340.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 13 warnings, 6 checks, 155 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095340.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
