WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
>> perhaps your implementation should imitate x86_64/bitops.h and use a void*,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#150: FILE: kernel/fork.c:230:
+int wake_bit_function(wait_queue_t *wait, unsigned mode, int sync, void *arg)

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#154: FILE: kernel/fork.c:234:
+	struct wait_bit_queue *wait_bit
+		= container_of(wait, struct wait_bit_queue, wait);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: kernel/fork.c:237:
+	if (wait_bit->key.flags != key->flags ||
+			wait_bit->key.bit_nr != key->bit_nr ||

WARNING:LINE_SPACING: Missing a blank line after declarations
#168: FILE: kernel/fork.c:248:
+	struct wait_bit_key key = __WAIT_BIT_KEY_INITIALIZER(word, bit);
+	if (waitqueue_active(wq))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#168: FILE: kernel/fork.c:248:
+	if (waitqueue_active(wq))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#169: FILE: kernel/fork.c:249:
+		__wake_up(wq, TASK_INTERRUPTIBLE|TASK_UNINTERRUPTIBLE, 1, &key);
 		                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'wait_queue_head_t *' should also have an identifier name
#317: FILE: include/linux/wait.h:141:
+void FASTCALL(__wake_up_bit(wait_queue_head_t *, void *, int));

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#317: FILE: include/linux/wait.h:141:
+void FASTCALL(__wake_up_bit(wait_queue_head_t *, void *, int));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#317: FILE: include/linux/wait.h:141:
+void FASTCALL(__wake_up_bit(wait_queue_head_t *, void *, int));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#325: FILE: include/linux/wait.h:294:
+int wake_bit_function(wait_queue_t *wait, unsigned mode, int sync, void *key);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#333: FILE: include/linux/wait.h:305:
+#define DEFINE_WAIT_BIT(name, word, bit)				\
+	struct wait_bit_queue name = {					\
+		.key = __WAIT_BIT_KEY_INITIALIZER(word, bit),		\
+		.wait	= {						\
+			.task		= current,			\
+			.func		= wake_bit_function,		\
+			.task_list	=				\
+				LIST_HEAD_INIT(name.wait.task_list),	\
+		},							\
+	}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000255807.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 8 warnings, 4 checks, 262 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000255807.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
