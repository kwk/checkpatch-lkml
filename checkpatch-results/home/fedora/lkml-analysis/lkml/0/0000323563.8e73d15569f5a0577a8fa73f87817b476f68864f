WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
diff -prauN linux-2.6.0-test9-bk22/arch/alpha/kernel/process.c wchan-2.6.0-test9-bk22-2/arch/alpha/kernel/process.c

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#66: FILE: arch/alpha/kernel/process.c:535:
+	if (pc >= scheduling_functions_start_here &&
+			pc < scheduling_functions_end_here) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: arch/arm/kernel/process.c:433:
+		if (lr < scheduling_functions_start_here ||
+				lr > scheduling_functions_end_here)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#171: FILE: arch/arm/kernel/semaphore.c:58:
+__sched void __down(struct semaphore * sem)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#180: FILE: arch/arm/kernel/semaphore.c:91:
+__sched int __down_interruptible(struct semaphore * sem)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#189: FILE: arch/arm/kernel/semaphore.c:180:
+asm("	.section .sched.text			\n\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#189: FILE: arch/arm/kernel/semaphore.c:180:
+asm("	.section .sched.text			\n\

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: arch/arm26/kernel/process.c:418:
+		if (lr < scheduling_functions_start_here ||
+				lr > scheduling_functions_end_here)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#248: FILE: arch/arm26/kernel/semaphore.c:60:
+__sched void __down(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#257: FILE: arch/arm26/kernel/semaphore.c:93:
+__sched int __down_interruptible(struct semaphore * sem)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#266: FILE: arch/arm26/kernel/semaphore.c:182:
+asm("	.section .sched.text			\n\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#266: FILE: arch/arm26/kernel/semaphore.c:182:
+asm("	.section .sched.text			\n\

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#326: FILE: arch/cris/kernel/semaphore.c:98:
+__sched void __down(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#335: FILE: arch/cris/kernel/semaphore.c:108:
+__sched int __down_interruptible(struct semaphore * sem)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: arch/h8300/kernel/process.c:288:
+		if (pc < scheduling_functions_start_here ||
+				pc >= scheduling_functions_end_here)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#381: FILE: arch/h8300/kernel/semaphore.c:99:
+__sched void __down(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#390: FILE: arch/h8300/kernel/semaphore.c:110:
+__sched int __down_interruptible(struct semaphore * sem)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#428: FILE: arch/i386/kernel/process.c:652:
+		if (eip < scheduling_functions_start_here ||
+				eip >= scheduling_functions_end_here)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#455: FILE: arch/i386/kernel/semaphore.c:57:
+__sched void __down(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#464: FILE: arch/i386/kernel/semaphore.c:94:
+__sched int __down_interruptible(struct semaphore * sem)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: arch/ia64/kernel/process.c:655:
+		if (ip < scheduling_functions_start_here ||
+				ip >= scheduling_functions_end_here)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#644: FILE: arch/m68k/kernel/process.c:404:
+		if (pc < scheduling_functions_start_here ||
+				pc >= scheduling_functions_end_here)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#664: FILE: arch/m68k/kernel/semaphore.c:99:
+__sched void __down(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#673: FILE: arch/m68k/kernel/semaphore.c:110:
+__sched int __down_interruptible(struct semaphore * sem)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#725: FILE: arch/m68knommu/kernel/process.c:425:
+		if (pc < scheduling_functions_start_here ||
+				pc >= scheduling_functions_end_here)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#761: FILE: arch/m68knommu/kernel/semaphore.c:100:
+__sched void __down(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#770: FILE: arch/m68knommu/kernel/semaphore.c:111:
+__sched int __down_interruptible(struct semaphore * sem)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#808: FILE: arch/mips/kernel/process.c:291:
+	if (pc < scheduling_functions_start_here ||
+			pc >= scheduling_functions_end_here)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#818: FILE: arch/mips/kernel/process.c:326:
+	if (pc >= scheduling_functions_start_here &&
+			pc < scheduling_functions_end_here) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#838: FILE: arch/mips/kernel/semaphore.c:98:
+__sched void __down(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#847: FILE: arch/mips/kernel/semaphore.c:108:
+__sched int __down_interruptible(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#880: FILE: arch/parisc/kernel/semaphore.c:62:
+__sched void __down(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#889: FILE: arch/parisc/kernel/semaphore.c:78:
+__sched int __down_interruptible(struct semaphore * sem)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#927: FILE: arch/ppc/kernel/process.c:668:
+			if (ip < scheduling_functions_start_here ||
+					ip >= scheduling_functions_end_here)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#956: FILE: arch/ppc/kernel/semaphore.c:103:
+__sched int __down_interruptible(struct semaphore * sem)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#994: FILE: arch/ppc64/kernel/process.c:392:
+			if (ip < scheduling_functions_start_here ||
+					ip >= scheduling_functions_end_here)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1023: FILE: arch/ppc64/kernel/semaphore.c:103:
+__sched int __down_interruptible(struct semaphore * sem)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1061: FILE: arch/s390/kernel/process.c:397:
+		if (r14 < scheduling_functions_start_here ||
+				r14 >= scheduling_functions_end_here)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1086: FILE: arch/s390/kernel/semaphore.c:63:
+__sched void __down(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1095: FILE: arch/s390/kernel/semaphore.c:85:
+__sched int __down_interruptible(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1143: FILE: arch/sh/kernel/semaphore.c:107:
+__sched void __down(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1152: FILE: arch/sh/kernel/semaphore.c:117:
+__sched int __down_interruptible(struct semaphore * sem)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1189: FILE: arch/sparc/kernel/process.c:716:
+                    pc >= scheduling_functions_end_here) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1189: FILE: arch/sparc/kernel/process.c:716:
+		if (pc < scheduling_functions_start_here ||
+                    pc >= scheduling_functions_end_here) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1189: FILE: arch/sparc/kernel/process.c:716:
+                    pc >= scheduling_functions_end_here) {$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1209: FILE: arch/sparc/kernel/semaphore.c:49:
+__sched void __down(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1218: FILE: arch/sparc/kernel/semaphore.c:82:
+__sched int __down_interruptible(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1295: FILE: arch/sparc64/kernel/semaphore.c:94:
+static __sched void __down(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1313: FILE: arch/sparc64/kernel/semaphore.c:196:
+static __sched int __down_interruptible(struct semaphore * sem)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1391: FILE: arch/v850/kernel/process.c:221:
+	   PC that was in-bounds.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1402: FILE: arch/v850/kernel/process.c:228:
+		if (pc < scheduling_functions_start_here ||
+				pc >= scheduling_functions_end_here)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1422: FILE: arch/v850/kernel/semaphore.c:60:
+__sched void __down(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1431: FILE: arch/v850/kernel/semaphore.c:93:
+__sched int __down_interruptible(struct semaphore * sem)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1469: FILE: arch/x86_64/kernel/process.c:546:
+		if (rip < scheduling_functions_start_here ||
+				rip >= scheduling_functions_end_here)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1496: FILE: arch/x86_64/kernel/semaphore.c:58:
+__sched void __down(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1505: FILE: arch/x86_64/kernel/semaphore.c:95:
+__sched int __down_interruptible(struct semaphore * sem)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".sched.text") over __attribute__((__section__(".sched.text")))
#1549: FILE: include/linux/init.h:48:
+#define __sched		__attribute__((__section__(".sched.text")))

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1573: FILE: kernel/sched.c:224:
+extern unsigned long __scheduling_functions_start_here;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1574: FILE: kernel/sched.c:225:
+extern unsigned long __scheduling_functions_end_here;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000323563.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 33 errors, 10 warnings, 16 checks, 1366 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000323563.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
