ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#42: FILE: drivers/block/loop.c:155:
lo->lo_backing_file->f_dentry->d_inode->i_mapping->host->i_size;

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#46: FILE: drivers/block/loop.c:158:
+	printk("mcneil tmp %Ld %x", size,

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#46: FILE: drivers/block/loop.c:158:
+	printk("mcneil tmp %Ld %x", size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#48: FILE: drivers/block/loop.c:159:
+	printk("mcneil tmp %Ld %x", size,
 	/*

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#69: FILE: fs/binfmt_aout.c:269:
 	if ((N_MAGIC(ex) != ZMAGIC && N_MAGIC(ex) != OMAGIC &&
[...]
+	    i_size_read(bprm->file->f_dentry->d_inode) <

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#141: FILE: fs/buffer.c:1964:
+	lblock = (i_size_read(inode)+blocksize-1) >> inode->i_blkbits;
 	                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#141: FILE: fs/buffer.c:1964:
+	lblock = (i_size_read(inode)+blocksize-1) >> inode->i_blkbits;
 	                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#183: FILE: fs/buffer.c:2486:
+	offset = i_size & (PAGE_CACHE_SIZE-1);
 	                                  ^

CHECK:SPACING: No space is necessary after a cast
#231: FILE: fs/ioctl.c:43:
+			return put_user(i_size_read(inode) - filp->f_pos, (int *) arg);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#305: FILE: fs/mpage.c:494:
+		unsigned offset = i_size_read(inode) & (PAGE_CACHE_SIZE - 1);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#371: FILE: include/linux/fs.h:359:
+#if BITS_PER_LONG==32 && defined(CONFIG_SMP)
                  ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'inode' may be better as '(inode)' to avoid precedence issues
#374: FILE: include/linux/fs.h:362:
+#define i_size_ordered_init(inode) seqcnt_init(&inode->i_size_seqcnt)

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#392: FILE: include/linux/fs.h:422:
+ * NOTE: in a 32bit arch with a preemptable kernel and
                                 ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#401: FILE: include/linux/fs.h:431:
+static inline loff_t i_size_read(struct inode * inode)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#403: FILE: include/linux/fs.h:433:
+#if BITS_PER_LONG==32 && defined(CONFIG_SMP)
                  ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#412: FILE: include/linux/fs.h:442:
+#elif BITS_PER_LONG==32 && defined(CONFIG_PREMPT)
                    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#424: FILE: include/linux/fs.h:454:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#425: FILE: include/linux/fs.h:455:
+static inline void i_size_write(struct inode * inode, loff_t i_size)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#427: FILE: include/linux/fs.h:457:
+#if BITS_PER_LONG==32 && defined(CONFIG_SMP)
                  ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#431: FILE: include/linux/fs.h:461:
+#elif BITS_PER_LONG==32 && defined(CONFIG_PREMPT)
                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#509: FILE: mm/filemap.c:1501:
+                        *pos = i_size_read(inode);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: mm/filemap.c:1501:
+                        *pos = i_size_read(inode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#624: FILE: mm/readahead.c:208:
+ ^Iend_index = ((isize - 1) >> PAGE_CACHE_SHIFT);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#624: FILE: mm/readahead.c:208:
+ ^Iend_index = ((isize - 1) >> PAGE_CACHE_SHIFT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: mm/readahead.c:208:
+ ^Iend_index = ((isize - 1) >> PAGE_CACHE_SHIFT);$

CHECK:SPACING: No space is necessary after a cast
#637: FILE: mm/shmem.c:298:
+	    ((loff_t) index << PAGE_CACHE_SHIFT) >= i_size_read(inode))

CHECK:SPACING: No space is necessary after a cast
#646: FILE: mm/shmem.c:331:
+		    ((loff_t) index << PAGE_CACHE_SHIFT) >= i_size_read(inode)) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000387550.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 8 warnings, 9 checks, 503 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000387550.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
