WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
The pstch reworks cifs_oplock_thread() and init_cifs() a bit to avoid the deep

CHECK:CAMELCASE: Avoid CamelCase: <GlobalOplock_Q>
#93: FILE: fs/cifs/cifsfs.c:773:
+		oplock_item = list_entry(GlobalOplock_Q.next,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <GlobalMid_Lock>
#96: FILE: fs/cifs/cifsfs.c:776:
+			spin_unlock(&GlobalMid_Lock);

CHECK:CAMELCASE: Avoid CamelCase: <cFYI>
#100: FILE: fs/cifs/cifsfs.c:780:
+		cFYI(1, ("found oplock item to write out"));

CHECK:CAMELCASE: Avoid CamelCase: <pTcon>
#101: FILE: fs/cifs/cifsfs.c:781:
+		pTcon = oplock_item->tcon;

CHECK:CAMELCASE: Avoid CamelCase: <DeleteOplockQEntry>
#105: FILE: fs/cifs/cifsfs.c:785:
+		DeleteOplockQEntry(oplock_item);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#107: FILE: fs/cifs/cifsfs.c:787:
+		/* can not grab inode sem here since it would deadlock when
+		   oplock received on delete since vfs_unlink holds the i_sem

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#108: FILE: fs/cifs/cifsfs.c:788:
+		   across the call */

CHECK:BRACES: braces {} should be used on all arms of this statement
#110: FILE: fs/cifs/cifsfs.c:790:
+		if (S_ISREG(inode->i_mode)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <clientCanCacheRead>
#112: FILE: fs/cifs/cifsfs.c:792:
+			if (CIFS_I(inode)->clientCanCacheRead == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#116: FILE: fs/cifs/cifsfs.c:796:
+		} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#125: FILE: fs/cifs/cifsfs.c:805:
+		/* releasing a stale oplock after recent reconnection of smb
+		   session using a now incorrect file handle is not a data

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#128: FILE: fs/cifs/cifsfs.c:808:
+		   already released by the server in that case */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#129: FILE: fs/cifs/cifsfs.c:809:
+		if (pTcon->tidStatus != CifsNeedReconnect) {
+		    rc = CIFSSMBLock(0, pTcon, netfid, 0 /* len */ ,

CHECK:CAMELCASE: Avoid CamelCase: <tidStatus>
#129: FILE: fs/cifs/cifsfs.c:809:
+		if (pTcon->tidStatus != CifsNeedReconnect) {

CHECK:CAMELCASE: Avoid CamelCase: <CifsNeedReconnect>
#129: FILE: fs/cifs/cifsfs.c:809:
+		if (pTcon->tidStatus != CifsNeedReconnect) {

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#130: FILE: fs/cifs/cifsfs.c:810:
+		    rc = CIFSSMBLock(0, pTcon, netfid, 0 /* len */ ,
 		                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <CIFSSMBLock>
#130: FILE: fs/cifs/cifsfs.c:810:
+		    rc = CIFSSMBLock(0, pTcon, netfid, 0 /* len */ ,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: fs/cifs/cifsfs.c:811:
+		    rc = CIFSSMBLock(0, pTcon, netfid, 0 /* len */ ,
+			    0 /* offset */, 0, 0, LOCKING_ANDX_OPLOCK_RELEASE,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#162: FILE: fs/cifs/cifsfs.c:854:
+	if ((rc = cifs_init_inodecache()))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#164: FILE: fs/cifs/cifsfs.c:856:
+	if ((rc = cifs_init_mids()))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#166: FILE: fs/cifs/cifsfs.c:858:
+	if ((rc = cifs_init_request_bufs()))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#168: FILE: fs/cifs/cifsfs.c:860:
+	if ((rc = register_filesystem(&cifs_fs_type)))

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#175: FILE: fs/cifs/cifsfs.c:867:
+		return 0;
+	else

CHECK:CAMELCASE: Avoid CamelCase: <cERROR>
#176: FILE: fs/cifs/cifsfs.c:868:
+		cERROR(1, ("error %d create oplock thread", rc));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000195838.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 7 warnings, 13 checks, 143 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000195838.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
