WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rpc_task *' should also have an identifier name
#73: FILE: include/linux/sunrpc/auth.h:106:
+	__be32 *		(*crmarshal)(struct rpc_task *, __be32 *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument '__be32 *' should also have an identifier name
#73: FILE: include/linux/sunrpc/auth.h:106:
+	__be32 *		(*crmarshal)(struct rpc_task *, __be32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rpc_task *' should also have an identifier name
#76: FILE: include/linux/sunrpc/auth.h:108:
+	__be32 *		(*crvalidate)(struct rpc_task *, __be32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__be32 *' should also have an identifier name
#76: FILE: include/linux/sunrpc/auth.h:108:
+	__be32 *		(*crvalidate)(struct rpc_task *, __be32 *);

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#94: FILE: include/linux/sunrpc/auth.h:131:
+__be32 *		rpcauth_marshcred(struct rpc_task *, __be32 *);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rpc_task *' should also have an identifier name
#94: FILE: include/linux/sunrpc/auth.h:131:
+__be32 *		rpcauth_marshcred(struct rpc_task *, __be32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__be32 *' should also have an identifier name
#94: FILE: include/linux/sunrpc/auth.h:131:
+__be32 *		rpcauth_marshcred(struct rpc_task *, __be32 *);

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#95: FILE: include/linux/sunrpc/auth.h:132:
+__be32 *		rpcauth_checkverf(struct rpc_task *, __be32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rpc_task *' should also have an identifier name
#95: FILE: include/linux/sunrpc/auth.h:132:
+__be32 *		rpcauth_checkverf(struct rpc_task *, __be32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__be32 *' should also have an identifier name
#95: FILE: include/linux/sunrpc/auth.h:132:
+__be32 *		rpcauth_checkverf(struct rpc_task *, __be32 *);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#96: FILE: include/linux/sunrpc/auth.h:133:
+int			rpcauth_wrap_req(struct rpc_task *task, kxdrproc_t encode, void *rqstp, __be32 *data, void *obj);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#97: FILE: include/linux/sunrpc/auth.h:134:
+int			rpcauth_unwrap_resp(struct rpc_task *task, kxdrproc_t decode, void *rqstp, __be32 *data, void *obj);

WARNING:LINE_SPACING: Missing a blank line after declarations
#111: FILE: include/linux/sunrpc/svc.h:84:
+	__be32 val, *vp;
+	vp = iov->iov_base;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#113: FILE: include/linux/sunrpc/svc.h:86:
+	iov->iov_base = (void*)vp;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct svc_rqst *' should also have an identifier name
#142: FILE: include/linux/sunrpc/svc.h:299:
+	int			(*vs_dispatch)(struct svc_rqst *, __be32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__be32 *' should also have an identifier name
#142: FILE: include/linux/sunrpc/svc.h:299:
+	int			(*vs_dispatch)(struct svc_rqst *, __be32 *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#170: FILE: include/linux/sunrpc/svcauth.h:111:
+extern int	svc_authenticate(struct svc_rqst *rqstp, __be32 *authp);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct xdr_netobj *' should also have an identifier name
#202: FILE: include/linux/sunrpc/xdr.h:96:
+__be32 *xdr_encode_netobj(__be32 *p, const struct xdr_netobj *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xdr_netobj *' should also have an identifier name
#203: FILE: include/linux/sunrpc/xdr.h:97:
+__be32 *xdr_decode_netobj(__be32 *p, struct xdr_netobj *);

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#644: FILE: net/sunrpc/clnt.c:63:
+static __be32 *	call_header(struct rpc_task *task);

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#645: FILE: net/sunrpc/clnt.c:64:
+static __be32 *	call_verify(struct rpc_task *task);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#796: FILE: net/sunrpc/svc.c:311:
+	rqstp->rq_prog = prog = svc_getnl(argv);	/* program number */

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#797: FILE: net/sunrpc/svc.c:312:
+	rqstp->rq_vers = vers = svc_getnl(argv);	/* version number */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#798: FILE: net/sunrpc/svc.c:313:
+	rqstp->rq_proc = proc = svc_getnl(argv);	/* procedure number */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000152709.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 15 warnings, 4 checks, 895 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000152709.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
