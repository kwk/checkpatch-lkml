WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
> I've attached an implementation of a fair spinlock and an implementation of a

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#45: FILE: include/asm-i386/fairlock.h:1:
+/* fairlock.h: fair spinlocks

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#61: FILE: include/asm-i386/fairlock.h:17:
+#include <asm/atomic.h>

WARNING:NEW_TYPEDEFS: do not add new typedefs
#63: FILE: include/asm-i386/fairlock.h:19:
+typedef struct fairlock {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#70: FILE: include/asm-i386/fairlock.h:26:
+	memset(lock,0,sizeof(*lock));
 	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#70: FILE: include/asm-i386/fairlock.h:26:
+	memset(lock,0,sizeof(*lock));
 	             ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#73: FILE: include/asm-i386/fairlock.h:29:
+typedef struct rwfairlock {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#74: FILE: include/asm-i386/fairlock.h:30:
+typedef struct rwfairlock {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((aligned(4)))
#81: FILE: include/asm-i386/fairlock.h:37:
+} __attribute__((aligned(4))) rwfairlock_t;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#83: FILE: include/asm-i386/fairlock.h:39:
+#define RWFAIRLOCK_UNLOCKED (rwfairlock_t) { 0, 0, 0, 0 }

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#93: FILE: include/asm-i386/fairlock.h:49:
+	__asm__ __volatile__(

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fair_lock', this function's name, in a string
#94: FILE: include/asm-i386/fairlock.h:50:
+		"# beginning fair_lock\n\t"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fair_lock', this function's name, in a string
#104: FILE: include/asm-i386/fairlock.h:60:
+		"# ending fair_lock\n\t"

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#118: FILE: include/asm-i386/fairlock.h:74:
+	__asm__ __volatile__(

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fair_trylock', this function's name, in a string
#119: FILE: include/asm-i386/fairlock.h:75:
+		"# beginning fair_trylock\n\t"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fair_trylock', this function's name, in a string
#133: FILE: include/asm-i386/fairlock.h:89:
+		"# ending fair_trylock\n\t"

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#145: FILE: include/asm-i386/fairlock.h:101:
+	__asm__ __volatile__(

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fair_unlock', this function's name, in a string
#146: FILE: include/asm-i386/fairlock.h:102:
+		"# beginning fair_unlock\n\t"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fair_unlock', this function's name, in a string
#148: FILE: include/asm-i386/fairlock.h:104:
+		"# ending fair_unlock\n\t"

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#166: FILE: include/asm-i386/fairlock.h:122:
+	asm volatile(

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#167: FILE: include/asm-i386/fairlock.h:123:
+		"	# begin write_lock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#168: FILE: include/asm-i386/fairlock.h:124:
+LOCK_PREFIX     "	xaddw	%%ax,1(%3)	\n"	/* my ticket in AH */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#169: FILE: include/asm-i386/fairlock.h:125:
+		"0:	cmpb	%%al,%%ah	\n"	/* lock->curr in AL */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#170: FILE: include/asm-i386/fairlock.h:126:
+		"	jne	2f		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#172: FILE: include/asm-i386/fairlock.h:128:
+		"2:				\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#173: FILE: include/asm-i386/fairlock.h:129:
+		"	rep; nop		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#174: FILE: include/asm-i386/fairlock.h:130:
+		"	movb	1(%3),%%al	\n"	/* reload AL from lock->curr */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#175: FILE: include/asm-i386/fairlock.h:131:
+		"	jmp	0b		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#176: FILE: include/asm-i386/fairlock.h:132:
+		"	.previous		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#177: FILE: include/asm-i386/fairlock.h:133:
+		"	# end write_lock	\n"

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#193: FILE: include/asm-i386/fairlock.h:149:
+	asm volatile(

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#194: FILE: include/asm-i386/fairlock.h:150:
+		"	# begin write_unlock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#195: FILE: include/asm-i386/fairlock.h:151:
+		"	movw	0(%3),%%ax	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#196: FILE: include/asm-i386/fairlock.h:152:
+		"	incb	%%al		\n"	/* lock->rd_curr++ */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#197: FILE: include/asm-i386/fairlock.h:153:
+		"	incb	%%ah		\n"	/* lock->curr++ */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#198: FILE: include/asm-i386/fairlock.h:154:
+		"	movw	%%ax,0(%3)	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#199: FILE: include/asm-i386/fairlock.h:155:
+		"	# end write_unlock	\n"

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#218: FILE: include/asm-i386/fairlock.h:174:
+	asm volatile(

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#219: FILE: include/asm-i386/fairlock.h:175:
+		"	# begin read_lock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#220: FILE: include/asm-i386/fairlock.h:176:
+LOCK_PREFIX     "	xaddb	%%ah,2(%3)	\n"	/* my ticket in AH */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#221: FILE: include/asm-i386/fairlock.h:177:
+		"0:	movb	0(%3),%%al	\n"	/* AL = lock->rd_curr */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#222: FILE: include/asm-i386/fairlock.h:178:
+		"	cmpb	%%al,%%ah	\n"	/* if (ticket!=lock->rd_curr)  */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#223: FILE: include/asm-i386/fairlock.h:179:
+		"	jne	2f		\n"	/* then jump */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#224: FILE: include/asm-i386/fairlock.h:180:
+		"	incb	0(%3)		\n"	/* lock->rd_curr */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#226: FILE: include/asm-i386/fairlock.h:182:
+		"2:				\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#227: FILE: include/asm-i386/fairlock.h:183:
+		"	rep; nop		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#228: FILE: include/asm-i386/fairlock.h:184:
+		"	jmp	0b		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#229: FILE: include/asm-i386/fairlock.h:185:
+		"	.previous		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#230: FILE: include/asm-i386/fairlock.h:186:
+		"	# end read_lock	\n"

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#244: FILE: include/asm-i386/fairlock.h:200:
+	asm volatile(

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_unlock', this function's name, in a string
#245: FILE: include/asm-i386/fairlock.h:201:
+		"	# begin read_unlock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#245: FILE: include/asm-i386/fairlock.h:201:
+		"	# begin read_unlock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#246: FILE: include/asm-i386/fairlock.h:202:
+LOCK_PREFIX	"	incb	%0		\n"	/* lock->curr++ */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_unlock', this function's name, in a string
#247: FILE: include/asm-i386/fairlock.h:203:
+		"	# end read_unlock	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#247: FILE: include/asm-i386/fairlock.h:203:
+		"	# end read_unlock	\n"

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000415229.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 44 warnings, 8 checks, 217 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000415229.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
