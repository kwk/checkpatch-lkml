WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
It really makes more sense after reading PowerPC Book II, which you can find at 

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#83: FILE: include/asm-powerpc/mutex.h:2:
+ * include/asm-powerpc/mutex.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'count' - possible side-effects?
#95: FILE: include/asm-powerpc/mutex.h:11:
+#define __mutex_fastpath_lock(count, fail_fn)\
+do{                                     \
+	long tmp;                       \
+	__asm__ __volatile__(		\
+"1:	lwarx		%0,0,%1\n"      \
+"	addic	        %0,%0,-1\n"     \
+"	stwcx.          %0,0,%1\n"      \
+"	bne-            1b\n"           \
+"	isync           \n"             \
+	: "=&r" (tmp)                   \
+	: "r" (&(count)->counter)       \
+	: "cr0", "memory");             \
+	if (unlikely(tmp < 0))          \
+		fail_fn(count);         \
+} while (0)                              

ERROR:SPACING: space required before the open brace '{'
#96: FILE: include/asm-powerpc/mutex.h:12:
+do{                                     \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#103: FILE: include/asm-powerpc/mutex.h:19:
+"	isync           \n"             \

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: include/asm-powerpc/mutex.h:25:
+} while (0)                              $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'count' - possible side-effects?
#111: FILE: include/asm-powerpc/mutex.h:27:
+#define __mutex_fastpath_unlock(count, fail_fn)\
+do{                                         \
+	long tmp;                           \
+	__asm__ __volatile__(SYNC_ON_SMP    \
+"1:	lwarx		%0,0,%1\n"          \
+"	addic	        %0,%0,1\n"          \
+"	stwcx.          %0,0,%1\n"          \
+"       bne-            1b\n"               \
+	: "=&r" (tmp)                       \
+	: "r" (&(count)->counter)           \
+	: "cr0", "memory");                 \
+	if (unlikely(tmp <= 0))             \
+		fail_fn(count);             \
+} while (0)

ERROR:SPACING: space required before the open brace '{'
#112: FILE: include/asm-powerpc/mutex.h:28:
+do{                                         \

CHECK:LINE_SPACING: Please don't use multiple blank lines
#126: FILE: include/asm-powerpc/mutex.h:42:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: include/asm-powerpc/mutex.h:43:
+static inline int $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#128: FILE: include/asm-powerpc/mutex.h:44:
+__mutex_fastpath_trylock(atomic_t* count, int (*fail_fn)(atomic_t*))

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#128: FILE: include/asm-powerpc/mutex.h:44:
+__mutex_fastpath_trylock(atomic_t* count, int (*fail_fn)(atomic_t*))

WARNING:LINE_SPACING: Missing a blank line after declarations
#131: FILE: include/asm-powerpc/mutex.h:47:
+	long tmp;
+	__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#131: FILE: include/asm-powerpc/mutex.h:47:
+	__asm__ __volatile__(

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#145: FILE: include/asm-powerpc/mutex.h:61:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: include/asm-powerpc/mutex.h:65:
+static inline int $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#151: FILE: include/asm-powerpc/mutex.h:66:
+__mutex_fastpath_lock_retval(atomic_t* count, int (*fail_fn)(atomic_t *))

WARNING:LINE_SPACING: Missing a blank line after declarations
#154: FILE: include/asm-powerpc/mutex.h:69:
+	long tmp;
+	__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#154: FILE: include/asm-powerpc/mutex.h:69:
+	__asm__ __volatile__(

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#159: FILE: include/asm-powerpc/mutex.h:74:
+"	isync           \n"

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000119334.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 6 warnings, 6 checks, 88 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000119334.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
