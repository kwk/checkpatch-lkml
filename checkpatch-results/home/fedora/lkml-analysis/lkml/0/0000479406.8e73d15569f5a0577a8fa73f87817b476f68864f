ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#46: FILE: drivers/char/mem.c:284:
+	char * kbuf; /* k-addr because vwrite() takes vmlist_lock rwlock */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#53: FILE: drivers/char/mem.c:286:
+	if (p < (unsigned long) high_memory) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#55: FILE: drivers/char/mem.c:288:
+		if (count > (unsigned long) high_memory - p)

CHECK:SPACING: No space is necessary after a cast
#56: FILE: drivers/char/mem.c:289:
+			wrote = (unsigned long) high_memory - p;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#58: FILE: drivers/char/mem.c:291:
+		wrote = do_write_mem(file, (void*)p, p, buf, wrote, ppos);

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: drivers/char/mem.c:320:
+ ^I*ppos = p;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#87: FILE: drivers/char/mem.c:320:
+ ^I*ppos = p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: drivers/char/mem.c:320:
+ ^I*ppos = p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: drivers/char/mem.c:321:
+ ^Ireturn virtr + wrote;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#88: FILE: drivers/char/mem.c:321:
+ ^Ireturn virtr + wrote;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: drivers/char/mem.c:321:
+ ^Ireturn virtr + wrote;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#98: FILE: include/linux/vmalloc.h:25:
+extern long vwrite(char *buf, char *addr, unsigned long count);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: No space is necessary after a cast
#133: FILE: mm/vmalloc.c:294:
+	if ((unsigned long) addr + count < count)

CHECK:SPACING: No space is necessary after a cast
#134: FILE: mm/vmalloc.c:295:
+		count = -(unsigned long) addr;

CHECK:SPACING: No space is necessary after a cast
#138: FILE: mm/vmalloc.c:299:
+		vaddr = (char *) tmp->addr;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000479406.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 4 warnings, 7 checks, 108 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000479406.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
