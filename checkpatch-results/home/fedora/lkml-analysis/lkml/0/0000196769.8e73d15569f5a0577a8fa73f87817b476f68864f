WARNING:REPEATED_WORD: Possible repeated word: 'goodie'
#31: 
Here goodie goodie...

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#40: FILE: fs/proc/kmsg.c:49:
+static loff_t kmsg_seek(struct file *filp, loff_t offset, int origin) {
                                      ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#40: FILE: fs/proc/kmsg.c:49:
+static loff_t kmsg_seek(struct file *filp, loff_t offset, int origin) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#41: FILE: fs/proc/kmsg.c:50:
+    if(origin != 2 /* SEEK_END */ || offset < 0) { return -ESPIPE; }$

ERROR:SPACING: space required before the open parenthesis '('
#41: FILE: fs/proc/kmsg.c:50:
+    if(origin != 2 /* SEEK_END */ || offset < 0) { return -ESPIPE; }

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#41: FILE: fs/proc/kmsg.c:50:
+    if(origin != 2 /* SEEK_END */ || offset < 0) { return -ESPIPE; }

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#41: FILE: fs/proc/kmsg.c:50:
+    if(origin != 2 /* SEEK_END */ || offset < 0) { return -ESPIPE; }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#42: FILE: fs/proc/kmsg.c:51:
+    return do_syslog(5, NULL, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#50: FILE: fs/proc/kmsg.c:59:
+        .llseek         = kmsg_seek,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#50: FILE: fs/proc/kmsg.c:59:
+        .llseek         = kmsg_seek,$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000196769.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 6 warnings, 0 checks, 15 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000196769.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
