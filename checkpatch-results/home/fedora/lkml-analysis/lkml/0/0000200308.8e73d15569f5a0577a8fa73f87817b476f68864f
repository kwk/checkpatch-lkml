WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
In our hardware situation, the BIOS is unable to store or generate it's PIRQ

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#31: 
Signed-off-by:	Jaya Kumar	<jayalk@intworks.biz>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#40: FILE: arch/i386/pci/common.c:28:
+unsigned int pirq_table_addr = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#49: FILE: arch/i386/pci/common.c:193:
+		pirq_table_addr = simple_strtol(str+9, NULL, 0);
 		                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#49: FILE: arch/i386/pci/common.c:193:
+		pirq_table_addr = simple_strtol(str+9, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:TRAILING_WHITESPACE: trailing whitespace
#61: FILE: arch/i386/pci/irq.c:61:
+ *  Check passed address for the PCI IRQ Routing Table signature $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#71: FILE: arch/i386/pci/irq.c:71:
+	rt = (struct irq_routing_table *) addr;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#78: FILE: arch/i386/pci/irq.c:78:
+	for(i=0; i<rt->size; i++)
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#78: FILE: arch/i386/pci/irq.c:78:
+	for(i=0; i<rt->size; i++)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#78: FILE: arch/i386/pci/irq.c:78:
+	for(i=0; i<rt->size; i++)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#87: FILE: arch/i386/pci/irq.c:87:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#101: FILE: arch/i386/pci/irq.c:99:
+		rt = pirq_check_routing_table((u8 *) __va(pirq_table_addr));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#102: FILE: arch/i386/pci/irq.c:100:
+		if (rt) {
+			return rt;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#119: FILE: arch/i386/pci/irq.c:106:
+		if (rt) {
 			return rt;
 		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: Documentation/kernel-parameters.txt:972:
+^I^I^I^I^Iby the BIOS) if it is outside the .  $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200308.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 5 warnings, 4 checks, 97 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200308.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
