WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
--- linux-2.6.14-rc5-mm1/fs/ecryptfs/inode.c	1969-12-31 18:00:00.000000000 -0600

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#43: FILE: fs/ecryptfs/inode.c:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#63: FILE: fs/ecryptfs/inode.c:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#64: FILE: fs/ecryptfs/inode.c:22:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA$

WARNING:LINE_SPACING: Missing a blank line after declarations
#83: FILE: fs/ecryptfs/inode.c:41:
+	struct dentry *dir;
+	dir = ecryptfs_dget(dentry->d_parent);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dest"
#107: FILE: fs/ecryptfs/inode.c:65:
+	ASSERT(dest != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "src"
#108: FILE: fs/ecryptfs/inode.c:66:
+	ASSERT(src != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dest"
#115: FILE: fs/ecryptfs/inode.c:73:
+	ASSERT(dest != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "src"
#116: FILE: fs/ecryptfs/inode.c:74:
+	ASSERT(src != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dest"
#122: FILE: fs/ecryptfs/inode.c:80:
+	ASSERT(dest != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "src"
#123: FILE: fs/ecryptfs/inode.c:81:
+	ASSERT(src != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dest"
#132: FILE: fs/ecryptfs/inode.c:90:
+	ASSERT(dest != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "src"
#133: FILE: fs/ecryptfs/inode.c:91:
+	ASSERT(src != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dest"
#143: FILE: fs/ecryptfs/inode.c:101:
+	ASSERT(dest != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "src"
#144: FILE: fs/ecryptfs/inode.c:102:
+	ASSERT(src != NULL);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#168: FILE: fs/ecryptfs/inode.c:126:
+ * @param nd		    nameidata of ecryptfs' parent's dentry & vfsmnt
           ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#175: FILE: fs/ecryptfs/inode.c:133:
+				struct nameidata *nd)
 				                  ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#180: FILE: fs/ecryptfs/inode.c:138:
+	struct vfsmount *saved_vfsmount = NULL;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#185: FILE: fs/ecryptfs/inode.c:143:
+	rc = vfs_create(lower_dir_inode, lower_dentry, mode, nd);
 	                                                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#200: FILE: fs/ecryptfs/inode.c:158:
+ * @param nd		    nameidata of ecryptfs' parent's dentry & vfsmnt
           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#206: FILE: fs/ecryptfs/inode.c:164:
+		   struct nameidata *nd)
 		                     ^^

WARNING:SPLIT_STRING: quoted string split across lines
#216: FILE: fs/ecryptfs/inode.c:174:
+		ecryptfs_printk(0, KERN_ERR, "ecryptfs dentry doesn't know"
+				"about its lower counterpart\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#216: FILE: fs/ecryptfs/inode.c:174:
+		ecryptfs_printk(0, KERN_ERR, "ecryptfs dentry doesn't know"
+				"about its lower counterpart\n");

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#221: FILE: fs/ecryptfs/inode.c:179:
+	if (unlikely(IS_ERR(lower_dir_dentry))) {

WARNING:SPLIT_STRING: quoted string split across lines
#223: FILE: fs/ecryptfs/inode.c:181:
+		ecryptfs_printk(0, KERN_ERR, "Error locking directory of "
+				"dentry\n");

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#229: FILE: fs/ecryptfs/inode.c:187:
+					     mode, nd);
 					           ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#260: FILE: fs/ecryptfs/inode.c:218:
+	struct file fake_file;
+	memset(&fake_file, 0, sizeof(fake_file));

WARNING:SPLIT_STRING: quoted string split across lines
#303: FILE: fs/ecryptfs/inode.c:261:
+		ecryptfs_printk(0, KERN_ERR, "ecryptfs dentry doesn't know"
+				"about its lower counterpart\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#303: FILE: fs/ecryptfs/inode.c:261:
+		ecryptfs_printk(0, KERN_ERR, "ecryptfs dentry doesn't know"
+				"about its lower counterpart\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#311: FILE: fs/ecryptfs/inode.c:269:
+^I/* This code is migrated from ecryptfs_open... $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#315: FILE: fs/ecryptfs/inode.c:273:
+^I * f->f_mode = ((flags+1) & O_ACCMODE) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#317: FILE: fs/ecryptfs/inode.c:275:
+^I * $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#326: FILE: fs/ecryptfs/inode.c:284:
+	if (!crypt_stats->struct_initialized) {
+		BUG();
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#327: FILE: fs/ecryptfs/inode.c:285:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPLIT_STRING: quoted string split across lines
#364: FILE: fs/ecryptfs/inode.c:322:
+		ecryptfs_printk(1, KERN_NOTICE, "Error creating new file "
+				"context\n");

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#386: FILE: fs/ecryptfs/inode.c:344:
+ * @param nd nameidata
           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#391: FILE: fs/ecryptfs/inode.c:349:
+		int mode, struct nameidata *nd)
 		                            ^^

WARNING:SPLIT_STRING: quoted string split across lines
#396: FILE: fs/ecryptfs/inode.c:354:
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; ecryptfs_dentry->d_name.name = "
+			"[%s], directory_inode=[%p], ecryptfs_dentry->d_parent"

WARNING:SPLIT_STRING: quoted string split across lines
#397: FILE: fs/ecryptfs/inode.c:355:
+			"[%s], directory_inode=[%p], ecryptfs_dentry->d_parent"
+			"->d_inode=[%p], nd->dentry=[%p], nd->last.name=[%s], "

WARNING:SPLIT_STRING: quoted string split across lines
#398: FILE: fs/ecryptfs/inode.c:356:
+			"->d_inode=[%p], nd->dentry=[%p], nd->last.name=[%s], "
+			"ecryptfs_dentry=[%p]\n", ecryptfs_dentry->d_name.name,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#402: FILE: fs/ecryptfs/inode.c:360:
+	rc = ecryptfs_do_create(directory_inode, ecryptfs_dentry, mode, nd);
 	                                                                ^^

WARNING:SPLIT_STRING: quoted string split across lines
#405: FILE: fs/ecryptfs/inode.c:363:
+		ecryptfs_printk(0, KERN_WARNING, "Failed to create file in"
+				"lower filesystem\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#405: FILE: fs/ecryptfs/inode.c:363:
+		ecryptfs_printk(0, KERN_WARNING, "Failed to create file in"
+				"lower filesystem\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#409: FILE: fs/ecryptfs/inode.c:367:
+	 * that this on disk file is prepared to be an ecryptfs file */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:INDENTED_LABEL: labels should not be indented
#411: FILE: fs/ecryptfs/inode.c:369:
+      out:

WARNING:REPEATED_WORD: Possible repeated word: 'dentry'
#421: FILE: fs/ecryptfs/inode.c:379:
+ * @param dentry dentry

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#422: FILE: fs/ecryptfs/inode.c:380:
+ * @param nd	 nameidata; may be NULL
           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#425: FILE: fs/ecryptfs/inode.c:383:
+				      struct nameidata *nd)
 				                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#439: FILE: fs/ecryptfs/inode.c:397:
+			"e = [%s], nd = [%p]\n", dir, dentry->d_name.name, nd);
 			           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#439: FILE: fs/ecryptfs/inode.c:397:
+			"e = [%s], nd = [%p]\n", dir, dentry->d_name.name, nd);
 			                                                   ^^

WARNING:SPLIT_STRING: quoted string split across lines
#439: FILE: fs/ecryptfs/inode.c:397:
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; dir = [%p], dentry->d_name.nam"
+			"e = [%s], nd = [%p]\n", dir, dentry->d_name.name, nd);

WARNING:MISSING_SPACE: break quoted strings at a space character
#439: FILE: fs/ecryptfs/inode.c:397:
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; dir = [%p], dentry->d_name.nam"
+			"e = [%s], nd = [%p]\n", dir, dentry->d_name.name, nd);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#446: FILE: fs/ecryptfs/inode.c:404:
+	if ((dentry->d_name.len == 1 && !strcmp(dentry->d_name.name, "."))
+	    || (dentry->d_name.len == 2 && !strcmp(dentry->d_name.name, ".."))) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#460: FILE: fs/ecryptfs/inode.c:418:
+	 * counter */

WARNING:SPLIT_STRING: quoted string split across lines
#462: FILE: fs/ecryptfs/inode.c:420:
+	ecryptfs_printk(1, KERN_NOTICE, "encoded_name = [%s]; encoded_namelen "
+			"= [%d]\n", encoded_name, encoded_namelen);

WARNING:SPLIT_STRING: quoted string split across lines
#467: FILE: fs/ecryptfs/inode.c:425:
+	ecryptfs_printk(1, KERN_NOTICE, "lower_dentry = [%p]; lower_dentry->"
+			"d_name.name = [%s]\n", lower_dentry,

WARNING:SPLIT_STRING: quoted string split across lines
#486: FILE: fs/ecryptfs/inode.c:444:
+		ecryptfs_printk(0, KERN_ERR, "Out of memory whilst attempting "
+				"to allocate ecryptfs_dentry_info struct\n");

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#510: FILE: fs/ecryptfs/inode.c:468:
+	if (!nd) {
 	     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#511: FILE: fs/ecryptfs/inode.c:469:
+		ecryptfs_printk(1, KERN_NOTICE, "We have a NULL nd, just leave"
 		                                                ^^

WARNING:SPLIT_STRING: quoted string split across lines
#512: FILE: fs/ecryptfs/inode.c:470:
+		ecryptfs_printk(1, KERN_NOTICE, "We have a NULL nd, just leave"
+				"as we *think* we are about to unlink\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#512: FILE: fs/ecryptfs/inode.c:470:
+		ecryptfs_printk(1, KERN_NOTICE, "We have a NULL nd, just leave"
+				"as we *think* we are about to unlink\n");

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#533: FILE: fs/ecryptfs/inode.c:491:
+	err = ecryptfs_read_header_region(page_virt, tlower_dentry, nd);
 	                                                            ^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#536: FILE: fs/ecryptfs/inode.c:494:
+	if (!crypt_stats->policy_applied) {
+		ecryptfs_set_default_sizes(crypt_stats);
+	}

WARNING:SPLIT_STRING: quoted string split across lines
#550: FILE: fs/ecryptfs/inode.c:508:
+			ecryptfs_printk(1, KERN_NOTICE, "Underlying file does "
+					"not look like it's encrypted; not "

WARNING:SPLIT_STRING: quoted string split across lines
#551: FILE: fs/ecryptfs/inode.c:509:
+					"not look like it's encrypted; not "
+					"copying file size\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#559: FILE: fs/ecryptfs/inode.c:517:
+	if (tlower_dentry) {
+		ecryptfs_dput(tlower_dentry);
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#576: FILE: fs/ecryptfs/inode.c:534:
+	struct dentry *lower_dir_dentry;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#611: FILE: fs/ecryptfs/inode.c:569:
+	struct dentry *tlower_dir_dentry = NULL;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#616: FILE: fs/ecryptfs/inode.c:574:
+	if (!(tdentry = ecryptfs_dget(dentry))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#625: FILE: fs/ecryptfs/inode.c:583:
+	if (!(tlower_dentry = ecryptfs_dget(lower_dentry))) {

WARNING:SPLIT_STRING: quoted string split across lines
#628: FILE: fs/ecryptfs/inode.c:586:
+		ecryptfs_printk(0, KERN_ERR, "Error dget'ing lower_dentry "
+				"[%p]\n", lower_dentry);

WARNING:LINE_SPACING: Missing a blank line after declarations
#666: FILE: fs/ecryptfs/inode.c:624:
+	struct ecryptfs_crypt_stats *crypt_stats = NULL;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#701: FILE: fs/ecryptfs/inode.c:659:
+	struct dentry *lower_dir_dentry;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#728: FILE: fs/ecryptfs/inode.c:686:
+	struct dentry *tlower_dir_dentry = NULL;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#730: FILE: fs/ecryptfs/inode.c:688:
+	if (!(tdentry = ecryptfs_dget(dentry))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#737: FILE: fs/ecryptfs/inode.c:695:
+	if (!(tlower_dentry = ecryptfs_dget(lower_dentry))) {

WARNING:SPLIT_STRING: quoted string split across lines
#740: FILE: fs/ecryptfs/inode.c:698:
+		ecryptfs_printk(0, KERN_ERR, "Error dget'ing lower_dentry "
+				"[%p]\n", lower_dentry);

WARNING:LINE_SPACING: Missing a blank line after declarations
#770: FILE: fs/ecryptfs/inode.c:728:
+	struct dentry *lower_dir_dentry;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#796: FILE: fs/ecryptfs/inode.c:754:
+	struct dentry *lower_new_dir_dentry;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#819: FILE: fs/ecryptfs/inode.c:777:
+ecryptfs_readlink(struct dentry *dentry, char __user * buf, int bufsiz)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#827: FILE: fs/ecryptfs/inode.c:785:
+	struct ecryptfs_crypt_stats *crypt_stats;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lower_buf"
#836: FILE: fs/ecryptfs/inode.c:794:
+	if (lower_buf == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#852: FILE: fs/ecryptfs/inode.c:810:
+		if (err == -ENOMEM) {
+			goto out;
+		}

WARNING:SPLIT_STRING: quoted string split across lines
#857: FILE: fs/ecryptfs/inode.c:815:
+			ecryptfs_printk(1, KERN_NOTICE, "Copying [%d] bytes "
+					"to userspace: [%s]\n", err,

WARNING:INDENTED_LABEL: labels should not be indented
#867: FILE: fs/ecryptfs/inode.c:825:
+      out:

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#871: FILE: fs/ecryptfs/inode.c:829:
+static void *ecryptfs_follow_link(struct dentry *dentry, struct nameidata *nd)
                                                                            ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#876: FILE: fs/ecryptfs/inode.c:834:
+	mm_segment_t old_fs;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#891: FILE: fs/ecryptfs/inode.c:849:
+	nd_set_link(nd, buf);
 	            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#899: FILE: fs/ecryptfs/inode.c:857:
+ecryptfs_put_link(struct dentry *dentry, struct nameidata *nd, void *ptr)
                                                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#902: FILE: fs/ecryptfs/inode.c:860:
+	ecryptfs_kfree(nd_get_link(nd));
 	                           ^^

WARNING:TYPO_SPELLING: 'requried' may be misspelled - perhaps 'required'?
#906: FILE: fs/ecryptfs/inode.c:864:
+ * Calculate the requried size of the lower file based on the specified size
                  ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#931: FILE: fs/ecryptfs/inode.c:889:
+				 * negative... */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#932: FILE: fs/ecryptfs/inode.c:890:
+		BUG();

WARNING:TYPO_SPELLING: 'integrety' may be misspelled - perhaps 'integrity'?
#947: FILE: fs/ecryptfs/inode.c:905:
+ * N.B. No claims are made about integrety of the encrypted data when
                                  ^^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#948: FILE: fs/ecryptfs/inode.c:906:
+ * ^Ishrinking a file. (But its probably going to be lost)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#951: FILE: fs/ecryptfs/inode.c:909:
+ * ^I the encrypted data?$

WARNING:SPLIT_STRING: quoted string split across lines
#967: FILE: fs/ecryptfs/inode.c:925:
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; dentry = [%p], new_length = "
+			"[%lld], i_size_read(inode) = [%lld]\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_length == i_size'
#970: FILE: fs/ecryptfs/inode.c:928:
+	if (unlikely((new_length == i_size))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#970: FILE: fs/ecryptfs/inode.c:928:
+	if (unlikely((new_length == i_size))) {
+		goto out;
+	}

WARNING:SPLIT_STRING: quoted string split across lines
#976: FILE: fs/ecryptfs/inode.c:934:
+		ecryptfs_printk(0, KERN_ERR, "NULL crypt_stats on dentry with "
+				"d_name.name = [%s]\n", dentry->d_name.name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#983: FILE: fs/ecryptfs/inode.c:941:
+	 * there as well. */

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#1001: FILE: fs/ecryptfs/inode.c:959:
+	if (unlikely(IS_ERR(lower_file))) {

WARNING:SPLIT_STRING: quoted string split across lines
#1022: FILE: fs/ecryptfs/inode.c:980:
+					"Problem with ecryptfs_write"
+					"_inode_size\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#1022: FILE: fs/ecryptfs/inode.c:980:
+					"Problem with ecryptfs_write"
+					"_inode_size\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1035: FILE: fs/ecryptfs/inode.c:993:
+		 * know if we need to reduce the size of the lower file. */

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1068: FILE: fs/ecryptfs/inode.c:1026:
+ecryptfs_permission(struct inode *inode, int mask, struct nameidata *nd)
                                                                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1072: FILE: fs/ecryptfs/inode.c:1030:
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; inode = [%p], mask=[%d], nd ="
 	                                                                 ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1072: FILE: fs/ecryptfs/inode.c:1030:
+	int rc = 0;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; inode = [%p], mask=[%d], nd ="

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1073: FILE: fs/ecryptfs/inode.c:1031:
+			"[%p]\n", inode, mask, nd);
 			                       ^^

WARNING:SPLIT_STRING: quoted string split across lines
#1073: FILE: fs/ecryptfs/inode.c:1031:
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; inode = [%p], mask=[%d], nd ="
+			"[%p]\n", inode, mask, nd);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1075: FILE: fs/ecryptfs/inode.c:1033:
+	if (nd) {
 	    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1079: FILE: fs/ecryptfs/inode.c:1037:
+	rc = permission(lower_inode, mask, nd);
 	                                   ^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1088: FILE: fs/ecryptfs/inode.c:1046:
+ * $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1102: FILE: fs/ecryptfs/inode.c:1060:
+	struct ecryptfs_crypt_stats *crypt_stats;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; dentry->d_name.name = [%s]\n",

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#1110: FILE: fs/ecryptfs/inode.c:1068:
+				"ia->ia_valid = [0x%x] ATTR_SIZE" " = [0x%x]\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#1130: FILE: fs/ecryptfs/inode.c:1088:
+	void *ptr;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#1133: FILE: fs/ecryptfs/inode.c:1091:
+	if (!size)
[...]
+	else if (size <= PAGE_SIZE) {
[...]
+	} else {
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#1150: FILE: fs/ecryptfs/inode.c:1108:
+	if (!size)
[...]
+	else if (size <= PAGE_SIZE) {
[...]
+	} else {
[...]

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#1165: FILE: fs/ecryptfs/inode.c:1123:
+	int err = -ENOTSUPP;

ENOTSUPP is not a standard error code and should be avoided in new patches.
EOPNOTSUPP should be used instead.

See: https://lore.kernel.org/netdev/20200510182252.GA411829@lunn.ch/

WARNING:LINE_SPACING: Missing a blank line after declarations
#1173: FILE: fs/ecryptfs/inode.c:1131:
+	struct ecryptfs_crypt_stats *crypt_stats;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1177: FILE: fs/ecryptfs/inode.c:1135:
+		const char *suffix;
+		namelen = strlen(name);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'err > 0'
#1224: FILE: fs/ecryptfs/inode.c:1182:
+		if ((err > 0) && size) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1229: FILE: fs/ecryptfs/inode.c:1187:
+			unsigned char zero_iv[ECRYPTFS_MAX_IV_BYTES];
+			memset(zero_iv, 0, ECRYPTFS_MAX_IV_BYTES);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1255: FILE: fs/ecryptfs/inode.c:1213:
+	if (encoded_name) {
+		xattr_free(encoded_name, namelen + 1);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1258: FILE: fs/ecryptfs/inode.c:1216:
+	if (encoded_value) {
+		xattr_free(encoded_value, size);
+	}

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#1268: FILE: fs/ecryptfs/inode.c:1226:
+	int err = -ENOTSUPP;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1278: FILE: fs/ecryptfs/inode.c:1236:
+	unsigned char zero_iv[ECRYPTFS_MAX_IV_BYTES];
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1285: FILE: fs/ecryptfs/inode.c:1243:
+		const char *suffix;
+		namelen = strlen(name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1327: FILE: fs/ecryptfs/inode.c:1285:
+			 * allocated? */

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#1358: FILE: fs/ecryptfs/inode.c:1316:
+	int err = -ENOTSUPP;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1365: FILE: fs/ecryptfs/inode.c:1323:
+	struct ecryptfs_crypt_stats *crypt_stats;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1369: FILE: fs/ecryptfs/inode.c:1327:
+		const char *suffix;
+		namelen = strlen(name);

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#1420: FILE: fs/ecryptfs/inode.c:1378:
+	int err = -ENOTSUPP;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1429: FILE: fs/ecryptfs/inode.c:1387:
+	if (!lower_dentry->d_inode->i_op->listxattr) {
+		goto out_no_xattr;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1443: FILE: fs/ecryptfs/inode.c:1401:
+	if (err < 0) {
+		goto out;
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1451: FILE: fs/ecryptfs/inode.c:1409:
+		int namelen, sufflen, prelen;
+		namelen = strlen(cur);

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#1497: FILE: fs/ecryptfs/inode.c:1455:
+struct inode_operations ecryptfs_symlink_iops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#1509: FILE: fs/ecryptfs/inode.c:1467:
+struct inode_operations ecryptfs_dir_iops = {

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#1527: FILE: fs/ecryptfs/inode.c:1485:
+struct inode_operations ecryptfs_main_iops = {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138721.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 112 warnings, 16 checks, 1492 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138721.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
