WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#162: FILE: drivers/timesource/jiffies.c:1:
+/***********************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#163: FILE: drivers/timesource/jiffies.c:2:
+* linux/drivers/timesource/jiffies.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#163: FILE: drivers/timesource/jiffies.c:2:
+/***********************************************************************
+* linux/drivers/timesource/jiffies.c

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#180: FILE: drivers/timesource/jiffies.c:19:
+* along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#181: FILE: drivers/timesource/jiffies.c:20:
+* Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:TYPO_SPELLING: 'accuratly' may be misspelled - perhaps 'accurately'?
#194: FILE: drivers/timesource/jiffies.c:33:
+ * interrupt hardware to accuratly tick at the
                          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'reccomended' may be misspelled - perhaps 'recommended'?
#195: FILE: drivers/timesource/jiffies.c:34:
+ * requested HZ value. It is also not reccomended
                                       ^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#198: FILE: drivers/timesource/jiffies.c:37:
+#define NSEC_PER_JIFFY ((u32)((((u64)NSEC_PER_SEC)<<8)/ACTHZ))
                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#198: FILE: drivers/timesource/jiffies.c:37:
+#define NSEC_PER_JIFFY ((u32)((((u64)NSEC_PER_SEC)<<8)/ACTHZ))
                                                       ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#240: FILE: include/asm-generic/timeofday.h:1:
+/*  linux/include/asm-generic/timeofday.h

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#240: FILE: include/asm-generic/timeofday.h:1:
+/*  linux/include/asm-generic/timeofday.h

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#254: FILE: include/asm-generic/timeofday.h:15:
+extern nsec_t read_persistent_clock(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#255: FILE: include/asm-generic/timeofday.h:16:
+extern void sync_persistent_clock(struct timespec ts);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#258: FILE: include/asm-generic/timeofday.h:19:
+extern void arch_update_vsyscall_gtod(nsec_t wall_time, cycle_t offset_base,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: include/asm-generic/timeofday.h:20:
+extern void arch_update_vsyscall_gtod(nsec_t wall_time, cycle_t offset_base,
+				struct timesource_t* timesource, int ntp_adj);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#259: FILE: include/asm-generic/timeofday.h:20:
+				struct timesource_t* timesource, int ntp_adj);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#261: FILE: include/asm-generic/timeofday.h:22:
+#define arch_update_vsyscall_gtod(x,y,z,w) {}
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#261: FILE: include/asm-generic/timeofday.h:22:
+#define arch_update_vsyscall_gtod(x,y,z,w) {}
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#261: FILE: include/asm-generic/timeofday.h:22:
+#define arch_update_vsyscall_gtod(x,y,z,w) {}
                                        ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#270: FILE: include/linux/ntp.h:1:
+/*  linux/include/linux/ntp.h

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#270: FILE: include/linux/ntp.h:1:
+/*  linux/include/linux/ntp.h

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#283: FILE: include/linux/ntp.h:14:
+int ntp_adjtimex(struct timex*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct timex*' should also have an identifier name
#283: FILE: include/linux/ntp.h:14:
+int ntp_adjtimex(struct timex*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#307: FILE: include/linux/timeofday.h:1:
+/*  linux/include/linux/timeofday.h

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#307: FILE: include/linux/timeofday.h:1:
+/*  linux/include/linux/timeofday.h

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#320: FILE: include/linux/timeofday.h:14:
+extern nsec_t get_lowres_timestamp(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#321: FILE: include/linux/timeofday.h:15:
+extern nsec_t get_lowres_timeofday(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#322: FILE: include/linux/timeofday.h:16:
+extern nsec_t do_monotonic_clock(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#324: FILE: include/linux/timeofday.h:18:
+extern void do_gettimeofday(struct timeval *tv);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#325: FILE: include/linux/timeofday.h:19:
+extern void getnstimeofday(struct timespec *ts);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#326: FILE: include/linux/timeofday.h:20:
+extern int do_settimeofday(struct timespec *tv);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#327: FILE: include/linux/timeofday.h:21:
+extern int do_adjtimex(struct timex *tx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#329: FILE: include/linux/timeofday.h:23:
+extern void timeofday_init(void);

WARNING:LINE_SPACING: Missing a blank line after declarations
#335: FILE: include/linux/timeofday.h:29:
+	struct timeval tv;
+	tv.tv_sec = div_long_long_rem(ns, NSEC_PER_SEC, &tv.tv_usec);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#336: FILE: include/linux/timeofday.h:30:
+	tv.tv_usec = (tv.tv_usec + NSEC_PER_USEC/2) / NSEC_PER_USEC;
 	                                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#343: FILE: include/linux/timeofday.h:37:
+	struct timespec ts;
+	ts.tv_sec = div_long_long_rem(ns, NSEC_PER_SEC, &ts.tv_nsec);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#347: FILE: include/linux/timeofday.h:41:
+static inline nsec_t timespec_to_ns(struct timespec* ts)

WARNING:LINE_SPACING: Missing a blank line after declarations
#350: FILE: include/linux/timeofday.h:44:
+	nsec_t ret;
+	ret = ((nsec_t)ts->tv_sec) * NSEC_PER_SEC;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#355: FILE: include/linux/timeofday.h:49:
+static inline nsec_t timeval_to_ns(struct timeval* tv)

WARNING:LINE_SPACING: Missing a blank line after declarations
#358: FILE: include/linux/timeofday.h:52:
+	nsec_t ret;
+	ret = ((nsec_t)tv->tv_sec) * NSEC_PER_SEC;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#370: FILE: include/linux/timesource.h:1:
+/*  linux/include/linux/timesource.h

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#370: FILE: include/linux/timesource.h:1:
+/*  linux/include/linux/timesource.h

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#383: FILE: include/linux/timesource.h:14:
+#include <asm/io.h>

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#414: FILE: include/linux/timesource.h:45:
+	char* name;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#430: FILE: include/linux/timesource.h:61:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#445: FILE: include/linux/timesource.h:76:
+	u64 tmp = ((u64)1000000) << shift_constant;
+	tmp += khz/2; /* round for do_div */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#445: FILE: include/linux/timesource.h:76:
+	tmp += khz/2; /* round for do_div */
 	          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#464: FILE: include/linux/timesource.h:95:
+	u64 tmp = ((u64)1000000000) << shift_constant;
+	tmp += hz/2; /* round for do_div */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#464: FILE: include/linux/timesource.h:95:
+	tmp += hz/2; /* round for do_div */
 	         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#469: FILE: include/linux/timesource.h:100:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#477: FILE: include/linux/timesource.h:108:
+		high = readl(addr+4);
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#479: FILE: include/linux/timesource.h:110:
+	} while (high != readl(addr+4));
 	                           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#487: FILE: include/linux/timesource.h:118:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#512: FILE: include/linux/timesource.h:143:
+	u64 ret;
+	ret = (u64)cycles;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#524: FILE: include/linux/timesource.h:155:
+static inline nsec_t cyc2ns_rem(struct timesource_t *ts, int ntp_adj, cycle_t cycles, u64* rem)

WARNING:LINE_SPACING: Missing a blank line after declarations
#527: FILE: include/linux/timesource.h:158:
+	u64 ret;
+	ret = (u64)cycles;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#531: FILE: include/linux/timesource.h:162:
+		*rem = ret & ((1<<ts->shift)-1);
 		                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#531: FILE: include/linux/timesource.h:162:
+		*rem = ret & ((1<<ts->shift)-1);
 		                            ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#538: FILE: include/linux/timesource.h:169:
+void register_timesource(struct timesource_t*);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#540: FILE: include/linux/timesource.h:171:
+struct timesource_t* get_next_timesource(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#595: FILE: kernel/ntp.c:1:
+/********************************************************************

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#596: FILE: kernel/ntp.c:2:
+* linux/kernel/ntp.c

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#596: FILE: kernel/ntp.c:2:
+/********************************************************************
+* linux/kernel/ntp.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#616: FILE: kernel/ntp.c:22:
+* along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#617: FILE: kernel/ntp.c:23:
+* Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#661: FILE: kernel/ntp.c:67:
+static long ntp_tick    = USEC_PER_SEC/USER_HZ; /* tick length */
                                       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#668: FILE: kernel/ntp.c:74:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#676: FILE: kernel/ntp.c:82:
+#define shiftR(x,s) (x < 0) ? (-((-x) >> (s))) : ((x) >> (s))
                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#676: FILE: kernel/ntp.c:82:
+#define shiftR(x,s) (x < 0) ? (-((-x) >> (s))) : ((x) >> (s))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#676: FILE: kernel/ntp.c:82:
+#define shiftR(x,s) (x < 0) ? (-((-x) >> (s))) : ((x) >> (s))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#676: FILE: kernel/ntp.c:82:
+#define shiftR(x,s) (x < 0) ? (-((-x) >> (s))) : ((x) >> (s))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#676: FILE: kernel/ntp.c:82:
+#define shiftR(x,s) (x < 0) ? (-((-x) >> (s))) : ((x) >> (s))

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#689: FILE: kernel/ntp.c:95:
+	static u64 interval_sum = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#690: FILE: kernel/ntp.c:96:
+	static long ss_adj = 0;

ERROR:SPACING: space required before the open parenthesis '('
#698: FILE: kernel/ntp.c:104:
+	if(ss_offset_len < 0) /* make sure it doesn't go negative */

WARNING:LINE_SPACING: Missing a blank line after declarations
#711: FILE: kernel/ntp.c:117:
+		long next_adj;
+		interval_sum -= NSEC_PER_SEC;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#737: FILE: kernel/ntp.c:143:
+	ppm_sum += shiftR(ntp_freq,SHIFT_USEC);
 	                          ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#742: FILE: kernel/ntp.c:148:
+	static int dbg = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#743: FILE: kernel/ntp.c:149:
+	static int dbg = 0;
+	if(!(dbg++%300000))

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#743: FILE: kernel/ntp.c:149:
+	if(!(dbg++%300000))
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#743: FILE: kernel/ntp.c:149:
+	if(!(dbg++%300000))

WARNING:LONG_LINE: line length of 168 exceeds 100 columns
#744: FILE: kernel/ntp.c:150:
+		printk("tick_adj(%d) + offset_adj(%d) + ntp_freq(%d) + ss_adj(%d) = ppm_sum(%d)\n", tick_adj, offset_adj, shiftR(ntp_freq,SHIFT_USEC), ss_adj, ppm_sum);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#744: FILE: kernel/ntp.c:150:
+		printk("tick_adj(%d) + offset_adj(%d) + ntp_freq(%d) + ss_adj(%d) = ppm_sum(%d)\n", tick_adj, offset_adj, shiftR(ntp_freq,SHIFT_USEC), ss_adj, ppm_sum);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#744: FILE: kernel/ntp.c:150:
+		printk("tick_adj(%d) + offset_adj(%d) + ntp_freq(%d) + ss_adj(%d) = ppm_sum(%d)\n", tick_adj, offset_adj, shiftR(ntp_freq,SHIFT_USEC), ss_adj, ppm_sum);
 		                                                                                                                         ^

WARNING:TYPO_SPELLING: 'adjustement' may be misspelled - perhaps 'adjustment'?
#761: FILE: kernel/ntp.c:167:
+ * frequency adjustement accordingly.
              ^^^^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ntp_reftime == 0'
#779: FILE: kernel/ntp.c:185:
+	if ((ntp_status & STA_FREQHOLD) || (ntp_reftime == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'interval >= MINSEC'
#786: FILE: kernel/ntp.c:192:
+	if ((ntp_status & STA_FLL) && (interval >= MINSEC)) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#789: FILE: kernel/ntp.c:195:
+		offset_ppm = (offset + interval/2) / interval;
 		                               ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#797: FILE: kernel/ntp.c:203:
+		printk("ntp->freq change: %ld\n",shiftR(offset_ppm, damping));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#797: FILE: kernel/ntp.c:203:
+		printk("ntp->freq change: %ld\n",shiftR(offset_ppm, damping));
 		                                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#802: FILE: kernel/ntp.c:208:
+		long damping, offset_ppm;
+		offset_ppm = offset * interval;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#811: FILE: kernel/ntp.c:217:
+		printk("ntp->freq change: %ld\n", shiftR(offset_ppm, damping));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#815: FILE: kernel/ntp.c:221:
+		printk("ntp_hardupdate(): interval out of bounds: %ld status: 0x%x\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ntp_hardupdate', this function's name, in a string
#815: FILE: kernel/ntp.c:221:
+		printk("ntp_hardupdate(): interval out of bounds: %ld status: 0x%x\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#816: FILE: kernel/ntp.c:222:
+		printk("ntp_hardupdate(): interval out of bounds: %ld status: 0x%x\n",
+				interval, ntp_status);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#834: FILE: kernel/ntp.c:240:
+int ntp_adjtimex(struct timex* tx)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#844: FILE: kernel/ntp.c:250:
+	if ((tx->modes & ADJ_FREQUENCY)
+			&& (abs(tx->freq) > MAXFREQ))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#849: FILE: kernel/ntp.c:255:
+	if ((tx->modes & ADJ_MAXERROR)
+			&& (tx->maxerror < 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#850: FILE: kernel/ntp.c:256:
+			&& (tx->maxerror < 0
+				|| tx->maxerror >= NTP_PHASE_LIMIT))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#855: FILE: kernel/ntp.c:261:
+	if ((tx->modes & ADJ_ESTERROR)
+			&& (tx->esterror < 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#856: FILE: kernel/ntp.c:262:
+			&& (tx->esterror < 0
+				|| tx->esterror >= NTP_PHASE_LIMIT))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tx->constant < 0'
#860: FILE: kernel/ntp.c:266:
+	if ((tx->modes & ADJ_TIMECONST)
+			&& (tx->constant < 0))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#861: FILE: kernel/ntp.c:267:
+	if ((tx->modes & ADJ_TIMECONST)
+			&& (tx->constant < 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tx->modes != ADJ_OFFSET_SINGLESHOT'
#865: FILE: kernel/ntp.c:271:
+	if (((tx->modes & ADJ_OFFSET_SINGLESHOT) == ADJ_OFFSET_SINGLESHOT)
+			&& (tx->modes != ADJ_OFFSET_SINGLESHOT))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#866: FILE: kernel/ntp.c:272:
+	if (((tx->modes & ADJ_OFFSET_SINGLESHOT) == ADJ_OFFSET_SINGLESHOT)
+			&& (tx->modes != ADJ_OFFSET_SINGLESHOT))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tx->modes != ADJ_OFFSET_SINGLESHOT'
#870: FILE: kernel/ntp.c:276:
+	if ((tx->modes != ADJ_OFFSET_SINGLESHOT)
+			&& (tx->modes & ADJ_OFFSET)
+			&& (abs(tx->offset)>= MAXPHASE))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#871: FILE: kernel/ntp.c:277:
+	if ((tx->modes != ADJ_OFFSET_SINGLESHOT)
+			&& (tx->modes & ADJ_OFFSET)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#872: FILE: kernel/ntp.c:278:
+			&& (tx->modes & ADJ_OFFSET)
+			&& (abs(tx->offset)>= MAXPHASE))

ERROR:SPACING: spaces required around that '>=' (ctx:VxW)
#872: FILE: kernel/ntp.c:278:
+			&& (abs(tx->offset)>= MAXPHASE))
 			                   ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#877: FILE: kernel/ntp.c:283:
+	if ((tx->modes & ADJ_TICK)
+			&& ((tx->tick < 900000/USER_HZ)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#877: FILE: kernel/ntp.c:283:
+			&& ((tx->tick < 900000/USER_HZ)
 			                      ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#878: FILE: kernel/ntp.c:284:
+			&& ((tx->tick < 900000/USER_HZ)
+				||(tx->tick > 11000000/USER_HZ)))

ERROR:SPACING: spaces required around that '||' (ctx:ExV)
#878: FILE: kernel/ntp.c:284:
+				||(tx->tick > 11000000/USER_HZ)))
 				^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#878: FILE: kernel/ntp.c:284:
+				||(tx->tick > 11000000/USER_HZ)))
 				                      ^

ERROR:SPACING: space required before the open parenthesis '('
#882: FILE: kernel/ntp.c:288:
+	if(tx->modes) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#883: FILE: kernel/ntp.c:289:
+		printk("adjtimex: tx->offset: %ld    tx->freq: %ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#884: FILE: kernel/ntp.c:290:
+		printk("adjtimex: tx->offset: %ld    tx->freq: %ld\n",
+				tx->offset, tx->freq);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#922: FILE: kernel/ntp.c:328:
+		tick_adj = ((USEC_PER_SEC + USER_HZ/2)/USER_HZ) - tx->tick;
 		                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#922: FILE: kernel/ntp.c:328:
+		tick_adj = ((USEC_PER_SEC + USER_HZ/2)/USER_HZ) - tx->tick;
 		                                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#929: FILE: kernel/ntp.c:335:
+	if ((ntp_status & (STA_UNSYNC|STA_CLOCKERR)) != 0 )
 	                             ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#929: FILE: kernel/ntp.c:335:
+	if ((ntp_status & (STA_UNSYNC|STA_CLOCKERR)) != 0 )

CHECK:LINE_SPACING: Please don't use multiple blank lines
#961: FILE: kernel/ntp.c:367:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#978: FILE: kernel/ntp.c:384:
+	static time_t leaptime = 0;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#988: FILE: kernel/ntp.c:394:
+		}
+		else if (ntp_status & STA_DEL) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1000: FILE: kernel/ntp.c:406:
+			printk(KERN_NOTICE

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1010: FILE: kernel/ntp.c:416:
+			printk(KERN_NOTICE

WARNING:LINE_SPACING: Missing a blank line after declarations
#1037: FILE: kernel/ntp.c:443:
+	unsigned long flags;
+	write_seqlock_irqsave(&ntp_lock, flags);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1045: FILE: kernel/ntp.c:451:
+	offset_adj =0;
 	           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1084: FILE: kernel/time.c:144:
+         be checked  -johnstul@us.ibm.com$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1084: FILE: kernel/time.c:144:
+/* XXX - this is somewhat cracked out and should
+         be checked  -johnstul@us.ibm.com

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#1086: FILE: kernel/time.c:146:
+inline static void warp_clock(void)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:LINE_SPACING: Missing a blank line after declarations
#1089: FILE: kernel/time.c:149:
+	struct timespec ts;
+	getnstimeofday(&ts);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1133: FILE: kernel/timeofday.c:1:
+/*********************************************************************

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1134: FILE: kernel/timeofday.c:2:
+* linux/kernel/timeofday.c

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1134: FILE: kernel/timeofday.c:2:
+/*********************************************************************
+* linux/kernel/timeofday.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1152: FILE: kernel/timeofday.c:20:
+* along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1153: FILE: kernel/timeofday.c:21:
+* Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1212: FILE: kernel/timeofday.c:80:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1232: FILE: kernel/timeofday.c:100:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1248: FILE: kernel/timeofday.c:116:
+	unsigned long seq;
+	do {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1258: FILE: kernel/timeofday.c:126:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1269: FILE: kernel/timeofday.c:137:
+	unsigned long seq;
+	do {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1279: FILE: kernel/timeofday.c:147:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1290: FILE: kernel/timeofday.c:158:
+	unsigned long flags;
+	write_seqlock_irqsave(&xtime_lock, flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1294: FILE: kernel/timeofday.c:162:
+	set_normalized_timespec(&wall_to_monotonic,
+		-wall_to_monotonic.tv_sec, -wall_to_monotonic.tv_nsec);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1299: FILE: kernel/timeofday.c:167:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1327: FILE: kernel/timeofday.c:195:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1350: FILE: kernel/timeofday.c:218:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1373: FILE: kernel/timeofday.c:241:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1388: FILE: kernel/timeofday.c:256:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1400: FILE: kernel/timeofday.c:268:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1420: FILE: kernel/timeofday.c:288:
+	arch_update_vsyscall_gtod(system_time + wall_time_offset, offset_base,
+							timesource, ntp_adj);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1431: FILE: kernel/timeofday.c:299:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1451: FILE: kernel/timeofday.c:319:
+
+

WARNING:TYPO_SPELLING: 'Usefull' may be misspelled - perhaps 'Useful'?
#1458: FILE: kernel/timeofday.c:326:
+ * be shutdown for a period of time. Usefull when
                                      ^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1469: FILE: kernel/timeofday.c:337:
+	BUG_ON(time_suspend_state != TIME_RUNNING);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1486: FILE: kernel/timeofday.c:354:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1501: FILE: kernel/timeofday.c:369:
+	BUG_ON(time_suspend_state != TIME_SUSPENDED);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1537: FILE: kernel/timeofday.c:405:
+};
+static struct sys_device device_timer = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1541: FILE: kernel/timeofday.c:409:
+};
+static int timeofday_init_device(void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1544: FILE: kernel/timeofday.c:412:
+	int error = sysdev_class_register(&timeofday_sysclass);
+	if (!error)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1565: FILE: kernel/timeofday.c:433:
+	struct timesource_t* next;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1583: FILE: kernel/timeofday.c:451:
+	static int dbg=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1583: FILE: kernel/timeofday.c:451:
+	static int dbg=0;
 	              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1584: FILE: kernel/timeofday.c:452:
+	static int dbg=0;
+	if(!(dbg++%TIME_DBG_FREQ)){

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#1584: FILE: kernel/timeofday.c:452:
+	if(!(dbg++%TIME_DBG_FREQ)){
 	          ^

ERROR:SPACING: space required before the open brace '{'
#1584: FILE: kernel/timeofday.c:452:
+	if(!(dbg++%TIME_DBG_FREQ)){

ERROR:SPACING: space required before the open parenthesis '('
#1584: FILE: kernel/timeofday.c:452:
+	if(!(dbg++%TIME_DBG_FREQ)){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1585: FILE: kernel/timeofday.c:453:
+		printk(KERN_INFO "now: %lluc - then: %lluc = delta: %lluc -> %llu ns + %llu shift_ns (ntp_adj: %i)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1586: FILE: kernel/timeofday.c:454:
+		printk(KERN_INFO "now: %lluc - then: %lluc = delta: %lluc -> %llu ns + %llu shift_ns (ntp_adj: %i)\n",
+			(unsigned long long)now, (unsigned long long)offset_base,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1603: FILE: kernel/timeofday.c:471:
+	leapsecond = ntp_leapsecond(ns_to_timespec(system_time+wall_time_offset));
 	                                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1617: FILE: kernel/timeofday.c:485:
+		printk(KERN_INFO "Time: %s timesource has been installed.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1618: FILE: kernel/timeofday.c:486:
+		printk(KERN_INFO "Time: %s timesource has been installed.\n",
+					timesource->name);

ERROR:SPACING: space required before the open parenthesis '('
#1627: FILE: kernel/timeofday.c:495:
+	if(timesource->update_callback)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1630: FILE: kernel/timeofday.c:498:
+
+

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1634: FILE: kernel/timeofday.c:502:
+	mult_adj += 1000000/2; /* round for div*/
 	                   ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1641: FILE: kernel/timeofday.c:509:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1645: FILE: kernel/timeofday.c:513:
+	arch_update_vsyscall_gtod(system_time + wall_time_offset, offset_base,
+							timesource, ntp_adj);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1653: FILE: kernel/timeofday.c:521:
+	mod_timer(&timeofday_timer,
+				jiffies + msecs_to_jiffies(PERIODIC_INTERVAL_MS));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1656: FILE: kernel/timeofday.c:524:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1665: FILE: kernel/timeofday.c:533:
+	printk(KERN_INFO "timeofday_init: Starting up!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'timeofday_init', this function's name, in a string
#1665: FILE: kernel/timeofday.c:533:
+	printk(KERN_INFO "timeofday_init: Starting up!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1684: FILE: kernel/timeofday.c:552:
+	arch_update_vsyscall_gtod(system_time + wall_time_offset, offset_base,
+							timesource, ntp_adj);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1694: FILE: kernel/timeofday.c:562:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1696: FILE: kernel/timeofday.c:564:
+	printk(KERN_INFO "timeofday_init: finished!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'timeofday_init', this function's name, in a string
#1696: FILE: kernel/timeofday.c:564:
+	printk(KERN_INFO "timeofday_init: finished!\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#1699: FILE: kernel/timeofday.c:567:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1725: FILE: kernel/timesource.c:1:
+/*********************************************************************

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1726: FILE: kernel/timesource.c:2:
+* linux/kernel/timesource.c

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1726: FILE: kernel/timesource.c:2:
+/*********************************************************************
+* linux/kernel/timesource.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1743: FILE: kernel/timesource.c:19:
+* along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1744: FILE: kernel/timesource.c:20:
+* Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1758: FILE: kernel/timesource.c:34:
+
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1760: FILE: kernel/timesource.c:36:
+extern struct timesource_t timesource_jiffies;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1787: FILE: kernel/timesource.c:63:
+struct timesource_t* get_next_timesource(void)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1805: FILE: kernel/timesource.c:81:
+static struct timesource_t* select_timesource(void)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1807: FILE: kernel/timesource.c:83:
+	struct timesource_t* best = timesource_list[0];

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1810: FILE: kernel/timesource.c:86:
+	for (i=0; i < timesource_list_counter; i++) {
 	      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'override_name[0] != 0'
#1812: FILE: kernel/timesource.c:88:
+		if ((override_name[0] != 0) &&
+			(strlen(override_name)
+				== strlen(timesource_list[i]->name)) &&
+			(!strncmp(timesource_list[i]->name, override_name,
+				 strlen(override_name)))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1813: FILE: kernel/timesource.c:89:
+		if ((override_name[0] != 0) &&
+			(strlen(override_name)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1822: FILE: kernel/timesource.c:98:
+^I^I ^Ibest = timesource_list[i];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1822: FILE: kernel/timesource.c:98:
+^I^I ^Ibest = timesource_list[i];$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1832: FILE: kernel/timesource.c:108:
+void register_timesource(struct timesource_t* t)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1834: FILE: kernel/timesource.c:110:
+	char* error_msg = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1836: FILE: kernel/timesource.c:112:
+	int i;
+	write_seqlock(&timesource_lock);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1839: FILE: kernel/timesource.c:115:
+	for (i=0; i < timesource_list_counter; i++)
 	      ^

ERROR:SPACING: space required before the open brace '{'
#1840: FILE: kernel/timesource.c:116:
+		if (!strncmp(timesource_list[i]->name, t->name, strlen(t->name))){

ERROR:SPACING: space required before the open parenthesis '('
#1849: FILE: kernel/timesource.c:125:
+	if(!error_msg)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1852: FILE: kernel/timesource.c:128:
+		printk("register_timesource: Cannot register %s. %s\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'register_timesource', this function's name, in a string
#1852: FILE: kernel/timesource.c:128:
+		printk("register_timesource: Cannot register %s. %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1853: FILE: kernel/timesource.c:129:
+		printk("register_timesource: Cannot register %s. %s\n",
+					t->name, error_msg);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1862: FILE: kernel/timesource.c:138:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1887: FILE: kernel/timesource.c:163:
+	char* curr = buf;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1888: FILE: kernel/timesource.c:164:
+	char* curr = buf;
+	write_seqlock(&timesource_lock);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1889: FILE: kernel/timesource.c:165:
+	for(i=0; i < timesource_list_counter; i++) {
 	     ^

ERROR:SPACING: space required before the open parenthesis '('
#1889: FILE: kernel/timesource.c:165:
+	for(i=0; i < timesource_list_counter; i++) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1893: FILE: kernel/timesource.c:169:
+		curr += sprintf(curr, "%s ",timesource_list[i]->name);
 		                           ^

WARNING:TYPO_SPELLING: 'selction' may be misspelled - perhaps 'selection'?
#1908: FILE: kernel/timesource.c:184:
+ *     the default timesource selction
                               ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1911: FILE: kernel/timesource.c:187:
+static ssize_t sysfs_override_timesource(struct sys_device *dev,
+			const char *buf, size_t count)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1920: FILE: kernel/timesource.c:196:
+	strncpy(override_name, buf, strlen(buf)-1);
 	                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1921: FILE: kernel/timesource.c:197:
+	override_name[strlen(buf)-1] = 0;
 	                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1946: FILE: kernel/timesource.c:222:
+	int error = sysdev_class_register(&timesource_sysclass);
+	if (!error) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1955: FILE: kernel/timesource.c:231:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1963: FILE: kernel/timesource.c:239:
+static int __init boot_override_timesource(char* str)

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1966: FILE: kernel/timesource.c:242:
+		strlcpy(override_name, str, sizeof(override_name));

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#1969: FILE: kernel/timesource.c:245:
+__setup("timesource=", boot_override_timesource);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1978: FILE: kernel/timesource.c:254:
+static int __init boot_override_clock(char* str)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1980: FILE: kernel/timesource.c:256:
+	printk("Warning! clock= boot option is deprecated.\n");

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#1983: FILE: kernel/timesource.c:259:
+__setup("clock=", boot_override_clock);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000175422.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 61 errors, 73 warnings, 95 checks, 1805 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000175422.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
