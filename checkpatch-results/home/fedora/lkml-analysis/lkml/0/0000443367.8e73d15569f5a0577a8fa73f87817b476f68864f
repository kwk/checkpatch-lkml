WARNING:TYPO_SPELLING: 'independant' may be misspelled - perhaps 'independent'?
#46: 
   in favour of making the two drivers independant from each other.
                                       ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#50: 
   therefore not contain stuff only usefull there.
                                    ^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#59: 
diff -durNp -X /tmp/diff.8vxI0X linux-2.5.29/drivers/block/ll_rw_blk.c linux/drivers/block/ll_rw_blk.c

WARNING:TYPO_SPELLING: 'regster' may be misspelled - perhaps 'register'?
#207: FILE: drivers/ide/hd.c:71:
+/* Hd controller regster ports */
                  ^^^^^^^

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#415: FILE: drivers/ide/ide-tape.c:3229:
+static int idetape_position_tape(struct ata_device *drive, unsigned int block, u8 partition, int skip)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please don't use multiple blank lines
#435: FILE: drivers/ide/ioctl.c:36:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#481: FILE: drivers/ide/main.c:717:
+	struct ata_channel *ch;	/* FIXME:  Channel parms should not be accessed in ata_hd_setup */
 	                       	                   ^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#496: FILE: drivers/ide/main.c:725:
+	printk(KERN_INFO  "hd%s", s);

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#532: FILE: drivers/ide/main.c:729:
+		static const char *hd_words[] = {"none", "noprobe", "nowerr", "cdrom",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#545: FILE: drivers/ide/main.c:739:
+		if (!strncmp(s+1, "=ide-", 5)) {
 		              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#546: FILE: drivers/ide/main.c:740:
+			strncpy(drive->driver_req, s+2, 9);
 			                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#554: FILE: drivers/ide/main.c:746:
+		if (!strncmp(s+1, "lun=", 4)) {
 		              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#555: FILE: drivers/ide/main.c:747:
+^I                if (*get_options(s+5, 2, vals) || vals[0]!=1)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#555: FILE: drivers/ide/main.c:747:
+	                if (*get_options(s+5, 2, vals) || vals[0]!=1)
 	                                  ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#555: FILE: drivers/ide/main.c:747:
+	                if (*get_options(s+5, 2, vals) || vals[0]!=1)
 	                                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#564: FILE: drivers/ide/main.c:756:
+		switch (match_parm(s+1, hd_words, vals, 3)) {
 		                    ^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#573: FILE: drivers/ide/main.c:764:
+				ch->noprobe = 0;	/* FIXME:  Channel parm */
 				                	                   ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#579: FILE: drivers/ide/main.c:769:
+				ch->noprobe = 0;	/* FIXME:  Channel parm */
 				                	                   ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#593: FILE: drivers/ide/main.c:781:
+				ch->slow = 1;		/* FIXME:  Channel parm */
 				             		                   ^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#602: FILE: drivers/ide/main.c:815:
+	printk(" -- BAD OPTION\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#606: FILE: drivers/ide/main.c:819:
+	printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#626: FILE: drivers/ide/main.c:839:
+	printk(KERN_INFO  "ide_setup: ide%s", s);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ide_setup', this function's name, in a string
#626: FILE: drivers/ide/main.c:839:
+	printk(KERN_INFO  "ide_setup: ide%s", s);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#631: FILE: drivers/ide/main.c:844:
+		extern int ide_doubler;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#633: FILE: drivers/ide/main.c:846:
+		printk(KERN_INFO" : Enabled support for IDE doublers\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#633: FILE: drivers/ide/main.c:846:
+		printk(KERN_INFO" : Enabled support for IDE doublers\n");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#640: FILE: drivers/ide/main.c:853:
+		printk(KERN_INFO "ATA: Prevented DMA\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#648: FILE: drivers/ide/main.c:861:
+		printk(" : Enabled support for IDE inverse scan order.\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#659: FILE: drivers/ide/main.c:870:
+		if (*get_options(s+4, 2, vals) || vals[0] != 1)
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#682: FILE: drivers/ide/main.c:891:
+		switch (match_parm(s+1, ide_options, vals, 1)) {
 		                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#702: FILE: drivers/ide/main.c:932:
+		i = match_parm(s+1, ide_words, vals, 3);
 		                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#721: FILE: drivers/ide/main.c:1460:
+			if (!strncmp(options,"hd",2)) {
 			                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#721: FILE: drivers/ide/main.c:1460:
+			if (!strncmp(options,"hd",2)) {
 			                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#722: FILE: drivers/ide/main.c:1461:
+				if (!ata_hd_setup(options+2))
 				                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#723: FILE: drivers/ide/main.c:1462:
+					printk(KERN_ERR "Unknown option '%s'\n", options);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#725: FILE: drivers/ide/main.c:1464:
+			else if (!strncmp(options,"ide",3)) {
 			                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#725: FILE: drivers/ide/main.c:1464:
+			else if (!strncmp(options,"ide",3)) {
 			                               ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#725: FILE: drivers/ide/main.c:1464:
+			}
+			else if (!strncmp(options,"ide",3)) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#726: FILE: drivers/ide/main.c:1465:
+				if (!ide_setup(options+3))
 				                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#727: FILE: drivers/ide/main.c:1466:
+					printk(KERN_ERR "Unknown option '%s'\n", options);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#737: FILE: drivers/ide/main.c:1491:
+__setup("ide", ide_setup);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#738: FILE: drivers/ide/main.c:1492:
+__setup("hd", ata_hd_setup);

ERROR:CODE_INDENT: code indent should use tabs where possible
#771: FILE: drivers/usb/storage/freecom.c:48:
+        u8    buffer[64];             /* Common command block. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#771: FILE: drivers/usb/storage/freecom.c:48:
+        u8    buffer[64];             /* Common command block. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#781: FILE: drivers/usb/storage/freecom.c:54:
+        u8    Type;                   /* Command type. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#781: FILE: drivers/usb/storage/freecom.c:54:
+        u8    Type;                   /* Command type. */$

CHECK:CAMELCASE: Avoid CamelCase: <Type>
#781: FILE: drivers/usb/storage/freecom.c:54:
+        u8    Type;                   /* Command type. */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#782: FILE: drivers/usb/storage/freecom.c:55:
+        u8    Timeout;                /* Timeout in seconds. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#782: FILE: drivers/usb/storage/freecom.c:55:
+        u8    Timeout;                /* Timeout in seconds. */$

CHECK:CAMELCASE: Avoid CamelCase: <Timeout>
#782: FILE: drivers/usb/storage/freecom.c:55:
+        u8    Timeout;                /* Timeout in seconds. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#783: FILE: drivers/usb/storage/freecom.c:56:
+        u8    Atapi[12];              /* An ATAPI packet. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#783: FILE: drivers/usb/storage/freecom.c:56:
+        u8    Atapi[12];              /* An ATAPI packet. */$

CHECK:CAMELCASE: Avoid CamelCase: <Atapi>
#783: FILE: drivers/usb/storage/freecom.c:56:
+        u8    Atapi[12];              /* An ATAPI packet. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#784: FILE: drivers/usb/storage/freecom.c:57:
+        u8    Filler[50];             /* Padding Data. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: drivers/usb/storage/freecom.c:57:
+        u8    Filler[50];             /* Padding Data. */$

CHECK:CAMELCASE: Avoid CamelCase: <Filler>
#784: FILE: drivers/usb/storage/freecom.c:57:
+        u8    Filler[50];             /* Padding Data. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#792: FILE: drivers/usb/storage/freecom.c:61:
+        u8    Type;                   /* Command type. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#792: FILE: drivers/usb/storage/freecom.c:61:
+        u8    Type;                   /* Command type. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#793: FILE: drivers/usb/storage/freecom.c:62:
+        u8    Timeout;                /* Timeout in seconds. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: drivers/usb/storage/freecom.c:62:
+        u8    Timeout;                /* Timeout in seconds. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#794: FILE: drivers/usb/storage/freecom.c:63:
+        u32   Count;                  /* Number of bytes to transfer. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: drivers/usb/storage/freecom.c:63:
+        u32   Count;                  /* Number of bytes to transfer. */$

CHECK:CAMELCASE: Avoid CamelCase: <Count>
#794: FILE: drivers/usb/storage/freecom.c:63:
+        u32   Count;                  /* Number of bytes to transfer. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#795: FILE: drivers/usb/storage/freecom.c:64:
+        u8    Pad[58];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: drivers/usb/storage/freecom.c:64:
+        u8    Pad[58];$

CHECK:CAMELCASE: Avoid CamelCase: <Pad>
#795: FILE: drivers/usb/storage/freecom.c:64:
+        u8    Pad[58];

ERROR:CODE_INDENT: code indent should use tabs where possible
#803: FILE: drivers/usb/storage/freecom.c:68:
+        u8    Type;                   /* Type + IDE register. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#803: FILE: drivers/usb/storage/freecom.c:68:
+        u8    Type;                   /* Type + IDE register. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#804: FILE: drivers/usb/storage/freecom.c:69:
+        u8    Pad;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#804: FILE: drivers/usb/storage/freecom.c:69:
+        u8    Pad;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#805: FILE: drivers/usb/storage/freecom.c:70:
+        u16   Value;                  /* Value to write. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: drivers/usb/storage/freecom.c:70:
+        u16   Value;                  /* Value to write. */$

CHECK:CAMELCASE: Avoid CamelCase: <Value>
#805: FILE: drivers/usb/storage/freecom.c:70:
+        u16   Value;                  /* Value to write. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#806: FILE: drivers/usb/storage/freecom.c:71:
+        u8    Pad2[60];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: drivers/usb/storage/freecom.c:71:
+        u8    Pad2[60];$

CHECK:CAMELCASE: Avoid CamelCase: <Pad2>
#806: FILE: drivers/usb/storage/freecom.c:71:
+        u8    Pad2[60];

ERROR:CODE_INDENT: code indent should use tabs where possible
#812: FILE: drivers/usb/storage/freecom.c:75:
+        u8    Type;                   /* Type | IDE register. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: drivers/usb/storage/freecom.c:75:
+        u8    Type;                   /* Type | IDE register. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#813: FILE: drivers/usb/storage/freecom.c:76:
+        u8    Pad[63];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#813: FILE: drivers/usb/storage/freecom.c:76:
+        u8    Pad[63];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#821: FILE: drivers/usb/storage/freecom.c:80:
+        u8    Status;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: drivers/usb/storage/freecom.c:80:
+        u8    Status;$

CHECK:CAMELCASE: Avoid CamelCase: <Status>
#821: FILE: drivers/usb/storage/freecom.c:80:
+        u8    Status;

ERROR:CODE_INDENT: code indent should use tabs where possible
#822: FILE: drivers/usb/storage/freecom.c:81:
+        u8    Reason;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#822: FILE: drivers/usb/storage/freecom.c:81:
+        u8    Reason;$

CHECK:CAMELCASE: Avoid CamelCase: <Reason>
#822: FILE: drivers/usb/storage/freecom.c:81:
+        u8    Reason;

ERROR:CODE_INDENT: code indent should use tabs where possible
#823: FILE: drivers/usb/storage/freecom.c:82:
+        u16   Count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#823: FILE: drivers/usb/storage/freecom.c:82:
+        u16   Count;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#824: FILE: drivers/usb/storage/freecom.c:83:
+        u8    Pad[60];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#824: FILE: drivers/usb/storage/freecom.c:83:
+        u8    Pad[60];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1097: FILE: include/linux/hdreg.h:11:
+      __u8 heads;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1098: FILE: include/linux/hdreg.h:12:
+      __u8 sectors;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1099: FILE: include/linux/hdreg.h:13:
+      __u16 cylinders;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1394: FILE: include/linux/ide.h:53:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1543: FILE: include/linux/ide.h:202:
+
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1562: FILE: include/linux/ide.h:221:
+} __attribute__((packed));

CHECK:CAMELCASE: Avoid CamelCase: <tPIO>
#1640: FILE: include/linux/ide.h:299:
+	u8	tPIO;		/* Obsolete, 0=slow, 1=medium, 2=fast */

CHECK:CAMELCASE: Avoid CamelCase: <tDMA>
#1642: FILE: include/linux/ide.h:301:
+	u8	tDMA;		/* Obsolete, 0=slow, 1=medium, 2=fast */

CHECK:CAMELCASE: Avoid CamelCase: <CurAPMvalues>
#1772: FILE: include/linux/ide.h:431:
+	u16	CurAPMvalues;	/* current APM values */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1845: FILE: include/linux/ide.h:504:
+} __attribute__((packed));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000443367.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 45 warnings, 29 checks, 1740 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000443367.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
