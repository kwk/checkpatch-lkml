WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
--- 9.42/kernel/sysctl.c Tue, 25 Sep 2001 10:38:51 +1000 kaos (linux-2.4/j/38_sysctl.c 1.1.3.4.3.1.1.7 644)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#51: FILE: kernel/panic.c:108:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#51: FILE: kernel/panic.c:108:
+ $

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - const char *print_tainted() should probably be const char *print_tainted(void)
#52: FILE: kernel/panic.c:109:
+const char *print_tainted()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#55: FILE: kernel/panic.c:112:
+	static char buf[20];
+	if (tainted) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#55: FILE: kernel/panic.c:112:
+	if (tainted) {
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#57: FILE: kernel/panic.c:114:
+		snprintf(buf, sizeof(buf), "Tainted: %c%c",
+			tainted & 1 ? 'P' : 'G',

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#60: FILE: kernel/panic.c:117:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#62: FILE: kernel/panic.c:119:
+	return(buf);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#65: FILE: kernel/panic.c:122:
+int tainted = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#73: FILE: include/linux/sysctl.h:124:
+	KERN_TAINTED=53,	/* int: various kernel tainted flags */
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#85: FILE: include/linux/kernel.h:100:
+extern const char *print_tainted(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#99: FILE: arch/parisc/mm/pa20.c:130:
+	printk("epc  : %08lx    %s\nStatus: %08x\nCause : %08x\n",

CHECK:SPACING: No space is necessary after a cast
#100: FILE: arch/parisc/mm/pa20.c:131:
+	       (unsigned long) regs->cp0_epc, print_tainted(),

CHECK:SPACING: No space is necessary after a cast
#101: FILE: arch/parisc/mm/pa20.c:132:
+	       (unsigned int) regs->cp0_status,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#114: FILE: arch/parisc/mm/pa11.c:130:
+	printk("epc  : %08lx    %s\nStatus: %08x\nCause : %08x\n",

CHECK:SPACING: No space is necessary after a cast
#115: FILE: arch/parisc/mm/pa11.c:131:
+	       (unsigned long) regs->cp0_epc, print_tainted(),

CHECK:SPACING: No space is necessary after a cast
#116: FILE: arch/parisc/mm/pa11.c:132:
+	       (unsigned int) regs->cp0_status,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#128: FILE: arch/parisc/kernel/traps.c:85:
+	printk("    %s\n", print_tainted());

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#140: FILE: arch/s390/kernel/process.c:130:
+			linelen=sprintf(buff, "%s PSW:    %08lx %08lx    %s\n", mode,
 			       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: arch/s390/kernel/process.c:131:
+			linelen=sprintf(buff, "%s PSW:    %08lx %08lx    %s\n", mode,
 				(unsigned long) regs->psw.mask,

CHECK:SPACING: No space is necessary after a cast
#143: FILE: arch/s390/kernel/process.c:132:
+				(unsigned long) regs->psw.addr,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#157: FILE: arch/mips64/mm/r4xx0.c:2112:
+	printk("epc     : %016lx    %s\nbadvaddr: %016lx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#171: FILE: arch/mips64/mm/andes.c:329:
+	printk("epc     : %016lx    %s\nbadvaddr: %016lx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#185: FILE: arch/ia64/kernel/process.c:66:
+	printk("\npsr : %016lx ifs : %016lx ip  : [<%016lx>]    %s\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#199: FILE: arch/sh/kernel/process.c:84:
+	printk("PC  : %08lx SP  : %08lx SR  : %08lx TEA : %08x    %s\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#212: FILE: arch/arm/kernel/process.c:161:
+	printk("pc : [<%08lx>]    lr : [<%08lx>]    %s\n"

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#229: FILE: arch/sparc64/kernel/process.c:285:
+	printk("TSTATE: %016lx TPC: %016lx TNPC: %016lx Y: %08x    %s\n", regs->tstate,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#240: FILE: arch/sparc64/kernel/process.c:352:
+	printk("PSR: %08x PC: %08x NPC: %08x Y: %08x    %s\n", regs->psr,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#254: FILE: arch/m68k/kernel/process.c:113:
+	printk("Format %02x  Vector: %04x  PC: %08lx  Status: %04x    %s\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#268: FILE: arch/ppc/kernel/process.c:247:
+	printk("NIP: %08lX XER: %08lX LR: %08lX SP: %08lX REGS: %p TRAP: %04lx    %s\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#269: FILE: arch/ppc/kernel/process.c:248:
+	       regs->nip, regs->xer, regs->link, regs->gpr[1], regs,regs->trap, print_tainted());
 	                                                           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#282: FILE: arch/ppc/kernel/traps.c:194:
+	printk("Bad trap at PC: %lx, SR: %lx, vector=%lx    %s\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#292: FILE: arch/ppc/kernel/traps.c:341:
+	printk("Task: %p(%d), PC: %08lX/%08lX, Syscall: %3ld, Result: %s%ld    %s\n",

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#295: FILE: arch/ppc/kernel/traps.c:343:
+	       regs->ccr&0x10000000?"Error=":"", regs->gpr[3], print_tainted());
 	                ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#295: FILE: arch/ppc/kernel/traps.c:343:
+	       regs->ccr&0x10000000?"Error=":"", regs->gpr[3], print_tainted());
 	                           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#295: FILE: arch/ppc/kernel/traps.c:343:
+	       regs->ccr&0x10000000?"Error=":"", regs->gpr[3], print_tainted());
 	                                    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#305: FILE: arch/ppc/kernel/traps.c:379:
+	printk("TAU trap at PC: %lx, SR: %lx, vector=%lx    %s\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#319: FILE: arch/mips/mm/r4xx0.c:2367:
+	printk("epc   : %08lx    %s\nStatus: %08lx\nCause : %08lx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#333: FILE: arch/mips/mm/r2300.c:668:
+	printk("epc  : %08lx    %s\nStatus: %08x\nCause : %08x\n",

CHECK:SPACING: No space is necessary after a cast
#334: FILE: arch/mips/mm/r2300.c:669:
+	       (unsigned long) regs->cp0_epc,

CHECK:SPACING: No space is necessary after a cast
#336: FILE: arch/mips/mm/r2300.c:671:
+	       (unsigned int) regs->cp0_status,

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: arch/sparc/kernel/process.c:271:
+        printk("PSR: %08lx PC: %08lx NPC: %08lx Y: %08lx    %s\n", regs->psr,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: arch/sparc/kernel/process.c:271:
+        printk("PSR: %08lx PC: %08lx NPC: %08lx Y: %08lx    %s\n", regs->psr,$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#349: FILE: arch/sparc/kernel/process.c:271:
+        printk("PSR: %08lx PC: %08lx NPC: %08lx Y: %08lx    %s\n", regs->psr,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#362: FILE: arch/alpha/kernel/process.c:218:
+	printk("ps: %04lx pc: [<%016lx>] CPU %d    %s\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#376: FILE: arch/alpha/kernel/traps.c:56:
+	printk("pc = [<%016lx>]  ra = [<%016lx>]  ps = %04lx    %s\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#389: FILE: arch/i386/kernel/process.c:445:
+	printk(" EFLAGS: %08lx    %s\n",regs->eflags, print_tainted());

ERROR:SPACING: space required after that ',' (ctx:VxV)
#389: FILE: arch/i386/kernel/process.c:445:
+	printk(" EFLAGS: %08lx    %s\n",regs->eflags, print_tainted());
 	                               ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#402: FILE: arch/i386/kernel/traps.c:204:
+	printk("CPU:    %d\nEIP:    %04x:[<%08lx>]    %s\nEFLAGS: %08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#403: FILE: arch/i386/kernel/traps.c:205:
+	printk("CPU:    %d\nEIP:    %04x:[<%08lx>]    %s\nEFLAGS: %08lx\n",
+		smp_processor_id(), 0xffff & regs->xcs, regs->eip, print_tainted(), regs->eflags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: Documentation/sysctl/kernel.txt:224:
+tainted: $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#477: FILE: arch/cris/kernel/traps.c:141:
+	printk("IRP: %08lx SRP: %08lx DCCR: %08lx USP: %08lx MOF: %08lx    %s\n",

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#490: FILE: arch/s390x/kernel/process.c:134:
+			linelen=sprintf(buff, "%s PSW:    %016lx %016lx    %s\n", mode,
 			       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: arch/s390x/kernel/process.c:135:
+			linelen=sprintf(buff, "%s PSW:    %016lx %016lx    %s\n", mode,
 				(unsigned long) regs->psw.mask,

CHECK:SPACING: No space is necessary after a cast
#493: FILE: arch/s390x/kernel/process.c:136:
+				(unsigned long) regs->psw.addr,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#507: FILE: arch/mips/mm/rm7k.c:510:
+	printk(KERN_INFO "epc   : %08lx    %s\nStatus: %08lx\nCause : %08lx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#521: FILE: arch/mips/mm/r5432.c:768:
+	printk("epc   : %08lx    %s\nStatus: %08lx\nCause : %08lx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#535: FILE: arch/mips/mm/mips32.c:742:
+	printk("epc   : %08lx    %s\nStatus: %08lx\nCause : %08lx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#549: FILE: arch/ppc64/kernel/process.c:242:
+	printk("NIP: %016lX XER: %016lX LR: %016lX REGS: %p TRAP: %04lx    %s\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#550: FILE: arch/ppc64/kernel/process.c:243:
+	       regs->nip, regs->xer, regs->link, regs,regs->trap, print_tainted());
 	                                             ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#562: FILE: arch/x86_64/kernel/process.c:201:
+	printk(" EFLAGS: %08lx    %s\n",regs->eflags, print_tainted());

ERROR:SPACING: space required after that ',' (ctx:VxV)
#562: FILE: arch/x86_64/kernel/process.c:201:
+	printk(" EFLAGS: %08lx    %s\n",regs->eflags, print_tainted());
 	                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#575: FILE: arch/um/sys-i386/sysrq.c:9:
+        printk("EIP: %04x:[<%08lx>] CPU: %d    %s",0xffff & regs->xcs, regs->eip,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: arch/um/sys-i386/sysrq.c:9:
+        printk("EIP: %04x:[<%08lx>] CPU: %d    %s",0xffff & regs->xcs, regs->eip,$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#575: FILE: arch/um/sys-i386/sysrq.c:9:
+        printk("EIP: %04x:[<%08lx>] CPU: %d    %s",0xffff & regs->xcs, regs->eip,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#575: FILE: arch/um/sys-i386/sysrq.c:9:
+        printk("EIP: %04x:[<%08lx>] CPU: %d    %s",0xffff & regs->xcs, regs->eip,
                                                   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000511407.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 34 warnings, 17 checks, 414 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000511407.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
