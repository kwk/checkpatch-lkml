WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
I think I know what you mean now. Expiring X hurts. With a penalty of only 2

WARNING:TYPO_SPELLING: 'unecessary' may be misspelled - perhaps 'unnecessary'?
#37: 
it should be unecessary to expire iso tasks. Addressed below.
             ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE: line length of 140 exceeds 100 columns
#79: FILE: kernel/exit.c:226:
+	if ((current->policy == SCHED_NORMAL || current->policy == SCHED_ISO || current->policy == SCHED_BATCH) && (task_nice(current) < 0))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#93: FILE: kernel/sched.c:77:
+#define MAX_SLEEP_AVG		(5*HZ)
                      		  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#94: FILE: kernel/sched.c:78:
+#define STARVATION_LIMIT	(5*HZ)
                         	  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#99: FILE: kernel/sched.c:82:
+#define JUST_INTERACTIVE	(MAX_BONUS - INTERACTIVE_DELTA) / MAX_BONUS

CHECK:BRACES: braces {} should be used on all arms of this statement
#119: FILE: kernel/sched.c:141:
+	if (!iso_task(p))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#121: FILE: kernel/sched.c:143:
+		return (BASE_TIMESLICE(p));
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#121: FILE: kernel/sched.c:143:
+	else {

ERROR:SPACING: space prohibited after that '-' (ctx:WxW)
#155: FILE: kernel/sched.c:370:
+	bonus = - MAX_USER_PRIO*PRIO_BONUS_RATIO/100/2;
 	        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#155: FILE: kernel/sched.c:370:
+	bonus = - MAX_USER_PRIO*PRIO_BONUS_RATIO/100/2;
 	                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#155: FILE: kernel/sched.c:370:
+	bonus = - MAX_USER_PRIO*PRIO_BONUS_RATIO/100/2;
 	                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#155: FILE: kernel/sched.c:370:
+	bonus = - MAX_USER_PRIO*PRIO_BONUS_RATIO/100/2;
 	                                            ^

ERROR:SPACING: space required before the open brace '{'
#159: FILE: kernel/sched.c:372:
+	if (normal_task(p)){

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#187: FILE: kernel/sched.c:389:
+		bonus += MAX_USER_PRIO*PRIO_BONUS_RATIO*p->sleep_avg/sleep_period/100;
 		                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#187: FILE: kernel/sched.c:389:
+		bonus += MAX_USER_PRIO*PRIO_BONUS_RATIO*p->sleep_avg/sleep_period/100;
 		                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#187: FILE: kernel/sched.c:389:
+		bonus += MAX_USER_PRIO*PRIO_BONUS_RATIO*p->sleep_avg/sleep_period/100;
 		                                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#187: FILE: kernel/sched.c:389:
+		bonus += MAX_USER_PRIO*PRIO_BONUS_RATIO*p->sleep_avg/sleep_period/100;
 		                                                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#193: FILE: kernel/sched.c:395:
+		bonus += MAX_USER_PRIO*PRIO_BONUS_RATIO/100;
 		                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#193: FILE: kernel/sched.c:395:
+		bonus += MAX_USER_PRIO*PRIO_BONUS_RATIO/100;
 		                                       ^

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#221: FILE: kernel/sched.c:459:
+			if ((runtime - MIN_SLEEP_AVG < MAX_SLEEP_AVG) && (runtime * JUST_INTERACTIVE > p->sleep_avg))

ERROR:SPACING: space required before the open brace '{'
#225: FILE: kernel/sched.c:463:
+			if (p->sleep_avg > MAX_SLEEP_AVG){

ERROR:SPACING: space required before the open brace '{'
#247: FILE: kernel/sched.c:480:
+			if (unlikely(!p->sleep_avg && iso_task(p))){

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#262: FILE: kernel/sched.c:494:
+	} else if (!p->sleep_avg && normal_task(p))
+			p->policy = SCHED_BATCH;

CHECK:BRACES: braces {} should be used on all arms of this statement
#279: FILE: kernel/sched.c:1376:
+		if (!TASK_INTERACTIVE(p) || EXPIRED_STARVING(rq) || batch_task(p)) {
[...]
 		} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: kernel/sched.c:1887:
+		if (policy != SCHED_FIFO && policy != SCHED_RR && policy != SCHED_BATCH &&
+				policy != SCHED_NORMAL && policy != SCHED_ISO)

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#306: FILE: kernel/sched.c:1898:
+	if ((policy == SCHED_NORMAL || policy == SCHED_ISO || policy == SCHED_BATCH) != (lp.sched_priority == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lp.sched_priority == 0'
#306: FILE: kernel/sched.c:1898:
+	if ((policy == SCHED_NORMAL || policy == SCHED_ISO || policy == SCHED_BATCH) != (lp.sched_priority == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000355151.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 7 warnings, 16 checks, 254 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000355151.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
