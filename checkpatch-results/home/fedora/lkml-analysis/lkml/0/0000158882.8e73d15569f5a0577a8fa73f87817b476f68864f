ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: drivers/pci/msi.c:518:
+   ^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSI);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#55: FILE: drivers/pci/msi.c:518:
+   ^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSI);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: drivers/pci/msi.c:518:
+   ^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSI);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#63: FILE: drivers/pci/msi.c:526:
+	pci_write_config_dword(dev, msi_lower_address_reg(pos),
+			address.lo_address.value);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#66: FILE: drivers/pci/msi.c:529:
+		pci_write_config_dword(dev,
+			msi_upper_address_reg(pos), address.hi_address);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#68: FILE: drivers/pci/msi.c:531:
+		pci_write_config_word(dev,
+			msi_data_reg(pos, 1), *((u32*)&data));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#68: FILE: drivers/pci/msi.c:531:
+			msi_data_reg(pos, 1), *((u32*)&data));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#69: FILE: drivers/pci/msi.c:532:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#71: FILE: drivers/pci/msi.c:534:
+		pci_write_config_word(dev,
+			msi_data_reg(pos, 0), *((u32*)&data));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#71: FILE: drivers/pci/msi.c:534:
+			msi_data_reg(pos, 0), *((u32*)&data));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#76: FILE: drivers/pci/msi.c:539:
+		pci_read_config_dword(dev,
+			msi_mask_bits_reg(pos, is_64bit_address(control)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#82: FILE: drivers/pci/msi.c:545:
+		pci_write_config_dword(dev,
+			msi_mask_bits_reg(pos, is_64bit_address(control)),

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000158882.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 2 warnings, 7 checks, 96 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000158882.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
