WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
--- linux-2.6.0-test4/drivers/char/synclink.c	2003-09-05 10:25:15.000000000 -0500

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#44: FILE: drivers/char/synclink.c:4:
+ * $Id: synclink.c,v 4.16 2003/09/05 15:26:02 paulkf Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#61: FILE: drivers/char/synclink.c:914:
+static char *driver_version = "$Revision: 4.16 $";

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#80: FILE: drivers/char/synclink.c:1132:
+	do
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#84: FILE: drivers/char/synclink.c:1136:
+			unsigned long flags;
+			spin_lock_irqsave(&info->irq_spinlock,flags);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: drivers/char/synclink.c:1136:
+			spin_lock_irqsave(&info->irq_spinlock,flags);
 			                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#86: FILE: drivers/char/synclink.c:1138:
+			spin_unlock_irqrestore(&info->irq_spinlock,flags);
 			                                          ^

ERROR:SPACING: space required before the open parenthesis '('
#89: FILE: drivers/char/synclink.c:1141:
+	} while(get_rx_frame(info));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->params.mode == MGSL_MODE_HDLC'
#97: FILE: drivers/char/synclink.c:1583:
+	if ((status & MISCSTATUS_RCC_UNDERRUN) &&
+	    (info->params.mode == MGSL_MODE_HDLC)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#99: FILE: drivers/char/synclink.c:1585:
+	    (info->params.mode == MGSL_MODE_HDLC)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#101: FILE: drivers/char/synclink.c:1587:
+		usc_EnableReceiver(info,DISABLE_UNCONDITIONAL);
 		                       ^

CHECK:CAMELCASE: Avoid CamelCase: <usc_EnableReceiver>
#101: FILE: drivers/char/synclink.c:1587:
+		usc_EnableReceiver(info,DISABLE_UNCONDITIONAL);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <usc_DmaCmd>
#102: FILE: drivers/char/synclink.c:1588:
+		usc_DmaCmd(info, DmaCmd_ResetRxChannel);

CHECK:CAMELCASE: Avoid CamelCase: <DmaCmd_ResetRxChannel>
#102: FILE: drivers/char/synclink.c:1588:
+		usc_DmaCmd(info, DmaCmd_ResetRxChannel);

CHECK:CAMELCASE: Avoid CamelCase: <usc_UnlatchRxstatusBits>
#103: FILE: drivers/char/synclink.c:1589:
+		usc_UnlatchRxstatusBits(info, RXSTATUS_ALL);

CHECK:CAMELCASE: Avoid CamelCase: <usc_ClearIrqPendingBits>
#104: FILE: drivers/char/synclink.c:1590:
+		usc_ClearIrqPendingBits(info, RECEIVE_DATA + RECEIVE_STATUS);

CHECK:CAMELCASE: Avoid CamelCase: <usc_DisableInterrupts>
#105: FILE: drivers/char/synclink.c:1591:
+		usc_DisableInterrupts(info, RECEIVE_DATA + RECEIVE_STATUS);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#120: FILE: drivers/char/synclink.c:3656:
+			ret += sprintf(buf+ret, " rxcrc:%d", info->icount.rxcrc);
 			                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#132: FILE: drivers/char/synclink.c:5224:
+	usc_OutReg(info, SICR, (u16)(usc_InReg(info,SICR) | BIT3));
 	                                           ^

CHECK:CAMELCASE: Avoid CamelCase: <usc_OutReg>
#132: FILE: drivers/char/synclink.c:5224:
+	usc_OutReg(info, SICR, (u16)(usc_InReg(info,SICR) | BIT3));

CHECK:CAMELCASE: Avoid CamelCase: <usc_InReg>
#132: FILE: drivers/char/synclink.c:5224:
+	usc_OutReg(info, SICR, (u16)(usc_InReg(info,SICR) | BIT3));

CHECK:CAMELCASE: Avoid CamelCase: <usc_EnableInterrupts>
#133: FILE: drivers/char/synclink.c:5225:
+	usc_EnableInterrupts(info, MISC);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000339395.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 4 warnings, 12 checks, 97 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000339395.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
