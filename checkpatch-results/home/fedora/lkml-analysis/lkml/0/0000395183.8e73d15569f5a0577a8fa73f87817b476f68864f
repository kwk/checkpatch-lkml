WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
diff -urpN --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal linux-2.5.59/arch/arm/kernel/module.c working-2.5.59-armmodule/arch/arm/kernel/module.c

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#54: FILE: arch/arm/kernel/module.c:21:
+#if 0

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#57: FILE: arch/arm/kernel/module.c:24:
+#define DEBUGP(fmt , ...)
                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Rel>
#101: FILE: arch/arm/kernel/module.c:48:
+static unsigned int count_relocs(const Elf32_Rel *rel, unsigned int num)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: arch/arm/kernel/module.c:53:
+           time critical */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#111: FILE: arch/arm/kernel/module.c:53:
+	/* Sure, this is order(n^2), but it's usually short, and not
+           time critical */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#111: FILE: arch/arm/kernel/module.c:53:
+           time critical */

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: arch/arm/kernel/module.c:61:
+                           already been counted */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#119: FILE: arch/arm/kernel/module.c:61:
+			/* If this addend appeared before, it's
+                           already been counted */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#119: FILE: arch/arm/kernel/module.c:61:
+                           already been counted */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#124: FILE: arch/arm/kernel/module.c:66:
+		if (j == i) ret++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Ehdr>
#140: FILE: arch/arm/kernel/module.c:72:
+static unsigned long get_plt_size(const Elf32_Ehdr *hdr,

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Shdr>
#141: FILE: arch/arm/kernel/module.c:73:
+				  const Elf32_Shdr *sechdrs,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#146: FILE: arch/arm/kernel/module.c:77:
+	unsigned i;

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: arch/arm/kernel/module.c:80:
+           symbols) */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#149: FILE: arch/arm/kernel/module.c:80:
+	/* Everything marked ALLOC (this includes the exported
+           symbols) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#149: FILE: arch/arm/kernel/module.c:80:
+           symbols) */

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: arch/arm/kernel/module.c:100:
+           don't handle */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#169: FILE: arch/arm/kernel/module.c:100:
+	/* Find .plt section, and rename .init sections, which we
+           don't handle */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#169: FILE: arch/arm/kernel/module.c:100:
+           don't handle */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#177: FILE: arch/arm/kernel/module.c:108:
+		printk("Module doesn't contain .plt section.\n");

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#183: FILE: arch/arm/kernel/module.c:114:
+	sechdrs[mod->arch.plt_section].sh_size
+		= get_plt_size(hdr, sechdrs, secstrings);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#211: FILE: arch/arm/kernel/module.c:142:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#231: FILE: arch/arm/kernel/module.c:169:
+			printk(KERN_WARNING "%s: unknown symbol %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: arch/arm/kernel/module.c:170:
+			printk(KERN_WARNING "%s: unknown symbol %s\n",
+				module->name, strtab + sym->st_name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#257: FILE: arch/arm/kernel/module.c:198:
+				offset = make_plt(sechdrs,module,sym->st_value)
 				                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#257: FILE: arch/arm/kernel/module.c:198:
+				offset = make_plt(sechdrs,module,sym->st_value)
 				                                ^

WARNING:SPLIT_STRING: quoted string split across lines
#264: FILE: arch/arm/kernel/module.c:203:
 				printk(KERN_ERR "%s: unable to fixup "
+				       "relocation: %u out of range\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000395183.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 15 warnings, 5 checks, 247 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000395183.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
