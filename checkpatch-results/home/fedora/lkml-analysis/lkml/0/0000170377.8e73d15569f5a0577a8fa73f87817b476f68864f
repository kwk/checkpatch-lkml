WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
diff -ruNp 612-pagedir.patch-old/kernel/power/suspend2_core/pagedir.c 612-pagedir.patch-new/kernel/power/suspend2_core/pagedir.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#31: FILE: kernel/power/suspend2_core/pagedir.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#54: FILE: kernel/power/suspend2_core/pagedir.c:24:
+int extra_pagedir_pages_allocated = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#72: FILE: kernel/power/suspend2_core/pagedir.c:42:
+			struct page * page = pfn_to_page(pagenumber);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#73: FILE: kernel/power/suspend2_core/pagedir.c:43:
+			struct page * page = pfn_to_page(pagenumber);
+			ClearPageNosave(page);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#80: FILE: kernel/power/suspend2_core/pagedir.c:50:
+	pagedir1.pageset_size = pagedir2.pageset_size = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#86: FILE: kernel/power/suspend2_core/pagedir.c:56:
+ * ^I^Icase where it is bigger than pagedir2.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: kernel/power/suspend2_core/pagedir.c:57:
+ * Arguments:^Istruct pagedir *: ^IThe pagedir for which we should $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#87: FILE: kernel/power/suspend2_core/pagedir.c:57:
+ * Arguments:^Istruct pagedir *: ^IThe pagedir for which we should $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#88: FILE: kernel/power/suspend2_core/pagedir.c:58:
+ * ^I^I^I^I^Iallocate memory.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#89: FILE: kernel/power/suspend2_core/pagedir.c:59:
+ * ^I^Iint:^I^I^ISize of pageset 1.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#90: FILE: kernel/power/suspend2_core/pagedir.c:60:
+ * ^I^Iint:^I^I^ISize of pageset 2.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#93: FILE: kernel/power/suspend2_core/pagedir.c:63:
+int suspend2_allocate_extra_pagedir_memory(struct pagedir * p, int pageset_size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: kernel/power/suspend2_core/pagedir.c:64:
+int suspend2_allocate_extra_pagedir_memory(struct pagedir * p, int pageset_size,
+		int alloc_from)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: kernel/power/suspend2_core/pagedir.c:74:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#110: FILE: kernel/power/suspend2_core/pagedir.c:80:
+			struct page * newpage;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: kernel/power/suspend2_core/pagedir.c:82:
+^I^I^I$

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#135: FILE: kernel/power/suspend2_core/pagedir.c:105:
+			num_added+= (1 << order);
 			         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#158: FILE: kernel/power/suspend2_core/pagedir.c:128:
+	if (!mm || !mm->mmap) return;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LINE_SPACING: Missing a blank line after declarations
#169: FILE: kernel/power/suspend2_core/pagedir.c:139:
+			struct page *page = follow_page(mm, posn, 0);
+			if (page)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#179: FILE: kernel/power/suspend2_core/pagedir.c:149:
+ * ^I^Ibeing able to be written out in a separate pagedir.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#180: FILE: kernel/power/suspend2_core/pagedir.c:150:
+ * ^I^IHighMem pages are simply marked as pageset2. They won't be$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#181: FILE: kernel/power/suspend2_core/pagedir.c:151:
+ * ^I^Ineeded during suspend.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#186: FILE: kernel/power/suspend2_core/pagedir.c:156:
+	struct zone * zone;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: kernel/power/suspend2_core/pagedir.c:163:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: kernel/power/suspend2_core/pagedir.c:175:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#210: FILE: kernel/power/suspend2_core/pagedir.c:180:
+			struct page * page;

WARNING:LINE_SPACING: Missing a blank line after declarations
#211: FILE: kernel/power/suspend2_core/pagedir.c:181:
+			struct page * page;
+			list_for_each_entry(page, &zone->inactive_list, lru)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#215: FILE: kernel/power/suspend2_core/pagedir.c:185:
+			struct page * page;

WARNING:LINE_SPACING: Missing a blank line after declarations
#216: FILE: kernel/power/suspend2_core/pagedir.c:186:
+			struct page * page;
+			list_for_each_entry(page, &zone->active_list, lru)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#233: FILE: kernel/power/suspend2_core/pagedir.c:203:
+		struct page * page = pfn_to_page(i);

WARNING:LINE_SPACING: Missing a blank line after declarations
#234: FILE: kernel/power/suspend2_core/pagedir.c:204:
+		struct page * page = pfn_to_page(i);
+		BUG_ON(PagePageset2(page) && PageSlab(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#234: FILE: kernel/power/suspend2_core/pagedir.c:204:
+		BUG_ON(PagePageset2(page) && PageSlab(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#251: FILE: kernel/power/suspend2_core/pagedir.c:221:
+	struct page * page;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#275: FILE: kernel/power/suspend2_core/pagedir.c:245:
+			 * suspend2_release_conflicting_pages. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#276: FILE: kernel/power/suspend2_core/pagedir.c:246:
+			*((int*)new_page) = order;

ERROR:WHILE_AFTER_BRACE: while should follow close brace '}'
#279: FILE: kernel/power/suspend2_core/pagedir.c:249:
+	}
+	while (more);

while should follow the closing bracket on the same line::

  do {
          ...
  } while(something);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#281: FILE: kernel/power/suspend2_core/pagedir.c:251:
+	memset((void*)new_page, 0, PAGE_SIZE * (1<<order));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#281: FILE: kernel/power/suspend2_core/pagedir.c:251:
+	memset((void*)new_page, 0, PAGE_SIZE * (1<<order));
 	                                         ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#288: FILE: kernel/power/suspend2_core/pagedir.c:258:
+ * ^I^Ioriginal kernel page.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#299: FILE: kernel/power/suspend2_core/pagedir.c:269:
+ * ^I^Istatus will not matter), but if we abort for some reason, they$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#300: FILE: kernel/power/suspend2_core/pagedir.c:270:
+ * ^I^Ishould not leak.$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#308: FILE: kernel/power/suspend2_core/pagedir.c:278:
+	list_for_each_entry_safe(this_page, next, &conflicting_pages, lru)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#310: FILE: kernel/power/suspend2_core/pagedir.c:280:
+		order = *((int*)(page_address(this_page)));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#318: FILE: kernel/power/suspend2_core/pagedir.c:288:
+ * ^I^Ineeds relocating and do so if needs be, adjusting the pointer$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#319: FILE: kernel/power/suspend2_core/pagedir.c:289:
+ * ^I^Itoo.$

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#322: FILE: kernel/power/suspend2_core/pagedir.c:292:
+void suspend2_relocate_page_if_required(void ** page_pointer_addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#324: FILE: kernel/power/suspend2_core/pagedir.c:294:
+	void * current_value = *page_pointer_addr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#325: FILE: kernel/power/suspend2_core/pagedir.c:295:
+	void * current_value = *page_pointer_addr;
+	if PagePageset1(virt_to_page(current_value)) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#325: FILE: kernel/power/suspend2_core/pagedir.c:295:
+	if PagePageset1(virt_to_page(current_value)) {

CHECK:SPACING: No space is necessary after a cast
#326: FILE: kernel/power/suspend2_core/pagedir.c:296:
+		unsigned long * new_page = (unsigned long *) suspend2_get_nonconflicting_page();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#326: FILE: kernel/power/suspend2_core/pagedir.c:296:
+		unsigned long * new_page = (unsigned long *) suspend2_get_nonconflicting_page();

WARNING:LINE_SPACING: Missing a blank line after declarations
#327: FILE: kernel/power/suspend2_core/pagedir.c:297:
+		unsigned long * new_page = (unsigned long *) suspend2_get_nonconflicting_page();
+		memcpy(new_page, current_value, PAGE_SIZE);

CHECK:SPACING: No space is necessary after a cast
#328: FILE: kernel/power/suspend2_core/pagedir.c:298:
+		free_pages((unsigned long) current_value, 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: kernel/power/suspend2_core/pagedir.c:304:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#336: FILE: kernel/power/suspend2_core/pagedir.c:306:
+ * ^I^Iwith pages where we're going to restore from the loaded pages$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#337: FILE: kernel/power/suspend2_core/pagedir.c:307:
+ * ^I^Ilater.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#339: FILE: kernel/power/suspend2_core/pagedir.c:309:
+ * ^I^Ihappen).$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: kernel/power/suspend2_core/pagedir.c:322:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#353: FILE: kernel/power/suspend2_core/pagedir.c:323:
+	for(i=0; i < pagedir1.pageset_size; i++) {
 	     ^

ERROR:SPACING: space required before the open parenthesis '('
#353: FILE: kernel/power/suspend2_core/pagedir.c:323:
+	for(i=0; i < pagedir1.pageset_size; i++) {

CHECK:SPACING: No space is necessary after a cast
#354: FILE: kernel/power/suspend2_core/pagedir.c:324:
+		this = (void *) suspend2_get_nonconflicting_page();

WARNING:LONG_LINE_STRING: line length of 104 exceeds 100 columns
#356: FILE: kernel/power/suspend2_core/pagedir.c:326:
+			abort_suspend("Error: Ran out of memory seeking locations for reloading data.");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#371: FILE: kernel/power/suspend2_core/pagedir.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#372: FILE: kernel/power/suspend2_core/pagedir.h:2:
+ * kernel/power/suspend2_core/pagedir.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#396: FILE: kernel/power/suspend2_core/pagedir.h:26:
+extern void suspend2_copy_pageset1(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#398: FILE: kernel/power/suspend2_core/pagedir.h:28:
+extern void suspend2_free_pagedir_data(void);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#400: FILE: kernel/power/suspend2_core/pagedir.h:30:
+extern int suspend2_allocate_extra_pagedir_memory(struct pagedir * p, int pageset_size, int alloc_from);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#400: FILE: kernel/power/suspend2_core/pagedir.h:30:
+extern int suspend2_allocate_extra_pagedir_memory(struct pagedir * p, int pageset_size, int alloc_from);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#400: FILE: kernel/power/suspend2_core/pagedir.h:30:
+extern int suspend2_allocate_extra_pagedir_memory(struct pagedir * p, int pageset_size, int alloc_from);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#402: FILE: kernel/power/suspend2_core/pagedir.h:32:
+extern void suspend2_mark_task_as_pageset1 (struct task_struct *t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#402: FILE: kernel/power/suspend2_core/pagedir.h:32:
+extern void suspend2_mark_task_as_pageset1 (struct task_struct *t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#403: FILE: kernel/power/suspend2_core/pagedir.h:33:
+extern void suspend2_mark_pages_for_pageset2(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#405: FILE: kernel/power/suspend2_core/pagedir.h:35:
+extern void suspend2_release_conflicting_pages(void);

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#406: FILE: kernel/power/suspend2_core/pagedir.h:36:
+extern void suspend2_relocate_page_if_required(void ** page_pointer_addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#406: FILE: kernel/power/suspend2_core/pagedir.h:36:
+extern void suspend2_relocate_page_if_required(void ** page_pointer_addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#407: FILE: kernel/power/suspend2_core/pagedir.h:37:
+extern int suspend2_get_pageset1_load_addresses(void);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#413: FILE: kernel/power/suspend2_core/pagedir.h:43:
+extern int suspend2_map_kernel_page(struct page * page, int enable);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#413: FILE: kernel/power/suspend2_core/pagedir.h:43:
+extern int suspend2_map_kernel_page(struct page * page, int enable);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#415: FILE: kernel/power/suspend2_core/pagedir.h:45:
+extern void suspend2_map_atomic_copy_pages(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#416: FILE: kernel/power/suspend2_core/pagedir.h:46:
+extern void suspend2_unmap_atomic_copy_pages(void);

ERROR:SPACING: space required before the open parenthesis '('
#418: FILE: kernel/power/suspend2_core/pagedir.h:48:
+#define suspend2_map_atomic_copy_pages() do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#419: FILE: kernel/power/suspend2_core/pagedir.h:49:
+#define suspend2_unmap_atomic_copy_pages() do { } while(0)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#420: FILE: kernel/power/suspend2_core/pagedir.h:50:
+static inline int suspend2_map_kernel_page(struct page * page, int enable)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170377.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 35 errors, 32 warnings, 17 checks, 391 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170377.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
