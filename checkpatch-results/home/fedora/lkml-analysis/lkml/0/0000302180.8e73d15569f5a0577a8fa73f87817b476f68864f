WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#36: FILE: drivers/md/Kconfig:183:
+config DM_MULTIPATH
+       tristate "Multipath target (EXPERIMENTAL)"
+       depends on BLK_DEV_DM && EXPERIMENTAL
+       ---help---
+         Allow volume managers to support multipath hardware.
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#64: FILE: drivers/md/dm-mpath.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#82: FILE: drivers/md/dm-mpath.c:19:
+#include <asm/atomic.h>

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#108: FILE: drivers/md/dm-mpath.c:45:
+	spinlock_t failed_lock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#110: FILE: drivers/md/dm-mpath.c:47:
+	unsigned fail_count;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#116: FILE: drivers/md/dm-mpath.c:53:
+	unsigned priority;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#120: FILE: drivers/md/dm-mpath.c:57:
+	unsigned nr_paths;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#129: FILE: drivers/md/dm-mpath.c:66:
+	unsigned nr_paths;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#130: FILE: drivers/md/dm-mpath.c:67:
+	unsigned nr_priority_groups;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#133: FILE: drivers/md/dm-mpath.c:70:
+	spinlock_t lock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#134: FILE: drivers/md/dm-mpath.c:71:
+	unsigned nr_valid_paths;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#137: FILE: drivers/md/dm-mpath.c:74:
+	unsigned current_count;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#190: FILE: drivers/md/dm-mpath.c:127:
+	list_for_each_entry_safe (path, tmp, paths, list) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#234: FILE: drivers/md/dm-mpath.c:171:
+	list_for_each_entry_safe (pg, tmp, &m->priority_groups, list) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#244: FILE: drivers/md/dm-mpath.c:181:
+ *---------------------------------------------------------------*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#254: FILE: drivers/md/dm-mpath.c:191:
+		list_for_each_entry (pg, &m->priority_groups, list) {

CHECK:SPACING: No space is necessary after a cast
#299: FILE: drivers/md/dm-mpath.c:236:
+	struct multipath *m = (struct multipath *) data;

WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#316: FILE: drivers/md/dm-mpath.c:253:
+			 * This wont loop forever because the
 			        ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: drivers/md/dm-mpath.c:268:
+ ^Iblk_run_queues();$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#331: FILE: drivers/md/dm-mpath.c:268:
+ ^Iblk_run_queues();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: drivers/md/dm-mpath.c:268:
+ ^Iblk_run_queues();$

CHECK:SPACING: No space is necessary after a cast
#336: FILE: drivers/md/dm-mpath.c:273:
+	struct multipath *m = (struct multipath *) data;

WARNING:LINE_SPACING: Missing a blank line after declarations
#337: FILE: drivers/md/dm-mpath.c:274:
+	struct multipath *m = (struct multipath *) data;
+	dm_table_event(m->ti->table);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#344: FILE: drivers/md/dm-mpath.c:281:
+ *---------------------------------------------------------------*/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#346: FILE: drivers/md/dm-mpath.c:283:
+	unsigned min;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#347: FILE: drivers/md/dm-mpath.c:284:
+	unsigned max;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#353: FILE: drivers/md/dm-mpath.c:290:
+static int read_param(struct param *param, char *str, unsigned *v, char **error)

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#356: FILE: drivers/md/dm-mpath.c:293:
+	    (sscanf(str, "%u", v) != 1) ||
+	    (*v < param->min) ||
+	    (*v > param->max)) {
+		*error = param->error;
+		return -EINVAL;
+	}

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#367: FILE: drivers/md/dm-mpath.c:304:
+	unsigned argc;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#385: FILE: drivers/md/dm-mpath.c:322:
+static void consume(struct arg_set *as, unsigned n)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#387: FILE: drivers/md/dm-mpath.c:324:
+	BUG_ON (as->argc < n);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#387: FILE: drivers/md/dm-mpath.c:324:
+	BUG_ON (as->argc < n);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#439: FILE: drivers/md/dm-mpath.c:376:
+	unsigned i, nr_selector_args, nr_params;

WARNING:TYPO_SPELLING: 'aruments' may be misspelled - perhaps 'arguments'?
#445: FILE: drivers/md/dm-mpath.c:382:
+		ti->error = ESTR("not enough priority group aruments");
 		                                            ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#468: FILE: drivers/md/dm-mpath.c:405:
+		 * factoring out the register */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#516: FILE: drivers/md/dm-mpath.c:453:
+	list_for_each_entry (tmp, &m->priority_groups, list)

WARNING:LINE_SPACING: Missing a blank line after declarations
#552: FILE: drivers/md/dm-mpath.c:489:
+		struct priority_group *pg;
+		pg = parse_priority_group(&as, m, ti);

CHECK:SPACING: No space is necessary after a cast
#572: FILE: drivers/md/dm-mpath.c:509:
+	struct multipath *m = (struct multipath *) ti->private;

WARNING:LINE_SPACING: Missing a blank line after declarations
#573: FILE: drivers/md/dm-mpath.c:510:
+	struct multipath *m = (struct multipath *) ti->private;
+	free_multipath(m);

CHECK:SPACING: No space is necessary after a cast
#580: FILE: drivers/md/dm-mpath.c:517:
+	struct multipath *m = (struct multipath *) ti->private;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#598: FILE: drivers/md/dm-mpath.c:535:
+	list_for_each_entry (pg, &m->priority_groups, list)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#599: FILE: drivers/md/dm-mpath.c:536:
+		list_for_each_entry (p, &pg->paths, list)

CHECK:SPACING: No space is necessary after a cast
#637: FILE: drivers/md/dm-mpath.c:574:
+	struct multipath *m = (struct multipath *) ti->private;

CHECK:SPACING: No space is necessary after a cast
#674: FILE: drivers/md/dm-mpath.c:611:
+	struct multipath *m = (struct multipath *) ti->private;

ERROR:CODE_INDENT: code indent should use tabs where possible
#685: FILE: drivers/md/dm-mpath.c:622:
+                                       pg->nr_paths,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: drivers/md/dm-mpath.c:622:
+                                       pg->nr_paths,$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#736: FILE: drivers/md/dm-mpath.c:673:
+ *---------------------------------------------------------------*/

CHECK:BRACES: braces {} should be used on all arms of this statement
#765: FILE: drivers/md/dm-mpath.c:702:
+	if (!_kmpathd_wq) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#769: FILE: drivers/md/dm-mpath.c:706:
+	} else

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#796: FILE: drivers/md/dm-path-selector.c:1:
+/*

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#825: FILE: drivers/md/dm-path-selector.c:30:
+	list_for_each_entry (li, &_path_selectors, list) {

CHECK:SPACING: No space is necessary after a cast
#843: FILE: drivers/md/dm-path-selector.c:48:
+		struct ps_internal *li = (struct ps_internal *) lb;

WARNING:LINE_SPACING: Missing a blank line after declarations
#844: FILE: drivers/md/dm-path-selector.c:49:
+		struct ps_internal *li = (struct ps_internal *) lb;
+		li->use++;

CHECK:SPACING: No space is necessary after a cast
#853: FILE: drivers/md/dm-path-selector.c:58:
+	struct ps_internal *li = (struct ps_internal *) l;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#857: FILE: drivers/md/dm-path-selector.c:62:
+		BUG();

WARNING:RETURN_VOID: void function return statements are not generally useful
#861: FILE: drivers/md/dm-path-selector.c:66:
+	return;
+}

CHECK:BRACES: braces {} should be used on all arms of this statement
#884: FILE: drivers/md/dm-path-selector.c:89:
+	if (__find_path_selector_type(pst->name)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#887: FILE: drivers/md/dm-path-selector.c:92:
+	} else

CHECK:SPACING: No space is necessary after a cast
#900: FILE: drivers/md/dm-path-selector.c:105:
+	psi = (struct ps_internal *) __find_path_selector_type(pst->name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#921: FILE: drivers/md/dm-path-selector.c:126:
+ *---------------------------------------------------------------*/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#931: FILE: drivers/md/dm-path-selector.c:136:
+	list_for_each_entry (pi, head, list)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#940: FILE: drivers/md/dm-path-selector.c:145:
+ *---------------------------------------------------------------*/

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#942: FILE: drivers/md/dm-path-selector.c:147:
+	spinlock_t lock;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#978: FILE: drivers/md/dm-path-selector.c:183:
+	list_for_each_entry_safe (pi, next, paths, list) {

CHECK:SPACING: No space is necessary after a cast
#987: FILE: drivers/md/dm-path-selector.c:192:
+	struct selector *s = (struct selector *) ps->context;

WARNING:LINE_SPACING: Missing a blank line after declarations
#988: FILE: drivers/md/dm-path-selector.c:193:
+	struct selector *s = (struct selector *) ps->context;
+	free_paths(&s->valid_paths);

CHECK:SPACING: No space is necessary after a cast
#997: FILE: drivers/md/dm-path-selector.c:202:
+	struct selector *s = (struct selector *) ps->context;

CHECK:SPACING: No space is necessary after a cast
#1025: FILE: drivers/md/dm-path-selector.c:230:
+	struct selector *s = (struct selector *) ps->context;

CHECK:SPACING: No space is necessary after a cast
#1050: FILE: drivers/md/dm-path-selector.c:255:
+	struct selector *s = (struct selector *) ps->context;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1097: FILE: drivers/md/dm-path-selector.h:1:
+/*

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000302180.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 48 warnings, 20 checks, 1155 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000302180.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
