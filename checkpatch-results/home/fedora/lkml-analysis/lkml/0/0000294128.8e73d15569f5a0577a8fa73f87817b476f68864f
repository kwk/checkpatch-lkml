WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
> > I am trying to fix the problem in the ioctl32 emulation code(fs/compat.c) 

WARNING:TYPO_SPELLING: 'hapenning' may be misspelled - perhaps 'happening'?
#39: 
> > 1) What is the exact scenario of the problem hapenning? As I understand the 
                                                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'hapenning' may be misspelled - perhaps 'happening'?
#41: 
> > gets unloaded when the ioctl is hapenning. Isn't the 2.6 kernel module
                                    ^^^^^^^^^

WARNING:TYPO_SPELLING: 'inbetween' may be misspelled - perhaps 'between'?
#75: 
> there is no guarantee that it won't unload inbetween). It's probably
                                             ^^^^^^^^^

WARNING:TYPO_SPELLING: 'hapenning' may be misspelled - perhaps 'happening'?
#89: 
1) When the search is hapenning, if any ioctl_trans structure gets deleted; then
                      ^^^^^^^^^

WARNING:TYPO_SPELLING: 'alloted' may be misspelled - perhaps 'allotted'?
#104: 
        -----> t gets deleted, added to free list and gets alloted again
                                                           ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: fs/compat.c:299:
+^It = kmalloc(sizeof(struct ioctl_trans), GFP_KERNEL); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*t)...) over kmalloc(sizeof(struct ioctl_trans)...)
#154: FILE: fs/compat.c:299:
+	t = kmalloc(sizeof(struct ioctl_trans), GFP_KERNEL); 

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: fs/compat.c:300:
+^Iif (!t) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: fs/compat.c:344:
+^I^I^Ikfree(t); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: fs/compat.c:358:
+^I^I^I^Ikfree(t1); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: fs/compat.c:402:
+^I} else $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#221: FILE: fs/compat.c:402:
+	} else 
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#221: FILE: fs/compat.c:402:
+	} else 

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: fs/compat.c:409:
+^I^I^Iif (++count <= 50) { $

WARNING:LINE_SPACING: Missing a blank line after declarations
#228: FILE: fs/compat.c:409:
+			static int count;
+			if (++count <= 50) { 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: fs/compat.c:411:
+^I^I^I^Ichar *path = (char *)__get_free_page(GFP_KERNEL), *fn = "?"; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: fs/compat.c:412:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: fs/compat.c:415:
+^I^I^I       ^I^Ifn = d_path(filp->f_dentry, filp->f_vfsmnt, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: fs/compat.c:415:
+^I^I^I       ^I^Ifn = d_path(filp->f_dentry, filp->f_vfsmnt, $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#234: FILE: fs/compat.c:415:
+^I^I^I       ^I^Ifn = d_path(filp->f_dentry, filp->f_vfsmnt, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: fs/compat.c:418:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: fs/compat.c:419:
+^I^I^I^Isprintf(buf,"'%c'", (cmd>>24) & 0x3f); $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#238: FILE: fs/compat.c:419:
+				sprintf(buf,"'%c'", (cmd>>24) & 0x3f); 
 				           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#238: FILE: fs/compat.c:419:
+				sprintf(buf,"'%c'", (cmd>>24) & 0x3f); 
 				                        ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#239: FILE: fs/compat.c:420:
+				if (!isprint(buf[1]))
+				    sprintf(buf, "%02x", buf[1]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#241: FILE: fs/compat.c:422:
+				printk("ioctl32(%s:%d): Unknown cmd fd(%d) "

WARNING:SPLIT_STRING: quoted string split across lines
#242: FILE: fs/compat.c:423:
+				printk("ioctl32(%s:%d): Unknown cmd fd(%d) "
+				       "cmd(%08x){%s} arg(%08x) on %s\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: fs/compat.c:427:
+^I^I^I^Iif (path) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: fs/compat.c:428:
+^I^I^I^I^Ifree_page((unsigned long)path); $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000294128.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 11 warnings, 3 checks, 138 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000294128.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
