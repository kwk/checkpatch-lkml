WARNING:TYPO_SPELLING: 'auxillary' may be misspelled - perhaps 'auxiliary'?
#60: 
auxillary drivers, that look like: 
^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'auxillary' may be misspelled - perhaps 'auxiliary'?
#72: 
Each auxillary driver gets called during each operation on a device of a 
     ^^^^^^^^^

WARNING:TYPO_SPELLING: 'Auxillary' may be misspelled - perhaps 'Auxiliary'?
#75: 
Auxillary drivers may register with a NULL class parameter, in which case 
^^^^^^^^^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#106: 
# tree /sys/devices/system/

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#194: FILE: arch/i386/kernel/apic.c:556:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#283: FILE: arch/i386/kernel/i8259.c:260:
+	int error = sysdev_class_register(&i8259_sysdev_class);
+	if (!error)

WARNING:LINE_SPACING: Missing a blank line after declarations
#332: FILE: arch/i386/kernel/i8259.c:403:
+	int error = sysdev_class_register(&timer_sysclass);
+	if (!error)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#372: FILE: arch/i386/kernel/nmi.c:200:
 
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#437: FILE: arch/i386/kernel/time.c:294:
+	int error = sysdev_class_register(&rtc_sysclass);
+	if (!error)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#495: FILE: drivers/base/cpu.c:31:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#518: FILE: drivers/base/power.c:25:
+ * We handle system devices differently - we suspend and shut them $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#522: FILE: drivers/base/power.c:29:
+ * Note that there are not different stages for power management calls - $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#523: FILE: drivers/base/power.c:30:
+ * they only get one called once when interrupts are disabled. $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#526: FILE: drivers/base/power.c:33:
+extern int sys_device_shutdown(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#527: FILE: drivers/base/power.c:34:
+extern int sys_device_suspend(u32 state);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#528: FILE: drivers/base/power.c:35:
+extern int sys_device_resume(void);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#588: FILE: drivers/base/sys.c:28:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#589: FILE: drivers/base/sys.c:29:
+ * declare system_subsys $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#592: FILE: drivers/base/sys.c:31:
+decl_subsys(system,NULL,NULL);
                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#592: FILE: drivers/base/sys.c:31:
+decl_subsys(system,NULL,NULL);
                        ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#594: FILE: drivers/base/sys.c:33:
+int sysdev_class_register(struct sysdev_class * cls)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#597: FILE: drivers/base/sys.c:35:
+	pr_debug("Registering sysdev class '%s'\n",cls->kset.kobj.name);
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#600: FILE: drivers/base/sys.c:38:
+	kset_set_kset_s(cls,system_subsys);
 	                   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#606: FILE: drivers/base/sys.c:42:
+void sysdev_class_unregister(struct sysdev_class * cls)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#608: FILE: drivers/base/sys.c:44:
+	pr_debug("Unregistering sysdev class '%s'\n",cls->kset.kobj.name);
 	                                            ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#614: FILE: drivers/base/sys.c:48:
+EXPORT_SYMBOL(sysdev_class_register);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#615: FILE: drivers/base/sys.c:49:
+EXPORT_SYMBOL(sysdev_class_unregister);

WARNING:TYPO_SPELLING: 'auxillary' may be misspelled - perhaps 'auxiliary'?
#630: FILE: drivers/base/sys.c:55:
+ *	sysdev_driver_register - Register auxillary driver
   	                                  ^^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#631: FILE: drivers/base/sys.c:56:
+ * ^I@cls:^IDevice class driver belongs to.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#634: FILE: drivers/base/sys.c:59:
+ *^IIf @cls is valid, then @drv is inserted into @cls->drivers to be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#636: FILE: drivers/base/sys.c:61:
+ *^Iof @cls is incremented. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#637: FILE: drivers/base/sys.c:62:
+ *^IOtherwise, @drv is inserted into global_drivers, and called for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#641: FILE: drivers/base/sys.c:66:
+int sysdev_driver_register(struct sysdev_class * cls, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#641: FILE: drivers/base/sys.c:66:
+int sysdev_driver_register(struct sysdev_class * cls, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#642: FILE: drivers/base/sys.c:67:
+			   struct sysdev_driver * drv)

ERROR:SPACING: space required after that ',' (ctx:VxO)
#646: FILE: drivers/base/sys.c:71:
+		list_add_tail(&drv->entry,&cls->drivers);
 		                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#646: FILE: drivers/base/sys.c:71:
+		list_add_tail(&drv->entry,&cls->drivers);
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#648: FILE: drivers/base/sys.c:73:
+		list_add_tail(&drv->entry,&global_drivers);
 		                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#648: FILE: drivers/base/sys.c:73:
+		list_add_tail(&drv->entry,&global_drivers);
 		                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#653: FILE: drivers/base/sys.c:78:
 
+

WARNING:TYPO_SPELLING: 'auxillary' may be misspelled - perhaps 'auxiliary'?
#661: FILE: drivers/base/sys.c:80:
+ *	sysdev_driver_unregister - Remove an auxillary driver.
   	                                     ^^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#666: FILE: drivers/base/sys.c:84:
+void sysdev_driver_unregister(struct sysdev_class * cls,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#667: FILE: drivers/base/sys.c:85:
+			      struct sysdev_driver * drv)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#678: FILE: drivers/base/sys.c:94:
 
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#701: FILE: drivers/base/sys.c:103:
+	struct sysdev_class * cls = sysdev->cls;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#719: FILE: drivers/base/sys.c:112:
+	snprintf(sysdev->kobj.name,KOBJ_NAME_LEN,"%s%d",
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#719: FILE: drivers/base/sys.c:112:
+	snprintf(sysdev->kobj.name,KOBJ_NAME_LEN,"%s%d",
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#720: FILE: drivers/base/sys.c:113:
+		 cls->kset.kobj.name,sysdev->id);
 		                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#724: FILE: drivers/base/sys.c:115:
+	pr_debug("Registering sys device '%s'\n",sysdev->kobj.name);
 	                                        ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#732: FILE: drivers/base/sys.c:121:
+		struct sysdev_driver * drv;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#735: FILE: drivers/base/sys.c:124:
+^I^I/* Generic notification is implicit, because it's that $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#736: FILE: drivers/base/sys.c:125:
+^I^I * code that should have called us. $

ERROR:SPACING: space required after that ',' (ctx:VxO)
#740: FILE: drivers/base/sys.c:129:
+		list_for_each_entry(drv,&global_drivers,entry) {
 		                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#740: FILE: drivers/base/sys.c:129:
+		list_for_each_entry(drv,&global_drivers,entry) {
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#740: FILE: drivers/base/sys.c:129:
+		list_for_each_entry(drv,&global_drivers,entry) {
 		                                       ^

WARNING:TYPO_SPELLING: 'auxillary' may be misspelled - perhaps 'auxiliary'?
#745: FILE: drivers/base/sys.c:134:
+		/* Notify class auxillary drivers */
 		                ^^^^^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#746: FILE: drivers/base/sys.c:135:
+		list_for_each_entry(drv,&cls->drivers,entry) {
 		                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#746: FILE: drivers/base/sys.c:135:
+		list_for_each_entry(drv,&cls->drivers,entry) {
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#746: FILE: drivers/base/sys.c:135:
+		list_for_each_entry(drv,&cls->drivers,entry) {
 		                                     ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#759: FILE: drivers/base/sys.c:146:
+	struct sysdev_driver * drv;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#762: FILE: drivers/base/sys.c:149:
+	list_for_each_entry(drv,&global_drivers,entry) {
 	                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#762: FILE: drivers/base/sys.c:149:
+	list_for_each_entry(drv,&global_drivers,entry) {
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#762: FILE: drivers/base/sys.c:149:
+	list_for_each_entry(drv,&global_drivers,entry) {
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#767: FILE: drivers/base/sys.c:154:
+	list_for_each_entry(drv,&sysdev->cls->drivers,entry) {
 	                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#767: FILE: drivers/base/sys.c:154:
+	list_for_each_entry(drv,&sysdev->cls->drivers,entry) {
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#767: FILE: drivers/base/sys.c:154:
+	list_for_each_entry(drv,&sysdev->cls->drivers,entry) {
 	                                             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#779: FILE: drivers/base/sys.c:163:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#784: FILE: drivers/base/sys.c:168:
+ *^IWe loop over each type of system device, get the driver for $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#791: FILE: drivers/base/sys.c:175:
+	struct sysdev_class * cls;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#796: FILE: drivers/base/sys.c:180:
+	list_for_each_entry(cls,&system_subsys.kset.list,kset.kobj.entry) {
 	                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#796: FILE: drivers/base/sys.c:180:
+	list_for_each_entry(cls,&system_subsys.kset.list,kset.kobj.entry) {
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#796: FILE: drivers/base/sys.c:180:
+	list_for_each_entry(cls,&system_subsys.kset.list,kset.kobj.entry) {
 	                                                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#797: FILE: drivers/base/sys.c:181:
+		struct sys_device * sysdev;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#799: FILE: drivers/base/sys.c:183:
+		printk("Shutting down type '%s':\n",cls->kset.kobj.name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#799: FILE: drivers/base/sys.c:183:
+		printk("Shutting down type '%s':\n",cls->kset.kobj.name);
 		                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#803: FILE: drivers/base/sys.c:187:
+		list_for_each_entry(sysdev,&cls->kset.list,kobj.entry) {
 		                          ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#803: FILE: drivers/base/sys.c:187:
+		list_for_each_entry(sysdev,&cls->kset.list,kobj.entry) {
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#803: FILE: drivers/base/sys.c:187:
+		list_for_each_entry(sysdev,&cls->kset.list,kobj.entry) {
 		                                          ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#804: FILE: drivers/base/sys.c:188:
+			struct sysdev_driver * drv;

WARNING:LINE_SPACING: Missing a blank line after declarations
#805: FILE: drivers/base/sys.c:189:
+			struct sysdev_driver * drv;
+			printk(" %d",sysdev->id);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#805: FILE: drivers/base/sys.c:189:
+			printk(" %d",sysdev->id);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#805: FILE: drivers/base/sys.c:189:
+			printk(" %d",sysdev->id);
 			            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#808: FILE: drivers/base/sys.c:192:
+			list_for_each_entry(drv,&global_drivers,entry) {
 			                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#808: FILE: drivers/base/sys.c:192:
+			list_for_each_entry(drv,&global_drivers,entry) {
 			                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#808: FILE: drivers/base/sys.c:192:
+			list_for_each_entry(drv,&global_drivers,entry) {
 			                                       ^

WARNING:TYPO_SPELLING: 'auxillary' may be misspelled - perhaps 'auxiliary'?
#813: FILE: drivers/base/sys.c:197:
+			/* Call auxillary drivers next. */
 			        ^^^^^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#814: FILE: drivers/base/sys.c:198:
+			list_for_each_entry(drv,&cls->drivers,entry) {
 			                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#814: FILE: drivers/base/sys.c:198:
+			list_for_each_entry(drv,&cls->drivers,entry) {
 			                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#814: FILE: drivers/base/sys.c:198:
+			list_for_each_entry(drv,&cls->drivers,entry) {
 			                                     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#823: FILE: drivers/base/sys.c:207:
+		printk("\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#846: FILE: include/linux/device.h:354:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#854: FILE: include/linux/device.h:358:
+ * System devices follow a slightly different driver model. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#855: FILE: include/linux/device.h:359:
+ * They don't need to do dynammic driver binding, can't be probed, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#856: FILE: include/linux/device.h:360:
+ * and don't reside on any type of peripheral bus. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#858: FILE: include/linux/device.h:362:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#860: FILE: include/linux/device.h:364:
+ * want to perform basic operations on these devices. $

WARNING:TYPO_SPELLING: 'auxillary' may be misspelled - perhaps 'auxiliary'?
#862: FILE: include/linux/device.h:366:
+ * We also support auxillary drivers binding to devices of a certain class.
                    ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#863: FILE: include/linux/device.h:367:
+ * $

WARNING:TYPO_SPELLING: 'Auxillary' may be misspelled - perhaps 'Auxiliary'?
#868: FILE: include/linux/device.h:372:
+ * Auxillary drivers registered with a NULL cls are registered as drivers
    ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#869: FILE: include/linux/device.h:373:
+ * for all system devices, and get notification calls for each device. $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sys_device *' should also have an identifier name
#878: FILE: include/linux/device.h:382:
+	int	(*shutdown)(struct sys_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sys_device *' should also have an identifier name
#879: FILE: include/linux/device.h:383:
+	int	(*suspend)(struct sys_device *, u32 state);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sys_device *' should also have an identifier name
#880: FILE: include/linux/device.h:384:
+	int	(*resume)(struct sys_device *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#884: FILE: include/linux/device.h:388:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#885: FILE: include/linux/device.h:389:
+extern int sysdev_class_register(struct sysdev_class *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sysdev_class *' should also have an identifier name
#885: FILE: include/linux/device.h:389:
+extern int sysdev_class_register(struct sysdev_class *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#886: FILE: include/linux/device.h:390:
+extern void sysdev_class_unregister(struct sysdev_class *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sysdev_class *' should also have an identifier name
#886: FILE: include/linux/device.h:390:
+extern void sysdev_class_unregister(struct sysdev_class *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#888: FILE: include/linux/device.h:392:
+
+

WARNING:TYPO_SPELLING: 'Auxillary' may be misspelled - perhaps 'Auxiliary'?
#890: FILE: include/linux/device.h:394:
+ * Auxillary system device drivers.
    ^^^^^^^^^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sys_device *' should also have an identifier name
#895: FILE: include/linux/device.h:399:
+	int	(*add)(struct sys_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sys_device *' should also have an identifier name
#896: FILE: include/linux/device.h:400:
+	int	(*remove)(struct sys_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sys_device *' should also have an identifier name
#897: FILE: include/linux/device.h:401:
+	int	(*shutdown)(struct sys_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sys_device *' should also have an identifier name
#898: FILE: include/linux/device.h:402:
+	int	(*suspend)(struct sys_device *, u32 state);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sys_device *' should also have an identifier name
#899: FILE: include/linux/device.h:403:
+	int	(*resume)(struct sys_device *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#908: FILE: include/linux/device.h:410:
+ * simply not as versatile. $

ERROR:POINTER_LOCATION: "foo	* bar" should be "foo	*bar"
#917: FILE: include/linux/device.h:415:
+	struct sysdev_class	* cls;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#930: FILE: include/linux/kobject.h:122:
+ * Use this when initializing an embedded kset with no other $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#935: FILE: include/linux/kobject.h:127:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364422.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 73 errors, 34 warnings, 12 checks, 752 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364422.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
