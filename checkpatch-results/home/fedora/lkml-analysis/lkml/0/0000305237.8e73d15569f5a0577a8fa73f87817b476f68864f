ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#42: 
--- a/drivers/i2c/chips/Kconfig	Mon Feb  9 15:05:50 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#77: FILE: drivers/i2c/chips/gl518sm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#96: FILE: drivers/i2c/chips/gl518sm.c:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#97: FILE: drivers/i2c/chips/gl518sm.c:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#160: FILE: drivers/i2c/chips/gl518sm.c:84:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#170: FILE: drivers/i2c/chips/gl518sm.c:94:
+#define BOOL_FROM_REG(val)	((val)?0:1)
                           	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#170: FILE: drivers/i2c/chips/gl518sm.c:94:
+#define BOOL_FROM_REG(val)	((val)?0:1)
                           	        ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#171: FILE: drivers/i2c/chips/gl518sm.c:95:
+#define BOOL_TO_REG(val)	((val)?0:1)
                         	      ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#171: FILE: drivers/i2c/chips/gl518sm.c:95:
+#define BOOL_TO_REG(val)	((val)?0:1)
                         	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#173: FILE: drivers/i2c/chips/gl518sm.c:97:
+#define TEMP_TO_REG(val)	(SENSORS_LIMIT(((((val)<0? \
                         	                       ^

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#173: FILE: drivers/i2c/chips/gl518sm.c:97:
+#define TEMP_TO_REG(val)	(SENSORS_LIMIT(((((val)<0? \
                         	                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#173: FILE: drivers/i2c/chips/gl518sm.c:97:
+#define TEMP_TO_REG(val)	(SENSORS_LIMIT(((((val)<0? \
+				(val)-500:(val)+500)/1000)+119),0,255))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#174: FILE: drivers/i2c/chips/gl518sm.c:98:
+				(val)-500:(val)+500)/1000)+119),0,255))
 				     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#174: FILE: drivers/i2c/chips/gl518sm.c:98:
+				(val)-500:(val)+500)/1000)+119),0,255))
 				         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#174: FILE: drivers/i2c/chips/gl518sm.c:98:
+				(val)-500:(val)+500)/1000)+119),0,255))
 				               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#174: FILE: drivers/i2c/chips/gl518sm.c:98:
+				(val)-500:(val)+500)/1000)+119),0,255))
 				                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#174: FILE: drivers/i2c/chips/gl518sm.c:98:
+				(val)-500:(val)+500)/1000)+119),0,255))
 				                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#174: FILE: drivers/i2c/chips/gl518sm.c:98:
+				(val)-500:(val)+500)/1000)+119),0,255))
 				                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#174: FILE: drivers/i2c/chips/gl518sm.c:98:
+				(val)-500:(val)+500)/1000)+119),0,255))
 				                                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#180: FILE: drivers/i2c/chips/gl518sm.c:104:
+	long rpmdiv;
+	if (rpm == 0)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#185: FILE: drivers/i2c/chips/gl518sm.c:109:
+}
+#define FAN_FROM_REG(val,div)	((val)==0 ? 0 : (960000/((val)*(div))))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#185: FILE: drivers/i2c/chips/gl518sm.c:109:
+#define FAN_FROM_REG(val,div)	((val)==0 ? 0 : (960000/((val)*(div))))
                         ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#185: FILE: drivers/i2c/chips/gl518sm.c:109:
+#define FAN_FROM_REG(val,div)	((val)==0 ? 0 : (960000/((val)*(div))))
                              	      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#185: FILE: drivers/i2c/chips/gl518sm.c:109:
+#define FAN_FROM_REG(val,div)	((val)==0 ? 0 : (960000/((val)*(div))))
                              	                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#185: FILE: drivers/i2c/chips/gl518sm.c:109:
+#define FAN_FROM_REG(val,div)	((val)==0 ? 0 : (960000/((val)*(div))))
                              	                              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#185: FILE: drivers/i2c/chips/gl518sm.c:109:
+#define FAN_FROM_REG(val,div)	((val)==0 ? 0 : (960000/((val)*(div))))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#187: FILE: drivers/i2c/chips/gl518sm.c:111:
+#define IN_TO_REG(val)		(SENSORS_LIMIT((((val)+9)/19),0,255))
                       		                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#187: FILE: drivers/i2c/chips/gl518sm.c:111:
+#define IN_TO_REG(val)		(SENSORS_LIMIT((((val)+9)/19),0,255))
                       		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#187: FILE: drivers/i2c/chips/gl518sm.c:111:
+#define IN_TO_REG(val)		(SENSORS_LIMIT((((val)+9)/19),0,255))
                       		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#187: FILE: drivers/i2c/chips/gl518sm.c:111:
+#define IN_TO_REG(val)		(SENSORS_LIMIT((((val)+9)/19),0,255))
                       		                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#188: FILE: drivers/i2c/chips/gl518sm.c:112:
+#define IN_FROM_REG(val)	((val)*19)
                         	      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#190: FILE: drivers/i2c/chips/gl518sm.c:114:
+#define VDD_TO_REG(val)		(SENSORS_LIMIT((((val)*4+47)/95),0,255))
                        		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#190: FILE: drivers/i2c/chips/gl518sm.c:114:
+#define VDD_TO_REG(val)		(SENSORS_LIMIT((((val)*4+47)/95),0,255))
                        		                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#190: FILE: drivers/i2c/chips/gl518sm.c:114:
+#define VDD_TO_REG(val)		(SENSORS_LIMIT((((val)*4+47)/95),0,255))
                        		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#190: FILE: drivers/i2c/chips/gl518sm.c:114:
+#define VDD_TO_REG(val)		(SENSORS_LIMIT((((val)*4+47)/95),0,255))
                        		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#190: FILE: drivers/i2c/chips/gl518sm.c:114:
+#define VDD_TO_REG(val)		(SENSORS_LIMIT((((val)*4+47)/95),0,255))
                        		                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#191: FILE: drivers/i2c/chips/gl518sm.c:115:
+#define VDD_FROM_REG(val)	(((val)*95+2)/4)
                          	       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#191: FILE: drivers/i2c/chips/gl518sm.c:115:
+#define VDD_FROM_REG(val)	(((val)*95+2)/4)
                          	          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#191: FILE: drivers/i2c/chips/gl518sm.c:115:
+#define VDD_FROM_REG(val)	(((val)*95+2)/4)
                          	             ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#193: FILE: drivers/i2c/chips/gl518sm.c:117:
+#define DIV_TO_REG(val)		((val)==4?2:(val)==2?1:(val)==1?0:3)
                        		      ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#193: FILE: drivers/i2c/chips/gl518sm.c:117:
+#define DIV_TO_REG(val)		((val)==4?2:(val)==2?1:(val)==1?0:3)
                        		         ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#193: FILE: drivers/i2c/chips/gl518sm.c:117:
+#define DIV_TO_REG(val)		((val)==4?2:(val)==2?1:(val)==1?0:3)
                        		           ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#193: FILE: drivers/i2c/chips/gl518sm.c:117:
+#define DIV_TO_REG(val)		((val)==4?2:(val)==2?1:(val)==1?0:3)
                        		                 ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#193: FILE: drivers/i2c/chips/gl518sm.c:117:
+#define DIV_TO_REG(val)		((val)==4?2:(val)==2?1:(val)==1?0:3)
                        		                    ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#193: FILE: drivers/i2c/chips/gl518sm.c:117:
+#define DIV_TO_REG(val)		((val)==4?2:(val)==2?1:(val)==1?0:3)
                        		                      ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#193: FILE: drivers/i2c/chips/gl518sm.c:117:
+#define DIV_TO_REG(val)		((val)==4?2:(val)==2?1:(val)==1?0:3)
                        		                            ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#193: FILE: drivers/i2c/chips/gl518sm.c:117:
+#define DIV_TO_REG(val)		((val)==4?2:(val)==2?1:(val)==1?0:3)
                        		                               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#193: FILE: drivers/i2c/chips/gl518sm.c:117:
+#define DIV_TO_REG(val)		((val)==4?2:(val)==2?1:(val)==1?0:3)
                        		                                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#193: FILE: drivers/i2c/chips/gl518sm.c:117:
+#define DIV_TO_REG(val)		((val)==4?2:(val)==2?1:(val)==1?0:3)

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#246: FILE: drivers/i2c/chips/gl518sm.c:170:
+static int gl518_id = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'value' may be better as '(value)' to avoid precedence issues
#252: FILE: drivers/i2c/chips/gl518sm.c:176:
+#define show(type, suffix, value)					\
+static ssize_t show_##suffix(struct device *dev, char *buf)		\
+{									\
+	struct i2c_client *client = to_i2c_client(dev);			\
+	struct gl518_data *data = i2c_get_clientdata(client);		\
+	gl518_update_client(client);					\
+	return sprintf(buf, "%d\n", type##_FROM_REG(data->value));	\
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'value' may be better as '(value)' to avoid precedence issues
#261: FILE: drivers/i2c/chips/gl518sm.c:185:
+#define show_fan(suffix, value, index)					\
+static ssize_t show_##suffix(struct device *dev, char *buf)		\
+{									\
+	struct i2c_client *client = to_i2c_client(dev);			\
+	struct gl518_data *data = i2c_get_clientdata(client);		\
+	gl518_update_client(client);					\
+	return sprintf(buf, "%d\n", FAN_FROM_REG(data->value[index],	\
+		DIV_FROM_REG(data->fan_div[index])));			\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'index' - possible side-effects?
#261: FILE: drivers/i2c/chips/gl518sm.c:185:
+#define show_fan(suffix, value, index)					\
+static ssize_t show_##suffix(struct device *dev, char *buf)		\
+{									\
+	struct i2c_client *client = to_i2c_client(dev);			\
+	struct gl518_data *data = i2c_get_clientdata(client);		\
+	gl518_update_client(client);					\
+	return sprintf(buf, "%d\n", FAN_FROM_REG(data->value[index],	\
+		DIV_FROM_REG(data->fan_div[index])));			\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'value' - possible side-effects?
#297: FILE: drivers/i2c/chips/gl518sm.c:221:
+#define set(type, suffix, value, reg)					\
+static ssize_t set_##suffix(struct device *dev, const char *buf,	\
+	size_t count)							\
+{									\
+	struct i2c_client *client = to_i2c_client(dev);			\
+	struct gl518_data *data = i2c_get_clientdata(client);		\
+	data->value = type##_TO_REG(simple_strtol(buf, NULL, 10));	\
+	gl518_write_value(client, reg, data->value);			\
+	return count;							\
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'value' may be better as '(value)' to avoid precedence issues
#297: FILE: drivers/i2c/chips/gl518sm.c:221:
+#define set(type, suffix, value, reg)					\
+static ssize_t set_##suffix(struct device *dev, const char *buf,	\
+	size_t count)							\
+{									\
+	struct i2c_client *client = to_i2c_client(dev);			\
+	struct gl518_data *data = i2c_get_clientdata(client);		\
+	data->value = type##_TO_REG(simple_strtol(buf, NULL, 10));	\
+	gl518_write_value(client, reg, data->value);			\
+	return count;							\
+}

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#303: FILE: drivers/i2c/chips/gl518sm.c:227:
+	data->value = type##_TO_REG(simple_strtol(buf, NULL, 10));	\

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'value' - possible side-effects?
#308: FILE: drivers/i2c/chips/gl518sm.c:232:
+#define set_bits(type, suffix, value, reg, mask, shift)			\
+static ssize_t set_##suffix(struct device *dev, const char *buf,	\
+	size_t count)							\
+{									\
+	struct i2c_client *client = to_i2c_client(dev);			\
+	struct gl518_data *data = i2c_get_clientdata(client);		\
+	int regvalue = gl518_read_value(client, reg);			\
+	data->value = type##_TO_REG(simple_strtoul(buf, NULL, 10));	\
+	regvalue = (regvalue & ~mask) | (data->value << shift);		\
+	gl518_write_value(client, reg, regvalue);			\
+	return count;							\
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'value' may be better as '(value)' to avoid precedence issues
#308: FILE: drivers/i2c/chips/gl518sm.c:232:
+#define set_bits(type, suffix, value, reg, mask, shift)			\
+static ssize_t set_##suffix(struct device *dev, const char *buf,	\
+	size_t count)							\
+{									\
+	struct i2c_client *client = to_i2c_client(dev);			\
+	struct gl518_data *data = i2c_get_clientdata(client);		\
+	int regvalue = gl518_read_value(client, reg);			\
+	data->value = type##_TO_REG(simple_strtoul(buf, NULL, 10));	\
+	regvalue = (regvalue & ~mask) | (data->value << shift);		\
+	gl518_write_value(client, reg, regvalue);			\
+	return count;							\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'reg' - possible side-effects?
#308: FILE: drivers/i2c/chips/gl518sm.c:232:
+#define set_bits(type, suffix, value, reg, mask, shift)			\
+static ssize_t set_##suffix(struct device *dev, const char *buf,	\
+	size_t count)							\
+{									\
+	struct i2c_client *client = to_i2c_client(dev);			\
+	struct gl518_data *data = i2c_get_clientdata(client);		\
+	int regvalue = gl518_read_value(client, reg);			\
+	data->value = type##_TO_REG(simple_strtoul(buf, NULL, 10));	\
+	regvalue = (regvalue & ~mask) | (data->value << shift);		\
+	gl518_write_value(client, reg, regvalue);			\
+	return count;							\
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mask' may be better as '(mask)' to avoid precedence issues
#308: FILE: drivers/i2c/chips/gl518sm.c:232:
+#define set_bits(type, suffix, value, reg, mask, shift)			\
+static ssize_t set_##suffix(struct device *dev, const char *buf,	\
+	size_t count)							\
+{									\
+	struct i2c_client *client = to_i2c_client(dev);			\
+	struct gl518_data *data = i2c_get_clientdata(client);		\
+	int regvalue = gl518_read_value(client, reg);			\
+	data->value = type##_TO_REG(simple_strtoul(buf, NULL, 10));	\
+	regvalue = (regvalue & ~mask) | (data->value << shift);		\
+	gl518_write_value(client, reg, regvalue);			\
+	return count;							\
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'shift' may be better as '(shift)' to avoid precedence issues
#308: FILE: drivers/i2c/chips/gl518sm.c:232:
+#define set_bits(type, suffix, value, reg, mask, shift)			\
+static ssize_t set_##suffix(struct device *dev, const char *buf,	\
+	size_t count)							\
+{									\
+	struct i2c_client *client = to_i2c_client(dev);			\
+	struct gl518_data *data = i2c_get_clientdata(client);		\
+	int regvalue = gl518_read_value(client, reg);			\
+	data->value = type##_TO_REG(simple_strtoul(buf, NULL, 10));	\
+	regvalue = (regvalue & ~mask) | (data->value << shift);		\
+	gl518_write_value(client, reg, regvalue);			\
+	return count;							\
+}

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#315: FILE: drivers/i2c/chips/gl518sm.c:239:
+	data->value = type##_TO_REG(simple_strtoul(buf, NULL, 10));	\

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#348: FILE: drivers/i2c/chips/gl518sm.c:272:
+	data->fan_min[0] = FAN_TO_REG(simple_strtoul(buf, NULL, 10),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: drivers/i2c/chips/gl518sm.c:273:
+	data->fan_min[0] = FAN_TO_REG(simple_strtoul(buf, NULL, 10),
+		DIV_FROM_REG(data->fan_div[0]));

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#370: FILE: drivers/i2c/chips/gl518sm.c:294:
+	data->fan_min[1] = FAN_TO_REG(simple_strtoul(buf, NULL, 10),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: drivers/i2c/chips/gl518sm.c:295:
+	data->fan_min[1] = FAN_TO_REG(simple_strtoul(buf, NULL, 10),
+		DIV_FROM_REG(data->fan_div[1]));

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_input1' to 'temp_input1_show'
#384: FILE: drivers/i2c/chips/gl518sm.c:308:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#386: FILE: drivers/i2c/chips/gl518sm.c:310:
+static DEVICE_ATTR(temp_input1, S_IRUGO, show_temp_input1, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#387: FILE: drivers/i2c/chips/gl518sm.c:311:
+static DEVICE_ATTR(temp_max1, S_IWUSR|S_IRUGO, show_temp_max1, set_temp_max1);
                                      ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_max1' to 'temp_max1_show' 'set_temp_max1' to 'temp_max1_store'
#387: FILE: drivers/i2c/chips/gl518sm.c:311:
+static DEVICE_ATTR(temp_max1, S_IWUSR|S_IRUGO, show_temp_max1, set_temp_max1);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#387: FILE: drivers/i2c/chips/gl518sm.c:311:
+static DEVICE_ATTR(temp_max1, S_IWUSR|S_IRUGO, show_temp_max1, set_temp_max1);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#388: FILE: drivers/i2c/chips/gl518sm.c:312:
+static DEVICE_ATTR(temp_hyst1, S_IWUSR|S_IRUGO,
                                       ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_hyst1' to 'temp_hyst1_show' 'set_temp_hyst1' to 'temp_hyst1_store'
#388: FILE: drivers/i2c/chips/gl518sm.c:312:
+static DEVICE_ATTR(temp_hyst1, S_IWUSR|S_IRUGO,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#388: FILE: drivers/i2c/chips/gl518sm.c:312:
+static DEVICE_ATTR(temp_hyst1, S_IWUSR|S_IRUGO,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#390: FILE: drivers/i2c/chips/gl518sm.c:314:
+static DEVICE_ATTR(fan_auto1, S_IWUSR|S_IRUGO, show_fan_auto1, set_fan_auto1);
                                      ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_fan_auto1' to 'fan_auto1_show' 'set_fan_auto1' to 'fan_auto1_store'
#390: FILE: drivers/i2c/chips/gl518sm.c:314:
+static DEVICE_ATTR(fan_auto1, S_IWUSR|S_IRUGO, show_fan_auto1, set_fan_auto1);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#390: FILE: drivers/i2c/chips/gl518sm.c:314:
+static DEVICE_ATTR(fan_auto1, S_IWUSR|S_IRUGO, show_fan_auto1, set_fan_auto1);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_fan_input1' to 'fan_input1_show'
#391: FILE: drivers/i2c/chips/gl518sm.c:315:
+static DEVICE_ATTR(fan_input1, S_IRUGO, show_fan_input1, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#391: FILE: drivers/i2c/chips/gl518sm.c:315:
+static DEVICE_ATTR(fan_input1, S_IRUGO, show_fan_input1, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_fan_input2' to 'fan_input2_show'
#392: FILE: drivers/i2c/chips/gl518sm.c:316:
+static DEVICE_ATTR(fan_input2, S_IRUGO, show_fan_input2, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#392: FILE: drivers/i2c/chips/gl518sm.c:316:
+static DEVICE_ATTR(fan_input2, S_IRUGO, show_fan_input2, NULL);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#393: FILE: drivers/i2c/chips/gl518sm.c:317:
+static DEVICE_ATTR(fan_min1, S_IWUSR|S_IRUGO, show_fan_min1, set_fan_min1);
                                     ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_fan_min1' to 'fan_min1_show' 'set_fan_min1' to 'fan_min1_store'
#393: FILE: drivers/i2c/chips/gl518sm.c:317:
+static DEVICE_ATTR(fan_min1, S_IWUSR|S_IRUGO, show_fan_min1, set_fan_min1);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#393: FILE: drivers/i2c/chips/gl518sm.c:317:
+static DEVICE_ATTR(fan_min1, S_IWUSR|S_IRUGO, show_fan_min1, set_fan_min1);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#394: FILE: drivers/i2c/chips/gl518sm.c:318:
+static DEVICE_ATTR(fan_min2, S_IWUSR|S_IRUGO, show_fan_min2, set_fan_min2);
                                     ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_fan_min2' to 'fan_min2_show' 'set_fan_min2' to 'fan_min2_store'
#394: FILE: drivers/i2c/chips/gl518sm.c:318:
+static DEVICE_ATTR(fan_min2, S_IWUSR|S_IRUGO, show_fan_min2, set_fan_min2);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#394: FILE: drivers/i2c/chips/gl518sm.c:318:
+static DEVICE_ATTR(fan_min2, S_IWUSR|S_IRUGO, show_fan_min2, set_fan_min2);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#395: FILE: drivers/i2c/chips/gl518sm.c:319:
+static DEVICE_ATTR(fan_div1, S_IWUSR|S_IRUGO, show_fan_div1, set_fan_div1);
                                     ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_fan_div1' to 'fan_div1_show' 'set_fan_div1' to 'fan_div1_store'
#395: FILE: drivers/i2c/chips/gl518sm.c:319:
+static DEVICE_ATTR(fan_div1, S_IWUSR|S_IRUGO, show_fan_div1, set_fan_div1);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#395: FILE: drivers/i2c/chips/gl518sm.c:319:
+static DEVICE_ATTR(fan_div1, S_IWUSR|S_IRUGO, show_fan_div1, set_fan_div1);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#396: FILE: drivers/i2c/chips/gl518sm.c:320:
+static DEVICE_ATTR(fan_div2, S_IWUSR|S_IRUGO, show_fan_div2, set_fan_div2);
                                     ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_fan_div2' to 'fan_div2_show' 'set_fan_div2' to 'fan_div2_store'
#396: FILE: drivers/i2c/chips/gl518sm.c:320:
+static DEVICE_ATTR(fan_div2, S_IWUSR|S_IRUGO, show_fan_div2, set_fan_div2);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#396: FILE: drivers/i2c/chips/gl518sm.c:320:
+static DEVICE_ATTR(fan_div2, S_IWUSR|S_IRUGO, show_fan_div2, set_fan_div2);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_in_input0' to 'in_input0_show'
#397: FILE: drivers/i2c/chips/gl518sm.c:321:
+static DEVICE_ATTR(in_input0, S_IRUGO, show_in_input0, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#397: FILE: drivers/i2c/chips/gl518sm.c:321:
+static DEVICE_ATTR(in_input0, S_IRUGO, show_in_input0, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_in_input1' to 'in_input1_show'
#398: FILE: drivers/i2c/chips/gl518sm.c:322:
+static DEVICE_ATTR(in_input1, S_IRUGO, show_in_input1, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#398: FILE: drivers/i2c/chips/gl518sm.c:322:
+static DEVICE_ATTR(in_input1, S_IRUGO, show_in_input1, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_in_input2' to 'in_input2_show'
#399: FILE: drivers/i2c/chips/gl518sm.c:323:
+static DEVICE_ATTR(in_input2, S_IRUGO, show_in_input2, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#399: FILE: drivers/i2c/chips/gl518sm.c:323:
+static DEVICE_ATTR(in_input2, S_IRUGO, show_in_input2, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_in_input3' to 'in_input3_show'
#400: FILE: drivers/i2c/chips/gl518sm.c:324:
+static DEVICE_ATTR(in_input3, S_IRUGO, show_in_input3, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#400: FILE: drivers/i2c/chips/gl518sm.c:324:
+static DEVICE_ATTR(in_input3, S_IRUGO, show_in_input3, NULL);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#401: FILE: drivers/i2c/chips/gl518sm.c:325:
+static DEVICE_ATTR(in_min0, S_IWUSR|S_IRUGO, show_in_min0, set_in_min0);
                                    ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_in_min0' to 'in_min0_show' 'set_in_min0' to 'in_min0_store'
#401: FILE: drivers/i2c/chips/gl518sm.c:325:
+static DEVICE_ATTR(in_min0, S_IWUSR|S_IRUGO, show_in_min0, set_in_min0);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#401: FILE: drivers/i2c/chips/gl518sm.c:325:
+static DEVICE_ATTR(in_min0, S_IWUSR|S_IRUGO, show_in_min0, set_in_min0);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#402: FILE: drivers/i2c/chips/gl518sm.c:326:
+static DEVICE_ATTR(in_min1, S_IWUSR|S_IRUGO, show_in_min1, set_in_min1);
                                    ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_in_min1' to 'in_min1_show' 'set_in_min1' to 'in_min1_store'
#402: FILE: drivers/i2c/chips/gl518sm.c:326:
+static DEVICE_ATTR(in_min1, S_IWUSR|S_IRUGO, show_in_min1, set_in_min1);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#402: FILE: drivers/i2c/chips/gl518sm.c:326:
+static DEVICE_ATTR(in_min1, S_IWUSR|S_IRUGO, show_in_min1, set_in_min1);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#403: FILE: drivers/i2c/chips/gl518sm.c:327:
+static DEVICE_ATTR(in_min2, S_IWUSR|S_IRUGO, show_in_min2, set_in_min2);
                                    ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_in_min2' to 'in_min2_show' 'set_in_min2' to 'in_min2_store'
#403: FILE: drivers/i2c/chips/gl518sm.c:327:
+static DEVICE_ATTR(in_min2, S_IWUSR|S_IRUGO, show_in_min2, set_in_min2);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#403: FILE: drivers/i2c/chips/gl518sm.c:327:
+static DEVICE_ATTR(in_min2, S_IWUSR|S_IRUGO, show_in_min2, set_in_min2);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#404: FILE: drivers/i2c/chips/gl518sm.c:328:
+static DEVICE_ATTR(in_min3, S_IWUSR|S_IRUGO, show_in_min3, set_in_min3);
                                    ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_in_min3' to 'in_min3_show' 'set_in_min3' to 'in_min3_store'
#404: FILE: drivers/i2c/chips/gl518sm.c:328:
+static DEVICE_ATTR(in_min3, S_IWUSR|S_IRUGO, show_in_min3, set_in_min3);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#404: FILE: drivers/i2c/chips/gl518sm.c:328:
+static DEVICE_ATTR(in_min3, S_IWUSR|S_IRUGO, show_in_min3, set_in_min3);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#405: FILE: drivers/i2c/chips/gl518sm.c:329:
+static DEVICE_ATTR(in_max0, S_IWUSR|S_IRUGO, show_in_max0, set_in_max0);
                                    ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_in_max0' to 'in_max0_show' 'set_in_max0' to 'in_max0_store'
#405: FILE: drivers/i2c/chips/gl518sm.c:329:
+static DEVICE_ATTR(in_max0, S_IWUSR|S_IRUGO, show_in_max0, set_in_max0);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#405: FILE: drivers/i2c/chips/gl518sm.c:329:
+static DEVICE_ATTR(in_max0, S_IWUSR|S_IRUGO, show_in_max0, set_in_max0);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#406: FILE: drivers/i2c/chips/gl518sm.c:330:
+static DEVICE_ATTR(in_max1, S_IWUSR|S_IRUGO, show_in_max1, set_in_max1);
                                    ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_in_max1' to 'in_max1_show' 'set_in_max1' to 'in_max1_store'
#406: FILE: drivers/i2c/chips/gl518sm.c:330:
+static DEVICE_ATTR(in_max1, S_IWUSR|S_IRUGO, show_in_max1, set_in_max1);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#406: FILE: drivers/i2c/chips/gl518sm.c:330:
+static DEVICE_ATTR(in_max1, S_IWUSR|S_IRUGO, show_in_max1, set_in_max1);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#407: FILE: drivers/i2c/chips/gl518sm.c:331:
+static DEVICE_ATTR(in_max2, S_IWUSR|S_IRUGO, show_in_max2, set_in_max2);
                                    ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_in_max2' to 'in_max2_show' 'set_in_max2' to 'in_max2_store'
#407: FILE: drivers/i2c/chips/gl518sm.c:331:
+static DEVICE_ATTR(in_max2, S_IWUSR|S_IRUGO, show_in_max2, set_in_max2);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#407: FILE: drivers/i2c/chips/gl518sm.c:331:
+static DEVICE_ATTR(in_max2, S_IWUSR|S_IRUGO, show_in_max2, set_in_max2);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#408: FILE: drivers/i2c/chips/gl518sm.c:332:
+static DEVICE_ATTR(in_max3, S_IWUSR|S_IRUGO, show_in_max3, set_in_max3);
                                    ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_in_max3' to 'in_max3_show' 'set_in_max3' to 'in_max3_store'
#408: FILE: drivers/i2c/chips/gl518sm.c:332:
+static DEVICE_ATTR(in_max3, S_IWUSR|S_IRUGO, show_in_max3, set_in_max3);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#408: FILE: drivers/i2c/chips/gl518sm.c:332:
+static DEVICE_ATTR(in_max3, S_IWUSR|S_IRUGO, show_in_max3, set_in_max3);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_alarms' to 'alarms_show'
#409: FILE: drivers/i2c/chips/gl518sm.c:333:
+static DEVICE_ATTR(alarms, S_IRUGO, show_alarms, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#409: FILE: drivers/i2c/chips/gl518sm.c:333:
+static DEVICE_ATTR(alarms, S_IRUGO, show_alarms, NULL);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#410: FILE: drivers/i2c/chips/gl518sm.c:334:
+static DEVICE_ATTR(beep_enable, S_IWUSR|S_IRUGO,
                                        ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_beep_enable' to 'beep_enable_show' 'set_beep_enable' to 'beep_enable_store'
#410: FILE: drivers/i2c/chips/gl518sm.c:334:
+static DEVICE_ATTR(beep_enable, S_IWUSR|S_IRUGO,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#410: FILE: drivers/i2c/chips/gl518sm.c:334:
+static DEVICE_ATTR(beep_enable, S_IWUSR|S_IRUGO,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#412: FILE: drivers/i2c/chips/gl518sm.c:336:
+static DEVICE_ATTR(beep_mask, S_IWUSR|S_IRUGO,
                                      ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_beep_mask' to 'beep_mask_show' 'set_beep_mask' to 'beep_mask_store'
#412: FILE: drivers/i2c/chips/gl518sm.c:336:
+static DEVICE_ATTR(beep_mask, S_IWUSR|S_IRUGO,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#412: FILE: drivers/i2c/chips/gl518sm.c:336:
+static DEVICE_ATTR(beep_mask, S_IWUSR|S_IRUGO,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#439: FILE: drivers/i2c/chips/gl518sm.c:363:
+	/* OK. For now, we presume we have a valid client. We now create the
+	   client structure, even though we cannot fill it completely yet.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#440: FILE: drivers/i2c/chips/gl518sm.c:364:
+	   But it allows us to access gl518_{read,write}_value. */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#442: FILE: drivers/i2c/chips/gl518sm.c:366:
+	if (!(new_client = kmalloc(sizeof(struct i2c_client) +

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_client)...) over kmalloc(sizeof(struct i2c_client)...)
#442: FILE: drivers/i2c/chips/gl518sm.c:366:
+	if (!(new_client = kmalloc(sizeof(struct i2c_client) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#451: FILE: drivers/i2c/chips/gl518sm.c:375:
+	data = (struct gl518_data *) (new_client + 1);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#463: FILE: drivers/i2c/chips/gl518sm.c:387:
+		if ((gl518_read_value(new_client, GL518_REG_CHIP_ID) != 0x80)
+		 || (gl518_read_value(new_client, GL518_REG_CONF) & 0x80))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: drivers/i2c/chips/gl518sm.c:403:
+				dev_info(&adapter->dev,
+				    "Ignoring 'force' parameter for unknown "

WARNING:SPLIT_STRING: quoted string split across lines
#480: FILE: drivers/i2c/chips/gl518sm.c:404:
+				    "Ignoring 'force' parameter for unknown "
+				    "chip at adapter %d, address 0x%02x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#487: FILE: drivers/i2c/chips/gl518sm.c:411:
+	strlcpy(new_client->name, name, I2C_NAME_SIZE);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#494: FILE: drivers/i2c/chips/gl518sm.c:418:
+	if ((err = i2c_attach_client(new_client)))

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#499: FILE: drivers/i2c/chips/gl518sm.c:423:
+	data->voltage_in[0]=data->voltage_in[1]=data->voltage_in[2]=0;
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#499: FILE: drivers/i2c/chips/gl518sm.c:423:
+	data->voltage_in[0]=data->voltage_in[1]=data->voltage_in[2]=0;
 	                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#499: FILE: drivers/i2c/chips/gl518sm.c:423:
+	data->voltage_in[0]=data->voltage_in[1]=data->voltage_in[2]=0;
 	                                                           ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#499: FILE: drivers/i2c/chips/gl518sm.c:423:
+	data->voltage_in[0]=data->voltage_in[1]=data->voltage_in[2]=0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#500: FILE: drivers/i2c/chips/gl518sm.c:424:
+	gl518_init_client((struct i2c_client *) new_client);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#532: FILE: drivers/i2c/chips/gl518sm.c:456:
+/* OK, this is not exactly good programming practice, usually. But it is
+   very code-efficient in this case. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#532: FILE: drivers/i2c/chips/gl518sm.c:456:
+   very code-efficient in this case. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#540: FILE: drivers/i2c/chips/gl518sm.c:464:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#542: FILE: drivers/i2c/chips/gl518sm.c:466:
+/* Called when we have found a new GL518SM.
+   Note that we preserve D4:NoFan2 and D2:beep_enable. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#542: FILE: drivers/i2c/chips/gl518sm.c:466:
+   Note that we preserve D4:NoFan2 and D2:beep_enable. */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#563: FILE: drivers/i2c/chips/gl518sm.c:487:
+	if ((err = i2c_detach_client(client))) {

WARNING:SPLIT_STRING: quoted string split across lines
#565: FILE: drivers/i2c/chips/gl518sm.c:489:
+		dev_err(&client->dev, "Client deregistration failed, "
+			"client not detached.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#579: FILE: drivers/i2c/chips/gl518sm.c:503:
+/* Registers 0x07 to 0x0c are word-sized, others are byte-sized $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#580: FILE: drivers/i2c/chips/gl518sm.c:504:
+/* Registers 0x07 to 0x0c are word-sized, others are byte-sized 
+   GL518 uses a high-byte first convention, which is exactly opposite to

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#581: FILE: drivers/i2c/chips/gl518sm.c:505:
+   the usual practice. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg >= 0x07'
#584: FILE: drivers/i2c/chips/gl518sm.c:508:
+	if ((reg >= 0x07) && (reg <= 0x0c))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg <= 0x0c'
#584: FILE: drivers/i2c/chips/gl518sm.c:508:
+	if ((reg >= 0x07) && (reg <= 0x0c))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#590: FILE: drivers/i2c/chips/gl518sm.c:514:
+/* Registers 0x07 to 0x0c are word-sized, others are byte-sized $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#591: FILE: drivers/i2c/chips/gl518sm.c:515:
+/* Registers 0x07 to 0x0c are word-sized, others are byte-sized 
+   GL518 uses a high-byte first convention, which is exactly opposite to

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#592: FILE: drivers/i2c/chips/gl518sm.c:516:
+   the usual practice. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg >= 0x07'
#595: FILE: drivers/i2c/chips/gl518sm.c:519:
+	if ((reg >= 0x07) && (reg <= 0x0c))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg <= 0x0c'
#595: FILE: drivers/i2c/chips/gl518sm.c:519:
+	if ((reg >= 0x07) && (reg <= 0x0c))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jiffies < data->last_updated'
#609: FILE: drivers/i2c/chips/gl518sm.c:533:
+	if ((jiffies - data->last_updated > HZ + HZ / 2) ||
+	    (jiffies < data->last_updated) || !data->valid) {

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#610: FILE: drivers/i2c/chips/gl518sm.c:534:
+	    (jiffies < data->last_updated) || !data->valid) {

WARNING:SPLIT_STRING: quoted string split across lines
#682: FILE: drivers/i2c/chips/gl518sm.c:606:
+MODULE_AUTHOR("Frodo Looijaard <frodol@dds.nl>, "
+	"Kyosti Malkki <kmalkki@cc.hut.fi> and "

WARNING:SPLIT_STRING: quoted string split across lines
#683: FILE: drivers/i2c/chips/gl518sm.c:607:
+	"Kyosti Malkki <kmalkki@cc.hut.fi> and "
+	"Hong-Gunn Chew <hglinux@gunnet.org>");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000305237.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 72 warnings, 72 checks, 636 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000305237.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
