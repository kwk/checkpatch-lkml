WARNING:TYPO_SPELLING: 'arguemnt' may be misspelled - perhaps 'argument'?
#40: 
something like this, which hijacks the currently-unused arguemnt.
                                                        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#86: FILE: arch/ia64/ia32/binfmt_elf32.c:63:
+ia32_install_shared_page (struct vm_area_struct *vma, unsigned long address, int *type)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: arch/ia64/mm/hugetlbpage.c:521:
+static struct page *hugetlb_nopage(struct vm_area_struct * area, unsigned long address, int *unused)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#351: FILE: include/linux/mm.h:146:
+	struct page * (*nopage)(struct vm_area_struct * area, unsigned long address, int *type);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#369: FILE: include/linux/mm.h:566:
+struct page *filemap_nopage(struct vm_area_struct *, unsigned long, int *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#369: FILE: include/linux/mm.h:566:
+struct page *filemap_nopage(struct vm_area_struct *, unsigned long, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#369: FILE: include/linux/mm.h:566:
+struct page *filemap_nopage(struct vm_area_struct *, unsigned long, int *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#393: FILE: mm/filemap.c:987:
+struct page * filemap_nopage(struct vm_area_struct * area, unsigned long address, int *type)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#393: FILE: mm/filemap.c:987:
+struct page * filemap_nopage(struct vm_area_struct * area, unsigned long address, int *type)

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#495: FILE: mm/shmem.c:737:
+static int shmem_getpage(struct inode *inode, unsigned long idx, struct page **pagep, enum sgp_type sgp, int *type)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#617: FILE: sound/core/pcm_native.c:2782:
+static struct page * snd_pcm_mmap_status_nopage(struct vm_area_struct *area, unsigned long address, int *type)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#617: FILE: sound/core/pcm_native.c:2782:
+static struct page * snd_pcm_mmap_status_nopage(struct vm_area_struct *area, unsigned long address, int *type)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#647: FILE: sound/oss/via82cxxx_audio.c:2127:
+	DPRINTK ("ENTER, start %lXh, ofs %lXh, pgoff %ld, addr %lXh\n",

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#674: FILE: sound/oss/emu10k1/audio.c:992:
+static struct page *emu10k1_mm_nopage (struct vm_area_struct * vma, unsigned long address, int *type)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#674: FILE: sound/oss/emu10k1/audio.c:992:
+static struct page *emu10k1_mm_nopage (struct vm_area_struct * vma, unsigned long address, int *type)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#674: FILE: sound/oss/emu10k1/audio.c:992:
+static struct page *emu10k1_mm_nopage (struct vm_area_struct * vma, unsigned long address, int *type)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000330417.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 10 warnings, 0 checks, 512 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000330417.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
