ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#37: 
--- a/drivers/i2c/chips/Kconfig	Thu Apr 24 16:47:05 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:TYPO_SPELLING: 'utilties' may be misspelled - perhaps 'utilities'?
#49: FILE: drivers/i2c/chips/Kconfig:31:
+	  You will also need the latest user-space utilties: you can find them
 	                                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#50: FILE: drivers/i2c/chips/Kconfig:32:
+^I  in the lm_sensors package, which you can download at $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#82: FILE: drivers/i2c/chips/it87.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#83: FILE: drivers/i2c/chips/it87.c:2:
+/*
+    it87.c - Part of lm_sensors, Linux kernel modules for hardware

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: drivers/i2c/chips/it87.c:3:
+             monitoring.$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: drivers/i2c/chips/it87.c:6:
+              IT8712F  Super I/O chup w/LPC interface & SMbus$

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: drivers/i2c/chips/it87.c:7:
+              Sis950   A clone of the IT8705F$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: drivers/i2c/chips/it87.c:9:
+    Copyright (c) 2001 Chris Gauthron <chrisg@0-in.com> $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#104: FILE: drivers/i2c/chips/it87.c:23:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#105: FILE: drivers/i2c/chips/it87.c:24:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#109: FILE: drivers/i2c/chips/it87.c:28:
+/*
+    djg@pdp8.net David Gesswein 7/18/01

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#120: FILE: drivers/i2c/chips/it87.c:39:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#122: FILE: drivers/i2c/chips/it87.c:41:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#132: FILE: drivers/i2c/chips/it87.c:51:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#134: FILE: drivers/i2c/chips/it87.c:53:
+static int update_vbat = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#136: FILE: drivers/i2c/chips/it87.c:55:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <inNum>
#183: FILE: drivers/i2c/chips/it87.c:102:
+static inline u8 IN_TO_REG(long val, int inNum)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: drivers/i2c/chips/it87.c:105:
+^I val is guaranteed to be positive, so we can achieve the effect of $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#186: FILE: drivers/i2c/chips/it87.c:105:
+	/* to avoid floating point, we multiply everything by 100.
+	 val is guaranteed to be positive, so we can achieve the effect of 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: drivers/i2c/chips/it87.c:106:
+^I rounding by (...*10+5)/10.  Note that the *10 is hidden in the $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#190: FILE: drivers/i2c/chips/it87.c:109:
+	 to /10 because of the rounding thing, so we /1000.   */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: drivers/i2c/chips/it87.c:112:
+^I^I    SENSORS_LIMIT(((val * 210240 - 13300) / 250 + 5) / 1000, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: drivers/i2c/chips/it87.c:116:
+^I^I    SENSORS_LIMIT(((val * 157370 - 13300) / 250 + 5) / 1000, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: drivers/i2c/chips/it87.c:120:
+^I^I    SENSORS_LIMIT(((val * 101080 - 13300) / 250 + 5) / 1000, $

CHECK:SPACING: No space is necessary after a cast
#204: FILE: drivers/i2c/chips/it87.c:123:
+		return (u8) SENSORS_LIMIT(((val * 41714 - 13300) / 250 + 5)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#211: FILE: drivers/i2c/chips/it87.c:130:
+	/* to avoid floating point, we multiply everything by 100.
+	 val is guaranteed to be positive, so we can achieve the effect of

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#213: FILE: drivers/i2c/chips/it87.c:132:
+	 We need to scale with *100 anyway, so no need to /100 at the end. */

CHECK:SPACING: No space is necessary after a cast
#215: FILE: drivers/i2c/chips/it87.c:134:
+		return (long) (((250000 * val + 13300) / 210240 * 10 + 5) /10);

CHECK:SPACING: spaces preferred around that '/' (ctx:WxV)
#215: FILE: drivers/i2c/chips/it87.c:134:
+		return (long) (((250000 * val + 13300) / 210240 * 10 + 5) /10);
 		                                                          ^

CHECK:SPACING: No space is necessary after a cast
#217: FILE: drivers/i2c/chips/it87.c:136:
+		return (long) (((250000 * val + 13300) / 157370 * 10 + 5) /10);

CHECK:SPACING: spaces preferred around that '/' (ctx:WxV)
#217: FILE: drivers/i2c/chips/it87.c:136:
+		return (long) (((250000 * val + 13300) / 157370 * 10 + 5) /10);
 		                                                          ^

CHECK:SPACING: No space is necessary after a cast
#219: FILE: drivers/i2c/chips/it87.c:138:
+		return (long) (((250000 * val + 13300) / 101080 * 10 + 5) /10);

CHECK:SPACING: spaces preferred around that '/' (ctx:WxV)
#219: FILE: drivers/i2c/chips/it87.c:138:
+		return (long) (((250000 * val + 13300) / 101080 * 10 + 5) /10);
 		                                                          ^

CHECK:SPACING: No space is necessary after a cast
#221: FILE: drivers/i2c/chips/it87.c:140:
+		return (long) (((250000 * val + 13300) / 41714 * 10 + 5) /10);

CHECK:SPACING: spaces preferred around that '/' (ctx:WxV)
#221: FILE: drivers/i2c/chips/it87.c:140:
+		return (long) (((250000 * val + 13300) / 41714 * 10 + 5) /10);
 		                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#233: FILE: drivers/i2c/chips/it87.c:152:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                         ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#233: FILE: drivers/i2c/chips/it87.c:152:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                     ^

ERROR:SPACING: spaces required around that '?' (ctx:VxO)
#233: FILE: drivers/i2c/chips/it87.c:152:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                        ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#233: FILE: drivers/i2c/chips/it87.c:152:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                         ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#233: FILE: drivers/i2c/chips/it87.c:152:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                           ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#233: FILE: drivers/i2c/chips/it87.c:152:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                                 ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#233: FILE: drivers/i2c/chips/it87.c:152:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                                      ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#233: FILE: drivers/i2c/chips/it87.c:152:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#233: FILE: drivers/i2c/chips/it87.c:152:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#233: FILE: drivers/i2c/chips/it87.c:152:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#233: FILE: drivers/i2c/chips/it87.c:152:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#235: FILE: drivers/i2c/chips/it87.c:154:
+#define TEMP_TO_REG(val) (SENSORS_LIMIT(((val)<0?(((val)-5)/10):\
                                               ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#235: FILE: drivers/i2c/chips/it87.c:154:
+#define TEMP_TO_REG(val) (SENSORS_LIMIT(((val)<0?(((val)-5)/10):\
                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#235: FILE: drivers/i2c/chips/it87.c:154:
+#define TEMP_TO_REG(val) (SENSORS_LIMIT(((val)<0?(((val)-5)/10):\
                                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#235: FILE: drivers/i2c/chips/it87.c:154:
+#define TEMP_TO_REG(val) (SENSORS_LIMIT(((val)<0?(((val)-5)/10):\
                                                            ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#235: FILE: drivers/i2c/chips/it87.c:154:
+#define TEMP_TO_REG(val) (SENSORS_LIMIT(((val)<0?(((val)-5)/10):\
                                                                ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#235: FILE: drivers/i2c/chips/it87.c:154:
+#define TEMP_TO_REG(val) (SENSORS_LIMIT(((val)<0?(((val)-5)/10):\
+					((val)+5)/10),0,255))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#236: FILE: drivers/i2c/chips/it87.c:155:
+					((val)+5)/10),0,255))
 					      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#236: FILE: drivers/i2c/chips/it87.c:155:
+					((val)+5)/10),0,255))
 					         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#236: FILE: drivers/i2c/chips/it87.c:155:
+					((val)+5)/10),0,255))
 					             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#236: FILE: drivers/i2c/chips/it87.c:155:
+					((val)+5)/10),0,255))
 					               ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#237: FILE: drivers/i2c/chips/it87.c:156:
+#define TEMP_FROM_REG(val) (((val)>0x80?(val)-0x100:(val))*10)
                                   ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#237: FILE: drivers/i2c/chips/it87.c:156:
+#define TEMP_FROM_REG(val) (((val)>0x80?(val)-0x100:(val))*10)
                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#237: FILE: drivers/i2c/chips/it87.c:156:
+#define TEMP_FROM_REG(val) (((val)>0x80?(val)-0x100:(val))*10)
                                              ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#237: FILE: drivers/i2c/chips/it87.c:156:
+#define TEMP_FROM_REG(val) (((val)>0x80?(val)-0x100:(val))*10)
                                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#237: FILE: drivers/i2c/chips/it87.c:156:
+#define TEMP_FROM_REG(val) (((val)>0x80?(val)-0x100:(val))*10)
                                                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#237: FILE: drivers/i2c/chips/it87.c:156:
+#define TEMP_FROM_REG(val) (((val)>0x80?(val)-0x100:(val))*10)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#239: FILE: drivers/i2c/chips/it87.c:158:
+#define VID_FROM_REG(val) ((val)==0x1f?0:(val)>=0x10?510-(val)*10:\
                                 ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#239: FILE: drivers/i2c/chips/it87.c:158:
+#define VID_FROM_REG(val) ((val)==0x1f?0:(val)>=0x10?510-(val)*10:\
                                       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#239: FILE: drivers/i2c/chips/it87.c:158:
+#define VID_FROM_REG(val) ((val)==0x1f?0:(val)>=0x10?510-(val)*10:\
                                         ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#239: FILE: drivers/i2c/chips/it87.c:158:
+#define VID_FROM_REG(val) ((val)==0x1f?0:(val)>=0x10?510-(val)*10:\
                                               ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#239: FILE: drivers/i2c/chips/it87.c:158:
+#define VID_FROM_REG(val) ((val)==0x1f?0:(val)>=0x10?510-(val)*10:\
                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#239: FILE: drivers/i2c/chips/it87.c:158:
+#define VID_FROM_REG(val) ((val)==0x1f?0:(val)>=0x10?510-(val)*10:\
                                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#239: FILE: drivers/i2c/chips/it87.c:158:
+#define VID_FROM_REG(val) ((val)==0x1f?0:(val)>=0x10?510-(val)*10:\
                                                               ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#239: FILE: drivers/i2c/chips/it87.c:158:
+#define VID_FROM_REG(val) ((val)==0x1f?0:(val)>=0x10?510-(val)*10:\
                                                                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#239: FILE: drivers/i2c/chips/it87.c:158:
+#define VID_FROM_REG(val) ((val)==0x1f?0:(val)>=0x10?510-(val)*10:\
+				205-(val)*5)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#240: FILE: drivers/i2c/chips/it87.c:159:
+				205-(val)*5)
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#240: FILE: drivers/i2c/chips/it87.c:159:
+				205-(val)*5)
 				         ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#243: FILE: drivers/i2c/chips/it87.c:162:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)
                               ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#243: FILE: drivers/i2c/chips/it87.c:162:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)
                                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#243: FILE: drivers/i2c/chips/it87.c:162:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)
                                    ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#243: FILE: drivers/i2c/chips/it87.c:162:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)
                                          ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#243: FILE: drivers/i2c/chips/it87.c:162:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)
                                             ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#243: FILE: drivers/i2c/chips/it87.c:162:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)
                                               ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#243: FILE: drivers/i2c/chips/it87.c:162:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)
                                                     ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#243: FILE: drivers/i2c/chips/it87.c:162:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)
                                                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#243: FILE: drivers/i2c/chips/it87.c:162:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)
                                                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#243: FILE: drivers/i2c/chips/it87.c:162:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#250: FILE: drivers/i2c/chips/it87.c:169:
+#define IT87_INIT_IN_3 (((500)   * 100)/168)
                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#251: FILE: drivers/i2c/chips/it87.c:170:
+#define IT87_INIT_IN_4 (((1200)  * 10)/38)
                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#252: FILE: drivers/i2c/chips/it87.c:171:
+#define IT87_INIT_IN_5 (((1200)  * 10)/72)
                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#253: FILE: drivers/i2c/chips/it87.c:172:
+#define IT87_INIT_IN_6 (((500)   * 10)/56)
                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#254: FILE: drivers/i2c/chips/it87.c:173:
+#define IT87_INIT_IN_7 (((500)   * 100)/168)
                                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: drivers/i2c/chips/it87.c:218:
+#define IT87_INIT_TEMP_HIGH_3 600 $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#303: FILE: drivers/i2c/chips/it87.c:222:
+/* For each registered IT87, we need to keep some data in memory. That
+   data is pointed to by it87_list[NR]->data. The structure itself is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#305: FILE: drivers/i2c/chips/it87.c:224:
+   allocated. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#328: FILE: drivers/i2c/chips/it87.c:247:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#335: FILE: drivers/i2c/chips/it87.c:254:
+static int it87_write_value(struct i2c_client *client, u8 register,
+			u8 value);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#339: FILE: drivers/i2c/chips/it87.c:258:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#349: FILE: drivers/i2c/chips/it87.c:268:
+static int it87_id = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#355: FILE: drivers/i2c/chips/it87.c:274:
+	struct it87_data *data = i2c_get_clientdata(client);
+	it87_update_client(client);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#356: FILE: drivers/i2c/chips/it87.c:275:
+	return sprintf(buf, "%ld\n", IN_FROM_REG(data->in[nr], nr)*10 );
 	                                                          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#356: FILE: drivers/i2c/chips/it87.c:275:
+	return sprintf(buf, "%ld\n", IN_FROM_REG(data->in[nr], nr)*10 );

WARNING:LINE_SPACING: Missing a blank line after declarations
#363: FILE: drivers/i2c/chips/it87.c:282:
+	struct it87_data *data = i2c_get_clientdata(client);
+	it87_update_client(client);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#364: FILE: drivers/i2c/chips/it87.c:283:
+	return sprintf(buf, "%ld\n", IN_FROM_REG(data->in_min[nr], nr)*10 );
 	                                                              ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#364: FILE: drivers/i2c/chips/it87.c:283:
+	return sprintf(buf, "%ld\n", IN_FROM_REG(data->in_min[nr], nr)*10 );

WARNING:LINE_SPACING: Missing a blank line after declarations
#371: FILE: drivers/i2c/chips/it87.c:290:
+	struct it87_data *data = i2c_get_clientdata(client);
+	it87_update_client(client);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#372: FILE: drivers/i2c/chips/it87.c:291:
+	return sprintf(buf, "%ld\n", IN_FROM_REG(data->in_max[nr], nr)*10 );
 	                                                              ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#372: FILE: drivers/i2c/chips/it87.c:291:
+	return sprintf(buf, "%ld\n", IN_FROM_REG(data->in_max[nr], nr)*10 );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: drivers/i2c/chips/it87.c:294:
+static ssize_t set_in_min(struct device *dev, const char *buf, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: drivers/i2c/chips/it87.c:295:
+static ssize_t set_in_min(struct device *dev, const char *buf, 
+		size_t count, int nr)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#380: FILE: drivers/i2c/chips/it87.c:299:
+	unsigned long val = simple_strtoul(buf, NULL, 10)/10;
 	                                                 ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#380: FILE: drivers/i2c/chips/it87.c:299:
+	unsigned long val = simple_strtoul(buf, NULL, 10)/10;

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LINE_SPACING: Missing a blank line after declarations
#381: FILE: drivers/i2c/chips/it87.c:300:
+	unsigned long val = simple_strtoul(buf, NULL, 10)/10;
+	data->in_min[nr] = IN_TO_REG(val,nr);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#381: FILE: drivers/i2c/chips/it87.c:300:
+	data->in_min[nr] = IN_TO_REG(val,nr);
 	                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: drivers/i2c/chips/it87.c:301:
+^Iit87_write_value(client, IT87_REG_VIN_MIN(nr), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#383: FILE: drivers/i2c/chips/it87.c:302:
+	it87_write_value(client, IT87_REG_VIN_MIN(nr), 
+			data->in_min[nr]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#386: FILE: drivers/i2c/chips/it87.c:305:
+static ssize_t set_in_max(struct device *dev, const char *buf, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#386: FILE: drivers/i2c/chips/it87.c:305:
+}
+static ssize_t set_in_max(struct device *dev, const char *buf, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: drivers/i2c/chips/it87.c:306:
+static ssize_t set_in_max(struct device *dev, const char *buf, 
+		size_t count, int nr)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#391: FILE: drivers/i2c/chips/it87.c:310:
+	unsigned long val = simple_strtoul(buf, NULL, 10)/10;
 	                                                 ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#391: FILE: drivers/i2c/chips/it87.c:310:
+	unsigned long val = simple_strtoul(buf, NULL, 10)/10;

WARNING:LINE_SPACING: Missing a blank line after declarations
#392: FILE: drivers/i2c/chips/it87.c:311:
+	unsigned long val = simple_strtoul(buf, NULL, 10)/10;
+	data->in_max[nr] = IN_TO_REG(val,nr);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#392: FILE: drivers/i2c/chips/it87.c:311:
+	data->in_max[nr] = IN_TO_REG(val,nr);
 	                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: drivers/i2c/chips/it87.c:312:
+^Iit87_write_value(client, IT87_REG_VIN_MAX(nr), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: drivers/i2c/chips/it87.c:313:
+	it87_write_value(client, IT87_REG_VIN_MAX(nr), 
+			data->in_max[nr]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#400: FILE: drivers/i2c/chips/it87.c:319:
+	show_in##offset (struct device *dev, char *buf)		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#405: FILE: drivers/i2c/chips/it87.c:324:
+	show_in##offset##_min (struct device *dev, char *buf)	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#410: FILE: drivers/i2c/chips/it87.c:329:
+	show_in##offset##_max (struct device *dev, char *buf)	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#414: FILE: drivers/i2c/chips/it87.c:333:
+static ssize_t set_in##offset##_min (struct device *dev, ^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#414: FILE: drivers/i2c/chips/it87.c:333:
+static ssize_t set_in##offset##_min (struct device *dev, 	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#415: FILE: drivers/i2c/chips/it87.c:334:
+^I^Iconst char *buf, size_t count) ^I^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#419: FILE: drivers/i2c/chips/it87.c:338:
+static ssize_t set_in##offset##_max (struct device *dev,	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#424: FILE: drivers/i2c/chips/it87.c:343:
+static DEVICE_ATTR(in_input##offset, S_IRUGO, show_in##offset, NULL) ^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#424: FILE: drivers/i2c/chips/it87.c:343:
+static DEVICE_ATTR(in_input##offset, S_IRUGO, show_in##offset, NULL) 	\

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#425: FILE: drivers/i2c/chips/it87.c:344:
+static DEVICE_ATTR(in_min##offset, S_IRUGO | S_IWUSR, ^I^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#425: FILE: drivers/i2c/chips/it87.c:344:
+static DEVICE_ATTR(in_min##offset, S_IRUGO | S_IWUSR, 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#427: FILE: drivers/i2c/chips/it87.c:346:
+static DEVICE_ATTR(in_max##offset, S_IRUGO | S_IWUSR, ^I^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#427: FILE: drivers/i2c/chips/it87.c:346:
+static DEVICE_ATTR(in_max##offset, S_IRUGO | S_IWUSR, 		\

WARNING:LINE_SPACING: Missing a blank line after declarations
#441: FILE: drivers/i2c/chips/it87.c:360:
+	struct it87_data *data = i2c_get_clientdata(client);
+	it87_update_client(client);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#442: FILE: drivers/i2c/chips/it87.c:361:
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp[nr])*10 );
 	                                                         ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#442: FILE: drivers/i2c/chips/it87.c:361:
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp[nr])*10 );

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#444: FILE: drivers/i2c/chips/it87.c:363:
+}
+/* more like overshoot temperature */

WARNING:LINE_SPACING: Missing a blank line after declarations
#449: FILE: drivers/i2c/chips/it87.c:368:
+	struct it87_data *data = i2c_get_clientdata(client);
+	it87_update_client(client);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#450: FILE: drivers/i2c/chips/it87.c:369:
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp_high[nr])*10);
 	                                                              ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#452: FILE: drivers/i2c/chips/it87.c:371:
+}
+/* more like hysteresis temperature */

WARNING:LINE_SPACING: Missing a blank line after declarations
#457: FILE: drivers/i2c/chips/it87.c:376:
+	struct it87_data *data = i2c_get_clientdata(client);
+	it87_update_client(client);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#458: FILE: drivers/i2c/chips/it87.c:377:
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp_low[nr])*10);
 	                                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: drivers/i2c/chips/it87.c:379:
+static ssize_t set_temp_max(struct device *dev, const char *buf, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#460: FILE: drivers/i2c/chips/it87.c:379:
+}
+static ssize_t set_temp_max(struct device *dev, const char *buf, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#461: FILE: drivers/i2c/chips/it87.c:380:
+static ssize_t set_temp_max(struct device *dev, const char *buf, 
+		size_t count, int nr)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#465: FILE: drivers/i2c/chips/it87.c:384:
+	int val = simple_strtol(buf, NULL, 10)/10;
 	                                      ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#465: FILE: drivers/i2c/chips/it87.c:384:
+	int val = simple_strtol(buf, NULL, 10)/10;

WARNING:LINE_SPACING: Missing a blank line after declarations
#466: FILE: drivers/i2c/chips/it87.c:385:
+	int val = simple_strtol(buf, NULL, 10)/10;
+	data->temp_high[nr] = TEMP_TO_REG(val);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#470: FILE: drivers/i2c/chips/it87.c:389:
+static ssize_t set_temp_min(struct device *dev, const char *buf, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#470: FILE: drivers/i2c/chips/it87.c:389:
+}
+static ssize_t set_temp_min(struct device *dev, const char *buf, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#471: FILE: drivers/i2c/chips/it87.c:390:
+static ssize_t set_temp_min(struct device *dev, const char *buf, 
+		size_t count, int nr)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#475: FILE: drivers/i2c/chips/it87.c:394:
+	int val = simple_strtol(buf, NULL, 10)/10;
 	                                      ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#475: FILE: drivers/i2c/chips/it87.c:394:
+	int val = simple_strtol(buf, NULL, 10)/10;

WARNING:LINE_SPACING: Missing a blank line after declarations
#476: FILE: drivers/i2c/chips/it87.c:395:
+	int val = simple_strtol(buf, NULL, 10)/10;
+	data->temp_low[nr] = TEMP_TO_REG(val);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#480: FILE: drivers/i2c/chips/it87.c:399:
+}
+#define show_temp_offset(offset)					\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#481: FILE: drivers/i2c/chips/it87.c:400:
+static ssize_t show_temp_##offset (struct device *dev, char *buf)	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#486: FILE: drivers/i2c/chips/it87.c:405:
+show_temp_##offset##_max (struct device *dev, char *buf)		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#491: FILE: drivers/i2c/chips/it87.c:410:
+show_temp_##offset##_min (struct device *dev, char *buf)		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#495: FILE: drivers/i2c/chips/it87.c:414:
+static ssize_t set_temp_##offset##_max (struct device *dev, ^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#495: FILE: drivers/i2c/chips/it87.c:414:
+static ssize_t set_temp_##offset##_max (struct device *dev, 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#496: FILE: drivers/i2c/chips/it87.c:415:
+^I^Iconst char *buf, size_t count) ^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#500: FILE: drivers/i2c/chips/it87.c:419:
+static ssize_t set_temp_##offset##_min (struct device *dev, ^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#500: FILE: drivers/i2c/chips/it87.c:419:
+static ssize_t set_temp_##offset##_min (struct device *dev, 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#501: FILE: drivers/i2c/chips/it87.c:420:
+^I^Iconst char *buf, size_t count) ^I^I^I^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#505: FILE: drivers/i2c/chips/it87.c:424:
+static DEVICE_ATTR(temp_input##offset, S_IRUGO, show_temp_##offset, NULL) \

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#506: FILE: drivers/i2c/chips/it87.c:425:
+static DEVICE_ATTR(temp_max##offset, S_IRUGO | S_IWUSR, ^I^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#506: FILE: drivers/i2c/chips/it87.c:425:
+static DEVICE_ATTR(temp_max##offset, S_IRUGO | S_IWUSR, 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#507: FILE: drivers/i2c/chips/it87.c:426:
+^I^Ishow_temp_##offset##_max, set_temp_##offset##_max) ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#508: FILE: drivers/i2c/chips/it87.c:427:
+static DEVICE_ATTR(temp_min##offset, S_IRUGO | S_IWUSR, ^I^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#508: FILE: drivers/i2c/chips/it87.c:427:
+static DEVICE_ATTR(temp_min##offset, S_IRUGO | S_IWUSR, 		\

ERROR:TRAILING_WHITESPACE: trailing whitespace
#509: FILE: drivers/i2c/chips/it87.c:428:
+^I^Ishow_temp_##offset##_min, set_temp_##offset##_min)^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#520: FILE: drivers/i2c/chips/it87.c:439:
+	struct it87_data *data = i2c_get_clientdata(client);
+	it87_update_client(client);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#521: FILE: drivers/i2c/chips/it87.c:440:
+^Ireturn sprintf(buf,"%d\n", FAN_FROM_REG(data->fan[nr], $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#521: FILE: drivers/i2c/chips/it87.c:440:
+	return sprintf(buf,"%d\n", FAN_FROM_REG(data->fan[nr], 
 	                  ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#522: FILE: drivers/i2c/chips/it87.c:441:
+				DIV_FROM_REG(data->fan_div[nr])) );

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#524: FILE: drivers/i2c/chips/it87.c:443:
+}
+static ssize_t show_fan_min(struct device *dev, char *buf, int nr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#528: FILE: drivers/i2c/chips/it87.c:447:
+	struct it87_data *data = i2c_get_clientdata(client);
+	it87_update_client(client);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#529: FILE: drivers/i2c/chips/it87.c:448:
+	return sprintf(buf,"%d\n",
 	                  ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#530: FILE: drivers/i2c/chips/it87.c:449:
+		FAN_FROM_REG(data->fan_min[nr], DIV_FROM_REG(data->fan_div[nr])) );

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#532: FILE: drivers/i2c/chips/it87.c:451:
+}
+static ssize_t show_fan_div(struct device *dev, char *buf, int nr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#536: FILE: drivers/i2c/chips/it87.c:455:
+	struct it87_data *data = i2c_get_clientdata(client);
+	it87_update_client(client);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#537: FILE: drivers/i2c/chips/it87.c:456:
+	return sprintf(buf,"%d\n", DIV_FROM_REG(data->fan_div[nr]) );
 	                  ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#537: FILE: drivers/i2c/chips/it87.c:456:
+	return sprintf(buf,"%d\n", DIV_FROM_REG(data->fan_div[nr]) );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#539: FILE: drivers/i2c/chips/it87.c:458:
+static ssize_t set_fan_min(struct device *dev, const char *buf, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#539: FILE: drivers/i2c/chips/it87.c:458:
+}
+static ssize_t set_fan_min(struct device *dev, const char *buf, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#540: FILE: drivers/i2c/chips/it87.c:459:
+static ssize_t set_fan_min(struct device *dev, const char *buf, 
+		size_t count, int nr)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#544: FILE: drivers/i2c/chips/it87.c:463:
+	int val = simple_strtol(buf, NULL, 10);

WARNING:LINE_SPACING: Missing a blank line after declarations
#545: FILE: drivers/i2c/chips/it87.c:464:
+	int val = simple_strtol(buf, NULL, 10);
+	data->fan_min[nr] = FAN_TO_REG(val, DIV_FROM_REG(data->fan_div[nr]));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#546: FILE: drivers/i2c/chips/it87.c:465:
+	it87_write_value(client, IT87_REG_FAN_MIN(nr+1), data->fan_min[nr]);
 	                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#549: FILE: drivers/i2c/chips/it87.c:468:
+static ssize_t set_fan_div(struct device *dev, const char *buf, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#549: FILE: drivers/i2c/chips/it87.c:468:
+}
+static ssize_t set_fan_div(struct device *dev, const char *buf, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: drivers/i2c/chips/it87.c:469:
+static ssize_t set_fan_div(struct device *dev, const char *buf, 
+		size_t count, int nr)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#554: FILE: drivers/i2c/chips/it87.c:473:
+	int val = simple_strtol(buf, NULL, 10);

WARNING:LINE_SPACING: Missing a blank line after declarations
#556: FILE: drivers/i2c/chips/it87.c:475:
+	int old = it87_read_value(client, IT87_REG_FAN_DIV);
+	data->fan_div[nr] = DIV_TO_REG(val);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#563: FILE: drivers/i2c/chips/it87.c:482:
+static ssize_t show_fan_##offset (struct device *dev, char *buf)	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#567: FILE: drivers/i2c/chips/it87.c:486:
+static ssize_t show_fan_##offset##_min (struct device *dev, char *buf)	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#571: FILE: drivers/i2c/chips/it87.c:490:
+static ssize_t show_fan_##offset##_div (struct device *dev, char *buf)	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#575: FILE: drivers/i2c/chips/it87.c:494:
+static ssize_t set_fan_##offset##_min (struct device *dev, ^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#575: FILE: drivers/i2c/chips/it87.c:494:
+static ssize_t set_fan_##offset##_min (struct device *dev, 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#576: FILE: drivers/i2c/chips/it87.c:495:
+^Iconst char *buf, size_t count) ^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#580: FILE: drivers/i2c/chips/it87.c:499:
+static ssize_t set_fan_##offset##_div (struct device *dev, ^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#580: FILE: drivers/i2c/chips/it87.c:499:
+static ssize_t set_fan_##offset##_div (struct device *dev, 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#581: FILE: drivers/i2c/chips/it87.c:500:
+^I^Iconst char *buf, size_t count) ^I^I^I^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#585: FILE: drivers/i2c/chips/it87.c:504:
+static DEVICE_ATTR(fan_input##offset, S_IRUGO, show_fan_##offset, NULL) \

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#586: FILE: drivers/i2c/chips/it87.c:505:
+static DEVICE_ATTR(fan_min##offset, S_IRUGO | S_IWUSR, ^I^I^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#586: FILE: drivers/i2c/chips/it87.c:505:
+static DEVICE_ATTR(fan_min##offset, S_IRUGO | S_IWUSR, 			\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#587: FILE: drivers/i2c/chips/it87.c:506:
+^I^Ishow_fan_##offset##_min, set_fan_##offset##_min) ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#588: FILE: drivers/i2c/chips/it87.c:507:
+static DEVICE_ATTR(fan_div##offset, S_IRUGO | S_IWUSR, ^I^I^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#588: FILE: drivers/i2c/chips/it87.c:507:
+static DEVICE_ATTR(fan_div##offset, S_IRUGO | S_IWUSR, 			\

WARNING:LINE_SPACING: Missing a blank line after declarations
#599: FILE: drivers/i2c/chips/it87.c:518:
+	struct it87_data *data = i2c_get_clientdata(client);
+	it87_update_client(client);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#600: FILE: drivers/i2c/chips/it87.c:519:
+	return sprintf(buf,"%d\n", ALARMS_FROM_REG(data->alarms));
 	                  ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_alarm' to 'alarm_show'
#601: FILE: drivers/i2c/chips/it87.c:520:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#602: FILE: drivers/i2c/chips/it87.c:521:
+static DEVICE_ATTR(alarm, S_IRUGO | S_IWUSR, show_alarm, NULL);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#605: FILE: drivers/i2c/chips/it87.c:524:
+/* This function is called when:
+     * it87_driver is inserted (when this module is loaded), for each

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#607: FILE: drivers/i2c/chips/it87.c:526:
+     * when a new adapter is inserted (and it87_driver is still present) */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#624: FILE: drivers/i2c/chips/it87.c:543:
+	if (!is_isa
[...]
+					I2C_FUNC_SMBUS_BYTE_DATA)) goto

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#625: FILE: drivers/i2c/chips/it87.c:544:
+	if (!is_isa
+	    && !i2c_check_functionality(adapter,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#635: FILE: drivers/i2c/chips/it87.c:554:
+	/* Probe whether there is anything available on this address. Already
+	   done for SMBus clients */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#635: FILE: drivers/i2c/chips/it87.c:554:
+	   done for SMBus clients */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#638: FILE: drivers/i2c/chips/it87.c:557:
+		if (is_isa) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#641: FILE: drivers/i2c/chips/it87.c:560:
+			/* We need the timeouts for at least some IT87-like chips. But only
+			   if we read 'undefined' registers. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#641: FILE: drivers/i2c/chips/it87.c:560:
+			   if we read 'undefined' registers. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#662: FILE: drivers/i2c/chips/it87.c:581:
+	/* OK. For now, we presume we have a valid client. We now create the
+	   client structure, even though we cannot fill it completely yet.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#663: FILE: drivers/i2c/chips/it87.c:582:
+	   But it allows us to access it87_{read,write}_value. */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#665: FILE: drivers/i2c/chips/it87.c:584:
+	if (!(new_client = kmalloc((sizeof(struct i2c_client)) +

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#672: FILE: drivers/i2c/chips/it87.c:591:
+	data = (struct it87_data *) (new_client + 1);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#686: FILE: drivers/i2c/chips/it87.c:605:
+		if (!is_isa
[...]
+			address)) goto ERROR1;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#687: FILE: drivers/i2c/chips/it87.c:606:
+		if (!is_isa
+			&& (it87_read_value(new_client, IT87_REG_I2C_ADDR) !=

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#697: FILE: drivers/i2c/chips/it87.c:616:
+		}
+		else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#697: FILE: drivers/i2c/chips/it87.c:616:
+		else {

WARNING:SPLIT_STRING: quoted string split across lines
#701: FILE: drivers/i2c/chips/it87.c:620:
+				    ("it87.o: Ignoring 'force' parameter for unknown chip at "
+				     "adapter %d, address 0x%02x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#711: FILE: drivers/i2c/chips/it87.c:630:
+	} /* else if (kind == it8712) {
+		name = "it8712";

WARNING:TABSTOP: Statements should start on a tabstop
#713: FILE: drivers/i2c/chips/it87.c:632:
+	} */ else {

CHECK:BRACES: Unbalanced braces around else statement
#713: FILE: drivers/i2c/chips/it87.c:632:
+	} */ else {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#733: FILE: drivers/i2c/chips/it87.c:652:
+	if ((err = i2c_attach_client(new_client)))

WARNING:INDENTED_LABEL: labels should not be indented
#773: FILE: drivers/i2c/chips/it87.c:692:
+      ERROR2:

WARNING:INDENTED_LABEL: labels should not be indented
#776: FILE: drivers/i2c/chips/it87.c:695:
+      ERROR1:

WARNING:INDENTED_LABEL: labels should not be indented
#778: FILE: drivers/i2c/chips/it87.c:697:
+      ERROR0:

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#786: FILE: drivers/i2c/chips/it87.c:705:
+	if ((err = i2c_detach_client(client))) {

ERROR:SPACING: space required before the open parenthesis '('
#792: FILE: drivers/i2c/chips/it87.c:711:
+	if(i2c_is_isa_client(client))

WARNING:TYPO_SPELLING: 'explicitely' may be misspelled - perhaps 'explicitly'?
#799: FILE: drivers/i2c/chips/it87.c:718:
+/* The SMBus locks itself, but ISA access must be locked explicitely! 
                                                          ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#799: FILE: drivers/i2c/chips/it87.c:718:
+/* The SMBus locks itself, but ISA access must be locked explicitely! $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#800: FILE: drivers/i2c/chips/it87.c:719:
+/* The SMBus locks itself, but ISA access must be locked explicitely! 
+   We don't want to lock the whole ISA bus, so we lock each client

ERROR:TRAILING_WHITESPACE: trailing whitespace
#803: FILE: drivers/i2c/chips/it87.c:722:
+   would slow down the IT87 access and should not be necessary. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#805: FILE: drivers/i2c/chips/it87.c:724:
+   nowhere else be necessary! */

WARNING:LINE_SPACING: Missing a blank line after declarations
#811: FILE: drivers/i2c/chips/it87.c:730:
+	int res;
+	if (i2c_is_isa_client(client)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#811: FILE: drivers/i2c/chips/it87.c:730:
+	if (i2c_is_isa_client(client)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#817: FILE: drivers/i2c/chips/it87.c:736:
+	} else

WARNING:TYPO_SPELLING: 'explicitely' may be misspelled - perhaps 'explicitly'?
#821: FILE: drivers/i2c/chips/it87.c:740:
+/* The SMBus locks itself, but ISA access muse be locked explicitely! 
                                                          ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#821: FILE: drivers/i2c/chips/it87.c:740:
+/* The SMBus locks itself, but ISA access muse be locked explicitely! $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#822: FILE: drivers/i2c/chips/it87.c:741:
+/* The SMBus locks itself, but ISA access muse be locked explicitely! 
+   We don't want to lock the whole ISA bus, so we lock each client

ERROR:TRAILING_WHITESPACE: trailing whitespace
#825: FILE: drivers/i2c/chips/it87.c:744:
+   would slow down the IT87 access and should not be necessary. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#827: FILE: drivers/i2c/chips/it87.c:746:
+   nowhere else be necessary! */

CHECK:BRACES: braces {} should be used on all arms of this statement
#832: FILE: drivers/i2c/chips/it87.c:751:
+	if (i2c_is_isa_client(client)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#838: FILE: drivers/i2c/chips/it87.c:757:
+	} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#846: FILE: drivers/i2c/chips/it87.c:765:
+	/* Reset all except Watchdog values and last conversion values
+	   This sets fan-divs to 2, among others */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#846: FILE: drivers/i2c/chips/it87.c:765:
+	   This sets fan-divs to 2, among others */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#905: FILE: drivers/i2c/chips/it87.c:824:
+	it87_write_value(client, IT87_REG_TEMP_ENABLE,
+			(it87_read_value(client, IT87_REG_TEMP_ENABLE) & 0xc0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#910: FILE: drivers/i2c/chips/it87.c:829:
+	it87_write_value(client, IT87_REG_FAN_CTRL,
+			(it87_read_value(client, IT87_REG_FAN_CTRL) & 0x8f)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jiffies < data->last_updated'
#926: FILE: drivers/i2c/chips/it87.c:845:
+	if ((jiffies - data->last_updated > HZ + HZ / 2) ||
+	    (jiffies < data->last_updated) || !data->valid) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#927: FILE: drivers/i2c/chips/it87.c:846:
+	    (jiffies < data->last_updated) || !data->valid) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#928: FILE: drivers/i2c/chips/it87.c:847:
+	    (jiffies < data->last_updated) || !data->valid) {
+

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#930: FILE: drivers/i2c/chips/it87.c:849:
+			/* Cleared after each update, so reenable.  Value
 			                                 ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#931: FILE: drivers/i2c/chips/it87.c:850:
+^I^I ^I  returned by this read will be previous value */^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#931: FILE: drivers/i2c/chips/it87.c:850:
+^I^I ^I  returned by this read will be previous value */^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#931: FILE: drivers/i2c/chips/it87.c:850:
+^I^I ^I  returned by this read will be previous value */^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#931: FILE: drivers/i2c/chips/it87.c:850:
+			/* Cleared after each update, so reenable.  Value
+		 	  returned by this read will be previous value */	

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#931: FILE: drivers/i2c/chips/it87.c:850:
+		 	  returned by this read will be previous value */	

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#933: FILE: drivers/i2c/chips/it87.c:852:
+			it87_write_value(client, IT87_REG_CONFIG,
+			   it87_read_value(client, IT87_REG_CONFIG) | 0x40);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#946: FILE: drivers/i2c/chips/it87.c:865:
+		/* Temperature sensor doesn't have limit registers, set
+		   to min and max value */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#946: FILE: drivers/i2c/chips/it87.c:865:
+		   to min and max value */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#967: FILE: drivers/i2c/chips/it87.c:886:
+		/*if (data->type == it8712) {
+			data->vid = it87_read_value(client, IT87_REG_VID);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1001: FILE: drivers/i2c/chips/it87.c:920:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000375288.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 68 errors, 109 warnings, 98 checks, 963 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000375288.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
