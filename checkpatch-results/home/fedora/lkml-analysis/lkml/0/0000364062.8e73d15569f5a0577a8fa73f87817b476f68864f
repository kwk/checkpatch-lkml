WARNING:TYPO_SPELLING: 'cant' may be misspelled - perhaps 'can't'?
#45: 
  changing some things i cant easily test (pppoatm,
                         ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'cant' may be misspelled - perhaps 'can't'?
#54: 
  open?  (while searching though the list) i cant hold
                                             ^^^^

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#59: 
  however, this feature doesnt have any smarts. are
                        ^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#121: FILE: include/linux/atmdev.h:448:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#127: FILE: include/linux/atmdev.h:454:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#258: FILE: net/atm/common.c:190:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#266: FILE: net/atm/common.c:206:
+EXPORT_SYMBOL(vcc_sklist);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#268: FILE: net/atm/common.c:208:
+EXPORT_SYMBOL(vcc_insert_socket);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#269: FILE: net/atm/common.c:209:
+EXPORT_SYMBOL(vcc_remove_socket);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#276: FILE: net/atm/common.c:215:
+
+

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#278: FILE: net/atm/common.c:217:
+		printk(KERN_DEBUG "vcc_sock_destruct: rmem leakage (%d bytes) detected.\n", atomic_read(&sk->rmem_alloc));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#278: FILE: net/atm/common.c:217:
+		printk(KERN_DEBUG "vcc_sock_destruct: rmem leakage (%d bytes) detected.\n", atomic_read(&sk->rmem_alloc));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'vcc_sock_destruct', this function's name, in a string
#278: FILE: net/atm/common.c:217:
+		printk(KERN_DEBUG "vcc_sock_destruct: rmem leakage (%d bytes) detected.\n", atomic_read(&sk->rmem_alloc));

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#281: FILE: net/atm/common.c:220:
+		printk(KERN_DEBUG "vcc_sock_destruct: wmem leakage (%d bytes) detected.\n", atomic_read(&sk->wmem_alloc));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#281: FILE: net/atm/common.c:220:
+		printk(KERN_DEBUG "vcc_sock_destruct: wmem leakage (%d bytes) detected.\n", atomic_read(&sk->wmem_alloc));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'vcc_sock_destruct', this function's name, in a string
#281: FILE: net/atm/common.c:220:
+		printk(KERN_DEBUG "vcc_sock_destruct: wmem leakage (%d bytes) detected.\n", atomic_read(&sk->wmem_alloc));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#421: FILE: net/atm/common.c:377:
+		error = adjust_tp(&vcc->qos.txtp,vcc->qos.aal);
 		                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#423: FILE: net/atm/common.c:379:
+		error = adjust_tp(&vcc->qos.rxtp,vcc->qos.aal);
 		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#462: FILE: net/atm/common.c:409:
+	DPRINTK("atm_connect (vpi %d, vci %d)\n",vpi,vci);
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#462: FILE: net/atm/common.c:409:
+	DPRINTK("atm_connect (vpi %d, vci %d)\n",vpi,vci);
 	                                            ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'vcc_connect', this function's name, in a string
#481: FILE: net/atm/common.c:423:
+	DPRINTK("vcc_connect (TX: cl %d,bw %d-%d,sdu %d; "

WARNING:TYPO_SPELLING: 'obselete' may be misspelled - perhaps 'obsolete'?
#505: FILE: net/atm/common.c:444:
+		printk(KERN_ERR "vcc_connect(): used obselete ATM_ITF_ANY\n");
 		                                     ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#505: FILE: net/atm/common.c:444:
+		printk(KERN_ERR "vcc_connect(): used obselete ATM_ITF_ANY\n");

WARNING:TYPO_SPELLING: 'obselete' may be misspelled - perhaps 'obsolete'?
#507: FILE: net/atm/common.c:446:
+#ifdef obselete /* not particularly meaingful really */
        ^^^^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#600: FILE: net/atm/common.c:488:
+	if (test_bit(ATM_VF_RELEASED,&vcc->flags) ||
 	                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#600: FILE: net/atm/common.c:488:
+	if (test_bit(ATM_VF_RELEASED,&vcc->flags) ||
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#601: FILE: net/atm/common.c:489:
+	    test_bit(ATM_VF_CLOSE,&vcc->flags)) {
 	                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#601: FILE: net/atm/common.c:489:
+	    test_bit(ATM_VF_CLOSE,&vcc->flags)) {
 	                          ^

CHECK:SPACING: No space is necessary after a cast
#635: FILE: net/atm/common.c:509:
+		vcc->dev->ops->feedback(vcc, skb, (unsigned long) skb->data,

CHECK:SPACING: No space is necessary after a cast
#636: FILE: net/atm/common.c:510:
+		    (unsigned long) msg->msg_iov->iov_base, copied);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#872: FILE: net/atm/common.c:971:
 
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#874: FILE: net/atm/common.c:973:
+int vcc_setsockopt(struct socket *sock,int level,int optname,char *optval,
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#874: FILE: net/atm/common.c:973:
+int vcc_setsockopt(struct socket *sock,int level,int optname,char *optval,
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#874: FILE: net/atm/common.c:973:
+int vcc_setsockopt(struct socket *sock,int level,int optname,char *optval,
                                                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#875: FILE: net/atm/common.c:974:
+int vcc_setsockopt(struct socket *sock,int level,int optname,char *optval,
+    int optlen)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#875: FILE: net/atm/common.c:974:
+    int optlen)$

CHECK:SPACING: No space is necessary after a cast
#906: FILE: net/atm/common.c:1003:
+			if (get_user(value, (unsigned long *) optval))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#957: FILE: net/atm/common.h:16:
+int vcc_connect(struct socket *sock,int itf,short vpi,int vci);
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#957: FILE: net/atm/common.h:16:
+int vcc_connect(struct socket *sock,int itf,short vpi,int vci);
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#957: FILE: net/atm/common.h:16:
+int vcc_connect(struct socket *sock,int itf,short vpi,int vci);
                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#965: FILE: net/atm/common.h:22:
+int vcc_ioctl(struct socket *sock,unsigned int cmd,unsigned long arg);
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#965: FILE: net/atm/common.h:22:
+int vcc_ioctl(struct socket *sock,unsigned int cmd,unsigned long arg);
                                                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#967: FILE: net/atm/common.h:24:
+int vcc_setsockopt(struct socket *sock, int level, int optname, char *optval,
     int optlen);

ERROR:CODE_INDENT: code indent should use tabs where possible
#993: FILE: net/atm/lec.c:813:
+        vcc->dev = &lecatm_dev;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#993: FILE: net/atm/lec.c:813:
+        vcc->dev = &lecatm_dev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#994: FILE: net/atm/lec.c:814:
+        vcc_insert_socket(vcc->sk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#994: FILE: net/atm/lec.c:814:
+        vcc_insert_socket(vcc->sk);$

ERROR:SPACING: space required before the open parenthesis '('
#1048: FILE: net/atm/proc.c:351:
+	for(s = vcc_sklist; s; s = s->next) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1051: FILE: net/atm/proc.c:354:
+			pvc_info(vcc,buf,clip_info);
 			            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1051: FILE: net/atm/proc.c:354:
+			pvc_info(vcc,buf,clip_info);
 			                ^

ERROR:SPACING: space required before the open parenthesis '('
#1099: FILE: net/atm/proc.c:384:
+	for(s = vcc_sklist; s; s = s->next) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1102: FILE: net/atm/proc.c:387:
+			vc_info(vcc,buf);
 			           ^

ERROR:SPACING: space required before the open parenthesis '('
#1139: FILE: net/atm/proc.c:408:
+	for(s = vcc_sklist; s; s = s->next) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1142: FILE: net/atm/proc.c:411:
+			svc_info(vcc,buf);
 			            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1189: FILE: net/atm/pvc.c:57:
+	error = vcc_connect(sock, addr->sap_addr.itf, addr->sap_addr.vpi,
 	    addr->sap_addr.vci);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1200: FILE: net/atm/pvc.c:71:
+static int pvc_setsockopt(struct socket *sock,int level,int optname,
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1200: FILE: net/atm/pvc.c:71:
+static int pvc_setsockopt(struct socket *sock,int level,int optname,
                                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1201: FILE: net/atm/pvc.c:72:
+static int pvc_setsockopt(struct socket *sock,int level,int optname,
+		    char *optval,int optlen)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1201: FILE: net/atm/pvc.c:72:
+		    char *optval,int optlen)
 		                ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1213: FILE: net/atm/pvc.c:84:
+
+

WARNING:CONST_STRUCT: struct proto_ops should normally be const
#1222: FILE: net/atm/pvc.c:102:
+static struct proto_ops pvc_proto_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1307: FILE: net/atm/resources.c:171:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1309: FILE: net/atm/resources.c:173:
+static void copy_aal_stats(struct k_atm_aal_stats *from,
+    struct atm_aal_stats *to)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1309: FILE: net/atm/resources.c:173:
+    struct atm_aal_stats *to)$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1313: FILE: net/atm/resources.c:175:
+#define __HANDLE_ITEM(i) to->i = atomic_read(&from->i)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#1313: FILE: net/atm/resources.c:175:
+#define __HANDLE_ITEM(i) to->i = atomic_read(&from->i)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'i' may be better as '(i)' to avoid precedence issues
#1313: FILE: net/atm/resources.c:175:
+#define __HANDLE_ITEM(i) to->i = atomic_read(&from->i)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1332: FILE: net/atm/resources.c:182:
+static void subtract_aal_stats(struct k_atm_aal_stats *from,
+    struct atm_aal_stats *to)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1332: FILE: net/atm/resources.c:182:
+    struct atm_aal_stats *to)$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1334: FILE: net/atm/resources.c:184:
+#define __HANDLE_ITEM(i) atomic_sub(to->i,&from->i)
                                          ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1334: FILE: net/atm/resources.c:184:
+#define __HANDLE_ITEM(i) atomic_sub(to->i,&from->i)
                                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#1334: FILE: net/atm/resources.c:184:
+#define __HANDLE_ITEM(i) atomic_sub(to->i,&from->i)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'i' may be better as '(i)' to avoid precedence issues
#1334: FILE: net/atm/resources.c:184:
+#define __HANDLE_ITEM(i) atomic_sub(to->i,&from->i)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1341: FILE: net/atm/resources.c:190:
+static int fetch_stats(struct atm_dev *dev,struct atm_dev_stats *arg,int zero)
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1341: FILE: net/atm/resources.c:190:
+static int fetch_stats(struct atm_dev *dev,struct atm_dev_stats *arg,int zero)
                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1358: FILE: net/atm/resources.c:195:
+	copy_aal_stats(&dev->stats.aal0,&tmp.aal0);
 	                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1358: FILE: net/atm/resources.c:195:
+	copy_aal_stats(&dev->stats.aal0,&tmp.aal0);
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1359: FILE: net/atm/resources.c:196:
+	copy_aal_stats(&dev->stats.aal34,&tmp.aal34);
 	                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1359: FILE: net/atm/resources.c:196:
+	copy_aal_stats(&dev->stats.aal34,&tmp.aal34);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1360: FILE: net/atm/resources.c:197:
+	copy_aal_stats(&dev->stats.aal5,&tmp.aal5);
 	                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1360: FILE: net/atm/resources.c:197:
+	copy_aal_stats(&dev->stats.aal5,&tmp.aal5);
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1362: FILE: net/atm/resources.c:199:
+		error = copy_to_user(arg,&tmp,sizeof(tmp));
 		                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1362: FILE: net/atm/resources.c:199:
+		error = copy_to_user(arg,&tmp,sizeof(tmp));
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1362: FILE: net/atm/resources.c:199:
+		error = copy_to_user(arg,&tmp,sizeof(tmp));
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1364: FILE: net/atm/resources.c:201:
+		subtract_aal_stats(&dev->stats.aal0,&tmp.aal0);
 		                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1364: FILE: net/atm/resources.c:201:
+		subtract_aal_stats(&dev->stats.aal0,&tmp.aal0);
 		                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1365: FILE: net/atm/resources.c:202:
+		subtract_aal_stats(&dev->stats.aal34,&tmp.aal34);
 		                                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1365: FILE: net/atm/resources.c:202:
+		subtract_aal_stats(&dev->stats.aal34,&tmp.aal34);
 		                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1366: FILE: net/atm/resources.c:203:
+		subtract_aal_stats(&dev->stats.aal5,&tmp.aal5);
 		                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1366: FILE: net/atm/resources.c:203:
+		subtract_aal_stats(&dev->stats.aal5,&tmp.aal5);
 		                                    ^

CHECK:SPACING: No space is necessary after a cast
#1398: FILE: net/atm/resources.c:215:
+	if (get_user(buf, &((struct atmif_sioc *) arg)->arg))

CHECK:SPACING: No space is necessary after a cast
#1400: FILE: net/atm/resources.c:217:
+	if (get_user(len, &((struct atmif_sioc *) arg)->length))

CHECK:SPACING: No space is necessary after a cast
#1402: FILE: net/atm/resources.c:219:
+	if (get_user(number, &((struct atmif_sioc *) arg)->number))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1405: FILE: net/atm/resources.c:222:
+	if (!(dev = atm_dev_lookup(number)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1407: FILE: net/atm/resources.c:224:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1409: FILE: net/atm/resources.c:226:
+	switch (cmd) {
+		case ATM_GETTYPE:
[...]
+		case ATM_GETESI:
[...]
+		case ATM_SETESI:
[...]
+		case ATM_SETESIF:
[...]
+		case ATM_GETSTATZ:
[...]
+		case ATM_GETSTAT:
[...]
+		case ATM_GETCIRANGE:
[...]
+		case ATM_GETLINKRATE:
[...]
+		case ATM_RSTADDR:
[...]
+		case ATM_ADDADDR:
+		case ATM_DELADDR:
[...]
+		case ATM_GETADDR:
[...]
+		case ATM_SETLOOP:
[...]
+		case ATM_SETCIRANGE:
+		case SONET_GETSTATZ:
+		case SONET_SETDIAG:
+		case SONET_CLRDIAG:
+		case SONET_SETFRAMING:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1411: FILE: net/atm/resources.c:228:
+			size = strlen(dev->type)+1;
 			                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1412: FILE: net/atm/resources.c:229:
+			if (copy_to_user(buf,dev->type,size)) {
 			                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1412: FILE: net/atm/resources.c:229:
+			if (copy_to_user(buf,dev->type,size)) {
 			                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1419: FILE: net/atm/resources.c:236:
+			if (copy_to_user(buf,dev->esi,size)) {
 			                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1419: FILE: net/atm/resources.c:236:
+			if (copy_to_user(buf,dev->esi,size)) {
 			                             ^

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1434: FILE: net/atm/resources.c:251:
+			/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1443: FILE: net/atm/resources.c:260:
+				if (copy_from_user(esi,buf,ESI_LEN)) {
 				                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1443: FILE: net/atm/resources.c:260:
+				if (copy_from_user(esi,buf,ESI_LEN)) {
 				                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1447: FILE: net/atm/resources.c:264:
+				memcpy(dev->esi,esi,ESI_LEN);
 				               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1447: FILE: net/atm/resources.c:264:
+				memcpy(dev->esi,esi,ESI_LEN);
 				                   ^

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1456: FILE: net/atm/resources.c:273:
+			/* fall through */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1459: FILE: net/atm/resources.c:276:
+			error = fetch_stats(dev,buf,cmd == ATM_GETSTATZ);
 			                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1459: FILE: net/atm/resources.c:276:
+			error = fetch_stats(dev,buf,cmd == ATM_GETSTATZ);
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1467: FILE: net/atm/resources.c:284:
+			if (copy_to_user(buf,&dev->ci_range,size)) {
 			                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1467: FILE: net/atm/resources.c:284:
+			if (copy_to_user(buf,&dev->ci_range,size)) {
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1467: FILE: net/atm/resources.c:284:
+			if (copy_to_user(buf,&dev->ci_range,size)) {
 			                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1474: FILE: net/atm/resources.c:291:
+			if (copy_to_user(buf,&dev->link_rate,size)) {
 			                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1474: FILE: net/atm/resources.c:291:
+			if (copy_to_user(buf,&dev->link_rate,size)) {
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1474: FILE: net/atm/resources.c:291:
+			if (copy_to_user(buf,&dev->link_rate,size)) {
 			                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1495: FILE: net/atm/resources.c:312:
+				if (copy_from_user(&addr,buf,sizeof(addr))) {
 				                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1495: FILE: net/atm/resources.c:312:
+				if (copy_from_user(&addr,buf,sizeof(addr))) {
 				                            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1500: FILE: net/atm/resources.c:317:
+					ret_val = atm_add_addr(dev,&addr);
 					                          ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1500: FILE: net/atm/resources.c:317:
+					ret_val = atm_add_addr(dev,&addr);
 					                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1502: FILE: net/atm/resources.c:319:
+					ret_val = atm_del_addr(dev,&addr);
 					                          ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1502: FILE: net/atm/resources.c:319:
+					ret_val = atm_del_addr(dev,&addr);
 					                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1506: FILE: net/atm/resources.c:323:
+			size = atm_get_addr(dev,buf,len);
 			                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1506: FILE: net/atm/resources.c:323:
+			size = atm_get_addr(dev,buf,len);
 			                           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1511: FILE: net/atm/resources.c:328:
+			/* may return 0, but later on size == 0 means "don't
+			   write the length" */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1511: FILE: net/atm/resources.c:328:
+			   write the length" */

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1513: FILE: net/atm/resources.c:330:
+						   &((struct atmif_sioc *) arg)->length) ? -EFAULT : 0;

CHECK:SPACING: No space is necessary after a cast
#1513: FILE: net/atm/resources.c:330:
+						   &((struct atmif_sioc *) arg)->length) ? -EFAULT : 0;

CHECK:SPACING: No space is necessary after a cast
#1516: FILE: net/atm/resources.c:333:
+			if (__ATM_LM_XTRMT((int) (long) buf) &&

CHECK:SPACING: No space is necessary after a cast
#1517: FILE: net/atm/resources.c:334:
+			    __ATM_LM_XTLOC((int) (long) buf) >

CHECK:SPACING: No space is necessary after a cast
#1518: FILE: net/atm/resources.c:335:
+			    __ATM_LM_XTRMT((int) (long) buf)) {

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1522: FILE: net/atm/resources.c:339:
+			/* fall through */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1532: FILE: net/atm/resources.c:349:
+			/* fall through */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1542: FILE: net/atm/resources.c:359:
+			size = dev->ops->ioctl(dev,cmd,buf);
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1542: FILE: net/atm/resources.c:359:
+			size = dev->ops->ioctl(dev,cmd,buf);
 			                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1549: FILE: net/atm/resources.c:366:
+^I$

CHECK:SPACING: No space is necessary after a cast
#1551: FILE: net/atm/resources.c:368:
+		ret_val =  put_user(size, &((struct atmif_sioc *) arg)->length) ?

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1561: FILE: net/atm/resources.c:378:
 
+

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1626: FILE: net/atm/signaling.c:204:
+	    !test_bit(ATM_VF_META,&vcc->flags)) {
 	                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1626: FILE: net/atm/signaling.c:204:
+	    !test_bit(ATM_VF_META,&vcc->flags)) {
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1627: FILE: net/atm/signaling.c:205:
+		set_bit(ATM_VF_RELEASED,&vcc->flags);
 		                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1627: FILE: net/atm/signaling.c:205:
+		set_bit(ATM_VF_RELEASED,&vcc->flags);
 		                        ^

ERROR:SPACING: space required before the open parenthesis '('
#1655: FILE: net/atm/signaling.c:224:
+	for(s = vcc_sklist; s; s = s->next) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1697: FILE: net/atm/svc.c:96:
+		DPRINTK("svc_release %p\n",vcc);
 		                          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1702: FILE: net/atm/svc.c:101:
+		/* VCC pointer is used as a reference, so we must not free it
+		   (thereby subjecting it to re-use) before all pending connections

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1703: FILE: net/atm/svc.c:102:
+		   are closed */

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1735: FILE: net/atm/svc.c:130:
+	if (test_bit(ATM_VF_SESSION,&vcc->flags)) {
 	                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1735: FILE: net/atm/svc.c:130:
+	if (test_bit(ATM_VF_SESSION,&vcc->flags)) {
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1750: FILE: net/atm/svc.c:142:
+	if (!test_bit(ATM_VF_HASQOS,&vcc->flags)) {
 	                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1750: FILE: net/atm/svc.c:142:
+	if (!test_bit(ATM_VF_HASQOS,&vcc->flags)) {
 	                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1775: FILE: net/atm/svc.c:160:
+        if (!vcc->reply)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1775: FILE: net/atm/svc.c:160:
+        if (!vcc->reply)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1814: FILE: net/atm/svc.c:189:
+^Icase SS_CONNECTED: $

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1829: FILE: net/atm/svc.c:204:
+		if (test_bit(ATM_VF_SESSION,&vcc->flags)) {
 		                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1829: FILE: net/atm/svc.c:204:
+		if (test_bit(ATM_VF_SESSION,&vcc->flags)) {
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1840: FILE: net/atm/svc.c:213:
+		if (!test_bit(ATM_VF_HASQOS,&vcc->flags)) {
 		                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1840: FILE: net/atm/svc.c:213:
+		if (!test_bit(ATM_VF_HASQOS,&vcc->flags)) {
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1895: FILE: net/atm/svc.c:296:
+	if (!(error = vcc_connect(sock,vcc->itf,vcc->vpi,vcc->vci)))
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1895: FILE: net/atm/svc.c:296:
+	if (!(error = vcc_connect(sock,vcc->itf,vcc->vpi,vcc->vci)))
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1895: FILE: net/atm/svc.c:296:
+	if (!(error = vcc_connect(sock,vcc->itf,vcc->vpi,vcc->vci)))
 	                                                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1895: FILE: net/atm/svc.c:296:
+	if (!(error = vcc_connect(sock,vcc->itf,vcc->vpi,vcc->vci)))

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1972: FILE: net/atm/svc.c:364:
+			if (test_bit(ATM_VF_RELEASED,&old_vcc->flags))
 			                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1972: FILE: net/atm/svc.c:364:
+			if (test_bit(ATM_VF_RELEASED,&old_vcc->flags))
 			                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2008: FILE: net/atm/svc.c:397:
+		error = vcc_connect(newsock, msg->pvc.sap_addr.itf,
+		    msg->pvc.sap_addr.vpi, msg->pvc.sap_addr.vci);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2052: FILE: net/atm/svc.c:465:
+static int svc_setsockopt(struct socket *sock, int level, int optname,
+    char *optval, int optlen)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2052: FILE: net/atm/svc.c:465:
+    char *optval, int optlen)$

WARNING:CONST_STRUCT: struct proto_ops should normally be const
#2086: FILE: net/atm/svc.c:503:
+static struct proto_ops svc_proto_ops = {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364062.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 100 errors, 34 warnings, 32 checks, 1956 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364062.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
