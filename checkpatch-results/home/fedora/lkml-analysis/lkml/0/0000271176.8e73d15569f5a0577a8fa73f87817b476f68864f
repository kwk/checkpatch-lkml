CHECK:CAMELCASE: Avoid CamelCase: <itLpNaca>
#70: FILE: arch/ppc64/kernel/LparData.c:127:
+EXPORT_SYMBOL(itLpNaca);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#74: FILE: arch/ppc64/kernel/LparData.c:130:
__attribute__((__section__(".data")));

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:CAMELCASE: Avoid CamelCase: <xItExtVpdPanel>
#78: FILE: arch/ppc64/kernel/LparData.c:134:
+EXPORT_SYMBOL(xItExtVpdPanel);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#120: FILE: arch/ppc64/kernel/lparcfg.c:45:
+void log_plpar_hcall_return(unsigned long rc,char * tag)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#120: FILE: arch/ppc64/kernel/lparcfg.c:45:
+void log_plpar_hcall_return(unsigned long rc,char * tag)
                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#122: FILE: arch/ppc64/kernel/lparcfg.c:47:
+	if (rc==0) /* success, return */
 	      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#126: FILE: arch/ppc64/kernel/lparcfg.c:51:
+		printk(KERN_INFO "plpar-hcall (%s) failed with hardware fault\n",tag);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#126: FILE: arch/ppc64/kernel/lparcfg.c:51:
+		printk(KERN_INFO "plpar-hcall (%s) failed with hardware fault\n",tag);
 		                                                                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#128: FILE: arch/ppc64/kernel/lparcfg.c:53:
+		printk(KERN_INFO "plpar-hcall (%s) failed; function not allowed\n",tag);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#128: FILE: arch/ppc64/kernel/lparcfg.c:53:
+		printk(KERN_INFO "plpar-hcall (%s) failed; function not allowed\n",tag);
 		                                                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: arch/ppc64/kernel/lparcfg.c:55:
+^I^Iprintk(KERN_INFO "plpar-hcall (%s) failed; not authorized to this $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#130: FILE: arch/ppc64/kernel/lparcfg.c:55:
+		printk(KERN_INFO "plpar-hcall (%s) failed; not authorized to this 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#133: FILE: arch/ppc64/kernel/lparcfg.c:57:
+		printk(KERN_INFO "plpar-hcall (%s) failed; Bad parameter(s)\n",tag);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#133: FILE: arch/ppc64/kernel/lparcfg.c:57:
+		printk(KERN_INFO "plpar-hcall (%s) failed; Bad parameter(s)\n",tag);
 		                       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#133: FILE: arch/ppc64/kernel/lparcfg.c:57:
+		printk(KERN_INFO "plpar-hcall (%s) failed; Bad parameter(s)\n",tag);
 		                               ^

CHECK:CAMELCASE: Avoid CamelCase: <Bad>
#133: FILE: arch/ppc64/kernel/lparcfg.c:57:
+		printk(KERN_INFO "plpar-hcall (%s) failed; Bad parameter(s)\n",tag);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: arch/ppc64/kernel/lparcfg.c:59:
+^I^Iprintk(KERN_INFO "plpar-hcall (%s) failed with unexpected $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#135: FILE: arch/ppc64/kernel/lparcfg.c:59:
+		printk(KERN_INFO "plpar-hcall (%s) failed with unexpected 

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#135: FILE: arch/ppc64/kernel/lparcfg.c:59:
+		printk(KERN_INFO "plpar-hcall (%s) failed with unexpected 
 		                       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#135: FILE: arch/ppc64/kernel/lparcfg.c:59:
+		printk(KERN_INFO "plpar-hcall (%s) failed with unexpected 
 		                               ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#138: FILE: arch/ppc64/kernel/lparcfg.c:61:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#140: FILE: arch/ppc64/kernel/lparcfg.c:63:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#226: FILE: arch/ppc64/kernel/lparcfg.c:71:
+extern unsigned char e2a(unsigned char);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char' should also have an identifier name
#226: FILE: arch/ppc64/kernel/lparcfg.c:71:
+extern unsigned char e2a(unsigned char);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#232: FILE: arch/ppc64/kernel/lparcfg.c:76:
+static int lparcfg_data(struct seq_file *m,void *v)
                                           ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#232: FILE: arch/ppc64/kernel/lparcfg.c:76:
+static int lparcfg_data(struct seq_file *m,void *v)
  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: arch/ppc64/kernel/lparcfg.c:85:
+	seq_printf(m, "serial_number=%c%c%c%c%c%c%c\n",
  		      e2a(xItExtVpdPanel.mfgID[2]),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: arch/ppc64/kernel/lparcfg.c:94:
+	seq_printf(m, "system_type=%c%c%c%c\n",
  		      e2a(xItExtVpdPanel.machineType[0]),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: arch/ppc64/kernel/lparcfg.c:103:
+	seq_printf(m, "system_active_processors=%d\n",
  		      (int)HvLpConfig_getSystemPhysicalProcessors());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#277: FILE: arch/ppc64/kernel/lparcfg.c:106:
+	seq_printf(m, "system_potential_processors=%d\n",
  		      (int)HvLpConfig_getSystemPhysicalProcessors());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: arch/ppc64/kernel/lparcfg.c:124:
+	seq_printf(m, "partition_max_entitled_capacity=%d\n",
  		      max_entitled_capacity);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: arch/ppc64/kernel/lparcfg.c:129:
+^I^Iseq_printf(m, "pool_capacity=%d\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: arch/ppc64/kernel/lparcfg.c:130:
+		seq_printf(m, "pool_capacity=%d\n", 
  	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: arch/ppc64/kernel/lparcfg.c:163:
+static unsigned int h_get_ppp(unsigned long *entitled,unsigned long $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#337: FILE: arch/ppc64/kernel/lparcfg.c:163:
+static unsigned int h_get_ppp(unsigned long *entitled,unsigned long 
                                                      ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#337: FILE: arch/ppc64/kernel/lparcfg.c:163:
+static unsigned int h_get_ppp(unsigned long *entitled,unsigned long 
*unallocated,unsigned long *aggregation,unsigned long *resource)
  {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#345: FILE: arch/ppc64/kernel/lparcfg.c:168:
+	log_plpar_hcall_return(rc,"H_GET_PPP");
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#350: FILE: arch/ppc64/kernel/lparcfg.c:173:
+static void h_pic(unsigned long *pool_idle_time,unsigned long *num_procs)
                                                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#354: FILE: arch/ppc64/kernel/lparcfg.c:177:
+	unsigned long dummy;
+	rc = plpar_hcall(H_PIC,0,0,0,0,pool_idle_time,num_procs,&dummy);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#354: FILE: arch/ppc64/kernel/lparcfg.c:177:
+	rc = plpar_hcall(H_PIC,0,0,0,0,pool_idle_time,num_procs,&dummy);
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#354: FILE: arch/ppc64/kernel/lparcfg.c:177:
+	rc = plpar_hcall(H_PIC,0,0,0,0,pool_idle_time,num_procs,&dummy);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#354: FILE: arch/ppc64/kernel/lparcfg.c:177:
+	rc = plpar_hcall(H_PIC,0,0,0,0,pool_idle_time,num_procs,&dummy);
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#354: FILE: arch/ppc64/kernel/lparcfg.c:177:
+	rc = plpar_hcall(H_PIC,0,0,0,0,pool_idle_time,num_procs,&dummy);
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#354: FILE: arch/ppc64/kernel/lparcfg.c:177:
+	rc = plpar_hcall(H_PIC,0,0,0,0,pool_idle_time,num_procs,&dummy);
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#354: FILE: arch/ppc64/kernel/lparcfg.c:177:
+	rc = plpar_hcall(H_PIC,0,0,0,0,pool_idle_time,num_procs,&dummy);
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#354: FILE: arch/ppc64/kernel/lparcfg.c:177:
+	rc = plpar_hcall(H_PIC,0,0,0,0,pool_idle_time,num_procs,&dummy);
 	                                                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#354: FILE: arch/ppc64/kernel/lparcfg.c:177:
+	rc = plpar_hcall(H_PIC,0,0,0,0,pool_idle_time,num_procs,&dummy);
 	                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#356: FILE: arch/ppc64/kernel/lparcfg.c:179:
+	log_plpar_hcall_return(rc,"H_PIC");
 	                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#360: FILE: arch/ppc64/kernel/lparcfg.c:183:
+/* get sum of purr across all processors.  if PPC_VPURR is not enabled, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#362: FILE: arch/ppc64/kernel/lparcfg.c:184:
+/* get sum of purr across all processors.  if PPC_VPURR is not enabled, 
+/* this utilizes the existing functionality from vpurr.c */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - unsigned long get_purr() should probably be unsigned long get_purr(void)
#363: FILE: arch/ppc64/kernel/lparcfg.c:185:
+static unsigned long get_purr()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#365: FILE: arch/ppc64/kernel/lparcfg.c:187:
+	unsigned long sum_purr=0;
 	                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: arch/ppc64/kernel/lparcfg.c:188:
+#ifdef CONFIG_PPC_VPURR^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#368: FILE: arch/ppc64/kernel/lparcfg.c:190:
+	struct cpu_util_store * cus;

ERROR:SPACING: space required before the open brace '{'
#370: FILE: arch/ppc64/kernel/lparcfg.c:192:
+	for_each_online_cpu(cpu){

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#371: FILE: arch/ppc64/kernel/lparcfg.c:193:
+		cus =   &per_cpu (cpu_util_sampler, cpu);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: arch/ppc64/kernel/lparcfg.c:196:
+^Iprintk(KERN_INFO "get_purr for cpu (%x) has value (%lx) $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#374: FILE: arch/ppc64/kernel/lparcfg.c:196:
+	printk(KERN_INFO "get_purr for cpu (%x) has value (%lx) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: arch/ppc64/kernel/lparcfg.c:198:
+                }$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: arch/ppc64/kernel/lparcfg.c:198:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: arch/ppc64/kernel/lparcfg.c:207:
+ * parse_system_parameter_string()$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: arch/ppc64/kernel/lparcfg.c:208:
+ * Retrieve the potential_processors, max_entitled_capacity and friends$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: arch/ppc64/kernel/lparcfg.c:209:
+ * through the get-system-parameter rtas call.  Replace keyword strings as$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: arch/ppc64/kernel/lparcfg.c:210:
+ * necessary.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: arch/ppc64/kernel/lparcfg.c:211:
+ */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: arch/ppc64/kernel/lparcfg.c:219:
+^I^Iprintk(KERN_ERR "%s %s kmalloc failure at line %d $

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#412: FILE: arch/ppc64/kernel/lparcfg.c:219:
+		printk(KERN_ERR "%s %s kmalloc failure at line %d 
 		                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#412: FILE: arch/ppc64/kernel/lparcfg.c:219:
+		printk(KERN_ERR "%s %s kmalloc failure at line %d 
 		                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#412: FILE: arch/ppc64/kernel/lparcfg.c:219:
+		printk(KERN_ERR "%s %s kmalloc failure at line %d 
 		                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#426: FILE: arch/ppc64/kernel/lparcfg.c:231:
+	memcpy(local_buffer,rtas_data_buf, SPLPAR_MAXLENGTH);
 	                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#433: FILE: arch/ppc64/kernel/lparcfg.c:235:
+^I^Iprintk(KERN_INFO "%s %s Error calling get-system-parameter $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#433: FILE: arch/ppc64/kernel/lparcfg.c:235:
+		printk(KERN_INFO "%s %s Error calling get-system-parameter 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#445: FILE: arch/ppc64/kernel/lparcfg.c:241:
+^I^I^Iprintk(KERN_ERR "%s %s kmalloc failure at line %d $

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#445: FILE: arch/ppc64/kernel/lparcfg.c:241:
+			printk(KERN_ERR "%s %s kmalloc failure at line %d 
 			                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#445: FILE: arch/ppc64/kernel/lparcfg.c:241:
+			printk(KERN_ERR "%s %s kmalloc failure at line %d 
 			                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#445: FILE: arch/ppc64/kernel/lparcfg.c:241:
+			printk(KERN_ERR "%s %s kmalloc failure at line %d 
 			                                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#451: FILE: arch/ppc64/kernel/lparcfg.c:246:
+		printk(KERN_INFO "success calling get-system-parameter \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#451: FILE: arch/ppc64/kernel/lparcfg.c:246:
+		printk(KERN_INFO "success calling get-system-parameter \n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#453: FILE: arch/ppc64/kernel/lparcfg.c:248:
+		splpar_strlen=local_buffer[0]*16+local_buffer[1];
 		             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#453: FILE: arch/ppc64/kernel/lparcfg.c:248:
+		splpar_strlen=local_buffer[0]*16+local_buffer[1];
 		                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#453: FILE: arch/ppc64/kernel/lparcfg.c:248:
+		splpar_strlen=local_buffer[0]*16+local_buffer[1];
 		                                ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#454: FILE: arch/ppc64/kernel/lparcfg.c:249:
+		local_buffer+=2; /* step over strlen value */
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#457: FILE: arch/ppc64/kernel/lparcfg.c:252:
+		w_idx=0; idx=0;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#457: FILE: arch/ppc64/kernel/lparcfg.c:252:
+		w_idx=0; idx=0;
 		            ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#458: FILE: arch/ppc64/kernel/lparcfg.c:253:
+		while ((*local_buffer) && (idx<splpar_strlen)) {
 		                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#459: FILE: arch/ppc64/kernel/lparcfg.c:254:
+			workbuffer[w_idx++]=local_buffer[idx++];
 			                   ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#460: FILE: arch/ppc64/kernel/lparcfg.c:255:
+			if ((local_buffer[idx]==',')||(local_buffer[idx]=='\0')) {
 			                      ^

ERROR:SPACING: spaces required around that '||' (ctx:VxV)
#460: FILE: arch/ppc64/kernel/lparcfg.c:255:
+			if ((local_buffer[idx]==',')||(local_buffer[idx]=='\0')) {
 			                            ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#460: FILE: arch/ppc64/kernel/lparcfg.c:255:
+			if ((local_buffer[idx]==',')||(local_buffer[idx]=='\0')) {
 			                                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#461: FILE: arch/ppc64/kernel/lparcfg.c:256:
+				workbuffer[w_idx]='\0';
 				                 ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#462: FILE: arch/ppc64/kernel/lparcfg.c:257:
+				if (w_idx) /* avoid the empty string */
+				{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#464: FILE: arch/ppc64/kernel/lparcfg.c:259:
+					seq_printf(m, "%s\n",workbuffer);
 					                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#468: FILE: arch/ppc64/kernel/lparcfg.c:263:
+				w_idx=0;
 				     ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#469: FILE: arch/ppc64/kernel/lparcfg.c:264:
+			} else if (local_buffer[idx]=='=') {
 			                            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#471: FILE: arch/ppc64/kernel/lparcfg.c:266:
+				/* code here to replace workbuffer contents
+				 with different keyword strings */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#471: FILE: arch/ppc64/kernel/lparcfg.c:266:
+				 with different keyword strings */

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#472: FILE: arch/ppc64/kernel/lparcfg.c:267:
+				if (0==strcmp(workbuffer,"MaxEntCap")) {
 				     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#472: FILE: arch/ppc64/kernel/lparcfg.c:267:
+				if (0==strcmp(workbuffer,"MaxEntCap")) {
 				                        ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#472: FILE: arch/ppc64/kernel/lparcfg.c:267:
+				if (0==strcmp(workbuffer,"MaxEntCap")) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#473: FILE: arch/ppc64/kernel/lparcfg.c:268:
+					strcpy(workbuffer,"partition_max_entitled_capacity\0");
 					                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#474: FILE: arch/ppc64/kernel/lparcfg.c:269:
+					w_idx=strlen(workbuffer);
 					     ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#476: FILE: arch/ppc64/kernel/lparcfg.c:271:
+				if (0==strcmp(workbuffer,"MaxPlatProcs")) {
 				     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#476: FILE: arch/ppc64/kernel/lparcfg.c:271:
+				if (0==strcmp(workbuffer,"MaxPlatProcs")) {
 				                        ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#476: FILE: arch/ppc64/kernel/lparcfg.c:271:
+				if (0==strcmp(workbuffer,"MaxPlatProcs")) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#477: FILE: arch/ppc64/kernel/lparcfg.c:272:
+					strcpy(workbuffer,"system_potential_processors\0");
 					                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#478: FILE: arch/ppc64/kernel/lparcfg.c:273:
+					w_idx=strlen(workbuffer);
 					     ^

ERROR:SPACING: spaces required around that '-=' (ctx:VxV)
#483: FILE: arch/ppc64/kernel/lparcfg.c:278:
+		local_buffer-=2; /* back up over strlen value */
 		            ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#487: FILE: arch/ppc64/kernel/lparcfg.c:282:
+	return;
+}

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int lparcfg_count_active_processors() should probably be int lparcfg_count_active_processors(void)
#491: FILE: arch/ppc64/kernel/lparcfg.c:286:
+static int lparcfg_count_active_processors()

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#494: FILE: arch/ppc64/kernel/lparcfg.c:289:
+	int count=0;
 	         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#495: FILE: arch/ppc64/kernel/lparcfg.c:290:
+	int count=0;
+	for (cpus_dn = of_find_node_by_type(NULL, "cpu");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#499: FILE: arch/ppc64/kernel/lparcfg.c:294:
+		printk(KERN_ERR "cpus_dn %p \n",cpus_dn);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#499: FILE: arch/ppc64/kernel/lparcfg.c:294:
+		printk(KERN_ERR "cpus_dn %p \n",cpus_dn);
 		                               ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#499: FILE: arch/ppc64/kernel/lparcfg.c:294:
+		printk(KERN_ERR "cpus_dn %p \n",cpus_dn);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#508: FILE: arch/ppc64/kernel/lparcfg.c:302:
+static int lparcfg_data(struct seq_file *m, void *v)
  {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#530: FILE: arch/ppc64/kernel/lparcfg.c:316:
+^I^Ilp_index_ptr = (unsigned int *)get_property(rootdn, $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#532: FILE: arch/ppc64/kernel/lparcfg.c:317:
+		if (lp_index_ptr) lp_index = *lp_index_ptr;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#547: FILE: arch/ppc64/kernel/lparcfg.c:321:
+	seq_printf(m,"%s %s \n",MODULE_NAME,MODULE_VERS);
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#547: FILE: arch/ppc64/kernel/lparcfg.c:321:
+	seq_printf(m,"%s %s \n",MODULE_NAME,MODULE_VERS);
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#547: FILE: arch/ppc64/kernel/lparcfg.c:321:
+	seq_printf(m,"%s %s \n",MODULE_NAME,MODULE_VERS);
 	                                   ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#547: FILE: arch/ppc64/kernel/lparcfg.c:321:
+	seq_printf(m,"%s %s \n",MODULE_NAME,MODULE_VERS);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#551: FILE: arch/ppc64/kernel/lparcfg.c:323:
+	seq_printf(m,"serial_number=%s\n", system_id);
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#555: FILE: arch/ppc64/kernel/lparcfg.c:325:
+	seq_printf(m,"system_type=%s\n", model);
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#557: FILE: arch/ppc64/kernel/lparcfg.c:327:
+	seq_printf(m,"partition_id=%d\n", (int)lp_index);
 	            ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#564: FILE: arch/ppc64/kernel/lparcfg.c:332:
+	if (lrdrp == NULL) {
[...]
  	} else {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lrdrp"
#564: FILE: arch/ppc64/kernel/lparcfg.c:332:
+	if (lrdrp == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required after that ',' (ctx:VxV)
#573: FILE: arch/ppc64/kernel/lparcfg.c:339:
+		unsigned long h_entitled,h_unallocated,h_aggregation,h_resource;
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#573: FILE: arch/ppc64/kernel/lparcfg.c:339:
+		unsigned long h_entitled,h_unallocated,h_aggregation,h_resource;
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#573: FILE: arch/ppc64/kernel/lparcfg.c:339:
+		unsigned long h_entitled,h_unallocated,h_aggregation,h_resource;
 		                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#574: FILE: arch/ppc64/kernel/lparcfg.c:340:
+		unsigned long pool_idle_time,pool_procs;
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#599: FILE: arch/ppc64/kernel/lparcfg.c:350:
+		h_pic(&pool_idle_time,&pool_procs);
 		                     ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#599: FILE: arch/ppc64/kernel/lparcfg.c:350:
+		h_pic(&pool_idle_time,&pool_procs);
 		                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#607: FILE: arch/ppc64/kernel/lparcfg.c:358:
+		seq_printf(m, "partition_entitled_capacity=%ld\n",
+			      h_entitled);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#610: FILE: arch/ppc64/kernel/lparcfg.c:361:
+		seq_printf(m, "pool=%ld\n",
+			      (h_aggregation >> 0*8) & 0xffff);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#610: FILE: arch/ppc64/kernel/lparcfg.c:361:
+			      (h_aggregation >> 0*8) & 0xffff);
 			                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#613: FILE: arch/ppc64/kernel/lparcfg.c:364:
+		seq_printf(m, "group=%ld\n",
+			      (h_aggregation >> 2*8) & 0xffff);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#613: FILE: arch/ppc64/kernel/lparcfg.c:364:
+			      (h_aggregation >> 2*8) & 0xffff);
 			                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#616: FILE: arch/ppc64/kernel/lparcfg.c:367:
+		seq_printf(m, "system_active_processors=%ld\n",
+			      (h_resource >> 0*8) & 0xffff);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#616: FILE: arch/ppc64/kernel/lparcfg.c:367:
+			      (h_resource >> 0*8) & 0xffff);
 			                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#619: FILE: arch/ppc64/kernel/lparcfg.c:370:
+		seq_printf(m, "pool_capacity=%ld\n",
  			      (h_resource >> 2*8) & 0xffff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#640: FILE: arch/ppc64/kernel/lparcfg.c:373:
+		seq_printf(m, "unallocated_capacity_weight=%ld\n",
+			      (h_resource >> 4*8) & 0xFF);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#640: FILE: arch/ppc64/kernel/lparcfg.c:373:
+			      (h_resource >> 4*8) & 0xFF);
 			                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#653: FILE: arch/ppc64/kernel/lparcfg.c:376:
+		seq_printf(m, "capacity_weight=%ld\n",
+			      (h_resource >> 5*8) & 0xFF);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#653: FILE: arch/ppc64/kernel/lparcfg.c:376:
+			      (h_resource >> 5*8) & 0xFF);
 			                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: arch/ppc64/kernel/lparcfg.c:379:
+		seq_printf(m, "capped=%ld\n",
+			      (h_resource >> 6*8) & 0x01);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#659: FILE: arch/ppc64/kernel/lparcfg.c:379:
+			      (h_resource >> 6*8) & 0x01);
 			                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#665: FILE: arch/ppc64/kernel/lparcfg.c:382:
+		seq_printf(m, "unallocated_capacity=%ld\n",
+			      h_unallocated);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#671: FILE: arch/ppc64/kernel/lparcfg.c:385:
+		seq_printf(m, "pool_idle_time=%ld\n",
+			      pool_idle_time);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#674: FILE: arch/ppc64/kernel/lparcfg.c:388:
+		seq_printf(m, "pool_num_procs=%ld\n",
+			      pool_procs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#679: FILE: arch/ppc64/kernel/lparcfg.c:391:
+		seq_printf(m, "purr=%ld\n",
+			      purr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#683: FILE: arch/ppc64/kernel/lparcfg.c:395:
+		seq_printf(m, "system_active_processors=%d\n",
+			      system_active_processors);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#688: FILE: arch/ppc64/kernel/lparcfg.c:398:
+		seq_printf(m, "system_potential_processors=%d\n",
+			      system_active_processors);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#693: FILE: arch/ppc64/kernel/lparcfg.c:401:
+		seq_printf(m, "partition_max_entitled_capacity=%d\n",
+			      100*system_active_processors);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#693: FILE: arch/ppc64/kernel/lparcfg.c:401:
+			      100*system_active_processors);
 			         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#698: FILE: arch/ppc64/kernel/lparcfg.c:404:
+		seq_printf(m, "partition_entitled_capacity=%d\n",
+			      system_active_processors*100);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#698: FILE: arch/ppc64/kernel/lparcfg.c:404:
+			      system_active_processors*100);
 			                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#702: FILE: arch/ppc64/kernel/lparcfg.c:408:
+	seq_printf(m, "partition_active_processors=%d\n",
+			(int) lparcfg_count_active_processors());

CHECK:SPACING: No space is necessary after a cast
#702: FILE: arch/ppc64/kernel/lparcfg.c:408:
+			(int) lparcfg_count_active_processors());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#705: FILE: arch/ppc64/kernel/lparcfg.c:411:
+	seq_printf(m, "partition_potential_processors=%d\n",
+			system_active_processors);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#708: FILE: arch/ppc64/kernel/lparcfg.c:414:
+	seq_printf(m, "shared_processor_mode=%d\n",
+			paca[0].xLpPaca.xSharedProc);

CHECK:CAMELCASE: Avoid CamelCase: <xLpPaca>
#708: FILE: arch/ppc64/kernel/lparcfg.c:414:
+			paca[0].xLpPaca.xSharedProc);

CHECK:CAMELCASE: Avoid CamelCase: <xSharedProc>
#708: FILE: arch/ppc64/kernel/lparcfg.c:414:
+			paca[0].xLpPaca.xSharedProc);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#763: FILE: arch/ppc64/kernel/lparcfg.c:515:
+	return single_open(file,lparcfg_data,NULL);
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#763: FILE: arch/ppc64/kernel/lparcfg.c:515:
+	return single_open(file,lparcfg_data,NULL);
 	                                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#769: FILE: arch/ppc64/kernel/lparcfg.c:520:
+	read:		seq_read,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#769: FILE: arch/ppc64/kernel/lparcfg.c:520:
+	read:		seq_read,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#771: FILE: arch/ppc64/kernel/lparcfg.c:522:
+	release:	single_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#771: FILE: arch/ppc64/kernel/lparcfg.c:522:
+	release:	single_release,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#786: FILE: arch/ppc64/kernel/viopath.c:111:
+unsigned char e2a(unsigned char x)
  {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000271176.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 83 errors, 32 warnings, 54 checks, 724 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000271176.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
