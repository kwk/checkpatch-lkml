WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#56: 
In ENOSPC or other error case, the data copied from the userspace is zeroed,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: fs/buffer.c:2030:
+					unmap_underlying_metadata(bh->b_bdev,
+								bh->b_blocknr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: fs/ext3/inode.c:1091:
+static int ext3_get_block_delay(struct inode *inode, sector_t iblock,
+			struct buffer_head *bh, int create)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: fs/ext3/inode.c:1106:
+static int ext3_get_block_delay_uptodate(handle_t *handle,
+		struct buffer_head *bh)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: fs/ext3/inode.c:1131:
+static int ext3_prepare_write(struct file *file, struct page *page,
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#164: FILE: fs/ext3/inode.c:1131:
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#164: FILE: fs/ext3/inode.c:1131:
+		unsigned from, unsigned to)

WARNING:LINE_SPACING: Missing a blank line after declarations
#171: FILE: fs/ext3/inode.c:1138:
+		struct inode *inode = page->mapping->host;
+		if (!page_has_buffers(page))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: fs/ext3/inode.c:1141:
+		ret = walk_page_buffers(NULL, page_buffers(page),
+				from, to, NULL, ext3_get_block_delay_uptodate);

CHECK:BRACES: Unbalanced braces around else statement
#177: FILE: fs/ext3/inode.c:1144:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: fs/ext3/inode.c:1146:
+		ret = block_prepare_write(page, from, to,
+				ext3_get_block_delay);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: fs/ext3/inode.c:1170:
+static void ext3_clear_delayed_buffers(struct page *page,
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#204: FILE: fs/ext3/inode.c:1170:
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#204: FILE: fs/ext3/inode.c:1170:
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#207: FILE: fs/ext3/inode.c:1173:
+	unsigned block_start, block_end;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#208: FILE: fs/ext3/inode.c:1174:
+	unsigned blocksize;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#213: FILE: fs/ext3/inode.c:1179:
+	for (	bh = head, block_start = 0;
+		bh != head || !block_start;
+	    	block_start = block_end, bh = next)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#213: FILE: fs/ext3/inode.c:1179:
+	for (	bh = head, block_start = 0;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: fs/ext3/inode.c:1181:
+^I    ^Iblock_start = block_end, bh = next)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#215: FILE: fs/ext3/inode.c:1181:
+^I    ^Iblock_start = block_end, bh = next)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: fs/ext3/inode.c:1203:
+static int ext3_map_write(struct file *file, struct page *page,
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#237: FILE: fs/ext3/inode.c:1203:
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#237: FILE: fs/ext3/inode.c:1203:
+		unsigned from, unsigned to)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000252468.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 11 warnings, 9 checks, 238 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000252468.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
