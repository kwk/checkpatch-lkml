WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
<Note : I think this patch also enable MIR/FIR operation, i.e. higher speeds>

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#94: FILE: include/net/irda/vlsi_ir.h:62:
+						 * i.e. PLL is powered, if NO_PD set */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#103: FILE: include/net/irda/vlsi_ir.h:74:
+						 * is detected, NO_PD gets set and CLKSTP cleared */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#132: FILE: include/net/irda/vlsi_ir.h:138:
+						 * unclear - not touched by driver */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#180: FILE: include/net/irda/vlsi_ir.h:224:
+#define RINGPTR_TX_MASK		((MAX_RING_DESCR-1)<<8)
                        		                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#180: FILE: include/net/irda/vlsi_ir.h:224:
+#define RINGPTR_TX_MASK		((MAX_RING_DESCR-1)<<8)
                        		                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#244: FILE: include/net/irda/vlsi_ir.h:403:
+#define BAUD_BITS(br)		((115200/(br))-1)
                      		        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#244: FILE: include/net/irda/vlsi_ir.h:403:
+#define BAUD_BITS(br)		((115200/(br))-1)
                      		              ^

WARNING:TYPO_SPELLING: 'legth' may be misspelled - perhaps 'length'?
#253: FILE: include/net/irda/vlsi_ir.h:448:
+/* specifies the maximum legth (up to 4k - or (4k-1)? - bytes), which a
                          ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: include/net/irda/vlsi_ir.h:461:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: include/net/irda/vlsi_ir.h:461:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: include/net/irda/vlsi_ir.h:463:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: include/net/irda/vlsi_ir.h:463:
+ $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#273: FILE: include/net/irda/vlsi_ir.h:464:
+#define XFER_BUF_SIZE		(2*IRDA_MTU)
                      		  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#276: FILE: include/net/irda/vlsi_ir.h:466:
+#define MAX_PACKET_LENGTH	(XFER_BUF_SIZE-1) /* register uses only [11:0] */
                          	              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#297: FILE: include/net/irda/vlsi_ir.h:552:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#299: FILE: include/net/irda/vlsi_ir.h:554:
+	unsigned		size;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#300: FILE: include/net/irda/vlsi_ir.h:555:
+	unsigned		mask;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#301: FILE: include/net/irda/vlsi_ir.h:556:
+	unsigned		head, tail;

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#362: FILE: drivers/net/irda/vlsi_ir.c:58:
 static struct pci_device_id vlsi_irda_table [] __devinitdata = { {

WARNING:INDENTED_LABEL: labels should not be indented
#365: FILE: drivers/net/irda/vlsi_ir.c:60:
+	class:          PCI_CLASS_WIRELESS_IRDA << 8,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#385: FILE: drivers/net/irda/vlsi_ir.c:96:
+static int ringsize[] = {8,8};		/* default is tx=rx=8 */
                           ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#431: FILE: drivers/net/irda/vlsi_ir.c:133:
+static inline int rd_is_active(struct vlsi_ring *r, unsigned i)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#436: FILE: drivers/net/irda/vlsi_ir.c:138:
+static inline void rd_activate(struct vlsi_ring *r, unsigned i)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#443: FILE: drivers/net/irda/vlsi_ir.c:143:
+static inline void rd_set_addr_status(struct vlsi_ring *r, unsigned i, dma_addr_t a, u8 s)

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#446: FILE: drivers/net/irda/vlsi_ir.c:145:
+	struct ring_descr *rd = r->hw +i;
 	                              ^

WARNING:TYPO_SPELLING: 'overlayed' may be misspelled - perhaps 'overlaid'?
#449: FILE: drivers/net/irda/vlsi_ir.c:148:
+	 *  - overlayed: writing addr overwrites status
 	      ^^^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#455: FILE: drivers/net/irda/vlsi_ir.c:154:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:MEMORY_BARRIER: memory barrier without comment
#462: FILE: drivers/net/irda/vlsi_ir.c:160:
+	wmb();

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#467: FILE: drivers/net/irda/vlsi_ir.c:164:
+static inline void rd_set_status(struct vlsi_ring *r, unsigned i, u8 s)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#474: FILE: drivers/net/irda/vlsi_ir.c:169:
+static inline void rd_set_count(struct vlsi_ring *r, unsigned i, u16 c)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#481: FILE: drivers/net/irda/vlsi_ir.c:174:
+static inline u8 rd_get_status(struct vlsi_ring *r, unsigned i)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#488: FILE: drivers/net/irda/vlsi_ir.c:179:
+static inline dma_addr_t rd_get_addr(struct vlsi_ring *r, unsigned i)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#498: FILE: drivers/net/irda/vlsi_ir.c:187:
+static inline u16 rd_get_count(struct vlsi_ring *r, unsigned i)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#547: FILE: drivers/net/irda/vlsi_ir.c:221:
+static void vlsi_reg_debug(unsigned iobase, const char *s)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#577: FILE: drivers/net/irda/vlsi_ir.c:266:
 			}
+			else			/* was: clksrc=0(auto) */

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#584: FILE: drivers/net/irda/vlsi_ir.c:272:
 		}
+		else { /* got successful PLL lock */

CHECK:BRACES: Unbalanced braces around else statement
#584: FILE: drivers/net/irda/vlsi_ir.c:272:
+		else { /* got successful PLL lock */

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#592: FILE: drivers/net/irda/vlsi_ir.c:279:
+	   the external clock source was explicitly specified */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#601: FILE: drivers/net/irda/vlsi_ir.c:332:
 
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#606: FILE: drivers/net/irda/vlsi_ir.c:335:
+	unsigned	i;

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#607: FILE: drivers/net/irda/vlsi_ir.c:336:
+	dma_addr_t	ba;
 	          	^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!r->buf[i].data"
#614: FILE: drivers/net/irda/vlsi_ir.c:339:
+		if (r->buf[i].data == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#615: FILE: drivers/net/irda/vlsi_ir.c:340:
+			BUG();

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#616: FILE: drivers/net/irda/vlsi_ir.c:341:
+		ba = virt_to_bus(r->buf[i].data);
 		^^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#617: FILE: drivers/net/irda/vlsi_ir.c:342:
+		rd_set_addr_status(r, i, ba, RD_STAT_ACTIVE);
 		                         ^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#623: FILE: drivers/net/irda/vlsi_ir.c:348:
+	unsigned	i, j;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#632: FILE: drivers/net/irda/vlsi_ir.c:350:
+	r->head = r->tail = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#636: FILE: drivers/net/irda/vlsi_ir.c:354:
+		r->buf[i].data = kmalloc(XFER_BUF_SIZE, GFP_KERNEL|GFP_DMA);
 		                                                  ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!r->buf[i].data"
#637: FILE: drivers/net/irda/vlsi_ir.c:355:
+		if (r->buf[i].data == NULL) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#663: FILE: drivers/net/irda/vlsi_ir.c:368:
+	unsigned	i;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!r->buf[i].data"
#666: FILE: drivers/net/irda/vlsi_ir.c:371:
+		if (r->buf[i].data == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#668: FILE: drivers/net/irda/vlsi_ir.c:373:
+		if (r->buf[i].skb) {
[...]
-		idev->ring_buf[i].head = buf;
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#675: FILE: drivers/net/irda/vlsi_ir.c:377:
 		}
+		else

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#686: FILE: drivers/net/irda/vlsi_ir.c:386:
+^Ichar ^I^I *ringarea;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#705: FILE: drivers/net/irda/vlsi_ir.c:398:
+^I^Iringsize[0], ringsize[1], ringarea, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#731: FILE: drivers/net/irda/vlsi_ir.c:415:
+	pci_free_consistent(idev->pdev, RING_AREA_SIZE,
+		ringarea, idev->busaddr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#732: FILE: drivers/net/irda/vlsi_ir.c:416:
+	printk(KERN_ERR "%s: insufficient memory for ring buffers\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#733: FILE: drivers/net/irda/vlsi_ir.c:417:
+	printk(KERN_ERR "%s: insufficient memory for ring buffers\n",
+		__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#733: FILE: drivers/net/irda/vlsi_ir.c:417:
+		__FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#743: FILE: drivers/net/irda/vlsi_ir.c:432:
+^Iunsigned iobase; $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#743: FILE: drivers/net/irda/vlsi_ir.c:432:
+	unsigned iobase; 

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#752: FILE: drivers/net/irda/vlsi_ir.c:455:
+		nphyctl = PHYCTL_MIR(clksrc==3);
 		                           ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#770: FILE: drivers/net/irda/vlsi_ir.c:529:
+	unsigned	iobase;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#781: FILE: drivers/net/irda/vlsi_ir.c:536:
+	outw(0, iobase+VLSI_PIO_IRENABLE);	/* disable IrPHY-interface */
 	              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#791: FILE: drivers/net/irda/vlsi_ir.c:548:
+	outw(MAX_PACKET_LENGTH, iobase+VLSI_PIO_MAXPKT);  /* max possible value=0x0fff */
 	                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#798: FILE: drivers/net/irda/vlsi_ir.c:553:
+^I^Iiobase+VLSI_PIO_RINGSIZE);^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#798: FILE: drivers/net/irda/vlsi_ir.c:553:
+	outw(TX_RX_TO_RINGSIZE(idev->tx_ring.size, idev->rx_ring.size),
+		iobase+VLSI_PIO_RINGSIZE);	

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#798: FILE: drivers/net/irda/vlsi_ir.c:553:
+		iobase+VLSI_PIO_RINGSIZE);	
 		      ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#803: FILE: drivers/net/irda/vlsi_ir.c:556:
+	idev->rx_ring.head = idev->rx_ring.tail = RINGPTR_GET_RX(ptr);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#804: FILE: drivers/net/irda/vlsi_ir.c:557:
+	idev->tx_ring.head = idev->tx_ring.tail = RINGPTR_GET_TX(ptr);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#813: FILE: drivers/net/irda/vlsi_ir.c:568:
+	outb(IRINTR_INT_MASK, iobase+VLSI_PIO_IRINTR);	/* just in case - w/c pending IRQ's */
 	                            ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#831: FILE: drivers/net/irda/vlsi_ir.c:590:
+			BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#837: FILE: drivers/net/irda/vlsi_ir.c:596:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#882: FILE: drivers/net/irda/vlsi_ir.c:612:
+^I^I^Iif (status & RX_STAT_OVER)  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#884: FILE: drivers/net/irda/vlsi_ir.c:614:
+^I^I^Iif (status & RX_STAT_LENGTH)  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#886: FILE: drivers/net/irda/vlsi_ir.c:616:
+^I^I^Iif (status & RX_STAT_PHYERR)  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#888: FILE: drivers/net/irda/vlsi_ir.c:618:
+^I^I^Iif (status & RX_STAT_CRCERR)  $

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#891: FILE: drivers/net/irda/vlsi_ir.c:621:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#891: FILE: drivers/net/irda/vlsi_ir.c:621:
+		else {

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#893: FILE: drivers/net/irda/vlsi_ir.c:623:
+			crclen = (idev->mode==IFF_FIR) ? sizeof(u32) : sizeof(u16);
 			                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#895: FILE: drivers/net/irda/vlsi_ir.c:625:
+				printk(KERN_ERR "%s: strange frame (len=%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#896: FILE: drivers/net/irda/vlsi_ir.c:626:
+				printk(KERN_ERR "%s: strange frame (len=%d)\n",
+					__FUNCTION__, len);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#896: FILE: drivers/net/irda/vlsi_ir.c:626:
+					__FUNCTION__, len);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#900: FILE: drivers/net/irda/vlsi_ir.c:630:
+			skb = dev_alloc_skb(len+1);
 			                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#903: FILE: drivers/net/irda/vlsi_ir.c:633:
+				skb_reserve(skb,1);
 				               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#904: FILE: drivers/net/irda/vlsi_ir.c:634:
+				memcpy(skb_put(skb,len), r->buf[r->tail].data, len);
 				                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#909: FILE: drivers/net/irda/vlsi_ir.c:639:
+^I^I^I^Inetif_rx(skb);^I^I^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#936: FILE: drivers/net/irda/vlsi_ir.c:643:
+				printk(KERN_ERR "%s: rx packet dropped\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#936: FILE: drivers/net/irda/vlsi_ir.c:643:
+				printk(KERN_ERR "%s: rx packet dropped\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#946: FILE: drivers/net/irda/vlsi_ir.c:650:
+			printk(KERN_WARNING "%s: rx ring exhausted\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#946: FILE: drivers/net/irda/vlsi_ir.c:650:
+			printk(KERN_WARNING "%s: rx ring exhausted\n", __FUNCTION__);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#974: FILE: drivers/net/irda/vlsi_ir.c:660:
+	outw(0, ndev->base_addr+VLSI_PIO_PROMPT);
 	                       ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#986: FILE: drivers/net/irda/vlsi_ir.c:670:
+	unsigned	iobase;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1030: FILE: drivers/net/irda/vlsi_ir.c:685:
 		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#1030: FILE: drivers/net/irda/vlsi_ir.c:685:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1054: FILE: drivers/net/irda/vlsi_ir.c:703:
+	if (r->head == r->tail) {	/* tx ring empty: re-enable rx */
[...]
 	else
[...]

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1056: FILE: drivers/net/irda/vlsi_ir.c:705:
+		outw(0, iobase+VLSI_PIO_IRENABLE);
 		              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1057: FILE: drivers/net/irda/vlsi_ir.c:706:
+		config = inw(iobase+VLSI_PIO_IRCFG);
 		                   ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#1058: FILE: drivers/net/irda/vlsi_ir.c:707:
+		mb();

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1059: FILE: drivers/net/irda/vlsi_ir.c:708:
+		outw((config & ~IRCFG_ENTX) | IRCFG_ENRX, iobase+VLSI_PIO_IRCFG);
 		                                                ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#1060: FILE: drivers/net/irda/vlsi_ir.c:709:
+		wmb();

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1061: FILE: drivers/net/irda/vlsi_ir.c:710:
+		outw(IRENABLE_IREN, iobase+VLSI_PIO_IRENABLE);
 		                          ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1082: FILE: drivers/net/irda/vlsi_ir.c:726:
+#if 0	/* disable ACTIVITY handling for now */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1097: FILE: drivers/net/irda/vlsi_ir.c:739:
+	unsigned	iobase;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1100: FILE: drivers/net/irda/vlsi_ir.c:741:
+^Iint ^I^Iboguscount = 32;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1102: FILE: drivers/net/irda/vlsi_ir.c:743:
+	unsigned	got_act;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1116: FILE: drivers/net/irda/vlsi_ir.c:766:
+#if 0	/* disable ACTIVITY handling for now */

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1118: FILE: drivers/net/irda/vlsi_ir.c:768:
+		if (got_act  &&  irintr==IRINTR_ACTIVITY) /* nothing new */
 		                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1121: FILE: drivers/net/irda/vlsi_ir.c:771:
+		if ((irintr&IRINTR_ACTIVITY) && !(irintr^IRINTR_ACTIVITY) ) {
 		           ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#1121: FILE: drivers/net/irda/vlsi_ir.c:771:
+		if ((irintr&IRINTR_ACTIVITY) && !(irintr^IRINTR_ACTIVITY) ) {
 		                                        ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1121: FILE: drivers/net/irda/vlsi_ir.c:771:
+		if ((irintr&IRINTR_ACTIVITY) && !(irintr^IRINTR_ACTIVITY) ) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1133: FILE: drivers/net/irda/vlsi_ir.c:795:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1135: FILE: drivers/net/irda/vlsi_ir.c:797:
+ * some occasional situations where the hardware fails (symptoms are $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1143: FILE: drivers/net/irda/vlsi_ir.c:805:
+static inline void vlsi_clear_regs(unsigned iobase)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1145: FILE: drivers/net/irda/vlsi_ir.c:807:
+	unsigned	i;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1146: FILE: drivers/net/irda/vlsi_ir.c:808:
+	const unsigned	chip_io_extent = 32;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1152: FILE: drivers/net/irda/vlsi_ir.c:814:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1176: FILE: drivers/net/irda/vlsi_ir.c:833:
+	outb(IRINTR_INT_MASK, ndev->base_addr+VLSI_PIO_IRINTR);
 	                                     ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1217: FILE: drivers/net/irda/vlsi_ir.c:876:
+	sprintf(hwname, "VLSI-FIR @ 0x%04x", (unsigned)ndev->base_addr);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1259: FILE: drivers/net/irda/vlsi_ir.c:926:
+		pci_free_consistent(idev->pdev,RING_AREA_SIZE,idev->virtaddr,idev->busaddr);
 		                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1259: FILE: drivers/net/irda/vlsi_ir.c:926:
+		pci_free_consistent(idev->pdev,RING_AREA_SIZE,idev->virtaddr,idev->busaddr);
 		                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1259: FILE: drivers/net/irda/vlsi_ir.c:926:
+		pci_free_consistent(idev->pdev,RING_AREA_SIZE,idev->virtaddr,idev->busaddr);
 		                                                            ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1282: FILE: drivers/net/irda/vlsi_ir.c:954:
+	unsigned iobase;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1304: FILE: drivers/net/irda/vlsi_ir.c:977:
+		printk(KERN_ERR "%s: blocking 0-size packet???\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1305: FILE: drivers/net/irda/vlsi_ir.c:978:
+		printk(KERN_ERR "%s: blocking 0-size packet???\n",
+			__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1305: FILE: drivers/net/irda/vlsi_ir.c:978:
+			__FUNCTION__);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1315: FILE: drivers/net/irda/vlsi_ir.c:986:
+		BUG();

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1350: FILE: drivers/net/irda/vlsi_ir.c:1004:
+		__FUNCTION__, r->head,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1352: FILE: drivers/net/irda/vlsi_ir.c:1006:
+		(unsigned)idev->ring_hw[r->head].rd_status,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1357: FILE: drivers/net/irda/vlsi_ir.c:1011:
 
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1360: FILE: drivers/net/irda/vlsi_ir.c:1014:
+	if ((mtt = irda_get_mtt(skb)) > 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1361: FILE: drivers/net/irda/vlsi_ir.c:1015:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1361: FILE: drivers/net/irda/vlsi_ir.c:1015:
+	if ((mtt = irda_get_mtt(skb)) > 0) {
+	

ERROR:SPACING: space required before the open parenthesis '('
#1368: FILE: drivers/net/irda/vlsi_ir.c:1022:
+		for(;;) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1371: FILE: drivers/net/irda/vlsi_ir.c:1025:
+			if (now.tv_sec > ready.tv_sec
+			    ||  (now.tv_sec==ready.tv_sec && now.tv_usec>=ready.tv_usec))

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1371: FILE: drivers/net/irda/vlsi_ir.c:1025:
+			    ||  (now.tv_sec==ready.tv_sec && now.tv_usec>=ready.tv_usec))
 			                   ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#1371: FILE: drivers/net/irda/vlsi_ir.c:1025:
+			    ||  (now.tv_sec==ready.tv_sec && now.tv_usec>=ready.tv_usec))
 			                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1372: FILE: drivers/net/irda/vlsi_ir.c:1026:
+^I^I^I    ^Ibreak;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1372: FILE: drivers/net/irda/vlsi_ir.c:1026:
+^I^I^I    ^Ibreak;$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1373: FILE: drivers/net/irda/vlsi_ir.c:1027:
+			udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1406: FILE: drivers/net/irda/vlsi_ir.c:1047:
 
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1410: FILE: drivers/net/irda/vlsi_ir.c:1050:
+	spin_lock_irqsave(&idev->lock,flags);
 	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1419: FILE: drivers/net/irda/vlsi_ir.c:1055:
+	if (!(inw(iobase+VLSI_PIO_IRENABLE) & IRENABLE_ENTXST)) {
 	                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1420: FILE: drivers/net/irda/vlsi_ir.c:1056:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1420: FILE: drivers/net/irda/vlsi_ir.c:1056:
+	if (!(inw(iobase+VLSI_PIO_IRENABLE) & IRENABLE_ENTXST)) {
+	

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1443: FILE: drivers/net/irda/vlsi_ir.c:1072:
+			__FUNCTION__, r->head, r->tail);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1444: FILE: drivers/net/irda/vlsi_ir.c:1073:
+#if 0

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1450: FILE: drivers/net/irda/vlsi_ir.c:1075:
+			__FUNCTION__, r->tail,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1452: FILE: drivers/net/irda/vlsi_ir.c:1077:
+			(unsigned)r->hw[r->tail].rd_status,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1461: FILE: drivers/net/irda/vlsi_ir.c:1085:
+^Idev_kfree_skb(skb);^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1510: FILE: drivers/net/irda/vlsi_ir.c:1207:
+	printk(KERN_INFO "%s: IrDA PCI controller %s detected\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1511: FILE: drivers/net/irda/vlsi_ir.c:1208:
+	printk(KERN_INFO "%s: IrDA PCI controller %s detected\n",
+		drivername, pdev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1547: FILE: drivers/net/irda/vlsi_ir.c:1304:
+		printk(KERN_ERR "%s: invalid clksrc=%d\n", drivername, clksrc);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1557: FILE: drivers/net/irda/vlsi_ir.c:1309:
+		switch(ringsize[i]) {
+			case 4:
+			case 8:
+			case 16:
+			case 32:
+			case 64:
[...]
+			default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#1557: FILE: drivers/net/irda/vlsi_ir.c:1309:
+		switch(ringsize[i]) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1565: FILE: drivers/net/irda/vlsi_ir.c:1317:
+				printk(KERN_WARNING "%s: invalid %s ringsize %d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1566: FILE: drivers/net/irda/vlsi_ir.c:1318:
+				printk(KERN_WARNING "%s: invalid %s ringsize %d",
+					drivername, (i)?"rx":"tx", ringsize[i]);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1566: FILE: drivers/net/irda/vlsi_ir.c:1318:
+					drivername, (i)?"rx":"tx", ringsize[i]);
 					               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1566: FILE: drivers/net/irda/vlsi_ir.c:1318:
+					drivername, (i)?"rx":"tx", ringsize[i]);
 					                    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1567: FILE: drivers/net/irda/vlsi_ir.c:1319:
+				printk(", using default=8\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000509148.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 37 errors, 71 warnings, 53 checks, 1470 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000509148.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
