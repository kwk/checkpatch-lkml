WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
The allocator can be easily modified to use __per_cpu_offset[] table at a later

ERROR:SPACING: space required after that ',' (ctx:VxV)
#108: FILE: include/linux/kernel.h:32:
+#define IS_ALIGNED(x,a) (!(((a) - 1) & (x)))
                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#109: FILE: include/linux/kernel.h:33:
+#define IS_POWEROFTWO(x) (!(((x) - 1) & (x)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#128: FILE: include/linux/percpu.h:20:
+#define PCPU_CURR_SIZE        (sizeof (int))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#151: FILE: include/linux/percpu.h:55:
+	((type *)(__alloc_percpu(ALIGN(sizeof (type), PCPU_CURR_SIZE),  __alignof__(type))))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#167: FILE: mm/percpu.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#181: FILE: mm/percpu.c:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#182: FILE: mm/percpu.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: mm/percpu.c:21:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: mm/percpu.c:23:
+ * This reimplements alloc_percpu to make it $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: mm/percpu.c:26:
+ * 3. Use simple pointer arithmetic $

WARNING:TYPO_SPELLING: 'subsytem' may be misspelled - perhaps 'subsystem'?
#195: FILE: mm/percpu.c:29:
+ * Allocator is slow -- expected to be called during module/subsytem
                                                             ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#206: FILE: mm/percpu.c:40:
+#include <asm/pgtable.h>

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#210: FILE: mm/percpu.c:44:
+#define OBJS_PER_BLOCK	(PCPU_BLKSIZE/PCPU_CURR_SIZE)
                       	             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#211: FILE: mm/percpu.c:45:
+#define	BITMAP_ARR_SIZE (OBJS_PER_BLOCK/(sizeof (unsigned long) * 8))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#211: FILE: mm/percpu.c:45:
+#define	BITMAP_ARR_SIZE (OBJS_PER_BLOCK/(sizeof (unsigned long) * 8))
        	                               ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#226: FILE: mm/percpu.c:60:
+#define BLK_SIZE_USED(listpos) (list_entry(listpos, ^I^I ^I      \$

WARNING:TYPO_SPELLING: 'maintanance' may be misspelled - perhaps 'maintenance'?
#229: FILE: mm/percpu.c:63:
+/* Block list maintanance */
               ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: mm/percpu.c:70:
+/* $

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#248: FILE: mm/percpu.c:82:
+static struct buf_ctl *buf_head = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#252: FILE: mm/percpu.c:86:
+^Iint extra = sizeof (struct buf_ctl)*OBJS_PER_BLOCK ^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#252: FILE: mm/percpu.c:86:
+	int extra = sizeof (struct buf_ctl)*OBJS_PER_BLOCK 		\

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#252: FILE: mm/percpu.c:86:
+	int extra = sizeof (struct buf_ctl)*OBJS_PER_BLOCK 		\
 	                                   ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#253: FILE: mm/percpu.c:87:
+^I^I^I^I+ sizeof (struct pcpu_block); ^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#253: FILE: mm/percpu.c:87:
+				+ sizeof (struct pcpu_block); 		\

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: mm/percpu.c:105:
+ * Allocate PCPU_BLKSIZE * NR_CPUS + BLOCK_MANAGEMENT_SIZE  worth of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: mm/percpu.c:106:
+ * contiguous kva space, and PCPU_BLKSIZE amount of node local $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#285: FILE: mm/percpu.c:119:
+	BUG_ON(!IS_ALIGNED(PCPU_BLKSIZE, PAGE_SIZE));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#286: FILE: mm/percpu.c:120:
+	BUG_ON(!PCPU_BLKSIZE);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#291: FILE: mm/percpu.c:125:
+		pages[i] = alloc_pages(GFP_KERNEL|__GFP_HIGHMEM|__GFP_ZERO, 0);
 		                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#291: FILE: mm/percpu.c:125:
+		pages[i] = alloc_pages(GFP_KERNEL|__GFP_HIGHMEM|__GFP_ZERO, 0);
 		                                               ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#306: FILE: mm/percpu.c:140:
+	tmp.addr = area->addr + NR_CPUS * PCPU_BLKSIZE;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#312: FILE: mm/percpu.c:146:
+	blkp = area->addr + NR_CPUS * PCPU_BLKSIZE;

WARNING:LINE_SPACING: Missing a blank line after declarations
#320: FILE: mm/percpu.c:154:
+		int start_idx = i * cpu_pages;
+		for (j = start_idx; j < start_idx + cpu_pages; j++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#355: FILE: mm/percpu.c:189:
+	i = NR_CPUS - 1;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#365: FILE: mm/percpu.c:199:
+	tmp.addr = area->addr + NR_CPUS * PCPU_BLKSIZE;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#372: FILE: mm/percpu.c:206:
+	BUG_ON(!area);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#411: FILE: mm/percpu.c:245:
+	tmp.addr = addr + NR_CPUS * PCPU_BLKSIZE;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#421: FILE: mm/percpu.c:255:
+	BUG_ON(!area);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#423: FILE: mm/percpu.c:257:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'asceding' may be misspelled - perhaps 'ascending'?
#475: FILE: mm/percpu.c:309:
+/* Compare routine for qsort -- for asceding order */
                                     ^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#480: FILE: mm/percpu.c:314:
+	sa = (struct obj_map_elmt *) a;

CHECK:SPACING: No space is necessary after a cast
#481: FILE: mm/percpu.c:315:
+	sb = (struct obj_map_elmt *) b;

CHECK:BRACES: braces {} should be used on all arms of this statement
#488: FILE: mm/percpu.c:322:
+	if (buf_head == NULL)
[...]
+	else {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf_head"
#488: FILE: mm/percpu.c:322:
+	if (buf_head == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Unbalanced braces around else statement
#490: FILE: mm/percpu.c:324:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#502: FILE: mm/percpu.c:336:
+		if (BLK_SIZE_USED(pos) < blkp->size_used) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#507: FILE: mm/percpu.c:341:
+		} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#525: FILE: mm/percpu.c:359:
+	int head = blkp->bufctl_fl_head;
+	BUG_ON(head == -1);	/* If bufctls for this block has exhausted */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#525: FILE: mm/percpu.c:359:
+	BUG_ON(head == -1);	/* If bufctls for this block has exhausted */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#527: FILE: mm/percpu.c:361:
+	BUG_ON(head >= OBJS_PER_BLOCK);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#528: FILE: mm/percpu.c:362:
+	bufctl = (void *) blkp + sizeof (struct pcpu_block) +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#529: FILE: mm/percpu.c:363:
+	    sizeof (struct buf_ctl) * head;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#550: FILE: mm/percpu.c:384:
+	qsort(obj_map, nr_elements, sizeof (obj_map[0]), obj_map_cmp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#559: FILE: mm/percpu.c:393:
+^I/* chunk of obj_size >= size is found, check for suitability (align) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#560: FILE: mm/percpu.c:394:
+^I * and alloc $

CHECK:SPACING: No space is necessary after a cast
#571: FILE: mm/percpu.c:405:
+	if (IS_ALIGNED((unsigned long) objp, align)) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#589: FILE: mm/percpu.c:423:
+		return objp;
+	} else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#592: FILE: mm/percpu.c:426:
+		int obj_size = (obj_endbit - obj_startbit + 1) * PCPU_CURR_SIZE;
+		if (obj_size > size && obj_startbit <= obj_endbit) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#594: FILE: mm/percpu.c:428:
+			/* Since obj_size is bigger than requested, check if
+			   alignment can be met by changing startbit */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#594: FILE: mm/percpu.c:428:
+			   alignment can be met by changing startbit */

WARNING:LINE_SPACING: Missing a blank line after declarations
#614: FILE: mm/percpu.c:448:
+	int cpu;
+	for_each_cpu(cpu)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#618: FILE: mm/percpu.c:452:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#626: FILE: mm/percpu.c:460:
+ * Should not be called from interrupt context $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#644: FILE: mm/percpu.c:478:
+		printk("alloc_percpu: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#645: FILE: mm/percpu.c:479:
+		printk("size %d requested is more than I can handle\n", size);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#649: FILE: mm/percpu.c:483:
+	BUG_ON(!IS_ALIGNED(size, PCPU_CURR_SIZE));

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#679: FILE: mm/percpu.c:513:
+
+}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#681: FILE: mm/percpu.c:515:
+EXPORT_SYMBOL(__alloc_percpu);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:BRACES: braces {} should be used on all arms of this statement
#693: FILE: mm/percpu.c:527:
+		if (BLK_SIZE_USED(pos) > blkp->size_used) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#698: FILE: mm/percpu.c:532:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#714: FILE: mm/percpu.c:548:
+^I^I^I/* If size_used of prev is same as fnof, fix fnof to $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#715: FILE: mm/percpu.c:549:
+			/* If size_used of prev is same as fnof, fix fnof to 
+			   point to topmost of the equal sized blocks */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#715: FILE: mm/percpu.c:549:
+			   point to topmost of the equal sized blocks */

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#738: FILE: mm/percpu.c:572:
+
+	}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#740: FILE: mm/percpu.c:574:
+
+}

CHECK:SPACING: No space is necessary after a cast
#744: FILE: mm/percpu.c:578:
+	int idx = ((void *) bufp - (void *) blkp - sizeof (struct pcpu_block))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#744: FILE: mm/percpu.c:578:
+	int idx = ((void *) bufp - (void *) blkp - sizeof (struct pcpu_block))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#745: FILE: mm/percpu.c:579:
+	    / sizeof (struct buf_ctl);

WARNING:LINE_SPACING: Missing a blank line after declarations
#756: FILE: mm/percpu.c:590:
+	struct pcpu_block *blkp;
+	blkp = list_entry(pos, struct pcpu_block, blklist);

WARNING:LINE_SPACING: Missing a blank line after declarations
#764: FILE: mm/percpu.c:598:
+		int nr_currency = bufp->size / PCPU_CURR_SIZE;
+		obj_startbit = (bufp->addr - blkp->start_addr) / PCPU_CURR_SIZE;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#770: FILE: mm/percpu.c:604:
+^I^I/* Fix firstnotfull if freeing block was firstnotfull $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#772: FILE: mm/percpu.c:606:
+		 * point to the first block from the head */

WARNING:LINE_SPACING: Missing a blank line after declarations
#777: FILE: mm/percpu.c:611:
+				unsigned int fnf_size_used;
+				fnf_size_used = BLK_SIZE_USED(firstnotfull);

WARNING:LINE_SPACING: Missing a blank line after declarations
#798: FILE: mm/percpu.c:632:
+		struct buf_ctl *tmp = buf_head;
+		while (tmp && tmp->next != bufp)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#800: FILE: mm/percpu.c:634:
+		BUG_ON(!tmp || tmp->next != bufp);

WARNING:RETURN_VOID: void function return statements are not generally useful
#808: FILE: mm/percpu.c:642:
+	return;
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#819: FILE: mm/percpu.c:653:
+	struct list_head *pos;
+	if (!objp)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#830: FILE: mm/percpu.c:664:
+	BUG_ON(!bufp);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#840: FILE: mm/percpu.c:674:
+	BUG_ON(pos == &blkhead);	/* Couldn't find obj in block list */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#842: FILE: mm/percpu.c:676:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#843: FILE: mm/percpu.c:677:
+^I * Mark the bitmap free, Update use count, fix the ordered $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#844: FILE: mm/percpu.c:678:
+^I * blklist, free the obj bufctl. $

WARNING:RETURN_VOID: void function return statements are not generally useful
#850: FILE: mm/percpu.c:684:
+	return;
+}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#852: FILE: mm/percpu.c:686:
+EXPORT_SYMBOL(free_percpu);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214639.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 55 warnings, 21 checks, 817 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214639.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
