WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
I first planed to this with nice C99 designed structs and compound literals,

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#66: 
Signed-Off-By: Fruhwirth Clemens <clemens@endorphin.org>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: crypto/cipher.c:53:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: crypto/cipher.c:54:
+ * Electronic Code Book (ECB) mode implementation $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: crypto/cipher.c:62:
+static int ecb_process_gw(void *_priv, int nsg, void **buf) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#186: FILE: crypto/cipher.c:65:
+	struct ecb_process_priv *priv = (struct ecb_process_priv *)_priv;
+	priv->crfn(crypto_tfm_ctx(priv->tfm), buf[0], buf[1]);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: crypto/cipher.c:70:
+^I               struct scatterlist *dst,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: crypto/cipher.c:70:
+static inline int ecb_template(struct crypto_tfm *tfm,
+	               struct scatterlist *dst,

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: crypto/cipher.c:71:
+                       struct scatterlist *src, unsigned int nbytes, cryptfn_t crfn)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: crypto/cipher.c:71:
+                       struct scatterlist *src, unsigned int nbytes, cryptfn_t crfn)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: crypto/cipher.c:75:
+^Istruct ecb_process_priv priv = { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: crypto/cipher.c:82:
+^Iscatterwalk_info_init(ecb_info+0, dst, bsize, (char[bsize]){}, $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#204: FILE: crypto/cipher.c:82:
+	scatterwalk_info_init(ecb_info+0, dst, bsize, (char[bsize]){}, 
 	                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#204: FILE: crypto/cipher.c:82:
+	scatterwalk_info_init(ecb_info+0, dst, bsize, (char[bsize]){}, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: crypto/cipher.c:84:
+^Iscatterwalk_info_init(ecb_info+1, src, bsize, (char[bsize]){}, $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#206: FILE: crypto/cipher.c:84:
+	scatterwalk_info_init(ecb_info+1, src, bsize, (char[bsize]){}, 
 	                              ^

ERROR:SPACING: space required before the open brace '{'
#206: FILE: crypto/cipher.c:84:
+	scatterwalk_info_init(ecb_info+1, src, bsize, (char[bsize]){}, 

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#208: FILE: crypto/cipher.c:86:
+	scatterwalk_info_endtag(ecb_info+2);
 	                                ^

ERROR:SPACING: space required before the open parenthesis '('
#210: FILE: crypto/cipher.c:88:
+	if(!nbytes)

ERROR:SPACING: space required before the open parenthesis '('
#212: FILE: crypto/cipher.c:90:
+	if(nbytes % bsize) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#217: FILE: crypto/cipher.c:95:
+	return scatterwalk_walk(ecb_process_gw, &priv, nbytes/bsize, ecb_info);
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#228: FILE: crypto/cipher.c:103:
+	return ecb_template(tfm,dst,src,nbytes,tfm->__crt_alg->cra_cipher.cia_encrypt);
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#228: FILE: crypto/cipher.c:103:
+	return ecb_template(tfm,dst,src,nbytes,tfm->__crt_alg->cra_cipher.cia_encrypt);
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#228: FILE: crypto/cipher.c:103:
+	return ecb_template(tfm,dst,src,nbytes,tfm->__crt_alg->cra_cipher.cia_encrypt);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#228: FILE: crypto/cipher.c:103:
+	return ecb_template(tfm,dst,src,nbytes,tfm->__crt_alg->cra_cipher.cia_encrypt);
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#240: FILE: crypto/cipher.c:111:
+	return ecb_template(tfm,dst,src,nbytes,tfm->__crt_alg->cra_cipher.cia_decrypt);
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#240: FILE: crypto/cipher.c:111:
+	return ecb_template(tfm,dst,src,nbytes,tfm->__crt_alg->cra_cipher.cia_decrypt);
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#240: FILE: crypto/cipher.c:111:
+	return ecb_template(tfm,dst,src,nbytes,tfm->__crt_alg->cra_cipher.cia_decrypt);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#240: FILE: crypto/cipher.c:111:
+	return ecb_template(tfm,dst,src,nbytes,tfm->__crt_alg->cra_cipher.cia_decrypt);
 	                                      ^

CHECK:CAMELCASE: Avoid CamelCase: <curIV>
#249: FILE: crypto/cipher.c:120:
+	u8 *curIV;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <nextIV>
#250: FILE: crypto/cipher.c:121:
+	u8 *nextIV;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: crypto/cipher.c:124:
+static int cbc_process_gw(void *_priv, int nsg, void **buf) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: crypto/cipher.c:132:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#271: FILE: crypto/cipher.c:142:
+		memcpy(priv->nextIV,src,bsize);
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#271: FILE: crypto/cipher.c:142:
+		memcpy(priv->nextIV,src,bsize);
 		                       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#280: FILE: crypto/cipher.c:151:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#300: FILE: crypto/cipher.c:168:
+	if(!nbytes)

ERROR:SPACING: space required before the open parenthesis '('
#302: FILE: crypto/cipher.c:170:
+	if(nbytes % bsize) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: crypto/cipher.c:175:
+^Iscatterwalk_info_init(cbc_info+0, dst, bsize, (char[bsize]){}, $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#307: FILE: crypto/cipher.c:175:
+	scatterwalk_info_init(cbc_info+0, dst, bsize, (char[bsize]){}, 
 	                              ^

ERROR:SPACING: space required before the open brace '{'
#307: FILE: crypto/cipher.c:175:
+	scatterwalk_info_init(cbc_info+0, dst, bsize, (char[bsize]){}, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#309: FILE: crypto/cipher.c:177:
+^Iscatterwalk_info_init(cbc_info+1, src, bsize, (char[bsize]){}, $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#309: FILE: crypto/cipher.c:177:
+	scatterwalk_info_init(cbc_info+1, src, bsize, (char[bsize]){}, 
 	                              ^

ERROR:SPACING: space required before the open brace '{'
#309: FILE: crypto/cipher.c:177:
+	scatterwalk_info_init(cbc_info+1, src, bsize, (char[bsize]){}, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: crypto/cipher.c:178:
+^I^I^I      SCATTERWALK_IO_INPUT); $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#311: FILE: crypto/cipher.c:179:
+	scatterwalk_info_endtag(cbc_info+2);
 	                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: crypto/cipher.c:181:
+ ^Ireturn scatterwalk_walk(cbc_process_gw, &priv, nbytes/bsize, cbc_info);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#313: FILE: crypto/cipher.c:181:
+ ^Ireturn scatterwalk_walk(cbc_process_gw, &priv, nbytes/bsize, cbc_info);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: crypto/cipher.c:181:
+ ^Ireturn scatterwalk_walk(cbc_process_gw, &priv, nbytes/bsize, cbc_info);$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#313: FILE: crypto/cipher.c:181:
+ 	return scatterwalk_walk(cbc_process_gw, &priv, nbytes/bsize, cbc_info);
  	                                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: crypto/cipher.c:185:
+                          struct scatterlist *dst,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: crypto/cipher.c:185:
+                          struct scatterlist *dst,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: crypto/cipher.c:186:
+                          struct scatterlist *src,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: crypto/cipher.c:186:
+                          struct scatterlist *src,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: crypto/cipher.c:187:
+                          unsigned int nbytes, u8 *iv)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: crypto/cipher.c:187:
+                          unsigned int nbytes, u8 *iv)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: crypto/cipher.c:192:
+^Ichar scratch1[bsize]; $

ERROR:SPACING: space required before the open parenthesis '('
#335: FILE: crypto/cipher.c:203:
+	if(!nbytes)

ERROR:SPACING: space required before the open parenthesis '('
#337: FILE: crypto/cipher.c:205:
+	if(nbytes % bsize) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#342: FILE: crypto/cipher.c:210:
+	scatterwalk_info_init(cbc_info+0, dst, bsize, (char[bsize]){}, SCATTERWALK_IO_OUTPUT);
 	                              ^

ERROR:SPACING: space required before the open brace '{'
#342: FILE: crypto/cipher.c:210:
+	scatterwalk_info_init(cbc_info+0, dst, bsize, (char[bsize]){}, SCATTERWALK_IO_OUTPUT);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#343: FILE: crypto/cipher.c:211:
+	scatterwalk_info_init(cbc_info+1, src, bsize, (char[bsize]){}, SCATTERWALK_IO_INPUT);
 	                              ^

ERROR:SPACING: space required before the open brace '{'
#343: FILE: crypto/cipher.c:211:
+	scatterwalk_info_init(cbc_info+1, src, bsize, (char[bsize]){}, SCATTERWALK_IO_INPUT);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#344: FILE: crypto/cipher.c:212:
+	scatterwalk_info_endtag(cbc_info+2);
 	                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#346: FILE: crypto/cipher.c:214:
+	r = scatterwalk_walk(cbc_process_gw, &priv, nbytes/bsize, cbc_info);
 	                                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: crypto/cipher.c:216:
+^Iif(priv.curIV != iv) $

ERROR:SPACING: space required before the open parenthesis '('
#348: FILE: crypto/cipher.c:216:
+	if(priv.curIV != iv) 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#349: FILE: crypto/cipher.c:217:
+		memcpy(iv,priv.curIV,bsize);
 		         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#349: FILE: crypto/cipher.c:217:
+		memcpy(iv,priv.curIV,bsize);
 		                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: crypto/cipher.c:230:
+                       struct scatterlist *dst,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: crypto/cipher.c:230:
+                       struct scatterlist *dst,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: crypto/cipher.c:231:
+                       struct scatterlist *src,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: crypto/cipher.c:231:
+                       struct scatterlist *src,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#412: FILE: crypto/scatterwalk.h:41:
+#define scatterwalk_needscratch(walk, nbytes) ^I^I^I^I^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'walk' - possible side-effects?
#412: FILE: crypto/scatterwalk.h:41:
+#define scatterwalk_needscratch(walk, nbytes) 						\
+	((nbytes) <= (walk)->len_this_page &&						\
+	    (((unsigned long)(walk)->data) & (PAGE_CACHE_SIZE - 1)) + (nbytes) <=	\
+	    PAGE_CACHE_SIZE)								\
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nbytes' - possible side-effects?
#412: FILE: crypto/scatterwalk.h:41:
+#define scatterwalk_needscratch(walk, nbytes) 						\
+	((nbytes) <= (walk)->len_this_page &&						\
+	    (((unsigned long)(walk)->data) & (PAGE_CACHE_SIZE - 1)) + (nbytes) <=	\
+	    PAGE_CACHE_SIZE)								\
+

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#436: FILE: crypto/scatterwalk.h:57:
+#define scatterwalk_info_endtag(winfo) (winfo)->sw.sg = NULL;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#438: FILE: crypto/scatterwalk.h:59:
+void scatterwalk_info_init(struct walk_info *winfo, struct scatterlist *sg, int stepsize, void *buf, int io);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#490: FILE: crypto/scatterwalk.c:54:
+void scatterwalk_info_init(struct walk_info *winfo, struct scatterlist *sg, int stepsize, void *buf, int io)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#499: FILE: crypto/scatterwalk.c:62:
+#define scatterwalk_map(walk,out) \
                             ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#499: FILE: crypto/scatterwalk.c:62:
+#define scatterwalk_map(walk,out) \
+	(walk)->data = crypto_kmap((walk)->page, (out)) + (walk)->offset; 

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'walk' - possible side-effects?
#499: FILE: crypto/scatterwalk.c:62:
+#define scatterwalk_map(walk,out) \
+	(walk)->data = crypto_kmap((walk)->page, (out)) + (walk)->offset; 

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#499: FILE: crypto/scatterwalk.c:62:
+#define scatterwalk_map(walk,out) \
+	(walk)->data = crypto_kmap((walk)->page, (out)) + (walk)->offset; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#500: FILE: crypto/scatterwalk.c:63:
+^I(walk)->data = crypto_kmap((walk)->page, (out)) + (walk)->offset; $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: crypto/scatterwalk.c:90:
+void scatterwalk_copychunks(void *buf, struct scatter_walk *walk,
 			   size_t nbytes, int out)

ERROR:SPACING: space required before the open parenthesis '('
#530: FILE: crypto/scatterwalk.c:94:
+			if(walk->len_this_page) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#534: FILE: crypto/scatterwalk.c:98:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: crypto/scatterwalk.c:98:
+                        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#537: FILE: crypto/scatterwalk.c:100:
+^I^I^Iscatterwalk_pagedone(walk, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#538: FILE: crypto/scatterwalk.c:101:
+^I^I^I^I^I     out, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#544: FILE: crypto/scatterwalk.c:104:
+^I^I}^I^I^I       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#545: FILE: crypto/scatterwalk.c:105:
+^I^Imemcpy_dir(buf, walk->data, nbytes, out);^I^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#548: FILE: crypto/scatterwalk.c:107:
+        walk->data += nbytes;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: crypto/scatterwalk.c:107:
+        walk->data += nbytes;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: crypto/scatterwalk.c:113:
+/*  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#559: FILE: crypto/scatterwalk.c:117:
+ * $

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#566: FILE: crypto/scatterwalk.c:124:
+ * All this informations and the underlaying scatterlist is handed to
             ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'underlaying' may be misspelled - perhaps 'underlying'?
#566: FILE: crypto/scatterwalk.c:124:
+ * All this informations and the underlaying scatterlist is handed to
                                  ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#586: FILE: crypto/scatterwalk.c:144:
+^I^I^I       struct walk_info *walk_infos) $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#586: FILE: crypto/scatterwalk.c:144:
+int scatterwalk_walk(sw_proc_func_t pf, void *priv, int steps,
+			       struct walk_info *walk_infos) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#589: FILE: crypto/scatterwalk.c:147:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#598: FILE: crypto/scatterwalk.c:156:
+        for(csg = walk_infos; csg->sw.sg; csg++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: crypto/scatterwalk.c:156:
+        for(csg = walk_infos; csg->sw.sg; csg++) {$

ERROR:SPACING: space required before the open parenthesis '('
#598: FILE: crypto/scatterwalk.c:156:
+        for(csg = walk_infos; csg->sw.sg; csg++) {

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#603: FILE: crypto/scatterwalk.c:161:
+	dispatch_list = (void *[nsl]){}; /* This alien thing is a C99 compound literal */
 	                      ^

ERROR:SPACING: space required before the open brace '{'
#603: FILE: crypto/scatterwalk.c:161:
+	dispatch_list = (void *[nsl]){}; /* This alien thing is a C99 compound literal */

ERROR:SPACING: space required before the open parenthesis '('
#605: FILE: crypto/scatterwalk.c:163:
+	while(steps--) {

ERROR:SPACING: space required before the open parenthesis '('
#606: FILE: crypto/scatterwalk.c:164:
+		for(csg = walk_infos, cbuf = dispatch_list; csg->sw.sg; i--, csg++, cbuf++) {

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#608: FILE: crypto/scatterwalk.c:166:
+			*cbuf =	scatterwalk_needscratch(&csg->sw,csg->stepsize)?csg->sw.data:csg->buf;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#608: FILE: crypto/scatterwalk.c:166:
+			*cbuf =	scatterwalk_needscratch(&csg->sw,csg->stepsize)?csg->sw.data:csg->buf;
 			       	                                ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#608: FILE: crypto/scatterwalk.c:166:
+			*cbuf =	scatterwalk_needscratch(&csg->sw,csg->stepsize)?csg->sw.data:csg->buf;
 			       	                                               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#608: FILE: crypto/scatterwalk.c:166:
+			*cbuf =	scatterwalk_needscratch(&csg->sw,csg->stepsize)?csg->sw.data:csg->buf;
 			       	                                                            ^

ERROR:SPACING: space required before the open parenthesis '('
#610: FILE: crypto/scatterwalk.c:168:
+			if(csg->ioflag == 0)

ERROR:SPACING: space required after that ',' (ctx:VxO)
#611: FILE: crypto/scatterwalk.c:169:
+				scatterwalk_copychunks(*cbuf,&csg->sw,csg->stepsize,0);
 				                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#611: FILE: crypto/scatterwalk.c:169:
+				scatterwalk_copychunks(*cbuf,&csg->sw,csg->stepsize,0);
 				                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#611: FILE: crypto/scatterwalk.c:169:
+				scatterwalk_copychunks(*cbuf,&csg->sw,csg->stepsize,0);
 				                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#611: FILE: crypto/scatterwalk.c:169:
+				scatterwalk_copychunks(*cbuf,&csg->sw,csg->stepsize,0);
 				                                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#613: FILE: crypto/scatterwalk.c:171:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#615: FILE: crypto/scatterwalk.c:173:
+		if(unlikely(r < 0))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#618: FILE: crypto/scatterwalk.c:176:
+^I^Ifor(csg = walk_infos, cbuf = dispatch_list; csg->sw.sg; csg++, cbuf++) {^I$

ERROR:SPACING: space required before the open parenthesis '('
#618: FILE: crypto/scatterwalk.c:176:
+		for(csg = walk_infos, cbuf = dispatch_list; csg->sw.sg; csg++, cbuf++) {	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#619: FILE: crypto/scatterwalk.c:177:
+^I^I^Iif(csg->ioflag == 1) $

ERROR:SPACING: space required before the open parenthesis '('
#619: FILE: crypto/scatterwalk.c:177:
+			if(csg->ioflag == 1) 

ERROR:SPACING: space required after that ',' (ctx:VxO)
#620: FILE: crypto/scatterwalk.c:178:
+				scatterwalk_copychunks(*cbuf,&csg->sw,csg->stepsize,1);
 				                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#620: FILE: crypto/scatterwalk.c:178:
+				scatterwalk_copychunks(*cbuf,&csg->sw,csg->stepsize,1);
 				                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#620: FILE: crypto/scatterwalk.c:178:
+				scatterwalk_copychunks(*cbuf,&csg->sw,csg->stepsize,1);
 				                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#620: FILE: crypto/scatterwalk.c:178:
+				scatterwalk_copychunks(*cbuf,&csg->sw,csg->stepsize,1);
 				                                                   ^

ERROR:SPACING: space required before the open parenthesis '('
#626: FILE: crypto/scatterwalk.c:184:
+	for(csg = walk_infos; csg->sw.sg; csg++) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210808.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 82 errors, 22 warnings, 24 checks, 547 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210808.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
