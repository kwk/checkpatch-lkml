WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#22: 
	A computer has two ethernet cards connected to the same hub, each ethernet card was in a

WARNING:TYPO_SPELLING: 'fuction' may be misspelled - perhaps 'function'?
#27: 
	The arp_rcv fuction would call the ip_route_input function to build the dst entry of the skb.
	            ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'fuction' may be misspelled - perhaps 'function'?
#28: 
When the ip_forward is on , the code will run direct into the rt_intern_hash fuction which add the
                                                                             ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#39: FILE: net/ipv4/route.c:1504:
+       if (skb->protocol == __constant_htons(ETH_P_ARP)){      $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#39: FILE: net/ipv4/route.c:1504:
+       if (skb->protocol == __constant_htons(ETH_P_ARP)){      $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#39: FILE: net/ipv4/route.c:1504:
+       if (skb->protocol == __constant_htons(ETH_P_ARP)){      
+               skb->dst = rth;

ERROR:SPACING: space required before the open brace '{'
#39: FILE: net/ipv4/route.c:1504:
+       if (skb->protocol == __constant_htons(ETH_P_ARP)){      

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#39: FILE: net/ipv4/route.c:1504:
+       if (skb->protocol == __constant_htons(ETH_P_ARP)){      

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

ERROR:CODE_INDENT: code indent should use tabs where possible
#40: FILE: net/ipv4/route.c:1505:
+               skb->dst = rth;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#40: FILE: net/ipv4/route.c:1505:
+               skb->dst = rth;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#41: FILE: net/ipv4/route.c:1506:
+               err = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#41: FILE: net/ipv4/route.c:1506:
+               err = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#42: FILE: net/ipv4/route.c:1507:
+               goto done;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#42: FILE: net/ipv4/route.c:1507:
+               goto done;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#43: FILE: net/ipv4/route.c:1508:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#44: FILE: net/ipv4/route.c:1509:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#44: FILE: net/ipv4/route.c:1509:
+       $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000499196.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 11 warnings, 0 checks, 12 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000499196.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
