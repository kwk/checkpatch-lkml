WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#80: FILE: arch/i386/kernel/cpu/intel.c:269:
+unsigned long cmpxchg_386_u8(volatile void *ptr, u8 old, u8 new)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#94: FILE: arch/i386/kernel/cpu/intel.c:283:
+EXPORT_SYMBOL(cmpxchg_386_u8);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#96: FILE: arch/i386/kernel/cpu/intel.c:285:
+unsigned long cmpxchg_386_u16(volatile void *ptr, u16 old, u16 new)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#110: FILE: arch/i386/kernel/cpu/intel.c:299:
+EXPORT_SYMBOL(cmpxchg_386_u16);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#112: FILE: arch/i386/kernel/cpu/intel.c:301:
+unsigned long cmpxchg_386_u32(volatile void *ptr, u32 old, u32 new)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#126: FILE: arch/i386/kernel/cpu/intel.c:315:
+EXPORT_SYMBOL(cmpxchg_386_u32);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#139: FILE: include/asm-i386/system.h:266:
+#define cmpxchg(ptr,o,n)\
                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#139: FILE: include/asm-i386/system.h:266:
+#define cmpxchg(ptr,o,n)\
                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#139: FILE: include/asm-i386/system.h:266:
+#define cmpxchg(ptr,o,n)\
+	((__typeof__(*(ptr)))__cmpxchg((ptr),(unsigned long)(o),\
+					(unsigned long)(n),sizeof(*(ptr))))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#140: FILE: include/asm-i386/system.h:267:
+	((__typeof__(*(ptr)))__cmpxchg((ptr),(unsigned long)(o),\
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#141: FILE: include/asm-i386/system.h:268:
+					(unsigned long)(n),sizeof(*(ptr))))
 					                  ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#160: FILE: include/asm-i386/system.h:305:
+extern unsigned long cmpxchg_386_u8(volatile void *, u8, u8);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#160: FILE: include/asm-i386/system.h:305:
+extern unsigned long cmpxchg_386_u8(volatile void *, u8, u8);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#161: FILE: include/asm-i386/system.h:306:
+extern unsigned long cmpxchg_386_u16(volatile void *, u16, u16);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#161: FILE: include/asm-i386/system.h:306:
+extern unsigned long cmpxchg_386_u16(volatile void *, u16, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'volatile void *' should also have an identifier name
#161: FILE: include/asm-i386/system.h:306:
+extern unsigned long cmpxchg_386_u16(volatile void *, u16, u16);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#161: FILE: include/asm-i386/system.h:306:
+extern unsigned long cmpxchg_386_u16(volatile void *, u16, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#161: FILE: include/asm-i386/system.h:306:
+extern unsigned long cmpxchg_386_u16(volatile void *, u16, u16);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#162: FILE: include/asm-i386/system.h:307:
+extern unsigned long cmpxchg_386_u32(volatile void *, u32, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#162: FILE: include/asm-i386/system.h:307:
+extern unsigned long cmpxchg_386_u32(volatile void *, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'volatile void *' should also have an identifier name
#162: FILE: include/asm-i386/system.h:307:
+extern unsigned long cmpxchg_386_u32(volatile void *, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#162: FILE: include/asm-i386/system.h:307:
+extern unsigned long cmpxchg_386_u32(volatile void *, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#162: FILE: include/asm-i386/system.h:307:
+extern unsigned long cmpxchg_386_u32(volatile void *, u32, u32);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#164: FILE: include/asm-i386/system.h:309:
+static inline unsigned long cmpxchg_386(volatile void *ptr, unsigned long old,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: include/asm-i386/system.h:310:
+static inline unsigned long cmpxchg_386(volatile void *ptr, unsigned long old,
+				      unsigned long new, int size)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#178: FILE: include/asm-i386/system.h:323:
+#define cmpxchg(ptr,o,n)						\
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#178: FILE: include/asm-i386/system.h:323:
+#define cmpxchg(ptr,o,n)						\
                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#178: FILE: include/asm-i386/system.h:323:
+#define cmpxchg(ptr,o,n)						\
+({									\
+	__typeof__(*(ptr)) __ret;					\
+	if (likely(boot_cpu_data.x86 > 3))				\
+		__ret = __cmpxchg((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	else								\
+		__ret = cmpxchg_386((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	__ret;								\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'o' - possible side-effects?
#178: FILE: include/asm-i386/system.h:323:
+#define cmpxchg(ptr,o,n)						\
+({									\
+	__typeof__(*(ptr)) __ret;					\
+	if (likely(boot_cpu_data.x86 > 3))				\
+		__ret = __cmpxchg((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	else								\
+		__ret = cmpxchg_386((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	__ret;								\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#178: FILE: include/asm-i386/system.h:323:
+#define cmpxchg(ptr,o,n)						\
+({									\
+	__typeof__(*(ptr)) __ret;					\
+	if (likely(boot_cpu_data.x86 > 3))				\
+		__ret = __cmpxchg((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	else								\
+		__ret = cmpxchg_386((ptr), (unsigned long)(o),		\
+					(unsigned long)(n), sizeof(*(ptr))); \
+	__ret;								\
+})

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137911.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 16 warnings, 8 checks, 117 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137911.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
