WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
distribution to be much better maintained. It has proven to be stable in my=

WARNING:TYPO_SPELLING: 'thei' may be misspelled - perhaps 'their'?
#67: 
intervals before being demoted a priority and so on until they get all thei=
                                                                       ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#192: FILE: include/linux/sysctl.h:136:
+	KERN_INTERACTIVE=66,	/* interactive tasks to have cpu bursts */
 	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#193: FILE: include/linux/sysctl.h:137:
+	KERN_COMPUTE=67,	/* adjust timeslices for a compute server */
 	            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: kernel/sched.c:20:
+ *^I^Ifrom Zwane Mwaikambo and useful suggestions by $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: kernel/sched.c:21:
+ *^I^IWilliam Lee Irwin III. $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#208: FILE: kernel/sched.c:22:
+ *		William Lee Irwin III. 
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#305: FILE: kernel/sched.c:79:
+int compute = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: kernel/sched.c:80:
+/* $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#371: FILE: kernel/sched.c:213:
+	prio_array_t* array = &rq->array;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#381: FILE: kernel/sched.c:222:
+	prio_array_t* array = &rq->array;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#392: FILE: kernel/sched.c:236:
+	prio_array_t* array = &rq->array;

WARNING:LINE_SPACING: Missing a blank line after declarations
#459: FILE: kernel/sched.c:265:
+	unsigned int task_user_prio;
+	if (rt_task(p))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#491: FILE: kernel/sched.c:277:
+	unsigned int best_deadline;
+	best_deadline = deadline(p);

WARNING:LINE_SPACING: Missing a blank line after declarations
#531: FILE: kernel/sched.c:296:
+	unsigned int slice = RR_INTERVAL;
+	if (!rt_task(p))

WARNING:LINE_SPACING: Missing a blank line after declarations
#564: FILE: kernel/sched.c:315:
+	unsigned int best_deadline;
+	if (rt_task(p))

WARNING:LINE_SPACING: Missing a blank line after declarations
#591: FILE: kernel/sched.c:342:
+	unsigned long total_run = NS_TO_JIFFIES(p->totalrun) + run_time;
+	if (!run_time && NS_TO_JIFFIES(p->runtime + sleep_time) < RR_INTERVAL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#796: FILE: kernel/sched.c:1210:
+static inline $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#797: FILE: kernel/sched.c:1211:
+void pull_task(runqueue_t *src_rq, task_t *p, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#798: FILE: kernel/sched.c:1212:
+void pull_task(runqueue_t *src_rq, task_t *p, 
+		runqueue_t *this_rq, int this_cpu)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#815: FILE: kernel/sched.c:1268:
+	prio_array_t* array, *dst_array;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#853: FILE: kernel/sched.c:1285:
+^Iif (idx >= MAX_PRIO) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#922: FILE: kernel/sched.c:1809:
+^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#997: FILE: kernel/sched.c:1899:
+		if (((smt_curr->slice * (100 - sd->per_cpu_gain) / 100) >
[...]
 				ret = 1;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1008: FILE: kernel/sched.c:1909:
+^I^Iif ((((p->slice * (100 - sd->per_cpu_gain) / 100) > $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1008: FILE: kernel/sched.c:1909:
+		if ((((p->slice * (100 - sd->per_cpu_gain) / 100) > 
[...]
 				resched_task(smt_curr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1009: FILE: kernel/sched.c:1910:
+^I^I^Islice(smt_curr) || rt_task(p)) && $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1018: FILE: kernel/sched.c:1936:
+	prio_array_t* array;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1110: FILE: kernel/sched.c:2264:
+	prio_array_t* array;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1137: FILE: kernel/sched.c:2418:
+	prio_array_t* array;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1206: FILE: kernel/sched.c:3611:
+		prio_array_t* array;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1250: FILE: kernel/sysctl.c:643:
+		.maxlen		= sizeof (int),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1258: FILE: kernel/sysctl.c:651:
+		.maxlen		= sizeof (int),

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276824.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 12 warnings, 1 checks, 1070 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276824.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
