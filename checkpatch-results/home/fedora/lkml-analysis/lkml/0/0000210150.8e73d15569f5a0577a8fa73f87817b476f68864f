WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#54: FILE: drivers/char/ipmi/ipmi_smb.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#88: FILE: drivers/char/ipmi/ipmi_smb.c:35:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#89: FILE: drivers/char/ipmi/ipmi_smb.c:36:
+ *  675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#122: FILE: drivers/char/ipmi/ipmi_smb.c:69:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#124: FILE: drivers/char/ipmi/ipmi_smb.c:71:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'smb' - possible side-effects?
#159: FILE: drivers/char/ipmi/ipmi_smb.c:106:
+#define SMB_IDLE(smb)	 ((smb)->smb_state == SMB_NORMAL \
+			  && (smb)->curr_msg == NULL)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#160: FILE: drivers/char/ipmi/ipmi_smb.c:107:
+#define SMB_IDLE(smb)	 ((smb)->smb_state == SMB_NORMAL \
+			  && (smb)->curr_msg == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!curr_msg"
#160: FILE: drivers/char/ipmi/ipmi_smb.c:107:
+			  && (smb)->curr_msg == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#169: FILE: drivers/char/ipmi/ipmi_smb.c:116:
+struct smb_info
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#172: FILE: drivers/char/ipmi/ipmi_smb.c:119:
+	spinlock_t          msg_lock;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#180: FILE: drivers/char/ipmi/ipmi_smb.c:127:
+	/* Flags from the last GET_MSG_FLAGS command, used when an ATTN
+	   is set to hold the flags until we are done handling everything

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#181: FILE: drivers/char/ipmi/ipmi_smb.c:128:
+	   from the flags. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#188: FILE: drivers/char/ipmi/ipmi_smb.c:135:
+	/* If set to true, this will request events the next time the
+	   state machine is idle. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#188: FILE: drivers/char/ipmi/ipmi_smb.c:135:
+	   state machine is idle. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#192: FILE: drivers/char/ipmi/ipmi_smb.c:139:
+	/* If true, run the state machine to completion on every send
+	   call.  Generally used after a panic or shutdown to make

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#193: FILE: drivers/char/ipmi/ipmi_smb.c:140:
+	   sure stuff goes out. */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#234: FILE: drivers/char/ipmi/ipmi_smb.c:181:
+static int initialized = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#235: FILE: drivers/char/ipmi/ipmi_smb.c:182:
+static int smb_dbg_probe = 0;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#244: FILE: drivers/char/ipmi/ipmi_smb.c:191:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#250: FILE: drivers/char/ipmi/ipmi_smb.c:197:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'deliver_recv_msg', this function's name, in a string
#251: FILE: drivers/char/ipmi/ipmi_smb.c:198:
+		       "malformed message in deliver_recv_msg:"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#252: FILE: drivers/char/ipmi/ipmi_smb.c:199:
+		       "malformed message in deliver_recv_msg:"
+		       " rsp_size = %d\n", msg->rsp_size);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'reponse' may be misspelled - perhaps 'response'?
#262: FILE: drivers/char/ipmi/ipmi_smb.c:209:
+	/* Make it a reponse */
 	             ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#342: FILE: drivers/char/ipmi/ipmi_smb.c:289:
+		struct ipmi_smi_msg *msg = ipmi_alloc_smi_msg();
+		if (!msg) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: drivers/char/ipmi/ipmi_smb.c:322:
+        struct smb_info     *smb_info = (void *) data;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#375: FILE: drivers/char/ipmi/ipmi_smb.c:322:
+        struct smb_info     *smb_info = (void *) data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: drivers/char/ipmi/ipmi_smb.c:322:
+        struct smb_info     *smb_info = (void *) data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: drivers/char/ipmi/ipmi_smb.c:323:
+        struct i2c_op_q_entry *i2ce;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/char/ipmi/ipmi_smb.c:323:
+        struct i2c_op_q_entry *i2ce;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: drivers/char/ipmi/ipmi_smb.c:325:
+        i2ce = &smb_info->i2c_q_entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: drivers/char/ipmi/ipmi_smb.c:325:
+        i2ce = &smb_info->i2c_q_entry;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: drivers/char/ipmi/ipmi_smb.c:326:
+        i2ce->xfer_type = I2C_OP_SMBUS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: drivers/char/ipmi/ipmi_smb.c:326:
+        i2ce->xfer_type = I2C_OP_SMBUS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: drivers/char/ipmi/ipmi_smb.c:327:
+        i2ce->handler = msg_done_handler;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: drivers/char/ipmi/ipmi_smb.c:327:
+        i2ce->handler = msg_done_handler;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: drivers/char/ipmi/ipmi_smb.c:328:
+        i2ce->handler_data = smb_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: drivers/char/ipmi/ipmi_smb.c:328:
+        i2ce->handler_data = smb_info;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: drivers/char/ipmi/ipmi_smb.c:329:
+        i2ce->smbus.read_write = I2C_SMBUS_READ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: drivers/char/ipmi/ipmi_smb.c:329:
+        i2ce->smbus.read_write = I2C_SMBUS_READ;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: drivers/char/ipmi/ipmi_smb.c:330:
+        i2ce->smbus.command = SMB_IPMI_RESPONSE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: drivers/char/ipmi/ipmi_smb.c:330:
+        i2ce->smbus.command = SMB_IPMI_RESPONSE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#384: FILE: drivers/char/ipmi/ipmi_smb.c:331:
+        i2ce->smbus.data = (union i2c_smbus_data *) smb_info->recv;$

CHECK:SPACING: No space is necessary after a cast
#384: FILE: drivers/char/ipmi/ipmi_smb.c:331:
+        i2ce->smbus.data = (union i2c_smbus_data *) smb_info->recv;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: drivers/char/ipmi/ipmi_smb.c:331:
+        i2ce->smbus.data = (union i2c_smbus_data *) smb_info->recv;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: drivers/char/ipmi/ipmi_smb.c:332:
+        i2ce->smbus.size = I2C_SMBUS_BLOCK_DATA;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: drivers/char/ipmi/ipmi_smb.c:332:
+        i2ce->smbus.size = I2C_SMBUS_BLOCK_DATA;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#387: FILE: drivers/char/ipmi/ipmi_smb.c:334:
+        if (i2c_non_blocking_op(&smb_info->client, i2ce)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: drivers/char/ipmi/ipmi_smb.c:334:
+        if (i2c_non_blocking_op(&smb_info->client, i2ce)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: drivers/char/ipmi/ipmi_smb.c:335:
+                /* request failed, just return the error. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: drivers/char/ipmi/ipmi_smb.c:336:
+                if (smb_info->smb_debug & SMB_DEBUG_MSG) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/char/ipmi/ipmi_smb.c:336:
+                if (smb_info->smb_debug & SMB_DEBUG_MSG) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: drivers/char/ipmi/ipmi_smb.c:337:
+                        printk(KERN_INFO$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: drivers/char/ipmi/ipmi_smb.c:337:
+                        printk(KERN_INFO$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#390: FILE: drivers/char/ipmi/ipmi_smb.c:337:
+                        printk(KERN_INFO

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: drivers/char/ipmi/ipmi_smb.c:338:
+                               "Error from i2c_non_blocking_op(5)\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: drivers/char/ipmi/ipmi_smb.c:338:
+                               "Error from i2c_non_blocking_op(5)\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: drivers/char/ipmi/ipmi_smb.c:339:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: drivers/char/ipmi/ipmi_smb.c:339:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: drivers/char/ipmi/ipmi_smb.c:340:
+                i2ce->result = -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: drivers/char/ipmi/ipmi_smb.c:340:
+                i2ce->result = -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: drivers/char/ipmi/ipmi_smb.c:341:
+                msg_done_handler(i2ce);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: drivers/char/ipmi/ipmi_smb.c:341:
+                msg_done_handler(i2ce);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: drivers/char/ipmi/ipmi_smb.c:342:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: drivers/char/ipmi/ipmi_smb.c:342:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: drivers/char/ipmi/ipmi_smb.c:359:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#414: FILE: drivers/char/ipmi/ipmi_smb.c:361:
+	/* We are single-threaded here, so no need for a lock until we
+	   start messing with driver states or the queues. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#414: FILE: drivers/char/ipmi/ipmi_smb.c:361:
+	   start messing with driver states or the queues. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#419: FILE: drivers/char/ipmi/ipmi_smb.c:366:
+			if ((smb_info->retries_left
+			     % SMB_MSG_RETRY_WRITE_COUNT) == 0)
+			{

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: drivers/char/ipmi/ipmi_smb.c:369:
+                                /* Every once in a while re-request the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: drivers/char/ipmi/ipmi_smb.c:370:
+                                   write. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#423: FILE: drivers/char/ipmi/ipmi_smb.c:370:
+                                /* Every once in a while re-request the
+                                   write. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#423: FILE: drivers/char/ipmi/ipmi_smb.c:370:
+                                   write. */

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#424: FILE: drivers/char/ipmi/ipmi_smb.c:371:
+				if (! start_resend(smb_info))
 				    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#427: FILE: drivers/char/ipmi/ipmi_smb.c:374:
+				/* If start_resend fails, just restart
+				   the timer. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#427: FILE: drivers/char/ipmi/ipmi_smb.c:374:
+				   the timer. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#430: FILE: drivers/char/ipmi/ipmi_smb.c:377:
+			struct timer_list *t = &smb_info->retry_timer;
+			t->expires = jiffies + 10;

CHECK:SPACING: No space is necessary after a cast
#431: FILE: drivers/char/ipmi/ipmi_smb.c:378:
+			t->data = (unsigned long) smb_info;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#437: FILE: drivers/char/ipmi/ipmi_smb.c:384:
+			printk(KERN_INFO

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'msg_done_handler', this function's name, in a string
#438: FILE: drivers/char/ipmi/ipmi_smb.c:385:
+			       "Error in msg_done_handler: %d\n", i2ce->result);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#445: FILE: drivers/char/ipmi/ipmi_smb.c:392:
+	if ((len > 1) && (smb_info->multi_pos == 0)
+		 && (data[0] == 0x00) && (data[1] == 0x01))
+	{

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len > 1'
#445: FILE: drivers/char/ipmi/ipmi_smb.c:392:
+	if ((len > 1) && (smb_info->multi_pos == 0)
+		 && (data[0] == 0x00) && (data[1] == 0x01))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'smb_info->multi_pos == 0'
#445: FILE: drivers/char/ipmi/ipmi_smb.c:392:
+	if ((len > 1) && (smb_info->multi_pos == 0)
+		 && (data[0] == 0x00) && (data[1] == 0x01))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data[0] == 0x00'
#445: FILE: drivers/char/ipmi/ipmi_smb.c:392:
+	if ((len > 1) && (smb_info->multi_pos == 0)
+		 && (data[0] == 0x00) && (data[1] == 0x01))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data[1] == 0x01'
#445: FILE: drivers/char/ipmi/ipmi_smb.c:392:
+	if ((len > 1) && (smb_info->multi_pos == 0)
+		 && (data[0] == 0x00) && (data[1] == 0x01))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#446: FILE: drivers/char/ipmi/ipmi_smb.c:393:
+	if ((len > 1) && (smb_info->multi_pos == 0)
+		 && (data[0] == 0x00) && (data[1] == 0x01))

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#452: FILE: drivers/char/ipmi/ipmi_smb.c:399:
+		for (i=0; i<len-2; i++)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#452: FILE: drivers/char/ipmi/ipmi_smb.c:399:
+		for (i=0; i<len-2; i++)
 		           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#452: FILE: drivers/char/ipmi/ipmi_smb.c:399:
+		for (i=0; i<len-2; i++)
 		               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#453: FILE: drivers/char/ipmi/ipmi_smb.c:400:
+			smb_info->data[i] = data[i+2];
 			                          ^

CHECK:SPACING: No space is necessary after a cast
#463: FILE: drivers/char/ipmi/ipmi_smb.c:410:
+		i2ce->smbus.data = ((union i2c_smbus_data *) smb_info->recv);

CHECK:BRACES: braces {} should be used on all arms of this statement
#465: FILE: drivers/char/ipmi/ipmi_smb.c:412:
+		if (i2c_non_blocking_op(&smb_info->client, i2ce)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#467: FILE: drivers/char/ipmi/ipmi_smb.c:414:
+				printk(KERN_INFO

CHECK:BRACES: Unbalanced braces around else statement
#471: FILE: drivers/char/ipmi/ipmi_smb.c:418:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#481: FILE: drivers/char/ipmi/ipmi_smb.c:428:
+				printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#483: FILE: drivers/char/ipmi/ipmi_smb.c:430:
+				       "Received middle message with no"
+				       " data\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#490: FILE: drivers/char/ipmi/ipmi_smb.c:437:
+		if (smb_info->multi_len+len-1 > IPMI_MAX_MSG_LENGTH) {
 		                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#490: FILE: drivers/char/ipmi/ipmi_smb.c:437:
+		if (smb_info->multi_len+len-1 > IPMI_MAX_MSG_LENGTH) {
 		                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#494: FILE: drivers/char/ipmi/ipmi_smb.c:441:
+				printk(KERN_INFO

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#501: FILE: drivers/char/ipmi/ipmi_smb.c:448:
+		for (i=0; i<len-1; i++)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#501: FILE: drivers/char/ipmi/ipmi_smb.c:448:
+		for (i=0; i<len-1; i++)
 		           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#501: FILE: drivers/char/ipmi/ipmi_smb.c:448:
+		for (i=0; i<len-1; i++)
 		               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#502: FILE: drivers/char/ipmi/ipmi_smb.c:449:
+			smb_info->data[i+smb_info->multi_len] = data[i+1];
 			                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#502: FILE: drivers/char/ipmi/ipmi_smb.c:449:
+			smb_info->data[i+smb_info->multi_len] = data[i+1];
 			                                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#509: FILE: drivers/char/ipmi/ipmi_smb.c:456:
+		} else if ((blocknum+1) != smb_info->multi_pos) {
 		                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#511: FILE: drivers/char/ipmi/ipmi_smb.c:458:
+			/* Out of sequence block, just abort.  Block
+			   numbers start at zero for the second block,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#512: FILE: drivers/char/ipmi/ipmi_smb.c:459:
+			   but multi_pos starts at one, so the +1. */

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#521: FILE: drivers/char/ipmi/ipmi_smb.c:468:
+			i2ce->smbus.command
+				= SMB_IPMI_MULTI_PART_RESPONSE_MIDDLE;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:BRACES: braces {} should be used on all arms of this statement
#526: FILE: drivers/char/ipmi/ipmi_smb.c:473:
+			if (i2c_non_blocking_op(&smb_info->client, i2ce)) {
[...]
+			} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#528: FILE: drivers/char/ipmi/ipmi_smb.c:475:
+					printk(KERN_INFO

CHECK:BRACES: Unbalanced braces around else statement
#532: FILE: drivers/char/ipmi/ipmi_smb.c:479:
+			} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#539: FILE: drivers/char/ipmi/ipmi_smb.c:486:
+		printk(KERN_INFO "DONE 1: state = %d, result=%d.\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->msg_lock
#542: FILE: drivers/char/ipmi/ipmi_smb.c:489:
+	spin_lock_irqsave(&(smb_info->msg_lock), flags);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'result < 0'
#566: FILE: drivers/char/ipmi/ipmi_smb.c:513:
+		if ((result < 0) || (len < 4) || (data[2] != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len < 4'
#566: FILE: drivers/char/ipmi/ipmi_smb.c:513:
+		if ((result < 0) || (len < 4) || (data[2] != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data[2] != 0'
#566: FILE: drivers/char/ipmi/ipmi_smb.c:513:
+		if ((result < 0) || (len < 4) || (data[2] != 0)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#568: FILE: drivers/char/ipmi/ipmi_smb.c:515:
+			/* Error fetching flags, or invalid length,
+			   just give up for now. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#568: FILE: drivers/char/ipmi/ipmi_smb.c:515:
+			   just give up for now. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#572: FILE: drivers/char/ipmi/ipmi_smb.c:519:
+			printk(KERN_WARNING

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'result < 0'
#583: FILE: drivers/char/ipmi/ipmi_smb.c:530:
+		if ((result < 0) || (len < 3) || (data[2] != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len < 3'
#583: FILE: drivers/char/ipmi/ipmi_smb.c:530:
+		if ((result < 0) || (len < 3) || (data[2] != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data[2] != 0'
#583: FILE: drivers/char/ipmi/ipmi_smb.c:530:
+		if ((result < 0) || (len < 3) || (data[2] != 0)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#585: FILE: drivers/char/ipmi/ipmi_smb.c:532:
+			printk(KERN_WARNING

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'result < 0'
#595: FILE: drivers/char/ipmi/ipmi_smb.c:542:
+		if ((result < 0) || (len < 3) || (msg->rsp[2] != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len < 3'
#595: FILE: drivers/char/ipmi/ipmi_smb.c:542:
+		if ((result < 0) || (len < 3) || (msg->rsp[2] != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->rsp[2] != 0'
#595: FILE: drivers/char/ipmi/ipmi_smb.c:542:
+		if ((result < 0) || (len < 3) || (msg->rsp[2] != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'result < 0'
#609: FILE: drivers/char/ipmi/ipmi_smb.c:556:
+		if ((result < 0) || (len < 3) || (msg->rsp[2] != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len < 3'
#609: FILE: drivers/char/ipmi/ipmi_smb.c:556:
+		if ((result < 0) || (len < 3) || (msg->rsp[2] != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->rsp[2] != 0'
#609: FILE: drivers/char/ipmi/ipmi_smb.c:556:
+		if ((result < 0) || (len < 3) || (msg->rsp[2] != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->msg_lock
#623: FILE: drivers/char/ipmi/ipmi_smb.c:570:
+	spin_lock_irqsave(&(smb_info->msg_lock), flags);

CHECK:BRACES: braces {} should be used on all arms of this statement
#624: FILE: drivers/char/ipmi/ipmi_smb.c:571:
+	if (SMB_IDLE(smb_info)) {
[...]
+	} else 
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#642: FILE: drivers/char/ipmi/ipmi_smb.c:589:
+^I} else $

CHECK:BRACES: Unbalanced braces around else statement
#642: FILE: drivers/char/ipmi/ipmi_smb.c:589:
+	} else 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#646: FILE: drivers/char/ipmi/ipmi_smb.c:593:
+		printk(KERN_INFO "DONE 2: state = %d.\n", smb_info->smb_state);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#657: FILE: drivers/char/ipmi/ipmi_smb.c:604:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#662: FILE: drivers/char/ipmi/ipmi_smb.c:609:
+                        if (! start_resend(smb_info))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#662: FILE: drivers/char/ipmi/ipmi_smb.c:609:
+                        if (! start_resend(smb_info))$

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#662: FILE: drivers/char/ipmi/ipmi_smb.c:609:
+                        if (! start_resend(smb_info))
                             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#666: FILE: drivers/char/ipmi/ipmi_smb.c:613:
+				printk(KERN_INFO

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#675: FILE: drivers/char/ipmi/ipmi_smb.c:622:
+		/* Got an error on transmit, let the done routine
+		   handle it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#675: FILE: drivers/char/ipmi/ipmi_smb.c:622:
+		   handle it. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#677: FILE: drivers/char/ipmi/ipmi_smb.c:624:
+			printk(KERN_INFO

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'msg_written_handler', this function's name, in a string
#678: FILE: drivers/char/ipmi/ipmi_smb.c:625:
+			       "Error in msg_written_handler: %d\n",

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#697: FILE: drivers/char/ipmi/ipmi_smb.c:644:
+		i2ce->smbus.data
+			= ((union i2c_smbus_data *)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#706: FILE: drivers/char/ipmi/ipmi_smb.c:653:
+			/* Write is finished.  Note that we must end
+			   with a write of less than 32 bytes to

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#708: FILE: drivers/char/ipmi/ipmi_smb.c:655:
+			   zero bytes. */

CHECK:SPACING: No space is necessary after a cast
#717: FILE: drivers/char/ipmi/ipmi_smb.c:664:
+		i2ce->smbus.data = (union i2c_smbus_data *) smb_info->recv;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#725: FILE: drivers/char/ipmi/ipmi_smb.c:672:
+			printk(KERN_INFO

CHECK:SPACING: No space is necessary after a cast
#744: FILE: drivers/char/ipmi/ipmi_smb.c:691:
+	i2ce->smbus.data = (union i2c_smbus_data *) smb_info->data;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#752: FILE: drivers/char/ipmi/ipmi_smb.c:699:
+		/* Subtle thing, this is 32, not 33, because we will
+		   overwrite the thing at position 32 (which was just

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#753: FILE: drivers/char/ipmi/ipmi_smb.c:700:
+		   transmitted) with the new length. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#764: FILE: drivers/char/ipmi/ipmi_smb.c:711:
+		printk(KERN_INFO

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#780: FILE: drivers/char/ipmi/ipmi_smb.c:727:
+	memcpy(smb_info->data+1, data, len);
 	                     ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#798: FILE: drivers/char/ipmi/ipmi_smb.c:745:
+	if (! list_empty(&(smb_info->hp_xmit_msgs))) {
 	    ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->hp_xmit_msgs
#798: FILE: drivers/char/ipmi/ipmi_smb.c:745:
+	if (! list_empty(&(smb_info->hp_xmit_msgs))) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#798: FILE: drivers/char/ipmi/ipmi_smb.c:745:
+	if (! list_empty(&(smb_info->hp_xmit_msgs))) {
[...]
+	} else if (! list_empty(&(smb_info->xmit_msgs))) {
[...]

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#800: FILE: drivers/char/ipmi/ipmi_smb.c:747:
+	} else if (! list_empty(&(smb_info->xmit_msgs))) {
 	           ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->xmit_msgs
#800: FILE: drivers/char/ipmi/ipmi_smb.c:747:
+	} else if (! list_empty(&(smb_info->xmit_msgs))) {

CHECK:SPACING: No space is necessary after a cast
#830: FILE: drivers/char/ipmi/ipmi_smb.c:777:
+	struct smb_info *smb_info = (struct smb_info *) send_info;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#836: FILE: drivers/char/ipmi/ipmi_smb.c:783:
+		/* If we are running to completion, then throw it in
+		   the list and run transactions until everything is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#837: FILE: drivers/char/ipmi/ipmi_smb.c:784:
+		   clear.  Priority doesn't matter here. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around msg->link
#838: FILE: drivers/char/ipmi/ipmi_smb.c:785:
+		list_add_tail(&(msg->link), &(smb_info->xmit_msgs));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->xmit_msgs
#838: FILE: drivers/char/ipmi/ipmi_smb.c:785:
+		list_add_tail(&(msg->link), &(smb_info->xmit_msgs));

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#842: FILE: drivers/char/ipmi/ipmi_smb.c:789:
+		while (! SMB_IDLE(smb_info)) {
 		       ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#843: FILE: drivers/char/ipmi/ipmi_smb.c:790:
+			udelay(500);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:LINE_SPACING: Please don't use multiple blank lines
#849: FILE: drivers/char/ipmi/ipmi_smb.c:796:
+
+

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#850: FILE: drivers/char/ipmi/ipmi_smb.c:797:
+	if (priority > 0) {
[...]
+	} else {
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around msg->link
#851: FILE: drivers/char/ipmi/ipmi_smb.c:798:
+		list_add_tail(&(msg->link), &(smb_info->hp_xmit_msgs));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->hp_xmit_msgs
#851: FILE: drivers/char/ipmi/ipmi_smb.c:798:
+		list_add_tail(&(msg->link), &(smb_info->hp_xmit_msgs));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around msg->link
#853: FILE: drivers/char/ipmi/ipmi_smb.c:800:
+		list_add_tail(&(msg->link), &(smb_info->xmit_msgs));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->xmit_msgs
#853: FILE: drivers/char/ipmi/ipmi_smb.c:800:
+		list_add_tail(&(msg->link), &(smb_info->xmit_msgs));

WARNING:LINE_SPACING: Missing a blank line after declarations
#859: FILE: drivers/char/ipmi/ipmi_smb.c:806:
+		struct timeval     t;
+		do_gettimeofday(&t);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#860: FILE: drivers/char/ipmi/ipmi_smb.c:807:
+		printk(KERN_INFO

CHECK:SPACING: No space is necessary after a cast
#872: FILE: drivers/char/ipmi/ipmi_smb.c:819:
+	struct smb_info *smb_info = (struct smb_info *) send_info;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#890: FILE: drivers/char/ipmi/ipmi_smb.c:837:
+			 * unlocked. */

CHECK:SPACING: No space is necessary after a cast
#901: FILE: drivers/char/ipmi/ipmi_smb.c:848:
+	struct smb_info *smb_info = (struct smb_info *) send_info;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#905: FILE: drivers/char/ipmi/ipmi_smb.c:852:
+	/* Note that if this does not compile, there are some I2C
+	   changes that you need to handle this properly. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#905: FILE: drivers/char/ipmi/ipmi_smb.c:852:
+	   changes that you need to handle this properly. */

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#908: FILE: drivers/char/ipmi/ipmi_smb.c:855:
+		while (! SMB_IDLE(smb_info)) {
 		       ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#909: FILE: drivers/char/ipmi/ipmi_smb.c:856:
+			udelay(500);

WARNING:LINE_SPACING: Missing a blank line after declarations
#918: FILE: drivers/char/ipmi/ipmi_smb.c:865:
+	struct smb_info *smb_info = send_info;
+	i2c_poll(&smb_info->client, 10);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#922: FILE: drivers/char/ipmi/ipmi_smb.c:869:
+static struct ipmi_smi_handlers handlers =
+{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#933: FILE: drivers/char/ipmi/ipmi_smb.c:880:
+static struct i2c_driver smb_i2c_driver =
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#941: FILE: drivers/char/ipmi/ipmi_smb.c:888:
+static int ipmi_smb_detect_hardware(struct i2c_adapter *adapter, int addr, $

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#964: FILE: drivers/char/ipmi/ipmi_smb.c:911:
+	strlcpy(client->name, "IPMI", I2C_NAME_SIZE);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#970: FILE: drivers/char/ipmi/ipmi_smb.c:917:
+	/* Do a Get Device ID command, since it comes back with some
+	   useful info. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#970: FILE: drivers/char/ipmi/ipmi_smb.c:917:
+	   useful info. */

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#991: FILE: drivers/char/ipmi/ipmi_smb.c:938:
+		msleep(10);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#997: FILE: drivers/char/ipmi/ipmi_smb.c:944:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#998: FILE: drivers/char/ipmi/ipmi_smb.c:945:
+		
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'resp[1] != IPMI_GET_DEVICE_ID_CMD'
#1005: FILE: drivers/char/ipmi/ipmi_smb.c:952:
+	if ((resp[1] != IPMI_GET_DEVICE_ID_CMD) || (resp[2] != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'resp[2] != 0'
#1005: FILE: drivers/char/ipmi/ipmi_smb.c:952:
+	if ((resp[1] != IPMI_GET_DEVICE_ID_CMD) || (resp[2] != 0)) {

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1041: FILE: drivers/char/ipmi/ipmi_smb.c:988:
+		msleep(10);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret >= 3'
#1048: FILE: drivers/char/ipmi/ipmi_smb.c:995:
+	if ((ret >= 3) && (resp[2] == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'resp[2] == 0'
#1048: FILE: drivers/char/ipmi/ipmi_smb.c:995:
+	if ((ret >= 3) && (resp[2] == 0)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1051: FILE: drivers/char/ipmi/ipmi_smb.c:998:
+				printk(KERN_INFO

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1065: FILE: drivers/char/ipmi/ipmi_smb.c:1012:
+		switch (info->multi_support)
+		{

WARNING:INDENTED_LABEL: labels should not be indented
#1089: FILE: drivers/char/ipmi/ipmi_smb.c:1036:
+	no_support:

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1113: FILE: drivers/char/ipmi/ipmi_smb.c:1060:
+static unsigned short __initdata addr[MAX_SMB_BMCS*2];
                                                   ^

WARNING:MISPLACED_INIT: __initdata should be placed after addr[MAX_SMB_BMCS*2]
#1113: FILE: drivers/char/ipmi/ipmi_smb.c:1060:
+static unsigned short __initdata addr[MAX_SMB_BMCS*2];

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1114: FILE: drivers/char/ipmi/ipmi_smb.c:1061:
+static int num_addrs = 0;

WARNING:SPLIT_STRING: quoted string split across lines
#1118: FILE: drivers/char/ipmi/ipmi_smb.c:1065:
+MODULE_PARM_DESC(addr, "Sets the addresses to scan for IPMI BMCs on the SMBus."
+		 " By default the driver will scan for anything it finds in"

WARNING:SPLIT_STRING: quoted string split across lines
#1119: FILE: drivers/char/ipmi/ipmi_smb.c:1066:
+		 " By default the driver will scan for anything it finds in"
+		 " DMI or ACPI tables.  Otherwise you have to hand-specify"

WARNING:SPLIT_STRING: quoted string split across lines
#1120: FILE: drivers/char/ipmi/ipmi_smb.c:1067:
+		 " DMI or ACPI tables.  Otherwise you have to hand-specify"
+		 " the address.  This is a list of pairs (ie a,b,c,d) where"

WARNING:SPLIT_STRING: quoted string split across lines
#1121: FILE: drivers/char/ipmi/ipmi_smb.c:1068:
+		 " the address.  This is a list of pairs (ie a,b,c,d) where"
+		 " each pair gives an adapter and an address.  In the"

WARNING:SPLIT_STRING: quoted string split across lines
#1122: FILE: drivers/char/ipmi/ipmi_smb.c:1069:
+		 " each pair gives an adapter and an address.  In the"
+		 " previous example it will scan address b on adapter a"

WARNING:SPLIT_STRING: quoted string split across lines
#1123: FILE: drivers/char/ipmi/ipmi_smb.c:1070:
+		 " previous example it will scan address b on adapter a"
+		 " and address d on adapter c."

WARNING:SPLIT_STRING: quoted string split across lines
#1124: FILE: drivers/char/ipmi/ipmi_smb.c:1071:
+		 " and address d on adapter c."
+		 " The first pair is for the first interface, etc.  If you"

WARNING:SPLIT_STRING: quoted string split across lines
#1125: FILE: drivers/char/ipmi/ipmi_smb.c:1072:
+		 " The first pair is for the first interface, etc.  If you"
+		 " don't provide this and don't have DMI/ACPI, it probably"

WARNING:SPLIT_STRING: quoted string split across lines
#1126: FILE: drivers/char/ipmi/ipmi_smb.c:1073:
+		 " don't provide this and don't have DMI/ACPI, it probably"
+		 " won't work.");

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1128: FILE: drivers/char/ipmi/ipmi_smb.c:1075:
+static int smb_defaultprobe = 0;

WARNING:SPLIT_STRING: quoted string split across lines
#1131: FILE: drivers/char/ipmi/ipmi_smb.c:1078:
+MODULE_PARM_DESC(defaultprobe, "Normally the driver will not scan anything"
+		 " but the specified values and DMI/ACPI values.  If you set"

WARNING:SPLIT_STRING: quoted string split across lines
#1132: FILE: drivers/char/ipmi/ipmi_smb.c:1079:
+		 " but the specified values and DMI/ACPI values.  If you set"
+		 " this to non-zero it will scan all addresses except for"

WARNING:SPLIT_STRING: quoted string split across lines
#1133: FILE: drivers/char/ipmi/ipmi_smb.c:1080:
+		 " this to non-zero it will scan all addresses except for"
+		 " certain dangerous ones.");

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1136: FILE: drivers/char/ipmi/ipmi_smb.c:1083:
+static int num_slave_addrs = 0;

WARNING:SPLIT_STRING: quoted string split across lines
#1139: FILE: drivers/char/ipmi/ipmi_smb.c:1086:
+MODULE_PARM_DESC(slave_addrs, "Set the default IPMB slave address for"
+		 " the controller.  Normally this is 0x20, but can be"

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1140: FILE: drivers/char/ipmi/ipmi_smb.c:1087:
+		 " overridden by this parm.  This is an array indexed"
 		                      ^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1140: FILE: drivers/char/ipmi/ipmi_smb.c:1087:
+		 " the controller.  Normally this is 0x20, but can be"
+		 " overridden by this parm.  This is an array indexed"

WARNING:SPLIT_STRING: quoted string split across lines
#1141: FILE: drivers/char/ipmi/ipmi_smb.c:1088:
+		 " overridden by this parm.  This is an array indexed"
+		 " by interface number.");

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1144: FILE: drivers/char/ipmi/ipmi_smb.c:1091:
+static int num_dbg = 0;

WARNING:SPLIT_STRING: quoted string split across lines
#1147: FILE: drivers/char/ipmi/ipmi_smb.c:1094:
+MODULE_PARM_DESC(dbg, "Turn on debugging.  Bit 0 enables message debugging,"
+		 " bit 1 enables state debugging, and bit 2 enables timing"

WARNING:SPLIT_STRING: quoted string split across lines
#1148: FILE: drivers/char/ipmi/ipmi_smb.c:1095:
+		 " bit 1 enables state debugging, and bit 2 enables timing"
+		 " debugging.  This is an array indexed by interface number");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1155: FILE: drivers/char/ipmi/ipmi_smb.c:1102:
+static unsigned short smb_force_list[MAX_SMB_BMCS*FORCE_LIST_ENTRIES + FORCE_LIST_ENTRIES];
                                                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1164: FILE: drivers/char/ipmi/ipmi_smb.c:1111:
+/*
+static unsigned int normal_isa[] = { SENSORS_ISA_END };

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1168: FILE: drivers/char/ipmi/ipmi_smb.c:1115:
+static unsigned short reserved[] =
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1187: FILE: drivers/char/ipmi/ipmi_smb.c:1134:
+^I.normal_i2c ^I^I= normal_i2c,$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1198: FILE: drivers/char/ipmi/ipmi_smb.c:1145:
+	if (addr[pos*2+1] != 0)
 	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1198: FILE: drivers/char/ipmi/ipmi_smb.c:1145:
+	if (addr[pos*2+1] != 0)
 	              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1199: FILE: drivers/char/ipmi/ipmi_smb.c:1146:
+		return (addr[pos*2] << 16) | addr[pos*2+1];
 		                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1199: FILE: drivers/char/ipmi/ipmi_smb.c:1146:
+		return (addr[pos*2] << 16) | addr[pos*2+1];
 		                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1199: FILE: drivers/char/ipmi/ipmi_smb.c:1146:
+		return (addr[pos*2] << 16) | addr[pos*2+1];
 		                                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1213: FILE: drivers/char/ipmi/ipmi_smb.c:1160:
+	if( id >= MAX_SMB_BMCS )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1213: FILE: drivers/char/ipmi/ipmi_smb.c:1160:
+	if( id >= MAX_SMB_BMCS )

ERROR:SPACING: space required before the open parenthesis '('
#1213: FILE: drivers/char/ipmi/ipmi_smb.c:1160:
+	if( id >= MAX_SMB_BMCS )

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1218: FILE: drivers/char/ipmi/ipmi_smb.c:1165:
+			printk(KERN_INFO

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'smb_found_addr_proc', this function's name, in a string
#1219: FILE: drivers/char/ipmi/ipmi_smb.c:1166:
+			       "smb_found_addr_proc:No IPMI client 0x%x: %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1226: FILE: drivers/char/ipmi/ipmi_smb.c:1173:
+		printk(KERN_INFO

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'smb_found_addr_proc', this function's name, in a string
#1227: FILE: drivers/char/ipmi/ipmi_smb.c:1174:
+		       "smb_found_addr_proc: i2c_probe found device at"

WARNING:SPLIT_STRING: quoted string split across lines
#1228: FILE: drivers/char/ipmi/ipmi_smb.c:1175:
+		       "smb_found_addr_proc: i2c_probe found device at"
+		       " i2c address %x\n", addr);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->msg_lock
#1231: FILE: drivers/char/ipmi/ipmi_smb.c:1178:
+	spin_lock_init(&(smb_info->msg_lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->xmit_msgs
#1232: FILE: drivers/char/ipmi/ipmi_smb.c:1179:
+	INIT_LIST_HEAD(&(smb_info->xmit_msgs));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->hp_xmit_msgs
#1233: FILE: drivers/char/ipmi/ipmi_smb.c:1180:
+	INIT_LIST_HEAD(&(smb_info->hp_xmit_msgs));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1242: FILE: drivers/char/ipmi/ipmi_smb.c:1189:
+	for (i=0; i < MAX_SMB_BMCS; i++) {
 	      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'smb_infos[next_pos] == NULL'
#1252: FILE: drivers/char/ipmi/ipmi_smb.c:1199:
+		if (!res && (next_pos == -1) && (smb_infos[next_pos] == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!smb_infos[next_pos]"
#1252: FILE: drivers/char/ipmi/ipmi_smb.c:1199:
+		if (!res && (next_pos == -1) && (smb_infos[next_pos] == NULL))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1265: FILE: drivers/char/ipmi/ipmi_smb.c:1212:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#1267: FILE: drivers/char/ipmi/ipmi_smb.c:1214:
+		       "smb_found_one_addr_proc:"
+		       " Unable to attach i2c client: error %d\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->intf
#1280: FILE: drivers/char/ipmi/ipmi_smb.c:1227:
+			       &(smb_info->intf));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1284: FILE: drivers/char/ipmi/ipmi_smb.c:1231:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1302: FILE: drivers/char/ipmi/ipmi_smb.c:1249:
+		printk(KERN_INFO "init_one_smb: Checking SMBus adapter %d:"

WARNING:SPLIT_STRING: quoted string split across lines
#1303: FILE: drivers/char/ipmi/ipmi_smb.c:1250:
+		printk(KERN_INFO "init_one_smb: Checking SMBus adapter %d:"
+		       " %s\n", id, adapter->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1309: FILE: drivers/char/ipmi/ipmi_smb.c:1256:
+		printk(KERN_INFO "init_one_smb: found SMBus adapter:"

WARNING:SPLIT_STRING: quoted string split across lines
#1310: FILE: drivers/char/ipmi/ipmi_smb.c:1257:
+		printk(KERN_INFO "init_one_smb: found SMBus adapter:"
+		       " %s\n", adapter->name);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1312: FILE: drivers/char/ipmi/ipmi_smb.c:1259:
+	if (!i2c_non_blocking_capable(adapter)) {
+	    if (smb_dbg_probe)

WARNING:TABSTOP: Statements should start on a tabstop
#1313: FILE: drivers/char/ipmi/ipmi_smb.c:1260:
+	    if (smb_dbg_probe)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#1313: FILE: drivers/char/ipmi/ipmi_smb.c:1260:
+	    if (smb_dbg_probe)
+		    printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1314: FILE: drivers/char/ipmi/ipmi_smb.c:1261:
+		    printk(KERN_INFO

WARNING:TABSTOP: Statements should start on a tabstop
#1317: FILE: drivers/char/ipmi/ipmi_smb.c:1264:
+	    return 0;

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1329: FILE: drivers/char/ipmi/ipmi_smb.c:1276:
+	if (! to_clean)
 	    ^

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1335: FILE: drivers/char/ipmi/ipmi_smb.c:1282:
+		msleep(1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1339: FILE: drivers/char/ipmi/ipmi_smb.c:1286:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1346: FILE: drivers/char/ipmi/ipmi_smb.c:1293:
+		printk(KERN_ERR

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1361: FILE: drivers/char/ipmi/ipmi_smb.c:1308:
+	return(0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:CAMELCASE: Avoid CamelCase: <SPMITable>
#1371: FILE: drivers/char/ipmi/ipmi_smb.c:1318:
+struct SPMITable {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Signature>
#1372: FILE: drivers/char/ipmi/ipmi_smb.c:1319:
+	s8	Signature[4];

CHECK:CAMELCASE: Avoid CamelCase: <Length>
#1373: FILE: drivers/char/ipmi/ipmi_smb.c:1320:
+	u32	Length;

CHECK:CAMELCASE: Avoid CamelCase: <Revision>
#1374: FILE: drivers/char/ipmi/ipmi_smb.c:1321:
+	u8	Revision;

CHECK:CAMELCASE: Avoid CamelCase: <Checksum>
#1375: FILE: drivers/char/ipmi/ipmi_smb.c:1322:
+	u8	Checksum;

CHECK:CAMELCASE: Avoid CamelCase: <OEMTableID>
#1377: FILE: drivers/char/ipmi/ipmi_smb.c:1324:
+	s8	OEMTableID[8];

CHECK:CAMELCASE: Avoid CamelCase: <OEMRevision>
#1378: FILE: drivers/char/ipmi/ipmi_smb.c:1325:
+	s8	OEMRevision[4];

CHECK:CAMELCASE: Avoid CamelCase: <CreatorID>
#1379: FILE: drivers/char/ipmi/ipmi_smb.c:1326:
+	s8	CreatorID[4];

CHECK:CAMELCASE: Avoid CamelCase: <CreatorRevision>
#1380: FILE: drivers/char/ipmi/ipmi_smb.c:1327:
+	s8	CreatorRevision[4];

CHECK:CAMELCASE: Avoid CamelCase: <InterfaceType>
#1381: FILE: drivers/char/ipmi/ipmi_smb.c:1328:
+	u8	InterfaceType;

CHECK:CAMELCASE: Avoid CamelCase: <IPMIlegacy>
#1382: FILE: drivers/char/ipmi/ipmi_smb.c:1329:
+	u8	IPMIlegacy;

CHECK:CAMELCASE: Avoid CamelCase: <SpecificationRevision>
#1383: FILE: drivers/char/ipmi/ipmi_smb.c:1330:
+	s16	SpecificationRevision;

CHECK:CAMELCASE: Avoid CamelCase: <InterruptType>
#1389: FILE: drivers/char/ipmi/ipmi_smb.c:1336:
+	u8	InterruptType;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1392: FILE: drivers/char/ipmi/ipmi_smb.c:1339:
+           interrupt in the GPEx_STS register. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1392: FILE: drivers/char/ipmi/ipmi_smb.c:1339:
+	/* If bit 0 of InterruptType is set, then this is the SCI
+           interrupt in the GPEx_STS register. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1392: FILE: drivers/char/ipmi/ipmi_smb.c:1339:
+           interrupt in the GPEx_STS register. */

CHECK:CAMELCASE: Avoid CamelCase: <Reserved>
#1395: FILE: drivers/char/ipmi/ipmi_smb.c:1342:
+	s16	Reserved;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1398: FILE: drivers/char/ipmi/ipmi_smb.c:1345:
+           APIC/SAPIC interrupt. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1398: FILE: drivers/char/ipmi/ipmi_smb.c:1345:
+	/* If bit 1 of InterruptType is set, then this is the I/O
+           APIC/SAPIC interrupt. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1398: FILE: drivers/char/ipmi/ipmi_smb.c:1345:
+           APIC/SAPIC interrupt. */

CHECK:CAMELCASE: Avoid CamelCase: <GlobalSystemInterrupt>
#1399: FILE: drivers/char/ipmi/ipmi_smb.c:1346:
+	u32	GlobalSystemInterrupt;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1414: FILE: drivers/char/ipmi/ipmi_smb.c:1361:
+	status = acpi_get_firmware_table("SPMI", intf_num+1,
 	                                                 ^

CHECK:SPACING: No space is necessary after a cast
#1416: FILE: drivers/char/ipmi/ipmi_smb.c:1363:
+					 (struct acpi_table_header **) &spmi);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1420: FILE: drivers/char/ipmi/ipmi_smb.c:1367:
+	if (spmi->IPMIlegacy != 1) {
+	    printk(KERN_WARNING "IPMI: Bad SPMI legacy %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1421: FILE: drivers/char/ipmi/ipmi_smb.c:1368:
+	    printk(KERN_WARNING "IPMI: Bad SPMI legacy %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1423: FILE: drivers/char/ipmi/ipmi_smb.c:1370:
+  ^I    return -ENODEV;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1423: FILE: drivers/char/ipmi/ipmi_smb.c:1370:
+  ^I    return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1423: FILE: drivers/char/ipmi/ipmi_smb.c:1370:
+  ^I    return -ENODEV;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1430: FILE: drivers/char/ipmi/ipmi_smb.c:1377:
+		printk(KERN_WARNING

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1435: FILE: drivers/char/ipmi/ipmi_smb.c:1382:
+	if (addr[intf_num*2+1] == 0) {
 	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1435: FILE: drivers/char/ipmi/ipmi_smb.c:1382:
+	if (addr[intf_num*2+1] == 0) {
 	                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1437: FILE: drivers/char/ipmi/ipmi_smb.c:1384:
+		addr[intf_num*2] = 0; /* Assume adapter 0 */
 		             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1438: FILE: drivers/char/ipmi/ipmi_smb.c:1385:
+		addr[intf_num*2+1] = spmi->addr.address >> 1;
 		             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1438: FILE: drivers/char/ipmi/ipmi_smb.c:1385:
+		addr[intf_num*2+1] = spmi->addr.address >> 1;
 		               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1439: FILE: drivers/char/ipmi/ipmi_smb.c:1386:
+		printk(KERN_INFO

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1441: FILE: drivers/char/ipmi/ipmi_smb.c:1388:
+		       addr[intf_num*2+1]);
 		                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1441: FILE: drivers/char/ipmi/ipmi_smb.c:1388:
+		       addr[intf_num*2+1]);
 		                      ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1449: FILE: drivers/char/ipmi/ipmi_smb.c:1396:
+typedef struct dmi_header

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1450: FILE: drivers/char/ipmi/ipmi_smb.c:1397:
+typedef struct dmi_header
+{

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1463: FILE: drivers/char/ipmi/ipmi_smb.c:1410:
+	if (addr[intf_num*2+1] == 0) {
 	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1463: FILE: drivers/char/ipmi/ipmi_smb.c:1410:
+	if (addr[intf_num*2+1] == 0) {
 	                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1465: FILE: drivers/char/ipmi/ipmi_smb.c:1412:
+		addr[intf_num*2] = 0; /* Assume adapter 0 */
 		             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1466: FILE: drivers/char/ipmi/ipmi_smb.c:1413:
+		addr[intf_num*2+1] = data[8] >> 1;
 		             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1466: FILE: drivers/char/ipmi/ipmi_smb.c:1413:
+		addr[intf_num*2+1] = data[8] >> 1;
 		               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1467: FILE: drivers/char/ipmi/ipmi_smb.c:1414:
+		printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1473: FILE: drivers/char/ipmi/ipmi_smb.c:1420:
+		printk(KERN_INFO

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1483: FILE: drivers/char/ipmi/ipmi_smb.c:1430:
+^Iu8 ^I^I  *buf;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1485: FILE: drivers/char/ipmi/ipmi_smb.c:1432:
+^Iu8 ^I^I  *data;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1486: FILE: drivers/char/ipmi/ipmi_smb.c:1433:
+^Iint ^I^I  i=1;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1486: FILE: drivers/char/ipmi/ipmi_smb.c:1433:
+	int 		  i=1;
 	    		   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#1487: FILE: drivers/char/ipmi/ipmi_smb.c:1434:
+	int		  status=-1;
 	   		        ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#1487: FILE: drivers/char/ipmi/ipmi_smb.c:1434:
+	int		  status=-1;
 	   		         ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1491: FILE: drivers/char/ipmi/ipmi_smb.c:1438:
+	if(buf==NULL)
 	      ^

ERROR:SPACING: space required before the open parenthesis '('
#1491: FILE: drivers/char/ipmi/ipmi_smb.c:1438:
+	if(buf==NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf"
#1491: FILE: drivers/char/ipmi/ipmi_smb.c:1438:
+	if(buf==NULL)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1496: FILE: drivers/char/ipmi/ipmi_smb.c:1443:
+	while(i<num && (data - buf) < len)
+	{

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1496: FILE: drivers/char/ipmi/ipmi_smb.c:1443:
+	while(i<num && (data - buf) < len)
 	       ^

ERROR:SPACING: space required before the open parenthesis '('
#1496: FILE: drivers/char/ipmi/ipmi_smb.c:1443:
+	while(i<num && (data - buf) < len)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1498: FILE: drivers/char/ipmi/ipmi_smb.c:1445:
+		dm=(dmi_header_t *)data;
 		  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1500: FILE: drivers/char/ipmi/ipmi_smb.c:1447:
+		if((data-buf+dm->length) >= len)
 		        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1500: FILE: drivers/char/ipmi/ipmi_smb.c:1447:
+		if((data-buf+dm->length) >= len)
 		            ^

ERROR:SPACING: space required before the open parenthesis '('
#1500: FILE: drivers/char/ipmi/ipmi_smb.c:1447:
+		if((data-buf+dm->length) >= len)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1501: FILE: drivers/char/ipmi/ipmi_smb.c:1448:
+        ^I^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1501: FILE: drivers/char/ipmi/ipmi_smb.c:1448:
+        ^I^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1501: FILE: drivers/char/ipmi/ipmi_smb.c:1448:
+        ^I^Ibreak;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1511: FILE: drivers/char/ipmi/ipmi_smb.c:1458:
+^I        data+=dm->length;$

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#1511: FILE: drivers/char/ipmi/ipmi_smb.c:1458:
+	        data+=dm->length;
 	            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1512: FILE: drivers/char/ipmi/ipmi_smb.c:1459:
+		while((data-buf) < len && (*data || data[1]))
 		           ^

ERROR:SPACING: space required before the open parenthesis '('
#1512: FILE: drivers/char/ipmi/ipmi_smb.c:1459:
+		while((data-buf) < len && (*data || data[1]))

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#1514: FILE: drivers/char/ipmi/ipmi_smb.c:1461:
+		data+=2;
 		    ^

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#1522: FILE: drivers/char/ipmi/ipmi_smb.c:1469:
+inline static int dmi_checksum(u8 *buf)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1524: FILE: drivers/char/ipmi/ipmi_smb.c:1471:
+	u8   sum=0;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1527: FILE: drivers/char/ipmi/ipmi_smb.c:1474:
+	for(a=0; a<15; a++)
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1527: FILE: drivers/char/ipmi/ipmi_smb.c:1474:
+	for(a=0; a<15; a++)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#1527: FILE: drivers/char/ipmi/ipmi_smb.c:1474:
+	for(a=0; a<15; a++)

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#1528: FILE: drivers/char/ipmi/ipmi_smb.c:1475:
+		sum+=buf[a];
 		   ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1529: FILE: drivers/char/ipmi/ipmi_smb.c:1476:
+	return (sum==0);
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1535: FILE: drivers/char/ipmi/ipmi_smb.c:1482:
+	u32  fp=0xF0000;
 	       ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1541: FILE: drivers/char/ipmi/ipmi_smb.c:1488:
+	while(fp < 0xFFFFF)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#1541: FILE: drivers/char/ipmi/ipmi_smb.c:1488:
+	while(fp < 0xFFFFF)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1544: FILE: drivers/char/ipmi/ipmi_smb.c:1491:
+		if(memcmp(buf, "_DMI_", 5)==0 && dmi_checksum(buf))
+		{

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1544: FILE: drivers/char/ipmi/ipmi_smb.c:1491:
+		if(memcmp(buf, "_DMI_", 5)==0 && dmi_checksum(buf))
 		                          ^

ERROR:SPACING: space required before the open parenthesis '('
#1544: FILE: drivers/char/ipmi/ipmi_smb.c:1491:
+		if(memcmp(buf, "_DMI_", 5)==0 && dmi_checksum(buf))

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1546: FILE: drivers/char/ipmi/ipmi_smb.c:1493:
+			u16 num=buf[13]<<8|buf[12];
 			       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1546: FILE: drivers/char/ipmi/ipmi_smb.c:1493:
+			u16 num=buf[13]<<8|buf[12];
 			               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1546: FILE: drivers/char/ipmi/ipmi_smb.c:1493:
+			u16 num=buf[13]<<8|buf[12];
 			                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1547: FILE: drivers/char/ipmi/ipmi_smb.c:1494:
+			u16 len=buf[7]<<8|buf[6];
 			       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1547: FILE: drivers/char/ipmi/ipmi_smb.c:1494:
+			u16 len=buf[7]<<8|buf[6];
 			              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1547: FILE: drivers/char/ipmi/ipmi_smb.c:1494:
+			u16 len=buf[7]<<8|buf[6];
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1548: FILE: drivers/char/ipmi/ipmi_smb.c:1495:
+			u32 base=buf[11]<<24|buf[10]<<16|buf[9]<<8|buf[8];
 			        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1548: FILE: drivers/char/ipmi/ipmi_smb.c:1495:
+			u32 base=buf[11]<<24|buf[10]<<16|buf[9]<<8|buf[8];
 			                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1548: FILE: drivers/char/ipmi/ipmi_smb.c:1495:
+			u32 base=buf[11]<<24|buf[10]<<16|buf[9]<<8|buf[8];
 			                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1548: FILE: drivers/char/ipmi/ipmi_smb.c:1495:
+			u32 base=buf[11]<<24|buf[10]<<16|buf[9]<<8|buf[8];
 			                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1548: FILE: drivers/char/ipmi/ipmi_smb.c:1495:
+			u32 base=buf[11]<<24|buf[10]<<16|buf[9]<<8|buf[8];
 			                                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1548: FILE: drivers/char/ipmi/ipmi_smb.c:1495:
+			u32 base=buf[11]<<24|buf[10]<<16|buf[9]<<8|buf[8];
 			                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1548: FILE: drivers/char/ipmi/ipmi_smb.c:1495:
+			u32 base=buf[11]<<24|buf[10]<<16|buf[9]<<8|buf[8];
 			                                          ^

ERROR:SPACING: space required before the open parenthesis '('
#1550: FILE: drivers/char/ipmi/ipmi_smb.c:1497:
+			if(dmi_table(base, len, num) == 0)

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#1553: FILE: drivers/char/ipmi/ipmi_smb.c:1500:
+		fp+=16;
 		  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1568: FILE: drivers/char/ipmi/ipmi_smb.c:1515:
+	printk(KERN_INFO "IPMI SMB Interface driver version "

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1575: FILE: drivers/char/ipmi/ipmi_smb.c:1522:
+	for (i=0; i<MAX_SMB_BMCS; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1575: FILE: drivers/char/ipmi/ipmi_smb.c:1522:
+	for (i=0; i<MAX_SMB_BMCS; i++)
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1580: FILE: drivers/char/ipmi/ipmi_smb.c:1527:
+	for (i=0; i<MAX_SMB_BMCS; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1580: FILE: drivers/char/ipmi/ipmi_smb.c:1527:
+	for (i=0; i<MAX_SMB_BMCS; i++) {
 	           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1581: FILE: drivers/char/ipmi/ipmi_smb.c:1528:
+		if (addr[i*2+1] == 0)
 		          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1581: FILE: drivers/char/ipmi/ipmi_smb.c:1528:
+		if (addr[i*2+1] == 0)
 		            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1583: FILE: drivers/char/ipmi/ipmi_smb.c:1530:
+		smb_force_list[i*FORCE_LIST_ENTRIES] = addr[i*2];
 		                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1583: FILE: drivers/char/ipmi/ipmi_smb.c:1530:
+		smb_force_list[i*FORCE_LIST_ENTRIES] = addr[i*2];
 		                                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1584: FILE: drivers/char/ipmi/ipmi_smb.c:1531:
+		smb_force_list[i*FORCE_LIST_ENTRIES+1] = addr[i*2+1];
 		                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1584: FILE: drivers/char/ipmi/ipmi_smb.c:1531:
+		smb_force_list[i*FORCE_LIST_ENTRIES+1] = addr[i*2+1];
 		                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1584: FILE: drivers/char/ipmi/ipmi_smb.c:1531:
+		smb_force_list[i*FORCE_LIST_ENTRIES+1] = addr[i*2+1];
 		                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1584: FILE: drivers/char/ipmi/ipmi_smb.c:1531:
+		smb_force_list[i*FORCE_LIST_ENTRIES+1] = addr[i*2+1];
 		                                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1586: FILE: drivers/char/ipmi/ipmi_smb.c:1533:
+	smb_force_list[i*FORCE_LIST_ENTRIES] = I2C_CLIENT_END;
 	                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1587: FILE: drivers/char/ipmi/ipmi_smb.c:1534:
+	smb_force_list[i*FORCE_LIST_ENTRIES+1] = I2C_CLIENT_END;
 	                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1587: FILE: drivers/char/ipmi/ipmi_smb.c:1534:
+	smb_force_list[i*FORCE_LIST_ENTRIES+1] = I2C_CLIENT_END;
 	                                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1590: FILE: drivers/char/ipmi/ipmi_smb.c:1537:
+	 * range scanning. */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1610: FILE: drivers/char/ipmi/ipmi_smb.c:1557:
+	for (i=0; i<MAX_SMB_BMCS; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1610: FILE: drivers/char/ipmi/ipmi_smb.c:1557:
+	for (i=0; i<MAX_SMB_BMCS; i++) {
 	           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1610: FILE: drivers/char/ipmi/ipmi_smb.c:1557:
+	for (i=0; i<MAX_SMB_BMCS; i++) {
+		cleanup_one_smb(smb_infos[i]);
+	}

WARNING:SPLIT_STRING: quoted string split across lines
#1623: FILE: drivers/char/ipmi/ipmi_smb.c:1570:
+MODULE_AUTHOR("Todd C Davis <todd.c.davis@intel.com>, "
+	      "Corey Minyard <minyard@acm.org>");

WARNING:TYPO_SPELLING: 'compilant' may be misspelled - perhaps 'compliant'?
#1706: FILE: Documentation/IPMI.txt:449:
+Discovering the IPMI compilant BMC on the SMBus can cause devices on
                      ^^^^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210150.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 101 errors, 147 warnings, 134 checks, 1657 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210150.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
