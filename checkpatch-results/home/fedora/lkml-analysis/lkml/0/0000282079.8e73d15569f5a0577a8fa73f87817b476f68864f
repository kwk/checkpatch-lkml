WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#174: FILE: arch/s390/kernel/entry.S:504:
+        stosm   24(%r15),0x03     # reenable interrupts
                                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#208: FILE: arch/s390/kernel/entry64.S:537:
+	stosm   48(%r15),0x03     # reenable interrupts
 	                            ^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#220: FILE: arch/s390/kernel/module.c:280:
+			*(unsigned int *) loc =

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Addr>
#221: FILE: arch/s390/kernel/module.c:281:
+				(val + (Elf_Addr) me->module_core - loc) >> 1;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#250: FILE: arch/s390/kernel/smp.c:665:
+			printk(KERN_WARNING "topology_init: register_cpu %d "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'topology_init', this function's name, in a string
#250: FILE: arch/s390/kernel/smp.c:665:
+			printk(KERN_WARNING "topology_init: register_cpu %d "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#251: FILE: arch/s390/kernel/smp.c:666:
+			printk(KERN_WARNING "topology_init: register_cpu %d "
+			       "failed (%d)\n", cpu, ret);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: arch/s390/mm/init.c:72:
+                        shared += page_count(mem_map+i) - 1;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: arch/s390/mm/init.c:72:
+                        shared += page_count(mem_map+i) - 1;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#341: FILE: arch/s390/mm/init.c:72:
+                        shared += page_count(mem_map+i) - 1;
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#362: FILE: include/asm-s390/percpu.h:16:
+#define __get_got_cpu_var(var,offset) \
                              ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#362: FILE: include/asm-s390/percpu.h:16:
+#define __get_got_cpu_var(var,offset) \
+  (*({ unsigned long *__ptr; \
+       asm ( "larl %0,per_cpu__"#var"@GOTENT" : "=a" (__ptr) ); \
+       ((typeof(&per_cpu__##var))((*__ptr) + offset)); \
+    }))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: include/asm-s390/percpu.h:17:
+  (*({ unsigned long *__ptr; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: include/asm-s390/percpu.h:18:
+       asm ( "larl %0,per_cpu__"#var"@GOTENT" : "=a" (__ptr) ); \$

ERROR:SPACING: space prohibited after that open parenthesis '('
#364: FILE: include/asm-s390/percpu.h:18:
+       asm ( "larl %0,per_cpu__"#var"@GOTENT" : "=a" (__ptr) ); \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#364: FILE: include/asm-s390/percpu.h:18:
+       asm ( "larl %0,per_cpu__"#var"@GOTENT" : "=a" (__ptr) ); \

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#364: FILE: include/asm-s390/percpu.h:18:
+       asm ( "larl %0,per_cpu__"#var"@GOTENT" : "=a" (__ptr) ); \

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: include/asm-s390/percpu.h:19:
+       ((typeof(&per_cpu__##var))((*__ptr) + offset)); \$

CHECK:SPACING: spaces preferred around that '&' (ctx:BxV)
#365: FILE: include/asm-s390/percpu.h:19:
+       ((typeof(&per_cpu__##var))((*__ptr) + offset)); \
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: include/asm-s390/percpu.h:20:
+    }))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#368: FILE: include/asm-s390/percpu.h:22:
+#define __get_cpu_var(var) __get_got_cpu_var(var,S390_lowcore.percpu_offset)
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#370: FILE: include/asm-s390/percpu.h:24:
+#define per_cpu(var,cpu) __get_got_cpu_var(var,__per_cpu_offset[cpu])
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#370: FILE: include/asm-s390/percpu.h:24:
+#define per_cpu(var,cpu) __get_got_cpu_var(var,__per_cpu_offset[cpu])
                                               ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000282079.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 10 warnings, 6 checks, 332 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000282079.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
