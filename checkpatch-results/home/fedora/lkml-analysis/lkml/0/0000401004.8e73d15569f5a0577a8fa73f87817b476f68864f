ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#40: 
--- a/include/linux/msg.h	Fri Jan 10 17:08:23 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: include/linux/security.h:633:
+ *^IReturn 0 if permission is granted.  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: include/linux/security.h:643:
+ *^Iqueue, @msq.  The @target task structure contains a pointer to the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: include/linux/security.h:644:
+ *^Iprocess that will be receiving the message (not equal to the current $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: include/linux/security.h:709:
+ *^Iperformed on the semaphore @sma.  The @sma may be NULL, e.g. for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: include/linux/security.h:716:
+ *^Isemaphore set @sma.  If the @alter flag is nonzero, the semaphore set $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#176: FILE: include/linux/security.h:922:
+	int (*msg_msg_alloc_security) (struct msg_msg * msg);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#176: FILE: include/linux/security.h:922:
+	int (*msg_msg_alloc_security) (struct msg_msg * msg);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#177: FILE: include/linux/security.h:923:
+	void (*msg_msg_free_security) (struct msg_msg * msg);

WARNING:SPACING: Unnecessary space before function pointer arguments
#177: FILE: include/linux/security.h:923:
+	void (*msg_msg_free_security) (struct msg_msg * msg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#181: FILE: include/linux/security.h:927:
+	int (*msg_queue_associate) (struct msg_queue * msq, int msqflg);

WARNING:SPACING: Unnecessary space before function pointer arguments
#181: FILE: include/linux/security.h:927:
+	int (*msg_queue_associate) (struct msg_queue * msq, int msqflg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#182: FILE: include/linux/security.h:928:
+	int (*msg_queue_msgctl) (struct msg_queue * msq, int cmd);

WARNING:SPACING: Unnecessary space before function pointer arguments
#182: FILE: include/linux/security.h:928:
+	int (*msg_queue_msgctl) (struct msg_queue * msq, int cmd);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#183: FILE: include/linux/security.h:929:
+	int (*msg_queue_msgsnd) (struct msg_queue * msq,

WARNING:SPACING: Unnecessary space before function pointer arguments
#183: FILE: include/linux/security.h:929:
+	int (*msg_queue_msgsnd) (struct msg_queue * msq,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#184: FILE: include/linux/security.h:930:
+				 struct msg_msg * msg, int msqflg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#185: FILE: include/linux/security.h:931:
+	int (*msg_queue_msgrcv) (struct msg_queue * msq,

WARNING:SPACING: Unnecessary space before function pointer arguments
#185: FILE: include/linux/security.h:931:
+	int (*msg_queue_msgrcv) (struct msg_queue * msq,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#186: FILE: include/linux/security.h:932:
+				 struct msg_msg * msg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#187: FILE: include/linux/security.h:933:
+				 struct task_struct * target,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#192: FILE: include/linux/security.h:938:
+	int (*shm_associate) (struct shmid_kernel * shp, int shmflg);

WARNING:SPACING: Unnecessary space before function pointer arguments
#192: FILE: include/linux/security.h:938:
+	int (*shm_associate) (struct shmid_kernel * shp, int shmflg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#193: FILE: include/linux/security.h:939:
+	int (*shm_shmctl) (struct shmid_kernel * shp, int cmd);

WARNING:SPACING: Unnecessary space before function pointer arguments
#193: FILE: include/linux/security.h:939:
+	int (*shm_shmctl) (struct shmid_kernel * shp, int cmd);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: include/linux/security.h:940:
+^Iint (*shm_shmat) (struct shmid_kernel * shp, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#194: FILE: include/linux/security.h:940:
+	int (*shm_shmat) (struct shmid_kernel * shp, 

WARNING:SPACING: Unnecessary space before function pointer arguments
#194: FILE: include/linux/security.h:940:
+	int (*shm_shmat) (struct shmid_kernel * shp, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#199: FILE: include/linux/security.h:945:
+	int (*sem_associate) (struct sem_array * sma, int semflg);

WARNING:SPACING: Unnecessary space before function pointer arguments
#199: FILE: include/linux/security.h:945:
+	int (*sem_associate) (struct sem_array * sma, int semflg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#200: FILE: include/linux/security.h:946:
+	int (*sem_semctl) (struct sem_array * sma, int cmd);

WARNING:SPACING: Unnecessary space before function pointer arguments
#200: FILE: include/linux/security.h:946:
+	int (*sem_semctl) (struct sem_array * sma, int cmd);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: include/linux/security.h:947:
+^Iint (*sem_semop) (struct sem_array * sma, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#201: FILE: include/linux/security.h:947:
+	int (*sem_semop) (struct sem_array * sma, 

WARNING:SPACING: Unnecessary space before function pointer arguments
#201: FILE: include/linux/security.h:947:
+	int (*sem_semop) (struct sem_array * sma, 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#202: FILE: include/linux/security.h:948:
+			  struct sembuf * sops, unsigned nsops, int alter);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#202: FILE: include/linux/security.h:948:
+			  struct sembuf * sops, unsigned nsops, int alter);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#210: FILE: include/linux/security.h:1447:
+static inline int security_msg_msg_alloc (struct msg_msg * msg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#210: FILE: include/linux/security.h:1447:
+static inline int security_msg_msg_alloc (struct msg_msg * msg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#212: FILE: include/linux/security.h:1449:
+	return security_ops->msg_msg_alloc_security (msg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#215: FILE: include/linux/security.h:1452:
+static inline void security_msg_msg_free (struct msg_msg * msg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#215: FILE: include/linux/security.h:1452:
+static inline void security_msg_msg_free (struct msg_msg * msg)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: include/linux/security.h:1467:
+static inline int security_msg_queue_associate (struct msg_queue * msq, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#227: FILE: include/linux/security.h:1467:
+static inline int security_msg_queue_associate (struct msg_queue * msq, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#227: FILE: include/linux/security.h:1467:
+static inline int security_msg_queue_associate (struct msg_queue * msq, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#230: FILE: include/linux/security.h:1470:
+	return security_ops->msg_queue_associate (msq, msqflg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#233: FILE: include/linux/security.h:1473:
+static inline int security_msg_queue_msgctl (struct msg_queue * msq, int cmd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#233: FILE: include/linux/security.h:1473:
+static inline int security_msg_queue_msgctl (struct msg_queue * msq, int cmd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#235: FILE: include/linux/security.h:1475:
+	return security_ops->msg_queue_msgctl (msq, cmd);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#238: FILE: include/linux/security.h:1478:
+static inline int security_msg_queue_msgsnd (struct msg_queue * msq,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#238: FILE: include/linux/security.h:1478:
+static inline int security_msg_queue_msgsnd (struct msg_queue * msq,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#239: FILE: include/linux/security.h:1479:
+					     struct msg_msg * msg, int msqflg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#241: FILE: include/linux/security.h:1481:
+	return security_ops->msg_queue_msgsnd (msq, msg, msqflg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#244: FILE: include/linux/security.h:1484:
+static inline int security_msg_queue_msgrcv (struct msg_queue * msq,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#244: FILE: include/linux/security.h:1484:
+static inline int security_msg_queue_msgrcv (struct msg_queue * msq,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#245: FILE: include/linux/security.h:1485:
+					     struct msg_msg * msg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#246: FILE: include/linux/security.h:1486:
+					     struct task_struct * target,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#249: FILE: include/linux/security.h:1489:
+	return security_ops->msg_queue_msgrcv (msq, msg, target, type, mode);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: include/linux/security.h:1502:
+static inline int security_shm_associate (struct shmid_kernel * shp, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#259: FILE: include/linux/security.h:1502:
+static inline int security_shm_associate (struct shmid_kernel * shp, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#259: FILE: include/linux/security.h:1502:
+static inline int security_shm_associate (struct shmid_kernel * shp, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#265: FILE: include/linux/security.h:1508:
+static inline int security_shm_shmctl (struct shmid_kernel * shp, int cmd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#265: FILE: include/linux/security.h:1508:
+static inline int security_shm_shmctl (struct shmid_kernel * shp, int cmd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#267: FILE: include/linux/security.h:1510:
+	return security_ops->shm_shmctl (shp, cmd);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: include/linux/security.h:1513:
+static inline int security_shm_shmat (struct shmid_kernel * shp, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#270: FILE: include/linux/security.h:1513:
+static inline int security_shm_shmat (struct shmid_kernel * shp, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#270: FILE: include/linux/security.h:1513:
+static inline int security_shm_shmat (struct shmid_kernel * shp, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#283: FILE: include/linux/security.h:1529:
+static inline int security_sem_associate (struct sem_array * sma, int semflg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#283: FILE: include/linux/security.h:1529:
+static inline int security_sem_associate (struct sem_array * sma, int semflg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#285: FILE: include/linux/security.h:1531:
+	return security_ops->sem_associate (sma, semflg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#288: FILE: include/linux/security.h:1534:
+static inline int security_sem_semctl (struct sem_array * sma, int cmd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#288: FILE: include/linux/security.h:1534:
+static inline int security_sem_semctl (struct sem_array * sma, int cmd)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: include/linux/security.h:1539:
+static inline int security_sem_semop (struct sem_array * sma, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#293: FILE: include/linux/security.h:1539:
+static inline int security_sem_semop (struct sem_array * sma, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#293: FILE: include/linux/security.h:1539:
+static inline int security_sem_semop (struct sem_array * sma, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: include/linux/security.h:1540:
+^I^I^I^I      struct sembuf * sops, unsigned nsops, $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#294: FILE: include/linux/security.h:1540:
+				      struct sembuf * sops, unsigned nsops, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#294: FILE: include/linux/security.h:1540:
+				      struct sembuf * sops, unsigned nsops, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#306: FILE: include/linux/security.h:2016:
+static inline int security_msg_msg_alloc (struct msg_msg * msg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#306: FILE: include/linux/security.h:2016:
+static inline int security_msg_msg_alloc (struct msg_msg * msg)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#311: FILE: include/linux/security.h:2021:
+static inline void security_msg_msg_free (struct msg_msg * msg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#311: FILE: include/linux/security.h:2021:
+static inline void security_msg_msg_free (struct msg_msg * msg)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: include/linux/security.h:2032:
+static inline int security_msg_queue_associate (struct msg_queue * msq, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#321: FILE: include/linux/security.h:2032:
+static inline int security_msg_queue_associate (struct msg_queue * msq, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#321: FILE: include/linux/security.h:2032:
+static inline int security_msg_queue_associate (struct msg_queue * msq, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#327: FILE: include/linux/security.h:2038:
+static inline int security_msg_queue_msgctl (struct msg_queue * msq, int cmd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#327: FILE: include/linux/security.h:2038:
+static inline int security_msg_queue_msgctl (struct msg_queue * msq, int cmd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#332: FILE: include/linux/security.h:2043:
+static inline int security_msg_queue_msgsnd (struct msg_queue * msq,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#332: FILE: include/linux/security.h:2043:
+static inline int security_msg_queue_msgsnd (struct msg_queue * msq,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#333: FILE: include/linux/security.h:2044:
+					     struct msg_msg * msg, int msqflg)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#338: FILE: include/linux/security.h:2049:
+static inline int security_msg_queue_msgrcv (struct msg_queue * msq,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#338: FILE: include/linux/security.h:2049:
+static inline int security_msg_queue_msgrcv (struct msg_queue * msq,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#339: FILE: include/linux/security.h:2050:
+					     struct msg_msg * msg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#340: FILE: include/linux/security.h:2051:
+					     struct task_struct * target,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: include/linux/security.h:2065:
+static inline int security_shm_associate (struct shmid_kernel * shp, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#353: FILE: include/linux/security.h:2065:
+static inline int security_shm_associate (struct shmid_kernel * shp, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#353: FILE: include/linux/security.h:2065:
+static inline int security_shm_associate (struct shmid_kernel * shp, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#359: FILE: include/linux/security.h:2071:
+static inline int security_shm_shmctl (struct shmid_kernel * shp, int cmd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#359: FILE: include/linux/security.h:2071:
+static inline int security_shm_shmctl (struct shmid_kernel * shp, int cmd)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#364: FILE: include/linux/security.h:2076:
+static inline int security_shm_shmat (struct shmid_kernel * shp, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#364: FILE: include/linux/security.h:2076:
+static inline int security_shm_shmat (struct shmid_kernel * shp, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#364: FILE: include/linux/security.h:2076:
+static inline int security_shm_shmat (struct shmid_kernel * shp, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#377: FILE: include/linux/security.h:2090:
+static inline int security_sem_associate (struct sem_array * sma, int semflg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#377: FILE: include/linux/security.h:2090:
+static inline int security_sem_associate (struct sem_array * sma, int semflg)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#382: FILE: include/linux/security.h:2095:
+static inline int security_sem_semctl (struct sem_array * sma, int cmd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#382: FILE: include/linux/security.h:2095:
+static inline int security_sem_semctl (struct sem_array * sma, int cmd)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#387: FILE: include/linux/security.h:2100:
+static inline int security_sem_semop (struct sem_array * sma, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#387: FILE: include/linux/security.h:2100:
+static inline int security_sem_semop (struct sem_array * sma, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#387: FILE: include/linux/security.h:2100:
+static inline int security_sem_semop (struct sem_array * sma, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: include/linux/security.h:2101:
+^I^I^I^I      struct sembuf * sops, unsigned nsops, $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#388: FILE: include/linux/security.h:2101:
+				      struct sembuf * sops, unsigned nsops, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#388: FILE: include/linux/security.h:2101:
+				      struct sembuf * sops, unsigned nsops, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#421: FILE: ipc/msg.c:193:
+^I$

CHECK:BRACES: Unbalanced braces around else statement
#435: FILE: ipc/msg.c:320:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#437: FILE: ipc/msg.c:322:
+^I^I    ^Iret = security_msg_queue_associate(msq, msgflg);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#437: FILE: ipc/msg.c:322:
+^I^I    ^Iret = security_msg_queue_associate(msq, msgflg);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#489: FILE: ipc/msg.c:623:
+		if(testmsg(msg,msr->r_msgtype,msr->r_mode) &&
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#489: FILE: ipc/msg.c:623:
+		if(testmsg(msg,msr->r_msgtype,msr->r_mode) &&
 		                             ^

ERROR:SPACING: space required before the open parenthesis '('
#489: FILE: ipc/msg.c:623:
+		if(testmsg(msg,msr->r_msgtype,msr->r_mode) &&

ERROR:SPACING: space required after that ',' (ctx:VxV)
#510: FILE: ipc/msg.c:777:
+		if(testmsg(msg,msgtyp,mode) &&
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#510: FILE: ipc/msg.c:777:
+		if(testmsg(msg,msgtyp,mode) &&
 		                     ^

ERROR:SPACING: space required before the open parenthesis '('
#510: FILE: ipc/msg.c:777:
+		if(testmsg(msg,msgtyp,mode) &&

CHECK:BRACES: Unbalanced braces around else statement
#524: FILE: ipc/sem.c:191:
+		else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#526: FILE: ipc/sem.c:193:
+			int semid = sem_buildid(id, sma->sem_perm.seq);
+			err = security_sem_associate(sma, semflg);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#540: FILE: ipc/sem.c:476:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#588: FILE: ipc/sem.c:1065:
+^Ierror = -EACCES;^I^I$

CHECK:BRACES: Unbalanced braces around else statement
#601: FILE: ipc/shm.c:260:
+		else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#603: FILE: ipc/shm.c:262:
+			int shmid = shm_buildid(id, shp->shm_perm.seq);
+			err = security_shm_associate(shp, shmflg);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#650: FILE: ipc/shm.c:517:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#680: FILE: ipc/shm.c:597:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#694: FILE: ipc/shm.c:692:
+^I^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#705: FILE: security/dummy.c:504:
+static int dummy_msg_msg_alloc_security (struct msg_msg *msg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#710: FILE: security/dummy.c:509:
+static void dummy_msg_msg_free_security (struct msg_msg *msg)

WARNING:RETURN_VOID: void function return statements are not generally useful
#713: FILE: security/dummy.c:512:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#721: FILE: security/dummy.c:524:
+static int dummy_msg_queue_associate (struct msg_queue *msq, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#721: FILE: security/dummy.c:524:
+static int dummy_msg_queue_associate (struct msg_queue *msq, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#727: FILE: security/dummy.c:530:
+static int dummy_msg_queue_msgctl (struct msg_queue *msq, int cmd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#732: FILE: security/dummy.c:535:
+static int dummy_msg_queue_msgsnd (struct msg_queue *msq, struct msg_msg *msg,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#738: FILE: security/dummy.c:541:
+static int dummy_msg_queue_msgrcv (struct msg_queue *msq, struct msg_msg *msg,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#752: FILE: security/dummy.c:558:
+static int dummy_shm_associate (struct shmid_kernel *shp, int shmflg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#757: FILE: security/dummy.c:563:
+static int dummy_shm_shmctl (struct shmid_kernel *shp, int cmd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#762: FILE: security/dummy.c:568:
+static int dummy_shm_shmat (struct shmid_kernel *shp, char *shmaddr,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#775: FILE: security/dummy.c:584:
+static int dummy_sem_associate (struct sem_array *sma, int semflg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#780: FILE: security/dummy.c:589:
+static int dummy_sem_semctl (struct sem_array *sma, int cmd)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#785: FILE: security/dummy.c:594:
+static int dummy_sem_semop (struct sem_array *sma, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#785: FILE: security/dummy.c:594:
+static int dummy_sem_semop (struct sem_array *sma, 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#786: FILE: security/dummy.c:595:
+			    struct sembuf *sops, unsigned nsops, int alter)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000401004.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 81 errors, 63 warnings, 3 checks, 719 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000401004.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
