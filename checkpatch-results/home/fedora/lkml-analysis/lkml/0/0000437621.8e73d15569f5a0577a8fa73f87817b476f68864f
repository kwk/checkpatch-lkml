WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
diff -Naur -X /home/greg/linux/dontdiff linux-2.5.31-bk6/drivers/usb/class/audio.c linux-2.5.31-bk6-greg/drivers/usb/class/audio.c

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#113: FILE: drivers/usb/core/devio.c:702:
+		err ("%s - this function is broken", __FUNCTION__);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#113: FILE: drivers/usb/core/devio.c:702:
+		err ("%s - this function is broken", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#116: FILE: drivers/usb/core/devio.c:704:
+			usb_device_probe (&intf->dev);

CHECK:BRACES: braces {} should be used on all arms of this statement
#137: FILE: drivers/usb/core/devio.c:1070:
+		if (driver) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#138: FILE: drivers/usb/core/devio.c:1071:
+			dbg ("disconnect '%s' from dev %d interface %d",

CHECK:BRACES: Unbalanced braces around else statement
#141: FILE: drivers/usb/core/devio.c:1074:
+		} else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#150: FILE: drivers/usb/core/devio.c:1080:
+		retval = usb_device_probe (&ifp->dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#168: FILE: drivers/usb/core/hcd.c:730:
+	retval = usb_new_device (usb_dev, parent_dev);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#171: FILE: drivers/usb/core/hcd.c:732:
+		err("%s - usb_new_device failed with value %d", __FUNCTION__, retval);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#186: FILE: drivers/usb/core/hcd.h:233:
+extern int usb_new_device(struct usb_device *dev, struct device *parent);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#218: FILE: drivers/usb/core/hub.c:187:
+		dev = interface_to_usbdev (hub->intf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#219: FILE: drivers/usb/core/hub.c:188:
+		status = hub_clear_tt_buffer (dev, clear->devinfo, clear->tt);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#250: FILE: drivers/usb/core/hub.c:265:
+	struct usb_device *dev = interface_to_usbdev (hub->intf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#283: FILE: drivers/usb/core/hub.c:455:
+		flush_scheduled_tasks ();

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#292: FILE: drivers/usb/core/hub.c:464:
+	if (hub->descriptor) {
+		kfree(hub->descriptor);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'desc->bInterfaceSubClass != 0'
#318: FILE: drivers/usb/core/hub.c:486:
+	if ((desc->bInterfaceSubClass != 0) &&
+	    (desc->bInterfaceSubClass != 1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'desc->bInterfaceSubClass != 1'
#318: FILE: drivers/usb/core/hub.c:486:
+	if ((desc->bInterfaceSubClass != 0) &&
+	    (desc->bInterfaceSubClass != 1)) {

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceSubClass>
#318: FILE: drivers/usb/core/hub.c:486:
+	if ((desc->bInterfaceSubClass != 0) &&

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#329: FILE: drivers/usb/core/hub.c:494:
+	if (desc->bNumEndpoints != 1) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#384: FILE: drivers/usb/core/hub.c:541:
+		strcpy (intf->dev.name, "Hub/Port Status Changes");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#390: FILE: drivers/usb/core/hub.c:547:
+	hub_disconnect (intf);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#392: FILE: drivers/usb/core/hub.c:549:
+#if 0

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#529: FILE: drivers/usb/core/usb.c:53:
+static int generic_probe (struct device *dev)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#533: FILE: drivers/usb/core/usb.c:57:
+}
+static int generic_remove (struct device *dev)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#533: FILE: drivers/usb/core/usb.c:57:
+static int generic_remove (struct device *dev)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#537: FILE: drivers/usb/core/usb.c:61:
+}
+static void generic_release (struct device_driver * drv)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#537: FILE: drivers/usb/core/usb.c:61:
+static void generic_release (struct device_driver * drv)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#537: FILE: drivers/usb/core/usb.c:61:
+static void generic_release (struct device_driver * drv)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#547: FILE: drivers/usb/core/usb.c:71:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#548: FILE: drivers/usb/core/usb.c:72:
+	
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#551: FILE: drivers/usb/core/usb.c:75:
+	struct usb_interface * intf = to_usb_interface(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#552: FILE: drivers/usb/core/usb.c:76:
+	struct usb_driver * driver = to_usb_driver(dev->driver);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#557: FILE: drivers/usb/core/usb.c:81:
+	dbg("%s", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#568: FILE: drivers/usb/core/usb.c:92:
+	id = usb_match_id (intf, driver->id_table);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#570: FILE: drivers/usb/core/usb.c:94:
+		dbg ("%s - got id", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#570: FILE: drivers/usb/core/usb.c:94:
+		dbg ("%s - got id", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#571: FILE: drivers/usb/core/usb.c:95:
+		down (&driver->serialize);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#572: FILE: drivers/usb/core/usb.c:96:
+		error = driver->new_probe (intf, id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#573: FILE: drivers/usb/core/usb.c:97:
+		up (&driver->serialize);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#586: FILE: drivers/usb/core/usb.c:110:
+	struct usb_interface *intf = list_entry(dev,struct usb_interface,dev);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#586: FILE: drivers/usb/core/usb.c:110:
+	struct usb_interface *intf = list_entry(dev,struct usb_interface,dev);
 	                                                                ^

WARNING:TYPO_SPELLING: 'Dieing' may be misspelled - perhaps 'Dying'?
#593: FILE: drivers/usb/core/usb.c:117:
+			err("Dieing driver still bound to device.\n");
 			     ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#598: FILE: drivers/usb/core/usb.c:122:
+^I/* if we sleep here on an umanaged driver $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#599: FILE: drivers/usb/core/usb.c:123:
+^I * the holder of the lock guards against $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#600: FILE: drivers/usb/core/usb.c:124:
+	 * module unload */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BRACES: braces {} are not necessary for single statement blocks
#611: FILE: drivers/usb/core/usb.c:135:
+	if (driver->owner) {
+		__MOD_DEC_USE_COUNT(driver->owner);
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#643: FILE: drivers/usb/core/usb.c:172:
+		err("problem %d when registering driver %s",
+			retval, new_driver->name);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#650: FILE: drivers/usb/core/usb.c:178:
+#if 0

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#777: FILE: drivers/usb/core/usb.c:308:
+	remove_driver (&driver->driver);

CHECK:CAMELCASE: Avoid CamelCase: <bNumInterfaces>
#803: FILE: drivers/usb/core/usb.c:359:
+	for (i = 0; i < dev->actconfig->bNumInterfaces; i++)

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceNumber>
#805: FILE: drivers/usb/core/usb.c:361:
+			return dev->actconfig->interface[i].altsetting[0].bInterfaceNumber;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#873: FILE: drivers/usb/core/usb.c:601:
+static int usb_device_match (struct device *dev, struct device_driver *drv)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#920: FILE: drivers/usb/core/usb.c:611:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#921: FILE: drivers/usb/core/usb.c:612:
+	id = usb_match_id (intf, usb_drv->id_table);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#931: FILE: drivers/usb/core/usb.c:619:
 
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1062: FILE: drivers/usb/core/usb.c:1313:
+	sprintf (&dev->dev.bus_id[0], "%s-%s",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1067: FILE: drivers/usb/core/usb.c:1318:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1067: FILE: drivers/usb/core/usb.c:1318:
+ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1079: FILE: drivers/usb/core/usb.c:1329:
+	 * Remember, interfaces get bound to drivers, not devices. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1086: FILE: drivers/usb/core/usb.c:1336:
+		sprintf (&interface->dev.bus_id[0], "%s-%s:%d",

CHECK:CAMELCASE: Avoid CamelCase: <iInterface>
#1089: FILE: drivers/usb/core/usb.c:1339:
+		if (!desc->iInterface

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1090: FILE: drivers/usb/core/usb.c:1340:
+		if (!desc->iInterface
+				|| usb_string (dev, desc->iInterface,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1090: FILE: drivers/usb/core/usb.c:1340:
+				|| usb_string (dev, desc->iInterface,

WARNING:SIZEOF_PARENTHESIS: sizeof interface->dev.name should be sizeof(interface->dev.name)
#1092: FILE: drivers/usb/core/usb.c:1342:
+					sizeof interface->dev.name) <= 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1098: FILE: drivers/usb/core/usb.c:1348:
+			sprintf (&interface->dev.name[0],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1099: FILE: drivers/usb/core/usb.c:1349:
+			sprintf (&interface->dev.name[0],
+				"usb-%s-%s interface %d",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1103: FILE: drivers/usb/core/usb.c:1353:
+		dbg ("%s - registering %s", __FUNCTION__, interface->dev.bus_id);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1103: FILE: drivers/usb/core/usb.c:1353:
+		dbg ("%s - registering %s", __FUNCTION__, interface->dev.bus_id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1104: FILE: drivers/usb/core/usb.c:1354:
+		device_register (&interface->dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1105: FILE: drivers/usb/core/usb.c:1355:
+		device_create_file (&interface->dev, &dev_attr_altsetting);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1152: FILE: drivers/usb/core/usb.c:1555:
+EXPORT_SYMBOL(usb_device_probe);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1153: FILE: drivers/usb/core/usb.c:1556:
+EXPORT_SYMBOL(usb_device_remove);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1155: FILE: drivers/usb/core/usb.c:1558:
+EXPORT_SYMBOL(usb_if_to_ifnum);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1171: FILE: drivers/usb/input/hid-core.c:1344:
+	struct usb_device *dev = interface_to_usbdev (intf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1208: FILE: drivers/usb/input/hid-core.c:1501:
+static int hid_probe (struct usb_interface *intf, const struct usb_device_id *id)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1220: FILE: drivers/usb/input/hid-core.c:1510:
+	if (!(hid = usb_hid_configure(intf)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1274: FILE: drivers/usb/input/usbmouse.c:101:
+static int usb_mouse_new_probe(struct usb_interface * intf, const struct usb_device_id * id)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1274: FILE: drivers/usb/input/usbmouse.c:101:
+static int usb_mouse_new_probe(struct usb_interface * intf, const struct usb_device_id * id)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1277: FILE: drivers/usb/input/usbmouse.c:103:
+	struct usb_device * dev = interface_to_usbdev(intf);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1290: FILE: drivers/usb/input/usbmouse.c:113:
+^Iif (interface->bNumEndpoints != 1) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1296: FILE: drivers/usb/input/usbmouse.c:117:
+^Iif (!(endpoint->bEndpointAddress & 0x80)) $

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#1296: FILE: drivers/usb/input/usbmouse.c:117:
+	if (!(endpoint->bEndpointAddress & 0x80)) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1298: FILE: drivers/usb/input/usbmouse.c:119:
+^Iif ((endpoint->bmAttributes & 3) != 3) $

CHECK:CAMELCASE: Avoid CamelCase: <bmAttributes>
#1298: FILE: drivers/usb/input/usbmouse.c:119:
+	if ((endpoint->bmAttributes & 3) != 3) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1305: FILE: drivers/usb/input/usbmouse.c:125:
+^Iif (!(mouse = kmalloc(sizeof(struct usb_mouse), GFP_KERNEL))) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1305: FILE: drivers/usb/input/usbmouse.c:125:
+	if (!(mouse = kmalloc(sizeof(struct usb_mouse), GFP_KERNEL))) 

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mouse)...) over kmalloc(sizeof(struct usb_mouse)...)
#1305: FILE: drivers/usb/input/usbmouse.c:125:
+	if (!(mouse = kmalloc(sizeof(struct usb_mouse), GFP_KERNEL))) 

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1339: FILE: drivers/usb/input/usbmouse.c:185:
+static void usb_mouse_new_disco(struct usb_interface * intf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1347: FILE: drivers/usb/input/usbmouse.c:188:
+	struct usb_mouse *mouse = intf->dev.driver_data;
+	intf->dev.driver_data = NULL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1394: FILE: drivers/usb/serial/belkin_sa.c:536:
+	usb_register (&belkin_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1402: FILE: drivers/usb/serial/belkin_sa.c:544:
+	usb_deregister (&belkin_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1427: FILE: drivers/usb/serial/cyberjack.c:471:
+	usb_register (&cyberjack_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1435: FILE: drivers/usb/serial/cyberjack.c:481:
+	usb_deregister (&cyberjack_driver);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1447: FILE: drivers/usb/serial/digi_acceleport.c:480:
+static struct usb_device_id id_table_combined [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1462: FILE: drivers/usb/serial/digi_acceleport.c:505:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1470: FILE: drivers/usb/serial/digi_acceleport.c:2037:
+	usb_register (&digi_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1478: FILE: drivers/usb/serial/digi_acceleport.c:2045:
+	usb_deregister (&digi_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1512: FILE: drivers/usb/serial/empeg.c:578:
+	usb_serial_register (&empeg_device);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1513: FILE: drivers/usb/serial/empeg.c:579:
+	usb_register (&empeg_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1526: FILE: drivers/usb/serial/empeg.c:592:
+	usb_register (&empeg_driver);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1546: FILE: drivers/usb/serial/ftdi_sio.c:143:
+static struct usb_device_id id_table_combined [] = {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1568: FILE: drivers/usb/serial/ftdi_sio.c:954:
+	usb_register (&ftdi_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1576: FILE: drivers/usb/serial/ftdi_sio.c:963:
+	usb_deregister (&ftdi_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1600: FILE: drivers/usb/serial/io_edgeport.c:3058:
+	usb_register (&io_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1608: FILE: drivers/usb/serial/io_edgeport.c:3071:
+	usb_deregister (&io_driver);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1620: FILE: drivers/usb/serial/io_tables.h:64:
+static struct usb_device_id id_table_combined [] = {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1632: FILE: drivers/usb/serial/io_ti.c:145:
+static struct usb_device_id id_table_combined [] = {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1654: FILE: drivers/usb/serial/io_ti.c:2668:
+	usb_register (&io_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1661: FILE: drivers/usb/serial/io_ti.c:2675:
+	usb_deregister (&io_driver);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1679: FILE: drivers/usb/serial/ipaq.c:104:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1720: FILE: drivers/usb/serial/ir-usb.c:616:
+	usb_register (&ir_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1728: FILE: drivers/usb/serial/ir-usb.c:624:
+	usb_deregister (&ir_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1739: FILE: drivers/usb/serial/keyspan.c:186:
+	usb_register (&keyspan_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1747: FILE: drivers/usb/serial/keyspan.c:195:
+	usb_deregister (&keyspan_driver);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1768: FILE: drivers/usb/serial/keyspan.h:438:
+^I.name =^I^I"keyspan",                $

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1785: FILE: drivers/usb/serial/keyspan_pda.c:143:
+static struct usb_device_id id_table_combined [] = {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1807: FILE: drivers/usb/serial/keyspan_pda.c:872:
+	usb_register (&keyspan_pda_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1815: FILE: drivers/usb/serial/keyspan_pda.c:880:
+	usb_deregister (&keyspan_pda_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1839: FILE: drivers/usb/serial/kl5kusb105.c:1022:
+	usb_register (&kl5kusb105d_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1847: FILE: drivers/usb/serial/kl5kusb105.c:1031:
+	usb_deregister (&kl5kusb105d_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1871: FILE: drivers/usb/serial/mct_u232.c:792:
+	usb_register (&mct_u232_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1879: FILE: drivers/usb/serial/mct_u232.c:800:
+	usb_deregister (&mct_u232_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1904: FILE: drivers/usb/serial/omninet.c:380:
+	usb_register (&omninet_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1912: FILE: drivers/usb/serial/omninet.c:388:
+	usb_deregister (&omninet_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1936: FILE: drivers/usb/serial/pl2303.c:717:
+	usb_register (&pl2303_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1944: FILE: drivers/usb/serial/pl2303.c:725:
+	usb_deregister (&pl2303_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1969: FILE: drivers/usb/serial/safe_serial.c:444:
+	usb_register (&safe_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1976: FILE: drivers/usb/serial/safe_serial.c:451:
+	usb_deregister (&safe_driver);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1987: FILE: drivers/usb/serial/usb-serial.h:236:
+extern int usb_serial_probe(struct usb_interface *iface, const struct usb_device_id *id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1988: FILE: drivers/usb/serial/usb-serial.h:237:
+extern void usb_serial_disconnect(struct usb_interface *iface);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2019: FILE: drivers/usb/serial/usbserial.c:385:
+ * depending on the command line argument */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2054: FILE: drivers/usb/serial/usbserial.c:1158:
+int usb_serial_probe(struct usb_interface *interface,
 			       const struct usb_device_id *id)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2056: FILE: drivers/usb/serial/usbserial.c:1160:
+	struct usb_device *dev = interface_to_usbdev (interface);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2100: FILE: drivers/usb/serial/usbserial.c:1253:
+#if 0

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2199: FILE: drivers/usb/serial/usbserial.c:1675:
+			usb_serial_disconnect (serial->interface);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2208: FILE: drivers/usb/serial/usbserial.c:1689:
+EXPORT_SYMBOL(usb_serial_disconnect);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2220: FILE: drivers/usb/serial/visor.c:200:
+static struct usb_device_id id_table_combined [] = {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2242: FILE: drivers/usb/serial/visor.c:769:
+	usb_register (&visor_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2250: FILE: drivers/usb/serial/visor.c:778:
+	usb_deregister (&visor_driver);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2262: FILE: drivers/usb/serial/whiteheat.c:113:
+static struct usb_device_id id_table_combined [] = {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2284: FILE: drivers/usb/serial/whiteheat.c:686:
+	usb_register (&whiteheat_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2292: FILE: drivers/usb/serial/whiteheat.c:694:
+	usb_deregister (&whiteheat_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2316: FILE: drivers/usb/storage/scsiglue.c:265:
+		usb_device_remove (&intf->dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2317: FILE: drivers/usb/storage/scsiglue.c:266:
+		usb_device_probe (&intf->dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2457: FILE: include/linux/usb.h:315:
+extern int usb_if_to_ifnum(struct usb_interface *iface);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2458: FILE: include/linux/usb.h:316:
+^I$

WARNING:SPACING: Unnecessary space before function pointer arguments
#2476: FILE: include/linux/usb.h:676:
+	int	(*new_probe)	(struct usb_interface *intf, const struct usb_device_id *id);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2477: FILE: include/linux/usb.h:677:
+	void	(*new_disco)	(struct usb_interface *intf);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2496: FILE: include/linux/usb.h:704:
 };
+#define	to_usb_driver(d) container_of(d, struct usb_driver, driver)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2504: FILE: include/linux/usb.h:718:
+extern int usb_device_probe(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2505: FILE: include/linux/usb.h:719:
+extern int usb_device_remove(struct device *dev);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000437621.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 94 warnings, 29 checks, 2210 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000437621.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
