WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
diff -Nru a/Documentation/kernel-parameters.txt b/Documentation/kernel-parameters.txt

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#54: 
--- a/Documentation/kernel-parameters.txt	Fri Sep 19 12:16:32 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#86: FILE: drivers/input/mouse/Kconfig:31:
+config MOUSE_PS2_SYNAPTICS
+	bool "Synaptics TouchPad"
+	default n
+	depends on INPUT && INPUT_MOUSE && SERIO && MOUSE_PS2
+	---help---
+	  Say Y here if you have a Synaptics TouchPad connected to your system.
+	  This touchpad is found on many modern laptop computers.
+
+	  Note that you also need a user space driver to interpret the data
+	  generated by the kernel. A compatible driver for XFree86 is available
+	  from http://w1.894.telia.com/~u89404340/touchpad/index.html
+
+	  The gpm program is not yet able to interpret the data from this
+	  driver, so if you need to use the touchpad in the console, you have to
+	  say N for now.
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#145: FILE: drivers/input/mouse/psmouse-base.c:141:
+		printk(KERN_WARNING "psmouse.c: %s at %s lost synchronization, throwing %d bytes away.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: drivers/input/mouse/psmouse-base.c:152:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'psmouse->type >= PSMOUSE_GENPS'
#190: FILE: drivers/input/mouse/psmouse-base.c:178:
+	if (psmouse->pktcnt == 3 + (psmouse->type >= PSMOUSE_GENPS)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#279: FILE: drivers/input/mouse/psmouse-base.c:612:
+__setup("psmouse_resetafter=", psmouse_resetafter_setup);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#327: FILE: drivers/input/mouse/psmouse.h:52:
+#define PSMOUSE_SYNAPTICS ^I7$

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#379: FILE: drivers/input/mouse/synaptics.c:113:
+static int synaptics_capability(struct psmouse *psmouse, unsigned long int *capability, unsigned long int *ext_cap)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#379: FILE: drivers/input/mouse/synaptics.c:113:
+static int synaptics_capability(struct psmouse *psmouse, unsigned long int *capability, unsigned long int *ext_cap)

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#379: FILE: drivers/input/mouse/synaptics.c:113:
+static int synaptics_capability(struct psmouse *psmouse, unsigned long int *capability, unsigned long int *ext_cap)

CHECK:BRACES: braces {} should be used on all arms of this statement
#394: FILE: drivers/input/mouse/synaptics.c:125:
+		if (synaptics_send_cmd(psmouse, SYN_QUE_EXT_CAPAB, cap)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#395: FILE: drivers/input/mouse/synaptics.c:126:
+			printk(KERN_ERR "Synaptics claims to have extended capabilities,"

WARNING:SPLIT_STRING: quoted string split across lines
#396: FILE: drivers/input/mouse/synaptics.c:127:
+			printk(KERN_ERR "Synaptics claims to have extended capabilities,"
+			       " but I'm not able to read them.");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: Unbalanced braces around else statement
#397: FILE: drivers/input/mouse/synaptics.c:128:
+		} else

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#398: FILE: drivers/input/mouse/synaptics.c:129:
+			*ext_cap = (cap[0]<<16) | (cap[1]<<8) | cap[2];
 			                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#398: FILE: drivers/input/mouse/synaptics.c:129:
+			*ext_cap = (cap[0]<<16) | (cap[1]<<8) | cap[2];
 			                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#430: FILE: drivers/input/mouse/synaptics.c:168:
+			printk(KERN_INFO " -> %d multi-buttons, i.e. besides standard buttons\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#439: FILE: drivers/input/mouse/synaptics.c:177:
+			printk(KERN_INFO " -> pass-through port\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#535: FILE: drivers/input/mouse/synaptics.c:267:
+	priv->ptport = port = kmalloc(sizeof(struct serio), GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*port)...) over kmalloc(sizeof(struct serio)...)
#535: FILE: drivers/input/mouse/synaptics.c:267:
+	priv->ptport = port = kmalloc(sizeof(struct serio), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#537: FILE: drivers/input/mouse/synaptics.c:269:
+		printk(KERN_ERR "synaptics: not enough memory to allocate serio port\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#550: FILE: drivers/input/mouse/synaptics.c:282:
+	printk(KERN_INFO "serio: %s port at %s\n", port->name, psmouse->phys);

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: drivers/input/mouse/synaptics.c:289:
+^I^I^I^I^I ^I SYN_BIT_HIGH_RATE |$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#557: FILE: drivers/input/mouse/synaptics.c:289:
+^I^I^I^I^I ^I SYN_BIT_HIGH_RATE |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#558: FILE: drivers/input/mouse/synaptics.c:290:
+^I^I^I^I^I ^I SYN_BIT_DISABLE_GESTURE |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#558: FILE: drivers/input/mouse/synaptics.c:290:
+^I^I^I^I^I ^I SYN_BIT_DISABLE_GESTURE |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#560: FILE: drivers/input/mouse/synaptics.c:292:
+^I^I^I^I^I ^I SYN_BIT_W_MODE)))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#560: FILE: drivers/input/mouse/synaptics.c:292:
+^I^I^I^I^I ^I SYN_BIT_W_MODE)))$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#561: FILE: drivers/input/mouse/synaptics.c:293:
+			printk(KERN_INFO "synaptics: failed to enable 4-byte guest protocol\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#599: FILE: drivers/input/mouse/synaptics.c:355:
+			printk(KERN_ERR "This touchpad reports more than 8 multi-buttons, don't know how to handle.\n");

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#640: FILE: drivers/input/mouse/synaptics.c:399:
+static void synaptics_parse_hw_state(unsigned char buf[], struct synaptics_data *priv, struct synaptics_hw_state *hw)

WARNING:DEFAULT_NO_BREAK: switch default: should use break
#696: FILE: drivers/input/mouse/synaptics.c:439:
+			default:
+				; /* we did comment while initialising... */

switch default case is sometimes written as "default:;".  This can
cause new cases added below default to be defective.

A "break;" should be added after empty default statement to avoid
unwanted fallthrough.

ERROR:SPACING: space required before the open parenthesis '('
#747: FILE: drivers/input/mouse/synaptics.c:517:
+		switch(SYN_CAP_MULTI_BUTTON_NO(priv->ext_cap) & ~0x01) {

WARNING:DEFAULT_NO_BREAK: switch default: should use break
#748: FILE: drivers/input/mouse/synaptics.c:518:
+		default:
+			; /* we did comment while initialising... */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#782: FILE: drivers/input/mouse/synaptics.c:549:
+			printk(KERN_WARNING "Synaptics driver lost sync at 1st byte\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#788: FILE: drivers/input/mouse/synaptics.c:555:
+			printk(KERN_WARNING "Synaptics driver lost sync at 2nd byte\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#794: FILE: drivers/input/mouse/synaptics.c:561:
+			printk(KERN_WARNING "Synaptics driver lost sync at 4th byte\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#800: FILE: drivers/input/mouse/synaptics.c:567:
+			printk(KERN_WARNING "Synaptics driver lost sync at 5th byte\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#808: FILE: drivers/input/mouse/synaptics.c:575:
+				printk(KERN_NOTICE "Synaptics driver resynced.\n");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#859: FILE: drivers/input/mouse/synaptics.h:15:
+extern int synaptics_pt_init(struct psmouse *psmouse);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:BIT_MACRO: Prefer using the BIT macro
#874: FILE: drivers/input/mouse/synaptics.h:33:
+#define SYN_BIT_FOUR_BYTE_CLIENT	(1 << 1)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#922: FILE: drivers/input/mouse/synaptics.h:102:
+^Iunsigned long int ext_cap; ^I^I/* Extended Capabilities */$

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#922: FILE: drivers/input/mouse/synaptics.h:102:
+	unsigned long int ext_cap; 		/* Extended Capabilities */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#933: FILE: drivers/input/mouse/synaptics.h:108:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000335742.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 28 warnings, 10 checks, 890 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000335742.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
