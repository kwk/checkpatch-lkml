WARNING:TYPO_SPELLING: 'behavoir' may be misspelled - perhaps 'behavior'?
#32: 
behavoir, I add a small amount to the run_avg of the woken process.
^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#58: 
cpu time a process uses, the lower its priority.  A lower priority means that

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: include/linux/sched.h:329:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: include/linux/sched.h:329:
+  $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#247: FILE: include/linux/sysctl.h:69:
+	CTL_CPU=10,		/* CPU stuff (speed scaling, etc) */
 	       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#248: FILE: include/linux/sysctl.h:70:
+	CTL_SCHED=11,		/* scheduler tunables */
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#258: FILE: include/linux/sysctl.h:163:
+	SCHED_MIN_TIMESLICE=1,		/* minimum process timeslice */
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#259: FILE: include/linux/sysctl.h:164:
+	SCHED_MAX_TIMESLICE=2,		/* maximum process timeslice */
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#260: FILE: include/linux/sysctl.h:165:
+	SCHED_SLEEP_AVG_NICE=3,		/* sleep_avg priority boost */
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#261: FILE: include/linux/sysctl.h:166:
+	SCHED_PIPE_CIRCLE_TAX=4,
 	                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#283: FILE: kernel/sched.c:45:
+#define MAX_RUN_AVG	(256*1024)
                    	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#286: FILE: kernel/sched.c:48:
+#define MAX_PRIO_AVG	((MAX_PRIO-MAX_RT_PRIO)*SF_PRIO_AVG)
                     	          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#286: FILE: kernel/sched.c:48:
+#define MAX_PRIO_AVG	((MAX_PRIO-MAX_RT_PRIO)*SF_PRIO_AVG)
                     	                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: kernel/sched.c:54:
+ * of the cpu.  The 40 below is the priority difference and the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#295: FILE: kernel/sched.c:57:
+ * It should be safe to use floating point in constants used to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: kernel/sched.c:60:
+#define SCALE_FACTOR^I0x10000 $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#299: FILE: kernel/sched.c:61:
+static const int nice_const = (int)((3.912/40.0)*(float)SCALE_FACTOR);
                                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#299: FILE: kernel/sched.c:61:
+static const int nice_const = (int)((3.912/40.0)*(float)SCALE_FACTOR);
                                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#300: FILE: kernel/sched.c:62:
+static const int exp_nice_const = (int)(1.10274*(float)SCALE_FACTOR);
                                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: kernel/sched.c:69:
+ * priority quickly.  A larger value makes the scheduler more forgiving $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#314: FILE: kernel/sched.c:76:
+static const int run_avg_halflife = 4*HZ;
                                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: kernel/sched.c:85:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: kernel/sched.c:85:
+ $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#324: FILE: kernel/sched.c:86:
+static const int log_2 = (int)(0.69314718*(float)SCALE_FACTOR);
                                          ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#331: FILE: kernel/sched.c:93:
+int min_timeslice = ( 1 * HZ / 1000) ? : 1;

ERROR:SPACING: space prohibited after that open parenthesis '('
#332: FILE: kernel/sched.c:94:
+int max_timeslice = ( 500 * HZ / 1000);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#335: FILE: kernel/sched.c:97:
+typedef struct runqueue runqueue_t;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#336: FILE: kernel/sched.c:98:
+extern unsigned int task_timeslice(task_t *p);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#337: FILE: kernel/sched.c:99:
+extern void update_run_avg_sleeping(task_t *p, unsigned long delta_time);

ERROR:SPACING: space prohibited after that open parenthesis '('
#338: FILE: kernel/sched.c:100:
+extern void update_run_avg_runable( task_t *p);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#338: FILE: kernel/sched.c:100:
+extern void update_run_avg_runable( task_t *p);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#339: FILE: kernel/sched.c:101:
+extern void update_run_avg_running(task_t *p);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#340: FILE: kernel/sched.c:102:
+extern void update_prio_avg(runqueue_t *rq, task_t *p);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#341: FILE: kernel/sched.c:103:
+extern int effective_prio(task_t *p);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#342: FILE: kernel/sched.c:104:
+extern int estimate_run_avg(int prio_diff, const int max);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#343: FILE: kernel/sched.c:105:
+extern void fairness_update(runqueue_t *rq);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: kernel/sched.c:109:
+ * get to run.  This parameter controls the interval for these $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#350: FILE: kernel/sched.c:112:
+#define FAIRNESS_TICKS	(HZ/8 ?: 1)
                       	   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#360: FILE: kernel/sched.c:120:
+#define NICE_TO_PRIO(nice)	((MAX_PRIO-20) + (nice))
                           	          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#361: FILE: kernel/sched.c:121:
+#define PRIO_TO_NICE(prio)	((prio) - (MAX_PRIO-20))
                           	                   ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#369: FILE: kernel/sched.c:151:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#385: FILE: kernel/sched.c:216:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#423: FILE: kernel/sched.c:379:
+#if 0

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#464: FILE: kernel/sched.c:474:
+				i = p->run_avg/16 - current->run_avg/16;
 				              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#464: FILE: kernel/sched.c:474:
+				i = p->run_avg/16 - current->run_avg/16;
 				                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#498: FILE: kernel/sched.c:695:
+	i = rq->prio_avg/SF_PRIO_AVG;
 	                ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#573: FILE: kernel/sched.c:2134:
+#if 0

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#574: FILE: kernel/sched.c:2135:
+		if (current->prio < MAX_PRIO-1)
 		                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#577: FILE: kernel/sched.c:2138:
+		current->prio = MAX_PRIO-1;
 		                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#578: FILE: kernel/sched.c:2139:
+		current->run_avg += current->run_avg/4;
 		                                    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#599: FILE: kernel/sched.c:2747:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#602: FILE: kernel/sched.c:2750:
+ * higher a processes priority the more often we want to re-evaluate its $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#614: FILE: kernel/sched.c:2762:
+			(MAX_PRIO-1-(p)->static_prio)/(MAX_USER_PRIO - 1)));
 			         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#614: FILE: kernel/sched.c:2762:
+			(MAX_PRIO-1-(p)->static_prio)/(MAX_USER_PRIO - 1)));
 			           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#614: FILE: kernel/sched.c:2762:
+			(MAX_PRIO-1-(p)->static_prio)/(MAX_USER_PRIO - 1)));
 			                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#622: FILE: kernel/sched.c:2770:
+	time_slice = HZ  >>  (((p->static_prio - p->prio)/8) > 0 ? : 1);
 	                                                 ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#633: FILE: kernel/sched.c:2781:
+	return(time_slice);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#643: FILE: kernel/sched.c:2791:
+ * ^I^Ivalue /= 2;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#653: FILE: kernel/sched.c:2801:
+static inline int decay_value(int value, int delta_time,
+	const int half_life)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#656: FILE: kernel/sched.c:2804:
+	const int as = (-log_2 / (SCALE_FACTOR/sf))/half_life;
 	                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#656: FILE: kernel/sched.c:2804:
+	const int as = (-log_2 / (SCALE_FACTOR/sf))/half_life;
 	                                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#657: FILE: kernel/sched.c:2805:
+	static const int ov = MAX_RUN_AVG/(INT_MAX/sf);
 	                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#657: FILE: kernel/sched.c:2805:
+	static const int ov = MAX_RUN_AVG/(INT_MAX/sf);
 	                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#666: FILE: kernel/sched.c:2814:
+		if (delta_time >= 16*half_life)
 		                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#668: FILE: kernel/sched.c:2816:
+		if (delta_time > 8*half_life) {
 		                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#670: FILE: kernel/sched.c:2818:
+			delta_time -= 8*half_life;
 			               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#672: FILE: kernel/sched.c:2820:
+		if (delta_time > 4*half_life) {
 		                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#674: FILE: kernel/sched.c:2822:
+			delta_time -= 4*half_life;
 			               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#676: FILE: kernel/sched.c:2824:
+		if (delta_time > 2*half_life) {
 		                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#678: FILE: kernel/sched.c:2826:
+			delta_time -= 2*half_life;
 			               ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#693: FILE: kernel/sched.c:2841:
+^I * ^Iset xrange [log(.5):0]$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#694: FILE: kernel/sched.c:2842:
+^I * ^Imy_exp(x) = 1  + (x>-.125 ? 7*x/8 : x + x*x*3/8)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#695: FILE: kernel/sched.c:2843:
+^I * ^Iplot my_exp(x) , exp(x)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#696: FILE: kernel/sched.c:2844:
+^I * ^Iplot my_exp(x) - exp(x)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#698: FILE: kernel/sched.c:2846:
+^I */ $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#699: FILE: kernel/sched.c:2847:
+	if (i > -sf/8)
 	           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#700: FILE: kernel/sched.c:2848:
+		j = i - i/8;
 		         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#702: FILE: kernel/sched.c:2850:
+		j =  i + (i/4)*(i/4)*3/(sf/2);
 		           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#702: FILE: kernel/sched.c:2850:
+		j =  i + (i/4)*(i/4)*3/(sf/2);
 		              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#702: FILE: kernel/sched.c:2850:
+		j =  i + (i/4)*(i/4)*3/(sf/2);
 		                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#702: FILE: kernel/sched.c:2850:
+		j =  i + (i/4)*(i/4)*3/(sf/2);
 		                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#702: FILE: kernel/sched.c:2850:
+		j =  i + (i/4)*(i/4)*3/(sf/2);
 		                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#702: FILE: kernel/sched.c:2850:
+		j =  i + (i/4)*(i/4)*3/(sf/2);
 		                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#704: FILE: kernel/sched.c:2852:
+^I * exp(i/sf) = (1 + j/sf) $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#707: FILE: kernel/sched.c:2855:
+	if (j > -(INT_MAX/MAX_RUN_AVG)) {
 	                 ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#707: FILE: kernel/sched.c:2855:
+	if (j > -(INT_MAX/MAX_RUN_AVG)) {
[...]
+	} else if (value < INT_MAX/sf) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#708: FILE: kernel/sched.c:2856:
+		value += (value * j)/sf;
 		                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#709: FILE: kernel/sched.c:2857:
+	} else if (value < INT_MAX/sf) {
 	                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#710: FILE: kernel/sched.c:2858:
+		value = (value * (sf + j))/sf;
 		                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#712: FILE: kernel/sched.c:2860:
+		value = (value * ((sf + j)/ov))/(sf/ov);
 		                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#712: FILE: kernel/sched.c:2860:
+		value = (value * ((sf + j)/ov))/(sf/ov);
 		                               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#712: FILE: kernel/sched.c:2860:
+		value = (value * ((sf + j)/ov))/(sf/ov);
 		                                   ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#719: FILE: kernel/sched.c:2867:
+{
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#723: FILE: kernel/sched.c:2871:
+void update_run_avg_runable( task_t *p)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#730: FILE: kernel/sched.c:2878:
+	run_avg = decay_value(p->run_avg,delta_time, run_avg_halflife);
 	                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#741: FILE: kernel/sched.c:2889:
+	const int sf=64*1024;
 	            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#741: FILE: kernel/sched.c:2889:
+	const int sf=64*1024;
 	               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#742: FILE: kernel/sched.c:2890:
+	const int as = (-log_2 / (SCALE_FACTOR/sf))/half_life;
 	                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#742: FILE: kernel/sched.c:2890:
+	const int as = (-log_2 / (SCALE_FACTOR/sf))/half_life;
 	                                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#743: FILE: kernel/sched.c:2891:
+	const int as = (-log_2 / (SCALE_FACTOR/sf))/half_life;
+	return((max * -as)/sf);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#743: FILE: kernel/sched.c:2891:
+	return((max * -as)/sf);
 	                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#746: FILE: kernel/sched.c:2894:
+
+

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#776: FILE: kernel/sched.c:2924:
+	rq->prio_avg -= (rq->prio_avg * i)/MAX_PRIO_AVG;
 	                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#777: FILE: kernel/sched.c:2925:
+	rq->prio_avg +=  i*prio/MAX_USER_PRIO;
 	                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#777: FILE: kernel/sched.c:2925:
+	rq->prio_avg +=  i*prio/MAX_USER_PRIO;
 	                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#782: FILE: kernel/sched.c:2930:
+ * based on the run_avg and the static priority.  This logic $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#794: FILE: kernel/sched.c:2942:
+ * If two processes are competing and reach an equilibrium at a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#799: FILE: kernel/sched.c:2947:
+ * Since log(a)-log(b) = log(a/b) this means that the ratio of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#804: FILE: kernel/sched.c:2952:
+ * value will give a "nice -19" task 2% of the cpu when it competes $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#812: FILE: kernel/sched.c:2960:
+	const int c = (const int)(sf*SCALE_FACTOR/nice_const);
 	                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#812: FILE: kernel/sched.c:2960:
+	const int c = (const int)(sf*SCALE_FACTOR/nice_const);
 	                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#821: FILE: kernel/sched.c:2969:
+^I^I * binary fraction and an exponent.  $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#827: FILE: kernel/sched.c:2975:
+		mantissa = run_avg / (2*MAX_RUN_AVG/sf);
 		                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#827: FILE: kernel/sched.c:2975:
+		mantissa = run_avg / (2*MAX_RUN_AVG/sf);
 		                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#830: FILE: kernel/sched.c:2978:
+^I^I * The linear approximation $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#831: FILE: kernel/sched.c:2979:
+^I^I * ^Ilog(x) = 2*log(2)*(1-x)$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#835: FILE: kernel/sched.c:2983:
+		log = (log_2*2/(SCALE_FACTOR/sf))*(mantissa-sf)/sf;
 		            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#835: FILE: kernel/sched.c:2983:
+		log = (log_2*2/(SCALE_FACTOR/sf))*(mantissa-sf)/sf;
 		              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#835: FILE: kernel/sched.c:2983:
+		log = (log_2*2/(SCALE_FACTOR/sf))*(mantissa-sf)/sf;
 		                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#835: FILE: kernel/sched.c:2983:
+		log = (log_2*2/(SCALE_FACTOR/sf))*(mantissa-sf)/sf;
 		                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#835: FILE: kernel/sched.c:2983:
+		log = (log_2*2/(SCALE_FACTOR/sf))*(mantissa-sf)/sf;
 		                                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#835: FILE: kernel/sched.c:2983:
+		log = (log_2*2/(SCALE_FACTOR/sf))*(mantissa-sf)/sf;
 		                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#836: FILE: kernel/sched.c:2984:
+		log += log_2*exponent/(SCALE_FACTOR/sf);
 		            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#836: FILE: kernel/sched.c:2984:
+		log += log_2*exponent/(SCALE_FACTOR/sf);
 		                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#836: FILE: kernel/sched.c:2984:
+		log += log_2*exponent/(SCALE_FACTOR/sf);
 		                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#837: FILE: kernel/sched.c:2985:
+		prio = p->static_prio + prio_offset + c*log/(sf*sf);
 		                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#837: FILE: kernel/sched.c:2985:
+		prio = p->static_prio + prio_offset + c*log/(sf*sf);
 		                                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#837: FILE: kernel/sched.c:2985:
+		prio = p->static_prio + prio_offset + c*log/(sf*sf);
 		                                               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#843: FILE: kernel/sched.c:2991:
+			prio -= (sleep_avg_nice *  p->sleep_avg)/MAX_SLEEP_AVG;
 			                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#849: FILE: kernel/sched.c:2997:
+	if (prio > MAX_PRIO-1)
 	                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#850: FILE: kernel/sched.c:2998:
+^I^Iprio = MAX_PRIO-1;  $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#850: FILE: kernel/sched.c:2998:
+		prio = MAX_PRIO-1;  
 		               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#874: FILE: kernel/sched.c:3022:
+^Iconst int ratio = sf * SCALE_FACTOR / exp_nice_const; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#878: FILE: kernel/sched.c:3026:
+^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#888: FILE: kernel/sched.c:3036:
+	val *= max/sf;
 	          ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#890: FILE: kernel/sched.c:3038:
+	return(val);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#896: FILE: kernel/sched.c:3044:
+ * fairness.  The run_list_lru keeps a list of tasks sorted by $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#897: FILE: kernel/sched.c:3045:
+ * age. This allows us to find just these forgotten tasks. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#905: FILE: kernel/sched.c:3053:
+{ $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#911: FILE: kernel/sched.c:3059:
+	limit = rq->active->nr_active/8;
 	                             ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#918: FILE: kernel/sched.c:3066:
+		BUG_ON(rt_task(p));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#925: FILE: kernel/sched.c:3073:
+^I^I * The dequeue/enqueue re-order the list so $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#945: FILE: kernel/sysctl.c:59:
+extern int min_timeslice;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#946: FILE: kernel/sysctl.c:60:
+extern int max_timeslice;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#947: FILE: kernel/sysctl.c:61:
+extern int sleep_avg_nice;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#948: FILE: kernel/sysctl.c:62:
+extern int pipe_circle_tax;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#974: FILE: kernel/sysctl.c:370:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000386472.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 37 errors, 30 warnings, 80 checks, 775 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000386472.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
