WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
diff -ruN linux-original/drivers/net/pcmcia/pcnet_cs.c linux/drivers/net/pcmcia/pcnet_cs.c

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#53: FILE: drivers/net/pcmcia/pcnet_cs.c:1637:
+    pcmcia_register_driver(&pcnet_driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: drivers/net/pcmcia/pcnet_cs.c:1644:
+    pcmcia_unregister_driver(&pcnet_driver);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#107: FILE: drivers/pcmcia/ds.c:135:
+static struct pcmcia_driver * get_pcmcia_driver (dev_info_t *dev_info);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#107: FILE: drivers/pcmcia/ds.c:135:
+static struct pcmcia_driver * get_pcmcia_driver (dev_info_t *dev_info);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#163: FILE: drivers/pcmcia/ds.c:155:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: drivers/pcmcia/ds.c:169:
+^I^I^I^Iif (b->driver == driver) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: drivers/pcmcia/ds.c:172:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: drivers/pcmcia/ds.c:184:
+^Istruct pcmcia_driver *p_dev = container_of(driver, $

CHECK:SPACING: No space is necessary after a cast
#226: FILE: drivers/pcmcia/ds.c:189:
+	d = (void *) p;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: drivers/pcmcia/ds.c:199:
+^Ibus_for_each_drv(&pcmcia_bus_type, NULL, $

CHECK:SPACING: No space is necessary after a cast
#245: FILE: drivers/pcmcia/ds.c:200:
+			 (void *) &p, proc_read_drivers_callback);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: drivers/pcmcia/ds.c:346:
+    struct pcmcia_driver *driver;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/pcmcia/ds.c:354:
+    driver = get_pcmcia_driver(&bind_info->dev_info);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#269: FILE: drivers/pcmcia/ds.c:355:
     if (driver == NULL) {
+	    driver = kmalloc(sizeof(struct pcmcia_driver), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*driver)...) over kmalloc(sizeof(struct pcmcia_driver)...)
#277: FILE: drivers/pcmcia/ds.c:356:
+	    driver = kmalloc(sizeof(struct pcmcia_driver), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: drivers/pcmcia/ds.c:357:
+^I    if (!driver) $

WARNING:TABSTOP: Statements should start on a tabstop
#278: FILE: drivers/pcmcia/ds.c:357:
+	    if (!driver) 

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#278: FILE: drivers/pcmcia/ds.c:357:
+	    if (!driver) 
+		    return -ENOMEM;

WARNING:TABSTOP: Statements should start on a tabstop
#279: FILE: drivers/pcmcia/ds.c:358:
+		    return -ENOMEM;

CHECK:SPACING: No space is necessary after a cast
#292: FILE: drivers/pcmcia/ds.c:376:
+    bind_req.dev_info = (dev_info_t *) driver->drv.name;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: drivers/pcmcia/ds.c:376:
+    bind_req.dev_info = (dev_info_t *) driver->drv.name;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#301: FILE: drivers/pcmcia/ds.c:457:
+	if ((strcmp((char *)b->driver->drv.name,
[...]
 	    break;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'b->function == bind_info->function'
#301: FILE: drivers/pcmcia/ds.c:457:
+	if ((strcmp((char *)b->driver->drv.name,
 		    (char *)bind_info->dev_info) == 0) &&
 	    (b->function == bind_info->function))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#310: FILE: drivers/pcmcia/ds.c:491:
+	if ((strcmp((char *)(*b)->driver->drv.name,
[...]
 	    break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: drivers/pcmcia/ds.c:948:
+    bus_unregister(&pcmcia_bus_type);$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#374: FILE: drivers/pcmcia/ds.c:953:
+static int __init init_pcmcia_module(void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#388: FILE: drivers/pcmcia/ds.c:967:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'register_pccard_driver', this function's name, in a string
#399: FILE: drivers/pcmcia/ds.c:978:
+	DEBUG(0, "ds: register_pccard_driver('%s')\n", (char *)dev_info);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*driver)...) over kmalloc(sizeof(struct pcmcia_driver)...)
#402: FILE: drivers/pcmcia/ds.c:981:
+		driver = kmalloc(sizeof(struct pcmcia_driver), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#403: FILE: drivers/pcmcia/ds.c:982:
+^I^Iif (!driver) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: drivers/pcmcia/ds.c:991:
+^Iif (driver->use_count == 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#414: FILE: drivers/pcmcia/ds.c:993:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: drivers/pcmcia/ds.c:993:
+    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#418: FILE: drivers/pcmcia/ds.c:997:
+^I^I^Iif (b->driver != driver) $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b->instance"
#421: FILE: drivers/pcmcia/ds.c:1000:
+			if (b->instance == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#422: FILE: drivers/pcmcia/ds.c:1001:
+				printk(KERN_NOTICE "ds: unable to create instance "

WARNING:SPLIT_STRING: quoted string split across lines
#423: FILE: drivers/pcmcia/ds.c:1002:
+				printk(KERN_NOTICE "ds: unable to create instance "
+				       "of '%s'!\n", driver->drv.name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#433: FILE: drivers/pcmcia/ds.c:1012:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: drivers/pcmcia/ds.c:1012:
+    $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'unregister_pccard_driver', this function's name, in a string
#434: FILE: drivers/pcmcia/ds.c:1013:
+	DEBUG(0, "ds: unregister_pccard_driver('%s')\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#456: FILE: drivers/pcmcia/ds.c:1035:
+	struct cmp_data *cmp = data;
+	if (strncmp((char *)cmp->dev_info, (char *)drv->name,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#464: FILE: drivers/pcmcia/ds.c:1043:
+static struct pcmcia_driver * get_pcmcia_driver (dev_info_t *dev_info)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#464: FILE: drivers/pcmcia/ds.c:1043:
+static struct pcmcia_driver * get_pcmcia_driver (dev_info_t *dev_info)

WARNING:LINE_SPACING: Missing a blank line after declarations
#468: FILE: drivers/pcmcia/ds.c:1047:
+	struct cmp_data cmp;
+	cmp.dev_info = dev_info;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dev_link_t *' should also have an identifier name
#489: FILE: include/pcmcia/ds.h:153:
+	void			(*detach)(dev_link_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#497: FILE: include/pcmcia/ds.h:161:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000389901.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 24 warnings, 10 checks, 446 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000389901.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
