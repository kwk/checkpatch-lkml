WARNING:TYPO_SPELLING: 'accouting' may be misspelled - perhaps 'accounting'?
#56: 
> + 	uid_t creator_id;	/* UID of creator, for resource accouting */
    	                 	                                ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#89: 
>  			info->messages = kmalloc(DFLT_MSGMAX * sizeof(struct msg_msg *), GFP_KERNEL);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#98: 
>  				iput(inode);
   				^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#138: 
>  	struct file *filp;
   	             ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: include/asm-alpha/resource.h:46:
+    {MAX_USER_SIGNALS, MAX_USER_SIGNALS},^I/* RLIMIT_SIGPENDING */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: include/asm-alpha/resource.h:47:
+    {MAX_USER_MSGQUEUE, MAX_USER_MSGQUEUE},^I/* RLIMIT_MSGQUEUE */^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: include/asm-sparc/resource.h:49:
+    {RLIM_INFINITY, RLIM_INFINITY},^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: include/asm-sparc/resource.h:50:
+    {MAX_USER_SIGNALS, MAX_USER_SIGNALS}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: include/asm-sparc/resource.h:51:
+    {MAX_USER_MSGQUEUE, MAX_USER_MSGQUEUE},\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: include/asm-sparc64/resource.h:48:
+    {RLIM_INFINITY, RLIM_INFINITY},^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: include/asm-sparc64/resource.h:49:
+    {MAX_USER_SIGNALS, MAX_USER_SIGNALS}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: include/asm-sparc64/resource.h:50:
+    {MAX_USER_MSGQUEUE, MAX_USER_MSGQUEUE},\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#701: FILE: include/linux/sched.h:316:
+^I/* protected by mq_lock ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#702: FILE: include/linux/sched.h:317:
+^Iint msg_queues; ^I/* How many message queues does this user have? */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#728: FILE: ipc/mqueue.c:46:
+#define DFLT_MSGMAX ^I10^I/* max number of messages in each queue */$

WARNING:TYPO_SPELLING: 'accouting' may be misspelled - perhaps 'accounting'?
#739: FILE: ipc/mqueue.c:69:
+ 	struct user_struct *user;	/* user who created, for accouting */
  	                         	                         ^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#739: FILE: ipc/mqueue.c:69:
+ ^Istruct user_struct *user;^I/* user who created, for accouting */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#739: FILE: ipc/mqueue.c:69:
+ ^Istruct user_struct *user;^I/* user who created, for accouting */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#739: FILE: ipc/mqueue.c:69:
+ ^Istruct user_struct *user;^I/* user who created, for accouting */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#749: FILE: ipc/mqueue.c:101:
+static struct inode *mqueue_get_inode(struct super_block *sb, int mode,
+							struct mq_attr *attr)

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#814: FILE: ipc/mqueue.c:174:
+	iput(inode);
 	^^^^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#824: FILE: ipc/mqueue.c:187:
+	inode = mqueue_get_inode(sb, S_IFDIR | S_ISVTX | S_IRWXUGO, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#937: FILE: kernel/signal.c:268:
+^Iif (atomic_read(&current->user->signal_pending) < $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#958: FILE: kernel/signal.c:286:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#959: FILE: kernel/signal.c:287:
+^I * Decrease per-user sigpending count. Check $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1016: FILE: kernel/signal.c:460:
+static inline int collect_signal(int sig, struct task_struct *tsk,
+				struct sigpending *list, siginfo_t *info)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1036: FILE: kernel/signal.c:504:
+static int __dequeue_signal(struct task_struct *tsk, struct sigpending *pending,
+			sigset_t *mask, siginfo_t *info)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1067: FILE: kernel/signal.c:586:
+static int rm_from_queue(unsigned long mask, struct task_struct *t,
+			struct sigpending *s)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1113: FILE: kernel/signal.c:709:
+static int send_signal(int sig, struct siginfo *info, struct task_struct *t,
+			struct sigpending *signals)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000283853.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 20 warnings, 5 checks, 878 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000283853.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
