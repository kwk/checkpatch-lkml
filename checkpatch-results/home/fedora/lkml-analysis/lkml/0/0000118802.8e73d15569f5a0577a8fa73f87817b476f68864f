WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
> > > Kernel command line: root=/dev/md2 vga=0x31a ro selinux=0 psmouse.proto=bare

WARNING:TYPO_SPELLING: 'importent' may be misspelled - perhaps 'important'?
#59: 
un-stringnifyed the importent users, or I thought so.
                    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Attched' may be misspelled - perhaps 'Attached'?
#62: 
Attched patch fixes this.
^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#112: FILE: drivers/media/dvb/cinergyT2/cinergyT2.c:63:
+		printk("%s: %s(): ", KBUILD_MODNAME,			\

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#125: FILE: drivers/media/dvb/ttpci/budget.h:22:
+	    do { if ((budget_debug & level)) { printk("%s: %s(): ", KBUILD_MODNAME, __FUNCTION__); printk(args); } } while (0)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TABSTOP: Statements should start on a tabstop
#125: FILE: drivers/media/dvb/ttpci/budget.h:22:
+	    do { if ((budget_debug & level)) { printk("%s: %s(): ", KBUILD_MODNAME, __FUNCTION__); printk(args); } } while (0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#125: FILE: drivers/media/dvb/ttpci/budget.h:22:
+	    do { if ((budget_debug & level)) { printk("%s: %s(): ", KBUILD_MODNAME, __FUNCTION__); printk(args); } } while (0)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#125: FILE: drivers/media/dvb/ttpci/budget.h:22:
+	    do { if ((budget_debug & level)) { printk("%s: %s(): ", KBUILD_MODNAME, __FUNCTION__); printk(args); } } while (0)

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#138: FILE: drivers/media/video/tda9840.c:37:
+            do { if (debug) { printk("%s: %s()[%d]: ", KBUILD_MODNAME, __FUNCTION__, __LINE__); printk(args); } } while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: drivers/media/video/tda9840.c:37:
+            do { if (debug) { printk("%s: %s()[%d]: ", KBUILD_MODNAME, __FUNCTION__, __LINE__); printk(args); } } while (0)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: drivers/media/video/tda9840.c:37:
+            do { if (debug) { printk("%s: %s()[%d]: ", KBUILD_MODNAME, __FUNCTION__, __LINE__); printk(args); } } while (0)$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#138: FILE: drivers/media/video/tda9840.c:37:
+            do { if (debug) { printk("%s: %s()[%d]: ", KBUILD_MODNAME, __FUNCTION__, __LINE__); printk(args); } } while (0)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#138: FILE: drivers/media/video/tda9840.c:37:
+            do { if (debug) { printk("%s: %s()[%d]: ", KBUILD_MODNAME, __FUNCTION__, __LINE__); printk(args); } } while (0)

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#151: FILE: drivers/media/video/tea6415c.c:39:
+            do { if (debug) { printk("%s: %s()[%d]: ", KBUILD_MODNAME, __FUNCTION__, __LINE__); printk(args); } } while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: drivers/media/video/tea6415c.c:39:
+            do { if (debug) { printk("%s: %s()[%d]: ", KBUILD_MODNAME, __FUNCTION__, __LINE__); printk(args); } } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: drivers/media/video/tea6415c.c:39:
+            do { if (debug) { printk("%s: %s()[%d]: ", KBUILD_MODNAME, __FUNCTION__, __LINE__); printk(args); } } while (0)$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#151: FILE: drivers/media/video/tea6415c.c:39:
+            do { if (debug) { printk("%s: %s()[%d]: ", KBUILD_MODNAME, __FUNCTION__, __LINE__); printk(args); } } while (0)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#151: FILE: drivers/media/video/tea6415c.c:39:
+            do { if (debug) { printk("%s: %s()[%d]: ", KBUILD_MODNAME, __FUNCTION__, __LINE__); printk(args); } } while (0)

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#164: FILE: drivers/media/video/tea6420.c:39:
+            do { if (debug) { printk("%s: %s()[%d]: ", KBUILD_MODNAME, __FUNCTION__, __LINE__); printk(args); } } while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: drivers/media/video/tea6420.c:39:
+            do { if (debug) { printk("%s: %s()[%d]: ", KBUILD_MODNAME, __FUNCTION__, __LINE__); printk(args); } } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: drivers/media/video/tea6420.c:39:
+            do { if (debug) { printk("%s: %s()[%d]: ", KBUILD_MODNAME, __FUNCTION__, __LINE__); printk(args); } } while (0)$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#164: FILE: drivers/media/video/tea6420.c:39:
+            do { if (debug) { printk("%s: %s()[%d]: ", KBUILD_MODNAME, __FUNCTION__, __LINE__); printk(args); } } while (0)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#164: FILE: drivers/media/video/tea6420.c:39:
+            do { if (debug) { printk("%s: %s()[%d]: ", KBUILD_MODNAME, __FUNCTION__, __LINE__); printk(args); } } while (0)

WARNING:LONG_LINE_COMMENT: line length of 196 exceeds 100 columns
#190: FILE: include/media/saa7146.h:24:
+//#define DEBUG_PROLOG printk("(0x%08x)(0x%08x) %s: %s(): ",(dev==0?-1:(dev->mem==0?-1:saa7146_read(dev,RPS_ADDR0))),(dev==0?-1:(dev->mem==0?-1:saa7146_read(dev,IER))),KBUILD_MODNAME,__FUNCTION__)

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#198: FILE: include/media/saa7146.h:30:
+#define DEBUG_PROLOG printk("%s: %s(): ",KBUILD_MODNAME,__FUNCTION__)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#198: FILE: include/media/saa7146.h:30:
+#define DEBUG_PROLOG printk("%s: %s(): ",KBUILD_MODNAME,__FUNCTION__)
                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#198: FILE: include/media/saa7146.h:30:
+#define DEBUG_PROLOG printk("%s: %s(): ",KBUILD_MODNAME,__FUNCTION__)
                                                        ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#198: FILE: include/media/saa7146.h:30:
+#define DEBUG_PROLOG printk("%s: %s(): ",KBUILD_MODNAME,__FUNCTION__)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#199: FILE: include/media/saa7146.h:31:
+#define INFO(x) { printk("%s: ",KBUILD_MODNAME); printk x; }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: include/media/saa7146.h:31:
+#define INFO(x) { printk("%s: ",KBUILD_MODNAME); printk x; }
                                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#212: FILE: net/ipv4/netfilter/ip_nat_ftp.c:174:
+	printk(KERN_INFO KBUILD_MODNAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#225: FILE: net/ipv4/netfilter/ip_nat_irc.c:116:
+	printk(KERN_INFO KBUILD_MODNAME

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#247: FILE: security/capability.c:68:
+		if (mod_reg_security (KBUILD_MODNAME, &capability_ops)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#256: FILE: security/capability.c:86:
+		if (mod_unreg_security (KBUILD_MODNAME, &capability_ops))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000118802.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 28 warnings, 0 checks, 105 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000118802.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
