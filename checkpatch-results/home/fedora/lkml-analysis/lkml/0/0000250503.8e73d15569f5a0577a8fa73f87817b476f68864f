WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
Both ext2 and ext3 resort to sync_inode() in their ->sync_inode method, which

WARNING:LINE_SPACING: Missing a blank line after declarations
#128: FILE: fs/fs-writeback.c:176:
+		int err = write_inode(inode, wait);
+		if (ret == 0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#142: FILE: fs/adfs/adfs.h:69:
+int adfs_write_inode(struct inode *inode,int unused);
                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#214: FILE: fs/bfs/inode.c:88:
+static int bfs_write_inode(struct inode * inode, int unused)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#252: FILE: fs/ext2/ext2.h:118:
+extern int ext2_write_inode (struct inode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#252: FILE: fs/ext2/ext2.h:118:
+extern int ext2_write_inode (struct inode *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#252: FILE: fs/ext2/ext2.h:118:
+extern int ext2_write_inode (struct inode *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#252: FILE: fs/ext2/ext2.h:118:
+extern int ext2_write_inode (struct inode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#346: FILE: fs/hfs/hfs_fs.h:201:
+extern int hfs_write_inode(struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#346: FILE: fs/hfs/hfs_fs.h:201:
+extern int hfs_write_inode(struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#346: FILE: fs/hfs/hfs_fs.h:201:
+extern int hfs_write_inode(struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#412: FILE: fs/hfsplus/hfsplus_fs.h:336:
+int hfsplus_cat_write_inode(struct inode *);

CHECK:BRACES: Unbalanced braces around else statement
#516: FILE: fs/jfs/inode.c:127:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#529: FILE: fs/jfs/super.c:80:
+extern int jfs_write_inode(struct inode *inode, int wait);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#541: FILE: fs/minix/inode.c:21:
+static int minix_write_inode(struct inode * inode, int wait);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#550: FILE: fs/minix/inode.c:508:
+static int minix_write_inode(struct inode * inode, int wait)

ERROR:SPACING: space required after that ',' (ctx:OxV)
#565: FILE: fs/nfs/inode.c:60:
+static int nfs_write_inode(struct inode *,int);
                                          ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#695: FILE: fs/reiserfs/inode.c:1507:
+int reiserfs_write_inode (struct inode * inode, int do_sync) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#695: FILE: fs/reiserfs/inode.c:1507:
+int reiserfs_write_inode (struct inode * inode, int do_sync) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#695: FILE: fs/reiserfs/inode.c:1507:
+int reiserfs_write_inode (struct inode * inode, int do_sync) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#704: FILE: fs/reiserfs/inode.c:1515:
+        return -EROFS;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: fs/reiserfs/inode.c:1515:
+        return -EROFS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: fs/reiserfs/inode.c:1529:
+    return 0;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#724: FILE: fs/sysv/inode.c:263:
+int sysv_write_inode(struct inode * inode, int wait)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#743: FILE: fs/sysv/sysv.h:137:
+extern int sysv_write_inode(struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#743: FILE: fs/sysv/sysv.h:137:
+extern int sysv_write_inode(struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#743: FILE: fs/sysv/sysv.h:137:
+extern int sysv_write_inode(struct inode *, int);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#755: FILE: fs/udf/inode.c:1319:
+int udf_write_inode(struct inode * inode, int sync)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#774: FILE: fs/udf/udfdecl.h:102:
+extern int udf_write_inode(struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#774: FILE: fs/udf/udfdecl.h:102:
+extern int udf_write_inode(struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#774: FILE: fs/udf/udfdecl.h:102:
+extern int udf_write_inode(struct inode *, int);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#786: FILE: fs/ufs/inode.c:791:
+int ufs_write_inode (struct inode * inode, int wait)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#786: FILE: fs/ufs/inode.c:791:
+int ufs_write_inode (struct inode * inode, int wait)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#791: FILE: fs/ufs/inode.c:795:
+	ret = ufs_update_inode (inode, wait);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#805: FILE: fs/umsdos/inode.c:315:
+int UMSDOS_write_inode (struct inode *inode, int wait)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#811: FILE: fs/umsdos/inode.c:320:
+	ret = fat_write_inode (inode, wait);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#858: FILE: include/linux/affs_fs.h:65:
+extern int			 affs_write_inode(struct inode *inode, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#858: FILE: include/linux/affs_fs.h:65:
+extern int			 affs_write_inode(struct inode *inode, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#870: FILE: include/linux/ext3_fs.h:727:
+extern int  ext3_write_inode (struct inode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#870: FILE: include/linux/ext3_fs.h:727:
+extern int  ext3_write_inode (struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#870: FILE: include/linux/ext3_fs.h:727:
+extern int  ext3_write_inode (struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#870: FILE: include/linux/ext3_fs.h:727:
+extern int  ext3_write_inode (struct inode *, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#882: FILE: include/linux/fs.h:963:
+	int (*write_inode) (struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#882: FILE: include/linux/fs.h:963:
+	int (*write_inode) (struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#882: FILE: include/linux/fs.h:963:
+	int (*write_inode) (struct inode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#894: FILE: include/linux/msdos_fs.h:279:
+extern int fat_write_inode(struct inode *inode, int wait);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#906: FILE: include/linux/reiserfs_fs.h:1948:
+int reiserfs_write_inode (struct inode * inode, int) ;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#906: FILE: include/linux/reiserfs_fs.h:1948:
+int reiserfs_write_inode (struct inode * inode, int) ;

WARNING:SPACING: space prohibited before semicolon
#906: FILE: include/linux/reiserfs_fs.h:1948:
+int reiserfs_write_inode (struct inode * inode, int) ;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#906: FILE: include/linux/reiserfs_fs.h:1948:
+int reiserfs_write_inode (struct inode * inode, int) ;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#918: FILE: include/linux/ufs_fs.h:901:
+extern int ufs_write_inode (struct inode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#918: FILE: include/linux/ufs_fs.h:901:
+extern int ufs_write_inode (struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#918: FILE: include/linux/ufs_fs.h:901:
+extern int ufs_write_inode (struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#918: FILE: include/linux/ufs_fs.h:901:
+extern int ufs_write_inode (struct inode *, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000250503.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 33 warnings, 9 checks, 668 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000250503.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
