CHECK:CAMELCASE: Avoid CamelCase: <MachineCheckException>
#53: FILE: arch/ppc/kernel/traps.c:202:
+void MachineCheckException(struct pt_regs *regs)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <SMIException>
#63: FILE: arch/ppc/kernel/traps.c:330:
+void SMIException(struct pt_regs *regs)

CHECK:CAMELCASE: Avoid CamelCase: <UnknownException>
#73: FILE: arch/ppc/kernel/traps.c:339:
+void UnknownException(struct pt_regs *regs)

CHECK:CAMELCASE: Avoid CamelCase: <InstructionBreakpoint>
#82: FILE: arch/ppc/kernel/traps.c:346:
+void InstructionBreakpoint(struct pt_regs *regs)

CHECK:CAMELCASE: Avoid CamelCase: <RunModeException>
#91: FILE: arch/ppc/kernel/traps.c:353:
+void RunModeException(struct pt_regs *regs)

CHECK:CAMELCASE: Avoid CamelCase: <ProgramCheckException>
#121: FILE: arch/ppc/kernel/traps.c:471:
+void ProgramCheckException(struct pt_regs *regs)

CHECK:CAMELCASE: Avoid CamelCase: <SingleStepException>
#131: FILE: arch/ppc/kernel/traps.c:544:
+void SingleStepException(struct pt_regs *regs)

CHECK:CAMELCASE: Avoid CamelCase: <AlignmentException>
#141: FILE: arch/ppc/kernel/traps.c:552:
+void AlignmentException(struct pt_regs *regs)

CHECK:CAMELCASE: Avoid CamelCase: <StackOverflow>
#151: FILE: arch/ppc/kernel/traps.c:572:
+void StackOverflow(struct pt_regs *regs)

CHECK:CAMELCASE: Avoid CamelCase: <SoftwareEmulation>
#171: FILE: arch/ppc/kernel/traps.c:597:
+void SoftwareEmulation(struct pt_regs *regs)

CHECK:CAMELCASE: Avoid CamelCase: <TAUException>
#181: FILE: arch/ppc/kernel/traps.c:649:
+void TAUException(struct pt_regs *regs)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#190: FILE: arch/ppc/kernel/traps.c:671:
+		printk(KERN_ERR "AltiVec used in kernel (task=%p, pc=%lx)\n",

CHECK:CAMELCASE: Avoid CamelCase: <AltivecAssistException>
#198: FILE: arch/ppc/kernel/traps.c:677:
+void AltivecAssistException(struct pt_regs *regs)

CHECK:CAMELCASE: Avoid CamelCase: <SPEFloatingPointException>
#208: FILE: arch/ppc/kernel/traps.c:721:
+void SPEFloatingPointException(struct pt_regs *regs)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#232: FILE: include/asm-ppc/processor.h:200:
+extern int emulate_altivec(struct pt_regs *regs);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000272968.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 1 warnings, 14 checks, 177 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000272968.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
