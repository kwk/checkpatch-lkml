WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
 drivers/i2c/i2c-iop3xx.c |  303 +++++++++++++++++++++--------------------------

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#36: 
--- a/drivers/i2c/i2c-iop3xx.c	Wed Jun 11 13:25:13 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#44: FILE: drivers/i2c/i2c-iop3xx.c:53:
+		printk(KERN_CRIT "PASSERT %s in %s:%d\n", #x, __FILE__, __LINE__ );\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#44: FILE: drivers/i2c/i2c-iop3xx.c:53:
+		printk(KERN_CRIT "PASSERT %s in %s:%d\n", #x, __FILE__, __LINE__ );\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: drivers/i2c/i2c-iop3xx.c:128:
+static void iop3xx_i2c_handler(int this_irq, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: drivers/i2c/i2c-iop3xx.c:129:
+^I^I^I^Ivoid *dev_id, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: drivers/i2c/i2c-iop3xx.c:129:
+static void iop3xx_i2c_handler(int this_irq, 
+				void *dev_id, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: drivers/i2c/i2c-iop3xx.c:130:
+^I^I^I^Istruct pt_regs *regs) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#151: FILE: drivers/i2c/i2c-iop3xx.c:136:
+	if ((sr &= iop3xx_adap->biu->SR_enabled)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#167: FILE: drivers/i2c/i2c-iop3xx.c:148:
+	if ((sr&IOP321_ISR_BERRD)) {
 	       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#171: FILE: drivers/i2c/i2c-iop3xx.c:151:
+	if ((sr&IOP321_ISR_ALD)) {
 	       ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#197: FILE: drivers/i2c/i2c-iop3xx.c:174:
+typedef int (* compare_func)(unsigned test, unsigned mask);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#197: FILE: drivers/i2c/i2c-iop3xx.c:174:
+typedef int (* compare_func)(unsigned test, unsigned mask);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#197: FILE: drivers/i2c/i2c-iop3xx.c:174:
+typedef int (* compare_func)(unsigned test, unsigned mask);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#197: FILE: drivers/i2c/i2c-iop3xx.c:174:
+typedef int (* compare_func)(unsigned test, unsigned mask);
              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: drivers/i2c/i2c-iop3xx.c:177:
+static int iop3xx_adap_wait_event(struct i2c_algo_iop3xx_data *iop3xx_adap, $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#204: FILE: drivers/i2c/i2c-iop3xx.c:178:
+				  unsigned flags, unsigned* status,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int*' to bare use of 'unsigned*'
#204: FILE: drivers/i2c/i2c-iop3xx.c:178:
+				  unsigned flags, unsigned* status,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#204: FILE: drivers/i2c/i2c-iop3xx.c:178:
+				  unsigned flags, unsigned* status,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#214: FILE: drivers/i2c/i2c-iop3xx.c:192:
+		if ((rc = iop3xx_adap_error(sr)) < 0) {

ERROR:SPACING: space required after that close brace '}'
#218: FILE: drivers/i2c/i2c-iop3xx.c:195:
+		}else if (!interrupted) {

ERROR:SPACING: space required before the open parenthesis '('
#223: FILE: drivers/i2c/i2c-iop3xx.c:199:
+	} while(!done);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: drivers/i2c/i2c-iop3xx.c:207:
+ * Concrete compare_funcs $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#239: FILE: drivers/i2c/i2c-iop3xx.c:209:
+static int all_bits_clear(unsigned test, unsigned mask)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#239: FILE: drivers/i2c/i2c-iop3xx.c:209:
+static int all_bits_clear(unsigned test, unsigned mask)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#245: FILE: drivers/i2c/i2c-iop3xx.c:213:
 }
+static int any_bits_set(unsigned test, unsigned mask)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#245: FILE: drivers/i2c/i2c-iop3xx.c:213:
+static int any_bits_set(unsigned test, unsigned mask)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#245: FILE: drivers/i2c/i2c-iop3xx.c:213:
+static int any_bits_set(unsigned test, unsigned mask)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#293: FILE: drivers/i2c/i2c-iop3xx.c:246:
+	*IOP321_GPOD &= ~(iop3xx_adap->channel==0 ?
 	                                      ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#310: FILE: drivers/i2c/i2c-iop3xx.c:258:
+					      struct i2c_msg* msg)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: drivers/i2c/i2c-iop3xx.c:271:
+^I/* this assert fires every time, contrary to IOP manual^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#331: FILE: drivers/i2c/i2c-iop3xx.c:272:
+	/* this assert fires every time, contrary to IOP manual	
+	PASSERT((status&IOP321_ISR_UNITBUSY)!=0);

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#333: FILE: drivers/i2c/i2c-iop3xx.c:274:
+	PASSERT((status&IOP321_ISR_RXREAD)==0);
 	               ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#333: FILE: drivers/i2c/i2c-iop3xx.c:274:
+	PASSERT((status&IOP321_ISR_RXREAD)==0);
 	                                  ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#349: FILE: drivers/i2c/i2c-iop3xx.c:287:
+	if (stop) {
[...]
-	}else{
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#365: FILE: drivers/i2c/i2c-iop3xx.c:299:
+				 char* byte, int stop)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#374: FILE: drivers/i2c/i2c-iop3xx.c:307:
+	if (stop) {
[...]
-	}else{
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: drivers/i2c/i2c-iop3xx.c:321:
+static int iop3xx_i2c_writebytes(struct i2c_adapter *i2c_adap, $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#401: FILE: drivers/i2c/i2c-iop3xx.c:328:
+	for (ii = 0; rc == 0 && ii != count; ++ii) {
 		rc = iop3xx_adap_write_byte(iop3xx_adap, buf[ii], ii==count-1);
 	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#410: FILE: drivers/i2c/i2c-iop3xx.c:334:
+static int iop3xx_i2c_readbytes(struct i2c_adapter *i2c_adap, $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#418: FILE: drivers/i2c/i2c-iop3xx.c:341:
+	for (ii = 0; rc == 0 && ii != count; ++ii) {
 		rc = iop3xx_adap_read_byte(iop3xx_adap, &buf[ii], ii==count-1);
 	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#435: FILE: drivers/i2c/i2c-iop3xx.c:354:
+static int iop3xx_handle_msg(struct i2c_adapter *i2c_adap, struct i2c_msg* pmsg) $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#435: FILE: drivers/i2c/i2c-iop3xx.c:354:
+static int iop3xx_handle_msg(struct i2c_adapter *i2c_adap, struct i2c_msg* pmsg) 

WARNING:BRACES: braces {} are not necessary for single statement blocks
#443: FILE: drivers/i2c/i2c-iop3xx.c:360:
+	if (rc < 0) {
 		return rc;
 	}

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#451: FILE: drivers/i2c/i2c-iop3xx.c:364:
+	if ((pmsg->flags&I2C_M_RD)) {
 	                ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#451: FILE: drivers/i2c/i2c-iop3xx.c:364:
+	if ((pmsg->flags&I2C_M_RD)) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#481: FILE: drivers/i2c/i2c-iop3xx.c:385:
+	for (im = 0; ret == 0 && im != num; ++im) {
+		ret = iop3xx_handle_msg(i2c_adap, &msgs[im]);
 	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#520: FILE: drivers/i2c/i2c-iop3xx.c:423:
+^Iif (!request_region( REGION_START(iop3xx_adap), $

ERROR:SPACING: space prohibited after that open parenthesis '('
#520: FILE: drivers/i2c/i2c-iop3xx.c:423:
+	if (!request_region( REGION_START(iop3xx_adap), 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#521: FILE: drivers/i2c/i2c-iop3xx.c:424:
+	if (!request_region( REGION_START(iop3xx_adap), 
 			      REGION_LENGTH(iop3xx_adap),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#534: FILE: drivers/i2c/i2c-iop3xx.c:432:
+^Iif (request_irq( $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#534: FILE: drivers/i2c/i2c-iop3xx.c:432:
+	if (request_irq( 

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#622: FILE: drivers/i2c/i2c-iop3xx.c:493:
+	.timeout		= 1*HZ,
 	        		   ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#628: FILE: drivers/i2c/i2c-iop3xx.c:495:
 };
+static struct i2c_algo_iop3xx_data algo_iop3xx_data1 = {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#631: FILE: drivers/i2c/i2c-iop3xx.c:498:
+	.timeout		= 1*HZ,
 	        		   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#738: FILE: drivers/i2c/i2c-iop3xx.h:51:
+#define IOP321_ICR_MABORT^I0x0010^I/* 1=Send a STOP with no data $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#739: FILE: drivers/i2c/i2c-iop3xx.h:52:
+					 * NB TBYTE must be clear */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#745: FILE: drivers/i2c/i2c-iop3xx.h:58:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#773: FILE: drivers/i2c/i2c-iop3xx.h:86:
+#define I2C_ERR_BERR		(I2C_ERR+0)
                     		        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#774: FILE: drivers/i2c/i2c-iop3xx.h:87:
+#define I2C_ERR_ALD		(I2C_ERR+1)
                    		        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#801: FILE: drivers/i2c/i2c-iop3xx.h:113:
+#define REGION_END(adap)	((u32)((adap)->biu->BMR+1))
                         	                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#802: FILE: drivers/i2c/i2c-iop3xx.h:114:
+#define REGION_LENGTH(adap)	(REGION_END(adap)-REGION_START(adap))
                            	                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'adap' - possible side-effects?
#802: FILE: drivers/i2c/i2c-iop3xx.h:114:
+#define REGION_LENGTH(adap)	(REGION_END(adap)-REGION_START(adap))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#805: FILE: drivers/i2c/i2c-iop3xx.h:116:
+#define IRQ_STATUS_MASK(adap)	(1<<adap->biu->irq)
                              	  ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'adap' may be better as '(adap)' to avoid precedence issues
#805: FILE: drivers/i2c/i2c-iop3xx.h:116:
+#define IRQ_STATUS_MASK(adap)	(1<<adap->biu->irq)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000363294.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 20 warnings, 19 checks, 753 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000363294.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
