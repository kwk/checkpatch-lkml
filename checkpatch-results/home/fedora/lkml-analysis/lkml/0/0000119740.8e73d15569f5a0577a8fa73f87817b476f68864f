CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#126: FILE: drivers/media/common/saa7146_core.c:112:
+	sglist = kzalloc(sizeof(struct scatterlist)*nr_pages, GFP_KERNEL);
 	                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sglist)...) over kzalloc(sizeof(struct scatterlist)...)
#126: FILE: drivers/media/common/saa7146_core.c:112:
+	sglist = kzalloc(sizeof(struct scatterlist)*nr_pages, GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#126: FILE: drivers/media/common/saa7146_core.c:112:
+	sglist = kzalloc(sizeof(struct scatterlist)*nr_pages, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev)...) over kzalloc(sizeof(struct saa7146_dev)...)
#139: FILE: drivers/media/common/saa7146_core.c:309:
+	dev = kzalloc(sizeof(struct saa7146_dev), GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#160: FILE: drivers/media/common/saa7146_fops.c:242:
+	fh = kzalloc(sizeof(*fh),GFP_KERNEL);
 	                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#175: FILE: drivers/media/common/saa7146_fops.c:437:
+	struct saa7146_vv *vv = kzalloc (sizeof(struct saa7146_vv),GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#175: FILE: drivers/media/common/saa7146_fops.c:437:
+	struct saa7146_vv *vv = kzalloc (sizeof(struct saa7146_vv),GFP_KERNEL);
 	                                                          ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*vv)...) over kzalloc(sizeof(struct saa7146_vv)...)
#175: FILE: drivers/media/common/saa7146_fops.c:437:
+	struct saa7146_vv *vv = kzalloc (sizeof(struct saa7146_vv),GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fc)...) over kzalloc(sizeof(struct flexcop_device)...)
#193: FILE: drivers/media/dvb/b2c2/flexcop.c:223:
+	struct flexcop_device *fc = kzalloc(sizeof(struct flexcop_device), GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#220: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:797:
+	if (!(card = kzalloc(sizeof(struct dvb_bt8xx_card), GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*card)...) over kzalloc(sizeof(struct dvb_bt8xx_card)...)
#220: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:797:
+	if (!(card = kzalloc(sizeof(struct dvb_bt8xx_card), GFP_KERNEL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#238: FILE: drivers/media/dvb/dvb-core/dvb_ca_en50221.c:1652:
+	if ((ca = kzalloc(sizeof(struct dvb_ca_private), GFP_KERNEL)) == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ca)...) over kzalloc(sizeof(struct dvb_ca_private)...)
#238: FILE: drivers/media/dvb/dvb-core/dvb_ca_en50221.c:1652:
+	if ((ca = kzalloc(sizeof(struct dvb_ca_private), GFP_KERNEL)) == NULL) {

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#247: FILE: drivers/media/dvb/dvb-core/dvb_ca_en50221.c:1659:
+	if ((ca->slot_info = kzalloc(sizeof(struct dvb_ca_slot) * slot_count, GFP_KERNEL)) == NULL) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#247: FILE: drivers/media/dvb/dvb-core/dvb_ca_en50221.c:1659:
+	if ((ca->slot_info = kzalloc(sizeof(struct dvb_ca_slot) * slot_count, GFP_KERNEL)) == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ca->slot_info)...) over kzalloc(sizeof(struct dvb_ca_slot)...)
#247: FILE: drivers/media/dvb/dvb-core/dvb_ca_en50221.c:1659:
+	if ((ca->slot_info = kzalloc(sizeof(struct dvb_ca_slot) * slot_count, GFP_KERNEL)) == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fe->frontend_priv)...) over kzalloc(sizeof(struct dvb_frontend_private)...)
#264: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:979:
+	fe->frontend_priv = kzalloc(sizeof(struct dvb_frontend_private), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*state)...) over kzalloc(sizeof(struct dtt200u_fe_state)...)
#283: FILE: drivers/media/dvb/dvb-usb/dtt200u-fe.c:159:
+	state = kzalloc(sizeof(struct dtt200u_fe_state), GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#299: FILE: drivers/media/dvb/dvb-usb/dvb-usb-init.c:151:
+		d = kzalloc(sizeof(struct dvb_usb_device),GFP_KERNEL);
 		                                         ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*d)...) over kzalloc(sizeof(struct dvb_usb_device)...)
#299: FILE: drivers/media/dvb/dvb-usb/dvb-usb-init.c:151:
+		d = kzalloc(sizeof(struct dvb_usb_device),GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#313: FILE: drivers/media/dvb/dvb-usb/dvb-usb-init.c:163:
+			d->priv = kzalloc(d->props.size_of_priv,GFP_KERNEL);
 			                                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#332: FILE: drivers/media/dvb/dvb-usb/dvb-usb-urb.c:178:
+	if ((d->buf_list = kzalloc(num*sizeof(u8 *), GFP_ATOMIC)) == NULL)
 	                              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#332: FILE: drivers/media/dvb/dvb-usb/dvb-usb-urb.c:178:
+	if ((d->buf_list = kzalloc(num*sizeof(u8 *), GFP_ATOMIC)) == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#336: FILE: drivers/media/dvb/dvb-usb/dvb-usb-urb.c:181:
+	if ((d->dma_addr = kzalloc(num*sizeof(dma_addr_t), GFP_ATOMIC)) == NULL) {
 	                              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#336: FILE: drivers/media/dvb/dvb-usb/dvb-usb-urb.c:181:
+	if ((d->dma_addr = kzalloc(num*sizeof(dma_addr_t), GFP_ATOMIC)) == NULL) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#350: FILE: drivers/media/dvb/dvb-usb/dvb-usb-urb.c:286:
+	d->urb_list = kzalloc(d->props.urb.count * sizeof(struct urb *),GFP_KERNEL);
 	                                                               ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#350: FILE: drivers/media/dvb/dvb-usb/dvb-usb-urb.c:286:
+	d->urb_list = kzalloc(d->props.urb.count * sizeof(struct urb *),GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*s)...) over kzalloc(sizeof(struct vp702x_fe_state)...)
#366: FILE: drivers/media/dvb/dvb-usb/vp702x-fe.c:284:
+	struct vp702x_fe_state *s = kzalloc(sizeof(struct vp702x_fe_state), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*s)...) over kzalloc(sizeof(struct vp7045_fe_state)...)
#382: FILE: drivers/media/dvb/dvb-usb/vp7045-fe.c:148:
+	struct vp7045_fe_state *s = kzalloc(sizeof(struct vp7045_fe_state), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*state)...) over kzalloc(sizeof(struct bcm3510_state)...)
#398: FILE: drivers/media/dvb/frontends/bcm3510.c:785:
+	state = kzalloc(sizeof(struct bcm3510_state), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*state)...) over kzalloc(sizeof(struct dib3000_state)...)
#414: FILE: drivers/media/dvb/frontends/dib3000mb.c:703:
+	state = kzalloc(sizeof(struct dib3000_state), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*state)...) over kzalloc(sizeof(struct dib3000_state)...)
#430: FILE: drivers/media/dvb/frontends/dib3000mc.c:835:
+	state = kzalloc(sizeof(struct dib3000_state), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*state)...) over kzalloc(sizeof(struct lgdt330x_state)...)
#446: FILE: drivers/media/dvb/frontends/lgdt330x.c:714:
+	state = kzalloc(sizeof(struct lgdt330x_state), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*state)...) over kzalloc(sizeof(struct mt352_state)...)
#462: FILE: drivers/media/dvb/frontends/mt352.c:538:
+	state = kzalloc(sizeof(struct mt352_state), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*state)...) over kzalloc(sizeof(struct nxt200x_state)...)
#477: FILE: drivers/media/dvb/frontends/nxt200x.c:1113:
+	state = kzalloc(sizeof(struct nxt200x_state), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*pluto)...) over kzalloc(sizeof(struct pluto)...)
#493: FILE: drivers/media/dvb/pluto2/pluto2.c:587:
+	pluto = kzalloc(sizeof(struct pluto), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*av7110)...) over kzalloc(sizeof(struct av7110)...)
#510: FILE: drivers/media/dvb/ttpci/av7110.c:2517:
+	av7110 = kzalloc(sizeof(struct av7110), GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#530: FILE: drivers/media/dvb/ttpci/budget-av.c:857:
+	if (!(budget_av = kzalloc(sizeof(struct budget_av), GFP_KERNEL)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*budget_av)...) over kzalloc(sizeof(struct budget_av)...)
#530: FILE: drivers/media/dvb/ttpci/budget-av.c:857:
+	if (!(budget_av = kzalloc(sizeof(struct budget_av), GFP_KERNEL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#547: FILE: drivers/media/dvb/ttusb-budget/dvb-ttusb-budget.c:1492:
+	if (!(ttusb = kzalloc(sizeof(struct ttusb), GFP_KERNEL)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ttusb)...) over kzalloc(sizeof(struct ttusb)...)
#547: FILE: drivers/media/dvb/ttusb-budget/dvb-ttusb-budget.c:1492:
+	if (!(ttusb = kzalloc(sizeof(struct ttusb), GFP_KERNEL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#564: FILE: drivers/media/dvb/ttusb-dec/ttusb_dec.c:1609:
+	if (!(dec = kzalloc(sizeof(struct ttusb_dec), GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dec)...) over kzalloc(sizeof(struct ttusb_dec)...)
#564: FILE: drivers/media/dvb/ttusb-dec/ttusb_dec.c:1609:
+	if (!(dec = kzalloc(sizeof(struct ttusb_dec), GFP_KERNEL))) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#585: FILE: drivers/media/radio/radio-gemtek-pci.c:320:
+	if ( (card = kzalloc( sizeof( struct gemtek_pci_card ), GFP_KERNEL )) == NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#585: FILE: drivers/media/radio/radio-gemtek-pci.c:320:
+	if ( (card = kzalloc( sizeof( struct gemtek_pci_card ), GFP_KERNEL )) == NULL ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#585: FILE: drivers/media/radio/radio-gemtek-pci.c:320:
+	if ( (card = kzalloc( sizeof( struct gemtek_pci_card ), GFP_KERNEL )) == NULL ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*card)...) over kzalloc(sizeof( struct gemtek_pci_card )...)
#585: FILE: drivers/media/radio/radio-gemtek-pci.c:320:
+	if ( (card = kzalloc( sizeof( struct gemtek_pci_card ), GFP_KERNEL )) == NULL ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#602: FILE: drivers/media/video/adv7170.c:416:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*encoder)...) over kzalloc(sizeof(struct adv7170)...)
#614: FILE: drivers/media/video/adv7170.c:436:
+	encoder = kzalloc(sizeof(struct adv7170), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#632: FILE: drivers/media/video/adv7175.c:466:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*encoder)...) over kzalloc(sizeof(struct adv7175)...)
#644: FILE: drivers/media/video/adv7175.c:486:
+	encoder = kzalloc(sizeof(struct adv7175), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#662: FILE: drivers/media/video/bt819.c:531:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*decoder)...) over kzalloc(sizeof(struct bt819)...)
#672: FILE: drivers/media/video/bt819.c:539:
+	decoder = kzalloc(sizeof(struct bt819), GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#691: FILE: drivers/media/video/bt832.c:169:
+	if (NULL == (t = kzalloc(sizeof(*t), GFP_KERNEL)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#706: FILE: drivers/media/video/bt856.c:319:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*encoder)...) over kzalloc(sizeof(struct bt856)...)
#717: FILE: drivers/media/video/bt856.c:328:
+	encoder = kzalloc(sizeof(struct bt856), GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#735: FILE: drivers/media/video/bttv-gpio.c:67:
+	sub = kzalloc(sizeof(*sub),GFP_KERNEL);
 	                          ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*cam)...) over kzalloc(sizeof(struct pp_cam_entry)...)
#751: FILE: drivers/media/video/cpia_pp.c:709:
+	cam = kzalloc(sizeof(struct pp_cam_entry), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#789: FILE: drivers/media/video/cs53l32a.c:149:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#806: FILE: drivers/media/video/cx25840/cx25840-core.c:768:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*state)...) over kzalloc(sizeof(struct cx25840_state)...)
#819: FILE: drivers/media/video/cx25840/cx25840-core.c:796:
+	state = kzalloc(sizeof(struct cx25840_state), GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#839: FILE: drivers/media/video/cx88/cx88-blackbird.c:1542:
+	fh = kzalloc(sizeof(*fh),GFP_KERNEL);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#851: FILE: drivers/media/video/cx88/cx88-blackbird.c:1680:
+	dev = kzalloc(sizeof(*dev),GFP_KERNEL);
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#867: FILE: drivers/media/video/cx88/cx88-core.c:1107:
+	core = kzalloc(sizeof(*core),GFP_KERNEL);
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#884: FILE: drivers/media/video/cx88/cx88-dvb.c:465:
+	dev = kzalloc(sizeof(*dev),GFP_KERNEL);
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#900: FILE: drivers/media/video/cx88/cx88-video.c:751:
+	fh = kzalloc(sizeof(*fh),GFP_KERNEL);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#912: FILE: drivers/media/video/cx88/cx88-video.c:1815:
+	dev = kzalloc(sizeof(*dev),GFP_KERNEL);
 	                          ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dpc)...) over kzalloc(sizeof(struct dpc)...)
#928: FILE: drivers/media/video/dpc7146.c:97:
+	dpc = kzalloc(sizeof(struct dpc), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*hexium)...) over kzalloc(sizeof(struct hexium)...)
#964: FILE: drivers/media/video/hexium_gemini.c:243:
+	hexium = kzalloc(sizeof(struct hexium), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*hexium)...) over kzalloc(sizeof(struct hexium)...)
#982: FILE: drivers/media/video/hexium_orion.c:227:
+	hexium = kzalloc(sizeof(struct hexium), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#1000: FILE: drivers/media/video/indycam.c:292:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*camera)...) over kzalloc(sizeof(struct indycam)...)
#1004: FILE: drivers/media/video/indycam.c:295:
+	camera = kzalloc(sizeof(struct indycam), GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1025: FILE: drivers/media/video/msp3400.c:1602:
+	if (NULL == (msp = kzalloc(sizeof(struct msp3400c),GFP_KERNEL))) {
 	                                                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1025: FILE: drivers/media/video/msp3400.c:1602:
+	if (NULL == (msp = kzalloc(sizeof(struct msp3400c),GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*msp)...) over kzalloc(sizeof(struct msp3400c)...)
#1025: FILE: drivers/media/video/msp3400.c:1602:
+	if (NULL == (msp = kzalloc(sizeof(struct msp3400c),GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*mxb)...) over kzalloc(sizeof(struct mxb)...)
#1043: FILE: drivers/media/video/mxb.c:179:
+	mxb = kzalloc(sizeof(struct mxb), GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1061: FILE: drivers/media/video/ovcamchip/ov6x20.c:181:
+	ov->spriv = s = kzalloc(sizeof *s, GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SIZEOF_PARENTHESIS: sizeof *s should be sizeof(*s)
#1061: FILE: drivers/media/video/ovcamchip/ov6x20.c:181:
+	ov->spriv = s = kzalloc(sizeof *s, GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1077: FILE: drivers/media/video/ovcamchip/ov6x30.c:144:
+	ov->spriv = s = kzalloc(sizeof *s, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *s should be sizeof(*s)
#1077: FILE: drivers/media/video/ovcamchip/ov6x30.c:144:
+	ov->spriv = s = kzalloc(sizeof *s, GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1093: FILE: drivers/media/video/ovcamchip/ov76be.c:108:
+	ov->spriv = s = kzalloc(sizeof *s, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *s should be sizeof(*s)
#1093: FILE: drivers/media/video/ovcamchip/ov76be.c:108:
+	ov->spriv = s = kzalloc(sizeof *s, GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1109: FILE: drivers/media/video/ovcamchip/ov7x10.c:118:
+	ov->spriv = s = kzalloc(sizeof *s, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *s should be sizeof(*s)
#1109: FILE: drivers/media/video/ovcamchip/ov7x10.c:118:
+	ov->spriv = s = kzalloc(sizeof *s, GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1125: FILE: drivers/media/video/ovcamchip/ov7x20.c:235:
+	ov->spriv = s = kzalloc(sizeof *s, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *s should be sizeof(*s)
#1125: FILE: drivers/media/video/ovcamchip/ov7x20.c:235:
+	ov->spriv = s = kzalloc(sizeof *s, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *ov should be sizeof(*ov)
#1141: FILE: drivers/media/video/ovcamchip/ovcamchip_core.c:319:
+	ov = kzalloc(sizeof *ov, GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*vd)...) over kmalloc(sizeof(struct video_device)...)
#1193: FILE: drivers/media/video/saa5249.c:167:
+	vd = kmalloc(sizeof(struct video_device), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#1206: FILE: drivers/media/video/saa7110.c:497:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*decoder)...) over kzalloc(sizeof(struct saa7110)...)
#1217: FILE: drivers/media/video/saa7110.c:506:
+	decoder = kzalloc(sizeof(struct saa7110), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#1235: FILE: drivers/media/video/saa7111.c:514:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*decoder)...) over kzalloc(sizeof(struct saa7111)...)
#1246: FILE: drivers/media/video/saa7111.c:523:
+	decoder = kzalloc(sizeof(struct saa7111), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#1264: FILE: drivers/media/video/saa7114.c:855:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*decoder)...) over kzalloc(sizeof(struct saa7114)...)
#1275: FILE: drivers/media/video/saa7114.c:864:
+	decoder = kzalloc(sizeof(struct saa7114), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#1293: FILE: drivers/media/video/saa7115.c:1266:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*state)...) over kzalloc(sizeof(struct saa7115_state)...)
#1305: FILE: drivers/media/video/saa7115.c:1289:
+	state = kzalloc(sizeof(struct saa7115_state), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#1324: FILE: drivers/media/video/saa711x.c:490:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*decoder)...) over kzalloc(sizeof(struct saa711x)...)
#1334: FILE: drivers/media/video/saa711x.c:498:
+	decoder = kzalloc(sizeof(struct saa711x), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#1352: FILE: drivers/media/video/saa7127.c:714:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*state)...) over kzalloc(sizeof(struct saa7127_state)...)
#1365: FILE: drivers/media/video/saa7127.c:737:
+	state = kzalloc(sizeof(struct saa7127_state), GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1386: FILE: drivers/media/video/saa7134/saa6752hs.c:514:
+	if (NULL == (h = kzalloc(sizeof(*h), GFP_KERNEL)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1401: FILE: drivers/media/video/saa7134/saa7134-core.c:843:
+	dev = kzalloc(sizeof(*dev),GFP_KERNEL);
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1417: FILE: drivers/media/video/saa7134/saa7134-video.c:1266:
+	fh = kzalloc(sizeof(*fh),GFP_KERNEL);
 	                        ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#1433: FILE: drivers/media/video/saa7185.c:411:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*encoder)...) over kzalloc(sizeof(struct saa7185)...)
#1444: FILE: drivers/media/video/saa7185.c:420:
+	encoder = kzalloc(sizeof(struct saa7185), GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1487: FILE: drivers/media/video/stradis.c:2138:
+	if ((saa->dmavid2 = kzalloc(VIDEO_CLIPMAP_SIZE, GFP_KERNEL)) == NULL) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1508: FILE: drivers/media/video/tda7432.c:306:
+	t = kzalloc(sizeof *t,GFP_KERNEL);
 	                     ^

WARNING:SIZEOF_PARENTHESIS: sizeof *t should be sizeof(*t)
#1508: FILE: drivers/media/video/tda7432.c:306:
+	t = kzalloc(sizeof *t,GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1524: FILE: drivers/media/video/tda9875.c:235:
+	t = kzalloc(sizeof *t,GFP_KERNEL);
 	                     ^

WARNING:SIZEOF_PARENTHESIS: sizeof *t should be sizeof(*t)
#1524: FILE: drivers/media/video/tda9875.c:235:
+	t = kzalloc(sizeof *t,GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1540: FILE: drivers/media/video/tda9887.c:622:
+	if (NULL == (t = kzalloc(sizeof(*t), GFP_KERNEL)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#1555: FILE: drivers/media/video/tea6420.c:102:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*t)...) over kzalloc(sizeof(struct tuner)...)
#1572: FILE: drivers/media/video/tuner-core.c:345:
+	t = kzalloc(sizeof(struct tuner), GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1588: FILE: drivers/media/video/tvaudio.c:1483:
+	chip = kzalloc(sizeof(*chip),GFP_KERNEL);
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1605: FILE: drivers/media/video/tveeprom.c:723:
+		buf = kzalloc(256,GFP_KERNEL);
 		                 ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#1614: FILE: drivers/media/video/tveeprom.c:746:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*core)...) over kzalloc(sizeof(struct tvp5150)...)
#1630: FILE: drivers/media/video/tvp5150.c:747:
+	core = kzalloc(sizeof(struct tvp5150), GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1648: FILE: drivers/media/video/v4l1-compat.c:308:
+		cap2 = kzalloc(sizeof(*cap2),GFP_KERNEL);
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1659: FILE: drivers/media/video/v4l1-compat.c:424:
+		fmt2 = kzalloc(sizeof(*fmt2),GFP_KERNEL);
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1671: FILE: drivers/media/video/v4l1-compat.c:462:
+		fmt2 = kzalloc(sizeof(*fmt2),GFP_KERNEL);
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1681: FILE: drivers/media/video/v4l1-compat.c:595:
+		fmt2 = kzalloc(sizeof(*fmt2),GFP_KERNEL);
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1691: FILE: drivers/media/video/v4l1-compat.c:621:
+		fmt2 = kzalloc(sizeof(*fmt2),GFP_KERNEL);
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1700: FILE: drivers/media/video/v4l1-compat.c:844:
+		fmt2 = kzalloc(sizeof(*fmt2),GFP_KERNEL);
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1712: FILE: drivers/media/video/v4l1-compat.c:939:
+		fmt2 = kzalloc(sizeof(*fmt2),GFP_KERNEL);
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1722: FILE: drivers/media/video/v4l1-compat.c:962:
+		fmt2 = kzalloc(sizeof(*fmt2),GFP_KERNEL);
 		                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1735: FILE: drivers/media/video/video-buf.c:55:
+	sglist = kzalloc(sizeof(struct scatterlist)*nr_pages, GFP_KERNEL);
 	                                           ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sglist)...) over kzalloc(sizeof(struct scatterlist)...)
#1735: FILE: drivers/media/video/video-buf.c:55:
+	sglist = kzalloc(sizeof(struct scatterlist)*nr_pages, GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#1735: FILE: drivers/media/video/video-buf.c:55:
+	sglist = kzalloc(sizeof(struct scatterlist)*nr_pages, GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#1747: FILE: drivers/media/video/video-buf.c:82:
+	sglist = kzalloc(sizeof(*sglist) * nr_pages, GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1759: FILE: drivers/media/video/video-buf.c:285:
+	vb = kzalloc(size,GFP_KERNEL);
 	                 ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ptr)...) over kzalloc(sizeof(struct attached_list)...)
#1776: FILE: drivers/media/video/videocodec.c:127:
+				ptr = kzalloc(sizeof(struct attached_list), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ptr)...) over kzalloc(sizeof(struct codec_list)...)
#1795: FILE: drivers/media/video/videocodec.c:248:
+	ptr = kzalloc(sizeof(struct codec_list), GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1816: FILE: drivers/media/video/videodev.c:55:
+	vfd = kzalloc(sizeof(*vfd),GFP_KERNEL);
 	                          ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*vino_drvdata)...) over kzalloc(sizeof(struct vino_settings)...)
#1830: FILE: drivers/media/video/vino.c:4502:
+	vino_drvdata = kzalloc(sizeof(struct vino_settings), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#1848: FILE: drivers/media/video/vpx3220.c:624:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*decoder)...) over kzalloc(sizeof(struct vpx3220)...)
#1863: FILE: drivers/media/video/vpx3220.c:677:
+	decoder = kzalloc(sizeof(struct vpx3220), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#1881: FILE: drivers/media/video/wm8775.c:163:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fh)...) over kzalloc(sizeof(struct zoran_fh)...)
#1919: FILE: drivers/media/video/zoran_driver.c:1348:
+	fh = kzalloc(sizeof(struct zoran_fh), GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1940: FILE: drivers/media/video/zr36016.c:454:
+	codec->data = ptr = kzalloc(sizeof(struct zr36016), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ptr)...) over kzalloc(sizeof(struct zr36016)...)
#1940: FILE: drivers/media/video/zr36016.c:454:
+	codec->data = ptr = kzalloc(sizeof(struct zr36016), GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1958: FILE: drivers/media/video/zr36050.c:816:
+	codec->data = ptr = kzalloc(sizeof(struct zr36050), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ptr)...) over kzalloc(sizeof(struct zr36050)...)
#1958: FILE: drivers/media/video/zr36050.c:816:
+	codec->data = ptr = kzalloc(sizeof(struct zr36050), GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1976: FILE: drivers/media/video/zr36060.c:922:
+	codec->data = ptr = kzalloc(sizeof(struct zr36060), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ptr)...) over kzalloc(sizeof(struct zr36060)...)
#1976: FILE: drivers/media/video/zr36060.c:922:
+	codec->data = ptr = kzalloc(sizeof(struct zr36060), GFP_KERNEL);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000119740.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 45 errors, 14 warnings, 85 checks, 1420 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000119740.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
