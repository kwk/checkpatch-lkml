WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
ldt-{i386,x86_64}.h is made of two different parts - some code for parsing of

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#64: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#69: FILE: include/asm-um/host_ldt-i386.h:1:
+#ifndef __ASM_HOST_LDT_I386_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'info' - possible side-effects?
#77: FILE: include/asm-um/host_ldt-i386.h:9:
+#define LDT_entry_a(info) \
+	((((info)->base_addr & 0x0000ffff) << 16) | ((info)->limit & 0x0ffff))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'info' - possible side-effects?
#80: FILE: include/asm-um/host_ldt-i386.h:12:
+#define LDT_entry_b(info) \
+	(((info)->base_addr & 0xff000000) | \
+	(((info)->base_addr & 0x00ff0000) >> 16) | \
+	((info)->limit & 0xf0000) | \
+	(((info)->read_exec_only ^ 1) << 9) | \
+	((info)->contents << 10) | \
+	(((info)->seg_not_present ^ 1) << 15) | \
+	((info)->seg_32bit << 22) | \
+	((info)->limit_in_pages << 23) | \
+	((info)->useable << 20) | \
+	0x7000)

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#89: FILE: include/asm-um/host_ldt-i386.h:21:
+	((info)->useable << 20) | \
 	         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'info' - possible side-effects?
#92: FILE: include/asm-um/host_ldt-i386.h:24:
+#define LDT_empty(info) (\
+	(info)->base_addr	== 0	&& \
+	(info)->limit		== 0	&& \
+	(info)->contents	== 0	&& \
+	(info)->read_exec_only	== 1	&& \
+	(info)->seg_32bit	== 0	&& \
+	(info)->limit_in_pages	== 0	&& \
+	(info)->seg_not_present	== 1	&& \
+	(info)->useable		== 0	)

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#100: FILE: include/asm-um/host_ldt-i386.h:32:
+	(info)->useable		== 0	)
 	        ^^^^^^^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#100: FILE: include/asm-um/host_ldt-i386.h:32:
+	(info)->useable		== 0	)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#109: FILE: include/asm-um/host_ldt-x86_64.h:1:
+#ifndef __ASM_HOST_LDT_X86_64_H

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'info' - possible side-effects?
#117: FILE: include/asm-um/host_ldt-x86_64.h:9:
+#define LDT_entry_a(info) \
+	((((info)->base_addr & 0x0000ffff) << 16) | ((info)->limit & 0x0ffff))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#121: FILE: include/asm-um/host_ldt-x86_64.h:13:
+ * 64bit system calls require __USER_CS. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'info' - possible side-effects?
#122: FILE: include/asm-um/host_ldt-x86_64.h:14:
+#define LDT_entry_b(info) \
+	(((info)->base_addr & 0xff000000) | \
+	(((info)->base_addr & 0x00ff0000) >> 16) | \
+	((info)->limit & 0xf0000) | \
+	(((info)->read_exec_only ^ 1) << 9) | \
+	((info)->contents << 10) | \
+	(((info)->seg_not_present ^ 1) << 15) | \
+	((info)->seg_32bit << 22) | \
+	((info)->limit_in_pages << 23) | \
+	((info)->useable << 20) | \
+	/* ((info)->lm << 21) | */ \
+	0x7000)

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#131: FILE: include/asm-um/host_ldt-x86_64.h:23:
+	((info)->useable << 20) | \
 	         ^^^^^^^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'info' - possible side-effects?
#135: FILE: include/asm-um/host_ldt-x86_64.h:27:
+#define LDT_empty(info) (\
+	(info)->base_addr	== 0	&& \
+	(info)->limit		== 0	&& \
+	(info)->contents	== 0	&& \
+	(info)->read_exec_only	== 1	&& \
+	(info)->seg_32bit	== 0	&& \
+	(info)->limit_in_pages	== 0	&& \
+	(info)->seg_not_present	== 1	&& \
+	(info)->useable		== 0	&& \
+	(info)->lm              == 0)

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#143: FILE: include/asm-um/host_ldt-x86_64.h:35:
+	(info)->useable		== 0	&& \
 	        ^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#307: FILE: include/asm-um/ldt.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#321: FILE: include/asm-um/ldt.h:15:
+extern void ldt_host_info(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#322: FILE: include/asm-um/ldt.h:16:
+extern long init_new_ldt(struct mmu_context_skas * to_mm,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#322: FILE: include/asm-um/ldt.h:16:
+extern long init_new_ldt(struct mmu_context_skas * to_mm,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#323: FILE: include/asm-um/ldt.h:17:
+			 struct mmu_context_skas * from_mm);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#324: FILE: include/asm-um/ldt.h:18:
+extern void free_ldt(struct mmu_context_skas * mm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#324: FILE: include/asm-um/ldt.h:18:
+extern void free_ldt(struct mmu_context_skas * mm);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#327: FILE: include/asm-um/ldt.h:21:
+	((LDT_ENTRIES * LDT_ENTRY_SIZE)/PAGE_SIZE)
 	                               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#329: FILE: include/asm-um/ldt.h:23:
+	(PAGE_SIZE/LDT_ENTRY_SIZE)
 	          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#331: FILE: include/asm-um/ldt.h:25:
+	((LDT_PAGES_MAX*sizeof(void *))/LDT_ENTRY_SIZE)
 	               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#331: FILE: include/asm-um/ldt.h:25:
+	((LDT_PAGES_MAX*sizeof(void *))/LDT_ENTRY_SIZE)
 	                               ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#338: FILE: include/asm-um/ldt.h:32:
+typedef struct uml_ldt {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#342: FILE: include/asm-um/ldt.h:36:
+		struct ldt_entry * pages[LDT_PAGES_MAX];

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000089628.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 11 warnings, 13 checks, 121 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000089628.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
