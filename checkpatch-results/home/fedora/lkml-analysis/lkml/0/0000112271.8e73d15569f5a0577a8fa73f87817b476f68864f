CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#32: 
Signed-off-by: David Härdeman <david@2gen.com>
                      ^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#44: FILE: security/Kconfig:24:
+config KEYS_DSA_KEYS
+	tristate "Support DSA keys (EXPERIMENTAL)"
+	depends on KEYS && EXPERIMENTAL
+	select CRYPTO_MPILIB
+	select CRYPTO_DSA
+	help
+	  This option provides support for retaining DSA keys in the kernel.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#70: FILE: security/keys/dsa_key.c:1:
+/* dsa_key.c: DSA key

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#72: FILE: security/keys/dsa_key.c:3:
+ * Copyright (C) 2005 David Härdeman (david@2gen.com). All Rights Reserved.
                              ^

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#86: FILE: security/keys/dsa_key.c:17:
+#include <asm/uaccess.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: security/keys/dsa_key.c:31:
+static long dsa_read(const struct key *key, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: security/keys/dsa_key.c:53:
+sign(const struct key_payload_dsa *skey, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: security/keys/dsa_key.c:54:
+     const void *data, size_t datalen, unsigned int *rlen)$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sign', this function's name, in a string
#132: FILE: security/keys/dsa_key.c:63:
+	dprintk("dsa: entering sign\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#145: FILE: security/keys/dsa_key.c:76:
+		printk("dsa: crypto_digest_setkey failed with error %i\n", i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: security/keys/dsa_key.c:118:
+static int dsa_create_payload(struct key_payload_dsa **payload, struct key *key, $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsa_create_payload', this function's name, in a string
#194: FILE: security/keys/dsa_key.c:125:
+	dprintk("dsa: entering dsa_create_payload\n");

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*payload)...) over kmalloc(sizeof(struct key_payload_dsa)...)
#201: FILE: security/keys/dsa_key.c:132:
+	*payload = kmalloc(sizeof(struct key_payload_dsa), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#210: FILE: security/keys/dsa_key.c:141:
+	remain = read = (unsigned int)datalen;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required before the open parenthesis '('
#229: FILE: security/keys/dsa_key.c:160:
+	if(check_secret_key(*payload)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#236: FILE: security/keys/dsa_key.c:167:
+	printk("dsa: attempt to add invalid key\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsa_instantiate', this function's name, in a string
#255: FILE: security/keys/dsa_key.c:186:
+	dprintk("dsa: entering dsa_instantiate\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsa_update', this function's name, in a string
#273: FILE: security/keys/dsa_key.c:204:
+	dprintk("dsa: entering dsa_update\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: security/keys/dsa_key.c:213:
+^I$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsa_destroy', this function's name, in a string
#296: FILE: security/keys/dsa_key.c:227:
+	dprintk("dsa: entering dsa_destroy\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#313: FILE: security/keys/dsa_key.c:244:
+	unsigned nbytes[DSA_PUBLIC_PARTS];

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#314: FILE: security/keys/dsa_key.c:245:
+	unsigned nbits[DSA_PUBLIC_PARTS];

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsa_read', this function's name, in a string
#321: FILE: security/keys/dsa_key.c:252:
+	dprintk("dsa: entering dsa_read\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: security/keys/dsa_key.c:293:
+^I$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsa_read', this function's name, in a string
#369: FILE: security/keys/dsa_key.c:300:
+	dprintk("dsa: leving dsa_read\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#379: FILE: security/keys/dsa_key.c:310:
+static long dsa_encrypt(const struct key *key,
+		     char __user *data, size_t dlen,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsa_encrypt', this function's name, in a string
#387: FILE: security/keys/dsa_key.c:318:
+	dprintk("dsa: entering dsa_encrypt\n");

ERROR:SPACING: space required before the open parenthesis '('
#405: FILE: security/keys/dsa_key.c:336:
+	if(copy_to_user(result, signature, min(rlen, siglen)) == 0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#423: FILE: security/keys/dsa_key.c:354:
+		printk("dsa_key: failed to register key type\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#425: FILE: security/keys/dsa_key.c:356:
+		printk("dsa_key: new key type registered\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#430: FILE: security/keys/dsa_key.c:361:
+static void __exit dsa_exit (void)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#432: FILE: security/keys/dsa_key.c:363:
+	printk("dsa_key: unregistering key type\n");

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#439: FILE: security/keys/dsa_key.c:370:
+MODULE_AUTHOR("David Härdeman");
                       ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000112271.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 20 warnings, 6 checks, 391 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000112271.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
