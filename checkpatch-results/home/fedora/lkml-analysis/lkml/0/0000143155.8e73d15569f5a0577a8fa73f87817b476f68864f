WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1:
+/************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#43: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2:
+/************************************************************************
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#60: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:19:
+  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#61: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:20:
+  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307$

WARNING:TYPO_SPELLING: 'round-robbin' may be misspelled - perhaps 'round-robin'?
#79: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:38:
+  puts the message in the next 16 byte space in round-robbin fashion,
                                                 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#135: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:94:
+#define DEFAULT_TIMEOUT (30*HZ)
                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#142: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:101:
+#define DMA_BUFFER_INIT_LEN (PAGE_SIZE*16)
                                       ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#150: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:109:
+static int ibmvscsis_debug = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#153: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:112:
+		if (ibmvscsis_debug) printk(KERN_WARNING __FILE__ ": " \

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#153: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:112:
+		if (ibmvscsis_debug) printk(KERN_WARNING __FILE__ ": " \

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#154: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:113:
+					    format , ## arg);\
 					           ^

ERROR:SPACING: space required before the open parenthesis '('
#155: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:114:
+	} while(0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#156: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:115:
+#define err(format, arg...) printk(KERN_ERR "ibmvscsis: " format , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#156: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:115:
+#define err(format, arg...) printk(KERN_ERR "ibmvscsis: " format , ## arg)
                                                                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#157: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:116:
+#define info(format, arg...) printk(KERN_INFO "ibmvscsis: " format  , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#157: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:116:
+#define info(format, arg...) printk(KERN_INFO "ibmvscsis: " format  , ## arg)
                                                                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#158: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:117:
+#define warn(format, arg...) printk(KERN_WARNING "ibmvscsis: " format , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#158: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:117:
+#define warn(format, arg...) printk(KERN_WARNING "ibmvscsis: " format , ## arg)
                                                                       ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#171: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:130:
+#define ATTR(_type, _name, _mode)      \
+	struct attribute vscsi_##_type##_##_name##_attr = {		  \
+	.name = __stringify(_name), .mode = _mode, .owner = THIS_MODULE \
+	};

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#183: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:142:
+#define h_reg_crq(ua, tok, sz)\
+			plpar_hcall_norets(H_REG_CRQ, ua, tok, sz);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#185: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:144:
+#define h_free_crq(ua) \
+			plpar_hcall_norets(H_FREE_CRQ, ua);

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#231: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:190:
+	spinlock_t lock;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#268: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:227:
+		struct scsi_request* sreq;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#282: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:241:
+	spinlock_t lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#347: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:306:
+	spinlock_t lock;

CHECK:SPACING: No space is necessary after a cast
#408: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:367:
+	return ((u64) result) << 48;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#414: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:373:
+static u8 getcontrolbyte(u8 * cdb)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#435: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:394:
+^I^Ireturn sizeof(struct indirect_descriptor) + $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#436: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:395:
+^I^I    ((cmd->data_out_count - $

CHECK:BRACES: braces {} should be used on all arms of this statement
#455: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:414:
+	if (out)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#457: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:416:
+	else {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#499: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:458:
+	cmd->data_in_count = cmd->data_out_count = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#509: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:468:
+	u16 *lun = (u16 *) & iue->iu->srp.cmd.lun;

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#509: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:468:
+	u16 *lun = (u16 *) & iue->iu->srp.cmd.lun;
 	                   ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iue->adapter->vbus[bus]"
#529: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:488:
+	if (iue->adapter->vbus[bus] == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vd == NULL'
#534: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:493:
+	if ((vd == NULL) || (vd->disabled)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vd->disabled'
#534: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:493:
+	if ((vd == NULL) || (vd->disabled)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vd"
#534: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:493:
+	if ((vd == NULL) || (vd->disabled)) {

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#567: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:526:
+	pool->list = kmalloc(pool->size * sizeof(*pool->list), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#576: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:535:
+	    dma_alloc_coherent(adapter->dev,
+				  pool->size * sizeof(*pool->iu_storage),

WARNING:LINE_SPACING: Missing a blank line after declarations
#602: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:561:
+	int i, in_use = 0;
+	for (i = 0; i < pool->size; ++i)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'syncronized' may be misspelled - perhaps 'synchronized'?
#616: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:575:
+ * routine is syncronized by the adapter lock.  The routine sets all the
               ^^^^^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#625: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:584:
+	if (!list_empty(&adapter->pool.iu_entries)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#636: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:595:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#659: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:618:
+	if (!test_bit(V_IN_USE, &iue->req.flags))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#661: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:620:
+	else {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#671: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:630:
+static int split_iu(struct iu_entry* iue)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*child1)...) over kmalloc(sizeof(struct iu_entry)...)
#696: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:655:
+	child1 = kmalloc(sizeof(struct iu_entry) + sizeof(union viosrp_iu),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!child1"
#698: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:657:
+	if (child1 == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*child2)...) over kmalloc(sizeof(struct iu_entry)...)
#701: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:660:
+	child2 = kmalloc(sizeof(struct iu_entry) + sizeof(union viosrp_iu),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!child2"
#703: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:662:
+	if (child2 == NULL) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#708: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:667:
+	child1->iu = (union viosrp_iu *)((char*)child1 + sizeof(*child1));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#709: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:668:
+	child2->iu = (union viosrp_iu *)((char*)child2 + sizeof(*child2));

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#710: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:669:
+	child1->adapter = child2->adapter = iue->adapter;

WARNING:LINE_SPACING: Missing a blank line after declarations
#729: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:688:
+		int npages = (md->length - 1) / PAGE_SIZE + 1;
+		ch1_md->length = ((npages + 1) / 2) * PAGE_SIZE;

WARNING:TYPO_SPELLING: 'splitted' may be misspelled - perhaps 'split'?
#735: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:694:
+		goto splitted;
 		     ^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#740: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:699:
+	child_id = (struct indirect_descriptor *) (child_cmd->additional_data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#756: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:715:
+		if (!child1i && (length >= iue->req.len / 2 ||
+		    i >= count - 2)) {

WARNING:TYPO_SPELLING: 'splitted' may be misspelled - perhaps 'split'?
#765: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:724:
+splitted:
 ^^^^^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#778: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:737:
+	child1->req.rw = child2->req.rw = iue->req.rw;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#786: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:745:
+	child1->req.parent = child2->req.parent = iue;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#787: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:746:
+	child1->req.vd = child2->req.vd = iue->req.vd;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!adapter->dma_buffer[i].addr"
#809: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:768:
+		if (adapter->dma_buffer[i].addr == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#811: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:770:
+^I^I^I    dma_alloc_coherent(adapter->dev, $

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'adapter->dma_buffer[i].token'
#814: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:773:
+					       &adapter->dma_buffer[i].
+					       token,

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#825: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:784:
+static void get_data_buffer(char **buffer, dma_addr_t * data_token, size_t len,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter->dma_buffer[i].addr'
#831: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:790:
+		if ((adapter->dma_buffer[i].addr) &&
+		    (adapter->dma_buffer[i].len >= len) &&
+		    (!test_and_set_bit(i, adapter->dma_buffer_use))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter->dma_buffer[i].len >= len'
#831: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:790:
+		if ((adapter->dma_buffer[i].addr) &&
+		    (adapter->dma_buffer[i].len >= len) &&
+		    (!test_and_set_bit(i, adapter->dma_buffer_use))) {

WARNING:RETURN_VOID: void function return statements are not generally useful
#844: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:803:
+	return;
+}

CHECK:BRACES: braces {} should be used on all arms of this statement
#868: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:827:
+			if (adapter->dma_buffer[i].addr == NULL) {
[...]
+			} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!adapter->dma_buffer[i].addr"
#868: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:827:
+			if (adapter->dma_buffer[i].addr == NULL) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#875: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:834:
+				return;
+			} else

CHECK:BRACES: Unbalanced braces around else statement
#875: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:834:
+			} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#883: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:842:
+			if (adapter->dma_buffer[i].len < len) {
[...]
+			} else
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#888: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:847:
+^I^I^I^I$

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#897: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:856:
+				return;
+			} else

CHECK:BRACES: Unbalanced braces around else statement
#897: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:856:
+			} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "adapter->dma_buffer[i].addr"
#916: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:875:
+		if (adapter->dma_buffer[i].addr != NULL) {

WARNING:RETURN_VOID: void function return statements are not generally useful
#931: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:890:
+	return;
+}

CHECK:BRACES: braces {} should be used on all arms of this statement
#947: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:906:
+	if (crq->valid & 0x80) {
[...]
+	else
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#951: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:910:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_md_data', this function's name, in a string
#1023: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:982:
+		err("send_md_data: Error %ld transferring data to client\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1024: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:983:
+		err("send_md_data: Error %ld transferring data to client\n",
+			rc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1034: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:993:
+static int send_md_list(int num_entries, int tosendlen,
+		dma_addr_t stoken,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1048: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1007:
+		bytes = send_md_data(stoken + sentlen, thislen,
+				md + i, iue->adapter);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1102: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1061:
+	if (num_md == cmd->data_in_count)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1105: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1064:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1106: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1065:
+^I^Iext_list = dma_alloc_coherent(iue->adapter->dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1117: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1076:
+		rc = h_copy_rdma(id->head.length,
+				iue->adapter->riobn,

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1131: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1090:
+	if (sentlen < 0 )

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1143: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1102:
+		dma_free_coherent(iue->adapter->dev,
+			id->head.length, ext_list, data_token);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_md_data', this function's name, in a string
#1169: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1128:
+		err("get_md_data: Error %ld transferring data from client\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1170: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1129:
+		err("get_md_data: Error %ld transferring data from client\n",
+			rc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1178: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1137:
+static int get_md_list(int num_entries, int togetlen,
+			dma_addr_t stoken,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1191: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1150:
+^I^Ibytes = get_md_data(stoken + gotlen, thislen, md + i, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1198: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1157:
+			err("Partial data got from client (%d/%d)\n",
+				bytes, thislen);

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1227: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1186:
+		return 0;
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1232: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1191:
+		return get_md_data(stoken, len, md, iue->adapter);
+		break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1250: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1209:
+		gotlen = get_md_list(num_md, len,
+				stoken, &id->list[0], iue);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1256: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1215:
+^Iext_list = dma_alloc_coherent(iue->adapter->dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1267: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1226:
+	rc = h_copy_rdma(id->head.length,
+			iue->adapter->riobn,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1280: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1239:
+	gotlen = get_md_list(num_md, len,
+				stoken, ext_list, iue);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1284: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1243:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1305: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1264:
+		struct iu_entry *parent = iue->req.parent;
+		if (parent->req.child[0] == iue)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1319: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1278:
+^I^I^I^Isend_rsp(parent, parent->req.child_status, $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'status == NO_SENSE'
#1330: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1289:
+	if (test_bit(V_LINKED, &iue->req.flags) && (status == NO_SENSE))

CHECK:BRACES: braces {} should be used on all arms of this statement
#1416: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1375:
+	if (bytes != iue->req.data_len) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1420: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1379:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1453: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1412:
+	if (adapter->bio_donetail) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1456: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1415:
+	} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1457: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1416:
+		adapter->bio_done = adapter->bio_donetail = bio;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1526: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1485:
+^Iid = dma_alloc_coherent(iue->adapter->dev, sizeof(*id), &data_token, $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!id"
#1529: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1488:
+	if (id == NULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iue->iu->srp.cmd.cdb[1] == 0x00'
#1541: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1500:
+		if ((iue->iu->srp.cmd.cdb[1] == 0x00) &&
+		    (iue->iu->srp.cmd.cdb[2] == 0x00)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iue->iu->srp.cmd.cdb[2] == 0x00'
#1541: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1500:
+		if ((iue->iu->srp.cmd.cdb[1] == 0x00) &&
+		    (iue->iu->srp.cmd.cdb[2] == 0x00)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1563: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1522:
+			snprintf(id->unique,sizeof(id->unique),
 			                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1586: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1545:
+			snprintf((char *)(raw_id+4),
 			                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1587: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1546:
+				 sizeof(*id)-4,
 				            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1595: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1554:
+			raw_id[3] = strlen((char *)raw_id+4);
 			                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1634: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1593:
+static int process_rw(char *cmd, int rw, struct iu_entry *iue, long lba,
+		       long len)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1643: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1602:
+	dbg("%s lba %ld, len %ld\n",cmd,lba,len);
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1643: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1602:
+	dbg("%s lba %ld, len %ld\n",cmd,lba,len);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1643: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1602:
+	dbg("%s lba %ld, len %ld\n",cmd,lba,len);
 	                                   ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1645: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1604:
+	if (rw == WRITE)
[...]
+	else if (rw == READ)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1649: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1608:
+	else {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rw == WRITE'
#1662: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1621:
+	if ((rw == WRITE) && (iue->req.vd->b.ro)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iue->req.vd->b.ro'
#1662: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1621:
+	if ((rw == WRITE) && (iue->req.vd->b.ro)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buffer"
#1680: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1639:
+	if (buffer == NULL || dma_mapping_error(iue->req.data_token)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1704: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1663:
+			free_data_buffer(buffer, iue->req.data_token, len,
+				iue->adapter);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1717: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1676:
+		free_data_buffer(buffer, iue->req.data_token, len,
+			iue->adapter);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1726: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1685:
+		free_data_buffer(buffer, iue->req.data_token, len,
+			iue->adapter);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1742: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1701:
+^Iif (bdev_get_queue(bio->bi_bdev)->ordered != QUEUE_ORDERED_NONE $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1743: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1702:
+	if (bdev_get_queue(bio->bi_bdev)->ordered != QUEUE_ORDERED_NONE 
+	    && test_bit(V_BARRIER, &iue->req.flags))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1746: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1705:
+
+

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1759: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1718:
+		    (unsigned long)buffer & (PAGE_SIZE-1);
 		                                      ^

CHECK:SPACING: No space is necessary after a cast
#1774: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1733:
+	long lba = (*((u32 *) (iue->iu->srp.cmd.cdb))) & 0x001FFFFF;

CHECK:SPACING: No space is necessary after a cast
#1791: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1750:
+	long lba = *((u32 *) (iue->iu->srp.cmd.cdb + 2));

CHECK:SPACING: No space is necessary after a cast
#1793: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1752:
+	    *((u16 *) (iue->iu->srp.cmd.cdb + 7)) * iue->req.vd->b.sectsize;

CHECK:SPACING: No space is necessary after a cast
#1800: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1759:
+	long lba = *((u32 *) (iue->iu->srp.cmd.cdb + 2));

CHECK:SPACING: No space is necessary after a cast
#1802: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1761:
+	    *((u32 *) (iue->iu->srp.cmd.cdb + 6)) * iue->req.vd->b.sectsize;

CHECK:SPACING: No space is necessary after a cast
#1809: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1768:
+	long lba = (*((u32 *) (iue->iu->srp.cmd.cdb))) & 0x001FFFFF;

CHECK:SPACING: No space is necessary after a cast
#1823: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1782:
+	long lba = *((u32 *) (iue->iu->srp.cmd.cdb + 2));

CHECK:SPACING: No space is necessary after a cast
#1825: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1784:
+	    *((u16 *) (iue->iu->srp.cmd.cdb + 7)) * iue->req.vd->b.sectsize;

CHECK:SPACING: No space is necessary after a cast
#1832: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1791:
+	long lba = *((u32 *) (iue->iu->srp.cmd.cdb + 2));

CHECK:SPACING: No space is necessary after a cast
#1834: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1793:
+	    *((u32 *) (iue->iu->srp.cmd.cdb + 6)) * iue->req.vd->b.sectsize;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1852: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1811:
+^Icap = dma_alloc_coherent(iue->adapter->dev, sizeof(*cap), &data_token, $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cap"
#1855: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1814:
+	if (cap == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1862: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1821:
+^Icap->blocks = $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1870: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1829:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mode"
#1905: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1864:
+	if (mode == NULL) {

CHECK:SPACING: No space is necessary after a cast
#1922: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1881:
+		*((u32 *) & mode[4]) =

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#1922: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1881:
+		*((u32 *) & mode[4]) =
 		          ^

CHECK:SPACING: No space is necessary after a cast
#1926: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1885:
+		*((u32 *) & mode[8]) = iue->req.vd->b.sectsize;

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#1926: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1885:
+		*((u32 *) & mode[8]) = iue->req.vd->b.sectsize;
 		          ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1927: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1886:
+		bytes = mode[0] = 12;	/* length */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1933: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1892:
+		if (iue->iu->srp.cmd.cdb[4] != 4
+		    && iue->iu->srp.cmd.cdb[4] != 0x20) {

CHECK:SPACING: No space is necessary after a cast
#1949: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1908:
+		*((u32 *) & mode[4]) =

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#1949: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1908:
+		*((u32 *) & mode[4]) =
 		          ^

CHECK:SPACING: No space is necessary after a cast
#1952: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1911:
+		*((u32 *) & mode[8]) = iue->req.vd->b.sectsize;

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#1952: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1911:
+		*((u32 *) & mode[8]) = iue->req.vd->b.sectsize;
 		          ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1959: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1918:
+		bytes = mode[0] = 12 + mode[13];	/* length */

CHECK:CAMELCASE: Avoid CamelCase: <process_reportLUNs>
#1992: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1951:
+static int process_reportLUNs(struct iu_entry *iue)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lunlist"
#2005: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1964:
+	if (lunlist == NULL) {

CHECK:SPACING: No space is necessary after a cast
#2024: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1983:
+		*lunlist = ((u64) 1 * 8) << 32;

CHECK:SPACING: No space is necessary after a cast
#2029: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:1988:
+	*lunlist = (((u64) ((iue->adapter->nvdevs + 1) * 8)) << 32);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'index < listsize'
#2042: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2001:
+			if ((index < listsize) &&
+			    (!iue->adapter->vbus[bus]->
+			     vdev[target]->disabled)) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'iue->adapter->vbus[bus]->vdev[target]->disabled'
#2044: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2003:
+			    (!iue->adapter->vbus[bus]->
+			     vdev[target]->disabled)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2050: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2009:
+^I^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2051: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2010:
+			
+		}

WARNING:INDENTED_LABEL: labels should not be indented
#2054: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2013:
+      send_lunlist:

CHECK:BRACES: braces {} should be used on all arms of this statement
#2071: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2030:
+	if (bytes != (index * 8)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2075: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2034:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#2104: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2063:
+	if (len) {
[...]
+	} else
[...]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2107: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2066:
+			err("Unable to get data buffer of len %d\n",len);
 			                                           ^

CHECK:BRACES: Unbalanced braces around else statement
#2122: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2081:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2132: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2091:
+^Ierr = blk_execute_rq(q, iue->req.vd->b.bdev->bd_disk, rq, $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'err == 0'
#2135: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2094:
+	if ((err == 0) && (rw == READ) && (len)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rw == READ'
#2135: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2094:
+	if ((err == 0) && (rw == READ) && (len)) {

WARNING:SPLIT_STRING: quoted string split across lines
#2141: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2100:
+			err("Error sending data "
+			    "on response "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#2142: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2101:
+			    "on response "
+			    "(tried %ld, sent %d\n",

CHECK:SPACING: spaces preferred around that '<<' (ctx:ExV)
#2166: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2125:
+		<<9);
 		^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2221: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2180:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#2221: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2180:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2232: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2191:
+			if ((iu->srp.cmd.cdb[5] & 0x03) == 0x02) {
[...]
+			} else if ((iu->srp.cmd.cdb[4] & 0x03) == 0x03) {
[...]
+			} else
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iue->req.vd'
#2234: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2193:
+				if ((iue->req.vd) &&
+				    ioctl_by_bdev(iue->req.vd->b.bdev,
+						  CDROMEJECT, 0) == 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iue->req.vd'
#2242: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2201:
+				if ((iue->req.vd) &&
+				    ioctl_by_bdev(iue->req.vd->b.bdev,
+						  CDROMCLOSETRAY, 0) == 0)

CHECK:BRACES: Unbalanced braces around else statement
#2248: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2207:
+			} else

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2271: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2230:
+		dbg("unknown command 0x%2.2x\n`",iu->srp.cmd.cdb[0]);
 		                                ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#2281: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2240:
+		if (!test_bit(V_ABORTED, &iue->req.flags))
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2283: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2242:
+		else {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2301: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2260:
+	struct iu_entry *iue = (struct iu_entry*)cmd->sc_request->

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'cmd->sc_request->upper_private_data'
#2302: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2261:
+	struct iu_entry *iue = (struct iu_entry*)cmd->sc_request->
+				upper_private_data;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'scsi_cmd_done', this function's name, in a string
#2307: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2266:
+	dbg("scsi_cmd_done got cmd %p iue %p\n", cmd, iue);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'scsi_cmd_done', this function's name, in a string
#2314: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2273:
+		dbg("scsi_cmd_done: aborted tag %16.16x\n", cmd->tag);

ERROR:SPACING: space required before the open parenthesis '('
#2321: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2280:
+	if(!test_bit(V_WRITE, &iue->req.flags)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2323: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2282:
+		bytes = send_cmd_data(iue->req.data_token,
+					  iue->req.data_len, iue);

ERROR:SPACING: space required before the open parenthesis '('
#2324: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2283:
+		if(bytes != iue->req.data_len) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!req"
#2368: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2327:
+	if (req == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2423: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2382:
+^Ireq->sr_request->flags = $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2425: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2384:
+	req->upper_private_data = (void*)iue;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2436: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2395:
+
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2460: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2419:
+^Iiu->srp.login_rsp.supported_buffer_formats = 0x0006; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2461: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2420:
+^Iiu->srp.login_rsp.multi_channel_result = 0x00; $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iue->req.vd == NULL'
#2548: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2507:
+	if ((iue->req.vd == NULL) &&
+	    (iu->srp.cmd.cdb[0] != REPORT_LUNS) &&
+	    (iu->srp.cmd.cdb[0] != INQUIRY)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iu->srp.cmd.cdb[0] != REPORT_LUNS'
#2548: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2507:
+	if ((iue->req.vd == NULL) &&
+	    (iu->srp.cmd.cdb[0] != REPORT_LUNS) &&
+	    (iu->srp.cmd.cdb[0] != INQUIRY)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iu->srp.cmd.cdb[0] != INQUIRY'
#2548: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2507:
+	if ((iue->req.vd == NULL) &&
+	    (iu->srp.cmd.cdb[0] != REPORT_LUNS) &&
+	    (iu->srp.cmd.cdb[0] != INQUIRY)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iue->req.vd"
#2548: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2507:
+	if ((iue->req.vd == NULL) &&

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2584: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2543:
+^Istruct mad_adapter_info_data *info = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2585: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2544:
+^I    dma_alloc_coherent(iue->adapter->dev, sizeof(*info), &data_token, $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_adapter_info', this function's name, in a string
#2588: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2547:
+	dbg("in send_adapter_info\n ");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "info"
#2589: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2548:
+	if (info != NULL) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2626: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2585:
+			err("Error sending adapter info rc %d\n",rc);
 			                                        ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2635: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2594:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#2645: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2604:
+	unsigned long flags;
+	spin_lock_irqsave(&adapter->lock, flags);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2664: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2623:
+			int rc;
+			__set_bit(V_FLYING, &curr_iue->req.flags);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2671: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2630:
+			/* if the iue is not in any list, we're racing with
+			   endio, so we lost the cmd_queue */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2671: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2630:
+			   endio, so we lost the cmd_queue */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2686: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2645:
+					/* this means that the request finished
+					before process_cmd() returned, so we

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2687: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2646:
+					lost a handle of the cmd_queue list */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2704: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2663:
+				/* if a barrier fails, we don't want anything
+				new to go through, retry when new cmd arrives

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2705: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2664:
+				or when workqueue runs */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iue"
#2730: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2689:
+	if (iue == NULL) {

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#2736: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2695:
+	iue->req.timeout= crq->timeout ? crq->timeout*HZ : DEFAULT_TIMEOUT;
 	                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2736: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2695:
+	iue->req.timeout= crq->timeout ? crq->timeout*HZ : DEFAULT_TIMEOUT;
 	                                             ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'process_iu', this function's name, in a string
#2745: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2704:
+		err("process_iu: Error %ld transferring data from client\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2746: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2705:
+		err("process_iu: Error %ld transferring data from client\n",
+			rc);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'iu->mad.adapter_info.common.length'
#2765: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2724:
+					      iu->mad.adapter_info.common.
+					      length);

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#2802: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2761:
+			return;
+			break;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2889: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2848:
+
+}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2901: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2860:
+	while (!done) {
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2910: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2869:
+		if ((crq = crq_queue_next_crq(&adapter->queue)) != NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2910: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2869:
+		if ((crq = crq_queue_next_crq(&adapter->queue)) != NULL) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2914: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2873:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2962: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2921:
+^I * try freeing and re-registering $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#2964: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2923:
+	if (rc == H_Resource) {
+	    do {

WARNING:TABSTOP: Statements should start on a tabstop
#2965: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2924:
+	    do {

WARNING:TABSTOP: Statements should start on a tabstop
#2967: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2926:
+	    } while ((rc == H_Busy) || (H_isLongBusy(rc)));

CHECK:CAMELCASE: Avoid CamelCase: <H_isLongBusy>
#2967: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2926:
+	    } while ((rc == H_Busy) || (H_isLongBusy(rc)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rc != H_Success'
#2972: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2931:
+	if ((rc != H_Success) && (rc != 2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rc != 2'
#2972: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2931:
+	if ((rc != H_Success) && (rc != 2)) {

WARNING:INDENTED_LABEL: labels should not be indented
#2991: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2950:
+      req_irq_failed:

WARNING:INDENTED_LABEL: labels should not be indented
#2996: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2955:
+      reg_crq_failed:

WARNING:INDENTED_LABEL: labels should not be indented
#2999: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2958:
+      map_failed:

WARNING:INDENTED_LABEL: labels should not be indented
#3001: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2960:
+      malloc_failed:

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#3040: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2999:
+		return PTR_ERR(bdev);;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3046: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3005:
+		/* if the block device is a known scsi_device and
+		   device is not a partition */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3046: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3005:
+		   device is not a partition */

CHECK:BRACES: braces {} should be used on all arms of this statement
#3073: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3032:
+	if (bdev->bd_disk->flags & GENHD_FL_REMOVABLE) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3076: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3035:
+	} else

WARNING:BRACES: braces {} are not necessary for single statement blocks
#3108: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3067:
+	while (atomic_read(&vdev->refcount)) {
+		msleep(REFCOUNT_TIMEOUT_MS);
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3126: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3085:
+	struct scsi_dev_node * sdevnode =

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'add_scsi_device', this function's name, in a string
#3130: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3089:
+	dbg("add_scsi_device got %p, %d:%d:%d:%d, sdn=%p\n", sdev,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rem_scsi_device', this function's name, in a string
#3162: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3121:
+	warn("rem_scsi_device: Couldn't find scsi_device %p %d:%d:%d:%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3163: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3122:
+	warn("rem_scsi_device: Couldn't find scsi_device %p %d:%d:%d:%d\n",
+		sdev, sdev->host->host_no, sdev->channel, sdev->id, sdev->lun);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!dma_window'
#3194: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3153:
+	if ((!dma_window) || (dma_window_property_size != 40)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dma_window_property_size != 40'
#3194: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3153:
+	if ((!dma_window) || (dma_window_property_size != 40)) {

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxV)
#3249: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3208:
+				if (vdev && !vdev ->disabled)
 				                  ^

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#3272: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3231:
+static struct vio_device_id ibmvscsis_device_table[] __devinitdata = {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3274: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3233:
+	{"",""}
 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3301: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3260:
+			snprintf(system_id,sizeof(system_id),
 			                  ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#3316: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3275:
+	info("initialized version "IBMVSCSIS_VERSION"\n");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000143155.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 61 errors, 59 warnings, 141 checks, 3301 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000143155.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
