CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#54: FILE: fs/freevxfs/vxfs_extern.h:75:
+extern void			vxfs_put_page(struct page *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#54: FILE: fs/freevxfs/vxfs_extern.h:75:
+extern void			vxfs_put_page(struct page *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:INLINE: plain inline is preferred over __inline__
#64: FILE: fs/freevxfs/vxfs_subr.c:53:
+__inline__ void

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#109: FILE: include/linux/reiserfs_fs.h:1774:
+extern void copy_item_head(struct item_head * p_v_to,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#109: FILE: include/linux/reiserfs_fs.h:1774:
+extern void copy_item_head(struct item_head * p_v_to,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: include/linux/reiserfs_fs.h:1775:
+extern void copy_item_head(struct item_head * p_v_to,
 								  const struct item_head * p_v_from);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#114: FILE: include/linux/reiserfs_fs.h:1778:
+extern int comp_keys (const struct key * le_key,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#114: FILE: include/linux/reiserfs_fs.h:1778:
+extern int comp_keys (const struct key * le_key,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#114: FILE: include/linux/reiserfs_fs.h:1778:
+extern int comp_keys (const struct key * le_key,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: include/linux/reiserfs_fs.h:1779:
+extern int comp_keys (const struct key * le_key,
 			     const struct cpu_key * cpu_key);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#117: FILE: include/linux/reiserfs_fs.h:1780:
+extern int  comp_short_keys (const struct key * le_key,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#117: FILE: include/linux/reiserfs_fs.h:1780:
+extern int  comp_short_keys (const struct key * le_key,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#117: FILE: include/linux/reiserfs_fs.h:1780:
+extern int  comp_short_keys (const struct key * le_key,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: include/linux/reiserfs_fs.h:1781:
+extern int  comp_short_keys (const struct key * le_key,
 				    const struct cpu_key * cpu_key);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#120: FILE: include/linux/reiserfs_fs.h:1782:
+extern void le_key2cpu_key (struct cpu_key * to, const struct key * from);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#120: FILE: include/linux/reiserfs_fs.h:1782:
+extern void le_key2cpu_key (struct cpu_key * to, const struct key * from);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#120: FILE: include/linux/reiserfs_fs.h:1782:
+extern void le_key2cpu_key (struct cpu_key * to, const struct key * from);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#120: FILE: include/linux/reiserfs_fs.h:1782:
+extern void le_key2cpu_key (struct cpu_key * to, const struct key * from);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#125: FILE: include/linux/reiserfs_fs.h:1785:
+extern  int comp_cpu_keys (const struct cpu_key *, const struct cpu_key *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#125: FILE: include/linux/reiserfs_fs.h:1785:
+extern  int comp_cpu_keys (const struct cpu_key *, const struct cpu_key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct cpu_key *' should also have an identifier name
#125: FILE: include/linux/reiserfs_fs.h:1785:
+extern  int comp_cpu_keys (const struct cpu_key *, const struct cpu_key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct cpu_key *' should also have an identifier name
#125: FILE: include/linux/reiserfs_fs.h:1785:
+extern  int comp_cpu_keys (const struct cpu_key *, const struct cpu_key *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#126: FILE: include/linux/reiserfs_fs.h:1786:
+extern int comp_short_cpu_keys (const struct cpu_key *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: include/linux/reiserfs_fs.h:1786:
+extern int comp_short_cpu_keys (const struct cpu_key *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct cpu_key *' should also have an identifier name
#126: FILE: include/linux/reiserfs_fs.h:1786:
+extern int comp_short_cpu_keys (const struct cpu_key *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct cpu_key *' should also have an identifier name
#126: FILE: include/linux/reiserfs_fs.h:1786:
+extern int comp_short_cpu_keys (const struct cpu_key *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: include/linux/reiserfs_fs.h:1787:
+extern int comp_short_cpu_keys (const struct cpu_key *,
 				       const struct cpu_key *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#129: FILE: include/linux/reiserfs_fs.h:1788:
+extern void cpu_key2cpu_key (struct cpu_key *, const struct cpu_key *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#129: FILE: include/linux/reiserfs_fs.h:1788:
+extern void cpu_key2cpu_key (struct cpu_key *, const struct cpu_key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cpu_key *' should also have an identifier name
#129: FILE: include/linux/reiserfs_fs.h:1788:
+extern void cpu_key2cpu_key (struct cpu_key *, const struct cpu_key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct cpu_key *' should also have an identifier name
#129: FILE: include/linux/reiserfs_fs.h:1788:
+extern void cpu_key2cpu_key (struct cpu_key *, const struct cpu_key *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#134: FILE: include/linux/reiserfs_fs.h:1791:
+extern int comp_le_keys (const struct key *, const struct key *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#134: FILE: include/linux/reiserfs_fs.h:1791:
+extern int comp_le_keys (const struct key *, const struct key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct key *' should also have an identifier name
#134: FILE: include/linux/reiserfs_fs.h:1791:
+extern int comp_le_keys (const struct key *, const struct key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct key *' should also have an identifier name
#134: FILE: include/linux/reiserfs_fs.h:1791:
+extern int comp_le_keys (const struct key *, const struct key *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#135: FILE: include/linux/reiserfs_fs.h:1792:
+extern int comp_short_le_keys (const struct key *, const struct key *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#135: FILE: include/linux/reiserfs_fs.h:1792:
+extern int comp_short_le_keys (const struct key *, const struct key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct key *' should also have an identifier name
#135: FILE: include/linux/reiserfs_fs.h:1792:
+extern int comp_short_le_keys (const struct key *, const struct key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct key *' should also have an identifier name
#135: FILE: include/linux/reiserfs_fs.h:1792:
+extern int comp_short_le_keys (const struct key *, const struct key *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#144: FILE: include/linux/reiserfs_fs.h:1827:
+extern void decrement_bcount (struct buffer_head * p_s_bh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#144: FILE: include/linux/reiserfs_fs.h:1827:
+extern void decrement_bcount (struct buffer_head * p_s_bh);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#144: FILE: include/linux/reiserfs_fs.h:1827:
+extern void decrement_bcount (struct buffer_head * p_s_bh);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: include/linux/reiserfs_fs.h:1905:
+void set_de_name_and_namelen (struct reiserfs_dir_entry * de);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: include/linux/reiserfs_fs.h:1905:
+void set_de_name_and_namelen (struct reiserfs_dir_entry * de);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#162: FILE: include/linux/reiserfs_fs.h:2053:
+void do_balance_mark_leaf_dirty (struct tree_balance * tb,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#162: FILE: include/linux/reiserfs_fs.h:2053:
+void do_balance_mark_leaf_dirty (struct tree_balance * tb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: include/linux/reiserfs_fs.h:2054:
+void do_balance_mark_leaf_dirty (struct tree_balance * tb,
 					struct buffer_head * bh, int flag);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257712.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 23 warnings, 16 checks, 99 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257712.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
