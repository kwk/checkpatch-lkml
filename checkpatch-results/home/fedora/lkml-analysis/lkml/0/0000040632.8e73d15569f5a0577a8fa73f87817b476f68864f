WARNING:REPEATED_WORD: Possible repeated word: 'describe'
#62: FILE: fs/proc/base.c:1681:
+ * that properly belong to the /proc filesystem, as they describe
+ * describe something that is process related.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#65: FILE: fs/proc/base.c:1684:
+^INOD(PROC_TGID_INO, ^I"self", S_IFLNK|S_IRWXUGO,$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#65: FILE: fs/proc/base.c:1684:
+	NOD(PROC_TGID_INO, 	"self", S_IFLNK|S_IRWXUGO,
 	                   	               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#65: FILE: fs/proc/base.c:1684:
+	NOD(PROC_TGID_INO, 	"self", S_IFLNK|S_IRWXUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#66: FILE: fs/proc/base.c:1685:
+	NOD(PROC_TGID_INO, 	"self", S_IFLNK|S_IRWXUGO,
+		&proc_self_inode_operations, NULL, {}),

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#75: FILE: fs/proc/base.c:1694:
+static int proc_base_revalidate(struct dentry *dentry, struct nameidata *nd)
                                                                          ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#79: FILE: fs/proc/base.c:1698:
+	struct task_struct *task = get_proc_task(inode);
+	if (task) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#87: FILE: fs/proc/base.c:1706:
+static struct dentry_operations proc_base_dentry_operations =

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#88: FILE: fs/proc/base.c:1707:
+static struct dentry_operations proc_base_dentry_operations =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#125: FILE: fs/proc/base.c:1744:
+	inode->i_mtime = inode->i_atime = inode->i_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#155: FILE: fs/proc/base.c:1774:
+	iput(inode);
 	^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#204: FILE: fs/proc/base.c:2017:
+		struct pid_entry *p = &proc_base_stuff[nr];
+		if (filldir(dirent, p->name, p->len, filp->f_pos,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000040632.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 8 warnings, 3 checks, 153 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000040632.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
