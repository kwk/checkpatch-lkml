WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
same slow down) with -o barrier, which is surprising because reiserfs skips 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: fs/reiserfs/super.c:340:
+    s->u.reiserfs_sb.s_mount_opt &= ~(1 << REISERFS_BARRIER) ;$

WARNING:SPACING: space prohibited before semicolon
#64: FILE: fs/reiserfs/super.c:340:
+    s->u.reiserfs_sb.s_mount_opt &= ~(1 << REISERFS_BARRIER) ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#72: FILE: fs/reiserfs/super.c:443:
+	} else if (!strcmp (this_char, "barrier")) {
+	    set_bit (REISERFS_BARRIER, mount_options);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#72: FILE: fs/reiserfs/super.c:443:
+	} else if (!strcmp (this_char, "barrier")) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#73: FILE: fs/reiserfs/super.c:444:
+	    set_bit (REISERFS_BARRIER, mount_options);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#74: FILE: fs/reiserfs/super.c:445:
+	    printk("reiserfs: enabling write barrier code\n") ;

WARNING:SPACING: space prohibited before semicolon
#74: FILE: fs/reiserfs/super.c:445:
+	    printk("reiserfs: enabling write barrier code\n") ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: fs/reiserfs/journal.c:117:
+   if (!reiserfs_barrier(s))$

WARNING:SPACING: space prohibited before semicolon
#88: FILE: fs/reiserfs/journal.c:118:
+	wait_on_buffer(bh) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: fs/reiserfs/journal.c:120:
+    return 0 ;$

WARNING:SPACING: space prohibited before semicolon
#90: FILE: fs/reiserfs/journal.c:120:
+    return 0 ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: fs/reiserfs/journal.c:125:
+    if (reiserfs_barrier(s))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: fs/reiserfs/journal.c:131:
+    clear_bit(BH_Ordered, &bh->b_state) ;$

WARNING:SPACING: space prohibited before semicolon
#101: FILE: fs/reiserfs/journal.c:131:
+    clear_bit(BH_Ordered, &bh->b_state) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: fs/reiserfs/journal.c:132:
+    if (test_and_clear_bit(BH_IO_OPNOTSUPP, &bh->b_state)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: fs/reiserfs/journal.c:133:
+        printk(KERN_INFO "clm-2200: barrier write rejected on device %s "$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: fs/reiserfs/journal.c:133:
+        printk(KERN_INFO "clm-2200: barrier write rejected on device %s "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#103: FILE: fs/reiserfs/journal.c:133:
+        printk(KERN_INFO "clm-2200: barrier write rejected on device %s "

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: fs/reiserfs/journal.c:134:
+^I                  "turning off barrier writes\n", kdevname(bh->b_dev));$

WARNING:SPLIT_STRING: quoted string split across lines
#104: FILE: fs/reiserfs/journal.c:134:
+        printk(KERN_INFO "clm-2200: barrier write rejected on device %s "
+	                  "turning off barrier writes\n", kdevname(bh->b_dev));

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: fs/reiserfs/journal.c:135:
+        $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: fs/reiserfs/journal.c:135:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: fs/reiserfs/journal.c:135:
+        $

WARNING:SPACING: space prohibited before semicolon
#106: FILE: fs/reiserfs/journal.c:136:
+	s->u.reiserfs_sb.s_mount_opt &= ~(1 << REISERFS_BARRIER) ;

WARNING:SPACING: space prohibited before semicolon
#107: FILE: fs/reiserfs/journal.c:137:
+	ll_rw_block(WRITE, 1, &bh) ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: fs/reiserfs/journal.c:138:
+        return 1 ; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: fs/reiserfs/journal.c:138:
+        return 1 ; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: fs/reiserfs/journal.c:138:
+        return 1 ; $

WARNING:SPACING: space prohibited before semicolon
#108: FILE: fs/reiserfs/journal.c:138:
+        return 1 ; 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: fs/reiserfs/journal.c:139:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: fs/reiserfs/journal.c:140:
+    return 0 ;$

WARNING:SPACING: space prohibited before semicolon
#110: FILE: fs/reiserfs/journal.c:140:
+    return 0 ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: fs/reiserfs/journal.c:747:
+      barrier_wait_on_buffer(s, tbh) ;$

WARNING:SPACING: space prohibited before semicolon
#121: FILE: fs/reiserfs/journal.c:747:
+      barrier_wait_on_buffer(s, tbh) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: fs/reiserfs/journal.c:767:
+  mark_barrier(s, jl->j_commit_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: fs/reiserfs/journal.c:770:
+  check_barrier(s, jl->j_commit_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: fs/reiserfs/journal.c:771:
+  barrier_wait_on_buffer(s, jl->j_commit_bh) ;$

WARNING:SPACING: space prohibited before semicolon
#134: FILE: fs/reiserfs/journal.c:771:
+  barrier_wait_on_buffer(s, jl->j_commit_bh) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: fs/reiserfs/journal.c:864:
+    mark_barrier(p_s_sb, SB_JOURNAL(p_s_sb)->j_header_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: fs/reiserfs/journal.c:866:
+    check_barrier(p_s_sb, SB_JOURNAL(p_s_sb)->j_header_bh);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: fs/reiserfs/journal.c:867:
+    barrier_wait_on_buffer(p_s_sb, (SB_JOURNAL(p_s_sb)->j_header_bh)) ; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: fs/reiserfs/journal.c:867:
+    barrier_wait_on_buffer(p_s_sb, (SB_JOURNAL(p_s_sb)->j_header_bh)) ; $

WARNING:SPACING: space prohibited before semicolon
#146: FILE: fs/reiserfs/journal.c:867:
+    barrier_wait_on_buffer(p_s_sb, (SB_JOURNAL(p_s_sb)->j_header_bh)) ; 

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#147: FILE: fs/reiserfs/journal.c:868:
     if (!buffer_uptodate(SB_JOURNAL(p_s_sb)->j_header_bh)) {
+      printk( "reiserfs: journal-837: IO error during journal update\n" );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: fs/reiserfs/journal.c:869:
+      printk( "reiserfs: journal-837: IO error during journal update\n" );$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#149: FILE: fs/reiserfs/journal.c:869:
+      printk( "reiserfs: journal-837: IO error during journal update\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#149: FILE: fs/reiserfs/journal.c:869:
+      printk( "reiserfs: journal-837: IO error during journal update\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#149: FILE: fs/reiserfs/journal.c:869:
+      printk( "reiserfs: journal-837: IO error during journal update\n" );

WARNING:SPACING: space prohibited before semicolon
#158: FILE: fs/reiserfs/journal.c:1088:
+	barrier_wait_on_buffer(s, cn->bh) ;

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: fs/reiserfs/journal.c:1194:
+                barrier_wait_on_buffer(s, cn->bh) ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: fs/reiserfs/journal.c:1194:
+                barrier_wait_on_buffer(s, cn->bh) ;$

WARNING:SPACING: space prohibited before semicolon
#167: FILE: fs/reiserfs/journal.c:1194:
+                barrier_wait_on_buffer(s, cn->bh) ;

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#211: FILE: drivers/ide/ide.c:564:
+	flush_rq->buffer[0] = (drive->id->cfs_enable_2 & 0x2400) ? WIN_FLUSH_CACHE_EXT : WIN_FLUSH_CACHE;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'finsh' may be misspelled - perhaps 'finish'?
#233: FILE: drivers/ide/ide.c:602:
+		 * allowing new requests to finsh and before signalling
 		                            ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#265: FILE: drivers/ide/ide.c:928:
+		if (rq->cmd_flags & RQ_WRITE_POSTFLUSH)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#267: FILE: drivers/ide/ide.c:930:
+		else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#368: FILE: drivers/block/ll_rw_blk.c:270:
+        q->ordered = flag;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: drivers/block/ll_rw_blk.c:270:
+        q->ordered = flag;$

WARNING:SPACING: space prohibited before semicolon
#384: FILE: drivers/block/ll_rw_blk.c:663:
+	int write_ordered ;

WARNING:SPACING: space prohibited before semicolon
#390: FILE: drivers/block/ll_rw_blk.c:669:
+		set_bit(BH_IO_OPNOTSUPP, &bh->b_state) ;

WARNING:SPACING: space prohibited before semicolon
#391: FILE: drivers/block/ll_rw_blk.c:670:
+		goto end_io ;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#398: FILE: drivers/block/ll_rw_blk.c:676:
+	latency = rw_ahead = 0;	/* normal case; gets changed below for READA */

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#415: FILE: drivers/block/ll_rw_blk.c:800:
+	if (write_ordered) {
+		req->cmd_flags |= RQ_WRITE_ORDERED;
+	}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: drivers/scsi/hosts.c:241:
+    retval->can_order = tpnt->can_order;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: drivers/scsi/hosts.h:297:
+    unsigned can_order:1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: drivers/scsi/hosts.h:426:
+    unsigned int can_order:1;$

CHECK:CAMELCASE: Avoid CamelCase: <SHpnt>
#471: FILE: drivers/scsi/scsi.c:191:
+	if (SHpnt->can_order)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <SDpnt>
#472: FILE: drivers/scsi/scsi.c:192:
+		blk_queue_ordered(&SDpnt->request_queue, QUEUE_ORDERED_TAG);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#483: FILE: drivers/scsi/aic7xxx/aic7xxx_linux.c:1641:
+		if (cmd->request.cmd_flags & RQ_WRITE_ORDERED) {
+			hscb->control |= MSG_ORDERED_Q_TAG;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#537: FILE: include/linux/reiserfs_fs_sb.h:455:
+#define REISERFS_TEST4 15 $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#565: FILE: include/linux/fs.h:284:
+#define buffer_ordered(bh)	__buffer_state(bh,Ordered)
                           	                 ^

CHECK:CAMELCASE: Avoid CamelCase: <Ordered>
#565: FILE: include/linux/fs.h:284:
+#define buffer_ordered(bh)	__buffer_state(bh,Ordered)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#629: FILE: include/linux/blkdev.h:177:
+extern void blk_queue_ordered(request_queue_t *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#629: FILE: include/linux/blkdev.h:177:
+extern void blk_queue_ordered(request_queue_t *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#629: FILE: include/linux/blkdev.h:177:
+extern void blk_queue_ordered(request_queue_t *, int);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: include/linux/reiserfs_fs.h:1475:
+    BH_JDirty = BH_PrivateStart,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#643: FILE: include/linux/reiserfs_fs.h:1476:
+    /* is in a previous (perhaps uncommitted) transaction, waiting for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#644: FILE: include/linux/reiserfs_fs.h:1477:
+    ** flush to disk $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#644: FILE: include/linux/reiserfs_fs.h:1477:
+    /* is in a previous (perhaps uncommitted) transaction, waiting for 
+    ** flush to disk 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: include/linux/reiserfs_fs.h:1479:
+    BH_JDirty_wait,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: include/linux/reiserfs_fs.h:1481:
+    BH_JNew,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: include/linux/reiserfs_fs.h:1483:
+    BH_JPrepared,$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#652: FILE: include/linux/reiserfs_fs.h:1485:
+    /* dirty when prepared, if it doesn't get logged the dirty bit
+    ** must be restored

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#654: FILE: include/linux/reiserfs_fs.h:1487:
+    BH_JRestore_Dirty,$

WARNING:SPACING: space prohibited before semicolon
#655: FILE: include/linux/reiserfs_fs.h:1488:
+} ;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000476932.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 64 warnings, 7 checks, 518 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000476932.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
