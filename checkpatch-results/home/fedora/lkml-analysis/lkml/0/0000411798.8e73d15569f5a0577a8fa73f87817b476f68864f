WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#90: 
diff -u -r --new-file module-init-tools-0.8/Makefile.in module-init-tools-0.9.ajr/Makefile.in

ERROR:CODE_INDENT: code indent should use tabs where possible
#577: FILE: modprobe.c:110:
+^I  ^Iint ch = fgetc(file);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#577: FILE: modprobe.c:110:
+^I  ^Iint ch = fgetc(file);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#602: FILE: modprobe.c:124:
+	char *buf = NOFAIL(malloc(size));
+	for(;;) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#602: FILE: modprobe.c:124:
+	for(;;) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#604: FILE: modprobe.c:126:
+		int ch = fgetc_wrapped(file);
+		if (i == size) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#616: FILE: modprobe.c:136:
+			return NOFAIL(realloc(buf, i+1));
 			                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#658: FILE: modprobe.c:147:
+	struct module *mod;
+	for (mod = modules; mod; mod = mod->next) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ptr"
#702: FILE: modprobe.c:174:
+	if (ptr == NULL || line[0] == '#')

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#737: FILE: modprobe.c:186:
+	for(;;) {

ERROR:SPACING: space required before the open parenthesis '('
#821: FILE: modprobe.c:217:
+	while((line = getline_wrapped(modules_dep)) != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#842: FILE: modprobe.c:244:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!proc_modules"
#844: FILE: modprobe.c:246:
+	if (proc_modules == NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#886: FILE: modprobe.c:282:
+		fprintf (stderr, "FATAL: recursive dependency loop:\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "modlist"
#891: FILE: modprobe.c:287:
+		} while (modlist != NULL);

ERROR:SPACING: space required before the open parenthesis '('
#899: FILE: modprobe.c:293:
+	for(dep = mod->dependencies; dep != NULL; dep = dep->next)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dep"
#899: FILE: modprobe.c:293:
+	for(dep = mod->dependencies; dep != NULL; dep = dep->next)

WARNING:TYPO_SPELLING: 'piont' may be misspelled - perhaps 'point'?
#902: FILE: modprobe.c:296:
+	/* If we fail to load after this piont, we abort the whole program. */
 	                                 ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cmd"
#1146: FILE: modprobe.c:359:
+		if (cmd == NULL)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1222: FILE: modprobe.c:372:
 		}
+		else if (strcmp(cmd, "include") == 0) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!modname"
#1278: FILE: modprobe.c:445:
+	if (modname == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!start"
#1282: FILE: modprobe.c:449:
+	if (start == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1283: FILE: modprobe.c:450:
+		fprintf (stderr, "Module %s not found.\n", modname);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1330: FILE: insmod.c:75:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1348: FILE: insmod.c:112:
+		char *ext;
+		modname = strrchr(filename, '/');

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1358: FILE: insmod.c:122:
+^I^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1475: FILE: kernel/module.c:852:
+	symindex = strindex = exindex = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1510: FILE: kernel/module.c:909:
+	strncpy_from_user(mod->name, modname, sizeof(mod->name)-1);
 	                                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1512: FILE: kernel/module.c:911:
+	mod->name[sizeof(mod->name)-1] = 0;
 	                           ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000411798.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 9 warnings, 11 checks, 1065 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000411798.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
