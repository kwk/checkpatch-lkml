WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#87: FILE: fs/ecryptfs/ecryptfs_kernel.h:40:
+ * how to behave. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#122: FILE: fs/ecryptfs/ecryptfs_kernel.h:125:
+} __attribute__ ((packed));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around info->cache
#185: FILE: fs/ecryptfs/main.c:615:
+		if (*(info->cache))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->cache'
#185: FILE: fs/ecryptfs/main.c:615:
+		if (*(info->cache))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around info->cache
#186: FILE: fs/ecryptfs/main.c:616:
+			kmem_cache_destroy(*(info->cache));

WARNING:SPACING: missing space after return type
#214: FILE: fs/ecryptfs/main.c:654:
+	ssize_t(*show) (struct ecryptfs_obj *, char *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#214: FILE: fs/ecryptfs/main.c:654:
+	ssize_t(*show) (struct ecryptfs_obj *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ecryptfs_obj *' should also have an identifier name
#214: FILE: fs/ecryptfs/main.c:654:
+	ssize_t(*show) (struct ecryptfs_obj *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#214: FILE: fs/ecryptfs/main.c:654:
+	ssize_t(*show) (struct ecryptfs_obj *, char *);

WARNING:SPACING: missing space after return type
#215: FILE: fs/ecryptfs/main.c:655:
+	ssize_t(*store) (struct ecryptfs_obj *, const char *, size_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#215: FILE: fs/ecryptfs/main.c:655:
+	ssize_t(*store) (struct ecryptfs_obj *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ecryptfs_obj *' should also have an identifier name
#215: FILE: fs/ecryptfs/main.c:655:
+	ssize_t(*store) (struct ecryptfs_obj *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#215: FILE: fs/ecryptfs/main.c:655:
+	ssize_t(*store) (struct ecryptfs_obj *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#215: FILE: fs/ecryptfs/main.c:655:
+	ssize_t(*store) (struct ecryptfs_obj *, const char *, size_t);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#227: FILE: fs/ecryptfs/main.c:667:
+	return (attribute->store ? attribute->store(obj, buf, len) : 0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#238: FILE: fs/ecryptfs/main.c:678:
+	return (attribute->show ? attribute->show(obj, buf) : 0);

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#241: FILE: fs/ecryptfs/main.c:681:
+static struct sysfs_ops ecryptfs_sysfs_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#307: FILE: fs/ecryptfs/main.c:742:
+	if ((rc = subsystem_register(&ecryptfs_subsys))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#308: FILE: fs/ecryptfs/main.c:743:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#315: FILE: fs/ecryptfs/main.c:750:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#323: FILE: fs/ecryptfs/main.c:758:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#345: FILE: fs/ecryptfs/main.c:785:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#352: FILE: fs/ecryptfs/main.c:791:
+		printk(KERN_ERR "Failed to register filesystem\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#361: FILE: fs/ecryptfs/main.c:800:
+		printk(KERN_ERR "sysfs registration failed\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000038754.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 18 warnings, 3 checks, 306 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000038754.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
