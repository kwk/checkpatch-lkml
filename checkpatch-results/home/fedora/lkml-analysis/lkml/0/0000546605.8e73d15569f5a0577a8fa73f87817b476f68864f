WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#75: FILE: execute_cmd.c:3040:
+extract_hash_bang_interpreter (char *command, char buf[80])

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: execute_cmd.c:3042:
+  int fd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: execute_cmd.c:3043:
+  char *interpreter;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: execute_cmd.c:3045:
+  interpreter = "";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: execute_cmd.c:3046:
+  fd = open (command, O_RDONLY);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#81: FILE: execute_cmd.c:3046:
+  fd = open (command, O_RDONLY);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: execute_cmd.c:3047:
+  if (fd >= 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#82: FILE: execute_cmd.c:3047:
+  if (fd >= 0)
+    {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#82: FILE: execute_cmd.c:3047:
+  if (fd >= 0)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: execute_cmd.c:3048:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: execute_cmd.c:3049:
+      int len;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: execute_cmd.c:3050:
+^I      $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: execute_cmd.c:3051:
+      len = read (fd, (char *)buf, 80);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#86: FILE: execute_cmd.c:3051:
+      len = read (fd, (char *)buf, 80);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: execute_cmd.c:3052:
+      close (fd);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#87: FILE: execute_cmd.c:3052:
+      close (fd);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: execute_cmd.c:3053:
+^I      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: execute_cmd.c:3054:
+      if (len > 0$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#89: FILE: execute_cmd.c:3054:
+      if (len > 0
+	  && buf[0] == '#' && buf[1] == '!')
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#89: FILE: execute_cmd.c:3054:
+      if (len > 0
[...]
+	{

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#90: FILE: execute_cmd.c:3055:
+      if (len > 0
+	  && buf[0] == '#' && buf[1] == '!')

WARNING:TABSTOP: Statements should start on a tabstop
#92: FILE: execute_cmd.c:3057:
+	  int i;

WARNING:TABSTOP: Statements should start on a tabstop
#93: FILE: execute_cmd.c:3058:
+	  int start;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: execute_cmd.c:3059:
+^I^I  $

WARNING:TABSTOP: Statements should start on a tabstop
#95: FILE: execute_cmd.c:3060:
+	  for (i = 2; whitespace (buf[i]) && i < len; i++)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#95: FILE: execute_cmd.c:3060:
+	  for (i = 2; whitespace (buf[i]) && i < len; i++)
+	    ;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#95: FILE: execute_cmd.c:3060:
+	  for (i = 2; whitespace (buf[i]) && i < len; i++)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: execute_cmd.c:3062:
+^I  $

WARNING:TABSTOP: Statements should start on a tabstop
#98: FILE: execute_cmd.c:3063:
+	  for (start = i;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#98: FILE: execute_cmd.c:3063:
+	  for (start = i;
[...]
+	    ;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#99: FILE: execute_cmd.c:3064:
+	       !whitespace (buf[i]) && buf[i] != '\n' && i < len;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#103: FILE: execute_cmd.c:3068:
+	  interpreter = substring ((char *)buf, start, i);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: execute_cmd.c:3070:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: execute_cmd.c:3071:
+  return interpreter;$

WARNING:TABSTOP: Statements should start on a tabstop
#116: FILE: execute_cmd.c:3365:
+	  if (errno == ENOENT)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#116: FILE: execute_cmd.c:3365:
+	  if (errno == ENOENT)
+	    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#116: FILE: execute_cmd.c:3365:
+	  if (errno == ENOENT)
+	    {

WARNING:TABSTOP: Statements should start on a tabstop
#117: FILE: execute_cmd.c:3366:
+	    {

WARNING:LINE_SPACING: Missing a blank line after declarations
#119: FILE: execute_cmd.c:3368:
+	      char buf[80];
+	      command = extract_hash_bang_interpreter (command, buf);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#119: FILE: execute_cmd.c:3368:
+	      command = extract_hash_bang_interpreter (command, buf);

WARNING:TABSTOP: Statements should start on a tabstop
#120: FILE: execute_cmd.c:3369:
+	    }

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000546605.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 35 warnings, 1 checks, 58 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000546605.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
