ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#72: FILE: fs/Config.in:11:
CONFIG_AUTOFS4_FS

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#91: FILE: fs/quota_v2.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#105: FILE: fs/quota_v2.c:15:
+#include <asm/uaccess.h>

WARNING:NEW_TYPEDEFS: do not add new typedefs
#109: FILE: fs/quota_v2.c:19:
+typedef char *dqbuf_t;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: fs/quota_v2.c:21:
+#define GETIDINDEX(id, depth) (((id) >> ((V2_DQTREEDEPTH-(depth)-1)*8)) & $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#111: FILE: fs/quota_v2.c:21:
+#define GETIDINDEX(id, depth) (((id) >> ((V2_DQTREEDEPTH-(depth)-1)*8)) & 
                                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#111: FILE: fs/quota_v2.c:21:
+#define GETIDINDEX(id, depth) (((id) >> ((V2_DQTREEDEPTH-(depth)-1)*8)) & 
                                                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#111: FILE: fs/quota_v2.c:21:
+#define GETIDINDEX(id, depth) (((id) >> ((V2_DQTREEDEPTH-(depth)-1)*8)) & 
                                                                    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#111: FILE: fs/quota_v2.c:21:
+#define GETIDINDEX(id, depth) (((id) >> ((V2_DQTREEDEPTH-(depth)-1)*8)) & 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: fs/quota_v2.c:22:
+#define GETENTRIES(buf) ((struct v2_disk_dqblk *)(((char $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: fs/quota_v2.c:34:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: fs/quota_v2.c:34:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: fs/quota_v2.c:37:
+^Isize = f->f_op->read(f, (char *)&dqhead, sizeof(struct v2_disk_dqheader), $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#145: FILE: fs/quota_v2.c:52:
+	struct mem_dqinfo *info = sb_dqopt(sb)->info+type;
 	                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: fs/quota_v2.c:59:
+^Isize = f->f_op->read(f, (char *)&dinfo, sizeof(struct v2_disk_dqinfo), $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#156: FILE: fs/quota_v2.c:62:
+		printk(KERN_WARNING "Can't read info structure on device %s.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: fs/quota_v2.c:63:
+		printk(KERN_WARNING "Can't read info structure on device %s.\n",
+			kdevname(f->f_dentry->d_sb->s_dev));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#174: FILE: fs/quota_v2.c:80:
+	struct mem_dqinfo *info = sb_dqopt(sb)->info+type;
 	                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: fs/quota_v2.c:94:
+^Isize = f->f_op->write(f, (char *)&dinfo, sizeof(struct v2_disk_dqinfo), $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#192: FILE: fs/quota_v2.c:97:
+		printk(KERN_WARNING "Can't write info structure on device %s.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: fs/quota_v2.c:98:
+		printk(KERN_WARNING "Can't write info structure on device %s.\n",
+			kdevname(f->f_dentry->d_sb->s_dev));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: fs/quota_v2.c:116:
+static void mem2diskdqb(struct v2_disk_dqblk *d, struct mem_dqblk *m, qid_t $

WARNING:LINE_SPACING: Missing a blank line after declarations
#228: FILE: fs/quota_v2.c:132:
+	dqbuf_t buf = kmalloc(V2_DQBLKSIZE, GFP_KERNEL);
+	if (!buf)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#229: FILE: fs/quota_v2.c:133:
+		printk(KERN_WARNING "VFS: Not enough memory for quota buffers.\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#229: FILE: fs/quota_v2.c:133:
+	if (!buf)
+		printk(KERN_WARNING "VFS: Not enough memory for quota buffers.\n");

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#238: FILE: fs/quota_v2.c:142:
+static ssize_t read_blk(struct file *filp, uint blk, dqbuf_t buf)
                                      ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#242: FILE: fs/quota_v2.c:146:
+	loff_t offset = blk<<V2_DQBLKSIZE_BITS;
 	                   ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#247: FILE: fs/quota_v2.c:151:
+	ret = filp->f_op->read(filp, (char *)buf, V2_DQBLKSIZE, &offset);
 	                       ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#252: FILE: fs/quota_v2.c:156:
+static ssize_t write_blk(struct file *filp, uint blk, dqbuf_t buf)
                                       ^^^^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#256: FILE: fs/quota_v2.c:160:
+	loff_t offset = blk<<V2_DQBLKSIZE_BITS;
 	                   ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#260: FILE: fs/quota_v2.c:164:
+	ret = filp->f_op->write(filp, (char *)buf, V2_DQBLKSIZE, &offset);
 	                        ^^^^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#264: FILE: fs/quota_v2.c:168:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#267: FILE: fs/quota_v2.c:171:
+static int get_free_dqblk(struct file *filp, struct mem_dqinfo *info)
                                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#277: FILE: fs/quota_v2.c:181:
+		if ((ret = read_blk(filp, blk, buf)) < 0)
 		                    ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#277: FILE: fs/quota_v2.c:181:
+		if ((ret = read_blk(filp, blk, buf)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#281: FILE: fs/quota_v2.c:185:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#281: FILE: fs/quota_v2.c:185:
+	else {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#283: FILE: fs/quota_v2.c:187:
+		if ((ret = write_blk(filp, info->u.v2_i.dqi_blocks, buf)) < 0)	/* Assure 
 		                     ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: fs/quota_v2.c:187:
+^I^Iif ((ret = write_blk(filp, info->u.v2_i.dqi_blocks, buf)) < 0)^I/* Assure $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 0)
#283: FILE: fs/quota_v2.c:187:
+		if ((ret = write_blk(filp, info->u.v2_i.dqi_blocks, buf)) < 0)	/* Assure 
block allocation... */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#283: FILE: fs/quota_v2.c:187:
+		if ((ret = write_blk(filp, info->u.v2_i.dqi_blocks, buf)) < 0)	/* Assure 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#285: FILE: fs/quota_v2.c:188:
+		if ((ret = write_blk(filp, info->u.v2_i.dqi_blocks, buf)) < 0)	/* Assure 
+			goto out_buf;

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#296: FILE: fs/quota_v2.c:199:
+static int put_free_dqblk(struct file *filp, struct mem_dqinfo *info, 
                                        ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#296: FILE: fs/quota_v2.c:199:
+static int put_free_dqblk(struct file *filp, struct mem_dqinfo *info, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: fs/quota_v2.c:200:
+static int put_free_dqblk(struct file *filp, struct mem_dqinfo *info, 
+{

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#307: FILE: fs/quota_v2.c:209:
+	if ((err = write_blk(filp, blk, buf)) < 0)	/* Some strange block. We had 
 	                     ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: fs/quota_v2.c:209:
+^Iif ((err = write_blk(filp, blk, buf)) < 0)^I/* Some strange block. We had $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#307: FILE: fs/quota_v2.c:209:
+	if ((err = write_blk(filp, blk, buf)) < 0)	/* Some strange block. We had 
better leave it... */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#307: FILE: fs/quota_v2.c:209:
+	if ((err = write_blk(filp, blk, buf)) < 0)	/* Some strange block. We had 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#309: FILE: fs/quota_v2.c:210:
+	if ((err = write_blk(filp, blk, buf)) < 0)	/* Some strange block. We had 
+		return err;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#314: FILE: fs/quota_v2.c:215:
+static int remove_free_dqentry(struct file *filp, struct mem_dqinfo *info, 
                                             ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: fs/quota_v2.c:215:
+static int remove_free_dqentry(struct file *filp, struct mem_dqinfo *info, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: fs/quota_v2.c:216:
+static int remove_free_dqentry(struct file *filp, struct mem_dqinfo *info, 
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: fs/quota_v2.c:219:
+^Iuint nextblk = le32_to_cpu(dh->dqdh_next_free), prevblk = $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#326: FILE: fs/quota_v2.c:225:
+		if ((err = read_blk(filp, nextblk, tmpbuf)) < 0)
 		                    ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#326: FILE: fs/quota_v2.c:225:
+		if ((err = read_blk(filp, nextblk, tmpbuf)) < 0)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#329: FILE: fs/quota_v2.c:228:
+		if ((err = write_blk(filp, nextblk, tmpbuf)) < 0)
 		                     ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#329: FILE: fs/quota_v2.c:228:
+		if ((err = write_blk(filp, nextblk, tmpbuf)) < 0)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#333: FILE: fs/quota_v2.c:232:
+		if ((err = read_blk(filp, prevblk, tmpbuf)) < 0)
 		                    ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#333: FILE: fs/quota_v2.c:232:
+		if ((err = read_blk(filp, prevblk, tmpbuf)) < 0)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#336: FILE: fs/quota_v2.c:235:
+		if ((err = write_blk(filp, prevblk, tmpbuf)) < 0)
 		                     ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#336: FILE: fs/quota_v2.c:235:
+		if ((err = write_blk(filp, prevblk, tmpbuf)) < 0)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#339: FILE: fs/quota_v2.c:238:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#339: FILE: fs/quota_v2.c:238:
+	else {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#344: FILE: fs/quota_v2.c:243:
+	dh->dqdh_next_free = dh->dqdh_prev_free = cpu_to_le32(0);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#345: FILE: fs/quota_v2.c:244:
+	if (write_blk(filp, blk, buf) < 0)	/* No matter whether write succeeds 
 	              ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: fs/quota_v2.c:244:
+^Iif (write_blk(filp, blk, buf) < 0)^I/* No matter whether write succeeds $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#345: FILE: fs/quota_v2.c:244:
+	if (write_blk(filp, blk, buf) < 0)	/* No matter whether write succeeds 
block is out of list */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#347: FILE: fs/quota_v2.c:245:
+	if (write_blk(filp, blk, buf) < 0)	/* No matter whether write succeeds 
+		printk(KERN_ERR "VFS: Can't write block (%u) with free entries.\n", blk);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#355: FILE: fs/quota_v2.c:253:
+static int insert_free_dqentry(struct file *filp, struct mem_dqinfo *info, 
                                             ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: fs/quota_v2.c:253:
+static int insert_free_dqentry(struct file *filp, struct mem_dqinfo *info, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#357: FILE: fs/quota_v2.c:254:
+static int insert_free_dqentry(struct file *filp, struct mem_dqinfo *info, 
+{

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#366: FILE: fs/quota_v2.c:263:
+	if ((err = write_blk(filp, blk, buf)) < 0)
 	                     ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#366: FILE: fs/quota_v2.c:263:
+	if ((err = write_blk(filp, blk, buf)) < 0)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#369: FILE: fs/quota_v2.c:266:
+		if ((err = read_blk(filp, info->u.v2_i.dqi_free_entry, tmpbuf)) < 0)
 		                    ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#369: FILE: fs/quota_v2.c:266:
+		if ((err = read_blk(filp, info->u.v2_i.dqi_free_entry, tmpbuf)) < 0)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#372: FILE: fs/quota_v2.c:269:
+		if ((err = write_blk(filp, info->u.v2_i.dqi_free_entry, tmpbuf)) < 0)
 		                     ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#372: FILE: fs/quota_v2.c:269:
+		if ((err = write_blk(filp, info->u.v2_i.dqi_free_entry, tmpbuf)) < 0)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#387: FILE: fs/quota_v2.c:284:
+	struct file *filp = sb_dqopt(dquot->dq_sb)->files[dquot->dq_type];
 	             ^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#388: FILE: fs/quota_v2.c:285:
+	struct mem_dqinfo *info = sb_dqopt(dquot->dq_sb)->info+dquot->dq_type;
 	                                                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#396: FILE: fs/quota_v2.c:293:
+	if (!(buf = getdqbuf())) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#402: FILE: fs/quota_v2.c:299:
+	if (info->u.v2_i.dqi_free_entry) {
[...]
+	else {
[...]
+	else
[...]

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#404: FILE: fs/quota_v2.c:301:
+		if ((*err = read_blk(filp, blk, buf)) < 0)
 		                     ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#404: FILE: fs/quota_v2.c:301:
+		if ((*err = read_blk(filp, blk, buf)) < 0)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#407: FILE: fs/quota_v2.c:304:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#407: FILE: fs/quota_v2.c:304:
+	else {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#408: FILE: fs/quota_v2.c:305:
+		blk = get_free_dqblk(filp, info);
 		                     ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#414: FILE: fs/quota_v2.c:311:
+^I^Iinfo->u.v2_i.dqi_free_entry = blk;^I/* This is enough as block is already $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#416: FILE: fs/quota_v2.c:312:
+		info->u.v2_i.dqi_free_entry = blk;	/* This is enough as block is already 
+		mark_info_dirty(info);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#418: FILE: fs/quota_v2.c:314:
+^Iif (le16_to_cpu(dh->dqdh_entries)+1 >= V2_DQSTRINBLK)^I/* Block will be $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#420: FILE: fs/quota_v2.c:315:
+		if ((*err = remove_free_dqentry(filp, info, buf, blk)) < 0) {
 		                                ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#420: FILE: fs/quota_v2.c:315:
+	if (le16_to_cpu(dh->dqdh_entries)+1 >= V2_DQSTRINBLK)	/* Block will be 
+		if ((*err = remove_free_dqentry(filp, info, buf, blk)) < 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#421: FILE: fs/quota_v2.c:316:
+^I^I^Iprintk(KERN_ERR "VFS: find_free_dqentry(): Can't remove block (%u) from $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: fs/quota_v2.c:322:
+^Ifor (i = 0; i < V2_DQSTRINBLK && memcmp(&fakedquot, ddquot+i, sizeof(struct $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#428: FILE: fs/quota_v2.c:322:
+	for (i = 0; i < V2_DQSTRINBLK && memcmp(&fakedquot, ddquot+i, sizeof(struct 
 	                                                          ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#428: FILE: fs/quota_v2.c:322:
+	for (i = 0; i < V2_DQSTRINBLK && memcmp(&fakedquot, ddquot+i, sizeof(struct 
v2_disk_dqblk)); i++);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#432: FILE: fs/quota_v2.c:325:
+^I^Iprintk(KERN_ERR "VFS: find_free_dqentry(): Data block full but it $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#432: FILE: fs/quota_v2.c:325:
+		printk(KERN_ERR "VFS: find_free_dqentry(): Data block full but it 

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#438: FILE: fs/quota_v2.c:330:
+	if ((*err = write_blk(filp, blk, buf)) < 0) {
 	                      ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#439: FILE: fs/quota_v2.c:331:
+^I^Iprintk(KERN_ERR "VFS: find_free_dqentry(): Can't write quota data block $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#439: FILE: fs/quota_v2.c:331:
+		printk(KERN_ERR "VFS: find_free_dqentry(): Can't write quota data block 
 		                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#439: FILE: fs/quota_v2.c:331:
+		printk(KERN_ERR "VFS: find_free_dqentry(): Can't write quota data block 
 		                                         ^

CHECK:CAMELCASE: Avoid CamelCase: <Can>
#439: FILE: fs/quota_v2.c:331:
+		printk(KERN_ERR "VFS: find_free_dqentry(): Can't write quota data block 

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#443: FILE: fs/quota_v2.c:334:
+^Idquot->dq_off = (blk<<V2_DQBLKSIZE_BITS)+sizeof(struct $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#455: FILE: fs/quota_v2.c:345:
+	struct file *filp = sb_dqopt(dquot->dq_sb)->files[dquot->dq_type];
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#465: FILE: fs/quota_v2.c:355:
+		ret = get_free_dqblk(filp, info);
 		                     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#473: FILE: fs/quota_v2.c:363:
+		if ((ret = read_blk(filp, *treeblk, buf)) < 0) {
 		                    ^^^^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#474: FILE: fs/quota_v2.c:364:
+			printk(KERN_ERR "VFS: Can't read tree quota block %u.\n", *treeblk);
 			                                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: fs/quota_v2.c:375:
+^I^I^Iprintk(KERN_ERR "VFS: Inserting already present quota entry (block $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#485: FILE: fs/quota_v2.c:375:
+			printk(KERN_ERR "VFS: Inserting already present quota entry (block 

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#485: FILE: fs/quota_v2.c:375:
+			printk(KERN_ERR "VFS: Inserting already present quota entry (block 
 			                    ^

CHECK:CAMELCASE: Avoid CamelCase: <Inserting>
#485: FILE: fs/quota_v2.c:375:
+			printk(KERN_ERR "VFS: Inserting already present quota entry (block 

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#493: FILE: fs/quota_v2.c:382:
+	}
+	else

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#494: FILE: fs/quota_v2.c:383:
+		ret = do_insert_tree(dquot, &newblk, depth+1);
 		                                          ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#495: FILE: fs/quota_v2.c:384:
+	if (newson && ret >= 0) {
[...]
+	else if (newact && ret < 0)
[...]

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#497: FILE: fs/quota_v2.c:386:
+		ret = write_blk(filp, *treeblk, buf);
 		                ^^^^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#499: FILE: fs/quota_v2.c:388:
+	}
+	else if (newact && ret < 0)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#500: FILE: fs/quota_v2.c:389:
+		put_free_dqblk(filp, info, buf, *treeblk);
 		               ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#510: FILE: fs/quota_v2.c:399:
+	int tmp = V2_DQTREEOFF;
+	return do_insert_tree(dquot, &tmp, 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#514: FILE: fs/quota_v2.c:403:
+ *^IWe don't have to be afraid of deadlocks as we never have quotas on quota $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#520: FILE: fs/quota_v2.c:408:
+	struct file *filp;
 	             ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#527: FILE: fs/quota_v2.c:415:
+		if ((ret = dq_insert_tree(dquot)) < 0) {

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#528: FILE: fs/quota_v2.c:416:
+			printk(KERN_ERR "VFS: Error %d occured while creating quota.\n", ret);
 			                               ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#528: FILE: fs/quota_v2.c:416:
+			printk(KERN_ERR "VFS: Error %d occured while creating quota.\n", ret);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#531: FILE: fs/quota_v2.c:419:
+	filp = sb_dqopt(dquot->dq_sb)->files[type];
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#536: FILE: fs/quota_v2.c:424:
+	ret = filp->f_op->write(filp, (char *)&ddquot, sizeof(struct 
 	                        ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#536: FILE: fs/quota_v2.c:424:
+^Iret = filp->f_op->write(filp, (char *)&ddquot, sizeof(struct $

CHECK:BRACES: braces {} should be used on all arms of this statement
#539: FILE: fs/quota_v2.c:426:
+	if (ret != sizeof(struct v2_disk_dqblk)) {
[...]
+	else
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#540: FILE: fs/quota_v2.c:427:
+^I^Iprintk(KERN_WARNING "VFS: dquota write failed on dev %s\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#540: FILE: fs/quota_v2.c:427:
+		printk(KERN_WARNING "VFS: dquota write failed on dev %s\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: fs/quota_v2.c:428:
+		printk(KERN_WARNING "VFS: dquota write failed on dev %s\n", 
+		if (ret >= 0)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#545: FILE: fs/quota_v2.c:431:
+	}
+	else

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#554: FILE: fs/quota_v2.c:440:
+	struct file *filp = sb_dqopt(dquot->dq_sb)->files[dquot->dq_type];
 	             ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#563: FILE: fs/quota_v2.c:449:
+^I^Iprintk(KERN_ERR "VFS: Quota structure has offset to other block (%u) than $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#563: FILE: fs/quota_v2.c:449:
+		printk(KERN_ERR "VFS: Quota structure has offset to other block (%u) than 

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#567: FILE: fs/quota_v2.c:452:
+	if ((ret = read_blk(filp, blk, buf)) < 0) {
 	                    ^^^^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#568: FILE: fs/quota_v2.c:453:
+		printk(KERN_ERR "VFS: Can't read quota data block %u\n", blk);
 		                    ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#574: FILE: fs/quota_v2.c:459:
+		if ((ret = remove_free_dqentry(filp, info, buf, blk)) < 0 ||
 		                               ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#575: FILE: fs/quota_v2.c:460:
+		    (ret = put_free_dqblk(filp, info, buf, blk)) < 0) {
 		                          ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#576: FILE: fs/quota_v2.c:461:
+^I^I^Iprintk(KERN_ERR "VFS: Can't move quota data block (%u) to free list.\n", $

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#576: FILE: fs/quota_v2.c:461:
+			printk(KERN_ERR "VFS: Can't move quota data block (%u) to free list.\n", 
 			                                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#582: FILE: fs/quota_v2.c:466:
+^I^Imemset(buf+(dquot->dq_off & ((1 << V2_DQBLKSIZE_BITS)-1)), 0, $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#586: FILE: fs/quota_v2.c:469:
+			if ((ret = insert_free_dqentry(filp, info, buf, blk)) < 0) {
 			                               ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#587: FILE: fs/quota_v2.c:470:
+^I^I^I^Iprintk(KERN_ERR "VFS: Can't insert quota data block (%u) to free entry $

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#587: FILE: fs/quota_v2.c:470:
+				printk(KERN_ERR "VFS: Can't insert quota data block (%u) to free entry 

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#593: FILE: fs/quota_v2.c:475:
+			if ((ret = write_blk(filp, blk, buf)) < 0) {
 			                     ^^^^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#594: FILE: fs/quota_v2.c:476:
+				printk(KERN_ERR "VFS: Can't write quota data block %u\n", blk);
 				                                                   ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#607: FILE: fs/quota_v2.c:489:
+	struct file *filp = sb_dqopt(dquot->dq_sb)->files[dquot->dq_type];
 	             ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#613: FILE: fs/quota_v2.c:495:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#616: FILE: fs/quota_v2.c:498:
+	if ((ret = read_blk(filp, *blk, buf)) < 0) {
 	                    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#632: FILE: fs/quota_v2.c:514:
+			put_free_dqblk(filp, info, buf, *blk);
 			               ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#636: FILE: fs/quota_v2.c:518:
+			if ((ret = write_blk(filp, *blk, buf)) < 0)
 			                     ^^^^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#637: FILE: fs/quota_v2.c:519:
+				printk(KERN_ERR "VFS: Can't write quota tree block %u.\n", *blk);
 				                                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#641: FILE: fs/quota_v2.c:523:
+^Ireturn ret;^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#657: FILE: fs/quota_v2.c:539:
+	struct file *filp = sb_dqopt(dquot->dq_sb)->files[dquot->dq_type];
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#665: FILE: fs/quota_v2.c:547:
+	if ((ret = read_blk(filp, blk, buf)) < 0) {
 	                    ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#670: FILE: fs/quota_v2.c:552:
+^I^Ifor (i = 0; i < V2_DQSTRINBLK && le32_to_cpu(ddquot[i].dqb_id) != $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#677: FILE: fs/quota_v2.c:558:
+^I^I^Iif (!le32_to_cpu(ddquot[i].dqb_id) && memcmp(&fakedquot, ddquot+i, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#682: FILE: fs/quota_v2.c:562:
+^I^Iprintk(KERN_ERR "VFS: Quota for id %u referenced but not present.\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#688: FILE: fs/quota_v2.c:567:
+^I^Iret = (blk << V2_DQBLKSIZE_BITS) + sizeof(struct v2_disk_dqdbheader) + i * $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#698: FILE: fs/quota_v2.c:576:
+	struct file *filp = sb_dqopt(dquot->dq_sb)->files[dquot->dq_type];
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#705: FILE: fs/quota_v2.c:583:
+	if ((ret = read_blk(filp, blk, buf)) < 0) {
 	                    ^^^^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#706: FILE: fs/quota_v2.c:584:
+		printk(KERN_ERR "VFS: Can't read quota tree block %u.\n", blk);
 		                                                  ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#731: FILE: fs/quota_v2.c:609:
+	struct file *filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#737: FILE: fs/quota_v2.c:615:
+	filp = sb_dqopt(dquot->dq_sb)->files[type];
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#740: FILE: fs/quota_v2.c:618:
+	if (!filp || !dquot->dq_sb) {	/* Invalidated quota? */
 	     ^^^^

ERROR:SPACING: space required before that '!' (ctx:VxV)
#741: FILE: fs/quota_v2.c:619:
+		printk(KERN_ERR "VFS: Quota invalidated while reading!\n");
 		                                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <Quota>
#741: FILE: fs/quota_v2.c:619:
+		printk(KERN_ERR "VFS: Quota invalidated while reading!\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#748: FILE: fs/quota_v2.c:626:
+^I^I^Iprintk(KERN_ERR "VFS: Can't read quota structure for id %u.\n", $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#759: FILE: fs/quota_v2.c:636:
+		if ((ret = filp->f_op->read(filp, (char *)&ddquot, sizeof(struct 
 		                            ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#759: FILE: fs/quota_v2.c:636:
+^I^Iif ((ret = filp->f_op->read(filp, (char *)&ddquot, sizeof(struct $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#763: FILE: fs/quota_v2.c:639:
+^I^I^Iprintk(KERN_ERR "VFS: Error while reading quota structure for id %u.\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#776: FILE: fs/quota_v2.c:651:
+/* Commit changes of dquot to disk - it might also mean deleting it when $

WARNING:TYPO_SPELLING: 'everytime' may be misspelled - perhaps 'every time'?
#780: FILE: fs/quota_v2.c:654:
+	/* We clear the flag everytime so we don't loop when there was an IO 
 	                     ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#780: FILE: fs/quota_v2.c:654:
+^I/* We clear the flag everytime so we don't loop when there was an IO $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#783: FILE: fs/quota_v2.c:656:
+^Iif (dquot->dq_flags & DQ_FAKE && !(dquot->dq_dqb.dqb_curinodes | $

WARNING:INDENTED_LABEL: labels should not be indented
#791: FILE: fs/quota_v2.c:663:
+	check_quota_file:	v2_check_quota_file,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#792: FILE: fs/quota_v2.c:664:
+	read_file_info:		v2_read_file_info,
 	              ^

WARNING:INDENTED_LABEL: labels should not be indented
#792: FILE: fs/quota_v2.c:664:
+	read_file_info:		v2_read_file_info,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#793: FILE: fs/quota_v2.c:665:
+	write_file_info:	v2_write_file_info,
 	               ^

WARNING:INDENTED_LABEL: labels should not be indented
#793: FILE: fs/quota_v2.c:665:
+	write_file_info:	v2_write_file_info,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#794: FILE: fs/quota_v2.c:666:
+	free_file_info:		NULL,
 	              ^

WARNING:INDENTED_LABEL: labels should not be indented
#794: FILE: fs/quota_v2.c:666:
+	free_file_info:		NULL,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#795: FILE: fs/quota_v2.c:667:
+	read_dqblk:		v2_read_dquot,
 	          ^

WARNING:INDENTED_LABEL: labels should not be indented
#795: FILE: fs/quota_v2.c:667:
+	read_dqblk:		v2_read_dquot,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#796: FILE: fs/quota_v2.c:668:
+	commit_dqblk:		v2_commit_dquot,
 	            ^

WARNING:INDENTED_LABEL: labels should not be indented
#796: FILE: fs/quota_v2.c:668:
+	commit_dqblk:		v2_commit_dquot,

WARNING:INDENTED_LABEL: labels should not be indented
#800: FILE: fs/quota_v2.c:672:
+	qf_fmt_id:	QFMT_VFS_V0,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#801: FILE: fs/quota_v2.c:673:
+	qf_ops:		&v2_format_ops,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#801: FILE: fs/quota_v2.c:673:
+	qf_ops:		&v2_format_ops,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#802: FILE: fs/quota_v2.c:674:
+	qf_owner:	THIS_MODULE
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#802: FILE: fs/quota_v2.c:674:
+	qf_owner:	THIS_MODULE

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#824: FILE: include/linux/dqblk_v2.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#877: FILE: include/linux/quotaio_v2.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#910: FILE: include/linux/quotaio_v2.h:34:
+^I__u32 dqb_bhardlimit;^I/* absolute limit on disk space (in QUOTABLOCK_SIZE) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#912: FILE: include/linux/quotaio_v2.h:35:
+^I__u32 dqb_bsoftlimit;^I/* preferred limit on disk space (in QUOTABLOCK_SIZE) $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#912: FILE: include/linux/quotaio_v2.h:35:
+	__u32 dqb_bhardlimit;	/* absolute limit on disk space (in QUOTABLOCK_SIZE) 
+	__u32 dqb_bsoftlimit;	/* preferred limit on disk space (in QUOTABLOCK_SIZE) 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#914: FILE: include/linux/quotaio_v2.h:36:
+	__u32 dqb_bsoftlimit;	/* preferred limit on disk space (in QUOTABLOCK_SIZE) 
+	__u64 dqb_curspace;	/* current space occupied (in bytes) */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#939: FILE: include/linux/quotaio_v2.h:61:
+ *  Structure of header of block with quota structures. It is padded to 16 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#951: FILE: include/linux/quotaio_v2.h:72:
+#define V2_DQINFOOFF^Isizeof(struct v2_disk_dqheader)^I/* Offset of info $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#953: FILE: include/linux/quotaio_v2.h:73:
+#define V2_DQINFOOFF	sizeof(struct v2_disk_dqheader)	/* Offset of info 
+#define V2_DQBLKSIZE_BITS	10

ERROR:TRAILING_WHITESPACE: trailing whitespace
#954: FILE: include/linux/quotaio_v2.h:74:
+#define V2_DQBLKSIZE^I(1 << V2_DQBLKSIZE_BITS)^I/* Size of block with quota $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#956: FILE: include/linux/quotaio_v2.h:75:
+#define V2_DQBLKSIZE	(1 << V2_DQBLKSIZE_BITS)	/* Size of block with quota 
+#define V2_DQTREEOFF	1		/* Offset of tree in file in blocks */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#958: FILE: include/linux/quotaio_v2.h:77:
+#define V2_DQSTRINBLK^I((V2_DQBLKSIZE - sizeof(struct v2_disk_dqdbheader)) / $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#958: FILE: include/linux/quotaio_v2.h:77:
+#define V2_DQSTRINBLK	((V2_DQBLKSIZE - sizeof(struct v2_disk_dqdbheader)) / 

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000472843.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 82 errors, 91 warnings, 32 checks, 894 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000472843.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
