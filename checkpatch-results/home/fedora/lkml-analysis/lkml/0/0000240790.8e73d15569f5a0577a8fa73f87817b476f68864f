ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#61: 
--- a/drivers/pci/quirks.c	2004-10-17 04:24:28.000000000 -0300

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#67: FILE: drivers/pci/quirks.c:548:
+#if defined(__i386__) || defined(__x86_64__)

Architecture specific defines should be avoided wherever
possible.

CHECK:BIT_MACRO: Prefer using the BIT macro
#77: FILE: drivers/pci/quirks.c:558:
+#define OHCI_OCR (1 << 3) /* ownership change request */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#78: FILE: drivers/pci/quirks.c:559:
+#define OHCI_CTRL_IR (1 << 8) /* interrupt routing */

CHECK:BIT_MACRO: Prefer using the BIT macro
#79: FILE: drivers/pci/quirks.c:560:
+#define OHCI_INTR_OC (1 << 30) /* ownership change */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#82: FILE: drivers/pci/quirks.c:563:
+/* If the BIOS doesn't have an option to disable legacy USB emulation,
+   and such emulation actually gets in the way of proper probing of

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#83: FILE: drivers/pci/quirks.c:564:
+   PS/2 devices, the nops2usbemul option should help.  */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: drivers/pci/quirks.c:567:
+  extern char saved_command_line[];$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#86: FILE: drivers/pci/quirks.c:567:
+  extern char saved_command_line[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: drivers/pci/quirks.c:569:
+  if (!strstr(saved_command_line, "nops2usbemul"))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#88: FILE: drivers/pci/quirks.c:569:
+  if (!strstr(saved_command_line, "nops2usbemul"))
+    return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: drivers/pci/quirks.c:570:
+    return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: drivers/pci/quirks.c:572:
+  if (pdev->class == ((PCI_CLASS_SERIAL_USB << 8) | 0x00)) { /* UHCI */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#91: FILE: drivers/pci/quirks.c:572:
+  if (pdev->class == ((PCI_CLASS_SERIAL_USB << 8) | 0x00)) { /* UHCI */
+    int i;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: drivers/pci/quirks.c:573:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: drivers/pci/quirks.c:574:
+    unsigned long base = 0;;$

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#93: FILE: drivers/pci/quirks.c:574:
+    unsigned long base = 0;;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: drivers/pci/quirks.c:576:
+    for (i = 0; i < PCI_ROM_RESOURCE; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#95: FILE: drivers/pci/quirks.c:576:
+    for (i = 0; i < PCI_ROM_RESOURCE; i++)
+      if ((pci_resource_flags(pdev, i) & IORESOURCE_IO)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: drivers/pci/quirks.c:577:
+      if ((pci_resource_flags(pdev, i) & IORESOURCE_IO)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: drivers/pci/quirks.c:580:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: drivers/pci/quirks.c:582:
+    if (!base)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#101: FILE: drivers/pci/quirks.c:582:
+    if (!base)
+      return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: drivers/pci/quirks.c:583:
+      return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: drivers/pci/quirks.c:585:
+    outw(0, base + UHCI_USBINTR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: drivers/pci/quirks.c:586:
+    outw(UHCI_USBCMD_GRESET, base + UHCI_USBCMD);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: drivers/pci/quirks.c:587:
+    set_current_state(TASK_UNINTERRUPTIBLE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: drivers/pci/quirks.c:588:
+    schedule_timeout((HZ*50+999) / 1000);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#107: FILE: drivers/pci/quirks.c:588:
+    schedule_timeout((HZ*50+999) / 1000);
                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#107: FILE: drivers/pci/quirks.c:588:
+    schedule_timeout((HZ*50+999) / 1000);
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: drivers/pci/quirks.c:589:
+    outw(0, base + UHCI_USBCMD);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: drivers/pci/quirks.c:590:
+    set_current_state(TASK_UNINTERRUPTIBLE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: drivers/pci/quirks.c:591:
+    schedule_timeout((HZ*10+999) / 1000);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#110: FILE: drivers/pci/quirks.c:591:
+    schedule_timeout((HZ*10+999) / 1000);
                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#110: FILE: drivers/pci/quirks.c:591:
+    schedule_timeout((HZ*10+999) / 1000);
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: drivers/pci/quirks.c:593:
+    pci_write_config_word(pdev, UHCI_USBLEGSUP, UHCI_USBLEGSUP_DEFAULT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: drivers/pci/quirks.c:594:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: drivers/pci/quirks.c:596:
+  if (pdev->class == ((PCI_CLASS_SERIAL_USB << 8) | 0x10)) { /* OHCI */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#115: FILE: drivers/pci/quirks.c:596:
+  if (pdev->class == ((PCI_CLASS_SERIAL_USB << 8) | 0x10)) { /* OHCI */
+    char *base = ioremap_nocache(pci_resource_start(pdev, 0),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/pci/quirks.c:597:
+    char *base = ioremap_nocache(pci_resource_start(pdev, 0),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: drivers/pci/quirks.c:599:
+    if (base == NULL) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#118: FILE: drivers/pci/quirks.c:599:
+    if (base == NULL) return;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#118: FILE: drivers/pci/quirks.c:599:
+    if (base == NULL) return;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: drivers/pci/quirks.c:601:
+    if (readl(base + OHCI_CONTROL) & OHCI_CTRL_IR) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#120: FILE: drivers/pci/quirks.c:601:
+    if (readl(base + OHCI_CONTROL) & OHCI_CTRL_IR) {
+      int temp = 500; /* arbitrary: five seconds */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: drivers/pci/quirks.c:602:
+      int temp = 500; /* arbitrary: five seconds */$

WARNING:LINE_SPACING: Missing a blank line after declarations
#122: FILE: drivers/pci/quirks.c:603:
+      int temp = 500; /* arbitrary: five seconds */
+      writel(OHCI_INTR_OC, base + OHCI_INTRENABLE);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: drivers/pci/quirks.c:603:
+      writel(OHCI_INTR_OC, base + OHCI_INTRENABLE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: drivers/pci/quirks.c:604:
+      writel(OHCI_OCR, base + OHCI_CMDSTATUS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: drivers/pci/quirks.c:605:
+      while (temp && readl(base + OHCI_CONTROL) & OHCI_CTRL_IR) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#127: FILE: drivers/pci/quirks.c:608:
+	schedule_timeout( HZ / 100);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: drivers/pci/quirks.c:609:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: drivers/pci/quirks.c:610:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: drivers/pci/quirks.c:611:
+    iounmap(base);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/pci/quirks.c:612:
+  }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240790.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 43 warnings, 9 checks, 84 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240790.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
