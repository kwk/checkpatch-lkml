WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
From: Paolo 'Blaisorblade' Giarrusso <blaisorblade@yahoo.it>, Ingo Molnar <mingo@elte.hu>

ERROR:SPACING: space prohibited before that close parenthesis ')'
#94: FILE: include/asm-i386/pgtable-2level.h:55:
+	((((pte).pte_low >> 2) & 0xf ) | (((pte).pte_low >> 9) << 4 ))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'off' - possible side-effects?
#98: FILE: include/asm-i386/pgtable-2level.h:57:
+#define pgoff_prot_to_pte(off, prot) \
+	((pte_t) { (((off) & 0xf) << 2) | (((off) >> 4) << 9) | \
+	 pgprot_access_bits(prot) | _PAGE_FILE })

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#153: FILE: include/asm-i386/pgtable.h:130:
+#define _PAGE_FILE_PROTNONE	0x100	/* indicate that the page is remapped
+					   with PROT_NONE - this is different

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#159: FILE: include/asm-i386/pgtable.h:136:
+ * _PAGE_FILE_PROTNONE. */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'prot' - possible side-effects?
#160: FILE: include/asm-i386/pgtable.h:137:
+#define pgprot_access_bits(prot) \
+	((pgprot_val(prot) & _PAGE_RW) | \
+	 bitmask_trans(pgprot_val(prot), _PAGE_PROTNONE, _PAGE_FILE_PROTNONE))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#165: FILE: include/asm-i386/pgtable.h:142:
+	__pgprot(((pte).pte_low & (_PAGE_RW|_PAGE_PROTNONE)))
 	                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#167: FILE: include/asm-i386/pgtable.h:144:
+#define pte_file_to_pgprot(pte) \
+	__pgprot(((pte).pte_low & _PAGE_RW) | _PAGE_ACCESSED | \
+		(((pte).pte_low & _PAGE_FILE_PROTNONE) ? _PAGE_PROTNONE : \
+			(_PAGE_USER | _PAGE_PRESENT)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#199: FILE: include/asm-um/pgtable-2level.h:53:
+#define pte_to_pgoff(pte) (((pte_val(pte) >> 2) & 0x1) | \
+		(((pte_val(pte) >> 6) & 0x3) << 1) | \
+		((pte_val(pte) >> 9) << 3))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'off' - possible side-effects?
#204: FILE: include/asm-um/pgtable-2level.h:57:
+#define pgoff_prot_to_pte(off, prot) \
+	__pte((((off) & 0x1) << 2) | ((((off) & 0x7) >> 1) << 6) | \
+	((off >> 3) << 9) | pgprot_access_bits(prot) | _PAGE_FILE)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#273: FILE: include/asm-um/pgtable.h:30:
+#define _PAGE_FILE_PROTNONE	0x100	/* indicate that the page is remapped
+					   with PROT_NONE - this is different

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#279: FILE: include/asm-um/pgtable.h:36:
+ * _PAGE_FILE_PROTNONE. */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'prot' - possible side-effects?
#280: FILE: include/asm-um/pgtable.h:37:
+#define pgprot_access_bits(prot) \
+	((pgprot_val(prot) & _PAGE_RW) | \
+	 bitmask_trans(pgprot_val(prot), _PAGE_PROTNONE, _PAGE_FILE_PROTNONE))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#291: FILE: include/asm-um/pgtable.h:48:
+	__pgprot((__pte_low(pte) & (_PAGE_RW|_PAGE_PROTNONE)))
 	                                    ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#293: FILE: include/asm-um/pgtable.h:50:
+#define pte_file_to_pgprot(pte) \
+	__pgprot((__pte_low(pte) & _PAGE_RW) | _PAGE_ACCESSED | \
+		((__pte_low(pte) & _PAGE_FILE_PROTNONE) ? _PAGE_PROTNONE : \
+			(_PAGE_USER | _PAGE_PRESENT)))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#335: FILE: include/asm-x86_64/pgtable.h:170:
+#define _PAGE_FILE_PROTNONE	0x100	/* indicate that the page is remapped
+					   with PROT_NONE - this is different

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#351: FILE: include/asm-x86_64/pgtable.h:367:
+	__pgprot((pte_val(pte) & (_PAGE_RW|_PAGE_PROTNONE)))
 	                                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#353: FILE: include/asm-x86_64/pgtable.h:369:
+#define pte_file_to_pgprot(pte) \
+	__pgprot((pte_val(pte) & _PAGE_RW) | _PAGE_ACCESSED | \
+		((pte_val(pte) & _PAGE_FILE_PROTNONE) ? _PAGE_PROTNONE : \
+			(_PAGE_USER | _PAGE_PRESENT)))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#359: FILE: include/asm-x86_64/pgtable.h:375:
+ * _PAGE_FILE_PROTNONE. */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'prot' - possible side-effects?
#360: FILE: include/asm-x86_64/pgtable.h:376:
+#define pgprot_access_bits(prot) \
+	((pgprot_val(prot) & _PAGE_RW) | \
+	 bitmask_trans(pgprot_val(prot), _PAGE_PROTNONE, _PAGE_FILE_PROTNONE))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#367: FILE: include/asm-x86_64/pgtable.h:383:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000043761.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 7 warnings, 13 checks, 257 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000043761.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
