WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
Below I've included an initial patch to illustrate what I'd like to do.  I know

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: arch/ia64/kernel/smpboot.c:731:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: arch/ia64/kernel/smpboot.c:731:
+ $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#85: FILE: arch/ia64/kernel/smpboot.c:734:
+	for (i=1; i<=ints[0]; i++) {
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#85: FILE: arch/ia64/kernel/smpboot.c:734:
+	for (i=1; i<=ints[0]; i++) {
 	           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#85: FILE: arch/ia64/kernel/smpboot.c:734:
+	for (i=1; i<=ints[0]; i++) {
+		cpu_set(ints[i], isol_cpumask);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#91: FILE: arch/ia64/kernel/smpboot.c:740:
+__setup ("isolcpus=", isol_cpu_setup);

WARNING:LONG_LINE_COMMENT: line length of 118 exceeds 100 columns
#125: FILE: arch/ia64/kernel/smpboot.c:774:
+		cpu_sd->flags &= ~(SD_BALANCE_NEWIDLE | SD_BALANCE_EXEC | SD_BALANCE_CLONE);  /* Probably redundant */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#126: FILE: arch/ia64/kernel/smpboot.c:775:
+		printk(KERN_ERR "arch_init_sched_domains: Setting up cpu %d isolated.\n", i);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'arch_init_sched_domains', this function's name, in a string
#126: FILE: arch/ia64/kernel/smpboot.c:775:
+		printk(KERN_ERR "arch_init_sched_domains: Setting up cpu %d isolated.\n", i);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:MEMORY_BARRIER: memory barrier without comment
#184: FILE: arch/ia64/kernel/smpboot.c:833:
+	mb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#187: FILE: arch/ia64/kernel/smpboot.c:836:
+		struct sched_domain *cpu_sd = &per_cpu(cpu_domains, i);
+		cpu_attach_domain(cpu_sd, i);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_SCHED_DOMAIN' is wrong - use Kconfig variables or standard guards instead
#200: FILE: include/asm-ia64/processor.h:693:
+#define ARCH_HAS_SCHED_DOMAIN

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000266607.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 9 warnings, 0 checks, 130 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000266607.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
