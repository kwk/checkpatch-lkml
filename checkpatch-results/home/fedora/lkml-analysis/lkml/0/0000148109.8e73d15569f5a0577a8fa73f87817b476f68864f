ERROR:SPACING: space required before the open parenthesis '('
#90: FILE: mm/sparse.c:132:
+		if(rc) goto out_error;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#90: FILE: mm/sparse.c:132:
+		if(rc) goto out_error;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#99: FILE: mm/sparse.c:138:
+	printk("initialization error in sparse_early_alloc_init_section()\n");

WARNING:TYPO_SPELLING: 'Initialse' may be misspelled - perhaps 'Initialise'?
#117: FILE: mm/page_alloc.c:1675:
+	/* Initialse the three size ordered lists of free_areas */
 	   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#118: FILE: mm/page_alloc.c:1676:
+	for (type=0; type < RCLM_TYPES; type++) {
 	         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#132: FILE: mm/page_alloc.c:1860:
+#define roundup(x, y) ((((x)+((y)-1))/(y))*(y))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#132: FILE: mm/page_alloc.c:1860:
+#define roundup(x, y) ((((x)+((y)-1))/(y))*(y))
                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#132: FILE: mm/page_alloc.c:1860:
+#define roundup(x, y) ((((x)+((y)-1))/(y))*(y))
                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#132: FILE: mm/page_alloc.c:1860:
+#define roundup(x, y) ((((x)+((y)-1))/(y))*(y))
                                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'y' - possible side-effects?
#132: FILE: mm/page_alloc.c:1860:
+#define roundup(x, y) ((((x)+((y)-1))/(y))*(y))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#143: FILE: mm/page_alloc.c:1871:
+	usemapsize = roundup(zonesize, MAX_ORDER-1);
 	                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#144: FILE: mm/page_alloc.c:1872:
+	usemapsize = usemapsize >> (MAX_ORDER-1);
 	                                     ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#162: FILE: mm/page_alloc.c:1890:
+static void free_area_usemap_init(unsigned long size, struct pglist_data *pgdat,
+				  struct zone *zone){}

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148109.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 2 warnings, 7 checks, 113 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148109.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
