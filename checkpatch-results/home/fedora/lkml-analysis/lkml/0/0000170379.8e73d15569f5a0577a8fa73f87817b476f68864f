WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
diff -ruNp 613-pageflags.patch-old/kernel/power/suspend2_core/pageflags.c 613-pageflags.patch-new/kernel/power/suspend2_core/pageflags.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#31: FILE: kernel/power/suspend2_core/pageflags.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#32: FILE: kernel/power/suspend2_core/pageflags.c:2:
+ * kernel/power/suspend2_core/pageflags.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#35: FILE: kernel/power/suspend2_core/pageflags.c:5:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#82: FILE: kernel/power/suspend2_core/pageflags.c:52:
+	BUG_ON(*pagemap);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#84: FILE: kernel/power/suspend2_core/pageflags.c:54:
+	if (test_suspend_state(SUSPEND_NOW_RESUMING)) {
[...]
+	} else 
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: kernel/power/suspend2_core/pageflags.c:55:
+^I^I/* $

CHECK:SPACING: No space is necessary after a cast
#89: FILE: kernel/power/suspend2_core/pageflags.c:59:
+		*pagemap = (dyn_pageflags_t) suspend2_get_nonconflicting_page();

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#90: FILE: kernel/power/suspend2_core/pageflags.c:60:
+		if (! *pagemap) {
 		    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#91: FILE: kernel/power/suspend2_core/pageflags.c:61:
+			printk("Failed to allocate a non-conflicting page for pageflags.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: kernel/power/suspend2_core/pageflags.c:64:
+^I} else $

CHECK:BRACES: Unbalanced braces around else statement
#94: FILE: kernel/power/suspend2_core/pageflags.c:64:
+	} else 

CHECK:SPACING: No space is necessary after a cast
#98: FILE: kernel/power/suspend2_core/pageflags.c:68:
+		(*pagemap)[i] = (unsigned long *) get_zeroed_page(GFP_ATOMIC);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#100: FILE: kernel/power/suspend2_core/pageflags.c:70:
+			printk("Error. Unable to allocate memory for "

WARNING:SPLIT_STRING: quoted string split across lines
#101: FILE: kernel/power/suspend2_core/pageflags.c:71:
+			printk("Error. Unable to allocate memory for "
+					"local page flags.");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#123: FILE: kernel/power/suspend2_core/pageflags.c:93:
+		active_writer->ops.writer.write_header_chunk((char *) pagemap[i], PAGE_SIZE);

CHECK:SPACING: No space is necessary after a cast
#141: FILE: kernel/power/suspend2_core/pageflags.c:111:
+		active_writer->ops.writer.read_header_chunk((char *) pagemap[i], PAGE_SIZE);

CHECK:SPACING: No space is necessary after a cast
#152: FILE: kernel/power/suspend2_core/pageflags.c:122:
+	suspend2_relocate_page_if_required((void *) pagemap);

CHECK:SPACING: No space is necessary after a cast
#155: FILE: kernel/power/suspend2_core/pageflags.c:125:
+		suspend2_relocate_page_if_required((void *) &((*pagemap)[i]));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#161: FILE: kernel/power/suspend2_core/pageflags.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: kernel/power/suspend2_core/pageflags.h:28:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: kernel/power/suspend2_core/pageflags.h:29:
+ * inusemap is used in two ways: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: kernel/power/suspend2_core/pageflags.h:30:
+ * - During suspend, to tag pages which are not used (to speed up $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: kernel/power/suspend2_core/pageflags.h:32:
+ * - During resume, to tag pages which are in pagedir1. This does not tag $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#195: FILE: kernel/power/suspend2_core/pageflags.h:35:
+#define PageInUse(page)	\
+	test_bit(PAGEBIT(page), PAGE_UL_PTR(in_use_map, page))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#197: FILE: kernel/power/suspend2_core/pageflags.h:37:
+#define SetPageInUse(page) \
+	set_bit(PAGEBIT(page), PAGE_UL_PTR(in_use_map, page))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#199: FILE: kernel/power/suspend2_core/pageflags.h:39:
+#define ClearPageInUse(page) \
+	clear_bit(PAGEBIT(page), PAGE_UL_PTR(in_use_map, page))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#202: FILE: kernel/power/suspend2_core/pageflags.h:42:
+#define PagePageset1(page) \
+	(pageset1_map ? test_bit(PAGEBIT(page), PAGE_UL_PTR(pageset1_map, page)): 0)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#203: FILE: kernel/power/suspend2_core/pageflags.h:43:
+	(pageset1_map ? test_bit(PAGEBIT(page), PAGE_UL_PTR(pageset1_map, page)): 0)
 	                                                                        ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#204: FILE: kernel/power/suspend2_core/pageflags.h:44:
+#define SetPagePageset1(page) \
+	set_bit(PAGEBIT(page), PAGE_UL_PTR(pageset1_map, page))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#206: FILE: kernel/power/suspend2_core/pageflags.h:46:
+#define ClearPagePageset1(page) \
+	clear_bit(PAGEBIT(page), PAGE_UL_PTR(pageset1_map, page))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#209: FILE: kernel/power/suspend2_core/pageflags.h:49:
+#define PagePageset1Copy(page) \
+	(pageset1_copy_map ? \
+	 test_bit(PAGEBIT(page), PAGE_UL_PTR(pageset1_copy_map, page)): 0)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#211: FILE: kernel/power/suspend2_core/pageflags.h:51:
+	 test_bit(PAGEBIT(page), PAGE_UL_PTR(pageset1_copy_map, page)): 0)
 	                                                              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#212: FILE: kernel/power/suspend2_core/pageflags.h:52:
+#define SetPagePageset1Copy(page) \
+	set_bit(PAGEBIT(page), PAGE_UL_PTR(pageset1_copy_map, page))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#214: FILE: kernel/power/suspend2_core/pageflags.h:54:
+#define ClearPagePageset1Copy(page) \
+	clear_bit(PAGEBIT(page), PAGE_UL_PTR(pageset1_copy_map, page))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#217: FILE: kernel/power/suspend2_core/pageflags.h:57:
+#define PagePageset2(page) \
+	(pageset2_map ? \
+	 test_bit(PAGEBIT(page), PAGE_UL_PTR(pageset2_map, page)): 0)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#219: FILE: kernel/power/suspend2_core/pageflags.h:59:
+	 test_bit(PAGEBIT(page), PAGE_UL_PTR(pageset2_map, page)): 0)
 	                                                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#220: FILE: kernel/power/suspend2_core/pageflags.h:60:
+#define SetPagePageset2(page) \
+	set_bit(PAGEBIT(page), PAGE_UL_PTR(pageset2_map, page))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#222: FILE: kernel/power/suspend2_core/pageflags.h:62:
+#define ClearPagePageset2(page) \
+	clear_bit(PAGEBIT(page), PAGE_UL_PTR(pageset2_map, page))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#225: FILE: kernel/power/suspend2_core/pageflags.h:65:
+#define PageAllocd(page)	\
+	test_bit(PAGEBIT(page), PAGE_UL_PTR(allocd_pages_map, page))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#227: FILE: kernel/power/suspend2_core/pageflags.h:67:
+#define SetPageAllocd(page) \
+	set_bit(PAGEBIT(page), PAGE_UL_PTR(allocd_pages_map, page))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#229: FILE: kernel/power/suspend2_core/pageflags.h:69:
+#define ClearPageAllocd(page) \
+	clear_bit(PAGEBIT(page), PAGE_UL_PTR(alloc_pages_map, page))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#232: FILE: kernel/power/suspend2_core/pageflags.h:72:
+#define SetPageUnmap(page) \
+	set_bit(PAGEBIT(page), PAGE_UL_PTR(unmap_map, page))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#234: FILE: kernel/power/suspend2_core/pageflags.h:74:
+#define PageUnmap(page) \
+	test_bit(PAGEBIT(page), PAGE_UL_PTR(unmap_map, page))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bitmap' - possible side-effects?
#237: FILE: kernel/power/suspend2_core/pageflags.h:77:
+#define BITMAP_FOR_EACH_SET(bitmap, counter) \
+	for (counter = __get_next_bit_on(bitmap, -1); counter < max_mapnr; \
+		counter = __get_next_bit_on(bitmap, counter))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'counter' - possible side-effects?
#237: FILE: kernel/power/suspend2_core/pageflags.h:77:
+#define BITMAP_FOR_EACH_SET(bitmap, counter) \
+	for (counter = __get_next_bit_on(bitmap, -1); counter < max_mapnr; \
+		counter = __get_next_bit_on(bitmap, counter))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#241: FILE: kernel/power/suspend2_core/pageflags.h:81:
+extern void save_dyn_pageflags(dyn_pageflags_t pagemap);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#242: FILE: kernel/power/suspend2_core/pageflags.h:82:
+extern void load_dyn_pageflags(dyn_pageflags_t pagemap);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170379.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 8 warnings, 29 checks, 210 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170379.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
