WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:9:
+ *      version 2 as published by the Free Software Foundation $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:14:
+ *^I$

WARNING:TYPO_SPELLING: 'Theoritical' may be misspelled - perhaps 'Theoretical'?
#76: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:15:
+ * Theoritical note:
    ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:24:
+ *^Ithe CPU enters an idle state. GX1 stops its core clock when SUSP# is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:27:
+ *^ISuspend Modulation's OFF/ON duration are configurable $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:30:
+ *^IThese registers are 8bit counters that represent the number of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#92: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:31:
+ *^I32us intervals which the SUSP# pin is asserted/de-asserted to the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:34:
+ *^IThese counters define a ratio which is the effective frequency $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#96: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:35:
+ * ^Iof operation of the system.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:43:
+ *^IFrom these limits, we can get register values $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:48:
+ *      on_duration  =  (freq * DURATION) / stock_freq $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:49:
+ *      off_duration = DURATION - on_duration $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#116: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:55:
+ *^IDec. 11, 2002 ^IHiroshi Miura <miura@da-cha.org>$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:56:
+ *^I^I- rewrite for Cyrix MediaGX Cx5510/5520 and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:73:
+#include <linux/module.h> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:79:
+#include <asm/processor.h> $

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#140: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:79:
+#include <asm/processor.h> 

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#148: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:87:
+#define PCI_VIDTC              0x8d    /* video speedup timer counter register: typical 50 to 100ms */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#154: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:93:
+#define GPM                    (1<<0)  /* global power management */
                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#154: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:93:
+#define GPM                    (1<<0)  /* global power management */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#155: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:94:
+#define GIT                    (1<<1)  /* globally enable PM device idle timers */
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#155: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:94:
+#define GIT                    (1<<1)  /* globally enable PM device idle timers */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#156: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:95:
+#define GTR                    (1<<2)  /* globally enable IO traps */
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#156: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:95:
+#define GTR                    (1<<2)  /* globally enable IO traps */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#157: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:96:
+#define IRQ_SPDUP              (1<<3)  /* disable clock throttle during interrupt handling */
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#157: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:96:
+#define IRQ_SPDUP              (1<<3)  /* disable clock throttle during interrupt handling */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#158: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:97:
+#define VID_SPDUP              (1<<4)  /* disable clock throttle during vga video handling */
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#158: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:97:
+#define VID_SPDUP              (1<<4)  /* disable clock throttle during vga video handling */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#161: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:100:
+#define SUSMOD                 (1<<0)  /* enable/disable suspend modulation */
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#161: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:100:
+#define SUSMOD                 (1<<0)  /* enable/disable suspend modulation */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:101:
+/* the belows support only with cs5530 (after rev.1.2)/cs5530A */ $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#163: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:102:
+#define SMISPDUP               (1<<1)  /* select how SMI re-enable suspend modulation: */
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#163: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:102:
+#define SMISPDUP               (1<<1)  /* select how SMI re-enable suspend modulation: */

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#164: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:103:
+                                       /* IRQTC timer or read SMI speedup disable reg.(F1BAR[08-09h]) */

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:103:
+                                       /* IRQTC timer or read SMI speedup disable reg.(F1BAR[08-09h]) */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#165: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:104:
+#define SUSCFG                 (1<<2)  /* enable powering down a GXLV processor. "Special 3Volt Suspend" mode */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#165: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:104:
+#define SUSCFG                 (1<<2)  /* enable powering down a GXLV processor. "Special 3Volt Suspend" mode */
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#165: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:104:
+#define SUSCFG                 (1<<2)  /* enable powering down a GXLV processor. "Special 3Volt Suspend" mode */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:105:
+/* the belows support only with cs5530A */ $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#167: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:106:
+#define PWRSVE_ISA             (1<<3)  /* stop ISA clock  */
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#167: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:106:
+#define PWRSVE_ISA             (1<<3)  /* stop ISA clock  */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#168: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:107:
+#define PWRSVE                 (1<<4)  /* active idle */
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#168: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:107:
+#define PWRSVE                 (1<<4)  /* active idle */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#185: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:124:
+static int pci_busclk = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:129:
+ * to 255. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#193: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:132:
+ * though. 781.25 kHz(!) for a 200 MHz processor -- wow. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#202: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:141:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#210: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:149:
+#define dprintk(msg...) printk(KERN_DEBUG "cpufreq:" msg)

ERROR:SPACING: space required before the open parenthesis '('
#212: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:151:
+#define dprintk(msg...) do { } while(0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#212: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:151:
+#define dprintk(msg...) do { } while(0);

do {} while(0) macros should not have a trailing semicolon.

WARNING:TYPO_SPELLING: 'multipiler' may be misspelled - perhaps 'multiplier'?
#216: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:155:
+ *      we can detect a core multipiler from dir0_lsb 
                              ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:155:
+ *      we can detect a core multipiler from dir0_lsb $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:156:
+ *      from GX1 datasheet p.56, $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#234: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:173:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#236: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:175:
+ * ^ILow Level chipset interface^I^I^I^I*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:178:
+        { PCI_VENDOR_ID_CYRIX, PCI_DEVICE_ID_CYRIX_5530_LEGACY, PCI_ANY_ID, PCI_ANY_ID },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:178:
+        { PCI_VENDOR_ID_CYRIX, PCI_DEVICE_ID_CYRIX_5530_LEGACY, PCI_ANY_ID, PCI_ANY_ID },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:179:
+        { PCI_VENDOR_ID_CYRIX, PCI_DEVICE_ID_CYRIX_5520, PCI_ANY_ID, PCI_ANY_ID },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:179:
+        { PCI_VENDOR_ID_CYRIX, PCI_DEVICE_ID_CYRIX_5520, PCI_ANY_ID, PCI_ANY_ID },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:180:
+        { PCI_VENDOR_ID_CYRIX, PCI_DEVICE_ID_CYRIX_5510, PCI_ANY_ID, PCI_ANY_ID },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:180:
+        { PCI_VENDOR_ID_CYRIX, PCI_DEVICE_ID_CYRIX_5510, PCI_ANY_ID, PCI_ANY_ID },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:181:
+        { 0, },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:181:
+        { 0, },$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:193:
+        if ((current_cpu_data.x86_vendor != X86_VENDOR_NSC) && $

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:193:
+        if ((current_cpu_data.x86_vendor != X86_VENDOR_NSC) && $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:193:
+        if ((current_cpu_data.x86_vendor != X86_VENDOR_NSC) && $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current_cpu_data.x86_vendor != X86_VENDOR_NSC'
#254: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:193:
+        if ((current_cpu_data.x86_vendor != X86_VENDOR_NSC) && 
+	    (current_cpu_data.x86_vendor != X86_VENDOR_CYRIX)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current_cpu_data.x86_vendor != X86_VENDOR_CYRIX'
#254: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:193:
+        if ((current_cpu_data.x86_vendor != X86_VENDOR_NSC) && 
+	    (current_cpu_data.x86_vendor != X86_VENDOR_CYRIX)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#256: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:195:
+		printk(KERN_INFO "gx-suspmod: error: no MediaGX/Geode processor found!\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:196:
+^I^Ireturn NULL;^I^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#262: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:201:
+		if ((pci_match_device (gx_chipset_tbl, gx_pci)) != NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#262: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:201:
+		if ((pci_match_device (gx_chipset_tbl, gx_pci)) != NULL) {
+			return gx_pci;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:217:
+^Iif ((gx_params->pci_suscfg & SUSMOD) == 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:220:
+^Ireturn (stock_freq * gx_params->on_duration) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:227:
+ *       $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#289: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:228:
+ *       
+**/

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#298: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:237:
+	*on_duration=1;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#299: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:238:
+	*off_duration=0;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#301: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:240:
+	for (i=max_duration; i>0; i--) {
 	      ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#301: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:240:
+	for (i=max_duration; i>0; i--) {
 	                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:241:
+^I^Itmp_on = ((khz * i) / stock_freq) & 0xff; $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#306: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:245:
+		 * prefer it, too - lower latency */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#317: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:256:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#319: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:258:
+ * ^Igx_set_cpuspeed:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#325: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:264:
+        u8 suscfg, pmer1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:264:
+        u8 suscfg, pmer1;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#330: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:269:
+
+

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#341: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:280:
+		pci_write_config_byte(gx_params->cs55x0, PCI_SUSCFG, (gx_params->pci_suscfg & ~(SUSMOD)));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around gx_params->pci_suscfg
#342: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:281:
+		pci_read_config_byte(gx_params->cs55x0, PCI_SUSCFG, &(gx_params->pci_suscfg));

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:318:
+        pci_write_config_byte(gx_params->cs55x0, PCI_SUSCFG, suscfg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:318:
+        pci_write_config_byte(gx_params->cs55x0, PCI_SUSCFG, suscfg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:319:
+        pci_read_config_byte(gx_params->cs55x0, PCI_SUSCFG, &suscfg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:319:
+        pci_read_config_byte(gx_params->cs55x0, PCI_SUSCFG, &suscfg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:321:
+        local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:321:
+        local_irq_restore(flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:327:
+        dprintk("suspend modulation w/ duration of ON:%d us, OFF:%d us\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:327:
+        dprintk("suspend modulation w/ duration of ON:%d us, OFF:%d us\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:328:
+                gx_params->on_duration * 32, gx_params->off_duration * 32);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:328:
+                gx_params->on_duration * 32, gx_params->off_duration * 32);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:329:
+^Idprintk("suspend modulation w/ clock speed: %d kHz.\n", freqs.new); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:337:
+ *^Icpufreq_gx_verify: test if frequency range is valid $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:339:
+ *^IThis function checks if a given frequency range in kHz is valid $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:340:
+ *      for the hardware supported by the driver. $

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:348:
+        if (!gx_driver || !stock_freq || !policy)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:348:
+        if (!gx_driver || !stock_freq || !policy)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:349:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:349:
+                return -EINVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#418: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:357:
+^I * policy->min may not be decreased, though. This way we guarantee a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:361:
+^Iif (tmp_freq < policy->min) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:364:
+^Iif (policy->min > policy->max) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#434: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:373:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#439: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:378:
+ *      cpufreq_gx_setpolicy:  $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#444: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:383:
+{
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#445: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:384:
+        if (!gx_driver || !stock_freq || !policy)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:384:
+        if (!gx_driver || !stock_freq || !policy)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#446: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:385:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:385:
+                return -EINVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#453: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:392:
+^I^I * cpufreq_gx_verify() - guarantee of processing $

WARNING:LINE_SPACING: Missing a blank line after declarations
#458: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:397:
+		unsigned int tmp_freq = gx_validate_speed(policy->min, &tmp1, &tmp2);
+		while (tmp_freq < policy->min) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#469: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:408:
+/* $

WARNING:TYPO_SPELLING: 'initilize' may be misspelled - perhaps 'initialize'?
#471: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:410:
+ *   MediaGX/Geode GX initilize cpufreq driver
                       ^^^^^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#476: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:415:
+	int maxfreq,ret,curfreq;
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#476: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:415:
+	int maxfreq,ret,curfreq;
 	               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:416:
+ ^Istruct cpufreq_driver *driver;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#477: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:416:
+ ^Istruct cpufreq_driver *driver;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:416:
+ ^Istruct cpufreq_driver *driver;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#483: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:422:
+^Iif ((gx_pci = gx_detect_chipset()) == NULL) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#483: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:422:
+	if ((gx_pci = gx_detect_chipset()) == NULL) 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#492: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:431:
+	driver = kmalloc(sizeof(struct cpufreq_driver) + NR_CPUS * sizeof(struct cpufreq_policy), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*driver)...) over kmalloc(sizeof(struct cpufreq_driver)...)
#492: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:431:
+	driver = kmalloc(sizeof(struct cpufreq_driver) + NR_CPUS * sizeof(struct cpufreq_policy), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#492: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:431:
+	driver = kmalloc(sizeof(struct cpufreq_driver) + NR_CPUS * sizeof(struct cpufreq_policy), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#493: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:432:
+^Iif (driver == NULL) $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!driver"
#493: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:432:
+	if (driver == NULL) 

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*params)...) over kmalloc(sizeof(struct gxfreq_params)...)
#495: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:434:
+	params = kmalloc(sizeof(struct gxfreq_params), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!params"
#496: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:435:
+	if (params == NULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around params->pci_suscfg
#505: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:444:
+	pci_read_config_byte(params->cs55x0, PCI_SUSCFG, &(params->pci_suscfg));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around params->pci_pmer1
#506: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:445:
+	pci_read_config_byte(params->cs55x0, PCI_PMER1, &(params->pci_pmer1));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around params->pci_pmer2
#507: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:446:
+	pci_read_config_byte(params->cs55x0, PCI_PMER2, &(params->pci_pmer2));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around params->on_duration
#508: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:447:
+	pci_read_config_byte(params->cs55x0, PCI_MODON, &(params->on_duration));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around params->off_duration
#509: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:448:
+	pci_read_config_byte(params->cs55x0, PCI_MODOFF, &(params->off_duration));

ERROR:CODE_INDENT: code indent should use tabs where possible
#510: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:449:
+        pci_read_config_dword(params->cs55x0, PCI_CLASS_REVISION, &class_rev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:449:
+        pci_read_config_dword(params->cs55x0, PCI_CLASS_REVISION, &class_rev);$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#516: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:455:
+	if (pci_busclk) {
[...]
+	} else if (cpu_khz) {
[...]
+	} else {
[...]

CHECK:CAMELCASE: Avoid CamelCase: <getCx86>
#517: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:456:
+		maxfreq = pci_busclk * gx_freq_mult[getCx86(CX86_DIR1) & 0x0f];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space required after that ',' (ctx:VxV)
#527: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:466:
+	dprintk("cpu current frequency is %dkHz.\n",curfreq);
 	                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#549: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:488:
+^Iif ((ret = cpufreq_register(driver))) { $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#549: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:488:
+	if ((ret = cpufreq_register(driver))) { 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#569: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:508:
+MODULE_AUTHOR ("Hiroshi Miura <miura@da-cha.org>");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#570: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:509:
+MODULE_DESCRIPTION ("Cpufreq driver for Cyrix MediaGX and NatSemi Geode");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#571: FILE: arch/i386/kernel/cpu/cpufreq/gx-suspmod.c:510:
+MODULE_LICENSE ("GPL");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000400258.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 67 errors, 45 warnings, 39 checks, 536 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000400258.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
