ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#72: FILE: libata-core.c:2397:
+static inline void ata_chk_spurious_int(struct ata_port *ap) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: libata-core.c:2399:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#75: FILE: libata-core.c:2400:
+	if (ap->flags & ATA_FLAG_MMIO) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#76: FILE: libata-core.c:2401:
+		void *mmio = (void *) ap->ioaddr.bmdma_addr;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#77: FILE: libata-core.c:2402:
+		void *mmio = (void *) ap->ioaddr.bmdma_addr;
+		host_stat = readb(mmio + ATA_DMA_STATUS);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#78: FILE: libata-core.c:2403:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: libata-core.c:2405:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#82: FILE: libata-core.c:2407:
+		if (ap->flags & ATA_FLAG_MMIO) {
[...]
+		} else
[...]

CHECK:SPACING: No space is necessary after a cast
#83: FILE: libata-core.c:2408:
+			void *mmio = (void *) ap->ioaddr.bmdma_addr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#84: FILE: libata-core.c:2409:
+			void *mmio = (void *) ap->ioaddr.bmdma_addr;
+			writeb(host_stat & ~ATA_DMA_ERR, mmio + ATA_DMA_STATUS);

CHECK:BRACES: Unbalanced braces around else statement
#85: FILE: libata-core.c:2410:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: libata-core.c:2412:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#93: FILE: libata-core.c:2418:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000311523.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 2 warnings, 7 checks, 44 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000311523.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
