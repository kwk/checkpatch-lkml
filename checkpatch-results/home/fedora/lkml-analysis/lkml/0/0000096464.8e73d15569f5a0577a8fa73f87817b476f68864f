WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
> 	http://www.kernel.org/pub/linux/kernel/people/gregkh/gregkh-2.6/patches/gregkh/sysfs-test.patch

WARNING:TYPO_SPELLING: 'Thnaks' may be misspelled - perhaps 'Thanks'?
#37: 
Thnaks for the testcase, I could verify the following patch using this. I
^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#74: FILE: fs/sysfs/dir.c:60:
+int is_sysfs_dirent_exist(struct sysfs_dirent * parent_sd,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#75: FILE: fs/sysfs/dir.c:61:
+int is_sysfs_dirent_exist(struct sysfs_dirent * parent_sd,
+						const unsigned char * new)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#75: FILE: fs/sysfs/dir.c:61:
+						const unsigned char * new)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#77: FILE: fs/sysfs/dir.c:63:
+	struct sysfs_dirent * sd;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#80: FILE: fs/sysfs/dir.c:66:
+		const unsigned char * existing = sysfs_get_name(sd);

WARNING:LINE_SPACING: Missing a blank line after declarations
#81: FILE: fs/sysfs/dir.c:67:
+		const unsigned char * existing = sysfs_get_name(sd);
+		if (strcmp(existing, new))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#90: FILE: fs/sysfs/dir.c:76:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: fs/sysfs/dir.c:129:
+ ^I^Iif (is_sysfs_dirent_exist(p->d_fsdata, n))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#99: FILE: fs/sysfs/dir.c:129:
+ ^I^Iif (is_sysfs_dirent_exist(p->d_fsdata, n))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: fs/sysfs/dir.c:129:
+ ^I^Iif (is_sysfs_dirent_exist(p->d_fsdata, n))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: fs/sysfs/dir.c:130:
+  ^I^I^Ierror = -EEXIST;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#100: FILE: fs/sysfs/dir.c:130:
+  ^I^I^Ierror = -EEXIST;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: fs/sysfs/dir.c:130:
+  ^I^I^Ierror = -EEXIST;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: fs/sysfs/dir.c:131:
+  ^I^Ielse$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#101: FILE: fs/sysfs/dir.c:131:
+  ^I^Ielse$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: fs/sysfs/dir.c:131:
+  ^I^Ielse$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: fs/sysfs/dir.c:133:
+			error = sysfs_make_dirent(p->d_fsdata, *d, k, mode,
+								SYSFS_DIR);

CHECK:SPACING: No space is necessary after a cast
#116: FILE: fs/sysfs/file.c:369:
+		error = sysfs_make_dirent(parent_sd, NULL, (void *) attr,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: fs/sysfs/file.c:370:
+		error = sysfs_make_dirent(parent_sd, NULL, (void *) attr,
+								mode, type);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#141: FILE: fs/sysfs/sysfs.h:8:
+extern int is_sysfs_dirent_exist(struct sysfs_dirent *, const unsigned char * );

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#141: FILE: fs/sysfs/sysfs.h:8:
+extern int is_sysfs_dirent_exist(struct sysfs_dirent *, const unsigned char * );

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sysfs_dirent *' should also have an identifier name
#141: FILE: fs/sysfs/sysfs.h:8:
+extern int is_sysfs_dirent_exist(struct sysfs_dirent *, const unsigned char * );

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const unsigned char *' should also have an identifier name
#141: FILE: fs/sysfs/sysfs.h:8:
+extern int is_sysfs_dirent_exist(struct sysfs_dirent *, const unsigned char * );

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000096464.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 11 warnings, 6 checks, 68 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000096464.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
