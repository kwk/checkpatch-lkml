WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#70: 
diff -urN linux-2.6.13-rc5-pcsp-kern/arch/i386/kernel/time.c linux-2.6.13-rc5-pcsp/arch/i386/kernel/time.c

CHECK:LINE_SPACING: Please don't use multiple blank lines
#102: FILE: arch/i386/kernel/time.c:279:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#158: FILE: arch/i386/mach-visws/setup.c:124:
+	co_cpu_write(CO_CPU_STAT,co_cpu_read(CO_CPU_STAT) & ~CO_STAT_TIMEINTR);
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#162: FILE: arch/i386/mach-visws/setup.c:128:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#355: FILE: include/asm-i386/voyager.h:508:
+extern int voyager_timer_interrupt(struct pt_regs *regs);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#400: FILE: include/linux/sched.h:1008:
+extern int do_timer(struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#400: FILE: include/linux/sched.h:1008:
+extern int do_timer(struct pt_regs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#416: FILE: include/linux/timer.h:101:
+};
+extern void do_timer_interrupt_hook(struct pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#416: FILE: include/linux/timer.h:101:
+extern void do_timer_interrupt_hook(struct pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#417: FILE: include/linux/timer.h:102:
+extern void setup_timer_hook(struct timer_hook *hook);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#418: FILE: include/linux/timer.h:103:
+extern void remove_timer_hook(struct timer_hook *hook);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#419: FILE: include/linux/timer.h:104:
+extern void *register_timer_hook(int (*hook)(struct pt_regs *));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#420: FILE: include/linux/timer.h:105:
+extern void unregister_timer_hook(void *hook_ptr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#421: FILE: include/linux/timer.h:106:
+extern int grab_timer_hook(void *hook_ptr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#422: FILE: include/linux/timer.h:107:
+extern void ungrab_timer_hook(void *hook_ptr);

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#482: FILE: kernel/timer.c:99:
+	spinlock_t lock;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#484: FILE: kernel/timer.c:101:
+};
+static struct timer_hook_list timer_hook_list;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#519: FILE: kernel/timer.c:1667:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#525: FILE: kernel/timer.c:1673:
+	int done = 0;
+	if (unlikely(timer_hook_list.grab))

WARNING:LINE_SPACING: Missing a blank line after declarations
#551: FILE: kernel/timer.c:1699:
+	struct timer_hook *ptr;
+	ptr = kmalloc(sizeof(struct timer_hook), GFP_ATOMIC);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ptr)...) over kmalloc(sizeof(struct timer_hook)...)
#551: FILE: kernel/timer.c:1699:
+	ptr = kmalloc(sizeof(struct timer_hook), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LINE_SPACING: Missing a blank line after declarations
#561: FILE: kernel/timer.c:1709:
+	struct timer_hook *ptr = (struct timer_hook *)hook_ptr;
+	remove_timer_hook(ptr);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#579: FILE: kernel/timer.c:1727:
+EXPORT_SYMBOL_GPL(setup_timer_hook);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#580: FILE: kernel/timer.c:1728:
+EXPORT_SYMBOL_GPL(remove_timer_hook);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#581: FILE: kernel/timer.c:1729:
+EXPORT_SYMBOL_GPL(register_timer_hook);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#582: FILE: kernel/timer.c:1730:
+EXPORT_SYMBOL_GPL(unregister_timer_hook);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#583: FILE: kernel/timer.c:1731:
+EXPORT_SYMBOL_GPL(grab_timer_hook);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#584: FILE: kernel/timer.c:1732:
+EXPORT_SYMBOL_GPL(ungrab_timer_hook);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000159928.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 11 warnings, 16 checks, 445 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000159928.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
