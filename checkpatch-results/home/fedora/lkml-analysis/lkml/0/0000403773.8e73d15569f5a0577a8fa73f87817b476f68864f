WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
diff -urpN --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal .1000-2.5-bk-section-ordering.pre/arch/arm/kernel/module.c .1000-2.5-bk-section-ordering/arch/arm/kernel/module.c

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Ehdr>
#65: FILE: arch/arm/kernel/module.c:70:
+int module_frob_arch_sections(const Elf_Ehdr *hdr,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Shdr>
#66: FILE: arch/arm/kernel/module.c:71:
+			      const Elf_Shdr *sechdrs,

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Ehdr>
#115: FILE: arch/ppc/kernel/module.c:104:
+int module_frob_arch_sections(Elf32_Ehdr *hdr,

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Shdr>
#116: FILE: arch/ppc/kernel/module.c:105:
+			      Elf32_Shdr *sechdrs,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#142: FILE: arch/ppc/kernel/module.c:119:
+		printk("Module doesn't contain .plt or .plt.init sections.\n");

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#148: FILE: arch/ppc/kernel/module.c:125:
+	sechdrs[me->arch.core_plt_section].sh_size
+		= get_plt_size(hdr, sechdrs, secstrings, 0);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#150: FILE: arch/ppc/kernel/module.c:127:
+	sechdrs[me->arch.init_plt_section].sh_size
+		= get_plt_size(hdr, sechdrs, secstrings, 1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: arch/ppc/kernel/module.c:152:
+^I^I^I    Elf32_Addr val, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Addr>
#161: FILE: arch/ppc/kernel/module.c:152:
+			    Elf32_Addr val, 

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#172: FILE: arch/ppc/kernel/module.c:161:
 	if (location >= mod->module_core
+	    && location < mod->module_core + mod->core_size)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#429: FILE: kernel/module.c:49:
+#define INIT_OFFSET_MASK (1UL << (BITS_PER_LONG-1))
                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#522: FILE: kernel/module.c:882:
+/* Lay out the SHF_ALLOC sections in a way not dissimilar to how ld
+   might -- code, read-only data, read-write data, small data.  Tally

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#524: FILE: kernel/module.c:884:
+   belongs in init. */

WARNING:STATIC_CONST: Move const after static - use 'static const unsigned long'
#530: FILE: kernel/module.c:890:
+	static unsigned long const masks[][2] = {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#551: FILE: kernel/module.c:907:
+			if ((s->sh_flags & masks[m][0]) != masks[m][0]
+			    || (s->sh_flags & masks[m][1])

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#552: FILE: kernel/module.c:908:
+			    || (s->sh_flags & masks[m][1])
+			    || s->sh_link != ~0UL

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#553: FILE: kernel/module.c:909:
+			    || s->sh_link != ~0UL
+			    || strstr(secstrings + s->sh_name, ".init"))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#567: FILE: kernel/module.c:922:
+			if ((s->sh_flags & masks[m][0]) != masks[m][0]
+			    || (s->sh_flags & masks[m][1])

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#568: FILE: kernel/module.c:923:
+			    || (s->sh_flags & masks[m][1])
+			    || s->sh_link != ~0UL

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#569: FILE: kernel/module.c:924:
+			    || s->sh_link != ~0UL
+			    || !strstr(secstrings + s->sh_name, ".init"))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#611: FILE: kernel/module.c:1070:
+	/* Determine total sizes, and put offsets in sh_link.  For now
+	   this is done generically; there doesn't appear to be any

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#612: FILE: kernel/module.c:1071:
+	   special cases for the architectures. */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000403773.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 7 warnings, 15 checks, 561 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000403773.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
