ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: fs/binfmt_elf.c:195:
+ ^INEW_AUX_ENT(AT_SECURE, (elf_addr_t) security_bprm_secureexec(bprm));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#67: FILE: fs/binfmt_elf.c:195:
+ ^INEW_AUX_ENT(AT_SECURE, (elf_addr_t) security_bprm_secureexec(bprm));$

CHECK:SPACING: No space is necessary after a cast
#67: FILE: fs/binfmt_elf.c:195:
+ 	NEW_AUX_ENT(AT_SECURE, (elf_addr_t) security_bprm_secureexec(bprm));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: fs/binfmt_elf.c:195:
+ ^INEW_AUX_ENT(AT_SECURE, (elf_addr_t) security_bprm_secureexec(bprm));$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#92: FILE: include/linux/security.h:48:
+extern int cap_bprm_secureexec(struct linux_binprm *bprm);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: include/linux/security.h:136:
+ *      Return a boolean value (0 or 1) indicating whether a "secure exec" $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: include/linux/security.h:138:
+ *      on the initial stack to the ELF interpreter to indicate whether libc $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#113: FILE: include/linux/security.h:998:
+	int (*bprm_secureexec) (struct linux_binprm * bprm);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#113: FILE: include/linux/security.h:998:
+	int (*bprm_secureexec) (struct linux_binprm * bprm);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#127: FILE: include/linux/security.h:1263:
+static inline int security_bprm_secureexec (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#129: FILE: include/linux/security.h:1265:
+	return security_ops->bprm_secureexec (bprm);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#141: FILE: include/linux/security.h:1924:
+static inline int security_bprm_secureexec (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#155: FILE: security/capability.c:161:
+int cap_bprm_secureexec (struct linux_binprm *bprm)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: security/capability.c:164:
+^I   bits on files, the test below should be extended to also perform a $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#158: FILE: security/capability.c:164:
+	/* If/when this module is enhanced to incorporate capability
+	   bits on files, the test below should be extended to also perform a 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#161: FILE: security/capability.c:167:
+	   the old userland. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#193: FILE: security/dummy.c:125:
+static int dummy_bprm_secureexec (struct linux_binprm *bprm)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#196: FILE: security/dummy.c:128:
+	/* The new userland will simply use the value provided
+	   in the AT_SECURE field to decide whether secure mode

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#198: FILE: security/dummy.c:130:
+	   the legacy decision algorithm used by the old userland. */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000362048.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 12 warnings, 2 checks, 130 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000362048.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
