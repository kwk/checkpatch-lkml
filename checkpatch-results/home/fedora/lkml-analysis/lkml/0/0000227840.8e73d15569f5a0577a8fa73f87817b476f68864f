WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
diff -ruN 852-lzf-old/kernel/power/lzf/lzf_c.c 852-lzf-new/kernel/power/lzf/lzf_c.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#35: FILE: kernel/power/lzf/lzf_c.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#37: FILE: kernel/power/lzf/lzf_c.c:3:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#40: FILE: kernel/power/lzf/lzf_c.c:6:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#43: FILE: kernel/power/lzf/lzf_c.c:9:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#47: FILE: kernel/power/lzf/lzf_c.c:13:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#50: FILE: kernel/power/lzf/lzf_c.c:16:
+ * $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#81: FILE: kernel/power/lzf/lzf_c.c:47:
+#define FRST(p) (((p[0]) << 8) + p[1])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#82: FILE: kernel/power/lzf/lzf_c.c:48:
+#define NEXT(v,p) (((v) << 8) + p[2])
               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p' may be better as '(p)' to avoid precedence issues
#82: FILE: kernel/power/lzf/lzf_c.c:48:
+#define NEXT(v,p) (((v) << 8) + p[2])

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#83: FILE: kernel/power/lzf/lzf_c.c:49:
+#define IDX(h) ((((h ^ (h << 5)) >> (3*8 - HLOG)) + h*3) & (HSIZE - 1))
                                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#83: FILE: kernel/power/lzf/lzf_c.c:49:
+#define IDX(h) ((((h ^ (h << 5)) >> (3*8 - HLOG)) + h*3) & (HSIZE - 1))
                                                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'h' - possible side-effects?
#83: FILE: kernel/power/lzf/lzf_c.c:49:
+#define IDX(h) ((((h ^ (h << 5)) >> (3*8 - HLOG)) + h*3) & (HSIZE - 1))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'h' may be better as '(h)' to avoid precedence issues
#83: FILE: kernel/power/lzf/lzf_c.c:49:
+#define IDX(h) ((((h ^ (h << 5)) >> (3*8 - HLOG)) + h*3) & (HSIZE - 1))

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#91: FILE: kernel/power/lzf/lzf_c.c:57:
+#if 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#93: FILE: kernel/power/lzf/lzf_c.c:59:
+# define FRST(p) (p[0] << 5) ^ p[1]

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#93: FILE: kernel/power/lzf/lzf_c.c:59:
+# define FRST(p) (p[0] << 5) ^ p[1]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#94: FILE: kernel/power/lzf/lzf_c.c:60:
+# define NEXT(v,p) ((v) << 5) ^ p[2]
                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#94: FILE: kernel/power/lzf/lzf_c.c:60:
+# define NEXT(v,p) ((v) << 5) ^ p[2]

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p' may be better as '(p)' to avoid precedence issues
#94: FILE: kernel/power/lzf/lzf_c.c:60:
+# define NEXT(v,p) ((v) << 5) ^ p[2]

CHECK:BIT_MACRO: Prefer using the BIT macro
#98: FILE: kernel/power/lzf/lzf_c.c:64:
+#define        MAX_LIT        (1 <<  5)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#99: FILE: kernel/power/lzf/lzf_c.c:65:
+#define        MAX_OFF        (1 << 13)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#112: FILE: kernel/power/lzf/lzf_c.c:78:
+lzf_compress (const void *const in_data, unsigned int in_len,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: kernel/power/lzf/lzf_c.c:81:
+  const u8 **htab = hbuf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: kernel/power/lzf/lzf_c.c:82:
+  const u8 **hslot;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: kernel/power/lzf/lzf_c.c:83:
+  const u8 *ip = (const u8 *)in_data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: kernel/power/lzf/lzf_c.c:84:
+        u8 *op = (u8 *)out_data;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: kernel/power/lzf/lzf_c.c:84:
+        u8 *op = (u8 *)out_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: kernel/power/lzf/lzf_c.c:85:
+  const u8 *in_end  = ip + in_len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: kernel/power/lzf/lzf_c.c:86:
+        u8 *out_end = op + out_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: kernel/power/lzf/lzf_c.c:86:
+        u8 *out_end = op + out_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: kernel/power/lzf/lzf_c.c:87:
+  const u8 *ref;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: kernel/power/lzf/lzf_c.c:89:
+  unsigned int hval = FRST (ip);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#123: FILE: kernel/power/lzf/lzf_c.c:89:
+  unsigned int hval = FRST (ip);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: kernel/power/lzf/lzf_c.c:90:
+  unsigned long off;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: kernel/power/lzf/lzf_c.c:91:
+           int lit = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: kernel/power/lzf/lzf_c.c:91:
+           int lit = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: kernel/power/lzf/lzf_c.c:95:
+    memset (htab, 0, sizeof (htab));$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#129: FILE: kernel/power/lzf/lzf_c.c:95:
+    memset (htab, 0, sizeof (htab));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#129: FILE: kernel/power/lzf/lzf_c.c:95:
+    memset (htab, 0, sizeof (htab));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: kernel/power/lzf/lzf_c.c:97:
+    for (hslot = htab; hslot < htab + HSIZE; hslot++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#131: FILE: kernel/power/lzf/lzf_c.c:97:
+    for (hslot = htab; hslot < htab + HSIZE; hslot++)
+      *hslot++ = ip;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: kernel/power/lzf/lzf_c.c:98:
+      *hslot++ = ip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: kernel/power/lzf/lzf_c.c:102:
+  for (;;)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#136: FILE: kernel/power/lzf/lzf_c.c:102:
+  for (;;)
+    {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#136: FILE: kernel/power/lzf/lzf_c.c:102:
+  for (;;)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: kernel/power/lzf/lzf_c.c:103:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: kernel/power/lzf/lzf_c.c:104:
+      if (ip < in_end - 2)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#138: FILE: kernel/power/lzf/lzf_c.c:104:
+      if (ip < in_end - 2)
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#138: FILE: kernel/power/lzf/lzf_c.c:104:
+      if (ip < in_end - 2)
+        {

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: kernel/power/lzf/lzf_c.c:105:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: kernel/power/lzf/lzf_c.c:105:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: kernel/power/lzf/lzf_c.c:106:
+          hval = NEXT (hval, ip);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: kernel/power/lzf/lzf_c.c:106:
+          hval = NEXT (hval, ip);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#140: FILE: kernel/power/lzf/lzf_c.c:106:
+          hval = NEXT (hval, ip);

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: kernel/power/lzf/lzf_c.c:107:
+          hslot = htab + IDX (hval);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: kernel/power/lzf/lzf_c.c:107:
+          hslot = htab + IDX (hval);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#141: FILE: kernel/power/lzf/lzf_c.c:107:
+          hslot = htab + IDX (hval);

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: kernel/power/lzf/lzf_c.c:108:
+          ref = *hslot; *hslot = ip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: kernel/power/lzf/lzf_c.c:108:
+          ref = *hslot; *hslot = ip;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: kernel/power/lzf/lzf_c.c:110:
+          if (1$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: kernel/power/lzf/lzf_c.c:110:
+          if (1$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#144: FILE: kernel/power/lzf/lzf_c.c:110:
+          if (1

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#144: FILE: kernel/power/lzf/lzf_c.c:110:
+          if (1
[...]
+              && *(u16 *)ref == *(u16 *)ip

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: kernel/power/lzf/lzf_c.c:112:
+              && ref < ip /* the next test will actually take care of this, but this is faster */$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#146: FILE: kernel/power/lzf/lzf_c.c:112:
+#if INIT_HTAB && !USE_MEMCPY
+              && ref < ip /* the next test will actually take care of this, but this is faster */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: kernel/power/lzf/lzf_c.c:112:
+              && ref < ip /* the next test will actually take care of this, but this is faster */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: kernel/power/lzf/lzf_c.c:114:
+              && (off = ip - ref - 1) < MAX_OFF$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#148: FILE: kernel/power/lzf/lzf_c.c:114:
+#endif
+              && (off = ip - ref - 1) < MAX_OFF

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: kernel/power/lzf/lzf_c.c:114:
+              && (off = ip - ref - 1) < MAX_OFF$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: kernel/power/lzf/lzf_c.c:115:
+              && ip + 4 < in_end$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#149: FILE: kernel/power/lzf/lzf_c.c:115:
+              && (off = ip - ref - 1) < MAX_OFF
+              && ip + 4 < in_end

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: kernel/power/lzf/lzf_c.c:115:
+              && ip + 4 < in_end$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: kernel/power/lzf/lzf_c.c:116:
+              && ref > (u8 *)in_data$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#150: FILE: kernel/power/lzf/lzf_c.c:116:
+              && ip + 4 < in_end
+              && ref > (u8 *)in_data

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: kernel/power/lzf/lzf_c.c:116:
+              && ref > (u8 *)in_data$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: kernel/power/lzf/lzf_c.c:118:
+              && ref[0] == ip[0]$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#152: FILE: kernel/power/lzf/lzf_c.c:118:
+#if STRICT_ALIGN
+              && ref[0] == ip[0]

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: kernel/power/lzf/lzf_c.c:118:
+              && ref[0] == ip[0]$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: kernel/power/lzf/lzf_c.c:119:
+              && ref[1] == ip[1]$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#153: FILE: kernel/power/lzf/lzf_c.c:119:
+              && ref[0] == ip[0]
+              && ref[1] == ip[1]

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: kernel/power/lzf/lzf_c.c:119:
+              && ref[1] == ip[1]$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: kernel/power/lzf/lzf_c.c:120:
+              && ref[2] == ip[2]$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#154: FILE: kernel/power/lzf/lzf_c.c:120:
+              && ref[1] == ip[1]
+              && ref[2] == ip[2]

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: kernel/power/lzf/lzf_c.c:120:
+              && ref[2] == ip[2]$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: kernel/power/lzf/lzf_c.c:122:
+              && *(u16 *)ref == *(u16 *)ip$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#156: FILE: kernel/power/lzf/lzf_c.c:122:
+#else
+              && *(u16 *)ref == *(u16 *)ip

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: kernel/power/lzf/lzf_c.c:122:
+              && *(u16 *)ref == *(u16 *)ip$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: kernel/power/lzf/lzf_c.c:123:
+              && ref[2] == ip[2]$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#157: FILE: kernel/power/lzf/lzf_c.c:123:
+              && *(u16 *)ref == *(u16 *)ip
+              && ref[2] == ip[2]

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: kernel/power/lzf/lzf_c.c:123:
+              && ref[2] == ip[2]$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: kernel/power/lzf/lzf_c.c:125:
+            )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: kernel/power/lzf/lzf_c.c:125:
+            )$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: kernel/power/lzf/lzf_c.c:126:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: kernel/power/lzf/lzf_c.c:126:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: kernel/power/lzf/lzf_c.c:127:
+              /* match found at *ref++ */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: kernel/power/lzf/lzf_c.c:128:
+              unsigned int len = 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: kernel/power/lzf/lzf_c.c:128:
+              unsigned int len = 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: kernel/power/lzf/lzf_c.c:129:
+              unsigned int maxlen = in_end - ip - len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: kernel/power/lzf/lzf_c.c:129:
+              unsigned int maxlen = in_end - ip - len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: kernel/power/lzf/lzf_c.c:130:
+              maxlen = maxlen > MAX_REF ? MAX_REF : maxlen;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#164: FILE: kernel/power/lzf/lzf_c.c:130:
+              unsigned int maxlen = in_end - ip - len;
+              maxlen = maxlen > MAX_REF ? MAX_REF : maxlen;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: kernel/power/lzf/lzf_c.c:130:
+              maxlen = maxlen > MAX_REF ? MAX_REF : maxlen;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: kernel/power/lzf/lzf_c.c:132:
+              do$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: kernel/power/lzf/lzf_c.c:132:
+              do$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: kernel/power/lzf/lzf_c.c:133:
+                len++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: kernel/power/lzf/lzf_c.c:133:
+                len++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: kernel/power/lzf/lzf_c.c:134:
+              while (len < maxlen && ref[len] == ip[len]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: kernel/power/lzf/lzf_c.c:134:
+              while (len < maxlen && ref[len] == ip[len]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: kernel/power/lzf/lzf_c.c:136:
+              if (op + lit + 1 + 3 >= out_end)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: kernel/power/lzf/lzf_c.c:136:
+              if (op + lit + 1 + 3 >= out_end)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: kernel/power/lzf/lzf_c.c:137:
+                return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: kernel/power/lzf/lzf_c.c:137:
+                return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: kernel/power/lzf/lzf_c.c:139:
+              if (lit)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: kernel/power/lzf/lzf_c.c:139:
+              if (lit)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#173: FILE: kernel/power/lzf/lzf_c.c:139:
+              if (lit)
+                {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 18)
#173: FILE: kernel/power/lzf/lzf_c.c:139:
+              if (lit)
+                {

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: kernel/power/lzf/lzf_c.c:140:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: kernel/power/lzf/lzf_c.c:140:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: kernel/power/lzf/lzf_c.c:141:
+                  *op++ = lit - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: kernel/power/lzf/lzf_c.c:141:
+                  *op++ = lit - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: kernel/power/lzf/lzf_c.c:142:
+                  lit = -lit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: kernel/power/lzf/lzf_c.c:142:
+                  lit = -lit;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: kernel/power/lzf/lzf_c.c:143:
+                  do$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: kernel/power/lzf/lzf_c.c:143:
+                  do$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (18, 20)
#177: FILE: kernel/power/lzf/lzf_c.c:143:
+                  do
+                    *op++ = ip[lit];

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: kernel/power/lzf/lzf_c.c:144:
+                    *op++ = ip[lit];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: kernel/power/lzf/lzf_c.c:144:
+                    *op++ = ip[lit];$

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#178: FILE: kernel/power/lzf/lzf_c.c:144:
+                    *op++ = ip[lit];
                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: kernel/power/lzf/lzf_c.c:145:
+                  while (++lit);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: kernel/power/lzf/lzf_c.c:145:
+                  while (++lit);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: kernel/power/lzf/lzf_c.c:146:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: kernel/power/lzf/lzf_c.c:146:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: kernel/power/lzf/lzf_c.c:148:
+              len -= 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: kernel/power/lzf/lzf_c.c:148:
+              len -= 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: kernel/power/lzf/lzf_c.c:149:
+              ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: kernel/power/lzf/lzf_c.c:149:
+              ip++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: kernel/power/lzf/lzf_c.c:151:
+              if (len < 7)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: kernel/power/lzf/lzf_c.c:151:
+              if (len < 7)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#185: FILE: kernel/power/lzf/lzf_c.c:151:
+              if (len < 7)
+                {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 18)
#185: FILE: kernel/power/lzf/lzf_c.c:151:
+              if (len < 7)
+                {

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: kernel/power/lzf/lzf_c.c:152:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: kernel/power/lzf/lzf_c.c:152:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: kernel/power/lzf/lzf_c.c:153:
+                  *op++ = (off >> 8) + (len << 5);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: kernel/power/lzf/lzf_c.c:153:
+                  *op++ = (off >> 8) + (len << 5);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: kernel/power/lzf/lzf_c.c:154:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: kernel/power/lzf/lzf_c.c:154:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: kernel/power/lzf/lzf_c.c:155:
+              else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: kernel/power/lzf/lzf_c.c:155:
+              else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#189: FILE: kernel/power/lzf/lzf_c.c:155:
+              else
+                {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 18)
#189: FILE: kernel/power/lzf/lzf_c.c:155:
+              else
+                {

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: kernel/power/lzf/lzf_c.c:156:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: kernel/power/lzf/lzf_c.c:156:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: kernel/power/lzf/lzf_c.c:157:
+                  *op++ = (off >> 8) + (  7 << 5);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: kernel/power/lzf/lzf_c.c:157:
+                  *op++ = (off >> 8) + (  7 << 5);$

ERROR:SPACING: space prohibited after that open parenthesis '('
#191: FILE: kernel/power/lzf/lzf_c.c:157:
+                  *op++ = (off >> 8) + (  7 << 5);

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: kernel/power/lzf/lzf_c.c:158:
+                  *op++ = len - 7;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: kernel/power/lzf/lzf_c.c:158:
+                  *op++ = len - 7;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: kernel/power/lzf/lzf_c.c:159:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: kernel/power/lzf/lzf_c.c:159:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: kernel/power/lzf/lzf_c.c:161:
+              *op++ = off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: kernel/power/lzf/lzf_c.c:161:
+              *op++ = off;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: kernel/power/lzf/lzf_c.c:164:
+              ip += len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: kernel/power/lzf/lzf_c.c:164:
+              ip += len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: kernel/power/lzf/lzf_c.c:165:
+              hval = FRST (ip);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: kernel/power/lzf/lzf_c.c:165:
+              hval = FRST (ip);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#199: FILE: kernel/power/lzf/lzf_c.c:165:
+              hval = FRST (ip);

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: kernel/power/lzf/lzf_c.c:166:
+              hval = NEXT (hval, ip);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: kernel/power/lzf/lzf_c.c:166:
+              hval = NEXT (hval, ip);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#200: FILE: kernel/power/lzf/lzf_c.c:166:
+              hval = NEXT (hval, ip);

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: kernel/power/lzf/lzf_c.c:167:
+              htab[IDX (hval)] = ip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: kernel/power/lzf/lzf_c.c:167:
+              htab[IDX (hval)] = ip;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#201: FILE: kernel/power/lzf/lzf_c.c:167:
+              htab[IDX (hval)] = ip;

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: kernel/power/lzf/lzf_c.c:168:
+              ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: kernel/power/lzf/lzf_c.c:168:
+              ip++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: kernel/power/lzf/lzf_c.c:170:
+              do$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: kernel/power/lzf/lzf_c.c:170:
+              do$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#204: FILE: kernel/power/lzf/lzf_c.c:170:
+              do
+                {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 18)
#204: FILE: kernel/power/lzf/lzf_c.c:170:
+              do
+                {

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: kernel/power/lzf/lzf_c.c:171:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: kernel/power/lzf/lzf_c.c:171:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: kernel/power/lzf/lzf_c.c:172:
+                  hval = NEXT (hval, ip);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: kernel/power/lzf/lzf_c.c:172:
+                  hval = NEXT (hval, ip);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#206: FILE: kernel/power/lzf/lzf_c.c:172:
+                  hval = NEXT (hval, ip);

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: kernel/power/lzf/lzf_c.c:173:
+                  htab[IDX (hval)] = ip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: kernel/power/lzf/lzf_c.c:173:
+                  htab[IDX (hval)] = ip;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#207: FILE: kernel/power/lzf/lzf_c.c:173:
+                  htab[IDX (hval)] = ip;

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: kernel/power/lzf/lzf_c.c:174:
+                  ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: kernel/power/lzf/lzf_c.c:174:
+                  ip++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: kernel/power/lzf/lzf_c.c:175:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: kernel/power/lzf/lzf_c.c:175:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: kernel/power/lzf/lzf_c.c:176:
+              while (len--);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: kernel/power/lzf/lzf_c.c:176:
+              while (len--);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: kernel/power/lzf/lzf_c.c:178:
+              continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: kernel/power/lzf/lzf_c.c:178:
+              continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: kernel/power/lzf/lzf_c.c:179:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: kernel/power/lzf/lzf_c.c:179:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: kernel/power/lzf/lzf_c.c:180:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: kernel/power/lzf/lzf_c.c:180:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: kernel/power/lzf/lzf_c.c:181:
+      else if (ip == in_end)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: kernel/power/lzf/lzf_c.c:182:
+        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: kernel/power/lzf/lzf_c.c:182:
+        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: kernel/power/lzf/lzf_c.c:185:
+      lit++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: kernel/power/lzf/lzf_c.c:186:
+      ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: kernel/power/lzf/lzf_c.c:188:
+      if (lit == MAX_LIT)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#222: FILE: kernel/power/lzf/lzf_c.c:188:
+      if (lit == MAX_LIT)
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#222: FILE: kernel/power/lzf/lzf_c.c:188:
+      if (lit == MAX_LIT)
+        {

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: kernel/power/lzf/lzf_c.c:189:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: kernel/power/lzf/lzf_c.c:189:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: kernel/power/lzf/lzf_c.c:190:
+          if (op + 1 + MAX_LIT >= out_end)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: kernel/power/lzf/lzf_c.c:190:
+          if (op + 1 + MAX_LIT >= out_end)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#224: FILE: kernel/power/lzf/lzf_c.c:190:
+          if (op + 1 + MAX_LIT >= out_end)
+            return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: kernel/power/lzf/lzf_c.c:191:
+            return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: kernel/power/lzf/lzf_c.c:191:
+            return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: kernel/power/lzf/lzf_c.c:193:
+          *op++ = MAX_LIT - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: kernel/power/lzf/lzf_c.c:193:
+          *op++ = MAX_LIT - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: kernel/power/lzf/lzf_c.c:195:
+          memcpy (op, ip - MAX_LIT, MAX_LIT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: kernel/power/lzf/lzf_c.c:195:
+          memcpy (op, ip - MAX_LIT, MAX_LIT);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#229: FILE: kernel/power/lzf/lzf_c.c:195:
+          memcpy (op, ip - MAX_LIT, MAX_LIT);

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: kernel/power/lzf/lzf_c.c:196:
+          op += MAX_LIT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: kernel/power/lzf/lzf_c.c:196:
+          op += MAX_LIT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: kernel/power/lzf/lzf_c.c:197:
+          lit = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: kernel/power/lzf/lzf_c.c:197:
+          lit = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: kernel/power/lzf/lzf_c.c:199:
+          lit = -lit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: kernel/power/lzf/lzf_c.c:199:
+          lit = -lit;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: kernel/power/lzf/lzf_c.c:200:
+          do$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: kernel/power/lzf/lzf_c.c:200:
+          do$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#234: FILE: kernel/power/lzf/lzf_c.c:200:
+          do
+            *op++ = ip[lit];

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: kernel/power/lzf/lzf_c.c:201:
+            *op++ = ip[lit];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: kernel/power/lzf/lzf_c.c:201:
+            *op++ = ip[lit];$

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#235: FILE: kernel/power/lzf/lzf_c.c:201:
+            *op++ = ip[lit];
             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: kernel/power/lzf/lzf_c.c:202:
+          while (++lit);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: kernel/power/lzf/lzf_c.c:202:
+          while (++lit);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: kernel/power/lzf/lzf_c.c:204:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: kernel/power/lzf/lzf_c.c:204:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: kernel/power/lzf/lzf_c.c:205:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: kernel/power/lzf/lzf_c.c:207:
+  if (lit)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#241: FILE: kernel/power/lzf/lzf_c.c:207:
+  if (lit)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#241: FILE: kernel/power/lzf/lzf_c.c:207:
+  if (lit)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: kernel/power/lzf/lzf_c.c:208:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: kernel/power/lzf/lzf_c.c:209:
+      if (op + lit + 1 >= out_end)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: kernel/power/lzf/lzf_c.c:212:
+      *op++ = lit - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: kernel/power/lzf/lzf_c.c:213:
+      lit = -lit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: kernel/power/lzf/lzf_c.c:214:
+      do$

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#249: FILE: kernel/power/lzf/lzf_c.c:215:
+	*op++ = ip[lit];
 	^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: kernel/power/lzf/lzf_c.c:216:
+      while (++lit);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: kernel/power/lzf/lzf_c.c:217:
+    }$

CHECK:SPACING: No space is necessary after a cast
#253: FILE: kernel/power/lzf/lzf_c.c:219:
+  return op - (u8 *) out_data;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: kernel/power/lzf/lzf_c.c:219:
+  return op - (u8 *) out_data;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#259: FILE: kernel/power/lzf/lzf_d.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: kernel/power/lzf/lzf_d.c:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#264: FILE: kernel/power/lzf/lzf_d.c:6:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: kernel/power/lzf/lzf_d.c:9:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: kernel/power/lzf/lzf_d.c:13:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: kernel/power/lzf/lzf_d.c:16:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#297: FILE: kernel/power/lzf/lzf_d.c:39:
+unsigned int $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#298: FILE: kernel/power/lzf/lzf_d.c:40:
+lzf_decompress (const void *const in_data,  unsigned int in_len,

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: kernel/power/lzf/lzf_d.c:41:
+                void             *out_data, unsigned int out_len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: kernel/power/lzf/lzf_d.c:41:
+                void             *out_data, unsigned int out_len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: kernel/power/lzf/lzf_d.c:43:
+  u8 const *ip = in_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: kernel/power/lzf/lzf_d.c:44:
+  u8       *op = out_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: kernel/power/lzf/lzf_d.c:45:
+  u8 const *const in_end  = ip + in_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: kernel/power/lzf/lzf_d.c:46:
+  u8       *const out_end = op + out_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: kernel/power/lzf/lzf_d.c:48:
+  do$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#306: FILE: kernel/power/lzf/lzf_d.c:48:
+  do
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#306: FILE: kernel/power/lzf/lzf_d.c:48:
+  do
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: kernel/power/lzf/lzf_d.c:49:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: kernel/power/lzf/lzf_d.c:50:
+      unsigned int ctrl = *ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: kernel/power/lzf/lzf_d.c:52:
+      if (ctrl < (1 << 5)) /* literal run */$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#310: FILE: kernel/power/lzf/lzf_d.c:52:
+      if (ctrl < (1 << 5)) /* literal run */
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#310: FILE: kernel/power/lzf/lzf_d.c:52:
+      if (ctrl < (1 << 5)) /* literal run */
+        {

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: kernel/power/lzf/lzf_d.c:53:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: kernel/power/lzf/lzf_d.c:53:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: kernel/power/lzf/lzf_d.c:54:
+          ctrl++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: kernel/power/lzf/lzf_d.c:54:
+          ctrl++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: kernel/power/lzf/lzf_d.c:56:
+          if (op + ctrl > out_end)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: kernel/power/lzf/lzf_d.c:56:
+          if (op + ctrl > out_end)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#314: FILE: kernel/power/lzf/lzf_d.c:56:
+          if (op + ctrl > out_end)
+            return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#315: FILE: kernel/power/lzf/lzf_d.c:57:
+            return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: kernel/power/lzf/lzf_d.c:57:
+            return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: kernel/power/lzf/lzf_d.c:60:
+          memcpy (op, ip, ctrl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: kernel/power/lzf/lzf_d.c:60:
+          memcpy (op, ip, ctrl);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#318: FILE: kernel/power/lzf/lzf_d.c:60:
+          memcpy (op, ip, ctrl);

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: kernel/power/lzf/lzf_d.c:61:
+          op += ctrl;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: kernel/power/lzf/lzf_d.c:61:
+          op += ctrl;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: kernel/power/lzf/lzf_d.c:62:
+          ip += ctrl;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: kernel/power/lzf/lzf_d.c:62:
+          ip += ctrl;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: kernel/power/lzf/lzf_d.c:64:
+          do$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: kernel/power/lzf/lzf_d.c:64:
+          do$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#322: FILE: kernel/power/lzf/lzf_d.c:64:
+          do
+            *op++ = *ip++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#323: FILE: kernel/power/lzf/lzf_d.c:65:
+            *op++ = *ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: kernel/power/lzf/lzf_d.c:65:
+            *op++ = *ip++;$

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#323: FILE: kernel/power/lzf/lzf_d.c:65:
+            *op++ = *ip++;
             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: kernel/power/lzf/lzf_d.c:66:
+          while (--ctrl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: kernel/power/lzf/lzf_d.c:66:
+          while (--ctrl);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: kernel/power/lzf/lzf_d.c:68:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: kernel/power/lzf/lzf_d.c:68:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: kernel/power/lzf/lzf_d.c:69:
+      else /* back reference */$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#327: FILE: kernel/power/lzf/lzf_d.c:69:
+      else /* back reference */
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#327: FILE: kernel/power/lzf/lzf_d.c:69:
+      else /* back reference */
+        {

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: kernel/power/lzf/lzf_d.c:70:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: kernel/power/lzf/lzf_d.c:70:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: kernel/power/lzf/lzf_d.c:71:
+          unsigned int len = ctrl >> 5;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: kernel/power/lzf/lzf_d.c:71:
+          unsigned int len = ctrl >> 5;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: kernel/power/lzf/lzf_d.c:73:
+          u8 *ref = op - ((ctrl & 0x1f) << 8) - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: kernel/power/lzf/lzf_d.c:73:
+          u8 *ref = op - ((ctrl & 0x1f) << 8) - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: kernel/power/lzf/lzf_d.c:75:
+          if (len == 7)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: kernel/power/lzf/lzf_d.c:75:
+          if (len == 7)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#333: FILE: kernel/power/lzf/lzf_d.c:75:
+          if (len == 7)
+            len += *ip++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#334: FILE: kernel/power/lzf/lzf_d.c:76:
+            len += *ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: kernel/power/lzf/lzf_d.c:76:
+            len += *ip++;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: kernel/power/lzf/lzf_d.c:77:
+          $

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: kernel/power/lzf/lzf_d.c:77:
+          $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: kernel/power/lzf/lzf_d.c:77:
+          $

ERROR:CODE_INDENT: code indent should use tabs where possible
#336: FILE: kernel/power/lzf/lzf_d.c:78:
+          ref -= *ip++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: kernel/power/lzf/lzf_d.c:78:
+          ref -= *ip++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: kernel/power/lzf/lzf_d.c:80:
+          if (op + len + 2 > out_end)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: kernel/power/lzf/lzf_d.c:80:
+          if (op + len + 2 > out_end)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#338: FILE: kernel/power/lzf/lzf_d.c:80:
+          if (op + len + 2 > out_end)
+            return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: kernel/power/lzf/lzf_d.c:81:
+            return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: kernel/power/lzf/lzf_d.c:81:
+            return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: kernel/power/lzf/lzf_d.c:83:
+          if (ref < (u8 *)out_data)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: kernel/power/lzf/lzf_d.c:83:
+          if (ref < (u8 *)out_data)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#341: FILE: kernel/power/lzf/lzf_d.c:83:
+          if (ref < (u8 *)out_data)
+            return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: kernel/power/lzf/lzf_d.c:84:
+            return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: kernel/power/lzf/lzf_d.c:84:
+            return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: kernel/power/lzf/lzf_d.c:86:
+          *op++ = *ref++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: kernel/power/lzf/lzf_d.c:86:
+          *op++ = *ref++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: kernel/power/lzf/lzf_d.c:87:
+          *op++ = *ref++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: kernel/power/lzf/lzf_d.c:87:
+          *op++ = *ref++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: kernel/power/lzf/lzf_d.c:89:
+          do$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: kernel/power/lzf/lzf_d.c:89:
+          do$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#347: FILE: kernel/power/lzf/lzf_d.c:89:
+          do
+            *op++ = *ref++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: kernel/power/lzf/lzf_d.c:90:
+            *op++ = *ref++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: kernel/power/lzf/lzf_d.c:90:
+            *op++ = *ref++;$

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#348: FILE: kernel/power/lzf/lzf_d.c:90:
+            *op++ = *ref++;
             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: kernel/power/lzf/lzf_d.c:91:
+          while (--len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: kernel/power/lzf/lzf_d.c:91:
+          while (--len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: kernel/power/lzf/lzf_d.c:92:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: kernel/power/lzf/lzf_d.c:92:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: kernel/power/lzf/lzf_d.c:93:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: kernel/power/lzf/lzf_d.c:94:
+  while (op < out_end && ip < in_end);$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#352: FILE: kernel/power/lzf/lzf_d.c:94:
+  while (op < out_end && ip < in_end);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: kernel/power/lzf/lzf_d.c:96:
+  return op - (u8 *)out_data;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#361: FILE: kernel/power/suspend_lzf.c:1:
+/*

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#383: FILE: kernel/power/suspend_lzf.c:23:
+static int expected_lzf_compression = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#415: FILE: kernel/power/suspend_lzf.c:55:
+static struct suspend_plugin_ops * next_driver;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#417: FILE: kernel/power/suspend_lzf.c:57:
+static void *compression_workspace = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#418: FILE: kernel/power/suspend_lzf.c:58:
+static u8 *local_buffer = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#419: FILE: kernel/power/suspend_lzf.c:59:
+static struct page * local_buffer_page = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#419: FILE: kernel/power/suspend_lzf.c:59:
+static struct page * local_buffer_page = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#420: FILE: kernel/power/suspend_lzf.c:60:
+static u8 *page_buffer = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#421: FILE: kernel/power/suspend_lzf.c:61:
+static struct page * page_buffer_page = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#421: FILE: kernel/power/suspend_lzf.c:61:
+static struct page * page_buffer_page = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#424: FILE: kernel/power/suspend_lzf.c:64:
+static __nosavedata unsigned long bytes_in = 0, bytes_out = 0;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#435: FILE: kernel/power/suspend_lzf.c:75:
+	BUG_ON(compression_workspace);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#437: FILE: kernel/power/suspend_lzf.c:77:
+	compression_workspace = vmalloc_32((1<<HLOG)*sizeof(char *));
 	                                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#437: FILE: kernel/power/suspend_lzf.c:77:
+	compression_workspace = vmalloc_32((1<<HLOG)*sizeof(char *));
 	                                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#439: FILE: kernel/power/suspend_lzf.c:79:
+		printk(KERN_WARNING

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#441: FILE: kernel/power/suspend_lzf.c:81:
+			(1<<HLOG)*sizeof(char *));
 			  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#441: FILE: kernel/power/suspend_lzf.c:81:
+			(1<<HLOG)*sizeof(char *));
 			         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#444: FILE: kernel/power/suspend_lzf.c:84:
+^I$

CHECK:SPACING: No space is necessary after a cast
#473: FILE: kernel/power/suspend_lzf.c:113:
+		local_buffer = (char *) get_zeroed_page(GFP_ATOMIC);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#474: FILE: kernel/power/suspend_lzf.c:114:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#476: FILE: kernel/power/suspend_lzf.c:116:
+			printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#478: FILE: kernel/power/suspend_lzf.c:118:
+				"Failed to allocate the local buffer for "
+				"lzf compression driver.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#485: FILE: kernel/power/suspend_lzf.c:125:
+		page_buffer = (char *) get_zeroed_page(GFP_ATOMIC);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#486: FILE: kernel/power/suspend_lzf.c:126:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#488: FILE: kernel/power/suspend_lzf.c:128:
+			printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#490: FILE: kernel/power/suspend_lzf.c:130:
+				"Failed to allocate the page buffer for "
+				"lzf compression driver.\n");

CHECK:SPACING: No space is necessary after a cast
#507: FILE: kernel/power/suspend_lzf.c:147:
+		free_pages((unsigned long) local_buffer, 0);

CHECK:SPACING: No space is necessary after a cast
#513: FILE: kernel/power/suspend_lzf.c:153:
+		free_pages((unsigned long) page_buffer, 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#531: FILE: kernel/power/suspend_lzf.c:171:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#535: FILE: kernel/power/suspend_lzf.c:175:
+		printk("LZF Compression Driver: Argh! No one wants my output!");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#539: FILE: kernel/power/suspend_lzf.c:179:
+	if ((result = allocate_compression_space()))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#541: FILE: kernel/power/suspend_lzf.c:181:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#542: FILE: kernel/power/suspend_lzf.c:182:
+	if ((result = allocate_local_buffer()))

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#547: FILE: kernel/power/suspend_lzf.c:187:
+		bytes_in = bytes_out = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#548: FILE: kernel/power/suspend_lzf.c:188:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#558: FILE: kernel/power/suspend_lzf.c:198:
+ * ^I^Iunsigned int:^ILength of buffer.$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#562: FILE: kernel/power/suspend_lzf.c:202:
+static int lzf_write (u8 *buffer, unsigned int len)

WARNING:LINE_SPACING: Missing a blank line after declarations
#570: FILE: kernel/power/suspend_lzf.c:210:
+		unsigned int chunk = PAGE_SIZE - bufofs;
+		memcpy (local_buffer + bufofs, buffer, chunk);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#570: FILE: kernel/power/suspend_lzf.c:210:
+		memcpy (local_buffer + bufofs, buffer, chunk);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#574: FILE: kernel/power/suspend_lzf.c:214:
+		if ((ret = next_driver->ops.filter.write_chunk(local_buffer_page)) < 0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#577: FILE: kernel/power/suspend_lzf.c:217:
+	memcpy (local_buffer + bufofs, buffer, len);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#585: FILE: kernel/power/suspend_lzf.c:225:
+ * ^I^Ifilled pages to the next plugin in the pipeline.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#586: FILE: kernel/power/suspend_lzf.c:226:
+ * Arguments:^IBuffer_page:^IPointer to a buffer of size PAGE_SIZE, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#587: FILE: kernel/power/suspend_lzf.c:227:
+ * ^I^I^I^Icontaining data to be compressed.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#589: FILE: kernel/power/suspend_lzf.c:229:
+ * ^I^Iplugins, -ECHILD if we have a broken pipeline or -EPERM if$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#590: FILE: kernel/power/suspend_lzf.c:230:
+ * ^I^Izlib errs.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#593: FILE: kernel/power/suspend_lzf.c:233:
+static int lzf_write_chunk(struct page * buffer_page)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#595: FILE: kernel/power/suspend_lzf.c:235:
+^Iint ret; $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#597: FILE: kernel/power/suspend_lzf.c:237:
+	char * buffer_start = kmap(buffer_page);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#598: FILE: kernel/power/suspend_lzf.c:238:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#602: FILE: kernel/power/suspend_lzf.c:242:
+	len = lzf_compress(buffer_start, PAGE_SIZE, page_buffer,
+			PAGE_SIZE - 3, compression_workspace);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#604: FILE: kernel/power/suspend_lzf.c:244:
+	if ((ret = lzf_write((u8 *)&len, 2)) >= 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#623: FILE: kernel/power/suspend_lzf.c:263:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#646: FILE: kernel/power/suspend_lzf.c:286:
+		printk("LZF Compression Driver: Argh! No one wants "

WARNING:SPLIT_STRING: quoted string split across lines
#647: FILE: kernel/power/suspend_lzf.c:287:
+		printk("LZF Compression Driver: Argh! No one wants "
+				"to feed me data!");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#650: FILE: kernel/power/suspend_lzf.c:290:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#651: FILE: kernel/power/suspend_lzf.c:291:
+	if ((result = allocate_local_buffer()))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#663: FILE: kernel/power/suspend_lzf.c:303:
+ * ^I^Iunsigned int:^ILength$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#667: FILE: kernel/power/suspend_lzf.c:307:
+static int lzf_read (u8 * buffer, unsigned int len)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#667: FILE: kernel/power/suspend_lzf.c:307:
+static int lzf_read (u8 * buffer, unsigned int len)

WARNING:LINE_SPACING: Missing a blank line after declarations
#673: FILE: kernel/power/suspend_lzf.c:313:
+		unsigned int chunk = PAGE_SIZE - bufofs;
+		memcpy(buffer, local_buffer + bufofs, chunk);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#677: FILE: kernel/power/suspend_lzf.c:317:
+		if ((ret = next_driver->ops.filter.read_chunk(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#677: FILE: kernel/power/suspend_lzf.c:317:
+		if ((ret = next_driver->ops.filter.read_chunk(

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#682: FILE: kernel/power/suspend_lzf.c:322:
+	memcpy (buffer, local_buffer + bufofs, len);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#690: FILE: kernel/power/suspend_lzf.c:330:
+ * ^I^Iinput buffer is filled.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#691: FILE: kernel/power/suspend_lzf.c:331:
+ * Arguments:^IBuffer_start: ^IPointer to a buffer of size PAGE_SIZE.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#692: FILE: kernel/power/suspend_lzf.c:332:
+ * ^I^ISync:^I^IWhether the previous plugin (or core) wants its$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#693: FILE: kernel/power/suspend_lzf.c:333:
+ * ^I^I^I^Idata synchronously.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#695: FILE: kernel/power/suspend_lzf.c:335:
+ * ^I^Ion failure.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#698: FILE: kernel/power/suspend_lzf.c:338:
+static int lzf_read_chunk(struct page * buffer_page, int sync)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#700: FILE: kernel/power/suspend_lzf.c:340:
+^Iint ret; $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#702: FILE: kernel/power/suspend_lzf.c:342:
+	char * buffer_start = kmap(buffer_page);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#704: FILE: kernel/power/suspend_lzf.c:344:
+^I/* $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#709: FILE: kernel/power/suspend_lzf.c:349:
+	if ((ret = lzf_read ((u8 *)&len, 2)) >= 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#709: FILE: kernel/power/suspend_lzf.c:349:
+	if ((ret = lzf_read ((u8 *)&len, 2)) >= 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#713: FILE: kernel/power/suspend_lzf.c:353:
+			if ((ret = lzf_read(page_buffer, len)) >= 0) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#741: FILE: kernel/power/suspend_lzf.c:381:
+ * ^I^Ibuffer.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#743: FILE: kernel/power/suspend_lzf.c:383:
+ * ^I^I^Iprinted.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#744: FILE: kernel/power/suspend_lzf.c:384:
+ * ^I^Isize:^ISize of the buffer.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#748: FILE: kernel/power/suspend_lzf.c:388:
+static int lzf_print_debug_stats(char * buffer, int size)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#750: FILE: kernel/power/suspend_lzf.c:390:
+^Iint pages_in = bytes_in >> PAGE_SHIFT, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#753: FILE: kernel/power/suspend_lzf.c:393:
+^I$

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#757: FILE: kernel/power/suspend_lzf.c:397:
+		len+= suspend_snprintf(buffer+len, size - len,
 		   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#757: FILE: kernel/power/suspend_lzf.c:397:
+		len+= suspend_snprintf(buffer+len, size - len,
 		                             ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#766: FILE: kernel/power/suspend_lzf.c:406:
+ * ^I^Isuspend/resume.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#768: FILE: kernel/power/suspend_lzf.c:408:
+ * ^I^Ioperation.$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#773: FILE: kernel/power/suspend_lzf.c:413:
+	return PAGE_SIZE * 2 + (1<<HLOG)*sizeof(char *);
 	                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#773: FILE: kernel/power/suspend_lzf.c:413:
+	return PAGE_SIZE * 2 + (1<<HLOG)*sizeof(char *);
 	                                ^

WARNING:TYPO_SPELLING: 'informaton' may be misspelled - perhaps 'information'?
#783: FILE: kernel/power/suspend_lzf.c:423:
+ * Description:	Save informaton needed when reloading the image at resume time.
                	     ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#788: FILE: kernel/power/suspend_lzf.c:428:
+static int lzf_save_config_info(char * buffer)

CHECK:SPACING: No space is necessary after a cast
#790: FILE: kernel/power/suspend_lzf.c:430:
+	*((unsigned long *) buffer) = bytes_in;

CHECK:SPACING: No space is necessary after a cast
#791: FILE: kernel/power/suspend_lzf.c:431:
+	*((unsigned long *) (buffer + sizeof(unsigned long))) = bytes_out;

CHECK:SPACING: No space is necessary after a cast
#792: FILE: kernel/power/suspend_lzf.c:432:
+	*((int *) (buffer + 2 * sizeof(unsigned long))) = expected_lzf_compression;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#798: FILE: kernel/power/suspend_lzf.c:438:
+ * Description:^IReload information needed for decompressing the image at $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#799: FILE: kernel/power/suspend_lzf.c:439:
+ * ^I^Iresume time.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#804: FILE: kernel/power/suspend_lzf.c:444:
+static void lzf_load_config_info(char * buffer, int size)

ERROR:SPACING: space required before the open parenthesis '('
#806: FILE: kernel/power/suspend_lzf.c:446:
+	if(size == 2 * sizeof(unsigned long) + sizeof(int)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#806: FILE: kernel/power/suspend_lzf.c:446:
+	if(size == 2 * sizeof(unsigned long) + sizeof(int)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#807: FILE: kernel/power/suspend_lzf.c:447:
+		bytes_in = *((unsigned long *) buffer);

CHECK:SPACING: No space is necessary after a cast
#808: FILE: kernel/power/suspend_lzf.c:448:
+		bytes_out = *((unsigned long *) (buffer + sizeof(unsigned long)));

CHECK:SPACING: No space is necessary after a cast
#809: FILE: kernel/power/suspend_lzf.c:449:
+		expected_lzf_compression = *((int *) (buffer + 2 * sizeof(unsigned long)));

CHECK:BRACES: Unbalanced braces around else statement
#810: FILE: kernel/power/suspend_lzf.c:450:
+	} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#811: FILE: kernel/power/suspend_lzf.c:451:
+		printk("Suspend LZF config info size mismatch: settings ignored.\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#813: FILE: kernel/power/suspend_lzf.c:453:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#816: FILE: kernel/power/suspend_lzf.c:456:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#818: FILE: kernel/power/suspend_lzf.c:458:
+ * ^I^Iand the amount of data output when writing.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#820: FILE: kernel/power/suspend_lzf.c:460:
+ * ^I^Iuser via our proc entry.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#865: FILE: kernel/power/suspend_lzf.c:505:
+^I.memory_needed ^I^I= lzf_memory_needed,$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#889: FILE: kernel/power/suspend_lzf.c:529:
+	if (!(result = suspend_register_plugin(&lzf_compression_ops))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#890: FILE: kernel/power/suspend_lzf.c:530:
+		printk("Software Suspend LZF Compression Driver registered.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#900: FILE: kernel/power/suspend_lzf.c:540:
+	printk("Software Suspend LZF Compression Driver unloading.\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#906: FILE: kernel/power/suspend_lzf.c:546:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227840.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 182 errors, 226 warnings, 48 checks, 872 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227840.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
