WARNING:TYPO_SPELLING: 'erroneusly' may be misspelled - perhaps 'erroneously'?
#32: 
application which may erroneusly rely on this.
                      ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#47: FILE: drivers/rtc/rtc-proc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#58: FILE: drivers/rtc/rtc-proc.c:12:
+ * published by the Free Software Foundation.
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#65: FILE: drivers/rtc/rtc-proc.c:19:
+static struct class_device *rtc_dev = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:CONST_STRUCT: struct rtc_class_ops should normally be const
#72: FILE: drivers/rtc/rtc-proc.c:26:
+	struct rtc_class_ops *ops = to_rtc_device(class_dev)->ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#79: FILE: drivers/rtc/rtc-proc.c:33:
+		seq_printf(seq,
+			"rtc_time\t: %02d:%02d:%02d\n"

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#87: FILE: drivers/rtc/rtc-proc.c:41:
+		seq_printf(seq, "alrm_time\t: ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#91: FILE: drivers/rtc/rtc-proc.c:45:
+			seq_printf(seq, "**:");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#95: FILE: drivers/rtc/rtc-proc.c:49:
+			seq_printf(seq, "**:");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#99: FILE: drivers/rtc/rtc-proc.c:53:
+			seq_printf(seq, "**\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#101: FILE: drivers/rtc/rtc-proc.c:55:
+		seq_printf(seq, "alrm_date\t: ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#105: FILE: drivers/rtc/rtc-proc.c:59:
+			seq_printf(seq, "****-");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#109: FILE: drivers/rtc/rtc-proc.c:63:
+			seq_printf(seq, "**-");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#113: FILE: drivers/rtc/rtc-proc.c:67:
+			seq_printf(seq, "**\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: drivers/rtc/rtc-proc.c:69:
+		seq_printf(seq, "alrm_wakeup\t: %s\n",
+				alrm.enabled ? "yes" : "no");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: drivers/rtc/rtc-proc.c:71:
+		seq_printf(seq, "alrm_pending\t: %s\n",
+				alrm.pending ? "yes" : "no");

WARNING:LINE_SPACING: Missing a blank line after declarations
#139: FILE: drivers/rtc/rtc-proc.c:93:
+	int res = single_release(inode, file);
+	module_put(THIS_MODULE);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#143: FILE: drivers/rtc/rtc-proc.c:97:
+static struct file_operations rtc_proc_fops = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: drivers/rtc/rtc-proc.c:105:
+static int rtc_proc_add_device(struct class_device *class_dev,
+					struct class_interface *class_intf)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rtc_dev"
#154: FILE: drivers/rtc/rtc-proc.c:108:
+	if (rtc_dev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#160: FILE: drivers/rtc/rtc-proc.c:114:
+		if (ent) {
[...]
+		else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#169: FILE: drivers/rtc/rtc-proc.c:123:
+		}
+		else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: drivers/rtc/rtc-proc.c:132:
+static void rtc_proc_remove_device(struct class_device *class_dev,
+					struct class_interface *class_intf)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093469.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 14 warnings, 7 checks, 184 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093469.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
