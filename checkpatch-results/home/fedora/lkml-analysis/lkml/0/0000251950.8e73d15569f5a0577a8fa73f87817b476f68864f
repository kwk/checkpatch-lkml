WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#215: FILE: kernel/sched.c:4052:
+static int __devinit find_next_best_node(int node, unsigned long *used_nodes)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#224: FILE: kernel/sched.c:4088:
+static cpumask_t __devinit sched_domain_node_span(int node)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#233: FILE: kernel/sched.c:4108:
+static cpumask_t __devinit sched_domain_node_span(int node)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#242: FILE: kernel/sched.c:4118:
+static int __devinit cpu_to_cpu_group(int cpu)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#251: FILE: kernel/sched.c:4126:
+static int __devinit cpu_to_phys_group(int cpu)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#260: FILE: kernel/sched.c:4139:
+static int __devinit cpu_to_node_group(int cpu)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#269: FILE: kernel/sched.c:4149:
+cpumask_t __devinitdata cpu_isolated_map = CPU_MASK_NONE;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#272: FILE: kernel/sched.c:4151:
+static int __devinit cpu_to_isolated_group(int cpu)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#281: FILE: kernel/sched.c:4181:
+static void __devinit init_sched_build_groups(struct sched_group groups[],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: kernel/sched.c:4182:
+static void __devinit init_sched_build_groups(struct sched_group groups[],
 			cpumask_t span, int (*group_fn)(int cpu))

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#293: FILE: kernel/sched.c:4218:
+static void __devinit arch_init_sched_domains(void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#398: FILE: kernel/sched.c:4381:
+		printk(KERN_DEBUG "CPU%d:\n", i);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#408: FILE: kernel/sched.c:4449:
+static __devinitdata struct sched_domain sched_domain_dummy;

WARNING:MISPLACED_INIT: __devinitdata should be placed after sched_domain_dummy
#408: FILE: kernel/sched.c:4449:
+static __devinitdata struct sched_domain sched_domain_dummy;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#409: FILE: kernel/sched.c:4450:
+static __devinitdata struct sched_group sched_group_dummy;

WARNING:MISPLACED_INIT: __devinitdata should be placed after sched_group_dummy
#409: FILE: kernel/sched.c:4450:
+static __devinitdata struct sched_group sched_group_dummy;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#435: FILE: kernel/sched.c:4476:
+		 * Fall through and re-initialise the domains.

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000251950.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 16 warnings, 1 checks, 386 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000251950.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
