WARNING:SPACING: space prohibited between function name and open parenthesis '('
#53: FILE: fs/ext3/inode.c:2289:
+int ext3_get_inode_loc (struct inode *inode, struct ext3_iloc *iloc, int in_mem)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#62: FILE: fs/ext3/inode.c:2331:
+	if (!(bh = sb_getblk(inode->i_sb, block))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: fs/ext3/inode.c:2347:
+^I^I^Istruct buffer_head *bitmap_bh; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#118: FILE: fs/ext3/inode.c:2387:
+			ext3_error (inode->i_sb, "ext3_get_inode_loc",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: fs/ext3/inode.c:2388:
+			ext3_error (inode->i_sb, "ext3_get_inode_loc",
+					"unable to read inode block - "

WARNING:SPLIT_STRING: quoted string split across lines
#120: FILE: fs/ext3/inode.c:2389:
+					"unable to read inode block - "
+					"inode=%lu, block=%lu", inode->i_ino, block);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:INDENTED_LABEL: labels should not be indented
#124: FILE: fs/ext3/inode.c:2393:
+  has_buffer:

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#174: FILE: include/linux/ext3_fs.h:720:
+extern struct buffer_head * read_inode_bitmap(struct super_block *, unsigned long);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#174: FILE: include/linux/ext3_fs.h:720:
+extern struct buffer_head * read_inode_bitmap(struct super_block *, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#174: FILE: include/linux/ext3_fs.h:720:
+extern struct buffer_head * read_inode_bitmap(struct super_block *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#174: FILE: include/linux/ext3_fs.h:720:
+extern struct buffer_head * read_inode_bitmap(struct super_block *, unsigned long);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#184: FILE: include/linux/ext3_fs.h:729:
+extern int  ext3_get_inode_loc (struct inode *, struct ext3_iloc *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#184: FILE: include/linux/ext3_fs.h:729:
+extern int  ext3_get_inode_loc (struct inode *, struct ext3_iloc *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#184: FILE: include/linux/ext3_fs.h:729:
+extern int  ext3_get_inode_loc (struct inode *, struct ext3_iloc *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ext3_iloc *' should also have an identifier name
#184: FILE: include/linux/ext3_fs.h:729:
+extern int  ext3_get_inode_loc (struct inode *, struct ext3_iloc *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#184: FILE: include/linux/ext3_fs.h:729:
+extern int  ext3_get_inode_loc (struct inode *, struct ext3_iloc *, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000356266.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 10 warnings, 3 checks, 126 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000356266.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
