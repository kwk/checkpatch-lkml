WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
>  > ftp://ftp.kernel.org/pub/linux/kernel/people/akpm/patches/2.6/2.6.7/2.6.7-m

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: arch/cris/kernel/setup.c:37:
+       char saved_command_line[COMMAND_LINE_SIZE];$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#129: FILE: arch/i386/boot/compressed/misc.c:94:
+#define SCREEN_INFO (*(struct screen_info *)(real_mode+0))
                                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#130: FILE: arch/i386/boot/compressed/misc.c:95:
+#define EDID_INFO   (*(struct edid_info *)(real_mode+0x440))
                                                     ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#161: FILE: arch/i386/boot/compressed/misc.c:309:
+	if (EXT_MEM_K < 1024) error("Less than 2MB of memory");

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LONG_LINE_STRING: line length of 101 exceeds 100 columns
#164: FILE: arch/i386/boot/compressed/misc.c:311:
+	if ((ALT_MEM_K > EXT_MEM_K ? ALT_MEM_K : EXT_MEM_K) < 1024) error("Less than 2MB of memory");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#164: FILE: arch/i386/boot/compressed/misc.c:311:
+	if ((ALT_MEM_K > EXT_MEM_K ? ALT_MEM_K : EXT_MEM_K) < 1024) error("Less than 2MB of memory");

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#164: FILE: arch/i386/boot/compressed/misc.c:311:
+	if ((ALT_MEM_K > EXT_MEM_K ? ALT_MEM_K : EXT_MEM_K) < 1024) error("Less than 2MB of memory");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#173: FILE: arch/i386/boot/compressed/misc.c:326:
+	if (EXT_MEM_K < (3*1024)) error("Less than 4MB of memory");
 	                  ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#173: FILE: arch/i386/boot/compressed/misc.c:326:
+	if (EXT_MEM_K < (3*1024)) error("Less than 4MB of memory");

WARNING:LONG_LINE_STRING: line length of 105 exceeds 100 columns
#178: FILE: arch/i386/boot/compressed/misc.c:328:
+	if ((ALT_MEM_K > EXT_MEM_K ? ALT_MEM_K : EXT_MEM_K) < (3*1024)) error("Less than 4MB of memory");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#178: FILE: arch/i386/boot/compressed/misc.c:328:
+	if ((ALT_MEM_K > EXT_MEM_K ? ALT_MEM_K : EXT_MEM_K) < (3*1024)) error("Less than 4MB of memory");
 	                                                        ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#178: FILE: arch/i386/boot/compressed/misc.c:328:
+	if ((ALT_MEM_K > EXT_MEM_K ? ALT_MEM_K : EXT_MEM_K) < (3*1024)) error("Less than 4MB of memory");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#178: FILE: arch/i386/boot/compressed/misc.c:328:
+	if ((ALT_MEM_K > EXT_MEM_K ? ALT_MEM_K : EXT_MEM_K) < (3*1024)) error("Less than 4MB of memory");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: arch/i386/kernel/setup.c:130:
+       char saved_command_line[COMMAND_LINE_SIZE];$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#266: FILE: arch/m68k/q40/config.c:67:
+extern char *saved_command_line;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: arch/mips/kernel/setup.c:75:
+       char saved_command_line[CL_SIZE];$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#350: FILE: arch/ppc/platforms/pmac_setup.c:106:
+extern char saved_command_line[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#362: FILE: arch/ppc/platforms/pplus.c:51:
+extern char saved_command_line[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#374: FILE: arch/ppc/platforms/prep_setup.c:79:
+extern char saved_command_line[];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: arch/s390/kernel/setup.c:79:
+       char saved_command_line[COMMAND_LINE_SIZE];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: arch/sh/kernel/setup.c:93:
+       char saved_command_line[COMMAND_LINE_SIZE];$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#435: FILE: arch/sparc64/kernel/sparc64_ksyms.c:79:
+extern char saved_command_line[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#467: FILE: arch/sparc/kernel/sparc_ksyms.c:77:
+extern char saved_command_line[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#521: FILE: drivers/sbus/char/openprom.c:152:
+	extern char saved_command_line[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#552: FILE: fs/proc/proc_misc.c:521:
+	extern char saved_command_line[];

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#597: FILE: include/asm-h8300/setup.h:1:
+/* Nothing do */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#676: FILE: include/asm-parisc/setup.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#686: FILE: include/asm-parisc/setup.h:9:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#811: FILE: include/asm-x86_64/setup.h:1:
+/*

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#841: FILE: include/linux/init.h:121:
 		 __attribute__((__section__(".init.setup")))	\
+		= { __setup_str_##unique_id, fn }

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:BRACES: braces {} should be used on all arms of this statement
#889: FILE: init/main.c:161:
+			if (!p->setup_func) {
[...]
 			} else if (p->setup_func(line + n))
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#890: FILE: init/main.c:162:
+				printk(KERN_WARNING "Parameter %s is obsolete, ignored\n", p->str);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#937: FILE: init/main.c:404:
+	extern char saved_command_line[];

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000271624.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 23 warnings, 7 checks, 618 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000271624.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
