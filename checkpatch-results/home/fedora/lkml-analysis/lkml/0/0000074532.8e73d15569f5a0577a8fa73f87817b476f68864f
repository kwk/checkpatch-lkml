ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Takashi Sato sho@tnes.nec.co.jp'
#31: 
Signed-off-by: Takashi Sato sho@tnes.nec.co.jp

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#48: FILE: src/ext2.c:299:
+^Iunsigned long long ^Iapb;$

ERROR:SPACING: space required before the open parenthesis '('
#99: FILE: src/ext2.c:320:
+	if(!inode->i_block[EXT2_DIND_BLOCK] && action != EXT2_ACTION_ADD)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#104: FILE: src/ext2.c:323:
+	if (!inode->i_block[EXT2_DIND_BLOCK]) {
[...]
-		if (udata[i] == block) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#150: FILE: src/ext2.c:328:
+		if(!dindblk)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#153: FILE: src/ext2.c:331:
+		inode_size = apb*apb + apb + EXT2_NDIR_BLOCKS;
 		                ^

ERROR:SPACING: space required before the open parenthesis '('
#157: FILE: src/ext2.c:335:
+		if(inode->i_size_high) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#168: FILE: src/ext2.c:346:
 	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#178: FILE: src/ext2.c:350:
+	curblock = apb*apb + apb + EXT2_NDIR_BLOCKS;
 	              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#189: FILE: src/ext2.c:360:
+		grp = block/fs->sb.s_blocks_per_group;
 		           ^

ERROR:SPACING: space required before the open parenthesis '('
#190: FILE: src/ext2.c:361:
+		if(grp == 0 && action == EXT2_ACTION_ADD) {

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#191: FILE: src/ext2.c:362:
+			udata[(block - gdb_offset)%fs->u32perblock] = block;
 			                          ^

ERROR:SPACING: space required before the open brace '{'
#204: FILE: src/ext2.c:373:
+		if(udata[i] == block){

ERROR:SPACING: space required before the open parenthesis '('
#204: FILE: src/ext2.c:373:
+		if(udata[i] == block){

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#208: FILE: src/ext2.c:377:
+		if(((block - gdb_offset)%fs->u32perblock) != i)
 		                        ^

ERROR:SPACING: space required before the open parenthesis '('
#208: FILE: src/ext2.c:377:
+		if(((block - gdb_offset)%fs->u32perblock) != i)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#220: FILE: src/ext2.c:1005:
+void ext2_fix_resize_inode(struct ext2_fs *fs) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#224: FILE: src/ext2.c:1009:
+		struct ext2_inode * inode;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#242: FILE: src/ext2.c:1027:
+				if(i == 0)

ERROR:SPACING: space required before the open brace '{'
#245: FILE: src/ext2.c:1030:
+				if (j < fs->blocksize / 4){

ERROR:SPACING: space required before the open brace '{'
#250: FILE: src/ext2.c:1035:
+				else{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#250: FILE: src/ext2.c:1035:
+				}
+				else{

CHECK:BRACES: Unbalanced braces around else statement
#250: FILE: src/ext2.c:1035:
+				else{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: src/ext2.c:1046:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#314: FILE: src/ext2prepare.c:158:
+	fs->resgdblocks = fs->sb.s_reserved_gdt_blocks = diff;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#326: FILE: src/ext2_resize.c:81:
+				if(group!=0 || !ext2_get_block_state(fs, start + fs->gdblocks + 1))
 				        ^

ERROR:SPACING: space required before the open parenthesis '('
#326: FILE: src/ext2_resize.c:81:
+				if(group!=0 || !ext2_get_block_state(fs, start + fs->gdblocks + 1))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#328: FILE: src/ext2_resize.c:83:
+					ext2_set_block_state(fs, start + fs->gdblocks + 1,
 						     1, 1);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000074532.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 1 warnings, 9 checks, 284 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000074532.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
