WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioctl_scanner', this function's name, in a string
#63: FILE: drivers/usb/scanner.c:599:
+		err("ioctl_scanner(%d): invalid scn_minor", scn_minor);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#69: FILE: drivers/usb/scanner.c:605:
+	switch (cmd)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#71: FILE: drivers/usb/scanner.c:607:
+	case IOCTL_SCANNER_VENDOR :
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#72: FILE: drivers/usb/scanner.c:608:
+		return (put_user(dev->descriptor.idVendor, (unsigned int *) arg));

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#72: FILE: drivers/usb/scanner.c:608:
+		return (put_user(dev->descriptor.idVendor, (unsigned int *) arg));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#73: FILE: drivers/usb/scanner.c:609:
+	case IOCTL_SCANNER_PRODUCT :
 	                           ^

CHECK:SPACING: No space is necessary after a cast
#74: FILE: drivers/usb/scanner.c:610:
+		return (put_user(dev->descriptor.idProduct, (unsigned int *) arg));

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#74: FILE: drivers/usb/scanner.c:610:
+		return (put_user(dev->descriptor.idProduct, (unsigned int *) arg));

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#75: FILE: drivers/usb/scanner.c:611:
+	case PV8630_IOCTL_INREQUEST :
 	                            ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#88: FILE: drivers/usb/scanner.c:624:
+					 args.request, USB_TYPE_VENDOR|
 					                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#89: FILE: drivers/usb/scanner.c:625:
+					 USB_RECIP_DEVICE|USB_DIR_IN,
 					                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#91: FILE: drivers/usb/scanner.c:627:
+					 1, HZ*5);
 					      ^

WARNING:LONG_LINE: line length of 168 exceeds 100 columns
#93: FILE: drivers/usb/scanner.c:629:
+		dbg("ioctl_scanner(%d): inreq: args.data:%x args.value:%x args.index:%x args.request:%x\n", scn_minor, args.data, args.value, args.index, args.request);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioctl_scanner', this function's name, in a string
#93: FILE: drivers/usb/scanner.c:629:
+		dbg("ioctl_scanner(%d): inreq: args.data:%x args.value:%x args.index:%x args.request:%x\n", scn_minor, args.data, args.value, args.index, args.request);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioctl_scanner', this function's name, in a string
#98: FILE: drivers/usb/scanner.c:634:
+		dbg("ioctl_scanner(%d): inreq: result:%d\n", scn_minor, result);

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#102: FILE: drivers/usb/scanner.c:638:
+	case PV8630_IOCTL_OUTREQUEST :
 	                             ^

WARNING:LONG_LINE: line length of 145 exceeds 100 columns
#113: FILE: drivers/usb/scanner.c:649:
+		dbg("ioctl_scanner(%d): outreq: args.value:%x args.index:%x args.request:%x\n", scn_minor, args.value, args.index, args.request);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioctl_scanner', this function's name, in a string
#113: FILE: drivers/usb/scanner.c:649:
+		dbg("ioctl_scanner(%d): outreq: args.value:%x args.index:%x args.request:%x\n", scn_minor, args.value, args.index, args.request);

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#116: FILE: drivers/usb/scanner.c:652:
+					 args.request, USB_TYPE_VENDOR|
 					                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#117: FILE: drivers/usb/scanner.c:653:
+					 USB_RECIP_DEVICE|USB_DIR_OUT,
 					                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#119: FILE: drivers/usb/scanner.c:655:
+					 0, HZ*5);
 					      ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioctl_scanner', this function's name, in a string
#121: FILE: drivers/usb/scanner.c:657:
+		dbg("ioctl_scanner(%d): outreq: result:%d\n", scn_minor, result);

WARNING:INDENTED_LABEL: labels should not be indented
#134: FILE: drivers/usb/scanner.c:670:
+	read:		read_scanner,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#135: FILE: drivers/usb/scanner.c:671:
+	write:		write_scanner,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#135: FILE: drivers/usb/scanner.c:671:
+	write:		write_scanner,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#137: FILE: drivers/usb/scanner.c:673:
+	ioctl:		ioctl_scanner,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#137: FILE: drivers/usb/scanner.c:673:
+	ioctl:		ioctl_scanner,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#139: FILE: drivers/usb/scanner.c:675:
+	open:		open_scanner,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#139: FILE: drivers/usb/scanner.c:675:
+	open:		open_scanner,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#140: FILE: drivers/usb/scanner.c:676:
+	release:	close_scanner,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#140: FILE: drivers/usb/scanner.c:676:
+	release:	close_scanner,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: drivers/usb/scanner.c:915:
+	scn->devfs = devfs_register(usb_devfs_handle, "scanner",
+				      DEVFS_FL_DEFAULT, USB_MAJOR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR | S_IRGRP' are not preferred. Consider using octal permissions '0640'.
#154: FILE: drivers/usb/scanner.c:917:
+				      S_IFCHR | S_IRUSR | S_IWUSR | S_IRGRP |

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWGRP' are not preferred. Consider using octal permissions '0020'.
#155: FILE: drivers/usb/scanner.c:918:
+				      S_IWGRP, &usb_scanner_fops, NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#157: FILE: drivers/usb/scanner.c:920:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#165: FILE: drivers/usb/scanner.c:936:
+	devfs_unregister (scn->devfs);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000518699.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 15 warnings, 12 checks, 257 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000518699.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
