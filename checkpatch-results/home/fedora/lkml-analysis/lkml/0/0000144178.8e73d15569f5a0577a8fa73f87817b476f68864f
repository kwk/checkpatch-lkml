WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
The __GFP_USER and __GFP_KERNRCLM bits are used to enumerate three allocation

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#61: FILE: include/linux/mm.h:529:
+extern int get_pageblock_type(struct zone *zone,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#62: FILE: include/linux/mm.h:530:
+extern int get_pageblock_type(struct zone *zone,
+						struct page *page);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#74: FILE: include/linux/mmzone.h:23:
+#define PAGES_PER_MAXORDER (1 << (MAX_ORDER-1))
                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#122: FILE: include/linux/mmzone.h:515:
+	DECLARE_BITMAP(free_area_usemap,64);
 	                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#137: FILE: include/linux/mmzone.h:590:
+	pfn &= (PAGES_PER_SECTION-1);
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#138: FILE: include/linux/mmzone.h:591:
+	return (int)((pfn >> (MAX_ORDER-1)) * BITS_PER_RCLM_TYPE);
 	                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: include/linux/mmzone.h:631:
+static inline unsigned long *pfn_to_usemap(struct zone *zone, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: include/linux/mmzone.h:632:
+static inline unsigned long *pfn_to_usemap(struct zone *zone, 
+						unsigned long pfn)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#151: FILE: include/linux/mmzone.h:634:
+	return (zone->free_area_usemap);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#153: FILE: include/linux/mmzone.h:636:
+}
+static inline int pfn_to_bitidx(struct zone *zone, unsigned long pfn)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#156: FILE: include/linux/mmzone.h:639:
+	return (int)((pfn >> (MAX_ORDER-1)) * BITS_PER_RCLM_TYPE);
 	                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: mm/page_alloc.c:71:
+ * made afterwards in case the GFP flags are not updated without updating $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#185: FILE: mm/page_alloc.c:86:
+static inline unsigned long gfpflags_to_rclmtype(unsigned long gfp_flags) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: mm/page_alloc.c:99:
+^I^Iunsigned long *srcaddr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: mm/page_alloc.c:99:
+static inline void copy_bits(unsigned long *dstaddr,
+		unsigned long *srcaddr, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: mm/page_alloc.c:100:
+^I^Iint sindex_dst, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: mm/page_alloc.c:105:
+^I * Written like this to take advantage of arch-specific $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#207: FILE: mm/page_alloc.c:108:
+	for (nr = nr-1; nr >= 0; nr--) {
 	            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#209: FILE: mm/page_alloc.c:110:
+		int bit = test_bit(sindex_src + nr, srcaddr);
+		if (bit)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: mm/page_alloc.c:118:
+int get_pageblock_type(struct zone *zone,
+						struct page *page)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: mm/page_alloc.c:138:
+static inline void set_pageblock_type(struct zone *zone, struct page *page,
+					unsigned long type)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: mm/page_alloc.c:555:
+static struct page *__rmqueue(struct zone *zone, unsigned int order, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: mm/page_alloc.c:556:
+static struct page *__rmqueue(struct zone *zone, unsigned int order, 
+		int alloctype)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#272: FILE: mm/page_alloc.c:577:
+		if (current_order == MAX_ORDER-1)
 		                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: mm/page_alloc.c:578:
+^I^I^Iset_pageblock_type(zone, page, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: mm/page_alloc.c:579:
+			set_pageblock_type(zone, page, 
+						(unsigned long)alloctype);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#304: FILE: mm/page_alloc.c:788:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#332: FILE: mm/page_alloc.c:1969:
+#define roundup(x, y) ((((x)+((y)-1))/(y))*(y))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#332: FILE: mm/page_alloc.c:1969:
+#define roundup(x, y) ((((x)+((y)-1))/(y))*(y))
                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#332: FILE: mm/page_alloc.c:1969:
+#define roundup(x, y) ((((x)+((y)-1))/(y))*(y))
                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#332: FILE: mm/page_alloc.c:1969:
+#define roundup(x, y) ((((x)+((y)-1))/(y))*(y))
                                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'y' - possible side-effects?
#332: FILE: mm/page_alloc.c:1969:
+#define roundup(x, y) ((((x)+((y)-1))/(y))*(y))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#344: FILE: mm/page_alloc.c:1981:
+	usemapsize = usemapsize >> (MAX_ORDER-1);
 	                                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#355: FILE: mm/page_alloc.c:1992:
+	unsigned long usemapsize = usemap_size(zonesize);
+	zone->free_area_usemap = alloc_bootmem_node(pgdat, usemapsize);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#360: FILE: mm/page_alloc.c:1997:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000144178.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 3 warnings, 22 checks, 296 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000144178.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
