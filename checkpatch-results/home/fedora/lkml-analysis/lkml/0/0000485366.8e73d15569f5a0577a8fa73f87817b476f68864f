WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
diff -Nru clean-2.4.17//drivers/net/irda/ali-ircc.c linux/drivers/net/irda/ali-ircc.c

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#66: FILE: drivers/net/hamradio/baycom_ser_fdx.c:421:
+	if (!request_region(dev->base_addr, SER12_EXTENT,
+				"baycom_ser_fdx"))

WARNING:BRACES: braces {} are not necessary for single statement blocks
#144: FILE: drivers/net/wan/comx-hw-locomx.c:157:
+	if (!request_region(dev->base_addr, hw->io_extent, dev->name)) {
 		return -EAGAIN;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#160: FILE: drivers/net/wan/cosa.c:550:
+	if (!request_region(base, is_8bit(cosa)?2:4, cosa->type))
 	                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#160: FILE: drivers/net/wan/cosa.c:550:
+	if (!request_region(base, is_8bit(cosa)?2:4, cosa->type))
 	                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: drivers/net/wan/lmc/lmc_main.c:948:
+    if (!request_region (ioaddr, LMC_REG_RANGE, dev->name)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#275: FILE: drivers/net/wan/lmc/lmc_main.c:948:
+    if (!request_region (ioaddr, LMC_REG_RANGE, dev->name)) {
+	    printk(KERN_ERR "%s: request_region failed.\n", dev->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#275: FILE: drivers/net/wan/lmc/lmc_main.c:948:
+    if (!request_region (ioaddr, LMC_REG_RANGE, dev->name)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#276: FILE: drivers/net/wan/lmc/lmc_main.c:949:
+	    printk(KERN_ERR "%s: request_region failed.\n", dev->name);

WARNING:TABSTOP: Statements should start on a tabstop
#280: FILE: drivers/net/wan/lmc/lmc_main.c:953:
+	    return NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: drivers/net/wan/lmc/lmc_main.c:954:
+    }$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#306: FILE: drivers/net/ni65.c:476:
+	if (!request_region(ioaddr,cards[p->cardno].total_size,cards[p->cardno].cardname))
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#306: FILE: drivers/net/ni65.c:476:
+	if (!request_region(ioaddr,cards[p->cardno].total_size,cards[p->cardno].cardname))
 	                                                      ^

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#348: FILE: drivers/net/hamradio/scc.c:1844:
+					if (!request_region(SCC_Info[2*Nchips+chan].ctrl, 1, "scc ctrl") ||

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#348: FILE: drivers/net/hamradio/scc.c:1844:
+					if (!request_region(SCC_Info[2*Nchips+chan].ctrl, 1, "scc ctrl") ||
 					                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#348: FILE: drivers/net/hamradio/scc.c:1844:
+					if (!request_region(SCC_Info[2*Nchips+chan].ctrl, 1, "scc ctrl") ||
 					                                     ^

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#349: FILE: drivers/net/hamradio/scc.c:1845:
+					!request_region(SCC_Info[2*Nchips+chan].data, 1, "scc data"))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: drivers/net/hamradio/scc.c:1845:
+					if (!request_region(SCC_Info[2*Nchips+chan].ctrl, 1, "scc ctrl") ||
+					!request_region(SCC_Info[2*Nchips+chan].data, 1, "scc data"))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#349: FILE: drivers/net/hamradio/scc.c:1845:
+					!request_region(SCC_Info[2*Nchips+chan].data, 1, "scc data"))
 					                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#349: FILE: drivers/net/hamradio/scc.c:1845:
+					!request_region(SCC_Info[2*Nchips+chan].data, 1, "scc data"))
 					                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: drivers/net/sb1000.c:266:
+^I  ^I    !request_region(ioaddr[1], 16, dev->name))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#416: FILE: drivers/net/sb1000.c:266:
+^I  ^I    !request_region(ioaddr[1], 16, dev->name))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#416: FILE: drivers/net/sb1000.c:266:
+		if (!request_region(ioaddr[0], 16, dev->name) ||
+	  	    !request_region(ioaddr[1], 16, dev->name))

ERROR:SPACING: space required before the open parenthesis '('
#441: FILE: drivers/net/wan/sealevel.c:222:
+	if(!request_region(iobase, 8, "Sealevel 4021"))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000485366.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 11 warnings, 9 checks, 314 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000485366.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
