WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
--- linux-2.6.3-rc4/drivers/serial/8250.c	2004-02-17 09:50:45.000000000 -0700

WARNING:BRACES: braces {} are not necessary for single statement blocks
#56: FILE: drivers/serial/8250.c:1877:
+		if (up->port.irq == released_irq) {
+			continue;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: drivers/serial/8250.c:2160:
+        struct uart_8250_port *up;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: drivers/serial/8250.c:2160:
+        struct uart_8250_port *up;$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#80: FILE: drivers/serial/8250.c:2163:
+	if (released_irq != -1) {
+		return 1;
+	}

ERROR:SPACING: space required before the open brace '{'
#84: FILE: drivers/serial/8250.c:2167:
+	for (ttyS = 0; ttyS < UART_NR; ttyS++){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <ttyS>
#85: FILE: drivers/serial/8250.c:2168:
+		up =  &serial8250_ports[ttyS];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space required before the open parenthesis '('
#88: FILE: drivers/serial/8250.c:2171:
+			if(up->port.lock.magic != SPINLOCK_MAGIC)

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: drivers/serial/8250.c:2176:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: drivers/serial/8250.c:2176:
+        }$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#111: FILE: drivers/serial/kgdb_8250.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#139: FILE: drivers/serial/kgdb_8250.c:29:
+#include <asm/io.h>

CHECK:SPACING: No space is necessary after a cast
#188: FILE: drivers/serial/kgdb_8250.c:78:
+	.tty = (struct tty_struct *) &state,

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#203: FILE: drivers/serial/kgdb_8250.c:93:
+static int serial_from_rs_table = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:SPACING: Unnecessary space before function pointer arguments
#205: FILE: drivers/serial/kgdb_8250.c:95:
+static void (*serial_outb) (unsigned char val, unsigned long addr);

WARNING:SPACING: Unnecessary space before function pointer arguments
#206: FILE: drivers/serial/kgdb_8250.c:96:
+static unsigned long (*serial_inb) (unsigned long addr);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#208: FILE: drivers/serial/kgdb_8250.c:98:
+int serial8250_release_irq(int irq);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LINE_SPACING: Missing a blank line after declarations
#299: FILE: drivers/serial/kgdb_8250.c:189:
+	unsigned long flags;
+	local_irq_save(flags);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#301: FILE: drivers/serial/kgdb_8250.c:191:
+	if (!spin_is_locked(&kgdb_spinlock)) {
+		spin_lock(&uart_interrupt_lock);
+	}

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#301: FILE: drivers/serial/kgdb_8250.c:191:
+	if (!spin_is_locked(&kgdb_spinlock)) {

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

WARNING:BRACES: braces {} are not necessary for single statement blocks
#319: FILE: drivers/serial/kgdb_8250.c:209:
+	if (!spin_is_locked(&kgdb_spinlock)) {
+		spin_unlock(&uart_interrupt_lock);
+	}

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#319: FILE: drivers/serial/kgdb_8250.c:209:
+	if (!spin_is_locked(&kgdb_spinlock)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#399: FILE: drivers/serial/kgdb_8250.c:289:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#406: FILE: drivers/serial/kgdb_8250.c:296:
+	unsigned cval;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#438: FILE: drivers/serial/kgdb_8250.c:328:
+		/* Fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#485: FILE: drivers/serial/kgdb_8250.c:375:
+	serial_outb(gdb_async_info.state->custom_divisor & 0xff,
+			kgdb8250_port + (UART_DLL << reg_shift));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#488: FILE: drivers/serial/kgdb_8250.c:378:
+	serial_outb(gdb_async_info.state->custom_divisor >> 8,
+			kgdb8250_port + (UART_DLM << reg_shift));

WARNING:TYPO_SPELLING: 'overriden' may be misspelled - perhaps 'overridden'?
#514: FILE: drivers/serial/kgdb_8250.c:404:
+	/* If the user has overriden our definitions, or if we've only
 	                   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#515: FILE: drivers/serial/kgdb_8250.c:405:
+	 * been told the ttyS to use, look at rs_table. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#518: FILE: drivers/serial/kgdb_8250.c:408:
+		 * from rs_table[].  If this doesn't exist, user error. */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#519: FILE: drivers/serial/kgdb_8250.c:409:
+		gdb_async_info.port = gdb_async_info.state->port =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#521: FILE: drivers/serial/kgdb_8250.c:411:
+		gdb_async_info.line = gdb_async_info.state->irq =

CHECK:CAMELCASE: Avoid CamelCase: <kgdb8250_ttyS>
#530: FILE: drivers/serial/kgdb_8250.c:420:
+		    rs_table[kgdb8250_ttyS].iomem_base;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#543: FILE: drivers/serial/kgdb_8250.c:433:
+	kgdb8250_port = gdb_async_info.port = gdb_async_info.state->port =

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#545: FILE: drivers/serial/kgdb_8250.c:435:
+	gdb_async_info.line = gdb_async_info.state->irq = CONFIG_KGDB_IRQ;

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#594: FILE: drivers/serial/kgdb_8250.c:484:
+	kgdb8250_baud = simple_strtoul(str, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:INDENTED_LABEL: labels should not be indented
#605: FILE: drivers/serial/kgdb_8250.c:495:
+      errout:

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#606: FILE: drivers/serial/kgdb_8250.c:496:
+	printk("Invalid syntax for option kgdb8250=\n");

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#610: FILE: drivers/serial/kgdb_8250.c:500:
+__setup("kgdb8250=", kgdb8250_opt);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000303211.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 23 warnings, 10 checks, 578 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000303211.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
