WARNING:TYPO_SPELLING: 'formated' may be misspelled - perhaps 'formatted'?
#106: FILE: arch/s390/kernel/debug.c:42:
+                                        /* formated page) */
                                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: arch/s390/kernel/debug.c:42:
+                                        /* formated page) */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#126: FILE: arch/s390/kernel/debug.c:71:
+			size_t user_len, loff_t * offset);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#129: FILE: arch/s390/kernel/debug.c:73:
+			size_t user_len, loff_t * offset);

ERROR:POINTER_LOCATION: "foo*  bar" should be "foo *bar"
#133: FILE: arch/s390/kernel/debug.c:76:
+static debug_info_t*  debug_info_create(char *name, int pages_per_area,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: arch/s390/kernel/debug.c:77:
+static debug_info_t*  debug_info_create(char *name, int pages_per_area,
+			int nr_areas, int buf_size);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#144: FILE: arch/s390/kernel/debug.c:84:
+			size_t user_buf_size, loff_t * offset);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#145: FILE: arch/s390/kernel/debug.c:85:
+static int debug_prolog_pages_fn(debug_info_t * id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: arch/s390/kernel/debug.c:86:
+static int debug_prolog_pages_fn(debug_info_t * id,
+			struct debug_view *view, char *out_buf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#147: FILE: arch/s390/kernel/debug.c:87:
+static int debug_input_pages_fn(debug_info_t * id, struct debug_view *view,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: arch/s390/kernel/debug.c:88:
+static int debug_input_pages_fn(debug_info_t * id, struct debug_view *view,
+			struct file *file, const char __user *user_buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#149: FILE: arch/s390/kernel/debug.c:89:
+			size_t user_buf_size, loff_t * offset);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#154: FILE: arch/s390/kernel/debug.c:92:
+			size_t user_buf_size, loff_t * offset);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#165: FILE: arch/s390/kernel/debug.c:99:
+			int area, debug_entry_t * entry, char *out_buf);

ERROR:POINTER_LOCATION: "foo*** bar" should be "foo ***bar"
#216: FILE: arch/s390/kernel/debug.c:192:
+	debug_entry_t*** areas;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: arch/s390/kernel/debug.c:193:
+	int i,j;
 	     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#219: FILE: arch/s390/kernel/debug.c:195:
+	areas = (debug_entry_t ***) kmalloc(nr_areas *

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#219: FILE: arch/s390/kernel/debug.c:195:
+	areas = (debug_entry_t ***) kmalloc(nr_areas *

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#219: FILE: arch/s390/kernel/debug.c:195:
+	areas = (debug_entry_t ***) kmalloc(nr_areas *
+					sizeof(debug_entry_t**),
+					GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#220: FILE: arch/s390/kernel/debug.c:196:
+					sizeof(debug_entry_t**),

CHECK:SPACING: No space is necessary after a cast
#225: FILE: arch/s390/kernel/debug.c:201:
+		areas[i] = (debug_entry_t**) kmalloc(pages_per_area *

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#225: FILE: arch/s390/kernel/debug.c:201:
+		areas[i] = (debug_entry_t**) kmalloc(pages_per_area *

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#225: FILE: arch/s390/kernel/debug.c:201:
+		areas[i] = (debug_entry_t**) kmalloc(pages_per_area *

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#225: FILE: arch/s390/kernel/debug.c:201:
+		areas[i] = (debug_entry_t**) kmalloc(pages_per_area *
+				sizeof(debug_entry_t*),GFP_KERNEL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#226: FILE: arch/s390/kernel/debug.c:202:
+				sizeof(debug_entry_t*),GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#226: FILE: arch/s390/kernel/debug.c:202:
+				sizeof(debug_entry_t*),GFP_KERNEL);
 				                      ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#227: FILE: arch/s390/kernel/debug.c:203:
+		if (!areas[i]) {
+			goto fail_malloc_areas2;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#230: FILE: arch/s390/kernel/debug.c:206:
+		for(j = 0; j < pages_per_area; j++) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#231: FILE: arch/s390/kernel/debug.c:207:
+			areas[i][j] = (debug_entry_t*)kmalloc(PAGE_SIZE,

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#231: FILE: arch/s390/kernel/debug.c:207:
+			areas[i][j] = (debug_entry_t*)kmalloc(PAGE_SIZE,

ERROR:SPACING: space required before the open parenthesis '('
#233: FILE: arch/s390/kernel/debug.c:209:
+			if(!areas[i][j]) {

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#234: FILE: arch/s390/kernel/debug.c:210:
+				for(j--; j >=0 ; j--) {
 				           ^

ERROR:SPACING: space required before the open parenthesis '('
#234: FILE: arch/s390/kernel/debug.c:210:
+				for(j--; j >=0 ; j--) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#234: FILE: arch/s390/kernel/debug.c:210:
+				for(j--; j >=0 ; j--) {
+					kfree(areas[i][j]);
+				}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#240: FILE: arch/s390/kernel/debug.c:216:
+				memset(areas[i][j],0,PAGE_SIZE);
 				                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#240: FILE: arch/s390/kernel/debug.c:216:
+				memset(areas[i][j],0,PAGE_SIZE);
 				                    ^

ERROR:SPACING: space required before the open brace '{'
#247: FILE: arch/s390/kernel/debug.c:223:
+	for(i--; i >= 0; i--){

ERROR:SPACING: space required before the open parenthesis '('
#247: FILE: arch/s390/kernel/debug.c:223:
+	for(i--; i >= 0; i--){

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#248: FILE: arch/s390/kernel/debug.c:224:
+		for(j=0; j < pages_per_area;j++){
 		     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#248: FILE: arch/s390/kernel/debug.c:224:
+		for(j=0; j < pages_per_area;j++){
 		                           ^

ERROR:SPACING: space required before the open brace '{'
#248: FILE: arch/s390/kernel/debug.c:224:
+		for(j=0; j < pages_per_area;j++){

ERROR:SPACING: space required before the open parenthesis '('
#248: FILE: arch/s390/kernel/debug.c:224:
+		for(j=0; j < pages_per_area;j++){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#248: FILE: arch/s390/kernel/debug.c:224:
+		for(j=0; j < pages_per_area;j++){
+			kfree(areas[i][j]);
+		}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#257: FILE: arch/s390/kernel/debug.c:233:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#259: FILE: arch/s390/kernel/debug.c:235:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#269: FILE: arch/s390/kernel/debug.c:243:
+debug_info_alloc(char *name, int pages_per_area, int nr_areas, int buf_size,
+		int level, int mode)

CHECK:SPACING: No space is necessary after a cast
#277: FILE: arch/s390/kernel/debug.c:249:
+	rc = (debug_info_t*) kmalloc(sizeof(debug_info_t), GFP_KERNEL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#277: FILE: arch/s390/kernel/debug.c:249:
+	rc = (debug_info_t*) kmalloc(sizeof(debug_info_t), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#277: FILE: arch/s390/kernel/debug.c:249:
+	rc = (debug_info_t*) kmalloc(sizeof(debug_info_t), GFP_KERNEL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#301: FILE: arch/s390/kernel/debug.c:252:
+	rc->active_entries = (int*)kmalloc(nr_areas * sizeof(int), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#301: FILE: arch/s390/kernel/debug.c:252:
+	rc->active_entries = (int*)kmalloc(nr_areas * sizeof(int), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#301: FILE: arch/s390/kernel/debug.c:252:
+	rc->active_entries = (int*)kmalloc(nr_areas * sizeof(int), GFP_KERNEL);

ERROR:SPACING: space required before the open parenthesis '('
#302: FILE: arch/s390/kernel/debug.c:253:
+	if(!rc->active_entries)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#305: FILE: arch/s390/kernel/debug.c:256:
+	rc->active_pages = (int*)kmalloc(nr_areas * sizeof(int), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#305: FILE: arch/s390/kernel/debug.c:256:
+	rc->active_pages = (int*)kmalloc(nr_areas * sizeof(int), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#305: FILE: arch/s390/kernel/debug.c:256:
+	rc->active_pages = (int*)kmalloc(nr_areas * sizeof(int), GFP_KERNEL);

ERROR:SPACING: space required before the open parenthesis '('
#306: FILE: arch/s390/kernel/debug.c:257:
+	if(!rc->active_pages)

ERROR:SPACING: space required before the open brace '{'
#309: FILE: arch/s390/kernel/debug.c:260:
+	if((mode == ALL_AREAS) && (pages_per_area != 0)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mode == ALL_AREAS'
#309: FILE: arch/s390/kernel/debug.c:260:
+	if((mode == ALL_AREAS) && (pages_per_area != 0)){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pages_per_area != 0'
#309: FILE: arch/s390/kernel/debug.c:260:
+	if((mode == ALL_AREAS) && (pages_per_area != 0)){

ERROR:SPACING: space required before the open parenthesis '('
#309: FILE: arch/s390/kernel/debug.c:260:
+	if((mode == ALL_AREAS) && (pages_per_area != 0)){

ERROR:SPACING: space required before the open parenthesis '('
#311: FILE: arch/s390/kernel/debug.c:262:
+		if(!rc->areas)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#333: FILE: arch/s390/kernel/debug.c:277:
+	strlcpy(rc->name, name, sizeof(rc->name)-1);
 	                                        ^

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#333: FILE: arch/s390/kernel/debug.c:277:
+	strlcpy(rc->name, name, sizeof(rc->name)-1);

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#339: FILE: arch/s390/kernel/debug.c:279:
+	memset(rc->debugfs_entries, 0 ,DEBUG_MAX_VIEWS *
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#339: FILE: arch/s390/kernel/debug.c:279:
+	memset(rc->debugfs_entries, 0 ,DEBUG_MAX_VIEWS *
 	                              ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#340: FILE: arch/s390/kernel/debug.c:280:
+		sizeof(struct dentry*));

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#369: FILE: arch/s390/kernel/debug.c:301:
+debug_areas_free(debug_info_t* db_info)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#371: FILE: arch/s390/kernel/debug.c:303:
+	int i,j;
 	     ^

ERROR:SPACING: space required before the open parenthesis '('
#373: FILE: arch/s390/kernel/debug.c:305:
+	if(!db_info->areas)

ERROR:SPACING: space required before the open parenthesis '('
#378: FILE: arch/s390/kernel/debug.c:308:
+		for(j = 0; j < db_info->pages_per_area; j++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#378: FILE: arch/s390/kernel/debug.c:308:
+		for(j = 0; j < db_info->pages_per_area; j++) {
+			kfree(db_info->areas[i][j]);
+		}

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#393: FILE: arch/s390/kernel/debug.c:322:
+static void
+debug_info_free(debug_info_t* db_info){

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#394: FILE: arch/s390/kernel/debug.c:323:
+debug_info_free(debug_info_t* db_info){

ERROR:SPACING: space required before the open brace '{'
#394: FILE: arch/s390/kernel/debug.c:323:
+debug_info_free(debug_info_t* db_info){

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: arch/s390/kernel/debug.c:340:
+        rc = debug_info_alloc(name, pages_per_area, nr_areas, buf_size,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: arch/s390/kernel/debug.c:340:
+        rc = debug_info_alloc(name, pages_per_area, nr_areas, buf_size,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: arch/s390/kernel/debug.c:341:
+        rc = debug_info_alloc(name, pages_per_area, nr_areas, buf_size,
+				DEBUG_DEFAULT_LEVEL, ALL_AREAS);

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: arch/s390/kernel/debug.c:346:
+        rc->debugfs_root_entry = debugfs_create_dir(rc->name,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: arch/s390/kernel/debug.c:346:
+        rc->debugfs_root_entry = debugfs_create_dir(rc->name,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#423: FILE: arch/s390/kernel/debug.c:347:
+        rc->debugfs_root_entry = debugfs_create_dir(rc->name,
+					debug_debugfs_root_entry);

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: arch/s390/kernel/debug.c:350:
+        if (!debug_area_first) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: arch/s390/kernel/debug.c:350:
+        if (!debug_area_first) {$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#437: FILE: arch/s390/kernel/debug.c:373:
+debug_info_copy(debug_info_t* in, int mode)

ERROR:CODE_INDENT: code indent should use tabs where possible
#440: FILE: arch/s390/kernel/debug.c:375:
+        int i,j;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: arch/s390/kernel/debug.c:375:
+        int i,j;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#440: FILE: arch/s390/kernel/debug.c:375:
+        int i,j;
              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#447: FILE: arch/s390/kernel/debug.c:378:
+        rc = debug_info_alloc(in->name, in->pages_per_area, in->nr_areas,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: arch/s390/kernel/debug.c:378:
+        rc = debug_info_alloc(in->name, in->pages_per_area, in->nr_areas,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#448: FILE: arch/s390/kernel/debug.c:379:
+        rc = debug_info_alloc(in->name, in->pages_per_area, in->nr_areas,
+				in->buf_size, in->level, mode);

ERROR:CODE_INDENT: code indent should use tabs where possible
#449: FILE: arch/s390/kernel/debug.c:380:
+        if(!rc || (mode == NO_AREAS))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: arch/s390/kernel/debug.c:380:
+        if(!rc || (mode == NO_AREAS))$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mode == NO_AREAS'
#449: FILE: arch/s390/kernel/debug.c:380:
+        if(!rc || (mode == NO_AREAS))

ERROR:SPACING: space required before the open parenthesis '('
#449: FILE: arch/s390/kernel/debug.c:380:
+        if(!rc || (mode == NO_AREAS))

ERROR:CODE_INDENT: code indent should use tabs where possible
#450: FILE: arch/s390/kernel/debug.c:381:
+                goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: arch/s390/kernel/debug.c:381:
+                goto out;$

ERROR:SPACING: space required before the open parenthesis '('
#454: FILE: arch/s390/kernel/debug.c:384:
+		for(j = 0; j < in->pages_per_area; j++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#454: FILE: arch/s390/kernel/debug.c:384:
+		for(j = 0; j < in->pages_per_area; j++) {
+			memcpy(rc->areas[i][j], in->areas[i][j],PAGE_SIZE);
+		}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#455: FILE: arch/s390/kernel/debug.c:385:
+			memcpy(rc->areas[i][j], in->areas[i][j],PAGE_SIZE);
 			                                       ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#466: FILE: arch/s390/kernel/debug.c:398:
+debug_info_get(debug_info_t * db_info)

ERROR:CODE_INDENT: code indent should use tabs where possible
#522: FILE: arch/s390/kernel/debug.c:448:
+                ^Ilen += view->prolog_proc(id_snap,view,p_info->temp_buf);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#522: FILE: arch/s390/kernel/debug.c:448:
+                ^Ilen += view->prolog_proc(id_snap,view,p_info->temp_buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: arch/s390/kernel/debug.c:448:
+                ^Ilen += view->prolog_proc(id_snap,view,p_info->temp_buf);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#522: FILE: arch/s390/kernel/debug.c:448:
+                	len += view->prolog_proc(id_snap,view,p_info->temp_buf);
                 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#522: FILE: arch/s390/kernel/debug.c:448:
+                	len += view->prolog_proc(id_snap,view,p_info->temp_buf);
                 	                                     ^

CHECK:SPACING: No space is necessary after a cast
#530: FILE: arch/s390/kernel/debug.c:453:
+	act_entry = (debug_entry_t *) ((char*)id_snap->areas[p_info->act_area]

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#530: FILE: arch/s390/kernel/debug.c:453:
+	act_entry = (debug_entry_t *) ((char*)id_snap->areas[p_info->act_area]

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#553: FILE: arch/s390/kernel/debug.c:473:
+extern inline int

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required before the open parenthesis '('
#570: FILE: arch/s390/kernel/debug.c:484:
+	if(!id->areas)

ERROR:SPACING: space required before the open brace '{'
#574: FILE: arch/s390/kernel/debug.c:488:
+	if (p_info->act_entry > (PAGE_SIZE - id->entry_size)){

ERROR:SPACING: space required before the open parenthesis '('
#579: FILE: arch/s390/kernel/debug.c:492:
+		if((p_info->act_page % id->pages_per_area) == 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#581: FILE: arch/s390/kernel/debug.c:494:
+        ^I^Ip_info->act_area++;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#581: FILE: arch/s390/kernel/debug.c:494:
+        ^I^Ip_info->act_area++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: arch/s390/kernel/debug.c:494:
+        ^I^Ip_info->act_area++;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#582: FILE: arch/s390/kernel/debug.c:495:
+			p_info->act_page=0;
 			                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#599: FILE: arch/s390/kernel/debug.c:514:
+	    size_t  len,		/* length of buffer */
+	    loff_t *offset)		/* offset in the file */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#629: FILE: arch/s390/kernel/debug.c:534:
+		user_buf_residue = len-count;
 		                      ^

ERROR:SPACING: space required before the open brace '{'
#631: FILE: arch/s390/kernel/debug.c:536:
+		if(copy_size){

ERROR:SPACING: space required before the open parenthesis '('
#631: FILE: arch/s390/kernel/debug.c:536:
+		if(copy_size){

ERROR:SPACING: space required before the open brace '{'
#642: FILE: arch/s390/kernel/debug.c:543:
+		if(copy_size == formatted_line_residue){

ERROR:SPACING: space required before the open parenthesis '('
#642: FILE: arch/s390/kernel/debug.c:543:
+		if(copy_size == formatted_line_residue){

ERROR:SPACING: space required before the open parenthesis '('
#644: FILE: arch/s390/kernel/debug.c:545:
+			if(debug_next_entry(p_info))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#664: FILE: arch/s390/kernel/debug.c:564:
+debug_input(struct file *file, const char __user *user_buf, size_t length,
+		loff_t *offset)

CHECK:BRACES: braces {} should be used on all arms of this statement
#691: FILE: arch/s390/kernel/debug.c:601:
+			if (!debug_info->views[i])
[...]
-			else if (debug_info->proc_entries[i] ==
[...]

ERROR:SPACING: space required before the open parenthesis '('
#714: FILE: arch/s390/kernel/debug.c:620:
+	if(!debug_info->views[i]->format_proc &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#715: FILE: arch/s390/kernel/debug.c:621:
+	if(!debug_info->views[i]->format_proc &&
+		!debug_info->views[i]->header_proc){

CHECK:SPACING: No space is necessary after a cast
#735: FILE: arch/s390/kernel/debug.c:631:
+	p_info = (file_private_info_t *) kmalloc(sizeof(file_private_info_t),

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#735: FILE: arch/s390/kernel/debug.c:631:
+	p_info = (file_private_info_t *) kmalloc(sizeof(file_private_info_t),

ERROR:SPACING: space required before the open brace '{'
#737: FILE: arch/s390/kernel/debug.c:633:
+	if(!p_info){

ERROR:SPACING: space required before the open parenthesis '('
#737: FILE: arch/s390/kernel/debug.c:633:
+	if(!p_info){

ERROR:SPACING: space required before the open parenthesis '('
#738: FILE: arch/s390/kernel/debug.c:634:
+		if(debug_info_snapshot)

ERROR:SPACING: space required before the open parenthesis '('
#775: FILE: arch/s390/kernel/debug.c:665:
+	if(p_info->debug_info_snap)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#787: FILE: arch/s390/kernel/debug.c:679:
+debug_register (char *name, int pages_per_area, int nr_areas, int buf_size)

ERROR:CODE_INDENT: code indent should use tabs where possible
#810: FILE: arch/s390/kernel/debug.c:696:
+        if (!rc){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#810: FILE: arch/s390/kernel/debug.c:696:
+        if (!rc){$

ERROR:SPACING: space required before the open brace '{'
#810: FILE: arch/s390/kernel/debug.c:696:
+        if (!rc){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#810: FILE: arch/s390/kernel/debug.c:696:
+        if (!rc){
 		printk(KERN_ERR "debug: debug_register failed for %s\n",name);
         }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#820: FILE: arch/s390/kernel/debug.c:709:
+debug_unregister(debug_info_t * id)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#841: FILE: arch/s390/kernel/debug.c:726:
+debug_set_size(debug_info_t* id, int nr_areas, int pages_per_area)

ERROR:POINTER_LOCATION: "foo *** bar" should be "foo ***bar"
#844: FILE: arch/s390/kernel/debug.c:729:
+	debug_entry_t *** new_areas;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#845: FILE: arch/s390/kernel/debug.c:730:
+	int rc=0;
 	      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nr_areas <= 0'
#847: FILE: arch/s390/kernel/debug.c:732:
+	if(!id || (nr_areas <= 0) || (pages_per_area < 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pages_per_area < 0'
#847: FILE: arch/s390/kernel/debug.c:732:
+	if(!id || (nr_areas <= 0) || (pages_per_area < 0))

ERROR:SPACING: space required before the open parenthesis '('
#847: FILE: arch/s390/kernel/debug.c:732:
+	if(!id || (nr_areas <= 0) || (pages_per_area < 0))

ERROR:SPACING: space required before the open brace '{'
#849: FILE: arch/s390/kernel/debug.c:734:
+	if(pages_per_area > 0){

ERROR:SPACING: space required before the open parenthesis '('
#849: FILE: arch/s390/kernel/debug.c:734:
+	if(pages_per_area > 0){

ERROR:SPACING: space required before the open parenthesis '('
#851: FILE: arch/s390/kernel/debug.c:736:
+		if(!new_areas) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#852: FILE: arch/s390/kernel/debug.c:737:
+			printk(KERN_WARNING "debug: could not allocate memory "\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#852: FILE: arch/s390/kernel/debug.c:737:
+			printk(KERN_WARNING "debug: could not allocate memory "\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#853: FILE: arch/s390/kernel/debug.c:738:
+					 "for pagenumber: %i\n",pages_per_area);
 					                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#860: FILE: arch/s390/kernel/debug.c:745:
+	spin_lock_irqsave(&id->lock,flags);
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#866: FILE: arch/s390/kernel/debug.c:751:
+	memset(id->active_entries,0,sizeof(int)*id->nr_areas);
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#866: FILE: arch/s390/kernel/debug.c:751:
+	memset(id->active_entries,0,sizeof(int)*id->nr_areas);
 	                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#866: FILE: arch/s390/kernel/debug.c:751:
+	memset(id->active_entries,0,sizeof(int)*id->nr_areas);
 	                                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#867: FILE: arch/s390/kernel/debug.c:752:
+	memset(id->active_pages, 0, sizeof(int)*id->nr_areas);
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#868: FILE: arch/s390/kernel/debug.c:753:
+	spin_unlock_irqrestore(&id->lock,flags);
 	                                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#869: FILE: arch/s390/kernel/debug.c:754:
+	printk(KERN_INFO "debug: %s: set new size (%i pages)\n"\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#869: FILE: arch/s390/kernel/debug.c:754:
+	printk(KERN_INFO "debug: %s: set new size (%i pages)\n"\

ERROR:SPACING: space required after that ',' (ctx:ExV)
#870: FILE: arch/s390/kernel/debug.c:755:
+			 ,id->name, pages_per_area);
 			 ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#882: FILE: arch/s390/kernel/debug.c:766:
+debug_set_level(debug_info_t* id, int new_level)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#902: FILE: arch/s390/kernel/debug.c:791:
+extern inline void

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#903: FILE: arch/s390/kernel/debug.c:792:
+proceed_active_entry(debug_info_t * id)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#908: FILE: arch/s390/kernel/debug.c:794:
+	if ((id->active_entries[id->active_area] += id->entry_size)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required before the open brace '{'
#909: FILE: arch/s390/kernel/debug.c:795:
+	    > (PAGE_SIZE - id->entry_size)){

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#923: FILE: arch/s390/kernel/debug.c:808:
+extern inline void

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#924: FILE: arch/s390/kernel/debug.c:809:
+proceed_active_area(debug_info_t * id)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#933: FILE: arch/s390/kernel/debug.c:819:
+extern inline debug_entry_t*

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#934: FILE: arch/s390/kernel/debug.c:820:
+get_active_entry(debug_info_t * id)

CHECK:SPACING: No space is necessary after a cast
#938: FILE: arch/s390/kernel/debug.c:822:
+	return (debug_entry_t *) (((char *) id->areas[id->active_area]

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#950: FILE: arch/s390/kernel/debug.c:832:
+extern inline void

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#951: FILE: arch/s390/kernel/debug.c:833:
+debug_finish_entry(debug_info_t * id, debug_entry_t* active, int level,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#951: FILE: arch/s390/kernel/debug.c:833:
+debug_finish_entry(debug_info_t * id, debug_entry_t* active, int level,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#952: FILE: arch/s390/kernel/debug.c:834:
+debug_finish_entry(debug_info_t * id, debug_entry_t* active, int level,
+			int exception)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#962: FILE: arch/s390/kernel/debug.c:859:
+s390dbf_procactive(ctl_table *table, int write, struct file *filp,
                                                              ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#963: FILE: arch/s390/kernel/debug.c:860:
+s390dbf_procactive(ctl_table *table, int write, struct file *filp,
                      void __user *buffer, size_t *lenp, loff_t *ppos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#983: FILE: arch/s390/kernel/debug.c:918:
+debug_event_common(debug_info_t * id, int level, const void *buf, int len)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1000: FILE: arch/s390/kernel/debug.c:941:
+*debug_exception_common(debug_info_t * id, int level, const void *buf, int len)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1015: FILE: arch/s390/kernel/debug.c:962:
+extern inline int

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1027: FILE: arch/s390/kernel/debug.c:979:
+debug_sprintf_event(debug_info_t* id, int level,char *string,...)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1027: FILE: arch/s390/kernel/debug.c:979:
+debug_sprintf_event(debug_info_t* id, int level,char *string,...)
                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1027: FILE: arch/s390/kernel/debug.c:979:
+debug_sprintf_event(debug_info_t* id, int level,char *string,...)
                                                             ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1047: FILE: arch/s390/kernel/debug.c:1012:
+debug_sprintf_exception(debug_info_t* id, int level,char *string,...)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1047: FILE: arch/s390/kernel/debug.c:1012:
+debug_sprintf_exception(debug_info_t* id, int level,char *string,...)
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1047: FILE: arch/s390/kernel/debug.c:1012:
+debug_sprintf_exception(debug_info_t* id, int level,char *string,...)
                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1075: FILE: arch/s390/kernel/debug.c:1053:
+	debug_debugfs_root_entry = debugfs_create_dir(DEBUG_DIR_ROOT,NULL);
 	                                                            ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1085: FILE: arch/s390/kernel/debug.c:1066:
+debug_register_view(debug_info_t * id, struct debug_view *view)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1102: FILE: arch/s390/kernel/debug.c:1081:
+	pde = debugfs_create_file(view->name, mode, id->debugfs_root_entry,
+				NULL, &debug_file_ops);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1105: FILE: arch/s390/kernel/debug.c:1083:
+		printk(KERN_WARNING "debug: debugfs_create_file() failed!"\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1105: FILE: arch/s390/kernel/debug.c:1083:
+		printk(KERN_WARNING "debug: debugfs_create_file() failed!"\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1106: FILE: arch/s390/kernel/debug.c:1084:
+			" Cannot register view %s/%s\n", id->name,view->name);
 			                                         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1145: FILE: arch/s390/kernel/debug.c:1114:
+debug_unregister_view(debug_info_t * id, struct debug_view *view)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1170: FILE: arch/s390/kernel/debug.c:1142:
+	char* buffer;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1184: FILE: arch/s390/kernel/debug.c:1156:
+        return buffer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1184: FILE: arch/s390/kernel/debug.c:1156:
+        return buffer;$

ERROR:SPACING: space required before the open parenthesis '('
#1192: FILE: arch/s390/kernel/debug.c:1164:
+	for(; isspace(*buf); buf++);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1192: FILE: arch/s390/kernel/debug.c:1164:
+	for(; isspace(*buf); buf++);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1193: FILE: arch/s390/kernel/debug.c:1165:
+	rc = simple_strtoul(buf, &buf, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:SPACING: space required before the open brace '{'
#1194: FILE: arch/s390/kernel/debug.c:1166:
+	if(*buf){

ERROR:SPACING: space required before the open parenthesis '('
#1194: FILE: arch/s390/kernel/debug.c:1166:
+	if(*buf){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1195: FILE: arch/s390/kernel/debug.c:1167:
+		printk("debug: no integer specified!\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1207: FILE: arch/s390/kernel/debug.c:1183:
+debug_prolog_pages_fn(debug_info_t * id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1208: FILE: arch/s390/kernel/debug.c:1184:
+debug_prolog_pages_fn(debug_info_t * id,
 				 struct debug_view *view, char *out_buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1218: FILE: arch/s390/kernel/debug.c:1194:
+debug_input_pages_fn(debug_info_t * id, struct debug_view *view,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1219: FILE: arch/s390/kernel/debug.c:1195:
+debug_input_pages_fn(debug_info_t * id, struct debug_view *view,
+			struct file *file, const char __user *user_buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1220: FILE: arch/s390/kernel/debug.c:1196:
+			size_t user_len, loff_t * offset)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1223: FILE: arch/s390/kernel/debug.c:1199:
+	int rc,new_pages;
 	      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1226: FILE: arch/s390/kernel/debug.c:1202:
+                user_len = 0x10000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1226: FILE: arch/s390/kernel/debug.c:1202:
+                user_len = 0x10000;$

ERROR:SPACING: space required before the open brace '{'
#1227: FILE: arch/s390/kernel/debug.c:1203:
+	if (*offset != 0){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1231: FILE: arch/s390/kernel/debug.c:1207:
+	str = debug_get_user_string(user_buf,user_len);
 	                                    ^

ERROR:SPACING: space required before the open brace '{'
#1232: FILE: arch/s390/kernel/debug.c:1208:
+	if(IS_ERR(str)){

ERROR:SPACING: space required before the open parenthesis '('
#1232: FILE: arch/s390/kernel/debug.c:1208:
+	if(IS_ERR(str)){

ERROR:SPACING: space required before the open brace '{'
#1237: FILE: arch/s390/kernel/debug.c:1213:
+	if(new_pages < 0){

ERROR:SPACING: space required before the open parenthesis '('
#1237: FILE: arch/s390/kernel/debug.c:1213:
+	if(new_pages < 0){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1241: FILE: arch/s390/kernel/debug.c:1217:
+	rc = debug_set_size(id,id->nr_areas, new_pages);
 	                      ^

ERROR:SPACING: space required before the open brace '{'
#1242: FILE: arch/s390/kernel/debug.c:1218:
+	if(rc != 0){

ERROR:SPACING: space required before the open parenthesis '('
#1242: FILE: arch/s390/kernel/debug.c:1218:
+	if(rc != 0){

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1259: FILE: arch/s390/kernel/debug.c:1235:
+debug_prolog_level_fn(debug_info_t * id, struct debug_view *view, char *out_buf)

ERROR:SPACING: space required before the open parenthesis '('
#1265: FILE: arch/s390/kernel/debug.c:1239:
+	if(id->level == DEBUG_OFF_LEVEL) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1265: FILE: arch/s390/kernel/debug.c:1239:
+	if(id->level == DEBUG_OFF_LEVEL) {
[...]
+	else {
[...]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1266: FILE: arch/s390/kernel/debug.c:1240:
+		rc = sprintf(out_buf,"-\n");
 		                    ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1268: FILE: arch/s390/kernel/debug.c:1242:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1268: FILE: arch/s390/kernel/debug.c:1242:
+	else {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1287: FILE: arch/s390/kernel/debug.c:1253:
+debug_input_level_fn(debug_info_t * id, struct debug_view *view,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1288: FILE: arch/s390/kernel/debug.c:1254:
+debug_input_level_fn(debug_info_t * id, struct debug_view *view,
+			struct file *file, const char __user *user_buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1289: FILE: arch/s390/kernel/debug.c:1255:
+			size_t user_len, loff_t * offset)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1292: FILE: arch/s390/kernel/debug.c:1258:
+	int rc,new_level;
 	      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1295: FILE: arch/s390/kernel/debug.c:1261:
+                user_len = 0x10000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1295: FILE: arch/s390/kernel/debug.c:1261:
+                user_len = 0x10000;$

ERROR:SPACING: space required before the open brace '{'
#1296: FILE: arch/s390/kernel/debug.c:1262:
+	if (*offset != 0){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1302: FILE: arch/s390/kernel/debug.c:1266:
+	str = debug_get_user_string(user_buf,user_len);
 	                                    ^

ERROR:SPACING: space required before the open brace '{'
#1303: FILE: arch/s390/kernel/debug.c:1267:
+	if(IS_ERR(str)){

ERROR:SPACING: space required before the open parenthesis '('
#1303: FILE: arch/s390/kernel/debug.c:1267:
+	if(IS_ERR(str)){

ERROR:SPACING: space required before the open brace '{'
#1311: FILE: arch/s390/kernel/debug.c:1271:
+	if(str[0] == '-'){

ERROR:SPACING: space required before the open parenthesis '('
#1311: FILE: arch/s390/kernel/debug.c:1271:
+	if(str[0] == '-'){

ERROR:SPACING: space required before the open parenthesis '('
#1322: FILE: arch/s390/kernel/debug.c:1278:
+	if(new_level < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1323: FILE: arch/s390/kernel/debug.c:1279:
+		printk(KERN_INFO "debug: level `%s` is not valid\n", str);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1342: FILE: arch/s390/kernel/debug.c:1298:
+debug_flush(debug_info_t* id, int area)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1346: FILE: arch/s390/kernel/debug.c:1301:
+        int i,j;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1346: FILE: arch/s390/kernel/debug.c:1301:
+        int i,j;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1346: FILE: arch/s390/kernel/debug.c:1301:
+        int i,j;
              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1349: FILE: arch/s390/kernel/debug.c:1303:
+        if(!id || !id->areas)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1349: FILE: arch/s390/kernel/debug.c:1303:
+        if(!id || !id->areas)$

ERROR:SPACING: space required before the open parenthesis '('
#1349: FILE: arch/s390/kernel/debug.c:1303:
+        if(!id || !id->areas)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1357: FILE: arch/s390/kernel/debug.c:1308:
+                memset(id->active_entries, 0, id->nr_areas * sizeof(int));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1357: FILE: arch/s390/kernel/debug.c:1308:
+                memset(id->active_entries, 0, id->nr_areas * sizeof(int));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1358: FILE: arch/s390/kernel/debug.c:1309:
+                for (i = 0; i < id->nr_areas; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1358: FILE: arch/s390/kernel/debug.c:1309:
+                for (i = 0; i < id->nr_areas; i++) {$

ERROR:SPACING: space required before the open parenthesis '('
#1360: FILE: arch/s390/kernel/debug.c:1311:
+			for(j = 0; j < id->pages_per_area; j++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1360: FILE: arch/s390/kernel/debug.c:1311:
+			for(j = 0; j < id->pages_per_area; j++) {
+                        	memset(id->areas[i][j], 0, PAGE_SIZE);
+			}

ERROR:CODE_INDENT: code indent should use tabs where possible
#1361: FILE: arch/s390/kernel/debug.c:1312:
+                        ^Imemset(id->areas[i][j], 0, PAGE_SIZE);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1361: FILE: arch/s390/kernel/debug.c:1312:
+                        ^Imemset(id->areas[i][j], 0, PAGE_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1361: FILE: arch/s390/kernel/debug.c:1312:
+                        ^Imemset(id->areas[i][j], 0, PAGE_SIZE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1370: FILE: arch/s390/kernel/debug.c:1317:
+                id->active_entries[area] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1370: FILE: arch/s390/kernel/debug.c:1317:
+                id->active_entries[area] = 0;$

ERROR:SPACING: space required before the open parenthesis '('
#1372: FILE: arch/s390/kernel/debug.c:1319:
+		for(i = 0; i < id->pages_per_area; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1372: FILE: arch/s390/kernel/debug.c:1319:
+		for(i = 0; i < id->pages_per_area; i++) {
+                	memset(id->areas[area][i],0,PAGE_SIZE);
+		}

ERROR:CODE_INDENT: code indent should use tabs where possible
#1373: FILE: arch/s390/kernel/debug.c:1320:
+                ^Imemset(id->areas[area][i],0,PAGE_SIZE);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1373: FILE: arch/s390/kernel/debug.c:1320:
+                ^Imemset(id->areas[area][i],0,PAGE_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1373: FILE: arch/s390/kernel/debug.c:1320:
+                ^Imemset(id->areas[area][i],0,PAGE_SIZE);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1373: FILE: arch/s390/kernel/debug.c:1320:
+                	memset(id->areas[area][i],0,PAGE_SIZE);
                 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1373: FILE: arch/s390/kernel/debug.c:1320:
+                	memset(id->areas[area][i],0,PAGE_SIZE);
                 	                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1375: FILE: arch/s390/kernel/debug.c:1322:
+                printk(KERN_INFO "debug: %s: area %i has been flushed\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1375: FILE: arch/s390/kernel/debug.c:1322:
+                printk(KERN_INFO "debug: %s: area %i has been flushed\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1375: FILE: arch/s390/kernel/debug.c:1322:
+                printk(KERN_INFO "debug: %s: area %i has been flushed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1376: FILE: arch/s390/kernel/debug.c:1323:
+                printk(KERN_INFO "debug: %s: area %i has been flushed\n",
                         id->name, area);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1380: FILE: arch/s390/kernel/debug.c:1326:
+                      "debug: %s: area %i cannot be flushed (range: %i - %i)\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1380: FILE: arch/s390/kernel/debug.c:1326:
+                      "debug: %s: area %i cannot be flushed (range: %i - %i)\n",$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1392: FILE: arch/s390/kernel/debug.c:1337:
+debug_input_flush_fn(debug_info_t * id, struct debug_view *view,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1393: FILE: arch/s390/kernel/debug.c:1338:
+debug_input_flush_fn(debug_info_t * id, struct debug_view *view,
+			struct file *file, const char __user *user_buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1394: FILE: arch/s390/kernel/debug.c:1339:
+			size_t user_len, loff_t * offset)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1400: FILE: arch/s390/kernel/debug.c:1342:
+        int rc = user_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1400: FILE: arch/s390/kernel/debug.c:1342:
+        int rc = user_len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1403: FILE: arch/s390/kernel/debug.c:1345:
+                user_len = 0x10000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1403: FILE: arch/s390/kernel/debug.c:1345:
+                user_len = 0x10000;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1404: FILE: arch/s390/kernel/debug.c:1346:
+        if (*offset != 0){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1404: FILE: arch/s390/kernel/debug.c:1346:
+        if (*offset != 0){$

ERROR:SPACING: space required before the open brace '{'
#1404: FILE: arch/s390/kernel/debug.c:1346:
+        if (*offset != 0){

ERROR:CODE_INDENT: code indent should use tabs where possible
#1418: FILE: arch/s390/kernel/debug.c:1367:
+        *offset += user_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1418: FILE: arch/s390/kernel/debug.c:1367:
+        *offset += user_len;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1429: FILE: arch/s390/kernel/debug.c:1376:
+debug_raw_header_fn(debug_info_t * id, struct debug_view *view,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1430: FILE: arch/s390/kernel/debug.c:1377:
+debug_raw_header_fn(debug_info_t * id, struct debug_view *view,
+			int area, debug_entry_t * entry, char *out_buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1430: FILE: arch/s390/kernel/debug.c:1377:
+			int area, debug_entry_t * entry, char *out_buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1440: FILE: arch/s390/kernel/debug.c:1391:
+debug_raw_format_fn(debug_info_t * id, struct debug_view *view,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1441: FILE: arch/s390/kernel/debug.c:1392:
+debug_raw_format_fn(debug_info_t * id, struct debug_view *view,
 			       char *out_buf, const char *in_buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1451: FILE: arch/s390/kernel/debug.c:1406:
+debug_hex_ascii_format_fn(debug_info_t * id, struct debug_view *view,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1452: FILE: arch/s390/kernel/debug.c:1407:
+^I    ^I^I  char *out_buf, const char *in_buf)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1452: FILE: arch/s390/kernel/debug.c:1407:
+^I    ^I^I  char *out_buf, const char *in_buf)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1452: FILE: arch/s390/kernel/debug.c:1407:
+debug_hex_ascii_format_fn(debug_info_t * id, struct debug_view *view,
+	    		  char *out_buf, const char *in_buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1462: FILE: arch/s390/kernel/debug.c:1432:
+debug_dflt_header_fn(debug_info_t * id, struct debug_view *view,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1463: FILE: arch/s390/kernel/debug.c:1433:
+debug_dflt_header_fn(debug_info_t * id, struct debug_view *view,
 			 int area, debug_entry_t * entry, char *out_buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1473: FILE: arch/s390/kernel/debug.c:1467:
+debug_sprintf_format_fn(debug_info_t * id, struct debug_view *view,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1474: FILE: arch/s390/kernel/debug.c:1468:
+                        char *out_buf, debug_sprintf_entry_t *curr_event)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1474: FILE: arch/s390/kernel/debug.c:1468:
+                        char *out_buf, debug_sprintf_entry_t *curr_event)$

WARNING:TYPO_SPELLING: 'unter' may be misspelled - perhaps 'under'?
#1528: FILE: Documentation/s390/s390dbf.txt:58:
+/sys/kernel/debug therefore the debug feature can be accessed unter
                                                               ^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1745: FILE: drivers/s390/block/dasd.c:1986:
+	dasd_debug_area = debug_register("dasd", 1, 2, 8 * sizeof (long));

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1757: FILE: drivers/s390/block/dasd_proc.c:12:
+ * $Revision: 1.32 $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1776: FILE: drivers/s390/char/tape_34xx.c:1354:
+	TAPE_DBF_AREA = debug_register ( "tape_34xx", 2, 2, 4*sizeof(long));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1776: FILE: drivers/s390/char/tape_34xx.c:1354:
+	TAPE_DBF_AREA = debug_register ( "tape_34xx", 2, 2, 4*sizeof(long));
 	                                                     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1776: FILE: drivers/s390/char/tape_34xx.c:1354:
+	TAPE_DBF_AREA = debug_register ( "tape_34xx", 2, 2, 4*sizeof(long));

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1783: FILE: drivers/s390/char/tape_34xx.c:1360:
+	DBF_EVENT(3, "34xx init: $Revision: 1.23 $\n");

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1792: FILE: drivers/s390/char/tape_34xx.c:1381:
+		   "device driver ($Revision: 1.23 $)");

WARNING:SPLIT_STRING: quoted string split across lines
#1792: FILE: drivers/s390/char/tape_34xx.c:1381:
 MODULE_DESCRIPTION("Linux on zSeries channel attached 3480 tape "
+		   "device driver ($Revision: 1.23 $)");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1804: FILE: drivers/s390/char/tape_core.c:1189:
+	TAPE_DBF_AREA = debug_register ( "tape", 2, 2, 4*sizeof(long));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1804: FILE: drivers/s390/char/tape_core.c:1189:
+	TAPE_DBF_AREA = debug_register ( "tape", 2, 2, 4*sizeof(long));
 	                                                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1804: FILE: drivers/s390/char/tape_core.c:1189:
+	TAPE_DBF_AREA = debug_register ( "tape", 2, 2, 4*sizeof(long));

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1839: FILE: drivers/s390/cio/cio.c:4:
+ *   $Revision: 1.134 $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1848: FILE: drivers/s390/cio/cio.c:66:
+	cio_debug_msg_id = debug_register ("cio_msg", 16, 4, 16*sizeof (long));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1848: FILE: drivers/s390/cio/cio.c:66:
+	cio_debug_msg_id = debug_register ("cio_msg", 16, 4, 16*sizeof (long));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1848: FILE: drivers/s390/cio/cio.c:66:
+	cio_debug_msg_id = debug_register ("cio_msg", 16, 4, 16*sizeof (long));
 	                                                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1854: FILE: drivers/s390/cio/cio.c:71:
+	cio_debug_trace_id = debug_register ("cio_trace", 16, 4, 8);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1860: FILE: drivers/s390/cio/cio.c:76:
+	cio_debug_crw_id = debug_register ("cio_crw", 4, 4, 16*sizeof (long));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1860: FILE: drivers/s390/cio/cio.c:76:
+	cio_debug_crw_id = debug_register ("cio_crw", 4, 4, 16*sizeof (long));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1860: FILE: drivers/s390/cio/cio.c:76:
+	cio_debug_crw_id = debug_register ("cio_crw", 4, 4, 16*sizeof (long));
 	                                                      ^

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1872: FILE: drivers/s390/cio/qdio.c:59:
+#define VERSION_QDIO_C "$Revision: 1.101 $"

ERROR:CODE_INDENT: code indent should use tabs where possible
#1917: FILE: drivers/s390/cio/qdio.c:3385:
+                                         QDIO_DBF_SLSB_OUT_PAGES,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1917: FILE: drivers/s390/cio/qdio.c:3385:
+                                         QDIO_DBF_SLSB_OUT_PAGES,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1926: FILE: drivers/s390/cio/qdio.c:3394:
+                                        QDIO_DBF_SLSB_IN_PAGES,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1926: FILE: drivers/s390/cio/qdio.c:3394:
+                                        QDIO_DBF_SLSB_IN_PAGES,$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1938: FILE: drivers/s390/cio/qdio.h:6:
+#define VERSION_CIO_QDIO_H "$Revision: 1.33 $"

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2017: FILE: drivers/s390/net/ctcdbug.c:3:
+ * linux/drivers/s390/net/ctcdbug.c ($Revision: 1.6 $)

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2017: FILE: drivers/s390/net/ctcdbug.c:3:
+ * linux/drivers/s390/net/ctcdbug.c ($Revision: 1.6 $)

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2026: FILE: drivers/s390/net/ctcdbug.c:12:
+ *    $Revision: 1.6 $	 $Date: 2005/05/11 08:10:17 $

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2056: FILE: drivers/s390/net/ctcdbug.h:3:
+ * linux/drivers/s390/net/ctcdbug.h ($Revision: 1.6 $)

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2056: FILE: drivers/s390/net/ctcdbug.h:3:
+ * linux/drivers/s390/net/ctcdbug.h ($Revision: 1.6 $)

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2065: FILE: drivers/s390/net/ctcdbug.h:12:
+ *    $Revision: 1.6 $	 $Date: 2005/05/11 08:10:17 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2126: FILE: drivers/s390/net/lcs.c:14:
+ *    $Revision: 1.99 $	 $Date: 2005/05/11 08:10:17 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2135: FILE: drivers/s390/net/lcs.c:62:
+#define VERSION_LCS_C  "$Revision: 1.99 $"

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2156: FILE: drivers/s390/net/netiucv.c:2:
+ * $Id: netiucv.c,v 1.66 2005/05/11 08:10:17 holzheu Exp $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2161: FILE: drivers/s390/net/netiucv.c:30:
  * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2162: FILE: drivers/s390/net/netiucv.c:31:
  * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2165: FILE: drivers/s390/net/netiucv.c:33:
+ * RELEASE-TAG: IUCV network driver $Revision: 1.66 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2193: FILE: drivers/s390/net/netiucv.c:2079:
+	char vbuf[] = "$Revision: 1.66 $";

ERROR:POINTER_LOCATION: "foo*** bar" should be "foo ***bar"
#2337: FILE: include/asm-s390/debug.h:71:
+	debug_entry_t*** areas;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2344: FILE: include/asm-s390/debug.h:75:
+	struct dentry* debugfs_root_entry;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2345: FILE: include/asm-s390/debug.h:76:
+	struct dentry* debugfs_entries[DEBUG_MAX_VIEWS];

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2366: FILE: include/asm-s390/debug.h:125:
+debug_info_t* debug_register(char* name, int pages, int nr_areas,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2366: FILE: include/asm-s390/debug.h:125:
+debug_info_t* debug_register(char* name, int pages, int nr_areas,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!id'
#2375: FILE: include/asm-s390/debug.h:137:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'level > id->level'
#2375: FILE: include/asm-s390/debug.h:137:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->pages_per_area == 0'
#2375: FILE: include/asm-s390/debug.h:137:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!id'
#2385: FILE: include/asm-s390/debug.h:146:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'level > id->level'
#2385: FILE: include/asm-s390/debug.h:146:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->pages_per_area == 0'
#2385: FILE: include/asm-s390/debug.h:146:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!id'
#2395: FILE: include/asm-s390/debug.h:155:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'level > id->level'
#2395: FILE: include/asm-s390/debug.h:155:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->pages_per_area == 0'
#2395: FILE: include/asm-s390/debug.h:155:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!id'
#2404: FILE: include/asm-s390/debug.h:163:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'level > id->level'
#2404: FILE: include/asm-s390/debug.h:163:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->pages_per_area == 0'
#2404: FILE: include/asm-s390/debug.h:163:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!id'
#2414: FILE: include/asm-s390/debug.h:176:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'level > id->level'
#2414: FILE: include/asm-s390/debug.h:176:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->pages_per_area == 0'
#2414: FILE: include/asm-s390/debug.h:176:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!id'
#2424: FILE: include/asm-s390/debug.h:185:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'level > id->level'
#2424: FILE: include/asm-s390/debug.h:185:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->pages_per_area == 0'
#2424: FILE: include/asm-s390/debug.h:185:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!id'
#2434: FILE: include/asm-s390/debug.h:194:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'level > id->level'
#2434: FILE: include/asm-s390/debug.h:194:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->pages_per_area == 0'
#2434: FILE: include/asm-s390/debug.h:194:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!id'
#2443: FILE: include/asm-s390/debug.h:202:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'level > id->level'
#2443: FILE: include/asm-s390/debug.h:202:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->pages_per_area == 0'
#2443: FILE: include/asm-s390/debug.h:202:
+	if ((!id) || (level > id->level) || (id->pages_per_area == 0))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000173606.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 192 errors, 102 warnings, 68 checks, 2193 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000173606.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
