WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
diff -drN -U2 01-iip/include/linux/sunrpc/xprt.h 02-connect1/include/linux/sunrpc/xprt.h

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#62: FILE: include/linux/sunrpc/xprt.h:52:
+#define RPC_CONNECT_TIMEOUT	(60*HZ)
                            	   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#68: FILE: include/linux/sunrpc/xprt.h:58:
+#define RPC_REESTABLISH_TIMEOUT	(15*HZ)
                                	   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#131: FILE: net/sunrpc/xprt.c:90:
+static struct rpc_xprt * xprt_setup(int proto, struct sockaddr_in *ap,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: net/sunrpc/xprt.c:91:
+static struct rpc_xprt * xprt_setup(int proto, struct sockaddr_in *ap,
+						struct rpc_timeout *to);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: net/sunrpc/xprt.c:425:
+	dprintk("RPC: %4d xprt_reconnect xprt %p %s connected\n", task->tk_pid,
+			xprt, (xprt_connected(xprt) ? "is" : "is not"));

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#174: FILE: net/sunrpc/xprt.c:441:
+	/*
+	 * We're here because the xprt was marked disconnected.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#178: FILE: net/sunrpc/xprt.c:445:
+	if (!(sock = xprt_create_socket(xprt->prot, &xprt->timeout))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#180: FILE: net/sunrpc/xprt.c:447:
+		 * this is likely a permanent error, so cause an abort */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#190: FILE: net/sunrpc/xprt.c:455:
+	/*
+	 * Tell the socket layer to start connecting...

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: net/sunrpc/xprt.c:469:
+			dprintk("RPC: %4d  waiting for connection\n",
+					task->tk_pid);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#232: FILE: net/sunrpc/xprt.c:472:
+			if ((1 << inet->state) & ~(TCPF_SYN_SENT|TCPF_SYN_RECV))
 			                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: net/sunrpc/xprt.c:475:
+			rpc_sleep_on(&xprt->pending, task, xprt_reconn_status,
+									NULL);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#268: FILE: net/sunrpc/xprt.c:504:
+		 * system is soft mounted, just error out, like Solaris.  */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#271: FILE: net/sunrpc/xprt.c:507:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#276: FILE: net/sunrpc/xprt.c:512:
+			printk(KERN_WARNING

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: net/sunrpc/xprt.c:537:
+		dprintk("RPC: %4d xprt_reconn_status: connection established\n",
+				task->tk_pid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: net/sunrpc/xprt.c:541:
+		dprintk("RPC: %4d xprt_reconn_status: timed out\n",
+				task->tk_pid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#304: FILE: net/sunrpc/xprt.c:546:
+		printk(KERN_ERR "RPC: error %d connecting to server %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#305: FILE: net/sunrpc/xprt.c:547:
+		printk(KERN_ERR "RPC: error %d connecting to server %s\n",
+				-task->tk_status, task->tk_client->cl_server);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#326: FILE: net/sunrpc/xprt.c:1209:
+		/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#369: FILE: net/sunrpc/xprt.c:1510:
+		printk("RPC: can't bind to reserved port.\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#392: FILE: net/sunrpc/xprt.c:1535:
+		struct socket *sock = xprt_create_socket(proto, to);
+		if (sock)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#392: FILE: net/sunrpc/xprt.c:1535:
+		if (sock)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#394: FILE: net/sunrpc/xprt.c:1537:
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#398: FILE: net/sunrpc/xprt.c:1541:
+	} else

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#400: FILE: net/sunrpc/xprt.c:1543:
+		/*
+		 * Don't allow a TCP service user unless they have

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000432030.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 12 warnings, 13 checks, 341 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000432030.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
