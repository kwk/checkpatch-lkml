WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
Geddys and some of the Xorg guys noted that they would be able to stop using gettimeofday

WARNING:TYPO_SPELLING: 'mmaped' may be misspelled - perhaps 'mapped'?
#31: 
taken a stab at it.  This patch allows for a page to be mmaped from /dev/rtc
                                                        ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Neil Horman'
#40: 
Signed-off-by: Neil Horman

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: drivers/char/rtc.c:51:
+ *^I1.12b   Neil Horman: Allow memory mapping of /dev/rtc^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#68: FILE: drivers/char/rtc.c:187:
+#define BUF_SIZE (PAGE_SIZE/sizeof(unsigned long))
                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#69: FILE: drivers/char/rtc.c:188:
+static unsigned long rtc_irq_buf[BUF_SIZE] __attribute__ ((aligned (PAGE_SIZE)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(PAGE_SIZE) over __attribute__((aligned(PAGE_SIZE)))
#69: FILE: drivers/char/rtc.c:188:
+static unsigned long rtc_irq_buf[BUF_SIZE] __attribute__ ((aligned (PAGE_SIZE)));

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: drivers/char/rtc.c:399:
+        unsigned long rtc_addr;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: drivers/char/rtc.c:399:
+        unsigned long rtc_addr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: drivers/char/rtc.c:402:
+        if (vma->vm_end - vma->vm_start != PAGE_SIZE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: drivers/char/rtc.c:402:
+        if (vma->vm_end - vma->vm_start != PAGE_SIZE)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: drivers/char/rtc.c:403:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: drivers/char/rtc.c:403:
+                return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: drivers/char/rtc.c:405:
+        if (vma->vm_flags & VM_WRITE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: drivers/char/rtc.c:405:
+        if (vma->vm_flags & VM_WRITE)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: drivers/char/rtc.c:406:
+                return -EPERM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: drivers/char/rtc.c:406:
+                return -EPERM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: drivers/char/rtc.c:408:
+        if (PAGE_SIZE > (1 << 16))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: drivers/char/rtc.c:408:
+        if (PAGE_SIZE > (1 << 16))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: drivers/char/rtc.c:409:
+                return -ENOSYS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: drivers/char/rtc.c:409:
+                return -ENOSYS;$

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#105: FILE: drivers/char/rtc.c:409:
+                return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: drivers/char/rtc.c:411:
+        vma->vm_page_prot = pgprot_noncached(vma->vm_page_prot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: drivers/char/rtc.c:411:
+        vma->vm_page_prot = pgprot_noncached(vma->vm_page_prot);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: drivers/char/rtc.c:413:
+        rtc_addr = __pa(rtc_irq_buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: drivers/char/rtc.c:413:
+        rtc_addr = __pa(rtc_irq_buf);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: drivers/char/rtc.c:414:
+        rtc_addr &= ~(PAGE_SIZE - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: drivers/char/rtc.c:414:
+        rtc_addr &= ~(PAGE_SIZE - 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: drivers/char/rtc.c:415:
+        rtc_addr &= -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: drivers/char/rtc.c:415:
+        rtc_addr &= -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: drivers/char/rtc.c:417:
+        if (remap_pfn_range(vma, vma->vm_start, rtc_addr >> PAGE_SHIFT,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: drivers/char/rtc.c:417:
+        if (remap_pfn_range(vma, vma->vm_start, rtc_addr >> PAGE_SHIFT,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: drivers/char/rtc.c:418:
+                                        PAGE_SIZE, vma->vm_page_prot)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: drivers/char/rtc.c:418:
+        if (remap_pfn_range(vma, vma->vm_start, rtc_addr >> PAGE_SHIFT,
+                                        PAGE_SIZE, vma->vm_page_prot)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: drivers/char/rtc.c:418:
+                                        PAGE_SIZE, vma->vm_page_prot)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: drivers/char/rtc.c:419:
+                printk(KERN_ERR "remap_pfn_range failed in rtc.c\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: drivers/char/rtc.c:419:
+                printk(KERN_ERR "remap_pfn_range failed in rtc.c\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#115: FILE: drivers/char/rtc.c:419:
+                printk(KERN_ERR "remap_pfn_range failed in rtc.c\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: drivers/char/rtc.c:420:
+                return -EAGAIN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/char/rtc.c:420:
+                return -EAGAIN;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: drivers/char/rtc.c:421:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/char/rtc.c:421:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: drivers/char/rtc.c:424:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: drivers/char/rtc.c:424:
+        return 0;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#122: FILE: drivers/char/rtc.c:426:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#139: FILE: drivers/char/rtc.c:1122:
+	memset(rtc_irq_buf,0,PAGE_SIZE);
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#139: FILE: drivers/char/rtc.c:1122:
+	memset(rtc_irq_buf,0,PAGE_SIZE);
 	                    ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000055033.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 23 warnings, 3 checks, 85 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000055033.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
