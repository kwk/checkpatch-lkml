WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
super_block union from linux/fs.h.  For now, just the inode_info include for 

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#143: FILE: drivers/block/rd.c:676:
+	if ((inode = get_empty_inode(NULL)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#152: FILE: drivers/block/rd.c:686:
+	if ((out_inode = get_empty_inode(NULL)) == NULL)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#167: FILE: fs/inode.c:80:
+static inline struct inode *alloc_inode (struct super_block *sb)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#169: FILE: fs/inode.c:82:
+	kmem_cache_t *cache = sb? sb->s_type->inode_cache: NULL;
 	                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#169: FILE: fs/inode.c:82:
+	kmem_cache_t *cache = sb? sb->s_type->inode_cache: NULL;
 	                                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: fs/inode.c:83:
+^Ireturn (struct inode *) kmem_cache_alloc (cache? cache: inode_cachep, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#170: FILE: fs/inode.c:83:
+	return (struct inode *) kmem_cache_alloc (cache? cache: inode_cachep, 

WARNING:LINE_SPACING: Missing a blank line after declarations
#170: FILE: fs/inode.c:83:
+	kmem_cache_t *cache = sb? sb->s_type->inode_cache: NULL;
+	return (struct inode *) kmem_cache_alloc (cache? cache: inode_cachep, 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#170: FILE: fs/inode.c:83:
+	return (struct inode *) kmem_cache_alloc (cache? cache: inode_cachep, 

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#170: FILE: fs/inode.c:83:
+	return (struct inode *) kmem_cache_alloc (cache? cache: inode_cachep, 
 	                                               ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#170: FILE: fs/inode.c:83:
+	return (struct inode *) kmem_cache_alloc (cache? cache: inode_cachep, 
 	                                                      ^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#171: FILE: fs/inode.c:83:
SLAB_KERNEL);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: fs/inode.c:84:
+	return (struct inode *) kmem_cache_alloc (cache? cache: inode_cachep, 
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: fs/inode.c:86:
+static void destroy_inode (struct inode *inode) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#174: FILE: fs/inode.c:86:
+static void destroy_inode (struct inode *inode) 

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#177: FILE: fs/inode.c:89:
+	kmem_cache_t *cache = sb? sb->s_type->inode_cache: NULL;
 	                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#177: FILE: fs/inode.c:89:
+	kmem_cache_t *cache = sb? sb->s_type->inode_cache: NULL;
 	                                                 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#181: FILE: fs/inode.c:92:
+	kmem_cache_free (cache? cache: inode_cachep, inode);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#181: FILE: fs/inode.c:92:
+	kmem_cache_free (cache? cache: inode_cachep, inode);
 	                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#181: FILE: fs/inode.c:92:
+	kmem_cache_free (cache? cache: inode_cachep, inode);
 	                             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#193: FILE: fs/inode.c:671:
+void prune_icache (int goal)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#209: FILE: fs/inode.c:736:
+#if 0

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#214: FILE: fs/inode.c:741:
+		kmem_cache_shrink (fs->inode_cache);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#226: FILE: fs/inode.c:784:
+static void clean_inode (struct super_block *sb, struct inode *inode)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#232: FILE: fs/inode.c:789:
+	unsigned given = sb? sb->s_type->inode_private: 0; // only rd.c has null sb

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#232: FILE: fs/inode.c:789:
+	unsigned given = sb? sb->s_type->inode_private: 0; // only rd.c has null sb
 	                   ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#232: FILE: fs/inode.c:789:
+	unsigned given = sb? sb->s_type->inode_private: 0; // only rd.c has null sb
 	                                              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#233: FILE: fs/inode.c:790:
+	unsigned given = sb? sb->s_type->inode_private: 0; // only rd.c has null sb
+	memset(&inode->u, 0, given? given: sizeof(inode->u));

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#233: FILE: fs/inode.c:790:
+	memset(&inode->u, 0, given? given: sizeof(inode->u));
 	                          ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#233: FILE: fs/inode.c:790:
+	memset(&inode->u, 0, given? given: sizeof(inode->u));
 	                                 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#243: FILE: fs/inode.c:823:
+struct inode *get_empty_inode (struct super_block *sb)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#252: FILE: fs/inode.c:829:
+	inode = alloc_inode (sb);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#277: FILE: fs/inode.c:858:
+	inode = alloc_inode (sb);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#305: FILE: fs/inode.c:917:
+int create_inode_cache (struct file_system_type *fs)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: fs/inode.c:920:
+^I^Iif (!(fs->inode_cache = kmem_cache_create (fs->name, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#308: FILE: fs/inode.c:920:
+		if (!(fs->inode_cache = kmem_cache_create (fs->name, 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#308: FILE: fs/inode.c:920:
+		if (!(fs->inode_cache = kmem_cache_create (fs->name, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#309: FILE: fs/inode.c:921:
+^I^I    fs->inode_private + sizeof(struct inode) - $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#309: FILE: fs/inode.c:921:
+		if (!(fs->inode_cache = kmem_cache_create (fs->name, 
+		    fs->inode_private + sizeof(struct inode) - 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: fs/inode.c:921:
+		if (!(fs->inode_cache = kmem_cache_create (fs->name, 
sizeof(get_empty_inode(0)->u),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#316: FILE: fs/inode.c:927:
+int destroy_inode_cache (struct file_system_type *fs)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#318: FILE: fs/inode.c:929:
+	printk("Destroying inode cache for %s\n", fs->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#319: FILE: fs/inode.c:930:
+	return kmem_cache_destroy (fs->inode_cache)? -EBUSY: 0;

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#319: FILE: fs/inode.c:930:
+	return kmem_cache_destroy (fs->inode_cache)? -EBUSY: 0;
 	                                           ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#319: FILE: fs/inode.c:930:
+	return kmem_cache_destroy (fs->inode_cache)? -EBUSY: 0;
 	                                                   ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#341: FILE: fs/super.c:108:
+int register_filesystem (struct file_system_type *fs)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#358: FILE: fs/super.c:123:
+		if (!(err = create_inode_cache (fs)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#358: FILE: fs/super.c:123:
+		if (!(err = create_inode_cache (fs)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#371: FILE: fs/super.c:141:
+int unregister_filesystem (struct file_system_type *fs)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#385: FILE: fs/super.c:149:
+			if (fs->inode_cache && (err = destroy_inode_cache (fs)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#385: FILE: fs/super.c:149:
+			if (fs->inode_cache && (err = destroy_inode_cache (fs)))

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#419: FILE: include/linux/fs.h:958:
+	unsigned super_private, inode_private;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#424: FILE: include/linux/fs.h:962:
+#define FILESYSTEM_TYPE(var,type,read,ssize,isize,flags) \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#424: FILE: include/linux/fs.h:962:
+#define FILESYSTEM_TYPE(var,type,read,ssize,isize,flags) \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#424: FILE: include/linux/fs.h:962:
+#define FILESYSTEM_TYPE(var,type,read,ssize,isize,flags) \
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#424: FILE: include/linux/fs.h:962:
+#define FILESYSTEM_TYPE(var,type,read,ssize,isize,flags) \
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#424: FILE: include/linux/fs.h:962:
+#define FILESYSTEM_TYPE(var,type,read,ssize,isize,flags) \
                                                  ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#428: FILE: include/linux/fs.h:966:
+	super_private:	ssize, \
 	             ^

WARNING:INDENTED_LABEL: labels should not be indented
#428: FILE: include/linux/fs.h:966:
+	super_private:	ssize, \

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#429: FILE: include/linux/fs.h:967:
+	inode_private:	isize, \
 	             ^

WARNING:INDENTED_LABEL: labels should not be indented
#429: FILE: include/linux/fs.h:967:
+	inode_private:	isize, \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#434: FILE: include/linux/fs.h:972:
+#define FILESYSTEM(var,type,read,ssize,isize) \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#434: FILE: include/linux/fs.h:972:
+#define FILESYSTEM(var,type,read,ssize,isize) \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#434: FILE: include/linux/fs.h:972:
+#define FILESYSTEM(var,type,read,ssize,isize) \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#434: FILE: include/linux/fs.h:972:
+#define FILESYSTEM(var,type,read,ssize,isize) \
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#435: FILE: include/linux/fs.h:973:
+	FILESYSTEM_TYPE(var,type,read,ssize,isize,FS_REQUIRES_DEV)
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#435: FILE: include/linux/fs.h:973:
+	FILESYSTEM_TYPE(var,type,read,ssize,isize,FS_REQUIRES_DEV)
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#435: FILE: include/linux/fs.h:973:
+	FILESYSTEM_TYPE(var,type,read,ssize,isize,FS_REQUIRES_DEV)
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#435: FILE: include/linux/fs.h:973:
+	FILESYSTEM_TYPE(var,type,read,ssize,isize,FS_REQUIRES_DEV)
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#435: FILE: include/linux/fs.h:973:
+	FILESYSTEM_TYPE(var,type,read,ssize,isize,FS_REQUIRES_DEV)
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#439: FILE: include/linux/fs.h:977:
+#define DECLARE_FSTYPE(var,type,read,flags) \
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#439: FILE: include/linux/fs.h:977:
+#define DECLARE_FSTYPE(var,type,read,flags) \
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#439: FILE: include/linux/fs.h:977:
+#define DECLARE_FSTYPE(var,type,read,flags) \
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#440: FILE: include/linux/fs.h:978:
+	FILESYSTEM_TYPE(var,type,read,0,0,flags)
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#440: FILE: include/linux/fs.h:978:
+	FILESYSTEM_TYPE(var,type,read,0,0,flags)
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#440: FILE: include/linux/fs.h:978:
+	FILESYSTEM_TYPE(var,type,read,0,0,flags)
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#440: FILE: include/linux/fs.h:978:
+	FILESYSTEM_TYPE(var,type,read,0,0,flags)
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#440: FILE: include/linux/fs.h:978:
+	FILESYSTEM_TYPE(var,type,read,0,0,flags)
 	                                 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#450: FILE: include/linux/fs.h:1345:
+extern struct inode *get_empty_inode (struct super_block *sb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#450: FILE: include/linux/fs.h:1345:
+extern struct inode *get_empty_inode (struct super_block *sb);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#453: FILE: include/linux/fs.h:1347:
+static inline struct inode *new_inode (struct super_block *sb)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#465: FILE: include/linux/fs.h:1357:
+int create_inode_cache (struct file_system_type *fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#466: FILE: include/linux/fs.h:1358:
+int destroy_inode_cache (struct file_system_type *fs);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000488927.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 48 errors, 37 warnings, 5 checks, 334 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000488927.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
