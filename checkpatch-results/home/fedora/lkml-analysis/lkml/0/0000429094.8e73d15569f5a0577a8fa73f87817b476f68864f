WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
diff -urN -x '.patch*' -x '*.orig' orig/drivers/char/random.c work/drivers/char/random.c

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#48: FILE: drivers/char/random.c:621:
+static __u32 *batch_entropy_pool=0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#48: FILE: drivers/char/random.c:621:
+static __u32 *batch_entropy_pool=0;
                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#57: FILE: drivers/char/random.c:629:
+	batch_entropy_pool = kmalloc(size*sizeof(__u32), GFP_KERNEL);
 	                                 ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#57: FILE: drivers/char/random.c:629:
+	batch_entropy_pool = kmalloc(size*sizeof(__u32), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#67: FILE: drivers/char/random.c:633:
+	batch_pos = batch_credit = batch_samples = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#108: FILE: drivers/char/random.c:657:
+	batch_credit+=bits;
 	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#110: FILE: drivers/char/random.c:659:
+	batch_pos = (batch_pos+1) & (batch_max-1);
 	                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#110: FILE: drivers/char/random.c:659:
+	batch_pos = (batch_pos+1) & (batch_max-1);
 	                                      ^

CHECK:SPACING: No space is necessary after a cast
#128: FILE: drivers/char/random.c:671:
+	struct entropy_store *r	= (struct entropy_store *) private_;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: drivers/char/random.c:673:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: drivers/char/random.c:679:
+^I^Ir = (r == sec_random_state) ? $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#151: FILE: drivers/char/random.c:683:
+	credit=batch_credit;
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#152: FILE: drivers/char/random.c:684:
+	samples=batch_samples;
 	       ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#153: FILE: drivers/char/random.c:685:
+	batch_pos = batch_credit = batch_samples = 0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#156: FILE: drivers/char/random.c:688:
+	if(credit > batch_max) credit=batch_max;
 	                             ^

ERROR:SPACING: space required before the open parenthesis '('
#156: FILE: drivers/char/random.c:688:
+	if(credit > batch_max) credit=batch_max;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#156: FILE: drivers/char/random.c:688:
+	if(credit > batch_max) credit=batch_max;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#158: FILE: drivers/char/random.c:690:
+	if(samples > batch_max) samples=batch_max;
 	                               ^

ERROR:SPACING: space required before the open parenthesis '('
#158: FILE: drivers/char/random.c:690:
+	if(samples > batch_max) samples=batch_max;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#158: FILE: drivers/char/random.c:690:
+	if(samples > batch_max) samples=batch_max;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#179: FILE: drivers/char/random.c:714:
+static int trust_break=50, trust_pct=0, trust_min=0, trust_max=100;
                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#179: FILE: drivers/char/random.c:714:
+static int trust_break=50, trust_pct=0, trust_min=0, trust_max=100;
                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#179: FILE: drivers/char/random.c:714:
+static int trust_break=50, trust_pct=0, trust_min=0, trust_max=100;
                                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#179: FILE: drivers/char/random.c:714:
+static int trust_break=50, trust_pct=0, trust_min=0, trust_max=100;
                                                               ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#197: FILE: drivers/char/random.c:782:
+	else if(trust_pct)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#197: FILE: drivers/char/random.c:782:
+	else if(trust_pct)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#197: FILE: drivers/char/random.c:782:
 	}
+	else if(trust_pct)

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#200: FILE: drivers/char/random.c:785:
+		trust_break+=trust_pct;
 		           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#201: FILE: drivers/char/random.c:786:
+		if(trust_break >= 100)
+		{

ERROR:SPACING: space required before the open parenthesis '('
#201: FILE: drivers/char/random.c:786:
+		if(trust_break >= 100)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#203: FILE: drivers/char/random.c:788:
+			entropy=1;
 			       ^

ERROR:SPACING: spaces required around that '-=' (ctx:VxV)
#204: FILE: drivers/char/random.c:789:
+			trust_break-=100;
 			           ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#208: FILE: drivers/char/random.c:793:
+	batch_entropy_store(num^time, entropy);
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#235: FILE: drivers/char/random.c:818:
+	add_timer_randomness(0, 0x200+major);
 	                             ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#329: FILE: include/linux/random.h:49:
+extern void batch_entropy_store(u32 val, int bits);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#341: FILE: include/linux/sysctl.h:188:
+	RANDOM_UUID=6,
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#342: FILE: include/linux/sysctl.h:189:
+	RANDOM_TRUST_PCT=7
 	                ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000429094.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 2 warnings, 9 checks, 296 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000429094.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
