CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#119: FILE: fs/buffer.c:2631:
+	if (IS_TRUNCATING(inode) && (page->index >= end_index+1 || !offset)) {
 	                                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#130: FILE: include/linux/fs.h:154:
+#define S_TRUNCATING	(1<<31)	/* Hack: inode is truncating the data now */
                     	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#130: FILE: include/linux/fs.h:154:
+#define S_TRUNCATING	(1<<31)	/* Hack: inode is truncating the data now */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228829.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 0 warnings, 3 checks, 43 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228829.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
