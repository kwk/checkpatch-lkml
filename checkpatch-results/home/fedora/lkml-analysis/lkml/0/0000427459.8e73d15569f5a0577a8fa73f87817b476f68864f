WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#	           ChangeSet	1.667   -> 1.670  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#	drivers/block/ps2esdi.c	1.50    -> 1.51   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#	 drivers/md/Makefile	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#	drivers/mtd/nftlcore.c	1.34    -> 1.35   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#	     fs/jbd/revoke.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#	drivers/block/ll_rw_blk.c	1.115   -> 1.116  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#	drivers/ieee1394/sbp2.c	1.11    -> 1.12   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#	   drivers/scsi/sr.c	1.46    -> 1.47   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#	 fs/reiserfs/super.c	1.52    -> 1.53   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#	drivers/block/genhd.c	1.42    -> 1.43   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#	    fs/ext3/ialloc.c	1.14    -> 1.15   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#	 drivers/scsi/scsi.c	1.37    -> 1.38   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#	drivers/block/loop.c	1.62    -> 1.63   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#	   drivers/scsi/sd.h	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
#	fs/reiserfs/journal.c	1.56    -> 1.57   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
#	fs/reiserfs/prints.c	1.19    -> 1.20   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
#	   drivers/scsi/sd.c	1.59    -> 1.60   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
#	     fs/jbd/commit.c	1.12    -> 1.13   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#	    fs/isofs/inode.c	1.24    -> 1.25   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
# 02/10/03	peterc@numbat.chubb.wattle.id.au	1.668

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
# printk changes: A sector_t can be either 64 or 32 bits, so cast it

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
# to a printable type that is at least as large as 64-bits on all platforms (i.e.,

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
# cast to unsigned long long and use a %llu format)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
# 02/10/03	peterc@numbat.chubb.wattle.id.au	1.669

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
# Transition to 64-bit sector_t: fix isofs_get_blocks by converting 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
# the (possibly 64-bit) arg to a long.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#84: 
# 02/10/03	peterc@numbat.chubb.wattle.id.au	1.670

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#85: 
# SCSI 64-bit sector_t cleanup:  capacity now stored as sector_t;

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#86: 
# make sure that the READ_CAPACITY command doesn't sign-extend its

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#87: 
# returned value; avoid 64-bit division when printing size in MB.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#88: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#89: 
# Still to do:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#90: 
# 	-- 16-byte SCSI commands

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#91: 
# 	-- Individual scsi drivers.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#92: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#93: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#95: 
--- a/drivers/block/genhd.c	Thu Oct  3 15:05:15 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: drivers/block/genhd.c:181:
+	seq_printf(part, "%4d  %4d %10llu %s\n",
 		sgp->major, sgp->first_minor,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: drivers/block/genhd.c:188:
+		seq_printf(part, "%4d  %4d %10llu %s\n",
 			sgp->major, n + 1 + sgp->first_minor,

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#114: FILE: drivers/block/genhd.c:189:
+			(unsigned long long)sgp->part[n].nr_sects >> 1 ,
 			                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#126: FILE: drivers/block/ll_rw_blk.c:652:
+		printk("sector %llu, nr/cnr %lu/%u\n", (unsigned long long)rq->sector,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: drivers/block/ll_rw_blk.c:653:
+		printk("sector %llu, nr/cnr %lu/%u\n", (unsigned long long)rq->sector,
 						       rq->nr_sectors,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#135: FILE: drivers/block/ll_rw_blk.c:1798:
+			printk(KERN_INFO "%s: rw=%ld, want=%Lu, limit=%Lu\n",

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#135: FILE: drivers/block/ll_rw_blk.c:1798:
+			printk(KERN_INFO "%s: rw=%ld, want=%Lu, limit=%Lu\n",

CHECK:SPACING: No space is necessary after a cast
#139: FILE: drivers/block/ll_rw_blk.c:1801:
+			       (unsigned long long) sector + nr_sectors,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: drivers/block/ll_rw_blk.c:1830:
+^I^I^Iprintk("bio too big device %s (%u > %u)\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#149: FILE: drivers/block/ll_rw_blk.c:1830:
+			printk("bio too big device %s (%u > %u)\n", 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#162: FILE: drivers/block/ll_rw_blk.c:1943:
+		printk("end_request: I/O error, dev %s, sector %llu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: drivers/block/ll_rw_blk.c:1944:
+		printk("end_request: I/O error, dev %s, sector %llu\n",
+			kdevname(req->rq_dev), (unsigned long long)req->sector);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#206: FILE: drivers/block/loop.c:195:
+		sector_t IV = index * (PAGE_CACHE_SIZE/bsize) + offset/bsize;
 		                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#206: FILE: drivers/block/loop.c:195:
+		sector_t IV = index * (PAGE_CACHE_SIZE/bsize) + offset/bsize;
 		                                                      ^

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#215: FILE: drivers/block/loop.c:214:
+			printk(KERN_ERR "loop: transfer error block %llu\n", (unsigned long long)index);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#215: FILE: drivers/block/loop.c:214:
+			printk(KERN_ERR "loop: transfer error block %llu\n", (unsigned long long)index);

ERROR:SPACING: space required before the open brace '{'
#252: FILE: drivers/block/loop.c:853:
+		if (figure_loop_size(lo)){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#292: FILE: drivers/block/ps2esdi.c:535:
+		printk("Grrr. error. ps2esdi_drives: %d, %lu %llu\n", ps2esdi_drives,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: drivers/ieee1394/sbp2.c:3150:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#359: FILE: drivers/scsi/scsi.c:2410:
+				printk(KERN_INFO "(%3d) %2d:%1d:%2d:%2d (%6s %4llu %4ld %4ld %4x %1d) (%1d %1d 0x%2x) (%4d %4d %4d) 0x%2.2x 0x%2.2x 0x%8.8x\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#366: FILE: drivers/scsi/scsi.c:2415:
+                                       SCpnt->target,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: drivers/scsi/scsi.c:2415:
+                                       SCpnt->target,$

CHECK:CAMELCASE: Avoid CamelCase: <SCpnt>
#366: FILE: drivers/scsi/scsi.c:2415:
+                                       SCpnt->target,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: drivers/scsi/scsi.c:2416:
+                                       SCpnt->lun,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: drivers/scsi/scsi.c:2416:
+                                       SCpnt->lun,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: drivers/scsi/scsi.c:2418:
+                                       kdevname(SCpnt->request->rq_dev),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: drivers/scsi/scsi.c:2418:
+                                       kdevname(SCpnt->request->rq_dev),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: drivers/scsi/scsi.c:2419:
+                                       (unsigned long long)SCpnt->request->sector,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: drivers/scsi/scsi.c:2419:
+                                       (unsigned long long)SCpnt->request->sector,$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#395: FILE: drivers/scsi/sd.c:316:
+	SCSI_LOG_HLQUEUE(1, printk("sd_command_init: dsk_nr=%d, block=%llu, "

WARNING:SPLIT_STRING: quoted string split across lines
#396: FILE: drivers/scsi/sd.c:317:
+	SCSI_LOG_HLQUEUE(1, printk("sd_command_init: dsk_nr=%d, block=%llu, "
+			    "count=%d\n", dsk_nr, (unsigned long long)block, this_count));

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#406: FILE: drivers/scsi/sd.c:340:
+	SCSI_LOG_HLQUEUE(2, printk("%s : [part_nr=%d], block=%llu\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#445: FILE: drivers/scsi/sd.c:983:
+		sector_t sz = sdkp->capacity * (hard_sector/256);
 		                                           ^

WARNING:SPLIT_STRING: quoted string split across lines
#460: FILE: drivers/scsi/sd.c:995:
 		printk(KERN_NOTICE "SCSI device %s: "
+		       "%llu %d-byte hdwr sectors (%llu MB)\n",

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#499: FILE: drivers/scsi/sr.c:326:
+	if (((unsigned int)SCpnt->request->sector % (s_size >> 9)) || (SCpnt->request_bufflen % s_size)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#523: FILE: fs/ext3/ialloc.c:483:
+		printk(KERN_NOTICE "ext3_test_bit(bit=%d, block=%llu) = %d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#524: FILE: fs/ext3/ialloc.c:484:
+^I^I       bit, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: fs/ext3/ialloc.c:485:
+^I^I^I(unsigned long long)bitmap_bh->b_blocknr, $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#554: FILE: fs/isofs/inode.c:952:
+		printk("isofs_get_blocks: block number too large\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'isofs_get_blocks', this function's name, in a string
#554: FILE: fs/isofs/inode.c:952:
+		printk("isofs_get_blocks: block number too large\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#568: FILE: fs/jbd/commit.c:359:
+			jbd_debug(4, "JBD: got buffer %llu (%p)\n",
+				(unsigned long long)bh->b_blocknr, bh->b_data);

WARNING:SPLIT_STRING: quoted string split across lines
#580: FILE: fs/jbd/revoke.c:391:
 			jbd_debug(4, "cancelled existing revoke on "
+				  "blocknr %llu\n", (u64)bh->b_blocknr);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 0)
#590: FILE: fs/reiserfs/journal.c:1010:
     if ((!was_jwait) && !buffer_locked(saved_bh)) {
+printk("journal-813: BAD! buffer %llu %cdirty %cjwait, not in a newer tranasction\n", (unsigned long long)saved_bh->b_blocknr,

WARNING:TYPO_SPELLING: 'tranasction' may be misspelled - perhaps 'transaction'?
#592: FILE: fs/reiserfs/journal.c:1011:
+printk("journal-813: BAD! buffer %llu %cdirty %cjwait, not in a newer tranasction\n", (unsigned long long)saved_bh->b_blocknr,
                                                                       ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#592: FILE: fs/reiserfs/journal.c:1011:
+printk("journal-813: BAD! buffer %llu %cdirty %cjwait, not in a newer tranasction\n", (unsigned long long)saved_bh->b_blocknr,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#592: FILE: fs/reiserfs/journal.c:1011:
+printk("journal-813: BAD! buffer %llu %cdirty %cjwait, not in a newer tranasction\n", (unsigned long long)saved_bh->b_blocknr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#593: FILE: fs/reiserfs/journal.c:1012:
+printk("journal-813: BAD! buffer %llu %cdirty %cjwait, not in a newer tranasction\n", (unsigned long long)saved_bh->b_blocknr,
         was_dirty ? ' ' : '!', was_jwait ? ' ' : '!') ;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#598: FILE: fs/reiserfs/journal.c:1017:
     if (buffer_locked(saved_bh)) {
+      printk("clm-2083: locked buffer %llu in flush_journal_list\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#601: FILE: fs/reiserfs/journal.c:1018:
+      printk("clm-2083: locked buffer %llu in flush_journal_list\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: fs/reiserfs/journal.c:1018:
+      printk("clm-2083: locked buffer %llu in flush_journal_list\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#601: FILE: fs/reiserfs/journal.c:1018:
+      printk("clm-2083: locked buffer %llu in flush_journal_list\n", 

ERROR:CODE_INDENT: code indent should use tabs where possible
#602: FILE: fs/reiserfs/journal.c:1019:
+              (unsigned long long)saved_bh->b_blocknr) ;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#602: FILE: fs/reiserfs/journal.c:1019:
+      printk("clm-2083: locked buffer %llu in flush_journal_list\n", 
+              (unsigned long long)saved_bh->b_blocknr) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: fs/reiserfs/journal.c:1019:
+              (unsigned long long)saved_bh->b_blocknr) ;$

WARNING:SPACING: space prohibited before semicolon
#602: FILE: fs/reiserfs/journal.c:1019:
+              (unsigned long long)saved_bh->b_blocknr) ;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#609: FILE: fs/reiserfs/journal.c:1031:
     } else {
+      printk("clm-2082: Unable to flush buffer %llu in flush_journal_list\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: fs/reiserfs/journal.c:1032:
+      printk("clm-2082: Unable to flush buffer %llu in flush_journal_list\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#612: FILE: fs/reiserfs/journal.c:1032:
+      printk("clm-2082: Unable to flush buffer %llu in flush_journal_list\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#613: FILE: fs/reiserfs/journal.c:1033:
+              (unsigned long long)saved_bh->b_blocknr) ;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#613: FILE: fs/reiserfs/journal.c:1033:
+      printk("clm-2082: Unable to flush buffer %llu in flush_journal_list\n",
+              (unsigned long long)saved_bh->b_blocknr) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: fs/reiserfs/journal.c:1033:
+              (unsigned long long)saved_bh->b_blocknr) ;$

WARNING:SPACING: space prohibited before semicolon
#613: FILE: fs/reiserfs/journal.c:1033:
+              (unsigned long long)saved_bh->b_blocknr) ;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#620: FILE: fs/reiserfs/journal.c:2312:
   if (!prepared || buffer_locked(bh)) {
+    printk("journal-1777: buffer %llu bad state %cPREPARED %cLOCKED %cDIRTY %cJDIRTY_WAIT\n", (unsigned long long)bh->b_blocknr, prepared ? ' ' : '!', 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#622: FILE: fs/reiserfs/journal.c:2313:
+    printk("journal-1777: buffer %llu bad state %cPREPARED %cLOCKED %cDIRTY %cJDIRTY_WAIT\n", (unsigned long long)bh->b_blocknr, prepared ? ' ' : '!', $

WARNING:LONG_LINE: line length of 151 exceeds 100 columns
#622: FILE: fs/reiserfs/journal.c:2313:
+    printk("journal-1777: buffer %llu bad state %cPREPARED %cLOCKED %cDIRTY %cJDIRTY_WAIT\n", (unsigned long long)bh->b_blocknr, prepared ? ' ' : '!', 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: fs/reiserfs/journal.c:2313:
+    printk("journal-1777: buffer %llu bad state %cPREPARED %cLOCKED %cDIRTY %cJDIRTY_WAIT\n", (unsigned long long)bh->b_blocknr, prepared ? ' ' : '!', $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#622: FILE: fs/reiserfs/journal.c:2313:
+    printk("journal-1777: buffer %llu bad state %cPREPARED %cLOCKED %cDIRTY %cJDIRTY_WAIT\n", (unsigned long long)bh->b_blocknr, prepared ? ' ' : '!', 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#623: FILE: fs/reiserfs/journal.c:2314:
+    printk("journal-1777: buffer %llu bad state %cPREPARED %cLOCKED %cDIRTY %cJDIRTY_WAIT\n", (unsigned long long)bh->b_blocknr, prepared ? ' ' : '!', 
                             buffer_locked(bh) ? ' ' : '!',

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: fs/reiserfs/prints.c:142:
+  sprintf (buf, "dev %s, size %d, blocknr %llu, count %d, state 0x%lx, page %p, (%s, %s, %s)",$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#635: FILE: fs/reiserfs/prints.c:142:
+  sprintf (buf, "dev %s, size %d, blocknr %llu, count %d, state 0x%lx, page %p, (%s, %s, %s)",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#636: FILE: fs/reiserfs/prints.c:143:
+	   bdevname (bh->b_bdev), bh->b_size, (unsigned long long)bh->b_blocknr,

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#645: FILE: fs/reiserfs/prints.c:370:
+	    printk ("block %llu (level=%d), position %d\n", bh ? (unsigned long long)bh->b_blocknr : 0LL,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#645: FILE: fs/reiserfs/prints.c:370:
+	    printk ("block %llu (level=%d), position %d\n", bh ? (unsigned long long)bh->b_blocknr : 0LL,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#645: FILE: fs/reiserfs/prints.c:370:
+	    printk ("block %llu (level=%d), position %d\n", bh ? (unsigned long long)bh->b_blocknr : 0LL,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#655: FILE: fs/reiserfs/prints.c:380:
+^I  printk ("%6d %10p (%9llu, %7d) %8d %7d\n", offset, $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#655: FILE: fs/reiserfs/prints.c:380:
+	  printk ("%6d %10p (%9llu, %7d) %8d %7d\n", offset, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#655: FILE: fs/reiserfs/prints.c:380:
+	  printk ("%6d %10p (%9llu, %7d) %8d %7d\n", offset, 

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#656: FILE: fs/reiserfs/prints.c:381:
+		  bh, bh ? (unsigned long long)bh->b_blocknr : 0LL, bh ? atomic_read (&(bh->b_count)) : 0,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#656: FILE: fs/reiserfs/prints.c:381:
+		  bh, bh ? (unsigned long long)bh->b_blocknr : 0LL, bh ? atomic_read (&(bh->b_count)) : 0,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bh->b_count
#656: FILE: fs/reiserfs/prints.c:381:
+		  bh, bh ? (unsigned long long)bh->b_blocknr : 0LL, bh ? atomic_read (&(bh->b_count)) : 0,

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#666: FILE: fs/reiserfs/prints.c:513:
+    printk ("%s\'s super block is in block %llu\n", bdevname (bh->b_bdev), $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#666: FILE: fs/reiserfs/prints.c:513:
+    printk ("%s\'s super block is in block %llu\n", bdevname (bh->b_bdev), $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#666: FILE: fs/reiserfs/prints.c:513:
+    printk ("%s\'s super block is in block %llu\n", bdevname (bh->b_bdev), 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#666: FILE: fs/reiserfs/prints.c:513:
+    printk ("%s\'s super block is in block %llu\n", bdevname (bh->b_bdev), 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#666: FILE: fs/reiserfs/prints.c:513:
+    printk ("%s\'s super block is in block %llu\n", bdevname (bh->b_bdev), 

ERROR:CODE_INDENT: code indent should use tabs where possible
#667: FILE: fs/reiserfs/prints.c:514:
+            (unsigned long long)bh->b_blocknr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: fs/reiserfs/prints.c:514:
+            (unsigned long long)bh->b_blocknr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: fs/reiserfs/prints.c:550:
+    printk ("Desc block %llu (j_trans_id %d, j_mount_id %d, j_len %d)",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#677: FILE: fs/reiserfs/prints.c:550:
+    printk ("Desc block %llu (j_trans_id %d, j_mount_id %d, j_len %d)",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#677: FILE: fs/reiserfs/prints.c:550:
+    printk ("Desc block %llu (j_trans_id %d, j_mount_id %d, j_len %d)",

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#685: FILE: fs/reiserfs/prints.c:575:
 		if (print_desc_block (bh))
+		    printk ("Block %llu contains unformatted data\n", (unsigned long long)bh->b_blocknr);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#687: FILE: fs/reiserfs/prints.c:576:
+		    printk ("Block %llu contains unformatted data\n", (unsigned long long)bh->b_blocknr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#687: FILE: fs/reiserfs/prints.c:576:
+		    printk ("Block %llu contains unformatted data\n", (unsigned long long)bh->b_blocknr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#687: FILE: fs/reiserfs/prints.c:576:
+		    printk ("Block %llu contains unformatted data\n", (unsigned long long)bh->b_blocknr);

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#699: FILE: fs/reiserfs/prints.c:613:
+		 (tbSh) ? (long long)(tbSh->b_blocknr):(-1LL),
 		                                      ^

CHECK:CAMELCASE: Avoid CamelCase: <tbSh>
#699: FILE: fs/reiserfs/prints.c:613:
+		 (tbSh) ? (long long)(tbSh->b_blocknr):(-1LL),

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#702: FILE: fs/reiserfs/prints.c:615:
+		 (tb->L[h]) ? (long long)(tb->L[h]->b_blocknr):(-1LL),
 		                                              ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#705: FILE: fs/reiserfs/prints.c:617:
+		 (tb->R[h]) ? (long long)(tb->R[h]->b_blocknr):(-1LL),
 		                                              ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#712: FILE: fs/reiserfs/prints.c:619:
+		 (tbFh) ? (long long)(tbFh->b_blocknr):(-1LL),
 		                                      ^

CHECK:CAMELCASE: Avoid CamelCase: <tbFh>
#712: FILE: fs/reiserfs/prints.c:619:
+		 (tbFh) ? (long long)(tbFh->b_blocknr):(-1LL),

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#713: FILE: fs/reiserfs/prints.c:620:
+		 (tb->FL[h]) ? (long long)(tb->FL[h]->b_blocknr):(-1LL),
 		                                                ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#714: FILE: fs/reiserfs/prints.c:621:
+		 (tb->FR[h]) ? (long long)(tb->FR[h]->b_blocknr):(-1LL),
 		                                                ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#715: FILE: fs/reiserfs/prints.c:622:
+		 (tb->CFL[h]) ? (long long)(tb->CFL[h]->b_blocknr):(-1LL),
 		                                                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#716: FILE: fs/reiserfs/prints.c:623:
+		 (tb->CFR[h]) ? (long long)(tb->CFR[h]->b_blocknr):(-1LL));
 		                                                  ^

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#725: FILE: fs/reiserfs/prints.c:650:
+		 "%p (%llu %d)%s", tb->FEB[i], tb->FEB[i] ? (unsigned long long)tb->FEB[i]->b_blocknr : 0ULL,

WARNING:SPLIT_STRING: quoted string split across lines
#738: FILE: fs/reiserfs/super.c:919:
 	printk ("sh-2011: read_super_block: "
+		"can't find a reiserfs filesystem on (dev %s, block %Lu, size %lu)\n",

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#738: FILE: fs/reiserfs/super.c:919:
+		"can't find a reiserfs filesystem on (dev %s, block %Lu, size %lu)\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#739: FILE: fs/reiserfs/super.c:920:
+		reiserfs_bdevname (s), (unsigned long long)bh->b_blocknr, s->s_blocksize);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#746: FILE: fs/reiserfs/super.c:982:
     if (!buffer_uptodate(SB_AP_BITMAP(s)[i].bh)) {
+      printk("reread_meta_blocks, error reading bitmap block number %d at %llu\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#749: FILE: fs/reiserfs/super.c:983:
+      printk("reread_meta_blocks, error reading bitmap block number %d at %llu\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#749: FILE: fs/reiserfs/super.c:983:
+      printk("reread_meta_blocks, error reading bitmap block number %d at %llu\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#749: FILE: fs/reiserfs/super.c:983:
+      printk("reread_meta_blocks, error reading bitmap block number %d at %llu\n", 

ERROR:CODE_INDENT: code indent should use tabs where possible
#750: FILE: fs/reiserfs/super.c:984:
+        i, (unsigned long long)SB_AP_BITMAP(s)[i].bh->b_blocknr) ;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#750: FILE: fs/reiserfs/super.c:984:
+      printk("reread_meta_blocks, error reading bitmap block number %d at %llu\n", 
+        i, (unsigned long long)SB_AP_BITMAP(s)[i].bh->b_blocknr) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#750: FILE: fs/reiserfs/super.c:984:
+        i, (unsigned long long)SB_AP_BITMAP(s)[i].bh->b_blocknr) ;$

WARNING:SPACING: space prohibited before semicolon
#750: FILE: fs/reiserfs/super.c:984:
+        i, (unsigned long long)SB_AP_BITMAP(s)[i].bh->b_blocknr) ;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000427459.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 117 warnings, 26 checks, 560 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000427459.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
