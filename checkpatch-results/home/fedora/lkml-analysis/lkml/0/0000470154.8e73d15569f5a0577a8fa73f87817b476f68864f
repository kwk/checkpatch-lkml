WARNING:TYPO_SPELLING: 'messags' may be misspelled - perhaps 'messages'?
#27: 
out how to get drivers/messags/i2o/ take over any of the dpt_i2o.c code.
                       ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#68: 
Adam J. Richter     __     ______________   4880 Stevens Creek Blvd, Suite 104

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#81: FILE: drivers/scsi/dpti.h:98:
+	proc_name: "dpt_i2o",	/* this is the name of our proc node*/	\
 	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#81: FILE: drivers/scsi/dpti.h:98:
+	proc_name: "dpt_i2o",	/* this is the name of our proc node*/	\

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#91: FILE: drivers/scsi/dpti.h:260:
+#define OPBLK_SIZE		(2*6) /* An I2o_PARAMS_FIELD_GET command */
                   		  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#93: FILE: drivers/scsi/dpti.h:262:
+#define RESBLK_MAX_SIZE		40 /* 8 + max buflen parameter given to
+				      adpt_i2o_query_scalar */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#93: FILE: drivers/scsi/dpti.h:262:
+				      adpt_i2o_query_scalar */

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#106: FILE: drivers/scsi/dpti.h:285:
+	dma_addr_t reply_port_dma;;

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#164: FILE: drivers/scsi/dpt_i2o.c:63:
+#include <asm/io.h>		/* for ioremap, etc. */

CHECK:CAMELCASE: Avoid CamelCase: <pHba>
#179: FILE: drivers/scsi/dpt_i2o.c:296:
+	buf = pci_alloc_consistent(pHba->pDev, bufsize, &buf_dma);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <pDev>
#179: FILE: drivers/scsi/dpt_i2o.c:296:
+	buf = pci_alloc_consistent(pHba->pDev, bufsize, &buf_dma);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#243: FILE: drivers/scsi/dpt_i2o.c:996:
+		printk(KERN_ERR "%s: Couldn't map status block for DMA",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#261: FILE: drivers/scsi/dpt_i2o.c:1030:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#284: FILE: drivers/scsi/dpt_i2o.c:1070:
+				    pHba->reply_fifo_size * REPLY_FRAME_SIZE*4
 				                                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#309: FILE: drivers/scsi/dpt_i2o.c:1333:
+		printk(KERN_ERR"IOP reset failed - no free memory.\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#309: FILE: drivers/scsi/dpt_i2o.c:1333:
+		printk(KERN_ERR"IOP reset failed - no free memory.\n");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#321: FILE: drivers/scsi/dpt_i2o.c:1345:
+	msg[6]=status_dma;
 	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#403: FILE: drivers/scsi/dpt_i2o.c:1693:
+	reply = pci_alloc_consistent(pHba->pDev,REPLY_FRAME_SIZE*4,&reply_dma);
 	                                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#403: FILE: drivers/scsi/dpt_i2o.c:1693:
+	reply = pci_alloc_consistent(pHba->pDev,REPLY_FRAME_SIZE*4,&reply_dma);
 	                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#403: FILE: drivers/scsi/dpt_i2o.c:1693:
+	reply = pci_alloc_consistent(pHba->pDev,REPLY_FRAME_SIZE*4,&reply_dma);
 	                                                          ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#403: FILE: drivers/scsi/dpt_i2o.c:1693:
+	reply = pci_alloc_consistent(pHba->pDev,REPLY_FRAME_SIZE*4,&reply_dma);
 	                                                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#404: FILE: drivers/scsi/dpt_i2o.c:1694:
+	alloc_size = REPLY_FRAME_SIZE*4;
 	                             ^

CHECK:SPACING: No space is necessary after a cast
#420: FILE: drivers/scsi/dpt_i2o.c:1706:
+		sg =  (struct sg_simple_element*) (msg+sg_offset);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#420: FILE: drivers/scsi/dpt_i2o.c:1706:
+		sg =  (struct sg_simple_element*) (msg+sg_offset);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#420: FILE: drivers/scsi/dpt_i2o.c:1706:
+		sg =  (struct sg_simple_element*) (msg+sg_offset);
 		                                      ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#433: FILE: drivers/scsi/dpt_i2o.c:1715:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#436: FILE: drivers/scsi/dpt_i2o.c:1718:
+	if(reply == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reply"
#436: FILE: drivers/scsi/dpt_i2o.c:1718:
+	if(reply == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#437: FILE: drivers/scsi/dpt_i2o.c:1719:
+		printk(KERN_WARNING"%s: Could not allocate reply buffer\n",pHba->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#437: FILE: drivers/scsi/dpt_i2o.c:1719:
+		printk(KERN_WARNING"%s: Could not allocate reply buffer\n",pHba->name);
 		                                                          ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#437: FILE: drivers/scsi/dpt_i2o.c:1719:
+		printk(KERN_WARNING"%s: Could not allocate reply buffer\n",pHba->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#440: FILE: drivers/scsi/dpt_i2o.c:1722:
+	memset(reply,0,REPLY_FRAME_SIZE*4);
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#440: FILE: drivers/scsi/dpt_i2o.c:1722:
+	memset(reply,0,REPLY_FRAME_SIZE*4);
 	              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#440: FILE: drivers/scsi/dpt_i2o.c:1722:
+	memset(reply,0,REPLY_FRAME_SIZE*4);
 	                               ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#443: FILE: drivers/scsi/dpt_i2o.c:1725:
+	/* TODO: Since we are now copying the data in contiguously, we
+	   could construct a one element scatter/gather list for the whole

ERROR:CODE_INDENT: code indent should use tabs where possible
#445: FILE: drivers/scsi/dpt_i2o.c:1727:
+^I   ^Inew_sg_list[0].addr_bus = p_dma;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#445: FILE: drivers/scsi/dpt_i2o.c:1727:
+^I   ^Inew_sg_list[0].addr_bus = p_dma;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#446: FILE: drivers/scsi/dpt_i2o.c:1728:
+^I   ^Inew_sg_list[0].flags_count = sg_total_size$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#446: FILE: drivers/scsi/dpt_i2o.c:1728:
+^I   ^Inew_sg_list[0].flags_count = sg_total_size$

ERROR:SPACING: space required before the open parenthesis '('
#453: FILE: drivers/scsi/dpt_i2o.c:1735:
+	if(sg_offset) {

CHECK:SPACING: No space is necessary after a cast
#454: FILE: drivers/scsi/dpt_i2o.c:1736:
+		void *p = ((void*) reply) + (REPLY_FRAME_SIZE*4);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#454: FILE: drivers/scsi/dpt_i2o.c:1736:
+		void *p = ((void*) reply) + (REPLY_FRAME_SIZE*4);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#454: FILE: drivers/scsi/dpt_i2o.c:1736:
+		void *p = ((void*) reply) + (REPLY_FRAME_SIZE*4);
 		                                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#455: FILE: drivers/scsi/dpt_i2o.c:1737:
+		dma_addr_t p_dma = reply_dma + (REPLY_FRAME_SIZE*4);
 		                                                ^

ERROR:SPACING: space required before the open parenthesis '('
#457: FILE: drivers/scsi/dpt_i2o.c:1739:
+		for(i = 0; i < sg_count; i++) {

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#470: FILE: drivers/scsi/dpt_i2o.c:1744:
+			sg_list[sg_index++] = (u32) p; // sglist indexed with input frame, not our internal frame.

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#470: FILE: drivers/scsi/dpt_i2o.c:1744:
+			sg_list[sg_index++] = (u32) p; // sglist indexed with input frame, not our internal frame.

CHECK:CAMELCASE: Avoid CamelCase: <SCp>
#534: FILE: drivers/scsi/dpt_i2o.c:2192:
+	sg = cmd->SCp.buffer;

ERROR:SPACING: space required before the open parenthesis '('
#536: FILE: drivers/scsi/dpt_i2o.c:2194:
+	for(i = 0 ; i < cmd->SCp.buffers_residual; i++) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#537: FILE: drivers/scsi/dpt_i2o.c:2195:
+		*mptr++ = direction|0x10000000|sg->length;
 		                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#537: FILE: drivers/scsi/dpt_i2o.c:2195:
+		*mptr++ = direction|0x10000000|sg->length;
 		                              ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#538: FILE: drivers/scsi/dpt_i2o.c:2196:
+		len+= sg_dma_len(sg);
 		   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#543: FILE: drivers/scsi/dpt_i2o.c:2201:
+	mptr[-2] = direction|0xD0000000|(sg-1)->length;
 	                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#543: FILE: drivers/scsi/dpt_i2o.c:2201:
+	mptr[-2] = direction|0xD0000000|(sg-1)->length;
 	                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#543: FILE: drivers/scsi/dpt_i2o.c:2201:
+	mptr[-2] = direction|0xD0000000|(sg-1)->length;
 	                                   ^

ERROR:SPACING: space required before the open brace '{'
#559: FILE: drivers/scsi/dpt_i2o.c:2205:
+	if(cmd->underflow && len != cmd->underflow){

ERROR:SPACING: space required before the open parenthesis '('
#559: FILE: drivers/scsi/dpt_i2o.c:2205:
+	if(cmd->underflow && len != cmd->underflow){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#560: FILE: drivers/scsi/dpt_i2o.c:2206:
+		printk(KERN_WARNING"Cmd len %08X Cmd underflow %08X\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#560: FILE: drivers/scsi/dpt_i2o.c:2206:
+		printk(KERN_WARNING"Cmd len %08X Cmd underflow %08X\n",

ERROR:SPACING: space required before the open parenthesis '('
#578: FILE: drivers/scsi/dpt_i2o.c:2609:
+		if(pHba->status_block.iop_state == ADAPTER_STATE_FAULTED) {

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#593: FILE: drivers/scsi/dpt_i2o.c:2619:
+			if (adpt_i2o_status_get(pHba) < 0 || pHba->status_block.iop_state != ADAPTER_STATE_RESET) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#618: FILE: drivers/scsi/dpt_i2o.c:2730:
+		printk(KERN_ERR"IOP reset failed - no free memory.\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#618: FILE: drivers/scsi/dpt_i2o.c:2730:
+		printk(KERN_ERR"IOP reset failed - no free memory.\n");

CHECK:SPACING: No space is necessary after a cast
#668: FILE: drivers/scsi/dpt_i2o.c:2785:
+	pHba->opblk = ((void*) pHba->reply_pool) +

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#668: FILE: drivers/scsi/dpt_i2o.c:2785:
+	pHba->opblk = ((void*) pHba->reply_pool) +

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#708: FILE: drivers/scsi/dpt_i2o.c:2824:
+	status_block = (u8*)(&pHba->status_block);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#717: FILE: drivers/scsi/dpt_i2o.c:2848:
+	writel(((u32)pHba->status_block_bus)&0xffffffff, &msg[6]);
 	                                    ^

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#739: FILE: drivers/scsi/dpt_i2o.c:2877:
+	pHba->sg_tablesize = (pHba->status_block.inbound_frame_size * 4 -40)/ sizeof(struct sg_simple_element);

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#739: FILE: drivers/scsi/dpt_i2o.c:2877:
+	pHba->sg_tablesize = (pHba->status_block.inbound_frame_size * 4 -40)/ sizeof(struct sg_simple_element);
 	                                                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxW)
#739: FILE: drivers/scsi/dpt_i2o.c:2877:
+	pHba->sg_tablesize = (pHba->status_block.inbound_frame_size * 4 -40)/ sizeof(struct sg_simple_element);
 	                                                                    ^

ERROR:SPACING: space required before the open parenthesis '('
#748: FILE: drivers/scsi/dpt_i2o.c:2885:
+	switch(pHba->status_block.iop_state) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#757: FILE: drivers/scsi/dpt_i2o.c:2908:
+			printk("%x (unknown!!)\n",pHba->status_block.iop_state);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#757: FILE: drivers/scsi/dpt_i2o.c:2908:
+			printk("%x (unknown!!)\n",pHba->status_block.iop_state);
 			                         ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#818: FILE: drivers/scsi/dpt_i2o.c:3020:
+		sys_tbl->iops[count].inbound_high = ((u64)pHba->post_port_dma)>>32;
 		                                                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#842: FILE: drivers/scsi/dpt_i2o.c:3170:
+		msg[5]= pHba->hrt_dma;		/* Dump it here */
 		      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#865: FILE: drivers/scsi/dpt_i2o.c:3198:
+		panic ("adpt_i2o_query_scalar: buflen too large");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#868: FILE: drivers/scsi/dpt_i2o.c:3201:
 	if (field == -1)  		/* whole group */
+			pHba->opblk[4] = -1;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#880: FILE: drivers/scsi/dpt_i2o.c:3209:
+	memcpy(buf, pHba->resblk+8, buflen);  /* cut off header */
 	                        ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pHba->status_block.iop_state != ADAPTER_STATE_READY'
#914: FILE: drivers/scsi/dpt_i2o.c:3271:
+	if((pHba->status_block.iop_state != ADAPTER_STATE_READY) &&
+   	   (pHba->status_block.iop_state != ADAPTER_STATE_OPERATIONAL)){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pHba->status_block.iop_state != ADAPTER_STATE_OPERATIONAL'
#914: FILE: drivers/scsi/dpt_i2o.c:3271:
+	if((pHba->status_block.iop_state != ADAPTER_STATE_READY) &&
+   	   (pHba->status_block.iop_state != ADAPTER_STATE_OPERATIONAL)){

ERROR:SPACING: space required before the open parenthesis '('
#914: FILE: drivers/scsi/dpt_i2o.c:3271:
+	if((pHba->status_block.iop_state != ADAPTER_STATE_READY) &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#915: FILE: drivers/scsi/dpt_i2o.c:3272:
+   ^I   (pHba->status_block.iop_state != ADAPTER_STATE_OPERATIONAL)){$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#915: FILE: drivers/scsi/dpt_i2o.c:3272:
+   ^I   (pHba->status_block.iop_state != ADAPTER_STATE_OPERATIONAL)){$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#915: FILE: drivers/scsi/dpt_i2o.c:3272:
+	if((pHba->status_block.iop_state != ADAPTER_STATE_READY) &&
+   	   (pHba->status_block.iop_state != ADAPTER_STATE_OPERATIONAL)){

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#915: FILE: drivers/scsi/dpt_i2o.c:3272:
+   ^I   (pHba->status_block.iop_state != ADAPTER_STATE_OPERATIONAL)){$

ERROR:SPACING: space required before the open brace '{'
#915: FILE: drivers/scsi/dpt_i2o.c:3272:
+   	   (pHba->status_block.iop_state != ADAPTER_STATE_OPERATIONAL)){

ERROR:SPACING: space required before the open parenthesis '('
#928: FILE: drivers/scsi/dpt_i2o.c:3303:
+	if(pHba->status_block.iop_state == ADAPTER_STATE_OPERATIONAL)

ERROR:SPACING: space required before the open parenthesis '('
#932: FILE: drivers/scsi/dpt_i2o.c:3306:
+	if(pHba->status_block.iop_state != ADAPTER_STATE_READY)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000470154.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 30 errors, 23 warnings, 35 checks, 806 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000470154.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
