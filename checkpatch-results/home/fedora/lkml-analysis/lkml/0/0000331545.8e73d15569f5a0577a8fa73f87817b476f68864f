CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: fs/compat_ioctl.c:123:
+static int w_long(unsigned int fd, unsigned int cmd,
+		unsigned long arg, struct file *f)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#89: FILE: fs/compat_ioctl.c:138:
+static int rw_long(unsigned int fd, unsigned int cmd,
+		unsigned long arg, struct file *f)

CHECK:SPACING: No space is necessary after a cast
#96: FILE: fs/compat_ioctl.c:144:
+	if(get_user(val, (u32 __user *) compat_ptr(arg)))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#96: FILE: fs/compat_ioctl.c:144:
+	if(get_user(val, (u32 __user *) compat_ptr(arg)))

CHECK:SPACING: No space is necessary after a cast
#102: FILE: fs/compat_ioctl.c:149:
+	if (!err && put_user(val, (u32 __user *) compat_ptr(arg)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: fs/compat_ioctl.c:155:
+static int do_ext2_ioctl(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: fs/compat_ioctl.c:334:
+static int do_video_ioctl(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: fs/compat_ioctl.c:410:
+static int do_siocgstamp(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#261: FILE: fs/compat_ioctl.c:490:
+static int dev_ifconf(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: fs/compat_ioctl.c:568:
+static int ethtool_ioctl(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: fs/compat_ioctl.c:592:
+static int bond_ioctl(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#353: FILE: fs/compat_ioctl.c:636:
+int siocdevprivate_ioctl(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: fs/compat_ioctl.c:663:
+static int dev_ifsioc(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

WARNING:LINE_SPACING: Missing a blank line after declarations
#448: FILE: fs/compat_ioctl.c:773:
+		struct in6_rtmsg32 __user *ur6 = compat_ptr(arg);
+		ret = copy_from_user (&r6.rtmsg_dst, &(ur6->rtmsg_dst),

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#448: FILE: fs/compat_ioctl.c:773:
+		ret = copy_from_user (&r6.rtmsg_dst, &(ur6->rtmsg_dst),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_dst
#448: FILE: fs/compat_ioctl.c:773:
+		ret = copy_from_user (&r6.rtmsg_dst, &(ur6->rtmsg_dst),

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#449: FILE: fs/compat_ioctl.c:774:
+		ret = copy_from_user (&r6.rtmsg_dst, &(ur6->rtmsg_dst),
 			3 * sizeof(struct in6_addr));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#457: FILE: fs/compat_ioctl.c:775:
+		ret |= __get_user (r6.rtmsg_type, &(ur6->rtmsg_type));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_type
#457: FILE: fs/compat_ioctl.c:775:
+		ret |= __get_user (r6.rtmsg_type, &(ur6->rtmsg_type));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#458: FILE: fs/compat_ioctl.c:776:
+		ret |= __get_user (r6.rtmsg_dst_len, &(ur6->rtmsg_dst_len));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_dst_len
#458: FILE: fs/compat_ioctl.c:776:
+		ret |= __get_user (r6.rtmsg_dst_len, &(ur6->rtmsg_dst_len));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#459: FILE: fs/compat_ioctl.c:777:
+		ret |= __get_user (r6.rtmsg_src_len, &(ur6->rtmsg_src_len));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_src_len
#459: FILE: fs/compat_ioctl.c:777:
+		ret |= __get_user (r6.rtmsg_src_len, &(ur6->rtmsg_src_len));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#460: FILE: fs/compat_ioctl.c:778:
+		ret |= __get_user (r6.rtmsg_metric, &(ur6->rtmsg_metric));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_metric
#460: FILE: fs/compat_ioctl.c:778:
+		ret |= __get_user (r6.rtmsg_metric, &(ur6->rtmsg_metric));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#461: FILE: fs/compat_ioctl.c:779:
+		ret |= __get_user (r6.rtmsg_info, &(ur6->rtmsg_info));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_info
#461: FILE: fs/compat_ioctl.c:779:
+		ret |= __get_user (r6.rtmsg_info, &(ur6->rtmsg_info));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#462: FILE: fs/compat_ioctl.c:780:
+		ret |= __get_user (r6.rtmsg_flags, &(ur6->rtmsg_flags));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_flags
#462: FILE: fs/compat_ioctl.c:780:
+		ret |= __get_user (r6.rtmsg_flags, &(ur6->rtmsg_flags));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#463: FILE: fs/compat_ioctl.c:781:
+		ret |= __get_user (r6.rtmsg_ifindex, &(ur6->rtmsg_ifindex));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_ifindex
#463: FILE: fs/compat_ioctl.c:781:
+		ret |= __get_user (r6.rtmsg_ifindex, &(ur6->rtmsg_ifindex));

WARNING:LINE_SPACING: Missing a blank line after declarations
#475: FILE: fs/compat_ioctl.c:786:
+		struct rtentry32 __user *ur4 = compat_ptr(arg);
+		ret = copy_from_user (&r4.rt_dst, &(ur4->rt_dst),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#475: FILE: fs/compat_ioctl.c:786:
+		ret = copy_from_user (&r4.rt_dst, &(ur4->rt_dst),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_dst
#475: FILE: fs/compat_ioctl.c:786:
+		ret = copy_from_user (&r4.rt_dst, &(ur4->rt_dst),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#476: FILE: fs/compat_ioctl.c:787:
+		ret = copy_from_user (&r4.rt_dst, &(ur4->rt_dst),
+					3 * sizeof(struct sockaddr));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#477: FILE: fs/compat_ioctl.c:788:
+		ret |= __get_user (r4.rt_flags, &(ur4->rt_flags));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_flags
#477: FILE: fs/compat_ioctl.c:788:
+		ret |= __get_user (r4.rt_flags, &(ur4->rt_flags));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#478: FILE: fs/compat_ioctl.c:789:
+		ret |= __get_user (r4.rt_metric, &(ur4->rt_metric));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_metric
#478: FILE: fs/compat_ioctl.c:789:
+		ret |= __get_user (r4.rt_metric, &(ur4->rt_metric));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#479: FILE: fs/compat_ioctl.c:790:
+		ret |= __get_user (r4.rt_mtu, &(ur4->rt_mtu));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_mtu
#479: FILE: fs/compat_ioctl.c:790:
+		ret |= __get_user (r4.rt_mtu, &(ur4->rt_mtu));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#480: FILE: fs/compat_ioctl.c:791:
+		ret |= __get_user (r4.rt_window, &(ur4->rt_window));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_window
#480: FILE: fs/compat_ioctl.c:791:
+		ret |= __get_user (r4.rt_window, &(ur4->rt_window));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#481: FILE: fs/compat_ioctl.c:792:
+		ret |= __get_user (r4.rt_irtt, &(ur4->rt_irtt));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_irtt
#481: FILE: fs/compat_ioctl.c:792:
+		ret |= __get_user (r4.rt_irtt, &(ur4->rt_irtt));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#482: FILE: fs/compat_ioctl.c:793:
+		ret |= __get_user (rtdev, &(ur4->rt_dev));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_dev
#482: FILE: fs/compat_ioctl.c:793:
+		ret |= __get_user (rtdev, &(ur4->rt_dev));

CHECK:SPACING: No space is necessary after a cast
#491: FILE: fs/compat_ioctl.c:807:
+	ret = sys_ioctl (fd, cmd, (unsigned long) r);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#491: FILE: fs/compat_ioctl.c:807:
+	ret = sys_ioctl (fd, cmd, (unsigned long) r);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#501: FILE: fs/compat_ioctl.c:824:
+static int hdio_getgeo(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#515: FILE: fs/compat_ioctl.c:836:
+		err = copy_to_user (ugeo, &geo, 4);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#516: FILE: fs/compat_ioctl.c:837:
+		err |= __put_user (geo.start, &ugeo->start);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#582: FILE: fs/compat_ioctl.c:962:
+static int fb_ioctl_trans(unsigned int fd, unsigned int cmd,
+		unsigned long arg, struct file *f)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: fs/compat_ioctl.c:992:
+static int hdio_ioctl_trans(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#617: FILE: fs/compat_ioctl.c:1044:
+static int sg_build_iovec(sg_io_hdr_t __user *sgio, void __user *dxferp,
+			u16 iovec_count)

CHECK:SPACING: No space is necessary after a cast
#621: FILE: fs/compat_ioctl.c:1046:
+	sg_iovec_t __user *iov = (sg_iovec_t __user *) (sgio + 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#643: FILE: fs/compat_ioctl.c:1065:
+static int sg_ioctl_trans(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#720: FILE: fs/compat_ioctl.c:1172:
+static int ppp_sock_fprog_ioctl_trans(unsigned int fd, unsigned int cmd,
+					unsigned long arg, struct file *f)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#743: FILE: fs/compat_ioctl.c:1215:
+static int ppp_gidle(unsigned int fd, unsigned int cmd,
+			struct ppp_idle32 __user *idle32)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#762: FILE: fs/compat_ioctl.c:1236:
+static int ppp_scompress(unsigned int fd, unsigned int cmd,
+			struct ppp_option_data32 __user *odata32)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#788: FILE: fs/compat_ioctl.c:1259:
+static int ppp_ioctl_trans(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#818: FILE: fs/compat_ioctl.c:1328:
+static int mt_ioctl_trans(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

ERROR:CODE_INDENT: code indent should use tabs where possible
#899: FILE: fs/compat_ioctl.c:1410:
+^I^I^I    ^I^I   + sizeof(uinfo32->debug),$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#899: FILE: fs/compat_ioctl.c:1410:
+^I^I^I    ^I^I   + sizeof(uinfo32->debug),$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#909: FILE: fs/compat_ioctl.c:1439:
+static int cdrom_do_read_audio(unsigned int fd, unsigned int cmd,
+			struct cdrom_read_audio32 __user *cdread_audio32)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#954: FILE: fs/compat_ioctl.c:1477:
+static int cdrom_do_generic_command(unsigned int fd, unsigned int cmd,
+				struct cdrom_generic_command32 __user *cgc32)

CHECK:SPACING: No space is necessary after a cast
#966: FILE: fs/compat_ioctl.c:1485:
+	    __cgc_do_ptr((void __user **) &cgc->buffer, &cgc32->buffer) ||

CHECK:SPACING: No space is necessary after a cast
#970: FILE: fs/compat_ioctl.c:1488:
+	    __cgc_do_ptr((void __user **) &cgc->sense, &cgc32->sense))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#980: FILE: fs/compat_ioctl.c:1506:
+static int cdrom_ioctl_trans(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1002: FILE: fs/compat_ioctl.c:1550:
+static int loop_status(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1023: FILE: fs/compat_ioctl.c:1565:
+^I^I        8 + (unsigned long)l.lo_init - (unsigned long)&l.lo_offset);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1052: FILE: fs/compat_ioctl.c:1635:
+static int do_fontx_ioctl(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *file)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1069: FILE: fs/compat_ioctl.c:1693:
+static int do_kdfontop_ioctl(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *file)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1092: FILE: fs/compat_ioctl.c:1724:
+static int do_unimap_ioctl(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *file)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1114: FILE: fs/compat_ioctl.c:1748:
+static int do_smb_getmountuid(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1159: FILE: fs/compat_ioctl.c:1850:
+static int do_atmif_sioc(unsigned int fd, unsigned int cmd, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1160: FILE: fs/compat_ioctl.c:1851:
+static int do_atmif_sioc(unsigned int fd, unsigned int cmd, 
+			struct atmif_sioc32 __user *sioc32)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1164: FILE: fs/compat_ioctl.c:1853:
+        struct atmif_sioc __user *sioc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1164: FILE: fs/compat_ioctl.c:1853:
+        struct atmif_sioc __user *sioc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1214: FILE: fs/compat_ioctl.c:1924:
+                return do_atmif_sioc(fd, cmd, compat_ptr(arg));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1214: FILE: fs/compat_ioctl.c:1924:
+                return do_atmif_sioc(fd, cmd, compat_ptr(arg));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1222: FILE: fs/compat_ioctl.c:1931:
+static int ret_einval(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1229: FILE: fs/compat_ioctl.c:1937:
+static int broken_blkgetsize(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1245: FILE: fs/compat_ioctl.c:1951:
+static int blkpg_ioctl_trans(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1275: FILE: fs/compat_ioctl.c:1975:
+                if (copy_from_user(&p, up32, sizeof(struct blkpg_partition)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1275: FILE: fs/compat_ioctl.c:1975:
+                if (copy_from_user(&p, up32, sizeof(struct blkpg_partition)))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1285: FILE: fs/compat_ioctl.c:1988:
+static int ioc_settimeout(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1301: FILE: fs/compat_ioctl.c:2001:
+       return sys_ioctl(fd, BLKBSZGET, (unsigned long)compat_ptr(arg));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1309: FILE: fs/compat_ioctl.c:2007:
+       return sys_ioctl(fd, BLKBSZSET, (unsigned long)compat_ptr(arg));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1314: FILE: fs/compat_ioctl.c:2011:
+                          unsigned long arg, struct file *f)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1314: FILE: fs/compat_ioctl.c:2011:
+                          unsigned long arg, struct file *f)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1317: FILE: fs/compat_ioctl.c:2013:
+       return sys_ioctl(fd, BLKGETSIZE64, (unsigned long)compat_ptr(arg));$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1327: FILE: fs/compat_ioctl.c:2131:
+			unsigned long arg, struct file *filp)
 			                                ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1327: FILE: fs/compat_ioctl.c:2131:
+static int fd_ioctl_trans(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *filp)

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1412: FILE: fs/compat_ioctl.c:2201:
+			err |= __copy_from_user(&f->max_errors, &uf->max_errors, sizeof(f->max_errors));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1415: FILE: fs/compat_ioctl.c:2204:
+			err |= __copy_from_user(f->autodetect, uf->autodetect, sizeof(f->autodetect));

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1426: FILE: fs/compat_ioctl.c:2251:
+			err |= __put_user((u64)f->name, (compat_caddr_t*)&((struct floppy_struct32 *)arg)->name);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1426: FILE: fs/compat_ioctl.c:2251:
+			err |= __put_user((u64)f->name, (compat_caddr_t*)&((struct floppy_struct32 *)arg)->name);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1467: FILE: fs/compat_ioctl.c:2273:
+			err |= __copy_to_user(&uf->max_errors, &f->max_errors, sizeof(f->max_errors));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1569: FILE: fs/compat_ioctl.c:2357:
+static int mtd_rw_oob(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1595: FILE: fs/compat_ioctl.c:2392:
+put_dirent32 (struct dirent *d, struct compat_dirent __user *d32)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1604: FILE: fs/compat_ioctl.c:2407:
+static int vfat_ioctl32(unsigned fd, unsigned cmd,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1604: FILE: fs/compat_ioctl.c:2407:
+static int vfat_ioctl32(unsigned fd, unsigned cmd,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1632: FILE: fs/compat_ioctl.c:2439:
+static int reiserfs_ioctl32(unsigned fd, unsigned cmd,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1632: FILE: fs/compat_ioctl.c:2439:
+static int reiserfs_ioctl32(unsigned fd, unsigned cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1633: FILE: fs/compat_ioctl.c:2440:
+static int reiserfs_ioctl32(unsigned fd, unsigned cmd,
+			unsigned long arg, struct file *f)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1639: FILE: fs/compat_ioctl.c:2445:
+        return sys_ioctl(fd, cmd, arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1639: FILE: fs/compat_ioctl.c:2445:
+        return sys_ioctl(fd, cmd, arg);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1649: FILE: fs/compat_ioctl.c:2456:
+static int get_raw32_request(struct raw_config_request *req,
+			struct raw32_config_request __user *user_req)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1661: FILE: fs/compat_ioctl.c:2466:
+        __get_user(lo_maj, (__u32 __user*)&user_req->block_major);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1661: FILE: fs/compat_ioctl.c:2466:
+        __get_user(lo_maj, (__u32 __user*)&user_req->block_major);$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1661: FILE: fs/compat_ioctl.c:2466:
+        __get_user(lo_maj, (__u32 __user*)&user_req->block_major);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1662: FILE: fs/compat_ioctl.c:2467:
+        __get_user(hi_maj, ((__u32 __user*)(&user_req->block_major) + 1));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1662: FILE: fs/compat_ioctl.c:2467:
+        __get_user(hi_maj, ((__u32 __user*)(&user_req->block_major) + 1));$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1662: FILE: fs/compat_ioctl.c:2467:
+        __get_user(hi_maj, ((__u32 __user*)(&user_req->block_major) + 1));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1663: FILE: fs/compat_ioctl.c:2468:
+        __get_user(lo_min, (__u32 __user*)&user_req->block_minor);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1663: FILE: fs/compat_ioctl.c:2468:
+        __get_user(lo_min, (__u32 __user*)&user_req->block_minor);$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1663: FILE: fs/compat_ioctl.c:2468:
+        __get_user(lo_min, (__u32 __user*)&user_req->block_minor);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1664: FILE: fs/compat_ioctl.c:2469:
+        __get_user(hi_min, ((__u32 __user*)(&user_req->block_minor) + 1));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1664: FILE: fs/compat_ioctl.c:2469:
+        __get_user(hi_min, ((__u32 __user*)(&user_req->block_minor) + 1));$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1664: FILE: fs/compat_ioctl.c:2469:
+        __get_user(hi_min, ((__u32 __user*)(&user_req->block_minor) + 1));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1674: FILE: fs/compat_ioctl.c:2478:
+static int set_raw32_request(struct raw_config_request *req,
+			struct raw32_config_request __user *user_req)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1683: FILE: fs/compat_ioctl.c:2495:
+static int raw_ioctl(unsigned fd, unsigned cmd,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1683: FILE: fs/compat_ioctl.c:2495:
+static int raw_ioctl(unsigned fd, unsigned cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1684: FILE: fs/compat_ioctl.c:2496:
+static int raw_ioctl(unsigned fd, unsigned cmd,
+			unsigned long arg, struct file *f)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1693: FILE: fs/compat_ioctl.c:2504:
+                struct raw32_config_request __user *user_req = compat_ptr(arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1693: FILE: fs/compat_ioctl.c:2504:
+                struct raw32_config_request __user *user_req = compat_ptr(arg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1702: FILE: fs/compat_ioctl.c:2520:
+                ret = sys_ioctl(fd,cmd,arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1702: FILE: fs/compat_ioctl.c:2520:
+                ret = sys_ioctl(fd,cmd,arg);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1702: FILE: fs/compat_ioctl.c:2520:
+                ret = sys_ioctl(fd,cmd,arg);
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1702: FILE: fs/compat_ioctl.c:2520:
+                ret = sys_ioctl(fd,cmd,arg);
                                       ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1715: FILE: fs/compat_ioctl.c:2548:
+static int serial_struct_ioctl(unsigned fd, unsigned cmd,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1715: FILE: fs/compat_ioctl.c:2548:
+static int serial_struct_ioctl(unsigned fd, unsigned cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1716: FILE: fs/compat_ioctl.c:2549:
+static int serial_struct_ioctl(unsigned fd, unsigned cmd,
+			unsigned long arg, struct file *f)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1721: FILE: fs/compat_ioctl.c:2552:
+        struct serial_struct32 __user *ss32 = compat_ptr(arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1721: FILE: fs/compat_ioctl.c:2552:
+        struct serial_struct32 __user *ss32 = compat_ptr(arg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1729: FILE: fs/compat_ioctl.c:2559:
+                if (verify_area(VERIFY_READ, ss32, sizeof(*ss32)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1729: FILE: fs/compat_ioctl.c:2559:
+                if (verify_area(VERIFY_READ, ss32, sizeof(*ss32)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1734: FILE: fs/compat_ioctl.c:2563:
+                ss.iomem_base = (void __kernel *)compat_ptr(udata);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1734: FILE: fs/compat_ioctl.c:2563:
+                ss.iomem_base = (void __kernel *)compat_ptr(udata);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1743: FILE: fs/compat_ioctl.c:2572:
+                if (verify_area(VERIFY_WRITE, ss32, sizeof(*ss32)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1743: FILE: fs/compat_ioctl.c:2572:
+                if (verify_area(VERIFY_WRITE, ss32, sizeof(*ss32)))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1753: FILE: fs/compat_ioctl.c:2598:
+static int do_usbdevfs_control(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1757: FILE: fs/compat_ioctl.c:2601:
+        struct usbdevfs_ctrltransfer32 __user *uctrl;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1757: FILE: fs/compat_ioctl.c:2601:
+        struct usbdevfs_ctrltransfer32 __user *uctrl;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1761: FILE: fs/compat_ioctl.c:2604:
+        void __user *uptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1761: FILE: fs/compat_ioctl.c:2604:
+        void __user *uptr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1766: FILE: fs/compat_ioctl.c:2608:
+        uctrl = compat_ptr(arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1766: FILE: fs/compat_ioctl.c:2608:
+        uctrl = compat_ptr(arg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1775: FILE: fs/compat_ioctl.c:2632:
+        kctrl.data = (void __user *)kptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1775: FILE: fs/compat_ioctl.c:2632:
+        kctrl.data = (void __user *)kptr;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1785: FILE: fs/compat_ioctl.c:2661:
+static int do_usbdevfs_bulk(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1789: FILE: fs/compat_ioctl.c:2664:
+        struct usbdevfs_bulktransfer32 __user *ubulk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1789: FILE: fs/compat_ioctl.c:2664:
+        struct usbdevfs_bulktransfer32 __user *ubulk;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1793: FILE: fs/compat_ioctl.c:2667:
+        void __user *uptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1793: FILE: fs/compat_ioctl.c:2667:
+        void __user *uptr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1807: FILE: fs/compat_ioctl.c:2695:
+        kbulk.data = (void __user *)kptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1807: FILE: fs/compat_ioctl.c:2695:
+        kbulk.data = (void __user *)kptr;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1817: FILE: fs/compat_ioctl.c:2857:
+static int do_usbdevfs_urb(unsigned int fd, unsigned int cmd,
+			unsigned long arg, struct file *f)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1836: FILE: fs/compat_ioctl.c:2917:
+static int do_usbdevfs_reapurb(unsigned int fd, unsigned int cmd,
+				unsigned long arg, struct file *f)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1845: FILE: fs/compat_ioctl.c:2933:
+            put_user((u32)(u64)kptr, (u32 *)compat_ptr(arg)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1845: FILE: fs/compat_ioctl.c:2933:
+            put_user((u32)(u64)kptr, (u32 *)compat_ptr(arg)))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1855: FILE: fs/compat_ioctl.c:2947:
+static int do_usbdevfs_discsignal(unsigned int fd, unsigned int cmd,
+				unsigned long arg, struct file *f)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1859: FILE: fs/compat_ioctl.c:2950:
+        struct usbdevfs_disconnectsignal32 __user *udis;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1859: FILE: fs/compat_ioctl.c:2950:
+        struct usbdevfs_disconnectsignal32 __user *udis;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1865: FILE: fs/compat_ioctl.c:2955:
+        udis = compat_ptr(arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1865: FILE: fs/compat_ioctl.c:2955:
+        udis = compat_ptr(arg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1872: FILE: fs/compat_ioctl.c:2961:
+        kdis.context = compat_ptr(uctx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1872: FILE: fs/compat_ioctl.c:2961:
+        kdis.context = compat_ptr(uctx);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1884: FILE: include/linux/compat_ioctl.h:6:
+#define COMPATIBLE_IOCTL(cmd)  HANDLE_IOCTL((cmd),(ioctl_trans_handler_t)sys_ioctl)
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1888: FILE: include/linux/compat_ioctl.h:10:
+#define ULONG_IOCTL(cmd)  HANDLE_IOCTL((cmd),(ioctl_trans_handler_t)sys_ioctl)
                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2210: FILE: include/net/sock.h:1083:
+int siocdevprivate_ioctl(unsigned int fd, unsigned int cmd, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2211: FILE: include/net/sock.h:1084:
+int siocdevprivate_ioctl(unsigned int fd, unsigned int cmd, 
+			unsigned long arg, struct file *f);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2222: FILE: fs/compat.c:408:
+		error = siocdevprivate_ioctl(fd, cmd, arg, filp);
 		                                           ^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000331545.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 40 errors, 65 warnings, 69 checks, 2032 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000331545.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
