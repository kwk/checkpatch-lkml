WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
ChangeSet 1.1938.445.9, 2004/12/21 11:08:43-08:00, sjhill@realitydiluted.com

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#57: FILE: drivers/i2c/algos/Kconfig:56:
+config I2C_ALGO_SIBYTE
+	tristate "SiByte SMBus interface"
+	depends on SIBYTE_SB1xxx_SOC && I2C
+	help
+	  Supports the SiByte SOC on-chip I2C interfaces (2 channels).
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#63: FILE: drivers/i2c/algos/Kconfig:62:
+config I2C_ALGO_SGI
+	tristate "I2C SGI interfaces"
+	depends on I2C
+	help
+	  Supports the SGI interfaces like the ones found on SGI Indy VINO
+	  or SGI O2 MACE.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: drivers/i2c/algos/i2c-algo-sgi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: drivers/i2c/algos/i2c-algo-sgi.c:3:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#106: FILE: drivers/i2c/algos/i2c-algo-sgi.c:19:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#108: FILE: drivers/i2c/algos/i2c-algo-sgi.c:21:
+#define SGI_I2C_NOT_IDLE	(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#110: FILE: drivers/i2c/algos/i2c-algo-sgi.c:23:
+#define SGI_I2C_READ		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#112: FILE: drivers/i2c/algos/i2c-algo-sgi.c:25:
+#define SGI_I2C_HOLD_BUS	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#114: FILE: drivers/i2c/algos/i2c-algo-sgi.c:27:
+#define SGI_I2C_XFER_BUSY	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#116: FILE: drivers/i2c/algos/i2c-algo-sgi.c:29:
+#define SGI_I2C_NACK		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#118: FILE: drivers/i2c/algos/i2c-algo-sgi.c:31:
+#define SGI_I2C_BUS_ERR		(1 << 7)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#125: FILE: drivers/i2c/algos/i2c-algo-sgi.c:38:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: drivers/i2c/algos/i2c-algo-sgi.c:92:
+^I                return -EIO;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#205: FILE: drivers/i2c/algos/i2c-algo-sgi.c:118:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: drivers/i2c/algos/i2c-algo-sgi.c:167:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: drivers/i2c/algos/i2c-algo-sgi.c:168:
+ * registering functions to load algorithms at runtime $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#265: FILE: drivers/i2c/algos/i2c-algo-sgi.c:178:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#271: FILE: drivers/i2c/algos/i2c-algo-sgi.c:184:
+EXPORT_SYMBOL(i2c_sgi_add_bus);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#272: FILE: drivers/i2c/algos/i2c-algo-sgi.c:185:
+EXPORT_SYMBOL(i2c_sgi_del_bus);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#281: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:1:
+/* ------------------------------------------------------------------------- */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#285: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:5:
+/*   Copyright (C) 2001,2002,2003 Broadcom Corporation
+     Copyright (C) 1995-2000 Simon G. Vogl

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#298: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:18:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#299: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:19:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.^I^I     */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#299: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:19:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.		     */

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#302: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:22:
+/* With some changes from Kyösti Mälkki <kmalkki@cc.hut.fi> and even
                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#303: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:23:
+/* With some changes from Kyösti Mälkki <kmalkki@cc.hut.fi> and even
+   Frodo Looijaard <frodol@dds.nl>.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#303: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:23:
+   Frodo Looijaard <frodol@dds.nl>.  */

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#312: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:32:
+#include <asm/io.h>

ERROR:SPACING: space required after that ',' (ctx:VxV)
#320: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:40:
+#define SMB_CSR(a,r) ((long)(a->reg_base + r))
                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#320: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:40:
+#define SMB_CSR(a,r) ((long)(a->reg_base + r))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'r' may be better as '(r)' to avoid precedence issues
#320: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:40:
+#define SMB_CSR(a,r) ((long)(a->reg_base + r))

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#326: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:46:
+static int bit_scan=0;	/* have a look at what's hanging 'round		*/

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#326: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:46:
+static int bit_scan=0;	/* have a look at what's hanging 'round		*/
                    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#328: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:48:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:49:
+static int smbus_xfer(struct i2c_adapter *i2c_adap, u16 addr, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:50:
+                      unsigned short flags, char read_write,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:50:
+                      unsigned short flags, char read_write,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:51:
+                      u8 command, int size, union i2c_smbus_data * data)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:51:
+                      u8 command, int size, union i2c_smbus_data * data)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#331: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:51:
+                      u8 command, int size, union i2c_smbus_data * data)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#334: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:54:
+        int data_bytes = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:54:
+        int data_bytes = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:55:
+        int error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:55:
+        int error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:57:
+        while (csr_in32(SMB_CSR(adap, R_SMB_STATUS)) & M_SMB_BUSY)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:57:
+        while (csr_in32(SMB_CSR(adap, R_SMB_STATUS)) & M_SMB_BUSY)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:58:
+                ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:58:
+                ;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:60:
+        switch (size) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:60:
+        switch (size) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:61:
+        case I2C_SMBUS_QUICK:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:61:
+        case I2C_SMBUS_QUICK:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:62:
+                csr_out32((V_SMB_ADDR(addr) | (read_write == I2C_SMBUS_READ ? M_SMB_QDATA : 0) |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:62:
+                csr_out32((V_SMB_ADDR(addr) | (read_write == I2C_SMBUS_READ ? M_SMB_QDATA : 0) |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:64:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:64:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:65:
+        case I2C_SMBUS_BYTE:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:65:
+        case I2C_SMBUS_BYTE:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:66:
+                if (read_write == I2C_SMBUS_READ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:66:
+                if (read_write == I2C_SMBUS_READ) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:67:
+                        csr_out32((V_SMB_ADDR(addr) | V_SMB_TT_RD1BYTE),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:67:
+                        csr_out32((V_SMB_ADDR(addr) | V_SMB_TT_RD1BYTE),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:69:
+                        data_bytes = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:69:
+                        data_bytes = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:70:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:70:
+                } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:71:
+                        csr_out32(V_SMB_CMD(command), SMB_CSR(adap, R_SMB_CMD));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:71:
+                        csr_out32(V_SMB_CMD(command), SMB_CSR(adap, R_SMB_CMD));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:72:
+                        csr_out32((V_SMB_ADDR(addr) | V_SMB_TT_WR1BYTE),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:72:
+                        csr_out32((V_SMB_ADDR(addr) | V_SMB_TT_WR1BYTE),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:74:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:74:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:75:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:75:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:76:
+        case I2C_SMBUS_BYTE_DATA:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:76:
+        case I2C_SMBUS_BYTE_DATA:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:77:
+                csr_out32(V_SMB_CMD(command), SMB_CSR(adap, R_SMB_CMD));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:77:
+                csr_out32(V_SMB_CMD(command), SMB_CSR(adap, R_SMB_CMD));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:78:
+                if (read_write == I2C_SMBUS_READ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:78:
+                if (read_write == I2C_SMBUS_READ) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:79:
+                        csr_out32((V_SMB_ADDR(addr) | V_SMB_TT_CMD_RD1BYTE),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:79:
+                        csr_out32((V_SMB_ADDR(addr) | V_SMB_TT_CMD_RD1BYTE),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:81:
+                        data_bytes = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:81:
+                        data_bytes = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:82:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:82:
+                } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:83:
+                        csr_out32(V_SMB_LB(data->byte), SMB_CSR(adap, R_SMB_DATA));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:83:
+                        csr_out32(V_SMB_LB(data->byte), SMB_CSR(adap, R_SMB_DATA));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#364: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:84:
+                        csr_out32((V_SMB_ADDR(addr) | V_SMB_TT_WR2BYTE),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:84:
+                        csr_out32((V_SMB_ADDR(addr) | V_SMB_TT_WR2BYTE),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#366: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:86:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:86:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:87:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:87:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#368: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:88:
+        case I2C_SMBUS_WORD_DATA:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:88:
+        case I2C_SMBUS_WORD_DATA:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:89:
+                csr_out32(V_SMB_CMD(command), SMB_CSR(adap, R_SMB_CMD));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:89:
+                csr_out32(V_SMB_CMD(command), SMB_CSR(adap, R_SMB_CMD));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:90:
+                if (read_write == I2C_SMBUS_READ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:90:
+                if (read_write == I2C_SMBUS_READ) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:91:
+                        csr_out32((V_SMB_ADDR(addr) | V_SMB_TT_CMD_RD2BYTE),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:91:
+                        csr_out32((V_SMB_ADDR(addr) | V_SMB_TT_CMD_RD2BYTE),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#373: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:93:
+                        data_bytes = 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:93:
+                        data_bytes = 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:94:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:94:
+                } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:95:
+                        csr_out32(V_SMB_LB(data->word & 0xff), SMB_CSR(adap, R_SMB_DATA));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:95:
+                        csr_out32(V_SMB_LB(data->word & 0xff), SMB_CSR(adap, R_SMB_DATA));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:96:
+                        csr_out32(V_SMB_MB(data->word >> 8), SMB_CSR(adap, R_SMB_DATA));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:96:
+                        csr_out32(V_SMB_MB(data->word >> 8), SMB_CSR(adap, R_SMB_DATA));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:97:
+                        csr_out32((V_SMB_ADDR(addr) | V_SMB_TT_WR2BYTE),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:97:
+                        csr_out32((V_SMB_ADDR(addr) | V_SMB_TT_WR2BYTE),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:99:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:99:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:100:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:100:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:101:
+        default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:102:
+                return -1;      /* XXXKW better error code? */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:102:
+                return -1;      /* XXXKW better error code? */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:103:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:103:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:105:
+        while (csr_in32(SMB_CSR(adap, R_SMB_STATUS)) & M_SMB_BUSY)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:105:
+        while (csr_in32(SMB_CSR(adap, R_SMB_STATUS)) & M_SMB_BUSY)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:106:
+                ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:106:
+                ;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:108:
+        error = csr_in32(SMB_CSR(adap, R_SMB_STATUS));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:108:
+        error = csr_in32(SMB_CSR(adap, R_SMB_STATUS));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:109:
+        if (error & M_SMB_ERROR) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:109:
+        if (error & M_SMB_ERROR) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:110:
+                /* Clear error bit by writing a 1 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:111:
+                csr_out32(M_SMB_ERROR, SMB_CSR(adap, R_SMB_STATUS));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:111:
+                csr_out32(M_SMB_ERROR, SMB_CSR(adap, R_SMB_STATUS));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:112:
+                return -1;      /* XXXKW better error code? */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:112:
+                return -1;      /* XXXKW better error code? */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:113:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:113:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:115:
+        if (data_bytes == 1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:115:
+        if (data_bytes == 1)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:116:
+                data->byte = csr_in32(SMB_CSR(adap, R_SMB_DATA)) & 0xff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:116:
+                data->byte = csr_in32(SMB_CSR(adap, R_SMB_DATA)) & 0xff;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:117:
+        if (data_bytes == 2)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:117:
+        if (data_bytes == 2)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:118:
+                data->word = csr_in32(SMB_CSR(adap, R_SMB_DATA)) & 0xffff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:118:
+                data->word = csr_in32(SMB_CSR(adap, R_SMB_DATA)) & 0xffff;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:120:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:120:
+        return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#403: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:123:
+static int algo_control(struct i2c_adapter *adapter, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#404: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:124:
+static int algo_control(struct i2c_adapter *adapter, 
+	unsigned int cmd, unsigned long arg)

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:132:
+                I2C_FUNC_SMBUS_BYTE_DATA | I2C_FUNC_SMBUS_WORD_DATA);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:132:
+                I2C_FUNC_SMBUS_BYTE_DATA | I2C_FUNC_SMBUS_WORD_DATA);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#415: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:135:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#422: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:142:
+^Ismbus_xfer,                   ^I/* smbus_xfer           */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#429: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:149:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#430: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:150:
+ * registering functions to load algorithms at runtime $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:161:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:161:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:161:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:162:
+        /* Set the frequency to 100 kHz */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#443: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:163:
+        csr_out32(speed, SMB_CSR(adap,R_SMB_FREQ));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:163:
+        csr_out32(speed, SMB_CSR(adap,R_SMB_FREQ));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#443: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:163:
+        csr_out32(speed, SMB_CSR(adap,R_SMB_FREQ));
                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#444: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:164:
+        csr_out32(0, SMB_CSR(adap,R_SMB_CONTROL));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:164:
+        csr_out32(0, SMB_CSR(adap,R_SMB_CONTROL));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:164:
+        csr_out32(0, SMB_CSR(adap,R_SMB_CONTROL));
                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#448: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:168:
+                union i2c_smbus_data data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:168:
+                union i2c_smbus_data data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#449: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:169:
+                int rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:169:
+                int rc;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#450: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:170:
+		printk(KERN_INFO " i2c-algo-sibyte.o: scanning bus %s.\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#453: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:173:
+                        /* XXXKW is this a realistic probe? */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#454: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:174:
+                        rc = smbus_xfer(i2c_adap, i, 0, I2C_SMBUS_READ, 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:174:
+                        rc = smbus_xfer(i2c_adap, i, 0, I2C_SMBUS_READ, 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#455: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:175:
+                                        I2C_SMBUS_BYTE_DATA, &data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:175:
+                                        I2C_SMBUS_BYTE_DATA, &data);$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#456: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:176:
+			if (!rc) {
[...]
+			} else 
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:177:
+^I^I^I^Iprintk("(%02x)",i); $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#457: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:177:
+				printk("(%02x)",i); 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#457: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:177:
+				printk("(%02x)",i); 
 				               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#458: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:178:
+^I^I^I} else $

CHECK:BRACES: Unbalanced braces around else statement
#458: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:178:
+			} else 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#459: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:179:
+^I^I^I^Iprintk("."); $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#459: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:179:
+				printk("."); 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#461: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:181:
+		printk("\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#472: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:192:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#477: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:197:
+	if ((res = i2c_del_adapter(adap)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#486: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:206:
+int __init i2c_algo_sibyte_init (void)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#488: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:208:
+	printk("i2c-algo-sibyte.o: i2c SiByte algorithm module\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#492: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:212:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#493: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:213:
+EXPORT_SYMBOL(i2c_sibyte_add_bus);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#494: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:214:
+EXPORT_SYMBOL(i2c_sibyte_del_bus);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#503: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:223:
+int init_module(void) $

CHECK:SPACING: No space is necessary after a cast
#503: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:223:
+int init_module(void) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#508: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:228:
+void cleanup_module(void) $

CHECK:SPACING: No space is necessary after a cast
#508: FILE: drivers/i2c/algos/i2c-algo-sibyte.c:228:
+void cleanup_module(void) 

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#519: FILE: drivers/i2c/busses/Kconfig:326:
+config I2C_SIBYTE
+	tristate "SiByte SMBus interface"
+	depends on SIBYTE_SB1xxx_SOC && I2C
+	help
+	  Supports the SiByte SOC on-chip I2C interfaces (2 channels).
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#543: FILE: drivers/i2c/busses/i2c-sibyte.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#558: FILE: drivers/i2c/busses/i2c-sibyte.c:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#559: FILE: drivers/i2c/busses/i2c-sibyte.c:17:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.$

CHECK:SPACING: No space is necessary after a cast
#569: FILE: drivers/i2c/busses/i2c-sibyte.c:27:
+	{ NULL, 0, (void *) (KSEG1+A_SMB_BASE(0)) },

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#569: FILE: drivers/i2c/busses/i2c-sibyte.c:27:
+	{ NULL, 0, (void *) (KSEG1+A_SMB_BASE(0)) },
 	                          ^

CHECK:SPACING: No space is necessary after a cast
#570: FILE: drivers/i2c/busses/i2c-sibyte.c:28:
+	{ NULL, 1, (void *) (KSEG1+A_SMB_BASE(1)) }

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#570: FILE: drivers/i2c/busses/i2c-sibyte.c:28:
+	{ NULL, 1, (void *) (KSEG1+A_SMB_BASE(1)) }
 	                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#594: FILE: drivers/i2c/busses/i2c-sibyte.c:52:
+	printk("i2c-swarm.o: i2c SMBus adapter module for SiByte board\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#618: FILE: include/linux/i2c-algo-sgi.h:1:
+/*

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#632: FILE: include/linux/i2c-algo-sgi.h:15:
+	unsigned (*getctrl)(void *data);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#633: FILE: include/linux/i2c-algo-sgi.h:16:
+	void (*setctrl)(void *data, unsigned val);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#634: FILE: include/linux/i2c-algo-sgi.h:17:
+	unsigned (*rdata)(void *data);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#635: FILE: include/linux/i2c-algo-sgi.h:18:
+	void (*wdata)(void *data, unsigned val);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct i2c_adapter *' should also have an identifier name
#641: FILE: include/linux/i2c-algo-sgi.h:24:
+int i2c_sgi_add_bus(struct i2c_adapter *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct i2c_adapter *' should also have an identifier name
#642: FILE: include/linux/i2c-algo-sgi.h:25:
+int i2c_sgi_del_bus(struct i2c_adapter *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#649: FILE: include/linux/i2c-algo-sibyte.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#663: FILE: include/linux/i2c-algo-sibyte.h:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#664: FILE: include/linux/i2c-algo-sibyte.h:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#674: FILE: include/linux/i2c-algo-sibyte.h:26:
+        int   bus;^I^I/* which bus */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: include/linux/i2c-algo-sibyte.h:26:
+        int   bus;^I^I/* which bus */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#675: FILE: include/linux/i2c-algo-sibyte.h:27:
+        void *reg_base;^I^I/* CSR base */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: include/linux/i2c-algo-sibyte.h:27:
+        void *reg_base;^I^I/* CSR base */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct i2c_adapter *' should also have an identifier name
#678: FILE: include/linux/i2c-algo-sibyte.h:30:
+int i2c_sibyte_add_bus(struct i2c_adapter *, int speed);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct i2c_adapter *' should also have an identifier name
#679: FILE: include/linux/i2c-algo-sibyte.h:31:
+int i2c_sibyte_del_bus(struct i2c_adapter *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217667.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 96 errors, 99 warnings, 25 checks, 625 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217667.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
