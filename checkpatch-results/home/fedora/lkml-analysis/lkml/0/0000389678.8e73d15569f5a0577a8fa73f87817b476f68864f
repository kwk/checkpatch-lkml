WARNING:TYPO_SPELLING: 'preceeding' may be misspelled - perhaps 'preceding'?
#24: 
last byte is POISON_END, but also that all preceeding bytes are
                                           ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'freeed' may be misspelled - perhaps 'freed'?
#31: 
is set after vma is freeed...  Any clue? Setting VM_ACCOUNT
                    ^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
Next: 71 F0 2C .A5 C2 0F 17 20 E2 32 DA 00 40 01 40 00 50 01 40 A4 9F 9A D9 25 00 00 00 73 00 10 00 

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#107: FILE: mm/slab.c:771:
+static void* fprob(unsigned char* addr, unsigned int size) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#107: FILE: mm/slab.c:771:
+static void* fprob(unsigned char* addr, unsigned int size) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#107: FILE: mm/slab.c:771:
+static void* fprob(unsigned char* addr, unsigned int size) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#108: FILE: mm/slab.c:772:
+	unsigned char* end;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: mm/slab.c:773:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#133: FILE: mm/slab.c:796:
+		printk(KERN_ERR "Corruption! start=%p, expend=%p, problemat=%p\n", addr, addr+size-1, end);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LINE_SPACING: Missing a blank line after declarations
#133: FILE: mm/slab.c:796:
+		int s;
+		printk(KERN_ERR "Corruption! start=%p, expend=%p, problemat=%p\n", addr, addr+size-1, end);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#133: FILE: mm/slab.c:796:
+		printk(KERN_ERR "Corruption! start=%p, expend=%p, problemat=%p\n", addr, addr+size-1, end);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#133: FILE: mm/slab.c:796:
+		printk(KERN_ERR "Corruption! start=%p, expend=%p, problemat=%p\n", addr, addr+size-1, end);
 		                                                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#133: FILE: mm/slab.c:796:
+		printk(KERN_ERR "Corruption! start=%p, expend=%p, problemat=%p\n", addr, addr+size-1, end);
 		                                                                                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#134: FILE: mm/slab.c:797:
+		printk(KERN_ERR "Data: ");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#136: FILE: mm/slab.c:799:
+			if (((char*)addr)[s] == POISON_BEFORE)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#137: FILE: mm/slab.c:800:
+				printk(".");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#138: FILE: mm/slab.c:801:
+			else if (((char*)addr)[s] == POISON_AFTER)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#139: FILE: mm/slab.c:802:
+				printk("*");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#141: FILE: mm/slab.c:804:
+				printk("%02X ", ((unsigned char*)addr)[s]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#141: FILE: mm/slab.c:804:
+				printk("%02X ", ((unsigned char*)addr)[s]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#143: FILE: mm/slab.c:806:
+		printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#144: FILE: mm/slab.c:807:
+		printk(KERN_ERR "Next: ");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#146: FILE: mm/slab.c:809:
+			if (((char*)addr)[s] == POISON_BEFORE)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#147: FILE: mm/slab.c:810:
+				printk(".");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#148: FILE: mm/slab.c:811:
+			else if (((char*)addr)[s] == POISON_AFTER)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#149: FILE: mm/slab.c:812:
+				printk("*");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#151: FILE: mm/slab.c:814:
+				printk("%02X ", ((unsigned char*)addr)[s]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#151: FILE: mm/slab.c:814:
+				printk("%02X ", ((unsigned char*)addr)[s]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#153: FILE: mm/slab.c:816:
+		printk("\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000389678.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 16 warnings, 2 checks, 54 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000389678.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
