WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
diff -ruN linux-2.5.44/drivers/perfctr/Config.help linux-2.5.44.perfctr-3.0-pre2/drivers/perfctr/Config.help

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#122: FILE: drivers/perfctr/compat.h:1:
+/* $Id: compat.h,v 1.27 2002/10/11 08:47:05 mikpe Exp $

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#122: FILE: drivers/perfctr/compat.h:1:
+/* $Id: compat.h,v 1.27 2002/10/11 08:47:05 mikpe Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#131: FILE: drivers/perfctr/compat.h:10:
+#if defined(CONFIG_X86) && LINUX_VERSION_CODE < KERNEL_VERSION(2,4,11) && !defined(cpu_relax)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: drivers/perfctr/compat.h:10:
+#if defined(CONFIG_X86) && LINUX_VERSION_CODE < KERNEL_VERSION(2,4,11) && !defined(cpu_relax)
                                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: drivers/perfctr/compat.h:10:
+#if defined(CONFIG_X86) && LINUX_VERSION_CODE < KERNEL_VERSION(2,4,11) && !defined(cpu_relax)
                                                                   ^

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#136: FILE: drivers/perfctr/compat.h:15:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,5,4)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#136: FILE: drivers/perfctr/compat.h:15:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,5,4)
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#136: FILE: drivers/perfctr/compat.h:15:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,5,4)
                                             ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#136: FILE: drivers/perfctr/compat.h:15:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,5,4)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#143: FILE: drivers/perfctr/compat.h:22:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,3)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#143: FILE: drivers/perfctr/compat.h:22:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,3)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#143: FILE: drivers/perfctr/compat.h:22:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,3)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#143: FILE: drivers/perfctr/compat.h:22:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,3)

WARNING:LONG_LINE: line length of 143 exceeds 100 columns
#145: FILE: drivers/perfctr/compat.h:24:
+static inline int perfctr_remap_page_range(struct vm_area_struct *vma, unsigned long from, unsigned long to, unsigned long size, pgprot_t prot)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#149: FILE: drivers/perfctr/compat.h:28:
+}
+#undef remap_page_range

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#150: FILE: drivers/perfctr/compat.h:29:
+#define remap_page_range(vma,from,to,size,prot) perfctr_remap_page_range((vma),(from),(to),(size),(prot))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: drivers/perfctr/compat.h:29:
+#define remap_page_range(vma,from,to,size,prot) perfctr_remap_page_range((vma),(from),(to),(size),(prot))
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: drivers/perfctr/compat.h:29:
+#define remap_page_range(vma,from,to,size,prot) perfctr_remap_page_range((vma),(from),(to),(size),(prot))
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: drivers/perfctr/compat.h:29:
+#define remap_page_range(vma,from,to,size,prot) perfctr_remap_page_range((vma),(from),(to),(size),(prot))
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: drivers/perfctr/compat.h:29:
+#define remap_page_range(vma,from,to,size,prot) perfctr_remap_page_range((vma),(from),(to),(size),(prot))
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: drivers/perfctr/compat.h:29:
+#define remap_page_range(vma,from,to,size,prot) perfctr_remap_page_range((vma),(from),(to),(size),(prot))
                                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: drivers/perfctr/compat.h:29:
+#define remap_page_range(vma,from,to,size,prot) perfctr_remap_page_range((vma),(from),(to),(size),(prot))
                                                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: drivers/perfctr/compat.h:29:
+#define remap_page_range(vma,from,to,size,prot) perfctr_remap_page_range((vma),(from),(to),(size),(prot))
                                                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: drivers/perfctr/compat.h:29:
+#define remap_page_range(vma,from,to,size,prot) perfctr_remap_page_range((vma),(from),(to),(size),(prot))
                                                                                                  ^

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#154: FILE: drivers/perfctr/compat.h:33:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,4)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: drivers/perfctr/compat.h:33:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,4)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: drivers/perfctr/compat.h:33:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,4)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#154: FILE: drivers/perfctr/compat.h:33:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,4)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#161: FILE: drivers/perfctr/init.c:1:
+/* $Id: init.c,v 1.42 2002/10/20 21:53:01 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#161: FILE: drivers/perfctr/init.c:1:
+/* $Id: init.c,v 1.42 2002/10/20 21:53:01 mikpe Exp $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#173: FILE: drivers/perfctr/init.c:13:
+#include <asm/uaccess.h>

ERROR:SPACING: space prohibited after that open parenthesis '('
#186: FILE: drivers/perfctr/init.c:26:
+	if( copy_to_user(argp, &perfctr_info, sizeof perfctr_info) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#186: FILE: drivers/perfctr/init.c:26:
+	if( copy_to_user(argp, &perfctr_info, sizeof perfctr_info) )

ERROR:SPACING: space required before the open parenthesis '('
#186: FILE: drivers/perfctr/init.c:26:
+	if( copy_to_user(argp, &perfctr_info, sizeof perfctr_info) )

WARNING:SIZEOF_PARENTHESIS: sizeof perfctr_info should be sizeof(perfctr_info)
#186: FILE: drivers/perfctr/init.c:26:
+	if( copy_to_user(argp, &perfctr_info, sizeof perfctr_info) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#195: FILE: drivers/perfctr/init.c:35:
+	if( !init_done )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#195: FILE: drivers/perfctr/init.c:35:
+	if( !init_done )

ERROR:SPACING: space required before the open parenthesis '('
#195: FILE: drivers/perfctr/init.c:35:
+	if( !init_done )

ERROR:SPACING: space prohibited after that open parenthesis '('
#197: FILE: drivers/perfctr/init.c:37:
+	if( cmd == PERFCTR_INFO )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#197: FILE: drivers/perfctr/init.c:37:
+	if( cmd == PERFCTR_INFO )

ERROR:SPACING: space required before the open parenthesis '('
#197: FILE: drivers/perfctr/init.c:37:
+	if( cmd == PERFCTR_INFO )

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#198: FILE: drivers/perfctr/init.c:38:
+		return sys_perfctr_info((struct perfctr_info*)arg);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#199: FILE: drivers/perfctr/init.c:39:
+	if( cmd <= VPERFCTR_CREAT )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#199: FILE: drivers/perfctr/init.c:39:
+	if( cmd <= VPERFCTR_CREAT )

ERROR:SPACING: space required before the open parenthesis '('
#199: FILE: drivers/perfctr/init.c:39:
+	if( cmd <= VPERFCTR_CREAT )

WARNING:LINE_SPACING: Missing a blank line after declarations
#207: FILE: drivers/perfctr/init.c:47:
+	int err;
+	if( (err = perfctr_cpu_init()) != 0 ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#207: FILE: drivers/perfctr/init.c:47:
+	if( (err = perfctr_cpu_init()) != 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#207: FILE: drivers/perfctr/init.c:47:
+	if( (err = perfctr_cpu_init()) != 0 ) {

ERROR:SPACING: space required before the open parenthesis '('
#207: FILE: drivers/perfctr/init.c:47:
+	if( (err = perfctr_cpu_init()) != 0 ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#207: FILE: drivers/perfctr/init.c:47:
+	if( (err = perfctr_cpu_init()) != 0 ) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#208: FILE: drivers/perfctr/init.c:48:
+		printk(KERN_INFO "perfctr: not supported by this processor\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#211: FILE: drivers/perfctr/init.c:51:
+	if( (err = vperfctr_init()) != 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#211: FILE: drivers/perfctr/init.c:51:
+	if( (err = vperfctr_init()) != 0 )

ERROR:SPACING: space required before the open parenthesis '('
#211: FILE: drivers/perfctr/init.c:51:
+	if( (err = vperfctr_init()) != 0 )

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#211: FILE: drivers/perfctr/init.c:51:
+	if( (err = vperfctr_init()) != 0 )

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#213: FILE: drivers/perfctr/init.c:53:
+	printk(KERN_INFO "perfctr: driver %s, cpu type %s at %lu kHz\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#233: FILE: include/linux/perfctr.h:1:
+/* $Id: perfctr.h,v 1.36 2002/10/20 21:51:06 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#233: FILE: include/linux/perfctr.h:1:
+/* $Id: perfctr.h,v 1.36 2002/10/20 21:51:06 mikpe Exp $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#280: FILE: include/linux/perfctr.h:48:
+#define VPERFCTR_MAGIC	((VPERFCTR_STATE_MAGIC<<16)|PERFCTR_CPU_STATE_MAGIC)
                       	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#280: FILE: include/linux/perfctr.h:48:
+#define VPERFCTR_MAGIC	((VPERFCTR_STATE_MAGIC<<16)|PERFCTR_CPU_STATE_MAGIC)
                       	                           ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#314: FILE: include/linux/perfctr.h:82:
+extern struct vperfctr *__vperfctr_copy(struct vperfctr*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#314: FILE: include/linux/perfctr.h:82:
+extern struct vperfctr *__vperfctr_copy(struct vperfctr*);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#315: FILE: include/linux/perfctr.h:83:
+extern void __vperfctr_exit(struct vperfctr*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#315: FILE: include/linux/perfctr.h:83:
+extern void __vperfctr_exit(struct vperfctr*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vperfctr*' should also have an identifier name
#315: FILE: include/linux/perfctr.h:83:
+extern void __vperfctr_exit(struct vperfctr*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#316: FILE: include/linux/perfctr.h:84:
+extern void __vperfctr_suspend(struct vperfctr*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#316: FILE: include/linux/perfctr.h:84:
+extern void __vperfctr_suspend(struct vperfctr*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vperfctr*' should also have an identifier name
#316: FILE: include/linux/perfctr.h:84:
+extern void __vperfctr_suspend(struct vperfctr*);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#317: FILE: include/linux/perfctr.h:85:
+extern void __vperfctr_resume(struct vperfctr*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#317: FILE: include/linux/perfctr.h:85:
+extern void __vperfctr_resume(struct vperfctr*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vperfctr*' should also have an identifier name
#317: FILE: include/linux/perfctr.h:85:
+extern void __vperfctr_resume(struct vperfctr*);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#318: FILE: include/linux/perfctr.h:86:
+extern void __vperfctr_sample(struct vperfctr*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#318: FILE: include/linux/perfctr.h:86:
+extern void __vperfctr_sample(struct vperfctr*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vperfctr*' should also have an identifier name
#318: FILE: include/linux/perfctr.h:86:
+extern void __vperfctr_sample(struct vperfctr*);

WARNING:LINE_SPACING: Missing a blank line after declarations
#328: FILE: include/linux/perfctr.h:96:
+	struct vperfctr *perfctr;
+	perfctr = thread->perfctr;

ERROR:SPACING: space prohibited after that open parenthesis '('
#329: FILE: include/linux/perfctr.h:97:
+	if( perfctr ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#329: FILE: include/linux/perfctr.h:97:
+	if( perfctr ) {

ERROR:SPACING: space required before the open parenthesis '('
#329: FILE: include/linux/perfctr.h:97:
+	if( perfctr ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#338: FILE: include/linux/perfctr.h:106:
+	struct vperfctr *perfctr;
+	perfctr = prev->perfctr;

ERROR:SPACING: space prohibited after that open parenthesis '('
#339: FILE: include/linux/perfctr.h:107:
+	if( perfctr )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#339: FILE: include/linux/perfctr.h:107:
+	if( perfctr )

ERROR:SPACING: space required before the open parenthesis '('
#339: FILE: include/linux/perfctr.h:107:
+	if( perfctr )

WARNING:LINE_SPACING: Missing a blank line after declarations
#347: FILE: include/linux/perfctr.h:115:
+	struct vperfctr *perfctr;
+	perfctr = next->perfctr;

ERROR:SPACING: space prohibited after that open parenthesis '('
#348: FILE: include/linux/perfctr.h:116:
+	if( perfctr )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#348: FILE: include/linux/perfctr.h:116:
+	if( perfctr )

ERROR:SPACING: space required before the open parenthesis '('
#348: FILE: include/linux/perfctr.h:116:
+	if( perfctr )

WARNING:LINE_SPACING: Missing a blank line after declarations
#356: FILE: include/linux/perfctr.h:124:
+	struct vperfctr *perfctr;
+	perfctr = thread->perfctr;

ERROR:SPACING: space prohibited after that open parenthesis '('
#357: FILE: include/linux/perfctr.h:125:
+	if( perfctr )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#357: FILE: include/linux/perfctr.h:125:
+	if( perfctr )

ERROR:SPACING: space required before the open parenthesis '('
#357: FILE: include/linux/perfctr.h:125:
+	if( perfctr )

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000420007.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 54 errors, 29 warnings, 8 checks, 317 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000420007.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
