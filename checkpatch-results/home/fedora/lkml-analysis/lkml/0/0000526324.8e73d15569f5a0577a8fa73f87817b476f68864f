WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
diff -ur /md0/kernels/2.4/v2.4.6-pre8/arch/i386/Makefile lb-2.4.6-pre8/arch/i386/Makefile

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#47: 
diff -ur /md0/kernels/2.4/v2.4.6-pre8/arch/i386/Makefile lb-2.4.6-pre8/arch/i386/Makefile

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#48: 
--- /md0/kernels/2.4/v2.4.6-pre8/arch/i386/Makefile	Thu May  3 11:22:07 2001

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#97: FILE: drivers/block/floppy.c:2985:
+		printk("sect=%" BLKOFF_FMT " cmd=%d\n", CURRENT->sector, CURRENT->cmd);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#119: FILE: drivers/block/ll_rw_blk.c:671:
+	unsigned count;

WARNING:SPLIT_STRING: quoted string split across lines
#160: FILE: drivers/block/ll_rw_blk.c:910:
 			       "generic_make_request: Trying to access "
+			       "nonexistent block-device %s (%" BLKOFF_FMT ")\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#169: FILE: drivers/block/ll_rw_blk.c:1119:
+		printk("end_request: I/O error, dev %s (%s), sector %" BLKOFF_FMT "\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: drivers/block/ll_rw_blk.c:1120:
+		printk("end_request: I/O error, dev %s (%s), sector %" BLKOFF_FMT "\n",
 			kdevname(req->rq_dev), name, req->sector);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: drivers/block/loop.c:150:
+static blkoff_t compute_loop_size(struct loop_device *lo, struct dentry * lo_dentry, kdev_t lodev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#226: FILE: drivers/block/loop.c:184:
+		blkoff_t IV = index * (PAGE_CACHE_SIZE/bsize) + offset/bsize;
 		                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#226: FILE: drivers/block/loop.c:184:
+		blkoff_t IV = index * (PAGE_CACHE_SIZE/bsize) + offset/bsize;
 		                                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#235: FILE: drivers/block/loop.c:212:
+	printk(KERN_ERR "loop: transfer error block %"BLKOFF_FMT"\n", index);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#235: FILE: drivers/block/loop.c:212:
+	printk(KERN_ERR "loop: transfer error block %"BLKOFF_FMT"\n", index);

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#244: FILE: drivers/block/loop.c:235:
+	blkoff_t IV = (blkoff_t)page->index * (PAGE_CACHE_SIZE/p->bsize) + offset/p->bsize;
 	                                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#244: FILE: drivers/block/loop.c:235:
+	blkoff_t IV = (blkoff_t)page->index * (PAGE_CACHE_SIZE/p->bsize) + offset/p->bsize;
 	                                                                         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#252: FILE: drivers/block/loop.c:286:
 }
+static inline int loop_get_shift(struct loop_device *lo)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#284: FILE: drivers/block/loop.c:998:
+	loop_sizes = kmalloc(max_loop * sizeof(blkoff_t), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#317: FILE: drivers/ide/ide-cd.c:1063:
+		printk ("%s: cdrom_read_from_buffer: buffer botch (%" BLKOFF_FMT ")\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#317: FILE: drivers/ide/ide-cd.c:1063:
+		printk ("%s: cdrom_read_from_buffer: buffer botch (%" BLKOFF_FMT ")\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#329: FILE: drivers/ide/ide-probe.c:762:
+	gd->sizes = kmalloc (minors * sizeof(blkoff_t), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#329: FILE: drivers/ide/ide-probe.c:762:
+	gd->sizes = kmalloc (minors * sizeof(blkoff_t), GFP_KERNEL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#341: FILE: drivers/ide/ide.c:884:
+					printk(", sector=%" BLKOFF_FMT, HWGROUP(drive)->rq->sector);

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: drivers/md/linear.c:128:
+        blkoff_t block;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: drivers/md/linear.c:128:
+        blkoff_t block;$

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#362: FILE: drivers/md/linear.c:135:
+			printk ("linear_make_request : hash->dev1==NULL for block %"BLKOFF_FMT"\n", block);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#362: FILE: drivers/md/linear.c:135:
+			printk ("linear_make_request : hash->dev1==NULL for block %"BLKOFF_FMT"\n", block);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#362: FILE: drivers/md/linear.c:135:
+			printk ("linear_make_request : hash->dev1==NULL for block %"BLKOFF_FMT"\n", block);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#362: FILE: drivers/md/linear.c:135:
+			printk ("linear_make_request : hash->dev1==NULL for block %"BLKOFF_FMT"\n", block);

WARNING:LONG_LINE: line length of 199 exceeds 100 columns
#371: FILE: drivers/md/linear.c:145:
+		printk ("linear_make_request: Block %" BLKOFF_FMT " out of bounds on dev %s size %"BLKOFF_FMT" offset %"BLKOFF_FMT"\n", block, kdevname(tmp_dev->dev), tmp_dev->size, tmp_dev->offset);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#371: FILE: drivers/md/linear.c:145:
+		printk ("linear_make_request: Block %" BLKOFF_FMT " out of bounds on dev %s size %"BLKOFF_FMT" offset %"BLKOFF_FMT"\n", block, kdevname(tmp_dev->dev), tmp_dev->size, tmp_dev->offset);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#371: FILE: drivers/md/linear.c:145:
+		printk ("linear_make_request: Block %" BLKOFF_FMT " out of bounds on dev %s size %"BLKOFF_FMT" offset %"BLKOFF_FMT"\n", block, kdevname(tmp_dev->dev), tmp_dev->size, tmp_dev->offset);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#371: FILE: drivers/md/linear.c:145:
+		printk ("linear_make_request: Block %" BLKOFF_FMT " out of bounds on dev %s size %"BLKOFF_FMT" offset %"BLKOFF_FMT"\n", block, kdevname(tmp_dev->dev), tmp_dev->size, tmp_dev->offset);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#426: FILE: drivers/md/md.c:806:
+	printk("md: rdev %s: O:%s, SZ:%08"BLKOFF_FMT" F:%d DN:%d ",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#426: FILE: drivers/md/md.c:806:
+	printk("md: rdev %s: O:%s, SZ:%08"BLKOFF_FMT" F:%d DN:%d ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#427: FILE: drivers/md/md.c:807:
+	printk("md: rdev %s: O:%s, SZ:%08"BLKOFF_FMT" F:%d DN:%d ",
 		partition_name(rdev->dev), partition_name(rdev->old_dev),

WARNING:LONG_LINE: line length of 150 exceeds 100 columns
#444: FILE: drivers/md/md.c:934:
+		printk("%s's sb offset has changed from %"BLKOFF_FMT" to %"BLKOFF_FMT", skipping\n", partition_name(dev), rdev->sb_offset, sb_offset);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#444: FILE: drivers/md/md.c:934:
+		printk("%s's sb offset has changed from %"BLKOFF_FMT" to %"BLKOFF_FMT", skipping\n", partition_name(dev), rdev->sb_offset, sb_offset);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#444: FILE: drivers/md/md.c:934:
+		printk("%s's sb offset has changed from %"BLKOFF_FMT" to %"BLKOFF_FMT", skipping\n", partition_name(dev), rdev->sb_offset, sb_offset);

WARNING:LONG_LINE: line length of 148 exceeds 100 columns
#453: FILE: drivers/md/md.c:944:
+		printk("%s's size has changed from %"BLKOFF_FMT" to %"BLKOFF_FMT" since import, skipping\n", partition_name(dev), rdev->size, size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#453: FILE: drivers/md/md.c:944:
+		printk("%s's size has changed from %"BLKOFF_FMT" to %"BLKOFF_FMT" since import, skipping\n", partition_name(dev), rdev->size, size);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#453: FILE: drivers/md/md.c:944:
+		printk("%s's size has changed from %"BLKOFF_FMT" to %"BLKOFF_FMT" since import, skipping\n", partition_name(dev), rdev->size, size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#458: FILE: drivers/md/md.c:948:
+	printk("(write) %s's sb offset: %"BLKOFF_FMT"\n", partition_name(dev), sb_offset);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#458: FILE: drivers/md/md.c:948:
+	printk("(write) %s's sb offset: %"BLKOFF_FMT"\n", partition_name(dev), sb_offset);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#467: FILE: drivers/md/md.c:1488:
+				"md: Dev %s smaller than chunk_size: %"BLKOFF_FMT"k < %dk\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#487: FILE: drivers/md/md.c:2523:
+			long long val = md_hd_struct[minor].nr_sects;
+			if (!arg) {

WARNING:SIZEOF_PARENTHESIS: sizeof val should be sizeof(val)
#492: FILE: drivers/md/md.c:2528:
+			if (copy_to_user((void *)arg, &val, sizeof val))

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#539: FILE: drivers/md/md.c:3310:
+	printk(KERN_INFO "md: using %dk window, over a total of %" BLKOFF_FMT " blocks.\n",window/2,max_sectors/2);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#539: FILE: drivers/md/md.c:3310:
+	printk(KERN_INFO "md: using %dk window, over a total of %" BLKOFF_FMT " blocks.\n",window/2,max_sectors/2);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#539: FILE: drivers/md/md.c:3310:
+	printk(KERN_INFO "md: using %dk window, over a total of %" BLKOFF_FMT " blocks.\n",window/2,max_sectors/2);
 	                                                                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#539: FILE: drivers/md/md.c:3310:
+	printk(KERN_INFO "md: using %dk window, over a total of %" BLKOFF_FMT " blocks.\n",window/2,max_sectors/2);
 	                                                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#539: FILE: drivers/md/md.c:3310:
+	printk(KERN_INFO "md: using %dk window, over a total of %" BLKOFF_FMT " blocks.\n",window/2,max_sectors/2);
 	                                                                                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#539: FILE: drivers/md/md.c:3310:
+	printk(KERN_INFO "md: using %dk window, over a total of %" BLKOFF_FMT " blocks.\n",window/2,max_sectors/2);
 	                                                                                                       ^

WARNING:LONG_LINE: line length of 178 exceeds 100 columns
#559: FILE: drivers/md/raid0.c:44:
+			printk("raid0:   comparing %s(%"BLKOFF_FMT") with %s(%"BLKOFF_FMT")\n", partition_name(rdev1->dev), rdev1->size, partition_name(rdev2->dev), rdev2->size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#559: FILE: drivers/md/raid0.c:44:
+			printk("raid0:   comparing %s(%"BLKOFF_FMT") with %s(%"BLKOFF_FMT")\n", partition_name(rdev1->dev), rdev1->size, partition_name(rdev2->dev), rdev2->size);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#559: FILE: drivers/md/raid0.c:44:
+			printk("raid0:   comparing %s(%"BLKOFF_FMT") with %s(%"BLKOFF_FMT")\n", partition_name(rdev1->dev), rdev1->size, partition_name(rdev2->dev), rdev2->size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#568: FILE: drivers/md/raid0.c:98:
+					printk("  (%"BLKOFF_FMT") is smallest!.\n", rdev->size);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#568: FILE: drivers/md/raid0.c:98:
+					printk("  (%"BLKOFF_FMT") is smallest!.\n", rdev->size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#577: FILE: drivers/md/raid0.c:106:
+		printk("raid0: zone->nb_dev: %d, size: %"BLKOFF_FMT"\n",zone->nb_dev,zone->size);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#577: FILE: drivers/md/raid0.c:106:
+		printk("raid0: zone->nb_dev: %d, size: %"BLKOFF_FMT"\n",zone->nb_dev,zone->size);
 		                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#577: FILE: drivers/md/raid0.c:106:
+		printk("raid0: zone->nb_dev: %d, size: %"BLKOFF_FMT"\n",zone->nb_dev,zone->size);
 		                                                                    ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#577: FILE: drivers/md/raid0.c:106:
+		printk("raid0: zone->nb_dev: %d, size: %"BLKOFF_FMT"\n",zone->nb_dev,zone->size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#587: FILE: drivers/md/raid0.c:141:
+	printk("raid0 : md_size is %" BLKOFF_FMT " blocks.\n", md_size[mdidx(mddev)]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#588: FILE: drivers/md/raid0.c:142:
+	printk("raid0 : conf->smallest->size is %" BLKOFF_FMT " blocks.\n", conf->smallest->size);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#607: FILE: drivers/md/raid0.c:243:
+	if (chunk_size < (block & (chunk_size-1)) + (bh->b_size >> 10))
 	                                     ^

WARNING:LONG_LINE: line length of 160 exceeds 100 columns
#616: FILE: drivers/md/raid0.c:278:
+	printk ("raid0_make_request bug: can't convert block across chunks or bigger than %dk %"BLKOFF_FMT" %d\n", chunk_size, bh->b_rsector, bh->b_size >> 10);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#616: FILE: drivers/md/raid0.c:278:
+	printk ("raid0_make_request bug: can't convert block across chunks or bigger than %dk %"BLKOFF_FMT" %d\n", chunk_size, bh->b_rsector, bh->b_size >> 10);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#616: FILE: drivers/md/raid0.c:278:
+	printk ("raid0_make_request bug: can't convert block across chunks or bigger than %dk %"BLKOFF_FMT" %d\n", chunk_size, bh->b_rsector, bh->b_size >> 10);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#616: FILE: drivers/md/raid0.c:278:
+	printk ("raid0_make_request bug: can't convert block across chunks or bigger than %dk %"BLKOFF_FMT" %d\n", chunk_size, bh->b_rsector, bh->b_size >> 10);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#620: FILE: drivers/md/raid0.c:281:
+	printk("raid0_make_request bug: hash==NULL for block %"BLKOFF_FMT"\n", block);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#620: FILE: drivers/md/raid0.c:281:
+	printk("raid0_make_request bug: hash==NULL for block %"BLKOFF_FMT"\n", block);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#624: FILE: drivers/md/raid0.c:284:
+	printk ("raid0_make_request bug: hash->zone0==NULL for block %"BLKOFF_FMT"\n", block);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#624: FILE: drivers/md/raid0.c:284:
+	printk ("raid0_make_request bug: hash->zone0==NULL for block %"BLKOFF_FMT"\n", block);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#624: FILE: drivers/md/raid0.c:284:
+	printk ("raid0_make_request bug: hash->zone0==NULL for block %"BLKOFF_FMT"\n", block);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#628: FILE: drivers/md/raid0.c:287:
+	printk ("raid0_make_request bug: hash->zone1==NULL for block %"BLKOFF_FMT"\n", block);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#628: FILE: drivers/md/raid0.c:287:
+	printk ("raid0_make_request bug: hash->zone1==NULL for block %"BLKOFF_FMT"\n", block);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#628: FILE: drivers/md/raid0.c:287:
+	printk ("raid0_make_request bug: hash->zone1==NULL for block %"BLKOFF_FMT"\n", block);

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#640: FILE: drivers/md/raid1.c:338:
+static void inline io_request_done(blkoff_t sector, raid1_conf_t *conf, int phase)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#649: FILE: drivers/md/raid1.c:420:
+		printk(KERN_ERR "raid1: %s: rescheduling block %"BLKOFF_FMT"\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#649: FILE: drivers/md/raid1.c:420:
+		printk(KERN_ERR "raid1: %s: rescheduling block %"BLKOFF_FMT"\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#650: FILE: drivers/md/raid1.c:421:
+		printk(KERN_ERR "raid1: %s: rescheduling block %"BLKOFF_FMT"\n",
 			 partition_name(bh->b_dev), bh->b_blocknr);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#697: FILE: drivers/md/raid1.c:1092:
+"raid1: %s: unrecoverable I/O read error for block %"BLKOFF_FMT"\n"

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#701: FILE: drivers/md/raid1.c:1095:
+"raid1: %s: redirecting sector %"BLKOFF_FMT" to another mirror\n"

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#710: FILE: drivers/md/raid1.c:1308:
+static int raid1_sync_request (mddev_t *mddev, blkoff_t sector_nr)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#731: FILE: drivers/md/raid5.c:207:
+			printk("sector=%"BLKOFF_FMT" i=%d %p %p %p %d\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#731: FILE: drivers/md/raid5.c:207:
+			printk("sector=%"BLKOFF_FMT" i=%d %p %p %p %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#750: FILE: drivers/md/raid5.c:543:
+static unsigned long raid5_compute_sector(blkoff_t r_sector, unsigned int raid_disks,
 			unsigned int data_disks, unsigned int * dd_idx,

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#774: FILE: drivers/md/raid5.c:673:
+			printk("compute_block() %d, stripe %"BLKOFF_FMT", %d not present\n", dd_idx, sh->sector, i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#774: FILE: drivers/md/raid5.c:673:
+			printk("compute_block() %d, stripe %"BLKOFF_FMT", %d not present\n", dd_idx, sh->sector, i);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#774: FILE: drivers/md/raid5.c:673:
+			printk("compute_block() %d, stripe %"BLKOFF_FMT", %d not present\n", dd_idx, sh->sector, i);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#783: FILE: drivers/md/raid5.c:784:
+		printk(KERN_NOTICE "raid5: multiple %d requests for sector %"BLKOFF_FMT"\n", rw, sh->sector);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#783: FILE: drivers/md/raid5.c:784:
+		printk(KERN_NOTICE "raid5: multiple %d requests for sector %"BLKOFF_FMT"\n", rw, sh->sector);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#783: FILE: drivers/md/raid5.c:784:
+		printk(KERN_NOTICE "raid5: multiple %d requests for sector %"BLKOFF_FMT"\n", rw, sh->sector);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#792: FILE: drivers/md/raid5.c:1239:
+static int raid5_sync_request (mddev_t *mddev, blkoff_t sector_nr)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#798: FILE: drivers/md/raid5.c:1244:
+	blkoff_t stripe = sector_nr/sectors_per_chunk;
 	                           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#818: FILE: drivers/scsi/scsi_lib.c:372:
+		printk(" I/O error: dev %s, sector %"BLKOFF_FMT"\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#818: FILE: drivers/scsi/scsi_lib.c:372:
+		printk(" I/O error: dev %s, sector %"BLKOFF_FMT"\n",

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#865: FILE: drivers/scsi/sr.c:769:
+	sr_sizes = kmalloc(sr_template.dev_max * sizeof(blkoff_t), GFP_ATOMIC);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#936: FILE: fs/bfs/file.c:56:
+static int bfs_get_block(struct inode * inode, blkoff_t block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#937: FILE: fs/bfs/file.c:57:
+static int bfs_get_block(struct inode * inode, blkoff_t block,
 	struct buffer_head * bh_result, int create)

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#980: FILE: fs/block_dev.c:58:
+		size = ((unsigned long long) blk_size[MAJOR(dev)][MINOR(dev)] << BLOCK_SIZE_BITS) >> blocksize_bits;

CHECK:SPACING: No space is necessary after a cast
#980: FILE: fs/block_dev.c:58:
+		size = ((unsigned long long) blk_size[MAJOR(dev)][MINOR(dev)] << BLOCK_SIZE_BITS) >> blocksize_bits;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1008: FILE: fs/buffer.c:534:
+static inline struct buffer_head * __get_hash_table(kdev_t dev, blkoff_t block, int size)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1017: FILE: fs/buffer.c:549:
+struct buffer_head * get_hash_table(kdev_t dev, blkoff_t block, int size)

WARNING:LONG_LINE_STRING: line length of 111 exceeds 100 columns
#1034: FILE: fs/buffer.c:714:
+					       "set_blocksize: dev %s buffer_dirty %" BLKOFF_FMT " size %hu\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPLIT_STRING: quoted string split across lines
#1043: FILE: fs/buffer.c:725:
 				       "set_blocksize: "
+				       "b_count %d, dev %s, block %" BLKOFF_FMT ", from %p\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1052: FILE: fs/buffer.c:972:
+struct buffer_head * getblk(kdev_t dev, blkoff_t block, int size)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1061: FILE: fs/buffer.c:1157:
+struct buffer_head * bread(kdev_t dev, blkoff_t block, int size)

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1130: FILE: fs/ext2/inode.c:506:
+static int ext2_get_block(struct inode *inode, blkoff_t iblock, struct buffer_head *bh_result, int create)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1178: FILE: fs/hfs/hfs.h:498:
+extern int hfs_get_block(struct inode *, blkoff_t, struct buffer_head *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1178: FILE: fs/hfs/hfs.h:498:
+extern int hfs_get_block(struct inode *, blkoff_t, struct buffer_head *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'blkoff_t' should also have an identifier name
#1178: FILE: fs/hfs/hfs.h:498:
+extern int hfs_get_block(struct inode *, blkoff_t, struct buffer_head *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head *' should also have an identifier name
#1178: FILE: fs/hfs/hfs.h:498:
+extern int hfs_get_block(struct inode *, blkoff_t, struct buffer_head *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1178: FILE: fs/hfs/hfs.h:498:
+extern int hfs_get_block(struct inode *, blkoff_t, struct buffer_head *, int);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1203: FILE: fs/isofs/inode.c:880:
+static int isofs_get_block(struct inode *inode, blkoff_t iblock,
 		    struct buffer_head *bh_result, int create)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1211: FILE: fs/isofs/inode.c:954:
+	printk("isofs_get_block: block >= EOF (%"BLKOFF_FMT", %ld)\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1211: FILE: fs/isofs/inode.c:954:
+	printk("isofs_get_block: block >= EOF (%"BLKOFF_FMT", %ld)\n",

WARNING:LONG_LINE_STRING: line length of 103 exceeds 100 columns
#1218: FILE: fs/isofs/inode.c:960:
+	printk("isofs_get_block: ino=%lu block=%" BLKOFF_FMT " firstext=%u sect_size=%u nextino=%lu\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1218: FILE: fs/isofs/inode.c:960:
+	printk("isofs_get_block: ino=%lu block=%" BLKOFF_FMT " firstext=%u sect_size=%u nextino=%lu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1237: FILE: fs/minix/inode.c:354:
+static int minix_get_block(struct inode *inode, blkoff_t block,
 		    struct buffer_head *bh_result, int create)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1248: FILE: fs/minix/itree_common.c:143:
+static inline int get_block(struct inode * inode, blkoff_t block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1249: FILE: fs/minix/itree_common.c:144:
+static inline int get_block(struct inode * inode, blkoff_t block,
 			struct buffer_head *bh_result, int create)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1281: FILE: fs/qnx4/inode.c:207:
+int qnx4_get_block( struct inode *inode, blkoff_t iblock, struct buffer_head *bh, int create )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1281: FILE: fs/qnx4/inode.c:207:
+int qnx4_get_block( struct inode *inode, blkoff_t iblock, struct buffer_head *bh, int create )

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1293: FILE: fs/reiserfs/inode.c:441:
+int reiserfs_bmap (struct inode * inode, blkoff_t block,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1293: FILE: fs/reiserfs/inode.c:441:
+int reiserfs_bmap (struct inode * inode, blkoff_t block,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1302: FILE: fs/reiserfs/inode.c:471:
+static int reiserfs_get_block_create_0 (struct inode * inode, blkoff_t block,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1302: FILE: fs/reiserfs/inode.c:471:
+static int reiserfs_get_block_create_0 (struct inode * inode, blkoff_t block,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1302: FILE: fs/reiserfs/inode.c:471:
+static int reiserfs_get_block_create_0 (struct inode * inode, blkoff_t block,
 			struct buffer_head * bh_result, int create) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1303: FILE: fs/reiserfs/inode.c:472:
+static int reiserfs_get_block_create_0 (struct inode * inode, blkoff_t block,
 			struct buffer_head * bh_result, int create) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1311: FILE: fs/reiserfs/inode.c:562:
+int reiserfs_get_block (struct inode * inode, blkoff_t block,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1311: FILE: fs/reiserfs/inode.c:562:
+int reiserfs_get_block (struct inode * inode, blkoff_t block,

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1323: FILE: fs/sysv/inode.c:790:
+static int sysv_get_block(struct inode *inode, blkoff_t iblock, struct buffer_head *bh_result, int create)

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1344: FILE: fs/udf/inode.c:314:
+static int udf_get_block(struct inode *inode, blkoff_t block, struct buffer_head *bh_result, int create)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1379: FILE: include/linux/blkdev.h:171:
+extern blkoff_t * blk_size[MAX_BLKDEV];

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1390: FILE: include/linux/fs.h:191:
+#define BLKGETSIZE64 _IO(0x12,109)	/* return device size */
                              ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1418: FILE: include/linux/fs.h:1287:
+extern struct buffer_head * get_hash_table(kdev_t, blkoff_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1418: FILE: include/linux/fs.h:1287:
+extern struct buffer_head * get_hash_table(kdev_t, blkoff_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kdev_t' should also have an identifier name
#1418: FILE: include/linux/fs.h:1287:
+extern struct buffer_head * get_hash_table(kdev_t, blkoff_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'blkoff_t' should also have an identifier name
#1418: FILE: include/linux/fs.h:1287:
+extern struct buffer_head * get_hash_table(kdev_t, blkoff_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1418: FILE: include/linux/fs.h:1287:
+extern struct buffer_head * get_hash_table(kdev_t, blkoff_t, int);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1419: FILE: include/linux/fs.h:1288:
+extern struct buffer_head * getblk(kdev_t, blkoff_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1419: FILE: include/linux/fs.h:1288:
+extern struct buffer_head * getblk(kdev_t, blkoff_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kdev_t' should also have an identifier name
#1419: FILE: include/linux/fs.h:1288:
+extern struct buffer_head * getblk(kdev_t, blkoff_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'blkoff_t' should also have an identifier name
#1419: FILE: include/linux/fs.h:1288:
+extern struct buffer_head * getblk(kdev_t, blkoff_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1419: FILE: include/linux/fs.h:1288:
+extern struct buffer_head * getblk(kdev_t, blkoff_t, int);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1428: FILE: include/linux/fs.h:1305:
+extern struct buffer_head * bread(kdev_t, blkoff_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1428: FILE: include/linux/fs.h:1305:
+extern struct buffer_head * bread(kdev_t, blkoff_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kdev_t' should also have an identifier name
#1428: FILE: include/linux/fs.h:1305:
+extern struct buffer_head * bread(kdev_t, blkoff_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'blkoff_t' should also have an identifier name
#1428: FILE: include/linux/fs.h:1305:
+extern struct buffer_head * bread(kdev_t, blkoff_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1428: FILE: include/linux/fs.h:1305:
+extern struct buffer_head * bread(kdev_t, blkoff_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1432: FILE: include/linux/fs.h:1308:
+extern int brw_page(int, struct page *, kdev_t, blkoff_t [], int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1432: FILE: include/linux/fs.h:1308:
+extern int brw_page(int, struct page *, kdev_t, blkoff_t [], int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#1432: FILE: include/linux/fs.h:1308:
+extern int brw_page(int, struct page *, kdev_t, blkoff_t [], int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kdev_t' should also have an identifier name
#1432: FILE: include/linux/fs.h:1308:
+extern int brw_page(int, struct page *, kdev_t, blkoff_t [], int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'blkoff_t []' should also have an identifier name
#1432: FILE: include/linux/fs.h:1308:
+extern int brw_page(int, struct page *, kdev_t, blkoff_t [], int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1432: FILE: include/linux/fs.h:1308:
+extern int brw_page(int, struct page *, kdev_t, blkoff_t [], int);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1435: FILE: include/linux/fs.h:1310:
+typedef int (get_block_t)(struct inode*,blkoff_t,struct buffer_head*,int);
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1435: FILE: include/linux/fs.h:1310:
+typedef int (get_block_t)(struct inode*,blkoff_t,struct buffer_head*,int);
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1435: FILE: include/linux/fs.h:1310:
+typedef int (get_block_t)(struct inode*,blkoff_t,struct buffer_head*,int);
                                                                     ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#1444: FILE: include/linux/fs.h:1322:
+blkoff_t generic_block_bmap(struct address_space *, blkoff_t, get_block_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'blkoff_t' should also have an identifier name
#1444: FILE: include/linux/fs.h:1322:
+blkoff_t generic_block_bmap(struct address_space *, blkoff_t, get_block_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'get_block_t *' should also have an identifier name
#1444: FILE: include/linux/fs.h:1322:
+blkoff_t generic_block_bmap(struct address_space *, blkoff_t, get_block_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1516: FILE: include/linux/msdos_fs.h:244:
+extern int fat_get_block(struct inode *, blkoff_t, struct buffer_head *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1516: FILE: include/linux/msdos_fs.h:244:
+extern int fat_get_block(struct inode *, blkoff_t, struct buffer_head *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'blkoff_t' should also have an identifier name
#1516: FILE: include/linux/msdos_fs.h:244:
+extern int fat_get_block(struct inode *, blkoff_t, struct buffer_head *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head *' should also have an identifier name
#1516: FILE: include/linux/msdos_fs.h:244:
+extern int fat_get_block(struct inode *, blkoff_t, struct buffer_head *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1516: FILE: include/linux/msdos_fs.h:244:
+extern int fat_get_block(struct inode *, blkoff_t, struct buffer_head *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1528: FILE: include/linux/qnx4_fs.h:121:
+extern int qnx4_get_block(struct inode *inode, blkoff_t iblock, struct buffer_head *bh, int create);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1655: FILE: include/linux/reiserfs_fs.h:1800:
+int reiserfs_get_block (struct inode * inode, blkoff_t block,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1655: FILE: include/linux/reiserfs_fs.h:1800:
+int reiserfs_get_block (struct inode * inode, blkoff_t block,

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1669: FILE: include/linux/types.h:9:
+typedef unsigned long long	blkoff_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1672: FILE: include/linux/types.h:12:
+typedef unsigned long		blkoff_t;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1685: FILE: mm/page_io.c:39:
+	blkoff_t zones[PAGE_SIZE/512];
 	                        ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000526324.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 28 errors, 95 warnings, 50 checks, 1335 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000526324.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
