WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#36: FILE: drivers/pcmcia/ds.c:270:
+#define show_one(file_name, object, test)^I ^I^I^I\$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'object' may be better as '(object)' to avoid precedence issues
#36: FILE: drivers/pcmcia/ds.c:270:
+#define show_one(file_name, object, test)	 			\
+static ssize_t show_##file_name 					\
+(struct device *dev, char *buf)						\
+{									\
+	struct pcmcia_device *p_dev = to_pcmcia_dev(dev);		\
+	return p_dev->test ? sprintf (buf, "%x\n", p_dev->object) : 	\
+			sprintf(buf, "unknown\n");			\
+}	 								\
+DEVICE_ATTR(file_name, 0444, show_##file_name, NULL);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'test' may be better as '(test)' to avoid precedence issues
#36: FILE: drivers/pcmcia/ds.c:270:
+#define show_one(file_name, object, test)	 			\
+static ssize_t show_##file_name 					\
+(struct device *dev, char *buf)						\
+{									\
+	struct pcmcia_device *p_dev = to_pcmcia_dev(dev);		\
+	return p_dev->test ? sprintf (buf, "%x\n", p_dev->object) : 	\
+			sprintf(buf, "unknown\n");			\
+}	 								\
+DEVICE_ATTR(file_name, 0444, show_##file_name, NULL);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#36: FILE: drivers/pcmcia/ds.c:270:
+#define show_one(file_name, object, test)	 			\
+static ssize_t show_##file_name 					\
+(struct device *dev, char *buf)						\
+{									\
+	struct pcmcia_device *p_dev = to_pcmcia_dev(dev);		\
+	return p_dev->test ? sprintf (buf, "%x\n", p_dev->object) : 	\
+			sprintf(buf, "unknown\n");			\
+}	 								\
+DEVICE_ATTR(file_name, 0444, show_##file_name, NULL);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#37: FILE: drivers/pcmcia/ds.c:271:
+static ssize_t show_##file_name ^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#41: FILE: drivers/pcmcia/ds.c:275:
+^Ireturn p_dev->test ? sprintf (buf, "%x\n", p_dev->object) : ^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#41: FILE: drivers/pcmcia/ds.c:275:
+	return p_dev->test ? sprintf (buf, "%x\n", p_dev->object) : 	\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#43: FILE: drivers/pcmcia/ds.c:277:
+}^I ^I^I^I^I^I^I^I^I\$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000381693.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 6 warnings, 2 checks, 42 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000381693.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
