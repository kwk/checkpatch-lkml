ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#177: FILE: fs/proc/base.c:603:
+	if (!(page = __get_free_page(GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: fs/proc/base.c:605:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: fs/proc/base.c:607:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#474: FILE: fs/proc/base.c:1315:
+	struct task_struct *task = get_proc_task(inode);
+	if (task) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#609: FILE: fs/proc/base.c:1528:
+^Istruct task_struct *task = get_proc_task(inode); $

WARNING:CONST_STRUCT: struct file_operations should normally be const
#792: FILE: fs/proc/internal.h:45:
+extern struct file_operations proc_maps_operations;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#793: FILE: fs/proc/internal.h:46:
+extern struct file_operations proc_numa_maps_operations;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#794: FILE: fs/proc/internal.h:47:
+extern struct file_operations proc_smaps_operations;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#796: FILE: fs/proc/internal.h:49:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#825: FILE: fs/proc/task_mmu.c:79:
+	struct mm_struct * mm = NULL;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#839: FILE: fs/proc/task_mmu.c:303:
+^Istruct proc_maps_private *priv = m->private; $

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#884: FILE: fs/proc/task_mmu.c:360:
+	m->version = (priv->tail_vma != NULL)? 0: -1UL;
 	                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#884: FILE: fs/proc/task_mmu.c:360:
+	m->version = (priv->tail_vma != NULL)? 0: -1UL;
 	                                        ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "priv->tail_vma"
#884: FILE: fs/proc/task_mmu.c:360:
+	m->version = (priv->tail_vma != NULL)? 0: -1UL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#927: FILE: fs/proc/task_mmu.c:411:
+	int ret = -ENOMEM;
+	priv = kzalloc(sizeof(*priv), GFP_KERNEL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#933: FILE: fs/proc/task_mmu.c:417:
+			struct seq_file *m = file->private_data;
+			m->private = priv;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000101279.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 6 warnings, 2 checks, 860 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000101279.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
