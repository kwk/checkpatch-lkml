WARNING:TYPO_SPELLING: 'useage' may be misspelled - perhaps 'usage'?
#62: 
useage.  The core of the cause is surfing the net.  In Linux I seem
^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: Use a single space after To:
#79: 
To:      <kernelnewbies@nl.linux.org>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Use a single space after Cc:
#82: 
Cc:      <linux-mm@kvack.org>, <linux-kernel@vger.kernel.org>,

WARNING:BAD_SIGN_OFF: Unexpected content after email: '<linux-mm@kvack.org>, <linux-kernel@vger.kernel.org>,', should be: '"<linux-mm@kvack.org>," <linux-kernel@vger.kernel.org>'
#82: 
Cc:      <linux-mm@kvack.org>, <linux-kernel@vger.kernel.org>,

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: mm/page_alloc.c:349:
+        * We'll also help a bit trying to free pages, this$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: mm/page_alloc.c:350:
+        * way statistics will make sure really fast allocators$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: mm/page_alloc.c:351:
+        * are slowed down more than slow allocators and other$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: mm/page_alloc.c:352:
+        * programs in the system shouldn't be impacted as much$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: mm/page_alloc.c:353:
+        * by the hogs.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: mm/page_alloc.c:356:
+       if (gfp_mask & __GFP_WAIT)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#164: FILE: mm/page_alloc.c:356:
+       if (gfp_mask & __GFP_WAIT)
+               try_to_free_pages(gfp_mask);

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: mm/page_alloc.c:357:
+               try_to_free_pages(gfp_mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: mm/page_alloc.c:357:
+               try_to_free_pages(gfp_mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: mm/vmscan.c:53:
+       return (inactive > (zone->size * 2 / 5));$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#184: FILE: mm/vmscan.c:100:
+static inline int page_mapping_notused(struct page * page)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: mm/vmscan.c:102:
+       struct address_space * mapping = page->mapping;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#186: FILE: mm/vmscan.c:102:
+       struct address_space * mapping = page->mapping;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: mm/vmscan.c:104:
+       if (!mapping)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#188: FILE: mm/vmscan.c:104:
+       if (!mapping)
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: mm/vmscan.c:105:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: mm/vmscan.c:105:
+               return 0;$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#192: FILE: mm/vmscan.c:107:
pagecache. */

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#193: FILE: mm/vmscan.c:108:
+       /* This mapping is really large and would monopolise the
+       if (mapping->nrpages > atomic_read(&page_cache_size) / 20);

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: mm/vmscan.c:109:
+               return 0;$

WARNING:TYPO_SPELLING: 'mmaped' may be misspelled - perhaps 'mapped'?
#196: FILE: mm/vmscan.c:111:
+       /* File is mmaped by somebody */
                   ^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: mm/vmscan.c:112:
+       if (mapping->i_mmap || mapping->i_mmap_shared)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#197: FILE: mm/vmscan.c:112:
+       if (mapping->i_mmap || mapping->i_mmap_shared)
+               return 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: mm/vmscan.c:113:
+               return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: mm/vmscan.c:113:
+               return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: mm/vmscan.c:115:
+       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: mm/vmscan.c:847:
+                * Do aging on the pages.  Every time a page is$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: mm/vmscan.c:848:
+                * page->age gets incremented.  If it wasn't$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: mm/vmscan.c:849:
+                * decrement page->age.  The page gets moved to the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: mm/vmscan.c:850:
+                * list when one of the following is true:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: mm/vmscan.c:851:
+                * - the page age reaches 0$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: mm/vmscan.c:852:
+                * - the object the page belongs to isn't in active$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: mm/vmscan.c:853:
+                * - the object the page belongs to is hogging the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: mm/vmscan.c:864:
+                * Don't deactivate pages from zones which have$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: mm/vmscan.c:865:
+                * plenty inactive pages.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: mm/vmscan.c:866:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: mm/vmscan.c:867:
+               if (zone_inactive_plenty(page->zone)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: mm/vmscan.c:867:
+               if (zone_inactive_plenty(page->zone)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#244: FILE: mm/vmscan.c:867:
+               if (zone_inactive_plenty(page->zone)) {
+                       goto skip_page;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#244: FILE: mm/vmscan.c:867:
+               if (zone_inactive_plenty(page->zone)) {
+                       goto skip_page;
+               }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: mm/vmscan.c:868:
+                       goto skip_page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: mm/vmscan.c:868:
+                       goto skip_page;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: mm/vmscan.c:869:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: mm/vmscan.c:869:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: mm/vmscan.c:871:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: mm/vmscan.c:872:
+                * If the buffer cache is large, don't do page aging.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: mm/vmscan.c:873:
+                * If this page really is used, it'll be referenced$

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: mm/vmscan.c:874:
+                * again while on the inactive list.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: mm/vmscan.c:880:
+                * Deactivate pages from files which aren't in use,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: mm/vmscan.c:881:
+                * pages will be referenced while on the inactive$

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: mm/vmscan.c:883:
+               if (page_mapping_notused(page))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: mm/vmscan.c:883:
+               if (page_mapping_notused(page))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#269: FILE: mm/vmscan.c:883:
+               if (page_mapping_notused(page))
                        deactivate_page_nolock(page);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: include/linux/swap.h:264:
+       return num_physpages / 5;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000507396.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 32 errors, 26 warnings, 0 checks, 135 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000507396.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
