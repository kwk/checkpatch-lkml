WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
diff -urN linux-2.5.66/drivers/s390/block/dasd.c linux-2.5.66-s390/drivers/s390/block/dasd.c

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#46: FILE: drivers/s390/block/dasd.c:10:
+ * $Revision: 1.82 $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: drivers/s390/block/dasd.c:184:
+^I * As long as the device is not in state DASD_STATE_NEW we want to $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#158: FILE: drivers/s390/block/dasd.c:425:
 			MESSAGE (KERN_INFO, "giving up on dasd device with "
+				 "devno %04x",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#178: FILE: drivers/s390/block/dasd.c:445:
+	device = (dasd_device_t *) data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#342: FILE: drivers/s390/block/dasd.c:1783:
+struct block_device_operations

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#426: FILE: drivers/s390/block/dasd.c:1923:
+		printk (KERN_WARNING "Can't offline dasd device with open"

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#426: FILE: drivers/s390/block/dasd.c:1923:
+		printk (KERN_WARNING "Can't offline dasd device with open"

WARNING:SPLIT_STRING: quoted string split across lines
#427: FILE: drivers/s390/block/dasd.c:1924:
+		printk (KERN_WARNING "Can't offline dasd device with open"
+			" count = %i.\n",

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#455: FILE: drivers/s390/block/dasd_devmap.c:14:
+ * $Revision: 1.12 $

WARNING:NEW_TYPEDEFS: do not add new typedefs
#472: FILE: drivers/s390/block/dasd_devmap.c:43:
+typedef struct {

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: drivers/s390/block/dasd_devmap.c:46:
+        unsigned int devindex;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: drivers/s390/block/dasd_devmap.c:46:
+        unsigned int devindex;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: drivers/s390/block/dasd_devmap.c:47:
+        unsigned short devno;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: drivers/s390/block/dasd_devmap.c:47:
+        unsigned short devno;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: drivers/s390/block/dasd_devmap.c:48:
+        unsigned short features;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: drivers/s390/block/dasd_devmap.c:48:
+        unsigned short features;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#496: FILE: drivers/s390/block/dasd_devmap.c:308:
+^I^I$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#500: FILE: drivers/s390/block/dasd_devmap.c:312:
+	list_for_each(l, &dasd_devno_hashlists[devno&255]) {
 	                                            ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!devmap"
#577: FILE: drivers/s390/block/dasd_devmap.c:427:
+	if (devmap == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#602: FILE: drivers/s390/block/dasd_devmap.c:452:
+	if (!(devmap = dasd_devmap_from_devno (devno)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#602: FILE: drivers/s390/block/dasd_devmap.c:452:
+	if (!(devmap = dasd_devmap_from_devno (devno)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cdev->dev.driver_data"
#615: FILE: drivers/s390/block/dasd_devmap.c:463:
+	if (cdev->dev.driver_data == NULL) {

CHECK:BRACES: Unbalanced braces around else statement
#621: FILE: drivers/s390/block/dasd_devmap.c:469:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#665: FILE: drivers/s390/block/dasd_devmap.c:502:
+	devmap = dasd_devmap_from_devno (devno);

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#712: FILE: drivers/s390/block/dasd_diag.c:9:
+ * $Revision: 1.28 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#805: FILE: drivers/s390/block/dasd_int.h:9:
+ * $Revision: 1.38 $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dasd_device_t *' should also have an identifier name
#824: FILE: drivers/s390/block/dasd_int.h:314:
+void dasd_put_device_wake(dasd_device_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ccw_device *' should also have an identifier name
#880: FILE: drivers/s390/block/dasd_int.h:476:
+dasd_device_t *dasd_create_device(struct ccw_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dasd_device_t *' should also have an identifier name
#881: FILE: drivers/s390/block/dasd_int.h:477:
+void dasd_delete_device(dasd_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dasd_device_t *' should also have an identifier name
#883: FILE: drivers/s390/block/dasd_int.h:479:
+kdev_t dasd_get_kdev(dasd_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#884: FILE: drivers/s390/block/dasd_int.h:480:
+dasd_device_t *dasd_device_from_devindex(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#888: FILE: drivers/s390/block/dasd_int.h:484:
+int dasd_devno_in_range(int);

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#912: FILE: drivers/s390/block/dasd_proc.c:12:
+ * $Revision: 1.18 $

CHECK:SPACING: No space is necessary after a cast
#927: FILE: drivers/s390/block/dasd_proc.c:62:
+	device = dasd_device_from_devindex((unsigned long) v - 1);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000382460.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 23 warnings, 6 checks, 831 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000382460.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
