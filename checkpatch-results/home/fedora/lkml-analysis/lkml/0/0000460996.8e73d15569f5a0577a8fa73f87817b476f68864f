WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
posting was because the patch was really large.  We'll try this again with 4

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#63: FILE: include/linux/init_task.h:62:
+    numa_restrict:	NEW_NUMA_SET,					\
                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#63: FILE: include/linux/init_task.h:62:
+    numa_restrict:	NEW_NUMA_SET,					\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#64: FILE: include/linux/init_task.h:63:
+    numa_binding:	NEW_NUMA_SET,					\
                 ^

WARNING:INDENTED_LABEL: labels should not be indented
#64: FILE: include/linux/init_task.h:63:
+    numa_binding:	NEW_NUMA_SET,					\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#65: FILE: include/linux/init_task.h:64:
+    numa_launch_policy:	NEW_NUMA_SET,					\
                       ^

WARNING:INDENTED_LABEL: labels should not be indented
#65: FILE: include/linux/init_task.h:64:
+    numa_launch_policy:	NEW_NUMA_SET,					\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#66: FILE: include/linux/init_task.h:65:
+    numa_api_lock:	RW_LOCK_UNLOCKED,				\
                  ^

WARNING:INDENTED_LABEL: labels should not be indented
#66: FILE: include/linux/init_task.h:65:
+    numa_api_lock:	RW_LOCK_UNLOCKED,				\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#89: FILE: include/linux/mmzone.h:169:
+#if defined (CONFIG_DISCONTIGMEM) || defined (CONFIG_NUMA_API)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#89: FILE: include/linux/mmzone.h:169:
+#if defined (CONFIG_DISCONTIGMEM) || defined (CONFIG_NUMA_API)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#104: FILE: include/linux/numa.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#105: FILE: include/linux/numa.h:2:
+ * linux/include/linux/numa.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: include/linux/numa.h:8:
+ * All rights reserved.          $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#125: FILE: include/linux/numa.h:22:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#126: FILE: include/linux/numa.h:23:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#141: FILE: include/linux/numa.h:38:
+typedef unsigned long		numa_bitmap_t;

CHECK:SPACING: No space is necessary after a cast
#142: FILE: include/linux/numa.h:39:
+#define NUMA_BITMAP_NONE	(~((numa_bitmap_t) 0))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: include/linux/numa.h:47:
+#define MPOL_LOOSE^I16  /* Memory must try to be allocated according to binding first, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#151: FILE: include/linux/numa.h:48:
+#define MPOL_LOOSE	16  /* Memory must try to be allocated according to binding first, 
+			       and can fall back to restriction if necessary */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#151: FILE: include/linux/numa.h:48:
+			       and can fall back to restriction if necessary */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#153: FILE: include/linux/numa.h:50:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#154: FILE: include/linux/numa.h:51:
+typedef struct numa_list {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#159: FILE: include/linux/numa.h:56:
+typedef struct numa_set {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#164: FILE: include/linux/numa.h:61:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#166: FILE: include/linux/numa.h:63:
+#define numa_set_init(x) do { (x)->cpus.list = NUMA_BITMAP_NONE;\
+				(x)->memblks.list = NUMA_BITMAP_NONE;\
+				(x)->cpus.behavior = CPU_BIND_STRICT;\
+				(x)->memblks.behavior = MPOL_STRICT; } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#169: FILE: include/linux/numa.h:66:
+				(x)->memblks.behavior = MPOL_STRICT; } while(0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#169: FILE: include/linux/numa.h:66:
+				(x)->memblks.behavior = MPOL_STRICT; } while(0)

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#175: FILE: include/linux/numa.h:72:
+/* Tests whether a numa_set_t represents an empty restriction (ie: all 1's.  All cpus/memblks allowed.) */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#176: FILE: include/linux/numa.h:73:
+#define null_restrict(x) (((x)->cpus.list == NUMA_BITMAP_NONE) && \
+				((x)->memblks.list == NUMA_BITMAP_NONE))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: include/linux/sched.h:295:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000460996.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 15 warnings, 5 checks, 161 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000460996.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
