CHECK:SPACING: No space is necessary after a cast
#65: FILE: include/asm-arm/current.h:7:
+static inline struct task_struct *get_current(void) __attribute_const__;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#77: FILE: include/asm-arm/thread_info.h:79:
+static inline struct thread_info *current_thread_info(void) __const_fn;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: include/asm-i386/byteorder.h:15:
+static __inline__ __attribute_const__ __u32 ___arch__swab32(__u32 x) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#91: FILE: include/asm-i386/byteorder.h:15:
+static __inline__ __attribute_const__ __u32 ___arch__swab32(__u32 x) 

WARNING:INLINE: plain inline is preferred over __inline__
#100: FILE: include/asm-i386/byteorder.h:31:
+static __inline__ __attribute_const__ __u16 ___arch__swab16(__u16 x)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: include/asm-i386/byteorder.h:40:
+static inline __attribute_const__ __u64 ___arch__swab64(__u64 val) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: include/asm-ia64/byteorder.h:12:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: include/asm-ia64/byteorder.h:12:
+  $

WARNING:INLINE: plain inline is preferred over __inline__
#124: FILE: include/asm-ia64/byteorder.h:13:
+static __inline__ __attribute_const__ __u64

WARNING:INLINE: plain inline is preferred over __inline__
#133: FILE: include/asm-ia64/byteorder.h:22:
+static __inline__ __attribute_const__ __u32

WARNING:INLINE: plain inline is preferred over __inline__
#140: FILE: include/asm-ia64/byteorder.h:28:
+static __inline__ __attribute_const__ __u16

WARNING:INLINE: plain inline is preferred over __inline__
#154: FILE: include/asm-m68k/byteorder.h:10:
+static __inline__ __attribute_const__ __u32 ___arch__swab32(__u32 val)

WARNING:INLINE: plain inline is preferred over __inline__
#166: FILE: include/asm-parisc/byteorder.h:8:
+static __inline__ __attribute_const__ __u16 ___arch__swab16(__u16 x)

WARNING:INLINE: plain inline is preferred over __inline__
#175: FILE: include/asm-parisc/byteorder.h:17:
+static __inline__ __attribute_const__ __u32 ___arch__swab24(__u32 x)

WARNING:INLINE: plain inline is preferred over __inline__
#186: FILE: include/asm-parisc/byteorder.h:29:
+static __inline__ __attribute_const__ __u32 ___arch__swab32(__u32 x)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#195: FILE: include/asm-parisc/byteorder.h:52:
+static __inline__ __attribute_const__ __u64 ___arch__swab64(__u64 x) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:INLINE: plain inline is preferred over __inline__
#195: FILE: include/asm-parisc/byteorder.h:52:
+static __inline__ __attribute_const__ __u64 ___arch__swab64(__u64 x) {

WARNING:INLINE: plain inline is preferred over __inline__
#204: FILE: include/asm-parisc/byteorder.h:65:
+static __inline__ __attribute_const__ __u64 ___arch__swab64(__u64 x)

WARNING:INLINE: plain inline is preferred over __inline__
#228: FILE: include/asm-ppc/byteorder.h:38:
+static __inline__ __attribute_const__ __u16 ___arch__swab16(__u16 value)

WARNING:INLINE: plain inline is preferred over __inline__
#237: FILE: include/asm-ppc/byteorder.h:46:
+static __inline__ __attribute_const__ __u32 ___arch__swab32(__u32 value)

WARNING:INLINE: plain inline is preferred over __inline__
#258: FILE: include/asm-ppc64/byteorder.h:45:
+static __inline__ __attribute_const__ __u16 ___arch__swab16(__u16 value)

WARNING:INLINE: plain inline is preferred over __inline__
#267: FILE: include/asm-ppc64/byteorder.h:55:
+static __inline__ __attribute_const__ __u32 ___arch__swab32(__u32 value)

WARNING:INLINE: plain inline is preferred over __inline__
#276: FILE: include/asm-ppc64/byteorder.h:67:
+static __inline__ __attribute_const__ __u64 ___arch__swab64(__u64 value)

WARNING:INLINE: plain inline is preferred over __inline__
#291: FILE: include/asm-s390/byteorder.h:19:
+static __inline__ __attribute_const__ __u64 ___arch__swab64p(__u64 *x)

WARNING:INLINE: plain inline is preferred over __inline__
#300: FILE: include/asm-s390/byteorder.h:29:
+static __inline__ __attribute_const__ __u64 ___arch__swab64(__u64 x)

WARNING:INLINE: plain inline is preferred over __inline__
#309: FILE: include/asm-s390/byteorder.h:45:
+static __inline__ __attribute_const__ __u32 ___arch__swab32p(__u32 *x)

WARNING:INLINE: plain inline is preferred over __inline__
#318: FILE: include/asm-s390/byteorder.h:63:
+static __inline__ __attribute_const__ __u32 ___arch__swab32(__u32 x)

WARNING:INLINE: plain inline is preferred over __inline__
#327: FILE: include/asm-s390/byteorder.h:82:
+static __inline__ __attribute_const__ __u16 ___arch__swab16p(__u16 *x)

WARNING:INLINE: plain inline is preferred over __inline__
#336: FILE: include/asm-s390/byteorder.h:98:
+static __inline__ __attribute_const__ __u16 ___arch__swab16(__u16 x)

WARNING:INLINE: plain inline is preferred over __inline__
#350: FILE: include/asm-sh/byteorder.h:11:
+static __inline__ __attribute_const__ __u32 ___arch__swab32(__u32 x)

WARNING:INLINE: plain inline is preferred over __inline__
#359: FILE: include/asm-sh/byteorder.h:21:
+static __inline__ __attribute_const__ __u16 ___arch__swab16(__u16 x)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#373: FILE: include/asm-v850/byteorder.h:23:
+static __inline__ __attribute_const__ __u32 ___arch__swab32 (__u32 word)

WARNING:INLINE: plain inline is preferred over __inline__
#373: FILE: include/asm-v850/byteorder.h:23:
+static __inline__ __attribute_const__ __u32 ___arch__swab32 (__u32 word)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#381: FILE: include/asm-v850/byteorder.h:30:
+static __inline__ __attribute_const__ __u16 ___arch__swab16 (__u16 half_word)

WARNING:INLINE: plain inline is preferred over __inline__
#381: FILE: include/asm-v850/byteorder.h:30:
+static __inline__ __attribute_const__ __u16 ___arch__swab16 (__u16 half_word)

WARNING:INLINE: plain inline is preferred over __inline__
#395: FILE: include/asm-x86_64/byteorder.h:10:
+static __inline__ __attribute_const__ __u64 ___arch__swab64(__u64 x)

WARNING:INLINE: plain inline is preferred over __inline__
#402: FILE: include/asm-x86_64/byteorder.h:16:
+static __inline__ __attribute_const__ __u32 ___arch__swab32(__u32 x)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#417: FILE: include/linux/compiler.h:83:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#438: FILE: include/linux/byteorder/swab.h:133:
+static __inline__ __attribute_const__ __u16 __fswab16(__u16 x)

WARNING:INLINE: plain inline is preferred over __inline__
#447: FILE: include/linux/byteorder/swab.h:146:
+static __inline__ __attribute_const__ __u32 __fswab32(__u32 x)

WARNING:INLINE: plain inline is preferred over __inline__
#456: FILE: include/linux/byteorder/swab.h:160:
+static __inline__ __attribute_const__ __u64 __fswab64(__u64 x)

WARNING:INLINE: plain inline is preferred over __inline__
#477: FILE: include/linux/byteorder/swabb.h:97:
+static __inline__ __attribute_const__ __u32 __fswahw32(__u32 x)

WARNING:INLINE: plain inline is preferred over __inline__
#486: FILE: include/linux/byteorder/swabb.h:111:
+static __inline__ __attribute_const__ __u32 __fswahb32(__u32 x)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#499: FILE: include/linux/compiler-gcc2.h:26:
+/* The attribute `const' is not implemented in GCC versions earlier than
+   2.5. We are not interested in elder compilers. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#499: FILE: include/linux/compiler-gcc2.h:26:
+   2.5. We are not interested in elder compilers. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#501: FILE: include/linux/compiler-gcc2.h:28:
+/* Basically this is just slightly more strict class than the `pure'
+   attribute */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#501: FILE: include/linux/compiler-gcc2.h:28:
+   attribute */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#502: FILE: include/linux/compiler-gcc2.h:29:
+#define __attribute_const__ __attribute__ ((__const__))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __attribute_const__ over __attribute__((__const__))
#502: FILE: include/linux/compiler-gcc2.h:29:
+#define __attribute_const__ __attribute__ ((__const__))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#510: FILE: include/linux/compiler-gcc3.h:23:
+#define __attribute_const__ __attribute__ ((__const__))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __attribute_const__ over __attribute__((__const__))
#510: FILE: include/linux/compiler-gcc3.h:23:
+#define __attribute_const__ __attribute__ ((__const__))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000320203.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 42 warnings, 3 checks, 365 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000320203.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
