WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
As discussed on lkml before; the patch with the infrastructure to deprecate unused symbols

CHECK:LINE_SPACING: Please don't use multiple blank lines
#132: FILE: include/linux/module.h:207:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#135: FILE: include/linux/module.h:210:
+#define EXPORT_UNUSED_SYMBOL_GPL(sym) __EXPORT_SYMBOL(sym, "_unused_gpl")

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#175: FILE: kernel/module.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#183: FILE: kernel/module.c:123:
+extern const struct kernel_symbol __start___ksymtab_unused[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#184: FILE: kernel/module.c:124:
+extern const struct kernel_symbol __stop___ksymtab_unused[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#185: FILE: kernel/module.c:125:
+extern const struct kernel_symbol __start___ksymtab_unused_gpl[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#186: FILE: kernel/module.c:126:
+extern const struct kernel_symbol __stop___ksymtab_unused_gpl[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#187: FILE: kernel/module.c:127:
+extern const struct kernel_symbol __start___ksymtab_gpl_future[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#188: FILE: kernel/module.c:128:
+extern const struct kernel_symbol __stop___ksymtab_gpl_future[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#192: FILE: kernel/module.c:132:
+extern const unsigned long __start___kcrctab_unused[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#193: FILE: kernel/module.c:133:
+extern const unsigned long __start___kcrctab_unused_gpl[];

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#203: FILE: kernel/module.c:155:
+	printk(KERN_WARNING "Symbol %s is marked as UNUSED, "

WARNING:SPLIT_STRING: quoted string split across lines
#204: FILE: kernel/module.c:156:
+	printk(KERN_WARNING "Symbol %s is marked as UNUSED, "
+		"however this module is using it. \n", name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#204: FILE: kernel/module.c:156:
+		"however this module is using it. \n", name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#205: FILE: kernel/module.c:157:
+	printk(KERN_WARNING "This symbol will go away in the future.\n");

WARNING:TYPO_SPELLING: 'evalute' may be misspelled - perhaps 'evaluate'?
#206: FILE: kernel/module.c:158:
+	printk(KERN_WARNING "Please evalute if this is the right api to use, "
 	                            ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#206: FILE: kernel/module.c:158:
+	printk(KERN_WARNING "Please evalute if this is the right api to use, "

WARNING:SPLIT_STRING: quoted string split across lines
#207: FILE: kernel/module.c:159:
+	printk(KERN_WARNING "Please evalute if this is the right api to use, "
+		"and if it really is, submit a report the linux kernel "

WARNING:SPLIT_STRING: quoted string split across lines
#208: FILE: kernel/module.c:160:
+		"and if it really is, submit a report the linux kernel "
+		"mailinglist together with submitting your code for "

WARNING:SPLIT_STRING: quoted string split across lines
#209: FILE: kernel/module.c:161:
+		"mailinglist together with submitting your code for "
+		"inclusion.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: kernel/module.c:207:
+	ks = lookup_symbol(name, __start___ksymtab_unused,
+				 __stop___ksymtab_unused);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: kernel/module.c:217:
+		ks = lookup_symbol(name, __start___ksymtab_unused_gpl,
+				 __stop___ksymtab_unused_gpl);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000080703.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 20 warnings, 3 checks, 251 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000080703.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
