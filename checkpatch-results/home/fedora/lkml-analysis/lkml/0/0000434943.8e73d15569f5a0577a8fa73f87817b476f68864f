WARNING:TYPO_SPELLING: 'attibute' may be misspelled - perhaps 'attribute'?
#28: 
revalidate the inodes for proper NFS attibute caching.
                                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'likelyhood' may be misspelled - perhaps 'likelihood'?
#32: 
likelyhood that these values may not be current and there is a
^^^^^^^^^^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#48: FILE: fs-fixed/open.c:21:
(S_ISCHR(m)||S_ISBLK(m)||S_ISFIFO(m)||S_ISSOCK(m))

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#50: FILE: fs-fixed/open.c:23:
+extern int do_revalidate(struct dentry *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#50: FILE: fs-fixed/open.c:23:
+extern int do_revalidate(struct dentry *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#58: FILE: fs-fixed/open.c:612:
  if (!error) {
+  error = do_revalidate(nd.dentry);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#60: FILE: fs-fixed/open.c:613:
+  error = do_revalidate(nd.dentry);
                         ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: fs-fixed/open.c:613:
+  error = do_revalidate(nd.dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: fs-fixed/open.c:614:
+  if (!error)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#61: FILE: fs-fixed/open.c:614:
+  if (!error)
+   error = chown_common(nd.dentry, user, group);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#62: FILE: fs-fixed/open.c:615:
+   error = chown_common(nd.dentry, user, group);
                         ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: fs-fixed/open.c:615:
+   error = chown_common(nd.dentry, user, group);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#69: FILE: fs-fixed/open.c:627:
  if (!error) {
+  error = do_revalidate(nd.dentry);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#71: FILE: fs-fixed/open.c:628:
+  error = do_revalidate(nd.dentry);
                         ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: fs-fixed/open.c:628:
+  error = do_revalidate(nd.dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: fs-fixed/open.c:629:
+  if (!error)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#72: FILE: fs-fixed/open.c:629:
+  if (!error)
+   error = chown_common(nd.dentry, user, group);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#73: FILE: fs-fixed/open.c:630:
+   error = chown_common(nd.dentry, user, group);
                         ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: fs-fixed/open.c:630:
+   error = chown_common(nd.dentry, user, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: fs-fixed/open.c:642:
+ if(!do_revalidate(file->f_dentry))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#88: FILE: fs-fixed/open.c:642:
+ if(!do_revalidate(file->f_dentry))
+  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#88: FILE: fs-fixed/open.c:642:
+ if(!do_revalidate(file->f_dentry))
+  {

ERROR:SPACING: space required before the open parenthesis '('
#88: FILE: fs-fixed/open.c:642:
+ if(!do_revalidate(file->f_dentry))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: fs-fixed/open.c:643:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: fs-fixed/open.c:644:
+  file = fget(fd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: fs-fixed/open.c:645:
+  if (file) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#91: FILE: fs-fixed/open.c:645:
+  if (file) {
+   error = chown_common(file->f_dentry, user, group);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: fs-fixed/open.c:646:
+   error = chown_common(file->f_dentry, user, group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: fs-fixed/open.c:647:
+   fput(file);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: fs-fixed/open.c:648:
+   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: fs-fixed/open.c:649:
+  }$

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#106: FILE: fs-fixed/stat.c:16:
+extern int do_revalidate(struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#106: FILE: fs-fixed/stat.c:16:
+extern int do_revalidate(struct dentry *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000434943.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 32 warnings, 0 checks, 65 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000434943.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
