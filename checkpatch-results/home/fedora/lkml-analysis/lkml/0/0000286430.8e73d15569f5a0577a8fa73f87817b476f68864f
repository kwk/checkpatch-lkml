WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#57: FILE: char/agp/sis-agp.c:16:
+static int __devinitdata agp_sis_force_delay = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#57: FILE: char/agp/sis-agp.c:16:
+static int __devinitdata agp_sis_force_delay = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:MISPLACED_INIT: __devinitdata should be placed after agp_sis_force_delay
#57: FILE: char/agp/sis-agp.c:16:
+static int __devinitdata agp_sis_force_delay = 0;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#58: FILE: char/agp/sis-agp.c:17:
+static int __devinitdata agp_sis_agp_spec = -1;

WARNING:MISPLACED_INIT: __devinitdata should be placed after agp_sis_agp_spec
#58: FILE: char/agp/sis-agp.c:17:
+static int __devinitdata agp_sis_agp_spec = -1;

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#64: FILE: char/agp/sis-agp.c:69:
(previous_size->size_value & ~(0x03)));

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: char/agp/sis-agp.c:98:
+               /*$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: char/agp/sis-agp.c:99:
+                * Weird: on some sis chipsets any$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: char/agp/sis-agp.c:100:
+                * command register triggers a 5ms$

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: char/agp/sis-agp.c:101:
+                * cannot be configured$

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: char/agp/sis-agp.c:102:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: char/agp/sis-agp.c:103:
+               if (device->device ==$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: char/agp/sis-agp.c:103:
+               if (device->device ==$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#94: FILE: char/agp/sis-agp.c:103:
+               if (device->device ==
[...]
+                       printk(KERN_INFO PFX "SiS

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: char/agp/sis-agp.c:104:
+                       printk(KERN_INFO PFX "SiS$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: char/agp/sis-agp.c:104:
+                       printk(KERN_INFO PFX "SiS$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#96: FILE: char/agp/sis-agp.c:104:
+                       printk(KERN_INFO PFX "SiS

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#109: FILE: char/agp/sis-agp.c:228:
+static int sis_broken_chipsets[] __devinitdata = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: char/agp/sis-agp.c:229:
+       PCI_DEVICE_ID_SI_648,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: char/agp/sis-agp.c:230:
+       PCI_DEVICE_ID_SI_746,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: char/agp/sis-agp.c:231:
+       0 // terminator$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#115: FILE: char/agp/sis-agp.c:234:
 static void __devinit sis_get_driver(struct

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: char/agp/sis-agp.c:244:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: char/agp/sis-agp.c:246:
+       for(i=0; sis_broken_chipsets[i]!=0; ++i)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 0)
#144: FILE: char/agp/sis-agp.c:246:
+       for(i=0; sis_broken_chipsets[i]!=0; ++i)
[...]
if(bridge->dev->device==sis_broken_chipsets[i])

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#144: FILE: char/agp/sis-agp.c:246:
+       for(i=0; sis_broken_chipsets[i]!=0; ++i)
             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#144: FILE: char/agp/sis-agp.c:246:
+       for(i=0; sis_broken_chipsets[i]!=0; ++i)
                                       ^

ERROR:SPACING: space required before the open parenthesis '('
#144: FILE: char/agp/sis-agp.c:246:
+       for(i=0; sis_broken_chipsets[i]!=0; ++i)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: char/agp/sis-agp.c:247:
+              $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: char/agp/sis-agp.c:247:
+              $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: char/agp/sis-agp.c:247:
+              $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 23)
#146: FILE: char/agp/sis-agp.c:247:
if(bridge->dev->device==sis_broken_chipsets[i])
+                       break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: char/agp/sis-agp.c:248:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: char/agp/sis-agp.c:248:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: char/agp/sis-agp.c:250:
+       if(sis_broken_chipsets[i] ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 0)
#149: FILE: char/agp/sis-agp.c:250:
+       if(sis_broken_chipsets[i] ||
[...]
sis_driver.agp_enable=sis_delayed_enable;

ERROR:SPACING: space required before the open parenthesis '('
#149: FILE: char/agp/sis-agp.c:250:
+       if(sis_broken_chipsets[i] ||

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: char/agp/sis-agp.c:251:
+              $

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: char/agp/sis-agp.c:251:
+              $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: char/agp/sis-agp.c:251:
+       if(sis_broken_chipsets[i] ||
+              

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: char/agp/sis-agp.c:251:
+              $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: char/agp/sis-agp.c:251:
+       if(sis_broken_chipsets[i] ||
sis_driver.agp_enable=sis_delayed_enable;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#153: FILE: char/agp/sis-agp.c:252:
+              
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: char/agp/sis-agp.c:255:
+       if ((agp_bridge->major_version == 3 &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: char/agp/sis-agp.c:256:
+            && agp_sis_agp_spec!=0) ||$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#158: FILE: char/agp/sis-agp.c:256:
+       if ((agp_bridge->major_version == 3 &&
+            && agp_sis_agp_spec!=0) ||

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: char/agp/sis-agp.c:256:
+            && agp_sis_agp_spec!=0) ||$

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#158: FILE: char/agp/sis-agp.c:256:
+            && agp_sis_agp_spec!=0) ||
                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: char/agp/sis-agp.c:256:
+       if ((agp_bridge->major_version == 3 &&
agp_sis_agp_spec==1) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: char/agp/sis-agp.c:257:
+               sis_driver.aperture_sizes =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: char/agp/sis-agp.c:257:
+               sis_driver.aperture_sizes =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: char/agp/sis-agp.c:258:
+               sis_driver.size_type = U16_APER_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: char/agp/sis-agp.c:258:
+               sis_driver.size_type = U16_APER_SIZE;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#181: FILE: char/agp/sis-agp.c:346:
+MODULE_PARM(agp_sis_force_delay,"i");
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#182: FILE: char/agp/sis-agp.c:347:
+MODULE_PARM_DESC(agp_sis_force_delay,"forces sis
                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#185: FILE: char/agp/sis-agp.c:349:
+MODULE_PARM_DESC(agp_sis_agp_spec,"0=force sis init,
                                     ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286430.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 27 warnings, 5 checks, 117 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286430.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
