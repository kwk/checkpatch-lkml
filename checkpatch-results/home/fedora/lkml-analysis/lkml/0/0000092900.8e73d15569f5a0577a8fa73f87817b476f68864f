ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#50: FILE: drivers/media/video/em28xx/em28xx-video.c:1015:
+	if ((hscale = (((unsigned long)maxw) << 12) / width - 4096L) >= 0x4000)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#60: FILE: drivers/media/video/em28xx/em28xx-video.c:1020:
+	if ((vscale = (((unsigned long)maxh) << 12) / height - 4096L) >= 0x4000)

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#78: FILE: drivers/media/video/em28xx/em28xx-video.c:1035:
+		"VIDIOC_TRY_FMT" :"VIDIOC_S_FMT",
 		                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: drivers/media/video/em28xx/em28xx-video.c:1098:
+		ret = v4l2_video_std_construct(e, tvnorms[e->index].id,
+						tvnorms[e->index].name);

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#223: FILE: drivers/media/video/em28xx/em28xx-video.c:1146:
+		static const char *iname[] = {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#238: FILE: drivers/media/video/em28xx/em28xx-video.c:1161:
+		if (0 == INPUT(n)->type)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#244: FILE: drivers/media/video/em28xx/em28xx-video.c:1167:
+		if ((EM28XX_VMUX_TELEVISION == INPUT(n)->type) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: drivers/media/video/em28xx/em28xx-video.c:1168:
+		if ((EM28XX_VMUX_TELEVISION == INPUT(n)->type) ||
+			(EM28XX_VMUX_CABLE == INPUT(n)->type))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#245: FILE: drivers/media/video/em28xx/em28xx-video.c:1168:
+			(EM28XX_VMUX_CABLE == INPUT(n)->type))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#280: FILE: drivers/media/video/em28xx/em28xx-video.c:1187:
+		if (0 == INPUT(*index)->type)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#316: FILE: drivers/media/video/em28xx/em28xx-video.c:1206:
+		if (index == 0) {
[...]
+		} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#374: FILE: drivers/media/video/em28xx/em28xx-video.c:1229:
+		int i, id=qc->id;
 		         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#376: FILE: drivers/media/video/em28xx/em28xx-video.c:1231:
+		memset(qc,0,sizeof(*qc));
 		         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#376: FILE: drivers/media/video/em28xx/em28xx-video.c:1231:
+		memset(qc,0,sizeof(*qc));
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#377: FILE: drivers/media/video/em28xx/em28xx-video.c:1232:
+		qc->id=id;
 		      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around em28xx_qctrl[i]
#382: FILE: drivers/media/video/em28xx/em28xx-video.c:1237:
+					memcpy(qc, &(em28xx_qctrl[i]),

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#383: FILE: drivers/media/video/em28xx/em28xx-video.c:1238:
+					memcpy(qc, &(em28xx_qctrl[i]),
+					sizeof(*qc));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#391: FILE: drivers/media/video/em28xx/em28xx-video.c:1244:
+			em28xx_i2c_call_clients(dev,cmd,qc);
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#391: FILE: drivers/media/video/em28xx/em28xx-video.c:1244:
+			em28xx_i2c_call_clients(dev,cmd,qc);
 			                               ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around saa711x_qctrl[i]
#399: FILE: drivers/media/video/em28xx/em28xx-video.c:1252:
+				memcpy(qc, &(saa711x_qctrl[i]),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: drivers/media/video/em28xx/em28xx-video.c:1253:
+				memcpy(qc, &(saa711x_qctrl[i]),
+					sizeof(*qc));

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#425: FILE: drivers/media/video/em28xx/em28xx-video.c:1263:
+		int retval=-EINVAL;
 		          ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#425: FILE: drivers/media/video/em28xx/em28xx-video.c:1263:
+		int retval=-EINVAL;
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#428: FILE: drivers/media/video/em28xx/em28xx-video.c:1266:
+			retval=em28xx_get_ctrl(dev, ctrl);
 			      ^

ERROR:SPACING: spaces required around that '==' (ctx:VxO)
#429: FILE: drivers/media/video/em28xx/em28xx-video.c:1267:
+		if (retval==-EINVAL) {
 		          ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#429: FILE: drivers/media/video/em28xx/em28xx-video.c:1267:
+		if (retval==-EINVAL) {
 		            ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#429: FILE: drivers/media/video/em28xx/em28xx-video.c:1267:
+		if (retval==-EINVAL) {
[...]
+		} else return retval;
[...]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#431: FILE: drivers/media/video/em28xx/em28xx-video.c:1269:
+				em28xx_i2c_call_clients(dev,cmd,arg);
 				                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#431: FILE: drivers/media/video/em28xx/em28xx-video.c:1269:
+				em28xx_i2c_call_clients(dev,cmd,arg);
 				                               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#436: FILE: drivers/media/video/em28xx/em28xx-video.c:1274:
+		} else return retval;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open brace '{'
#457: FILE: drivers/media/video/em28xx/em28xx-video.c:1281:
+		if (!dev->has_msp34xx){

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#462: FILE: drivers/media/video/em28xx/em28xx-video.c:1286:
+					em28xx_qctrl[i].minimum
+					|| ctrl->value >

ERROR:SPACING: space required after that ',' (ctx:VxV)
#484: FILE: drivers/media/video/em28xx/em28xx-video.c:1295:
+			em28xx_i2c_call_clients(dev,cmd,arg);
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#484: FILE: drivers/media/video/em28xx/em28xx-video.c:1295:
+			em28xx_i2c_call_clients(dev,cmd,arg);
 			                               ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#491: FILE: drivers/media/video/em28xx/em28xx-video.c:1302:
+					em28xx_qctrl[i].minimum
+					|| ctrl->value >

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#510: FILE: drivers/media/video/em28xx/em28xx-video.c:1312:
+					saa711x_qctrl[i].minimum
+					|| ctrl->value >

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#534: FILE: drivers/media/video/em28xx/em28xx-video.c:1328:
+		if (0 != t->index)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#587: FILE: drivers/media/video/em28xx/em28xx-video.c:1355:
+		if (0 != t->index)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#646: FILE: drivers/media/video/em28xx/em28xx-video.c:1389:
+		if (0 != f->tuner)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#655: FILE: drivers/media/video/em28xx/em28xx-video.c:1392:
+		if (V4L2_TUNER_ANALOG_TV != f->type)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#702: FILE: drivers/media/video/em28xx/em28xx-video.c:1421:
+		if (*type != V4L2_BUF_TYPE_VIDEO_CAPTURE
+			|| dev->io != IO_MMAP)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#739: FILE: drivers/media/video/em28xx/em28xx-video.c:1439:
+		if (*type != V4L2_BUF_TYPE_VIDEO_CAPTURE
+			|| dev->io != IO_MMAP)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#744: FILE: drivers/media/video/em28xx/em28xx-video.c:1443:
+			em28xx_videodbg ("VIDIOC_STREAMOFF: interrupting stream\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#745: FILE: drivers/media/video/em28xx/em28xx-video.c:1444:
+			if ((ret = em28xx_stream_interrupt(dev)))

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#781: FILE: drivers/media/video/em28xx/em28xx-video.c:1483:
+		strlcpy(cap->driver, "em28xx", sizeof(cap->driver));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#782: FILE: drivers/media/video/em28xx/em28xx-video.c:1484:
+		strlcpy(cap->card, em28xx_boards[dev->model].name,

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#784: FILE: drivers/media/video/em28xx/em28xx-video.c:1486:
+		strlcpy(cap->bus_info, dev->udev->dev.bus_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#849: FILE: drivers/media/video/em28xx/em28xx-video.c:1526:
+		if (rb->type != V4L2_BUF_TYPE_VIDEO_CAPTURE ||
+			rb->memory != V4L2_MEMORY_MMAP)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#858: FILE: drivers/media/video/em28xx/em28xx-video.c:1530:
+			em28xx_videodbg ("method is set to read;"

WARNING:SPLIT_STRING: quoted string split across lines
#860: FILE: drivers/media/video/em28xx/em28xx-video.c:1532:
+				" close and open the device again to"
+				" choose the mmap I/O method\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LONG_LINE_STRING: line length of 111 exceeds 100 columns
#870: FILE: drivers/media/video/em28xx/em28xx-video.c:1538:
+				em28xx_videodbg ("VIDIOC_REQBUFS failed; previous buffers are still mapped\n");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#870: FILE: drivers/media/video/em28xx/em28xx-video.c:1538:
+				em28xx_videodbg ("VIDIOC_REQBUFS failed; previous buffers are still mapped\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#889: FILE: drivers/media/video/em28xx/em28xx-video.c:1544:
+			if ((ret = em28xx_stream_interrupt(dev)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#902: FILE: drivers/media/video/em28xx/em28xx-video.c:1557:
+		em28xx_videodbg ("VIDIOC_REQBUFS: setting io method to mmap: num bufs %i\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#903: FILE: drivers/media/video/em28xx/em28xx-video.c:1558:
+		em28xx_videodbg ("VIDIOC_REQBUFS: setting io method to mmap: num bufs %i\n",
+						rb->count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#917: FILE: drivers/media/video/em28xx/em28xx-video.c:1567:
+		if (b->type != V4L2_BUF_TYPE_VIDEO_CAPTURE ||
+			b->index >= dev->num_frames || dev->io != IO_MMAP)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#931: FILE: drivers/media/video/em28xx/em28xx-video.c:1572:
+		if (dev->frame[b->index].vma_use_count) {
+			b->flags |= V4L2_BUF_FLAG_MAPPED;
 		}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#953: FILE: drivers/media/video/em28xx/em28xx-video.c:1587:
+		if (b->type != V4L2_BUF_TYPE_VIDEO_CAPTURE ||
+			b->index >= dev->num_frames || dev->io != IO_MMAP) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#961: FILE: drivers/media/video/em28xx/em28xx-video.c:1591:
+		if (dev->frame[b->index].state != F_UNUSED) {
+			return -EAGAIN;
+		}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#974: FILE: drivers/media/video/em28xx/em28xx-video.c:1599:
+		list_add_tail(&dev->frame[b->index].frame,
+				&dev->inqueue);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#997: FILE: drivers/media/video/em28xx/em28xx-video.c:1612:
+		if (b->type != V4L2_BUF_TYPE_VIDEO_CAPTURE
+			|| dev->io != IO_MMAP)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1036: FILE: drivers/media/video/em28xx/em28xx-video.c:1632:
+		f = list_entry(dev->outqueue.next,
+				struct em28xx_frame_t, frame);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092900.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 21 warnings, 19 checks, 1008 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092900.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
