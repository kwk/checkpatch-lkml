WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
This patch converts kcalloc(1, ...) calls to use the new kzalloc() function.

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#193: FILE: sound/core/control.c:198:
+	kctl = kzalloc(sizeof(*kctl) + sizeof(snd_kcontrol_volatile_t) * control->count, GFP_KERNEL);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'ue' may be misspelled - perhaps 'use'?
#211: FILE: sound/core/control.c:932:
+	ue = kzalloc(sizeof(struct user_element) + private_size, GFP_KERNEL);
 	^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ue)...) over kzalloc(sizeof(struct user_element)...)
#211: FILE: sound/core/control.c:932:
+	ue = kzalloc(sizeof(struct user_element) + private_size, GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#523: FILE: sound/core/rawmidi.c:104:
+	if ((runtime = kzalloc(sizeof(*runtime), GFP_KERNEL)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#598: FILE: sound/core/seq/oss/seq_oss_init.c:196:
+	if ((dp = kzalloc(sizeof(*dp), GFP_KERNEL)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#622: FILE: sound/core/seq/oss/seq_oss_midi.c:175:
+	if ((mdev = kzalloc(sizeof(*mdev), GFP_KERNEL)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#635: FILE: sound/core/seq/oss/seq_oss_readq.c:49:
+	if ((q = kzalloc(sizeof(*q), GFP_KERNEL)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#648: FILE: sound/core/seq/oss/seq_oss_synth.c:106:
+	if ((rec = kzalloc(sizeof(*rec), GFP_KERNEL)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#683: FILE: sound/core/seq/oss/seq_oss_writeq.c:41:
+	if ((q = kzalloc(sizeof(*q), GFP_KERNEL)) == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#709: FILE: sound/core/seq/seq_device.c:203:
+	dev = kzalloc(sizeof(*dev)*2 + argsize, GFP_KERNEL);
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#722: FILE: sound/core/seq/seq_dummy.c:156:
+	if ((rec = kzalloc(sizeof(*rec), GFP_KERNEL)) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1052: FILE: sound/drivers/serial-u16550.c:782:
+	if ((uart = kzalloc(sizeof(*uart), GFP_KERNEL)) == NULL)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1091: FILE: sound/i2c/cs8427.c:203:
+	chip = device->private_data = kzalloc(sizeof(*chip), GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1239: FILE: sound/isa/es18xx.c:1689:
+        chip = kzalloc(sizeof(*chip), GFP_KERNEL);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1239: FILE: sound/isa/es18xx.c:1689:
+        chip = kzalloc(sizeof(*chip), GFP_KERNEL);$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1352: FILE: sound/isa/sb/sb16_csp.c:127:
+	if ((p = kzalloc(sizeof(*p), GFP_KERNEL)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1413: FILE: sound/pci/ali5451/ali5451.c:2252:
+	if ((codec = kzalloc(sizeof(*codec), GFP_KERNEL)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1614: FILE: sound/pci/emu10k1/emufx.c:1039:
+	if ((icode = kzalloc(sizeof(*icode), GFP_KERNEL)) == NULL ||

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1623: FILE: sound/pci/emu10k1/emufx.c:1506:
+	if ((icode = kzalloc(sizeof(*icode), GFP_KERNEL)) == NULL)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1993: FILE: sound/pci/ice1712/juli.c:185:
+		ak = ice->akm = kzalloc(sizeof(akm4xxx_t), GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2006: FILE: sound/pci/ice1712/phase.c:125:
+	ak = ice->akm = kzalloc(sizeof(akm4xxx_t), GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2015: FILE: sound/pci/ice1712/phase.c:389:
+	ak = ice->akm = kzalloc(sizeof(akm4xxx_t), GFP_KERNEL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2067: FILE: sound/pci/korg1212/korg1212.c:2223:
+        korg1212 = kzalloc(sizeof(*korg1212), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2067: FILE: sound/pci/korg1212/korg1212.c:2223:
+        korg1212 = kzalloc(sizeof(*korg1212), GFP_KERNEL);$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2093: FILE: sound/pci/mixart/mixart.c:1007:
+	mgr->chip[idx] = chip = kzalloc(sizeof(*chip), GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2163: FILE: sound/pci/via82xx.c:2066:
+	if ((chip = kzalloc(sizeof(*chip), GFP_KERNEL)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2176: FILE: sound/pci/via82xx_modem.c:1085:
+	if ((chip = kzalloc(sizeof(*chip), GFP_KERNEL)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2294: FILE: sound/synth/emux/emux_seq.c:149:
+	if ((p = kzalloc(sizeof(*p), GFP_KERNEL)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2316: FILE: sound/synth/emux/soundfont.c:349:
+	if ((zp = kzalloc(sizeof(*zp), GFP_KERNEL)) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2325: FILE: sound/synth/emux/soundfont.c:380:
+	if ((sp = kzalloc(sizeof(*sp), GFP_KERNEL)) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2334: FILE: sound/synth/emux/soundfont.c:1365:
+	if ((sflist = kzalloc(sizeof(*sflist), GFP_KERNEL)) == NULL)

CHECK:CAMELCASE: Avoid CamelCase: <usX2Y_substream>
#2453: FILE: sound/usb/usx2y/usbusx2yaudio.c:960:
+		usX2Y_substream[i] = kzalloc(sizeof(snd_usX2Y_substream_t), GFP_KERNEL);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <snd_usX2Y_substream_t>
#2453: FILE: sound/usb/usx2y/usbusx2yaudio.c:960:
+		usX2Y_substream[i] = kzalloc(sizeof(snd_usX2Y_substream_t), GFP_KERNEL);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000162217.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 5 warnings, 9 checks, 1613 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000162217.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
