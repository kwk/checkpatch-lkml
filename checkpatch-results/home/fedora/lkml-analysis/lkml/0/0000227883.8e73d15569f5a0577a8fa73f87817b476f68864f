WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
diff -ruN 830-prepare-image-old/kernel/power/prepare_image.c 830-prepare-image-new/kernel/power/prepare_image.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#49: FILE: kernel/power/prepare_image.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#50: FILE: kernel/power/prepare_image.c:2:
+ * kernel/power/prepare_image.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#84: FILE: kernel/power/prepare_image.c:36:
+extern unsigned long orig_mem_free;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#85: FILE: kernel/power/prepare_image.c:37:
+extern void mark_pages_for_pageset2(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#86: FILE: kernel/power/prepare_image.c:38:
+extern int image_size_limit;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#87: FILE: kernel/power/prepare_image.c:39:
+extern int fill_suspend_memory_pool(int sizesought);

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#89: FILE: kernel/power/prepare_image.c:41:
+int suspend_amount_grabbed = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#90: FILE: kernel/power/prepare_image.c:42:
+static int arefrozen = 0, numnosave = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#91: FILE: kernel/power/prepare_image.c:43:
+static int header_space_allocated = 0;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#92: FILE: kernel/power/prepare_image.c:44:
+extern unsigned long forced_ps1_size, forced_ps2_size;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#98: FILE: kernel/power/prepare_image.c:50:
+ * ^I^Ilists used by the memory manager. We then use the bitmap$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#99: FILE: kernel/power/prepare_image.c:51:
+ * ^I^Ito quickly calculate which pages to save and in which$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#100: FILE: kernel/power/prepare_image.c:52:
+ * ^I^Ipagesets.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: kernel/power/prepare_image.c:54:
+static void generate_free_page_map(void) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#102: FILE: kernel/power/prepare_image.c:54:
+static void generate_free_page_map(void) 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#105: FILE: kernel/power/prepare_image.c:57:
+	struct page * page;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#110: FILE: kernel/power/prepare_image.c:62:
+	for(i=0; i < max_mapnr; i++)
 	     ^

ERROR:SPACING: space required before the open parenthesis '('
#110: FILE: kernel/power/prepare_image.c:62:
+	for(i=0; i < max_mapnr; i++)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#111: FILE: kernel/power/prepare_image.c:63:
+		SetPageInUse(mem_map+i);
 		                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: kernel/power/prepare_image.c:64:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#119: FILE: kernel/power/prepare_image.c:71:
+				for(loop=0; loop < (1 << order); loop++) {
 				        ^

ERROR:SPACING: space required before the open parenthesis '('
#119: FILE: kernel/power/prepare_image.c:71:
+				for(loop=0; loop < (1 << order); loop++) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#120: FILE: kernel/power/prepare_image.c:72:
+					ClearPageInUse(page+loop);
 					                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#121: FILE: kernel/power/prepare_image.c:73:
+					ClearPagePageset2(page+loop);
 					                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: kernel/power/prepare_image.c:77:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#125: FILE: kernel/power/prepare_image.c:77:
+
+		

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#126: FILE: kernel/power/prepare_image.c:78:
+		for (cpu = 0; cpu < NR_CPUS; cpu++) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#134: FILE: kernel/power/prepare_image.c:86:
+				struct page * page;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: kernel/power/prepare_image.c:95:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: kernel/power/prepare_image.c:101:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: kernel/power/prepare_image.c:102:
+ * Description:^IReturn the number of pages that are free, beginning with and $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#151: FILE: kernel/power/prepare_image.c:103:
+ * ^I^Iincluding this one.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: kernel/power/prepare_image.c:105:
+static int size_of_free_region(struct page * page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#155: FILE: kernel/power/prepare_image.c:107:
+	struct page * posn = page;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: kernel/power/prepare_image.c:109:
+^Iwhile (((posn-mem_map) < max_mapnr) && (!PageInUse(posn))) $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#157: FILE: kernel/power/prepare_image.c:109:
+	while (((posn-mem_map) < max_mapnr) && (!PageInUse(posn))) 
 	             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#168: FILE: kernel/power/prepare_image.c:120:
+		if (PageReserved(mem_map+loop)) {
 		                        ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#173: FILE: kernel/power/prepare_image.c:125:
+				printk("Reserved pages from %p to %p.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: kernel/power/prepare_image.c:126:
+				printk("Reserved pages from %p to %p.\n",
+					page_address(mem_map+rangemin),

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#174: FILE: kernel/power/prepare_image.c:126:
+					page_address(mem_map+rangemin),
 					                    ^

CHECK:SPACING: No space is necessary after a cast
#175: FILE: kernel/power/prepare_image.c:127:
+					((char *) page_address(mem_map + loop)) - 1);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#182: FILE: kernel/power/prepare_image.c:134:
+		printk("Reserved pages from %p to %p.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: kernel/power/prepare_image.c:135:
+		printk("Reserved pages from %p to %p.\n",
+			page_address(mem_map+rangemin),

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#183: FILE: kernel/power/prepare_image.c:135:
+			page_address(mem_map+rangemin),
 			                    ^

CHECK:SPACING: No space is necessary after a cast
#184: FILE: kernel/power/prepare_image.c:136:
+			((char *) page_address(mem_map + max_mapnr)) - 1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: kernel/power/prepare_image.c:139:
+/* $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#201: FILE: kernel/power/prepare_image.c:153:
+		if (PageNosave(mem_map+loop)) {
 		                      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#206: FILE: kernel/power/prepare_image.c:158:
+				printk("Nosave pages from %p to %p.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: kernel/power/prepare_image.c:159:
+				printk("Nosave pages from %p to %p.\n",
+					page_address(mem_map+rangemin),

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#207: FILE: kernel/power/prepare_image.c:159:
+					page_address(mem_map+rangemin),
 					                    ^

CHECK:SPACING: No space is necessary after a cast
#208: FILE: kernel/power/prepare_image.c:160:
+					((char *) page_address(mem_map + loop)) - 1);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#215: FILE: kernel/power/prepare_image.c:167:
+		printk("Nosave pages from %p to %p.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: kernel/power/prepare_image.c:168:
+		printk("Nosave pages from %p to %p.\n",
+			page_address(mem_map+rangemin),

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#216: FILE: kernel/power/prepare_image.c:168:
+			page_address(mem_map+rangemin),
 			                    ^

CHECK:SPACING: No space is necessary after a cast
#217: FILE: kernel/power/prepare_image.c:169:
+			((char *) page_address(mem_map + max_mapnr)) - 1);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#235: FILE: kernel/power/prepare_image.c:187:
+	struct range * rangepointer;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#279: FILE: kernel/power/prepare_image.c:231:
+		if (PageNosave(mem_map+loop)) {
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#289: FILE: kernel/power/prepare_image.c:241:
+		if (!PageReserved(mem_map+loop)) {
 		                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#290: FILE: kernel/power/prepare_image.c:242:
+			if ((chunk_size=size_of_free_region(mem_map+loop))!=0) {
 			               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#290: FILE: kernel/power/prepare_image.c:242:
+			if ((chunk_size=size_of_free_region(mem_map+loop))!=0) {
 			                                           ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#290: FILE: kernel/power/prepare_image.c:242:
+			if ((chunk_size=size_of_free_region(mem_map+loop))!=0) {
 			                                                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#290: FILE: kernel/power/prepare_image.c:242:
+			if ((chunk_size=size_of_free_region(mem_map+loop))!=0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#315: FILE: kernel/power/prepare_image.c:267:
+		usepagedir2 = !!PagePageset2(mem_map+loop);
 		                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: kernel/power/prepare_image.c:276:
+^I^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#327: FILE: kernel/power/prepare_image.c:279:
+			if (!PageHighMem(mem_map+loop))
 			                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#331: FILE: kernel/power/prepare_image.c:283:
+			if (!PageHighMem(mem_map+loop))
 			                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: kernel/power/prepare_image.c:287:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pagedir1.pageset_size'
#339: FILE: kernel/power/prepare_image.c:291:
+	if ((pagedir1.pageset_size) && (result.size1 > pagedir1.pageset_size))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'result.size1 > pagedir1.pageset_size'
#339: FILE: kernel/power/prepare_image.c:291:
+	if ((pagedir1.pageset_size) && (result.size1 > pagedir1.pageset_size))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pagedir2.pageset_size'
#341: FILE: kernel/power/prepare_image.c:293:
+	if ((pagedir2.pageset_size) && (result.size2 > pagedir2.pageset_size))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'result.size2 > pagedir2.pageset_size'
#341: FILE: kernel/power/prepare_image.c:293:
+	if ((pagedir2.pageset_size) && (result.size2 > pagedir2.pageset_size))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: kernel/power/prepare_image.c:303:
+	suspend_message(SUSPEND_EAT_MEMORY, SUSPEND_MEDIUM, 0,
+		"Count data pages: Set1 (%d) + Set2 (%d) + Nosave (%d) + NumFree (%d) = %d.\n",

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#364: FILE: kernel/power/prepare_image.c:316:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: kernel/power/prepare_image.c:317:
+^Iint max1 = max( (int) (RAM_TO_SUSPEND - real_nr_free_pages() - $

CHECK:SPACING: No space is necessary after a cast
#365: FILE: kernel/power/prepare_image.c:317:
+	int max1 = max( (int) (RAM_TO_SUSPEND - real_nr_free_pages() - 

ERROR:SPACING: space prohibited after that open parenthesis '('
#365: FILE: kernel/power/prepare_image.c:317:
+	int max1 = max( (int) (RAM_TO_SUSPEND - real_nr_free_pages() - 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#367: FILE: kernel/power/prepare_image.c:319:
+^I^I^I((int) (STORAGE_NEEDED(1) -  $

CHECK:SPACING: No space is necessary after a cast
#367: FILE: kernel/power/prepare_image.c:319:
+			((int) (STORAGE_NEEDED(1) -  

ERROR:SPACING: space prohibited after that open parenthesis '('
#370: FILE: kernel/power/prepare_image.c:322:
+		return max( max1,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: kernel/power/prepare_image.c:323:
+^I^I^I    (image_size_limit > 0) ? $

CHECK:SPACING: No space is necessary after a cast
#372: FILE: kernel/power/prepare_image.c:324:
+			    ((int) (STORAGE_NEEDED(1) - (image_size_limit << 8))) : 0);

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#377: FILE: kernel/power/prepare_image.c:329:
+unsigned long storage_available = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: kernel/power/prepare_image.c:337:
+{ $

WARNING:LINE_SPACING: Missing a blank line after declarations
#387: FILE: kernel/power/prepare_image.c:339:
+	unsigned long storage_allocated = active_writer->ops.writer.storage_allocated();
+	suspend_message(SUSPEND_EAT_MEMORY, SUSPEND_MEDIUM, 1,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: kernel/power/prepare_image.c:340:
+^I^I"Free:%d+%d+%d=%d(%d). Sets:%d(%d),%d(%d). Header:%d. Nosave:%d-%d-%d=%d. Storage:%d/%lu(%lu). Needed:%d|%d|%d.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#388: FILE: kernel/power/prepare_image.c:340:
+	suspend_message(SUSPEND_EAT_MEMORY, SUSPEND_MEDIUM, 1,
+		"Free:%d+%d+%d=%d(%d). Sets:%d(%d),%d(%d). Header:%d. Nosave:%d-%d-%d=%d. Storage:%d/%lu(%lu). Needed:%d|%d|%d.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: kernel/power/prepare_image.c:341:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#394: FILE: kernel/power/prepare_image.c:346:
+^I^I$

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#412: FILE: kernel/power/prepare_image.c:364:
+		RAM_TO_SUSPEND - real_nr_free_pages() - nr_free_highpages() - suspend_amount_grabbed,

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: kernel/power/prepare_image.c:365:
+^I^ISTORAGE_NEEDED(1) - storage_available, $

ERROR:SPACING: space required before the open parenthesis '('
#417: FILE: kernel/power/prepare_image.c:369:
+#define display_stats() do { } while(0)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#421: FILE: kernel/power/prepare_image.c:373:
+	struct bloat_pages * next;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#425: FILE: kernel/power/prepare_image.c:377:
+static struct bloat_pages * bloat_pages = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#425: FILE: kernel/power/prepare_image.c:377:
+static struct bloat_pages * bloat_pages = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#430: FILE: kernel/power/prepare_image.c:382:
+		struct bloat_pages * next = bloat_pages->next;

CHECK:SPACING: No space is necessary after a cast
#431: FILE: kernel/power/prepare_image.c:383:
+		free_pages((unsigned long) bloat_pages, bloat_pages->order);

WARNING:LINE_SPACING: Missing a blank line after declarations
#431: FILE: kernel/power/prepare_image.c:383:
+		struct bloat_pages * next = bloat_pages->next;
+		free_pages((unsigned long) bloat_pages, bloat_pages->order);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#459: FILE: kernel/power/prepare_image.c:411:
+	suspend_message(SUSPEND_PAGESETS, SUSPEND_HIGH, 1,
+		"1: Forced size = %ld. Have %d -> ps1_get = %ld.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#461: FILE: kernel/power/prepare_image.c:413:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#462: FILE: kernel/power/prepare_image.c:414:
+^I/* $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#469: FILE: kernel/power/prepare_image.c:421:
+		suspend_message(SUSPEND_PAGESETS, SUSPEND_HIGH, 1,
+			"2: Forced size = %ld. Have %d -> ps2_get = %ld.\n",

ERROR:SPACING: space required before the open parenthesis '('
#477: FILE: kernel/power/prepare_image.c:429:
+			while(ps2_get > 0) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#478: FILE: kernel/power/prepare_image.c:430:
+				struct page * newpage;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#480: FILE: kernel/power/prepare_image.c:432:
+				struct bloat_pages * link;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#481: FILE: kernel/power/prepare_image.c:433:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#484: FILE: kernel/power/prepare_image.c:436:
+^I^I^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#499: FILE: kernel/power/prepare_image.c:451:
+					suspend_message(SUSPEND_PAGESETS, SUSPEND_MEDIUM, 1,
+						" Failed to allocate enough memory for"

WARNING:SPLIT_STRING: quoted string split across lines
#500: FILE: kernel/power/prepare_image.c:452:
+						" Failed to allocate enough memory for"
+						" requested pageset sizes.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#503: FILE: kernel/power/prepare_image.c:455:
+^I$

CHECK:SPACING: No space is necessary after a cast
#508: FILE: kernel/power/prepare_image.c:460:
+				link = (struct bloat_pages *) virt;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#515: FILE: kernel/power/prepare_image.c:467:
+				suspend_message(SUSPEND_PAGESETS, SUSPEND_VERBOSE, 1,
+					"Allocated %d for ps2. To get %ld.\n",

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#518: FILE: kernel/power/prepare_image.c:470:
+		} else
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#518: FILE: kernel/power/prepare_image.c:470:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#524: FILE: kernel/power/prepare_image.c:476:
+			suspend_message(SUSPEND_PAGESETS, SUSPEND_HIGH, 1,
+				"Moving %ld ps2 pages to ps1.\n", -ps2_get);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#526: FILE: kernel/power/prepare_image.c:478:
+				if PagePageset2(mem_map + i) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#537: FILE: kernel/power/prepare_image.c:489:
+		suspend_message(SUSPEND_PAGESETS, SUSPEND_HIGH, 1,
+			"2: Forced size = %ld. Have %d -> ps2_get = %ld.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#540: FILE: kernel/power/prepare_image.c:492:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#542: FILE: kernel/power/prepare_image.c:494:
+	if (ps1_get > 0) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#544: FILE: kernel/power/prepare_image.c:496:
+		suspend_message(SUSPEND_PAGESETS, SUSPEND_HIGH, 1,
+			"Still to get %ld pages for ps1.\n", ps1_get);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#545: FILE: kernel/power/prepare_image.c:497:
+^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#549: FILE: kernel/power/prepare_image.c:501:
+			suspend_message(SUSPEND_PAGESETS, SUSPEND_VERBOSE, 1,
+				"Reducing ps1_get by one.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#553: FILE: kernel/power/prepare_image.c:505:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#558: FILE: kernel/power/prepare_image.c:510:
+		while(ps1_get > 0) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#560: FILE: kernel/power/prepare_image.c:512:
+			struct bloat_pages * link;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#561: FILE: kernel/power/prepare_image.c:513:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: kernel/power/prepare_image.c:516:
+^I^I^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#579: FILE: kernel/power/prepare_image.c:531:
+				suspend_message(SUSPEND_PAGESETS, SUSPEND_VERBOSE, 1,
+					"Couldn't get enough pages. Need %ld more.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#583: FILE: kernel/power/prepare_image.c:535:
+^I$

CHECK:SPACING: No space is necessary after a cast
#584: FILE: kernel/power/prepare_image.c:536:
+			link = (struct bloat_pages *) virt;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#591: FILE: kernel/power/prepare_image.c:543:
+			suspend_message(SUSPEND_PAGESETS, SUSPEND_VERBOSE, 1,
+				"Allocated %d for ps1. To get %ld.\n", 1 << order, ps1_get);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: kernel/power/prepare_image.c:547:
+	suspend_message(SUSPEND_PAGESETS, SUSPEND_VERBOSE, 1,
+		"Exiting increase pageset size.\n\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#602: FILE: kernel/power/prepare_image.c:554:
+extern int allocate_extra_pagedir_memory(struct pagedir * p, int pageset_size, int alloc_from);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#604: FILE: kernel/power/prepare_image.c:556:
+struct pageset_sizes_result recalculate_stats(void) $

CHECK:SPACING: No space is necessary after a cast
#604: FILE: kernel/power/prepare_image.c:556:
+struct pageset_sizes_result recalculate_stats(void) 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#611: FILE: kernel/power/prepare_image.c:563:
+	suspend_message(SUSPEND_PAGESETS, SUSPEND_VERBOSE, 1,
+		"Forced sizes %ld and %ld. Result %d and %d.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#614: FILE: kernel/power/prepare_image.c:566:
+^Iif ((forced_ps1_size && forced_ps1_size != result.size1) || $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#621: FILE: kernel/power/prepare_image.c:573:
+	pagedir1.lastpageset_size = pageset1_size = result.size1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#622: FILE: kernel/power/prepare_image.c:574:
+	pagedir2.lastpageset_size = pageset2_size = result.size2;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#633: FILE: kernel/power/prepare_image.c:585:
+static int update_image(void) $

CHECK:SPACING: No space is necessary after a cast
#633: FILE: kernel/power/prepare_image.c:585:
+static int update_image(void) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#634: FILE: kernel/power/prepare_image.c:586:
+{ $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#652: FILE: kernel/power/prepare_image.c:604:
+			suspend_message(SUSPEND_ANY_SECTION, SUSPEND_LOW, 1,
+				"Still need to get more pages for checksum pages.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#658: FILE: kernel/power/prepare_image.c:610:
+			suspend_message(SUSPEND_ANY_SECTION, SUSPEND_LOW, 1,
+				"Still need to get more pages for pagedir 1.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#664: FILE: kernel/power/prepare_image.c:616:
+			suspend_message(SUSPEND_ANY_SECTION, SUSPEND_LOW, 1,
+				"Still need to get more storage space for the image proper.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#675: FILE: kernel/power/prepare_image.c:627:
+			suspend_message(SUSPEND_ANY_SECTION, SUSPEND_LOW, 1,
+				"Still need to get more storage space for header.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#683: FILE: kernel/power/prepare_image.c:635:
+^I^I/* $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#694: FILE: kernel/power/prepare_image.c:646:
+		active_writer->ops.writer.allocate_storage(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#704: FILE: kernel/power/prepare_image.c:656:
+^I} while (((orig_num_range_pages < num_range_pages) || $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#707: FILE: kernel/power/prepare_image.c:659:
+^I^I   active_writer->ops.writer.storage_allocated() < (HEADER_STORAGE_NEEDED + MAIN_STORAGE_NEEDED(1))) $

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#707: FILE: kernel/power/prepare_image.c:659:
+		   active_writer->ops.writer.storage_allocated() < (HEADER_STORAGE_NEEDED + MAIN_STORAGE_NEEDED(1))) 

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#708: FILE: kernel/power/prepare_image.c:660:
+		   active_writer->ops.writer.storage_allocated() < (HEADER_STORAGE_NEEDED + MAIN_STORAGE_NEEDED(1))) 
+		 && (!TEST_RESULT_STATE(SUSPEND_ABORTED)));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#709: FILE: kernel/power/prepare_image.c:661:
+^I$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#730: FILE: kernel/power/prepare_image.c:682:
+struct eaten_memory_t
+{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#731: FILE: kernel/power/prepare_image.c:683:
+	void * next;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#743: FILE: kernel/power/prepare_image.c:695:
+^I$

CHECK:SPACING: No space is necessary after a cast
#746: FILE: kernel/power/prepare_image.c:698:
+		eaten_memory[order] = (struct eaten_memory_t *) __get_free_pages(GFP_ATOMIC, order);

WARNING:LINE_SPACING: Missing a blank line after declarations
#746: FILE: kernel/power/prepare_image.c:698:
+		struct eaten_memory_t *prev = eaten_memory[order];
+		eaten_memory[order] = (struct eaten_memory_t *) __get_free_pages(GFP_ATOMIC, order);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#748: FILE: kernel/power/prepare_image.c:700:
+			struct page * page = virt_to_page(eaten_memory[order]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#749: FILE: kernel/power/prepare_image.c:701:
+			struct page * page = virt_to_page(eaten_memory[order]);
+			eaten_memory[order]->next = prev;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#752: FILE: kernel/power/prepare_image.c:704:
+			for (k=0; k < (1 << order); k++) {
 			      ^

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#756: FILE: kernel/power/prepare_image.c:708:
+			eaten_memory[order] = (struct eaten_memory_t *) __get_free_pages(GFP_ATOMIC, order);

CHECK:SPACING: No space is necessary after a cast
#756: FILE: kernel/power/prepare_image.c:708:
+			eaten_memory[order] = (struct eaten_memory_t *) __get_free_pages(GFP_ATOMIC, order);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#765: FILE: kernel/power/prepare_image.c:717:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#781: FILE: kernel/power/prepare_image.c:733:
+		this=eaten_memory[order];
 		    ^

ERROR:SPACING: space required before the open parenthesis '('
#782: FILE: kernel/power/prepare_image.c:734:
+		while(this) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#783: FILE: kernel/power/prepare_image.c:735:
+			struct page * page = virt_to_page(this);

WARNING:LINE_SPACING: Missing a blank line after declarations
#784: FILE: kernel/power/prepare_image.c:736:
+			struct page * page = virt_to_page(this);
+			next = this->next;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#785: FILE: kernel/power/prepare_image.c:737:
+			for (j=0; j < (1 << order); j++)
 			      ^

CHECK:SPACING: No space is necessary after a cast
#787: FILE: kernel/power/prepare_image.c:739:
+			free_pages((unsigned long) this, order);

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#788: FILE: kernel/power/prepare_image.c:740:
+			num_freed+= (1 << order);
 			         ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#794: FILE: kernel/power/prepare_image.c:746:
+	BUG_ON(suspend_amount_grabbed);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#800: FILE: kernel/power/prepare_image.c:752:
+	unsigned long this = (unsigned long) eaten_memory[order];

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#803: FILE: kernel/power/prepare_image.c:755:
+	struct page * page;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#808: FILE: kernel/power/prepare_image.c:760:
+try_again:^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#812: FILE: kernel/power/prepare_image.c:764:
+		for (j=0; j < (1 << order); j++) {
 		      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#822: FILE: kernel/power/prepare_image.c:774:
+	alternative = order+1;
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#831: FILE: kernel/power/prepare_image.c:783:
+			for (j=0; j < (1 << order); j++) {
 			      ^

CHECK:SPACING: No space is necessary after a cast
#832: FILE: kernel/power/prepare_image.c:784:
+				clear_page((char *) this + j * PAGE_SIZE);

CHECK:SPACING: No space is necessary after a cast
#841: FILE: kernel/power/prepare_image.c:793:
+		unsigned long virt = (unsigned long) eaten_memory[alternative];

WARNING:LINE_SPACING: Missing a blank line after declarations
#842: FILE: kernel/power/prepare_image.c:794:
+		unsigned long virt = (unsigned long) eaten_memory[alternative];
+		page = virt_to_page(eaten_memory[alternative]);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#844: FILE: kernel/power/prepare_image.c:796:
+		for (j=0; j < (1 << (alternative)); j++) {
 		      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#854: FILE: kernel/power/prepare_image.c:806:
+	 * the memory before us. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#863: FILE: kernel/power/prepare_image.c:815:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#876: FILE: kernel/power/prepare_image.c:828:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#882: FILE: kernel/power/prepare_image.c:834:
+	suspend_message(SUSPEND_FREEZER, SUSPEND_VERBOSE, 0, "- Freeze_processes returned %d.\n",
+		result);

CHECK:BRACES: braces {} should be used on all arms of this statement
#884: FILE: kernel/power/prepare_image.c:836:
+	if (result) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#887: FILE: kernel/power/prepare_image.c:839:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#899: FILE: kernel/power/prepare_image.c:851:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#913: FILE: kernel/power/prepare_image.c:865:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#913: FILE: kernel/power/prepare_image.c:865:
+
+	

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#922: FILE: kernel/power/prepare_image.c:874:
+	switch (image_size_limit) {
+		case -1: /* Don't eat any memory */
[...]
+		case -2:  /* Free caches only */
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#935: FILE: kernel/power/prepare_image.c:887:
+^I^I$

WARNING:LONG_LINE: line length of 142 exceeds 100 columns
#938: FILE: kernel/power/prepare_image.c:890:
+	while (((!EATEN_ENOUGH_MEMORY()) || (image_size_limit == -2)) && (!TEST_RESULT_STATE(SUSPEND_ABORTED)) && (times_criteria_met < 10)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#941: FILE: kernel/power/prepare_image.c:893:
+		int amount_wanted = orig_memory_still_to_eat - amount_needed(1);
+		if (amount_wanted < 1)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#945: FILE: kernel/power/prepare_image.c:897:
+		suspend_message(SUSPEND_EAT_MEMORY, SUSPEND_VERBOSE, 1,
+			"Times met criteria is %d.\n", times_criteria_met);

WARNING:LONG_LINE: line length of 151 exceeds 100 columns
#947: FILE: kernel/power/prepare_image.c:899:
+			update_status(orig_memory_still_to_eat - amount_needed(1), orig_memory_still_to_eat, " Image size %d ", MB(STORAGE_NEEDED(1)));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#950: FILE: kernel/power/prepare_image.c:902:
+^I^I$

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#958: FILE: kernel/power/prepare_image.c:910:
+			"Given %d, shrink_all_memory returned %d.\n", last_amount_needed, amount_freed);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#958: FILE: kernel/power/prepare_image.c:910:
+		suspend_message(SUSPEND_EAT_MEMORY, SUSPEND_VERBOSE, 1,
+			"Given %d, shrink_all_memory returned %d.\n", last_amount_needed, amount_freed);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#969: FILE: kernel/power/prepare_image.c:921:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#971: FILE: kernel/power/prepare_image.c:923:
+	suspend_message(SUSPEND_EAT_MEMORY, SUSPEND_VERBOSE, 1,
+		"Out of main eat memory loop.\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#975: FILE: kernel/power/prepare_image.c:927:
+		unsigned long orig_state = get_suspend_state();
+		suspend_message(SUSPEND_EAT_MEMORY, SUSPEND_VERBOSE, 1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#976: FILE: kernel/power/prepare_image.c:928:
+		suspend_message(SUSPEND_EAT_MEMORY, SUSPEND_VERBOSE, 1,
+			"Ate memory; letting kjournald etc run.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#988: FILE: kernel/power/prepare_image.c:940:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#990: FILE: kernel/power/prepare_image.c:942:
+	suspend_message(SUSPEND_EAT_MEMORY, SUSPEND_VERBOSE, 1,
+		"(Freezer exit:) Swap needed calculated as (%d+%d)*%d/100+%d+1+%d=%d.\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#995: FILE: kernel/power/prepare_image.c:947:
+^I ^IHEADER_STORAGE_NEEDED,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#995: FILE: kernel/power/prepare_image.c:947:
+^I ^IHEADER_STORAGE_NEEDED,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1002: FILE: kernel/power/prepare_image.c:954:
+^Iif (amount_needed(1) > 0) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1007: FILE: kernel/power/prepare_image.c:959:
+		printk("Unable to free sufficient memory to suspend. Still need %d pages. "

WARNING:SPLIT_STRING: quoted string split across lines
#1008: FILE: kernel/power/prepare_image.c:960:
+		printk("Unable to free sufficient memory to suspend. Still need %d pages. "
+			"You may be able to avoid this problem by reducing the async_io_limit\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1012: FILE: kernel/power/prepare_image.c:964:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1043: FILE: kernel/power/prepare_image.c:995:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1049: FILE: kernel/power/prepare_image.c:1001:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1055: FILE: kernel/power/prepare_image.c:1007:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1057: FILE: kernel/power/prepare_image.c:1009:
+		printk(KERN_ERR "You need some storage available to be able to suspend.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1069: FILE: kernel/power/prepare_image.c:1021:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1073: FILE: kernel/power/prepare_image.c:1025:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1076: FILE: kernel/power/prepare_image.c:1028:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1087: FILE: kernel/power/prepare_image.c:1039:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1090: FILE: kernel/power/prepare_image.c:1042:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1098: FILE: kernel/power/prepare_image.c:1050:
+EXPORT_SYMBOL(suspend_amount_grabbed);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227883.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 104 errors, 39 warnings, 79 checks, 1050 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227883.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
