WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#58: 
Content-Type: application/x-patch ; name="linux-2.4.20-pre1_setuparch_A2.patch"

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#63: 
--- a/arch/i386/kernel/setup.c	Mon Aug  5 18:23:48 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LONG_LINE: line length of 167 exceeds 100 columns
#168: FILE: arch/i386/kernel/setup.c:920:
+			printk("only %luMB highmem pages available, ignoring highmem size of %uMB.\n", pages_to_mb(*max_pfn - MAXMEM_PFN), pages_to_mb(highmem_pages));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#168: FILE: arch/i386/kernel/setup.c:920:
+			printk("only %luMB highmem pages available, ignoring highmem size of %uMB.\n", pages_to_mb(*max_pfn - MAXMEM_PFN), pages_to_mb(highmem_pages));

WARNING:LONG_LINE: line length of 167 exceeds 100 columns
#197: FILE: arch/i386/kernel/setup.c:946:
+			printk(KERN_ERR "highmem size specified (%uMB) is bigger than pages available (%luMB)!.\n", pages_to_mb(highmem_pages), pages_to_mb(*max_pfn));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#197: FILE: arch/i386/kernel/setup.c:946:
+			printk(KERN_ERR "highmem size specified (%uMB) is bigger than pages available (%luMB)!.\n", pages_to_mb(highmem_pages), pages_to_mb(*max_pfn));

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#260: FILE: arch/i386/kernel/setup.c:1020:
+	highstart_pfn = highend_pfn = max_pfn;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#261: FILE: arch/i386/kernel/setup.c:1021:
+	if (max_pfn > max_low_pfn) {
+		highstart_pfn = max_low_pfn;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#264: FILE: arch/i386/kernel/setup.c:1024:
+	printk(KERN_NOTICE "%ldMB HIGHMEM available.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: arch/i386/kernel/setup.c:1025:
+	printk(KERN_NOTICE "%ldMB HIGHMEM available.\n",
+		pages_to_mb(highend_pfn - highstart_pfn));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#267: FILE: arch/i386/kernel/setup.c:1027:
+	printk(KERN_NOTICE "%ldMB LOWMEM available.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: arch/i386/kernel/setup.c:1028:
+	printk(KERN_NOTICE "%ldMB LOWMEM available.\n",
+			pages_to_mb(max_low_pfn));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: arch/i386/kernel/setup.c:1086:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: arch/i386/kernel/setup.c:1086:
+ $

WARNING:LINE_SPACING: Missing a blank line after declarations
#298: FILE: arch/i386/kernel/setup.c:1099:
+		struct resource *res;
+		if (e820.map[i].addr + e820.map[i].size > 0x100000000ULL)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#302: FILE: arch/i386/kernel/setup.c:1103:
+		case E820_RAM:	res->name = "System RAM"; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#303: FILE: arch/i386/kernel/setup.c:1104:
+		case E820_ACPI:	res->name = "ACPI Tables"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#304: FILE: arch/i386/kernel/setup.c:1105:
+		case E820_NVS:	res->name = "ACPI Non-volatile Storage"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#305: FILE: arch/i386/kernel/setup.c:1106:
+		default:	res->name = "reserved";

WARNING:TYPO_SPELLING: 'dont't' may be misspelled - perhaps 'don't'?
#313: FILE: arch/i386/kernel/setup.c:1114:
+			 *  We dont't know which RAM region contains kernel data,
 			       ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#325: FILE: arch/i386/kernel/setup.c:1126:
+		request_resource(&ioport_resource, standard_io_resources+i);
 		                                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: arch/i386/kernel/setup.c:1142:
+ ^IROOT_DEV = to_kdev_t(ORIG_ROOT_DEV);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#341: FILE: arch/i386/kernel/setup.c:1142:
+ ^IROOT_DEV = to_kdev_t(ORIG_ROOT_DEV);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: arch/i386/kernel/setup.c:1142:
+ ^IROOT_DEV = to_kdev_t(ORIG_ROOT_DEV);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: arch/i386/kernel/setup.c:1143:
+ ^Idrive_info = DRIVE_INFO;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#342: FILE: arch/i386/kernel/setup.c:1143:
+ ^Idrive_info = DRIVE_INFO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: arch/i386/kernel/setup.c:1143:
+ ^Idrive_info = DRIVE_INFO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: arch/i386/kernel/setup.c:1144:
+ ^Iscreen_info = SCREEN_INFO;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#343: FILE: arch/i386/kernel/setup.c:1144:
+ ^Iscreen_info = SCREEN_INFO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: arch/i386/kernel/setup.c:1144:
+ ^Iscreen_info = SCREEN_INFO;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#345: FILE: arch/i386/kernel/setup.c:1146:
+	if( SYS_DESC_TABLE.length != 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#345: FILE: arch/i386/kernel/setup.c:1146:
+	if( SYS_DESC_TABLE.length != 0 ) {

ERROR:SPACING: space required before the open parenthesis '('
#345: FILE: arch/i386/kernel/setup.c:1146:
+	if( SYS_DESC_TABLE.length != 0 ) {

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#346: FILE: arch/i386/kernel/setup.c:1147:
+		MCA_bus = SYS_DESC_TABLE.table[3] &0x2;
 		                                  ^

CHECK:SPACING: No space is necessary after a cast
#362: FILE: arch/i386/kernel/setup.c:1163:
+	init_mm.start_code = (unsigned long) &_text;

CHECK:SPACING: No space is necessary after a cast
#363: FILE: arch/i386/kernel/setup.c:1164:
+	init_mm.end_code = (unsigned long) &_etext;

CHECK:SPACING: No space is necessary after a cast
#364: FILE: arch/i386/kernel/setup.c:1165:
+	init_mm.end_data = (unsigned long) &_edata;

CHECK:SPACING: No space is necessary after a cast
#365: FILE: arch/i386/kernel/setup.c:1166:
+	init_mm.brk = (unsigned long) &_end;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#368: FILE: arch/i386/kernel/setup.c:1169:
+	code_resource.end = virt_to_bus(&_etext)-1;
 	                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#370: FILE: arch/i386/kernel/setup.c:1171:
+	data_resource.end = virt_to_bus(&_edata)-1;
 	                                        ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441629.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 17 warnings, 11 checks, 354 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441629.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
