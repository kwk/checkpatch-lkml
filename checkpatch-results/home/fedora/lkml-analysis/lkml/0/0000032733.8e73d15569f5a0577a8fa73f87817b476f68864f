WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
expanding fdtable file descriptor entries. The main focus is on the fdarray,

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#99: FILE: fs/file.c:25:
in

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: fs/file.c:26:
+ * We use this list to defer free fdtables that have vmalloced sets/arrays. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#117: FILE: fs/file.c:36:
+static inline void * alloc_fdmem(unsigned int size)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: fs/file.c:93:
+ * Fdtable structures which contain member data obtained using vmalloc are $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: fs/file.c:132:
+ * function should be invoked as an RCU callback on the target fdtable. It $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: fs/file.c:185:
+ * Copy fdarray and fdset data from the old fdtable to the new fdtable. If $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: fs/file.c:186:
+ * new fdtable supports more file entries, then the extra high-order data $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#347: FILE: fs/file.c:193:
+	BUG_ON(nfdt->max_fds < ofdt->max_fds);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#428: FILE: fs/file.c:226:
+static struct fdtable * alloc_fdtable(unsigned int nr)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*fdt)...) over kmalloc(sizeof(struct fdtable)...)
#482: FILE: fs/file.c:246:
+	fdt = kmalloc(sizeof(struct fdtable), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#616: FILE: fs/file.c:335:
 static void __devinit fdtable_defer_list_init(int cpu)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000032733.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 3 warnings, 1 checks, 592 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000032733.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
