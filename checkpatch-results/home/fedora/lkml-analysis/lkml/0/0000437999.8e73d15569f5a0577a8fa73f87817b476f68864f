WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
diff -Naur -X /home/jbarnes/dontdiff linux-2.5.31/fs/inode.c linux-2.5.31-lockassert/fs/inode.c

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#81: FILE: include/asm-i386/semaphore.h:62:
+# define assert_sem_held(sem)		BUG_ON(!down_trylock(sem))

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space required before the open parenthesis '('
#83: FILE: include/asm-i386/semaphore.h:64:
+# define assert_sem_held(sem)		do { } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#116: FILE: include/asm-ia64/semaphore.h:31:
+# define assert_sem_held(sem)		BUG_ON(!down_trylock(sem))

ERROR:SPACING: space required before the open parenthesis '('
#118: FILE: include/asm-ia64/semaphore.h:33:
+# define assert_sem_held(sem)		do { } while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#129: FILE: include/asm-ia64/spinlock.h:112:
+#define rwlock_is_locked(x) ((x)->read_counter != 0 || (x)->write_lock != 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#141: FILE: include/linux/rwsem-spinlock.h:50:
+#define assert_rwsem_held_for_write(rwsem)	BUG_ON(__down_read_trylock(sem))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#142: FILE: include/linux/rwsem-spinlock.h:51:
+#define assert_rwsem_held_for_read(rwsem)	BUG_ON(__down_write_trylock(rwsem))

ERROR:SPACING: space required before the open parenthesis '('
#144: FILE: include/linux/rwsem-spinlock.h:53:
+#define assert_rwsem_held_for_write(rwsem)	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#145: FILE: include/linux/rwsem-spinlock.h:54:
+#define assert_rwsem_held_for_read(rwsem)	do { } while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#177: FILE: include/linux/spinlock.h:127:
+#define assert_locked(lock)		BUG_ON(!spin_is_locked(lock))

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#177: FILE: include/linux/spinlock.h:127:
+#define assert_locked(lock)		BUG_ON(!spin_is_locked(lock))

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#178: FILE: include/linux/spinlock.h:128:
+#define assert_rw_locked(lock)		BUG_ON(!rwlock_is_locked(lock))

ERROR:SPACING: space required before the open parenthesis '('
#180: FILE: include/linux/spinlock.h:130:
+#define assert_locked(lock)		do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#181: FILE: include/linux/spinlock.h:131:
+#define assert_rw_locked(lock)		do { } while(0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000437999.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 8 warnings, 1 checks, 117 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000437999.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
