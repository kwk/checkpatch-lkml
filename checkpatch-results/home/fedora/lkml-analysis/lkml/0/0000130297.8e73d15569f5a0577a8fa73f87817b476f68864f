WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#64: 
> and gettimeofday should do the right thing (and if not it should be fixed)

WARNING:TYPO_SPELLING: 'wouldnt' may be misspelled - perhaps 'wouldn't'?
#91: 
> > wouldnt be a plus for us. It's a performance thing, and having runtime 
    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'seemless' may be misspelled - perhaps 'seamless'?
#92: 
> > switches for seemless performance features cannot be bad.
                 ^^^^^^^^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#161: FILE: arch/i386/kernel/process.c:254:
 void __devinit select_idle_routine(const struct cpuinfo_x86 *c)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#463: FILE: include/linux/idle.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#479: FILE: include/linux/idle.h:17:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#480: FILE: include/linux/idle.h:18:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#491: FILE: include/linux/idle.h:29:
+#include <asm/atomic.h>

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#512: FILE: include/linux/idle.h:50:
+extern int register_idle(struct idle_info *info);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#513: FILE: include/linux/idle.h:51:
+extern int unregister_idle(const char *name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#520: FILE: include/linux/idle.h:58:
+extern int set_idle(const char *name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#529: FILE: include/linux/idle.h:67:
+extern idlefunc_t get_idle(const char *name);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#551: FILE: kernel/idle.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#552: FILE: kernel/idle.c:2:
+ *  kernel/idle.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#575: FILE: kernel/idle.c:25:
+extern void poll_idle (void);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#600: FILE: kernel/idle.c:50:
+	BUG_ON(!info->name);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#622: FILE: kernel/idle.c:72:
+	BUG_ON(!name);

WARNING:LINE_SPACING: Missing a blank line after declarations
#745: FILE: kernel/idle.c:195:
+		int size;
+		p = list_entry(curr, struct idle_info, list);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#786: FILE: kernel/idle.c:236:
+			printk("idle functions overflowed sysfs??\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#789: FILE: kernel/idle.c:239:
+		len += sprintf(page+len, "%s%s%s",
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#795: FILE: kernel/idle.c:245:
+		len += sprintf(page+len, "\n");
 		                   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#810: FILE: kernel/idle.c:260:
+static struct attribute * idle_attrs[] = {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#841: FILE: kernel/idle.c:291:
+       ^Ireturn 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#841: FILE: kernel/idle.c:291:
+       ^Ireturn 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#841: FILE: kernel/idle.c:291:
+       ^Ireturn 0;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#843: FILE: kernel/idle.c:293:
+	printk(KERN_INFO "Problem setting up sysfs idle_ctrl\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#902: FILE: arch/i386/kernel/apm.c:2380:
+                memset(&apm_idle, 0, sizeof(apm_idle));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#902: FILE: arch/i386/kernel/apm.c:2380:
+                memset(&apm_idle, 0, sizeof(apm_idle));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#903: FILE: arch/i386/kernel/apm.c:2381:
+                apm_idle.name = APM_IDLE_NAME;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#903: FILE: arch/i386/kernel/apm.c:2381:
+                apm_idle.name = APM_IDLE_NAME;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#904: FILE: arch/i386/kernel/apm.c:2382:
+                apm_idle.func = apm_cpu_idle;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#904: FILE: arch/i386/kernel/apm.c:2382:
+                apm_idle.func = apm_cpu_idle;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#905: FILE: arch/i386/kernel/apm.c:2383:
+                apm_idle.freeze = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: arch/i386/kernel/apm.c:2383:
+                apm_idle.freeze = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#906: FILE: arch/i386/kernel/apm.c:2384:
+                register_idle(&apm_idle);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#906: FILE: arch/i386/kernel/apm.c:2384:
+                register_idle(&apm_idle);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#909: FILE: arch/i386/kernel/apm.c:2387:
+                set_idle(APM_IDLE_NAME);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#909: FILE: arch/i386/kernel/apm.c:2387:
+                set_idle(APM_IDLE_NAME);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#920: FILE: arch/i386/kernel/apm.c:2401:
+		int ret;
+		set_idle(NULL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#922: FILE: arch/i386/kernel/apm.c:2403:
+			if ((ret = unregister_idle(APM_IDLE_NAME)) == 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#929: FILE: arch/i386/kernel/apm.c:2410:
+				printk(KERN_WARNING

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#933: FILE: arch/i386/kernel/apm.c:2414:
+			yield();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#936: FILE: arch/i386/kernel/apm.c:2417:
+			printk(KERN_WARNING

WARNING:TYPO_SPELLING: 'unresgister' may be misspelled - perhaps 'unregister'?
#937: FILE: arch/i386/kernel/apm.c:2418:
+			       "Unable to unresgister APM idle function\n");
 			                  ^^^^^^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000130297.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 27 warnings, 6 checks, 813 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000130297.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
