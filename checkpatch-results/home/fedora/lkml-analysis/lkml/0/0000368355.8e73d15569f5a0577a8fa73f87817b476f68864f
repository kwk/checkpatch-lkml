WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
> >  If that happens, we would be waiting for ever. And I'd rather make that

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#160: FILE: drivers/base/class.c:182:
+static void class_dev_release(struct kobject * kobj)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#163: FILE: drivers/base/class.c:185:
+	struct class_device *class_dev = to_class_dev(kobj);
+	if (class_dev->release)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#180: FILE: include/linux/device.h:207:
+	void	(*release)(struct class_device * class_dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: drivers/base/firmware_class.c:7:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: drivers/base/firmware_class.c:61:
+ *  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: drivers/base/firmware_class.c:108:
+ *^IThe relevant values are: $

CHECK:SPACING: No space is necessary after a cast
#305: FILE: drivers/base/firmware_class.c:236:
+	struct firmware_priv *fw_priv = (struct firmware_priv *) data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#320: FILE: drivers/base/firmware_class.c:255:
+	struct class_device *class_dev = kmalloc(sizeof (struct class_device),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*class_dev)...) over kmalloc(sizeof (struct class_device)...)
#320: FILE: drivers/base/firmware_class.c:255:
+	struct class_device *class_dev = kmalloc(sizeof (struct class_device),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#336: FILE: drivers/base/firmware_class.c:276:
+	fw_priv->timeout.data = (u_long) fw_priv;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: drivers/base/firmware_class.c:339:
+/** $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#427: FILE: drivers/base/firmware_class.c:406:
+ * $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#466: FILE: include/linux/firmware.h:10:
 };
+int request_firmware(const struct firmware **fw, const char *name,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#468: FILE: include/linux/firmware.h:12:
+int request_firmware_nowait(

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000368355.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 3 warnings, 5 checks, 315 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000368355.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
