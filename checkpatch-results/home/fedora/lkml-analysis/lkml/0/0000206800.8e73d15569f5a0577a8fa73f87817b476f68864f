ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#75: FILE: fs/proc/proc_misc.c:244:
+extern struct proc_dir_entry * genetic_root_dir;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#78: FILE: fs/proc/proc_misc.c:247:
+int genetic_read_proc(char *page, char **start, off_t off,
+			  int count, int *eof, void *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: fs/proc/proc_misc.c:249:
+    int n = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: fs/proc/proc_misc.c:250:
+    genetic_t * genetic = (genetic_t *)data;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#81: FILE: fs/proc/proc_misc.c:250:
+    genetic_t * genetic = (genetic_t *)data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: fs/proc/proc_misc.c:251:
+    $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: fs/proc/proc_misc.c:251:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: fs/proc/proc_misc.c:252:
+    struct list_head * p;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#83: FILE: fs/proc/proc_misc.c:252:
+    struct list_head * p;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: fs/proc/proc_misc.c:253:
+    phenotype_t * pt;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#84: FILE: fs/proc/proc_misc.c:253:
+    phenotype_t * pt;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#86: FILE: fs/proc/proc_misc.c:255:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: fs/proc/proc_misc.c:256:
+    n  = sprintf(page,   "%s:\n", genetic->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: fs/proc/proc_misc.c:257:
+    n += sprintf(page+n, "generation_number:\t\t%ld\n", genetic->generation_number);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#88: FILE: fs/proc/proc_misc.c:257:
+    n += sprintf(page+n, "generation_number:\t\t%ld\n", genetic->generation_number);
                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: fs/proc/proc_misc.c:258:
+    n += sprintf(page+n, "num_children:\t\t\t%ld\n", genetic->num_children);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#89: FILE: fs/proc/proc_misc.c:258:
+    n += sprintf(page+n, "num_children:\t\t\t%ld\n", genetic->num_children);
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: fs/proc/proc_misc.c:259:
+    n += sprintf(page+n, "child_life_time:\t\t%ld\n\n", genetic->child_life_time);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#90: FILE: fs/proc/proc_misc.c:259:
+    n += sprintf(page+n, "child_life_time:\t\t%ld\n\n", genetic->child_life_time);
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: fs/proc/proc_misc.c:260:
+    n += sprintf(page+n, "child_number:\t\t\t%ld\n\n", genetic->child_number);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#91: FILE: fs/proc/proc_misc.c:260:
+    n += sprintf(page+n, "child_number:\t\t\t%ld\n\n", genetic->child_number);
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: fs/proc/proc_misc.c:262:
+    n += sprintf(page+n, "Phenotypes Average Fitness\n");$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#93: FILE: fs/proc/proc_misc.c:262:
+    n += sprintf(page+n, "Phenotypes Average Fitness\n");
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: fs/proc/proc_misc.c:264:
+    list_for_each(p, &genetic->phenotype) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: fs/proc/proc_misc.c:266:
+^I    $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#98: FILE: fs/proc/proc_misc.c:267:
+	    n += sprintf(page+n, "%-24s:\t\t%lld\n", pt->name, pt->avg_fitness);
 	                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: fs/proc/proc_misc.c:268:
+    }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: fs/proc/proc_misc.c:269:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: fs/proc/proc_misc.c:269:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: fs/proc/proc_misc.c:270:
+    return proc_calc_metrics(page, start, off, count, eof, n);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: fs/proc/proc_misc.c:276:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: fs/proc/proc_misc.c:277:
+    int n = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: fs/proc/proc_misc.c:278:
+    phenotype_t * pt = (phenotype_t *)data;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#109: FILE: fs/proc/proc_misc.c:278:
+    phenotype_t * pt = (phenotype_t *)data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: fs/proc/proc_misc.c:280:
+    n = sprintf(page,    "------ %s -----\n", pt->name);^I    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: fs/proc/proc_misc.c:280:
+    n = sprintf(page,    "------ %s -----\n", pt->name);^I    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: fs/proc/proc_misc.c:281:
+    n += sprintf(page+n, "generation_number:\t%ld\n", pt->genetic->generation_number);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#112: FILE: fs/proc/proc_misc.c:281:
+    n += sprintf(page+n, "generation_number:\t%ld\n", pt->genetic->generation_number);
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: fs/proc/proc_misc.c:282:
+    n += sprintf(page+n, "num_children:\t\t%ld\n\n", pt->num_children);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#113: FILE: fs/proc/proc_misc.c:282:
+    n += sprintf(page+n, "num_children:\t\t%ld\n\n", pt->num_children);
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: fs/proc/proc_misc.c:283:
+    n += sprintf(page+n, "child_number:\t\t%ld\n", pt->child_number);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#114: FILE: fs/proc/proc_misc.c:283:
+    n += sprintf(page+n, "child_number:\t\t%ld\n", pt->child_number);
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: fs/proc/proc_misc.c:284:
+    n += sprintf(page+n, "mutation_rate:\t\t%ld\n", pt->mutation_rate);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#115: FILE: fs/proc/proc_misc.c:284:
+    n += sprintf(page+n, "mutation_rate:\t\t%ld\n", pt->mutation_rate);
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: fs/proc/proc_misc.c:285:
+    n += sprintf(page+n, "num_mutations:\t\t%ld\n", pt->num_mutations);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#116: FILE: fs/proc/proc_misc.c:285:
+    n += sprintf(page+n, "num_mutations:\t\t%ld\n", pt->num_mutations);
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: fs/proc/proc_misc.c:286:
+    n += sprintf(page+n, "num_genes:\t\t%ld\n", pt->num_genes);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#117: FILE: fs/proc/proc_misc.c:286:
+    n += sprintf(page+n, "num_genes:\t\t%ld\n", pt->num_genes);
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: fs/proc/proc_misc.c:287:
+    n += sprintf(page+n, "uid:\t\t\t%ld\n", pt->uid);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#118: FILE: fs/proc/proc_misc.c:287:
+    n += sprintf(page+n, "uid:\t\t\t%ld\n", pt->uid);
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: fs/proc/proc_misc.c:288:
+    n += sprintf(page+n, "avg_fitness:\t\t%lld\n", pt->avg_fitness);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#119: FILE: fs/proc/proc_misc.c:288:
+    n += sprintf(page+n, "avg_fitness:\t\t%lld\n", pt->avg_fitness);
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: fs/proc/proc_misc.c:289:
+    n += sprintf(page+n, "last_gen_avg_fitness:\t%lld\n", pt->last_gen_avg_fitness);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#120: FILE: fs/proc/proc_misc.c:289:
+    n += sprintf(page+n, "last_gen_avg_fitness:\t%lld\n", pt->last_gen_avg_fitness);
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: fs/proc/proc_misc.c:291:
+    n += sprintf(page+n, "\nFitness history\n");$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#122: FILE: fs/proc/proc_misc.c:291:
+    n += sprintf(page+n, "\nFitness history\n");
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: fs/proc/proc_misc.c:293:
+    for (i = pt->genetic->generation_number > GENETIC_HISTORY_SIZE ? GENETIC_HISTORY_SIZE$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#124: FILE: fs/proc/proc_misc.c:293:
+    for (i = pt->genetic->generation_number > GENETIC_HISTORY_SIZE ? GENETIC_HISTORY_SIZE
[...]
+	    n += sprintf(page+n, "%ld:\t%lld\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#125: FILE: fs/proc/proc_misc.c:294:
+		 : pt->genetic->generation_number-1; i > 0; i--)
 		                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#126: FILE: fs/proc/proc_misc.c:295:
+	    n += sprintf(page+n, "%ld:\t%lld\n",
 	                     ^

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#128: FILE: fs/proc/proc_misc.c:297:
+			 pt->fitness_history[(pt->fitness_history_index - i) & GENETIC_HISTORY_MASK]);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: fs/proc/proc_misc.c:299:
+    return proc_calc_metrics(page, start, off, count, eof, n);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#139: FILE: fs/proc/proc_misc.c:308:
+	phenotype_t * pt = (phenotype_t *)data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: fs/proc/proc_misc.c:309:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: fs/proc/proc_misc.c:309:
+    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: fs/proc/proc_misc.c:311:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#145: FILE: fs/proc/proc_misc.c:314:
+		n += sprintf(page+n, "%d (%lld):", j, pt->debug_history[i++]);
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#147: FILE: fs/proc/proc_misc.c:316:
+		n += sprintf(page+n, " %-12lld:\t", pt->debug_history[i++]);
 		                 ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#149: FILE: fs/proc/proc_misc.c:318:
+		for (k = 0; k < pt->child_ranking[0]->num_genes; k++) {
+			n += sprintf(page+n, "%lld\t", pt->debug_history[i++]);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#150: FILE: fs/proc/proc_misc.c:319:
+			n += sprintf(page+n, "%lld\t", pt->debug_history[i++]);
 			                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#152: FILE: fs/proc/proc_misc.c:321:
+		n += sprintf(page+n, "\n");
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#155: FILE: fs/proc/proc_misc.c:324:
+			n += sprintf(page+n, "\n");
 			                 ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#171: FILE: include/linux/genetic.h:1:
+#ifndef __LINUX_GENETIC_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#174: FILE: include/linux/genetic.h:4:
+ * include/linux/genetic.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#191: FILE: include/linux/genetic.h:21:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#196: FILE: include/linux/genetic.h:26:
+#define GENETIC_DEFAULT_MUTATION_RATE ^I15$

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#211: FILE: include/linux/genetic.h:41:
+#define gen_dbg(format, arg...) do { if (GENETIC_PRINT_DEBUG) printk(KERN_EMERG __FILE__ ": " format "\n" , ## arg); } while (0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#211: FILE: include/linux/genetic.h:41:
+#define gen_dbg(format, arg...) do { if (GENETIC_PRINT_DEBUG) printk(KERN_EMERG __FILE__ ": " format "\n" , ## arg); } while (0)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#211: FILE: include/linux/genetic.h:41:
+#define gen_dbg(format, arg...) do { if (GENETIC_PRINT_DEBUG) printk(KERN_EMERG __FILE__ ": " format "\n" , ## arg); } while (0)
                                                                                                           ^

WARNING:LONG_LINE: line length of 138 exceeds 100 columns
#212: FILE: include/linux/genetic.h:42:
+#define gen_trc(format, arg...) do { if (GENETIC_PRINT_DEBUG) printk(KERN_EMERG __FILE__ ":%s:%d\n" , __FUNCTION__, __LINE__); } while (0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#212: FILE: include/linux/genetic.h:42:
+#define gen_trc(format, arg...) do { if (GENETIC_PRINT_DEBUG) printk(KERN_EMERG __FILE__ ":%s:%d\n" , __FUNCTION__, __LINE__); } while (0)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#212: FILE: include/linux/genetic.h:42:
+#define gen_trc(format, arg...) do { if (GENETIC_PRINT_DEBUG) printk(KERN_EMERG __FILE__ ":%s:%d\n" , __FUNCTION__, __LINE__); } while (0)
                                                                                                     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#212: FILE: include/linux/genetic.h:42:
+#define gen_trc(format, arg...) do { if (GENETIC_PRINT_DEBUG) printk(KERN_EMERG __FILE__ ":%s:%d\n" , __FUNCTION__, __LINE__); } while (0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#219: FILE: include/linux/genetic.h:49:
+^Istruct list_head ^Ilist;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#225: FILE: include/linux/genetic.h:55:
+^Iint ^I^I^Iid;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#228: FILE: include/linux/genetic.h:58:
+typedef struct genetic_child_s genetic_child_t;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#235: FILE: include/linux/genetic.h:65:
+^Ivoid^I ^I(*mutate_gene)(genetic_child_t *, unsigned long);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#235: FILE: include/linux/genetic.h:65:
+	void	 	(*mutate_gene)(genetic_child_t *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#235: FILE: include/linux/genetic.h:65:
+	void	 	(*mutate_gene)(genetic_child_t *, unsigned long);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#238: FILE: include/linux/genetic.h:68:
+typedef struct gene_param_s gene_param_t;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: include/linux/genetic.h:72:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: include/linux/genetic.h:77:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: include/linux/genetic.h:84:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#255: FILE: include/linux/genetic.h:85:
+^Iunsigned long ^I^Inum_children;^I^I  /* Must be power of 2 */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#263: FILE: include/linux/genetic.h:93:
+^Ilong^I ^I^Imutation_rate;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#264: FILE: include/linux/genetic.h:94:
+^Iunsigned long ^I^Inum_mutations;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: include/linux/genetic.h:96:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: include/linux/genetic.h:96:
+    $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#267: FILE: include/linux/genetic.h:97:
+^Igenetic_child_t ^I**child_ranking;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: include/linux/genetic.h:98:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#269: FILE: include/linux/genetic.h:99:
+^Ivoid ^I^I^I(*natural_selection)(struct phenotype_s *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct phenotype_s *' should also have an identifier name
#269: FILE: include/linux/genetic.h:99:
+	void 			(*natural_selection)(struct phenotype_s *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: include/linux/genetic.h:100:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: include/linux/genetic.h:100:
+    $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#272: FILE: include/linux/genetic.h:102:
+	/* This UID is bitmap comprised of other phenotypes that contribute
+	   to the genes */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#272: FILE: include/linux/genetic.h:102:
+	   to the genes */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: include/linux/genetic.h:103:
+^Iunsigned long^I^Iuid;^I       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: include/linux/genetic.h:108:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#284: FILE: include/linux/genetic.h:114:
+	unsigned long		debug_size;	/* number of longs in
+						   debug history */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#284: FILE: include/linux/genetic.h:114:
+						   debug history */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: include/linux/genetic.h:117:
+#endif^I$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#290: FILE: include/linux/genetic.h:120:
+typedef struct phenotype_s phenotype_t;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#293: FILE: include/linux/genetic.h:123:
+^Ichar ^I^I^I*name;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#300: FILE: include/linux/genetic.h:130:
+^Iunsigned long ^I^Inum_children;^I^I  /* Must be power of 2 */$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#308: FILE: include/linux/genetic.h:138:
+typedef struct genetic_s genetic_t;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#311: FILE: include/linux/genetic.h:141:
+	void			(*create_child)(genetic_child_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#312: FILE: include/linux/genetic.h:142:
+	void			(*set_child_genes)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#313: FILE: include/linux/genetic.h:143:
+	void			(*calc_fitness)(genetic_child_t *);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#314: FILE: include/linux/genetic.h:144:
+^Ivoid ^I^I^I(*combine_genes)(genetic_child_t *, genetic_child_t *,$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#314: FILE: include/linux/genetic.h:144:
+	void 			(*combine_genes)(genetic_child_t *, genetic_child_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#314: FILE: include/linux/genetic.h:144:
+	void 			(*combine_genes)(genetic_child_t *, genetic_child_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#314: FILE: include/linux/genetic.h:144:
+	void 			(*combine_genes)(genetic_child_t *, genetic_child_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#316: FILE: include/linux/genetic.h:146:
+	void			(*mutate_child)(genetic_child_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'phenotype_t *' should also have an identifier name
#317: FILE: include/linux/genetic.h:147:
+	void			(*calc_post_fitness)(phenotype_t *); /* Fitness routine used when

WARNING:FUNCTION_ARGUMENTS: function definition argument 'phenotype_t *' should also have an identifier name
#322: FILE: include/linux/genetic.h:152:
+	void			(*take_snapshot)(phenotype_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'phenotype_t *' should also have an identifier name
#323: FILE: include/linux/genetic.h:153:
+	void			(*shift_mutation_rate)(phenotype_t *);

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#327: FILE: include/linux/genetic.h:157:
+int __init genetic_init(genetic_t ** in_genetic, unsigned long num_children,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#329: FILE: include/linux/genetic.h:159:
+			char * name);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#330: FILE: include/linux/genetic.h:160:
+int __init genetic_register_phenotype(genetic_t * genetic, struct genetic_ops * ops,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#330: FILE: include/linux/genetic.h:160:
+int __init genetic_register_phenotype(genetic_t * genetic, struct genetic_ops * ops,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#331: FILE: include/linux/genetic.h:161:
+				      unsigned long num_children, char * name,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#333: FILE: include/linux/genetic.h:163:
+void __init genetic_start(genetic_t * genetic);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#336: FILE: include/linux/genetic.h:166:
+void genetic_generic_mutate_child(genetic_child_t * child);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#337: FILE: include/linux/genetic.h:167:
+void genetic_generic_iterative_mutate_gene(genetic_child_t * child, long gene_num);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#338: FILE: include/linux/genetic.h:168:
+void genetic_generic_combine_genes(genetic_child_t * parent_a,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#339: FILE: include/linux/genetic.h:169:
+				   genetic_child_t * parent_b,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#340: FILE: include/linux/genetic.h:170:
+				   genetic_child_t * child);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#341: FILE: include/linux/genetic.h:171:
+void genetic_create_child_spread(genetic_child_t * child, unsigned long num_children);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#342: FILE: include/linux/genetic.h:172:
+void genetic_create_child_defaults(genetic_child_t * child);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#343: FILE: include/linux/genetic.h:173:
+void genetic_general_shift_mutation_rate(phenotype_t * in_pt);

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: include/linux/genetic.h:179:
+        *rem = *n % div;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: include/linux/genetic.h:179:
+        *rem = *n % div;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: include/linux/genetic.h:180:
+        *n /= div;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: include/linux/genetic.h:180:
+        *n /= div;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#355: FILE: include/linux/genetic.h:185:
+static inline void divl(int32_t high, int32_t low,

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: include/linux/genetic.h:186:
+                        int32_t div,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: include/linux/genetic.h:186:
+                        int32_t div,$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#356: FILE: include/linux/genetic.h:186:
+                        int32_t div,

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: include/linux/genetic.h:187:
+                        int32_t *q, int32_t *r)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: include/linux/genetic.h:187:
+                        int32_t *q, int32_t *r)$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#357: FILE: include/linux/genetic.h:187:
+                        int32_t *q, int32_t *r)

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: include/linux/genetic.h:189:
+        int64_t n = (u_int64_t)high << 32 | low;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: include/linux/genetic.h:189:
+        int64_t n = (u_int64_t)high << 32 | low;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#359: FILE: include/linux/genetic.h:189:
+        int64_t n = (u_int64_t)high << 32 | low;

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: include/linux/genetic.h:190:
+        int64_t d = (u_int64_t)div << 31;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: include/linux/genetic.h:190:
+        int64_t d = (u_int64_t)div << 31;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#360: FILE: include/linux/genetic.h:190:
+        int64_t d = (u_int64_t)div << 31;

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: include/linux/genetic.h:191:
+        int32_t q1 = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: include/linux/genetic.h:191:
+        int32_t q1 = 0;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#361: FILE: include/linux/genetic.h:191:
+        int32_t q1 = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: include/linux/genetic.h:192:
+        int c = 32;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: include/linux/genetic.h:192:
+        int c = 32;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: include/linux/genetic.h:193:
+        while (n > 0xffffffff) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#363: FILE: include/linux/genetic.h:193:
+        int c = 32;
+        while (n > 0xffffffff) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: include/linux/genetic.h:193:
+        while (n > 0xffffffff) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#364: FILE: include/linux/genetic.h:194:
+                q1 <<= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: include/linux/genetic.h:194:
+                q1 <<= 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: include/linux/genetic.h:195:
+                if (n >= d) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: include/linux/genetic.h:195:
+                if (n >= d) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#366: FILE: include/linux/genetic.h:196:
+                        n -= d;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: include/linux/genetic.h:196:
+                        n -= d;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: include/linux/genetic.h:197:
+                        q1 |= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: include/linux/genetic.h:197:
+                        q1 |= 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#368: FILE: include/linux/genetic.h:198:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: include/linux/genetic.h:198:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: include/linux/genetic.h:199:
+                d >>= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: include/linux/genetic.h:199:
+                d >>= 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: include/linux/genetic.h:200:
+                c--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: include/linux/genetic.h:200:
+                c--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: include/linux/genetic.h:201:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: include/linux/genetic.h:201:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: include/linux/genetic.h:202:
+        q1 <<= c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: include/linux/genetic.h:202:
+        q1 <<= c;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#373: FILE: include/linux/genetic.h:203:
+        if (n) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: include/linux/genetic.h:203:
+        if (n) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: include/linux/genetic.h:204:
+                low = n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: include/linux/genetic.h:204:
+                low = n;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: include/linux/genetic.h:205:
+                *q = q1 | (low / div);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: include/linux/genetic.h:205:
+                *q = q1 | (low / div);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: include/linux/genetic.h:206:
+                *r = low % div;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: include/linux/genetic.h:206:
+                *r = low % div;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: include/linux/genetic.h:207:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: include/linux/genetic.h:207:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: include/linux/genetic.h:208:
+                *r = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: include/linux/genetic.h:208:
+                *r = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: include/linux/genetic.h:209:
+                *q = q1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: include/linux/genetic.h:209:
+                *q = q1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: include/linux/genetic.h:210:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: include/linux/genetic.h:210:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: include/linux/genetic.h:211:
+        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: include/linux/genetic.h:211:
+        return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: include/linux/genetic.h:216:
+        int32_t low, high;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: include/linux/genetic.h:216:
+        int32_t low, high;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#386: FILE: include/linux/genetic.h:216:
+        int32_t low, high;

ERROR:CODE_INDENT: code indent should use tabs where possible
#387: FILE: include/linux/genetic.h:217:
+        low = *n & 0xffffffff;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#387: FILE: include/linux/genetic.h:217:
+        int32_t low, high;
+        low = *n & 0xffffffff;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: include/linux/genetic.h:217:
+        low = *n & 0xffffffff;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: include/linux/genetic.h:218:
+        high = *n >> 32;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: include/linux/genetic.h:218:
+        high = *n >> 32;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: include/linux/genetic.h:219:
+        if (high) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: include/linux/genetic.h:219:
+        if (high) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: include/linux/genetic.h:220:
+                int32_t high1 = high % div;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: include/linux/genetic.h:220:
+                int32_t high1 = high % div;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#390: FILE: include/linux/genetic.h:220:
+                int32_t high1 = high % div;

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: include/linux/genetic.h:221:
+                int32_t low1 = low;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: include/linux/genetic.h:221:
+                int32_t low1 = low;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#391: FILE: include/linux/genetic.h:221:
+                int32_t low1 = low;

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: include/linux/genetic.h:222:
+                high /= div;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#392: FILE: include/linux/genetic.h:222:
+                int32_t low1 = low;
+                high /= div;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: include/linux/genetic.h:222:
+                high /= div;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: include/linux/genetic.h:223:
+                divl(high1, low1, div, &low, (int32_t *)rem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: include/linux/genetic.h:223:
+                divl(high1, low1, div, &low, (int32_t *)rem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: include/linux/genetic.h:224:
+                *n = (int64_t)high << 32 | low;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: include/linux/genetic.h:224:
+                *n = (int64_t)high << 32 | low;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: include/linux/genetic.h:225:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: include/linux/genetic.h:225:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: include/linux/genetic.h:226:
+                *n = low / div;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: include/linux/genetic.h:226:
+                *n = low / div;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: include/linux/genetic.h:227:
+                *rem = low % div;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: include/linux/genetic.h:227:
+                *rem = low % div;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: include/linux/genetic.h:228:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: include/linux/genetic.h:228:
+        }$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#410: FILE: lib/Kconfig:33:
+config GENETIC_LIB
+	bool "Genetic Library"
+	help
+	  This option will build in a genetic library that will tweak
+	  kernel parameters autonomically to improve performance.
+
 #
 # compression support is select'ed if needed
 #

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#434: FILE: lib/genetic.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#449: FILE: lib/genetic.c:16:
+ * $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#466: FILE: lib/genetic.c:33:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/string.h> instead of <asm/string.h>
#467: FILE: lib/genetic.c:34:
+#include <asm/string.h>

WARNING:INCLUDE_LINUX: Use #include <linux/bug.h> instead of <asm/bug.h>
#468: FILE: lib/genetic.c:35:
+#include <asm/bug.h>

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#480: FILE: lib/genetic.c:47:
+static void genetic_run_child(genetic_t * genetic);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#481: FILE: lib/genetic.c:48:
+static void genetic_new_generation(genetic_t * genetic);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#483: FILE: lib/genetic.c:50:
+void genetic_switch_child(unsigned long data);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#484: FILE: lib/genetic.c:51:
+struct proc_dir_entry * genetic_root_dir = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#484: FILE: lib/genetic.c:51:
+struct proc_dir_entry * genetic_root_dir = 0;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#486: FILE: lib/genetic.c:53:
+extern int genetic_read_proc(char *page, char **start, off_t off,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: lib/genetic.c:54:
+extern int genetic_read_proc(char *page, char **start, off_t off,
+		      int count, int *eof, void *data);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#488: FILE: lib/genetic.c:55:
+extern int genetic_phenotype_read_proc(char *page, char **start, off_t off,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#489: FILE: lib/genetic.c:56:
+extern int genetic_phenotype_read_proc(char *page, char **start, off_t off,
+		      int count, int *eof, void *data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: lib/genetic.c:60:
+extern int genetic_debug_read_proc(char *page, char **start, off_t off,
+		      int count, int *eof, void *data);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#496: FILE: lib/genetic.c:63:
+
+

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#497: FILE: lib/genetic.c:64:
+int __init genetic_init(genetic_t ** in_genetic, unsigned long num_children,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#499: FILE: lib/genetic.c:66:
+			char * name)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: lib/genetic.c:68:
+    struct proc_dir_entry *entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: lib/genetic.c:69:
+    genetic_t * genetic;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#502: FILE: lib/genetic.c:69:
+    genetic_t * genetic;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: lib/genetic.c:71:
+    if (!genetic_lib_enabled)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#504: FILE: lib/genetic.c:71:
+    if (!genetic_lib_enabled)
+	    return 0;

WARNING:TABSTOP: Statements should start on a tabstop
#505: FILE: lib/genetic.c:72:
+	    return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: lib/genetic.c:74:
+    printk(KERN_INFO "Initializing Genetic Library - version %s\n", genetic_lib_version);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#507: FILE: lib/genetic.c:74:
+    printk(KERN_INFO "Initializing Genetic Library - version %s\n", genetic_lib_version);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: lib/genetic.c:76:
+    genetic = (genetic_t *)kmalloc(sizeof(genetic_t), GFP_KERNEL);$

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#509: FILE: lib/genetic.c:76:
+    genetic = (genetic_t *)kmalloc(sizeof(genetic_t), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: lib/genetic.c:77:
+    if (!genetic) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#510: FILE: lib/genetic.c:77:
+    if (!genetic) {
+	    printk(KERN_ERR "genetic_init: not enough memory\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#511: FILE: lib/genetic.c:78:
+	    printk(KERN_ERR "genetic_init: not enough memory\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'genetic_init', this function's name, in a string
#511: FILE: lib/genetic.c:78:
+	    printk(KERN_ERR "genetic_init: not enough memory\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#511: FILE: lib/genetic.c:78:
+    if (!genetic) {
+	    printk(KERN_ERR "genetic_init: not enough memory\n");

WARNING:TABSTOP: Statements should start on a tabstop
#512: FILE: lib/genetic.c:79:
+	    return -ENOMEM;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: lib/genetic.c:80:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: lib/genetic.c:82:
+    *in_genetic = genetic;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: lib/genetic.c:84:
+    genetic->name = (char *)kmalloc(strlen(name), GFP_KERNEL);$

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#517: FILE: lib/genetic.c:84:
+    genetic->name = (char *)kmalloc(strlen(name), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: lib/genetic.c:85:
+    if (!genetic->name) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#518: FILE: lib/genetic.c:85:
+    if (!genetic->name) {
+	    printk(KERN_ERR "genetic_init: not enough memory\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#519: FILE: lib/genetic.c:86:
+	    printk(KERN_ERR "genetic_init: not enough memory\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'genetic_init', this function's name, in a string
#519: FILE: lib/genetic.c:86:
+	    printk(KERN_ERR "genetic_init: not enough memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#519: FILE: lib/genetic.c:86:
+    if (!genetic->name) {
+	    printk(KERN_ERR "genetic_init: not enough memory\n");

WARNING:TABSTOP: Statements should start on a tabstop
#521: FILE: lib/genetic.c:88:
+	    return -ENOMEM;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: lib/genetic.c:89:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: lib/genetic.c:92:
+    strcpy(genetic->name, name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: lib/genetic.c:94:
+    genetic->num_children = num_children;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: lib/genetic.c:95:
+    genetic->child_life_time = child_life_time;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: lib/genetic.c:97:
+    genetic->generation_number = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: lib/genetic.c:98:
+    genetic->child_number = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: lib/genetic.c:101:
+    init_timer(&genetic->timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: lib/genetic.c:102:
+    genetic->timer.function = genetic_switch_child;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: lib/genetic.c:103:
+    genetic->timer.data = (unsigned long)genetic;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: lib/genetic.c:107:
+    if (!genetic_root_dir)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#540: FILE: lib/genetic.c:107:
+    if (!genetic_root_dir)
+	    genetic_root_dir = proc_mkdir("genetic", 0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: lib/genetic.c:110:
+    genetic->dir = proc_mkdir(name, genetic_root_dir);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: lib/genetic.c:112:
+    entry = create_proc_entry("stats", 0644, genetic->dir);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: lib/genetic.c:114:
+    if (entry) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#547: FILE: lib/genetic.c:114:
+    if (entry) {
+	    entry->nlink = 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: lib/genetic.c:118:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: lib/genetic.c:121:
+    genetic->debug_dir = proc_mkdir("debug", genetic->dir);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#557: FILE: lib/genetic.c:124:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: lib/genetic.c:127:
+    INIT_LIST_HEAD(&genetic->phenotype);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#561: FILE: lib/genetic.c:128:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: lib/genetic.c:128:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: lib/genetic.c:129:
+    return 0;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#565: FILE: lib/genetic.c:132:
+int __init genetic_register_phenotype(genetic_t * genetic, struct genetic_ops * ops,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#565: FILE: lib/genetic.c:132:
+int __init genetic_register_phenotype(genetic_t * genetic, struct genetic_ops * ops,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#566: FILE: lib/genetic.c:133:
+				      unsigned long num_children, char * name,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#570: FILE: lib/genetic.c:137:
+	phenotype_t * pt;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#572: FILE: lib/genetic.c:139:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#576: FILE: lib/genetic.c:143:
+	printk(KERN_INFO "Initializing %s's phenotype %s\n", genetic->name, name);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#578: FILE: lib/genetic.c:145:
+	pt = (phenotype_t *)kmalloc(sizeof(phenotype_t), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#580: FILE: lib/genetic.c:147:
+		printk(KERN_ERR "genetic_register_phenotype: not enough memory\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'genetic_register_phenotype', this function's name, in a string
#580: FILE: lib/genetic.c:147:
+		printk(KERN_ERR "genetic_register_phenotype: not enough memory\n");

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#584: FILE: lib/genetic.c:151:
+	pt->name = (char *)kmalloc(strlen(name), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#586: FILE: lib/genetic.c:153:
+		printk(KERN_ERR "genetic_register_phenotype: not enough memory\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'genetic_register_phenotype', this function's name, in a string
#586: FILE: lib/genetic.c:153:
+		printk(KERN_ERR "genetic_register_phenotype: not enough memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#586: FILE: lib/genetic.c:153:
+	if (!pt->name) {
+		printk(KERN_ERR "genetic_register_phenotype: not enough memory\n");

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#591: FILE: lib/genetic.c:158:
+	pt->child_ranking = (genetic_child_t **)kmalloc(num_children * sizeof(genetic_child_t *), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#591: FILE: lib/genetic.c:158:
+	pt->child_ranking = (genetic_child_t **)kmalloc(num_children * sizeof(genetic_child_t *), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#593: FILE: lib/genetic.c:160:
+		printk(KERN_ERR "genetic_register_phenotype: not enough memory\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'genetic_register_phenotype', this function's name, in a string
#593: FILE: lib/genetic.c:160:
+		printk(KERN_ERR "genetic_register_phenotype: not enough memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#593: FILE: lib/genetic.c:160:
+	if (!pt->child_ranking) {
+		printk(KERN_ERR "genetic_register_phenotype: not enough memory\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#600: FILE: lib/genetic.c:167:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: lib/genetic.c:167:
+    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#605: FILE: lib/genetic.c:172:
+^Ipt->finished_queue = &pt->children_queue[1];    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#606: FILE: lib/genetic.c:173:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#609: FILE: lib/genetic.c:176:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#614: FILE: lib/genetic.c:181:
+^Ipt->last_gen_avg_fitness = 0;    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#616: FILE: lib/genetic.c:183:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#620: FILE: lib/genetic.c:187:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#625: FILE: lib/genetic.c:192:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#634: FILE: lib/genetic.c:201:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#635: FILE: lib/genetic.c:202:
+#endif^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#640: FILE: lib/genetic.c:207:
+	/* create array for history.  The +2 on num_genes is for the
+	   fitness and child id */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#640: FILE: lib/genetic.c:207:
+	   fitness and child id */

CHECK:SPACING: No space is necessary after a cast
#643: FILE: lib/genetic.c:210:
+	pt->debug_history = (long long *) kmalloc(pt->debug_size * sizeof(long long), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#643: FILE: lib/genetic.c:210:
+	pt->debug_history = (long long *) kmalloc(pt->debug_size * sizeof(long long), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#643: FILE: lib/genetic.c:210:
+	pt->debug_history = (long long *) kmalloc(pt->debug_size * sizeof(long long), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#657: FILE: lib/genetic.c:224:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#659: FILE: lib/genetic.c:226:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#663: FILE: lib/genetic.c:230:
+void __init genetic_start(genetic_t * genetic)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#667: FILE: lib/genetic.c:234:
+^I$

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#669: FILE: lib/genetic.c:236:
+	printk(KERN_INFO "%ld children started in %s genetic library\n", genetic->num_children, genetic->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#669: FILE: lib/genetic.c:236:
+	printk(KERN_INFO "%ld children started in %s genetic library\n", genetic->num_children, genetic->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#671: FILE: lib/genetic.c:238:
+^I    $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#672: FILE: lib/genetic.c:239:
+	    
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#675: FILE: lib/genetic.c:242:
+/* create some children, it is up to the lib user to come up w/ a good
+   distro of genes for it's children */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#675: FILE: lib/genetic.c:242:
+   distro of genes for it's children */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#676: FILE: lib/genetic.c:243:
+static int genetic_create_children(phenotype_t * pt)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#678: FILE: lib/genetic.c:245:
+    unsigned long i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#679: FILE: lib/genetic.c:246:
+    genetic_child_t * child;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#679: FILE: lib/genetic.c:246:
+    genetic_child_t * child;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: lib/genetic.c:248:
+    for (i = 0; i < pt->num_children; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#681: FILE: lib/genetic.c:248:
+    for (i = 0; i < pt->num_children; i++) {
+	    pt->child_ranking[i] = (genetic_child_t *)kmalloc(sizeof(genetic_child_t), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#682: FILE: lib/genetic.c:249:
+	    pt->child_ranking[i] = (genetic_child_t *)kmalloc(sizeof(genetic_child_t), GFP_KERNEL);

WARNING:TABSTOP: Statements should start on a tabstop
#683: FILE: lib/genetic.c:250:
+	    if (!pt->child_ranking[i]) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#683: FILE: lib/genetic.c:250:
+	    if (!pt->child_ranking[i]) {
+		    printk(KERN_ERR "genetic_create_child: not enough memory\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#684: FILE: lib/genetic.c:251:
+		    printk(KERN_ERR "genetic_create_child: not enough memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#684: FILE: lib/genetic.c:251:
+	    if (!pt->child_ranking[i]) {
+		    printk(KERN_ERR "genetic_create_child: not enough memory\n");

WARNING:TABSTOP: Statements should start on a tabstop
#685: FILE: lib/genetic.c:252:
+		    for (i = i - 1; i >= 0; i--)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 28)
#685: FILE: lib/genetic.c:252:
+		    for (i = i - 1; i >= 0; i--)
+			    kfree(pt->child_ranking[i]);

WARNING:TABSTOP: Statements should start on a tabstop
#688: FILE: lib/genetic.c:255:
+		    return -ENOMEM;

WARNING:TABSTOP: Statements should start on a tabstop
#689: FILE: lib/genetic.c:256:
+	    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: lib/genetic.c:265:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: lib/genetic.c:267:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#706: FILE: lib/genetic.c:273:
+    genetic_t * genetic = (genetic_t *)data;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#706: FILE: lib/genetic.c:273:
+    genetic_t * genetic = (genetic_t *)data;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: lib/genetic.c:274:
+    genetic_child_t * child;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#707: FILE: lib/genetic.c:274:
+    genetic_child_t * child;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: lib/genetic.c:276:
+    struct list_head * p;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#709: FILE: lib/genetic.c:276:
+    struct list_head * p;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: lib/genetic.c:277:
+    phenotype_t * pt;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#710: FILE: lib/genetic.c:277:
+    phenotype_t * pt;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: lib/genetic.c:279:
+    int new_generation = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: lib/genetic.c:281:
+    list_for_each(p, &genetic->phenotype) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#716: FILE: lib/genetic.c:283:
+^I    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#723: FILE: lib/genetic.c:290:
+^I    if (pt->ops->calc_fitness) $

WARNING:TABSTOP: Statements should start on a tabstop
#723: FILE: lib/genetic.c:290:
+	    if (pt->ops->calc_fitness) 

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#723: FILE: lib/genetic.c:290:
+	    if (pt->ops->calc_fitness) 
+		    pt->ops->calc_fitness(child);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#729: FILE: lib/genetic.c:296:
+^I    if (list_empty(pt->run_queue)) $

WARNING:TABSTOP: Statements should start on a tabstop
#729: FILE: lib/genetic.c:296:
+	    if (list_empty(pt->run_queue)) 

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#729: FILE: lib/genetic.c:296:
+	    if (list_empty(pt->run_queue)) 
+		    new_generation = 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: lib/genetic.c:298:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: lib/genetic.c:300:
+    genetic->child_number++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#735: FILE: lib/genetic.c:302:
+    if (new_generation)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#735: FILE: lib/genetic.c:302:
+    if (new_generation)
+	    genetic_new_generation(genetic);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#738: FILE: lib/genetic.c:305:
+    genetic_run_child(genetic);$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#740: FILE: lib/genetic.c:307:
+
+}

WARNING:TYPO_SPELLING: 'childs' may be misspelled - perhaps 'children'?
#742: FILE: lib/genetic.c:309:
+/* Set the childs genes for run */
            ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#743: FILE: lib/genetic.c:310:
+void genetic_run_child(genetic_t * genetic)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: lib/genetic.c:312:
+    struct list_head * p;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#745: FILE: lib/genetic.c:312:
+    struct list_head * p;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#746: FILE: lib/genetic.c:313:
+    phenotype_t * pt;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#746: FILE: lib/genetic.c:313:
+    phenotype_t * pt;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#748: FILE: lib/genetic.c:315:
+    genetic_child_t * child;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#748: FILE: lib/genetic.c:315:
+    genetic_child_t * child;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#749: FILE: lib/genetic.c:316:
+    void * genes;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#749: FILE: lib/genetic.c:316:
+    void * genes;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#751: FILE: lib/genetic.c:318:
+    list_for_each(p, &genetic->phenotype) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#753: FILE: lib/genetic.c:320:
+^I    $

WARNING:TABSTOP: Statements should start on a tabstop
#758: FILE: lib/genetic.c:325:
+	    if (pt->ops->set_child_genes)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#758: FILE: lib/genetic.c:325:
+	    if (pt->ops->set_child_genes)
+		    pt->ops->set_child_genes(genes);

WARNING:TABSTOP: Statements should start on a tabstop
#761: FILE: lib/genetic.c:328:
+	    if (pt->ops->take_snapshot)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#761: FILE: lib/genetic.c:328:
+	    if (pt->ops->take_snapshot)
+		    pt->ops->take_snapshot(pt);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#763: FILE: lib/genetic.c:330:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#766: FILE: lib/genetic.c:333:
+    genetic->timer.expires = jiffies + genetic->child_life_time;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#767: FILE: lib/genetic.c:334:
+    add_timer(&genetic->timer);$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#769: FILE: lib/genetic.c:336:
+
+}

WARNING:TYPO_SPELLING: 'perfomers' may be misspelled - perhaps 'performers'?
#773: FILE: lib/genetic.c:340:
+ * generation and keep the top half perfomers
                                     ^^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#778: FILE: lib/genetic.c:345:
+static void genetic_ns_top_parents(phenotype_t * pt)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#780: FILE: lib/genetic.c:347:
+    unsigned long i,j,k = 0;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#780: FILE: lib/genetic.c:347:
+    unsigned long i,j,k = 0;
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#780: FILE: lib/genetic.c:347:
+    unsigned long i,j,k = 0;
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#781: FILE: lib/genetic.c:348:
+    unsigned long num_children = pt->num_children;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#782: FILE: lib/genetic.c:349:
+    unsigned long cutoff = num_children - pt->natural_selection_cutoff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: lib/genetic.c:351:
+    for (i = cutoff, j = num_children - 1; i < j; i++, j--, k += 2) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#789: FILE: lib/genetic.c:356:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#793: FILE: lib/genetic.c:360:
+				    pt->child_ranking[k+1]);
 				                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: lib/genetic.c:361:
+    }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#798: FILE: lib/genetic.c:365:
+/* This natural selection routine just has top parents populating
+   bottom performers. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#798: FILE: lib/genetic.c:365:
+   bottom performers. */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#799: FILE: lib/genetic.c:366:
+static void genetic_ns_award_top_parents(phenotype_t * pt)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#804: FILE: lib/genetic.c:371:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#812: FILE: lib/genetic.c:379:
+					    pt->child_ranking[i+1]);
 					                       ^

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#816: FILE: lib/genetic.c:383:
+static inline void genetic_swap(genetic_child_t ** a, genetic_child_t ** b)

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#816: FILE: lib/genetic.c:383:
+static inline void genetic_swap(genetic_child_t ** a, genetic_child_t ** b)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: lib/genetic.c:385:
+    genetic_child_t * tmp = *a;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#818: FILE: lib/genetic.c:385:
+    genetic_child_t * tmp = *a;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#820: FILE: lib/genetic.c:387:
+    *a = *b;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: lib/genetic.c:388:
+    *b = tmp;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#826: FILE: lib/genetic.c:393:
+static void genetic_split_performers(phenotype_t * pt)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#828: FILE: lib/genetic.c:395:
+    int i, j;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#830: FILE: lib/genetic.c:397:
+    for (i = pt->num_children; i > 1; i--)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#831: FILE: lib/genetic.c:398:
+	for (j = 0; j < i - 1; j++)
+	    if (pt->child_ranking[j]->fitness > pt->child_ranking[j+1]->fitness) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#832: FILE: lib/genetic.c:399:
+^I    if (pt->child_ranking[j]->fitness > pt->child_ranking[j+1]->fitness) $

WARNING:TABSTOP: Statements should start on a tabstop
#832: FILE: lib/genetic.c:399:
+	    if (pt->child_ranking[j]->fitness > pt->child_ranking[j+1]->fitness) 

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#832: FILE: lib/genetic.c:399:
+	    if (pt->child_ranking[j]->fitness > pt->child_ranking[j+1]->fitness) 
 	                                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#833: FILE: lib/genetic.c:400:
+		genetic_swap(&pt->child_ranking[j], &pt->child_ranking[j+1]);
 		                                                        ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#836: FILE: lib/genetic.c:403:
+static void genetic_mutate(phenotype_t * pt)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#838: FILE: lib/genetic.c:405:
+    long child_entry = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#839: FILE: lib/genetic.c:406:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#841: FILE: lib/genetic.c:408:
+    if (!pt->num_genes)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#841: FILE: lib/genetic.c:408:
+    if (!pt->num_genes)
+	    return;

WARNING:TABSTOP: Statements should start on a tabstop
#842: FILE: lib/genetic.c:409:
+	    return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#844: FILE: lib/genetic.c:411:
+    for (i = 0; i < pt->num_mutations; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#849: FILE: lib/genetic.c:416:
+    }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#853: FILE: lib/genetic.c:420:
+/* XXX This will either aid in handling new workloads, or send us on a
+   downward spiral */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#853: FILE: lib/genetic.c:420:
+   downward spiral */

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#854: FILE: lib/genetic.c:421:
+static void genetic_shift_mutation_rate(phenotype_t * pt, long long prev_gen_avg_fitness, long long avg_fitness)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#854: FILE: lib/genetic.c:421:
+static void genetic_shift_mutation_rate(phenotype_t * pt, long long prev_gen_avg_fitness, long long avg_fitness)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#855: FILE: lib/genetic.c:422:
+{ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#856: FILE: lib/genetic.c:423:
+    if (mutation_rate_change && pt->genetic->generation_number > 1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#856: FILE: lib/genetic.c:423:
+    if (mutation_rate_change && pt->genetic->generation_number > 1) {
[...]
+	    if (pt->ops->shift_mutation_rate) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#857: FILE: lib/genetic.c:424:
+    if (mutation_rate_change && pt->genetic->generation_number > 1) {
+

WARNING:TABSTOP: Statements should start on a tabstop
#858: FILE: lib/genetic.c:425:
+	    if (pt->ops->shift_mutation_rate) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#858: FILE: lib/genetic.c:425:
+	    if (pt->ops->shift_mutation_rate) {
+		    pt->ops->shift_mutation_rate(pt);

WARNING:TABSTOP: Statements should start on a tabstop
#860: FILE: lib/genetic.c:427:
+	    } else {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#860: FILE: lib/genetic.c:427:
+	    } else {
[...]
+		    if (avg_fitness > prev_gen_avg_fitness)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#861: FILE: lib/genetic.c:428:
+	    } else {
+

WARNING:TABSTOP: Statements should start on a tabstop
#862: FILE: lib/genetic.c:429:
+		    if (avg_fitness > prev_gen_avg_fitness)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 28)
#862: FILE: lib/genetic.c:429:
+		    if (avg_fitness > prev_gen_avg_fitness)
+			    pt->mutation_rate -= mutation_rate_change;

WARNING:TABSTOP: Statements should start on a tabstop
#864: FILE: lib/genetic.c:431:
+		    else if (avg_fitness < prev_gen_avg_fitness)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 28)
#864: FILE: lib/genetic.c:431:
+		    else if (avg_fitness < prev_gen_avg_fitness)
+			    pt->mutation_rate += mutation_rate_change;

WARNING:TABSTOP: Statements should start on a tabstop
#867: FILE: lib/genetic.c:434:
+		    if (pt->mutation_rate > GENETIC_MAX_MUTATION_RATE)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 28)
#867: FILE: lib/genetic.c:434:
+		    if (pt->mutation_rate > GENETIC_MAX_MUTATION_RATE)
+			    pt->mutation_rate = GENETIC_MAX_MUTATION_RATE;

WARNING:TABSTOP: Statements should start on a tabstop
#869: FILE: lib/genetic.c:436:
+		    else if (pt->mutation_rate < GENETIC_MIN_MUTATION_RATE)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 28)
#869: FILE: lib/genetic.c:436:
+		    else if (pt->mutation_rate < GENETIC_MIN_MUTATION_RATE)
+			    pt->mutation_rate = GENETIC_MIN_MUTATION_RATE;

WARNING:TABSTOP: Statements should start on a tabstop
#871: FILE: lib/genetic.c:438:
+	    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#872: FILE: lib/genetic.c:439:
+    }$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#875: FILE: lib/genetic.c:442:
+void genetic_general_shift_mutation_rate(phenotype_t * in_pt)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#877: FILE: lib/genetic.c:444:
+	struct list_head * p;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#878: FILE: lib/genetic.c:445:
+	phenotype_t * pt;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#890: FILE: lib/genetic.c:457:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#892: FILE: lib/genetic.c:459:
+	/* If we are a general phenotype that is made up of other
+	   phenotypes then we take the average */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#892: FILE: lib/genetic.c:459:
+	   phenotypes then we take the average */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#895: FILE: lib/genetic.c:462:
+^Ielse $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#899: FILE: lib/genetic.c:466:
+static void genetic_calc_stats(phenotype_t * pt)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#908: FILE: lib/genetic.c:475:
+	 * so far */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#909: FILE: lib/genetic.c:476:
+^Ifor (i = 0; i < pt->num_children; i++) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#920: FILE: lib/genetic.c:487:
+        tmp_fitness = pt->last_gen_avg_fitness - pt->avg_fitness;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: lib/genetic.c:487:
+        tmp_fitness = pt->last_gen_avg_fitness - pt->avg_fitness;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#921: FILE: lib/genetic.c:488:
+        divll(&tmp_fitness, pt->genetic->generation_number, &dummy);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: lib/genetic.c:488:
+        divll(&tmp_fitness, pt->genetic->generation_number, &dummy);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#923: FILE: lib/genetic.c:490:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#927: FILE: lib/genetic.c:494:
+}    $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#927: FILE: lib/genetic.c:494:
+
+}    

ERROR:TRAILING_WHITESPACE: trailing whitespace
#930: FILE: lib/genetic.c:497:
+/* Stores attributes into an array in the following format $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#933: FILE: lib/genetic.c:500:
+ * call $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#935: FILE: lib/genetic.c:502:
+void dump_children(phenotype_t * pt)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#938: FILE: lib/genetic.c:505:
+	long * genes;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#946: FILE: lib/genetic.c:513:
+^I^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#947: FILE: lib/genetic.c:514:
+		for (j = 0; j < pt->child_ranking[i]->num_genes; j++) {
+			pt->debug_history[pt->debug_index++ % debug_size] = genes[j];
+		}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#953: FILE: lib/genetic.c:520:
+void dump_children(genetic_t * genetic) { return; }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#956: FILE: lib/genetic.c:523:
+void genetic_new_generation(genetic_t * genetic)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#958: FILE: lib/genetic.c:525:
+	struct list_head * tmp;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#960: FILE: lib/genetic.c:527:
+	struct list_head * p;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#961: FILE: lib/genetic.c:528:
+	phenotype_t * pt;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#967: FILE: lib/genetic.c:534:
+		/* Check to see if need to recalibrate fitness to take
+		   other phenotypes' rankings into account.  This

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#969: FILE: lib/genetic.c:536:
+		   have been ran. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#974: FILE: lib/genetic.c:541:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#988: FILE: lib/genetic.c:555:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#993: FILE: lib/genetic.c:560:
+^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#995: FILE: lib/genetic.c:562:
+		/* Move the new children still sitting in the finished queue to
+		   the run queue */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#995: FILE: lib/genetic.c:562:
+		   the run queue */

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1003: FILE: lib/genetic.c:570:
+
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1004: FILE: lib/genetic.c:571:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1008: FILE: lib/genetic.c:575:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1011: FILE: lib/genetic.c:578:
+void genetic_generic_random_mutate_gene(genetic_child_t * child, long gene_num)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1019: FILE: lib/genetic.c:586:
+    ^I/* create a mutation value */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1019: FILE: lib/genetic.c:586:
+    ^I/* create a mutation value */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1019: FILE: lib/genetic.c:586:
+    ^I/* create a mutation value */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1023: FILE: lib/genetic.c:590:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1027: FILE: lib/genetic.c:594:
+void genetic_generic_iterative_mutate_gene(genetic_child_t * child, long gene_num)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1036: FILE: lib/genetic.c:603:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1041: FILE: lib/genetic.c:608:
+    ^I/* get the % of change */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1041: FILE: lib/genetic.c:608:
+    ^I/* get the % of change */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1041: FILE: lib/genetic.c:608:
+    ^I/* get the % of change */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1046: FILE: lib/genetic.c:613:
+
+

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(long)100' could be '100L'
#1047: FILE: lib/genetic.c:614:
+	new_value = ((long)(change * range) / (long)100) + old_value;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1058: FILE: lib/genetic.c:625:
+/* This assumes that all genes are a unsigned long array of size
+   num_genes */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1058: FILE: lib/genetic.c:625:
+   num_genes */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1059: FILE: lib/genetic.c:626:
+void genetic_generic_mutate_child(genetic_child_t * child)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1066: FILE: lib/genetic.c:633:
+	if (gene_num < 0)
+	    gene_num = -gene_num;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1073: FILE: lib/genetic.c:640:
+^Ielse $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1077: FILE: lib/genetic.c:644:
+void genetic_create_child_defaults(genetic_child_t * child)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1080: FILE: lib/genetic.c:647:
+	unsigned long * genes = child->genes;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1081: FILE: lib/genetic.c:648:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1082: FILE: lib/genetic.c:649:
+	for (i = 0; i < child->num_genes; i++) {
+		genes[i] = child->gene_param[i].initial;
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1087: FILE: lib/genetic.c:654:
+void genetic_create_child_spread(genetic_child_t * child, unsigned long num_children)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1093: FILE: lib/genetic.c:660:
+^Ilong num_genes = child->num_genes; $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1094: FILE: lib/genetic.c:661:
+	unsigned long * genes = child->genes;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1095: FILE: lib/genetic.c:662:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1107: FILE: lib/genetic.c:674:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1110: FILE: lib/genetic.c:677:
+void genetic_generic_combine_genes(genetic_child_t * parent_a,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1111: FILE: lib/genetic.c:678:
+				   genetic_child_t * parent_b,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1112: FILE: lib/genetic.c:679:
+				   genetic_child_t * child)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1114: FILE: lib/genetic.c:681:
+	unsigned long * genes_a = (unsigned long *)parent_a->genes;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1115: FILE: lib/genetic.c:682:
+	unsigned long * genes_b = (unsigned long *)parent_b->genes;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1116: FILE: lib/genetic.c:683:
+	unsigned long * child_genes = (unsigned long *)child->genes;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1125: FILE: lib/genetic.c:692:
+^I^I$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1128: FILE: lib/genetic.c:695:
+			if (parent_selector & 1) {
[...]
+			} else {
[...]

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1148: FILE: lib/genetic.c:715:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1153: FILE: lib/genetic.c:720:
+	if (get_option(&str,&i)) {
 	                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1153: FILE: lib/genetic.c:720:
+	if (get_option(&str,&i)) {
 	                    ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1154: FILE: lib/genetic.c:721:
+	if (get_option(&str,&i)) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1159: FILE: lib/genetic.c:726:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1165: FILE: lib/genetic.c:732:
+
+}

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#1166: FILE: lib/genetic.c:733:
+__setup("genetic=", genetic_boot_setup);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#1167: FILE: lib/genetic.c:734:
+__setup("genetic_mutate_rate=", genetic_mutation_rate_change_setup);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000206800.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 184 errors, 299 warnings, 61 checks, 1089 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000206800.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
