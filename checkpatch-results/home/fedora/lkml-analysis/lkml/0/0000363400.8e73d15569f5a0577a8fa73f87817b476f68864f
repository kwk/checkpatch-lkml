WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
diff -u -r -N ../../linus/main/linux/drivers/input/mouse/Kconfig linux/drivers/input/mouse/Kconfig

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#53: FILE: drivers/input/mouse/Kconfig:31:
+config MOUSE_PS2_SYNAPTICS
+	bool "Synaptics TouchPad"
+	default n
+	depends on INPUT && INPUT_MOUSE && SERIO && MOUSE_PS2
+	---help---
+	  Say Y here if you have a Synaptics TouchPad connected to your system.
+	  This touchpad is found on many modern laptop computers.
+
+	  If unsure, say Y.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#86: FILE: drivers/input/mouse/psmouse.c:73:
+static char *psmouse_protocols[] = { "None", "PS/2", "PS2++", "PS2T++", "GenPS/2", "ImPS/2", "ImExPS/2", "Synaptics"};

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 16)
#110: FILE: drivers/input/mouse/psmouse.c:359:
        if (param[1] == 0x47) {
+		int type = PSMOUSE_PS2;

WARNING:LINE_SPACING: Missing a blank line after declarations
#118: FILE: drivers/input/mouse/psmouse.c:361:
+		int type = PSMOUSE_PS2;
+		psmouse->vendor = "Synaptics";

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#138: FILE: drivers/input/mouse/synaptics.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#177: FILE: drivers/input/mouse/synaptics.c:40:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#195: FILE: drivers/input/mouse/synaptics.c:58:
+		unsigned char d = (command >> i) & 3;
+		if (psmouse_command(psmouse, &d, PSMOUSE_CMD_SETRES))

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#248: FILE: drivers/input/mouse/synaptics.c:111:
+static int synaptics_model_id(struct psmouse *psmouse, unsigned long int *model_id)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#254: FILE: drivers/input/mouse/synaptics.c:117:
+	*model_id = (mi[0]<<16) | (mi[1]<<8) | mi[2];
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#254: FILE: drivers/input/mouse/synaptics.c:117:
+	*model_id = (mi[0]<<16) | (mi[1]<<8) | mi[2];
 	                                ^

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#262: FILE: drivers/input/mouse/synaptics.c:125:
+static int synaptics_capability(struct psmouse *psmouse, unsigned long int *capability)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#268: FILE: drivers/input/mouse/synaptics.c:131:
+	*capability = (cap[0]<<16) | (cap[1]<<8) | cap[2];
 	                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#268: FILE: drivers/input/mouse/synaptics.c:131:
+	*capability = (cap[0]<<16) | (cap[1]<<8) | cap[2];
 	                                    ^

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#278: FILE: drivers/input/mouse/synaptics.c:141:
+static int synaptics_identify(struct psmouse *psmouse, unsigned long int *ident)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#284: FILE: drivers/input/mouse/synaptics.c:147:
+	*ident = (id[0]<<16) | (id[1]<<8) | id[2];
 	               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#284: FILE: drivers/input/mouse/synaptics.c:147:
+	*ident = (id[0]<<16) | (id[1]<<8) | id[2];
 	                             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#299: FILE: drivers/input/mouse/synaptics.c:162:
+	printk(KERN_INFO "Synaptics Touchpad, model: %ld\n", SYN_ID_MODEL(priv->identity));

WARNING:TYPO_SPELLING: 'Firware' may be misspelled - perhaps 'Firmware'?
#300: FILE: drivers/input/mouse/synaptics.c:163:
+	printk(KERN_INFO " Firware: %ld.%ld\n", SYN_ID_MAJOR(priv->identity),
 	                   ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#300: FILE: drivers/input/mouse/synaptics.c:163:
+	printk(KERN_INFO " Firware: %ld.%ld\n", SYN_ID_MAJOR(priv->identity),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#304: FILE: drivers/input/mouse/synaptics.c:167:
+		printk(KERN_INFO " 180 degree mounted touchpad\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#306: FILE: drivers/input/mouse/synaptics.c:169:
+		printk(KERN_INFO " portrait touchpad\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#307: FILE: drivers/input/mouse/synaptics.c:170:
+	printk(KERN_INFO " Sensor: %ld\n", SYN_MODEL_SENSOR(priv->model_id));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#309: FILE: drivers/input/mouse/synaptics.c:172:
+		printk(KERN_INFO " new absolute packet format\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#311: FILE: drivers/input/mouse/synaptics.c:174:
+		printk(KERN_INFO " pen detection\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#314: FILE: drivers/input/mouse/synaptics.c:177:
+		printk(KERN_INFO " Touchpad has extended capability bits\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#316: FILE: drivers/input/mouse/synaptics.c:179:
+			printk(KERN_INFO " -> four buttons\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#318: FILE: drivers/input/mouse/synaptics.c:181:
+			printk(KERN_INFO " -> multifinger detection\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#320: FILE: drivers/input/mouse/synaptics.c:183:
+			printk(KERN_INFO " -> palm detection\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#330: FILE: drivers/input/mouse/synaptics.c:193:
+		printk(KERN_ERR "synaptics reset failed\n");

CHECK:SPACING: No space is necessary after a cast
#353: FILE: drivers/input/mouse/synaptics.c:216:
+	struct psmouse *psmouse = (void *) data;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#388: FILE: drivers/input/mouse/synaptics.c:251:
+	psmouse->private = priv = kmalloc(sizeof(struct synaptics_data), GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*priv)...) over kmalloc(sizeof(struct synaptics_data)...)
#388: FILE: drivers/input/mouse/synaptics.c:251:
+	psmouse->private = priv = kmalloc(sizeof(struct synaptics_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:CAMELCASE: Avoid CamelCase: <inSync>
#393: FILE: drivers/input/mouse/synaptics.c:256:
+	priv->inSync = 1;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#399: FILE: drivers/input/mouse/synaptics.c:262:
+		printk(KERN_ERR "Unable to query/initialize Synaptics hardware.\n");

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#433: FILE: drivers/input/mouse/synaptics.c:296:
+#define DIFF_TIME(a, b) (((a) > (b)) ? (a) - (b) : (b) - (a))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#433: FILE: drivers/input/mouse/synaptics.c:296:
+#define DIFF_TIME(a, b) (((a) > (b)) ? (a) - (b) : (b) - (a))

WARNING:NEW_TYPEDEFS: do not add new typedefs
#435: FILE: drivers/input/mouse/synaptics.c:298:
+typedef enum {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#464: FILE: drivers/input/mouse/synaptics.c:327:
+#define MOVE_HIST(a) ((priv->count_packet_finger-(a))%SYNAPTICS_MOVE_HISTORY)
                                                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#464: FILE: drivers/input/mouse/synaptics.c:327:
+#define MOVE_HIST(a) ((priv->count_packet_finger-(a))%SYNAPTICS_MOVE_HISTORY)
                                                      ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#557: FILE: drivers/input/mouse/synaptics.c:420:
+				hw->left = hw->right = 0;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hw->z > 200'
#582: FILE: drivers/input/mouse/synaptics.c:445:
+		if ((hw->z > 200) && (hw->w > 10))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hw->w > 10'
#582: FILE: drivers/input/mouse/synaptics.c:445:
+		if ((hw->z > 200) && (hw->w > 10))

WARNING:LINE_SPACING: Missing a blank line after declarations
#593: FILE: drivers/input/mouse/synaptics.c:456:
+		int safe_w = max_t(int, hw->w, priv->avg_w);
+		if (hw->w < 2)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#652: FILE: drivers/input/mouse/synaptics.c:515:
+		hw.up = hw.down = 0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#662: FILE: drivers/input/mouse/synaptics.c:525:
+		if (priv->tap) {
+			priv->drag = 1; /* drag gesture */
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#671: FILE: drivers/input/mouse/synaptics.c:534:
+		/* check if
+		   1. the tap is in tap_time

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#672: FILE: drivers/input/mouse/synaptics.c:535:
+		   2. the max movement is in tap_move or more than one finger is tapped */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#703: FILE: drivers/input/mouse/synaptics.c:566:
+^I^I^I^Icase 3: $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hw.w == 0'
#719: FILE: drivers/input/mouse/synaptics.c:582:
+		if ((hw.w == 0) && (priv->finger_count == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'priv->finger_count == 0'
#719: FILE: drivers/input/mouse/synaptics.c:582:
+		if ((hw.w == 0) && (priv->finger_count == 0))

WARNING:BRACES: braces {} are not necessary for single statement blocks
#728: FILE: drivers/input/mouse/synaptics.c:591:
+	if (!priv->tap && !priv->drag && !priv->doubletap) {
+		priv->tap_left = priv->tap_mid = priv->tap_right = 0;
+	}

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#729: FILE: drivers/input/mouse/synaptics.c:592:
+		priv->tap_left = priv->tap_mid = priv->tap_right = 0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#768: FILE: drivers/input/mouse/synaptics.c:631:
+	if (priv->vert_scroll_on && (!(edge & RIGHT_EDGE) || !finger || priv->palm)) {
+		priv->vert_scroll_on = 0;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#771: FILE: drivers/input/mouse/synaptics.c:634:
+	if (priv->horiz_scroll_on && (!(edge & BOTTOM_EDGE) || !finger || priv->palm)) {
+		priv->horiz_scroll_on = 0;
+	}

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#804: FILE: drivers/input/mouse/synaptics.c:667:
+	dx = dy = 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#858: FILE: drivers/input/mouse/synaptics.c:721:
+	/* when you press a button the packets will only send for a second, so
+	   we have to use a timer for repeating */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#858: FILE: drivers/input/mouse/synaptics.c:721:
+	   we have to use a timer for repeating */

WARNING:LINE_SPACING: Missing a blank line after declarations
#892: FILE: drivers/input/mouse/synaptics.c:755:
+		int i;
+		for (i = 0; i < 2; i++) {

CHECK:CAMELCASE: Avoid CamelCase: <pBuf>
#905: FILE: drivers/input/mouse/synaptics.c:768:
+	unsigned char *pBuf = priv->proto_buf;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'priv->proto_buf_tail == 1'
#913: FILE: drivers/input/mouse/synaptics.c:776:
+	if ((priv->proto_buf_tail == 1) && ((u & 0xC8) != 0x80)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#916: FILE: drivers/input/mouse/synaptics.c:779:
+		printk(KERN_WARNING "Synaptics driver lost sync at 1st byte\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'priv->proto_buf_tail == 4'
#921: FILE: drivers/input/mouse/synaptics.c:784:
+	if ((priv->proto_buf_tail == 4) && ((u & 0xc8) != 0xc0)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#924: FILE: drivers/input/mouse/synaptics.c:787:
+		printk(KERN_WARNING "Synaptics driver lost sync at 4th byte\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#931: FILE: drivers/input/mouse/synaptics.c:794:
+			printk(KERN_NOTICE "Synaptics driver resynced.\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#943: FILE: drivers/input/mouse/synaptics.h:1:
+/*

CHECK:BIT_MACRO: Prefer using the BIT macro
#964: FILE: drivers/input/mouse/synaptics.h:22:
+#define SYN_BIT_ABSOLUTE_MODE		(1 << 7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#965: FILE: drivers/input/mouse/synaptics.h:23:
+#define SYN_BIT_HIGH_RATE		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#966: FILE: drivers/input/mouse/synaptics.h:24:
+#define SYN_BIT_SLEEP_MODE		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#967: FILE: drivers/input/mouse/synaptics.h:25:
+#define SYN_BIT_DISABLE_GESTURE		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#968: FILE: drivers/input/mouse/synaptics.h:26:
+#define SYN_BIT_W_MODE			(1 << 0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#997: FILE: drivers/input/mouse/synaptics.h:55:
+#define SYN_ID_MODEL(i) ^I^I(((i) >> 4) & 0x0f)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#998: FILE: drivers/input/mouse/synaptics.h:56:
+#define SYN_ID_MAJOR(i) ^I^I((i) & 0x0f)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#999: FILE: drivers/input/mouse/synaptics.h:57:
+#define SYN_ID_MINOR(i) ^I^I(((i) >> 16) & 0xff)$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1002: FILE: drivers/input/mouse/synaptics.h:60:
+
+

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#1010: FILE: drivers/input/mouse/synaptics.h:68:
+	int tap_time, tap_move;			/* max. tapping-time and movement in packets and coord. */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1012: FILE: drivers/input/mouse/synaptics.h:70:
+	int emulate_mid_button_time;		/* Max time between left and right button presses to
+						   emulate a middle button press. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1012: FILE: drivers/input/mouse/synaptics.h:70:
+						   emulate a middle button press. */

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#1017: FILE: drivers/input/mouse/synaptics.h:75:
+	int updown_button_scrolling;		/* Up/Down-Button scrolling or middle/double-click */

CHECK:CAMELCASE: Avoid CamelCase: <SynapticsTapRec>
#1036: FILE: drivers/input/mouse/synaptics.h:94:
+struct SynapticsTapRec {

CHECK:CAMELCASE: Avoid CamelCase: <SynapticsMoveHist>
#1041: FILE: drivers/input/mouse/synaptics.h:99:
+struct SynapticsMoveHist {

CHECK:CAMELCASE: Avoid CamelCase: <MidButtonEmulation>
#1045: FILE: drivers/input/mouse/synaptics.h:103:
+enum MidButtonEmulation {

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#1047: FILE: drivers/input/mouse/synaptics.h:105:
+	MBE_LEFT,			/* Left button pressed, waiting for right button or timeout */

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#1048: FILE: drivers/input/mouse/synaptics.h:106:
+	MBE_RIGHT,			/* Right button pressed, waiting for left button or timeout */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1050: FILE: drivers/input/mouse/synaptics.h:108:
+	MBE_MID				/* Left and right buttons pressed, waiting for both buttons
+					   to be released */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1050: FILE: drivers/input/mouse/synaptics.h:108:
+					   to be released */

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#1057: FILE: drivers/input/mouse/synaptics.h:115:
+	unsigned long int model_id;		/* Model-ID */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1058: FILE: drivers/input/mouse/synaptics.h:116:
+^Iunsigned long int capabilities; ^I/* Capabilities */$

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#1058: FILE: drivers/input/mouse/synaptics.h:116:
+	unsigned long int capabilities; 	/* Capabilities */

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#1059: FILE: drivers/input/mouse/synaptics.h:117:
+	unsigned long int identity;		/* Identification */

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#1078: FILE: drivers/input/mouse/synaptics.h:136:
+	unsigned int prev_up;			/* Previous up button value, for double click emulation */

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#1094: FILE: drivers/input/mouse/synaptics.h:152:
+	int palm;				/* Set to true when palm detected, reset to false when

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1095: FILE: drivers/input/mouse/synaptics.h:153:
+						 * palm/finger contact disappears */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000363400.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 57 warnings, 35 checks, 1035 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000363400.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
