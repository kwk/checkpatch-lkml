WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
diff -ur --exclude-from /home/axboe/exclude /opt/kernel/linux-2.4.6-pre5/drivers/block/cciss.c linux/drivers/block/cciss.c

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#61: FILE: drivers/block/cciss.c:1128:
+		pci_unmap_page(hba[cmd->ctlr]->pdev,
 			temp64.val, cmd->SG[i].Len, 

CHECK:SPACING: No space is necessary after a cast
#153: FILE: drivers/block/cciss.c:1351:
+		temp64.val = (__u64) pci_map_page( h->pdev,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#153: FILE: drivers/block/cciss.c:1351:
+		temp64.val = (__u64) pci_map_page( h->pdev,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#242: FILE: drivers/block/cpqarray.c:978:
+	seg = lastdataend = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#269: FILE: drivers/block/cpqarray.c:1000:
+		c->req.sg[i].addr = (__u32) pci_map_page(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#269: FILE: drivers/block/cpqarray.c:1000:
+		c->req.sg[i].addr = (__u32) pci_map_page(

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: drivers/block/cpqarray.c:1001:
+                ^I^Ih->pci_dev, tmp_sg[i].page, tmp_sg[i].size,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#270: FILE: drivers/block/cpqarray.c:1001:
+                ^I^Ih->pci_dev, tmp_sg[i].page, tmp_sg[i].size,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: drivers/block/cpqarray.c:1001:
+                ^I^Ih->pci_dev, tmp_sg[i].page, tmp_sg[i].size,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: drivers/block/cpqarray.c:1109:
+                pci_unmap_page(hba[cmd->ctlr]->pci_dev,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: drivers/block/cpqarray.c:1109:
+                pci_unmap_page(hba[cmd->ctlr]->pci_dev,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: drivers/block/cpqarray.c:1110:
+                pci_unmap_page(hba[cmd->ctlr]->pci_dev,
                         cmd->req.sg[i].addr, cmd->req.sg[i].size,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#395: FILE: drivers/block/ll_rw_blk.c:646:
 	    || req->nr_sectors + next->nr_sectors > max_sectors
+	    || next->sem || req->special)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#421: FILE: drivers/block/ll_rw_blk.c:780:
+			req->current_nr_sectors = req->hard_cur_sectors = count;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#430: FILE: drivers/block/ll_rw_blk.c:830:
+	req->current_nr_sectors = req->hard_cur_sectors = count;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#456: FILE: drivers/block/ll_rw_blk.c:1359:
+EXPORT_SYMBOL(blk_max_low_pfn);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:LINE_SPACING: Missing a blank line after declarations
#557: FILE: drivers/ide/ide-disk.c:214:
+				char *to = ide_map_buffer(rq);
+				idedisk_output_data (drive, to, SECTOR_WORDS);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#557: FILE: drivers/ide/ide-disk.c:214:
+				idedisk_output_data (drive, to, SECTOR_WORDS);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#674: FILE: drivers/ide/ide-dma.c:466:
+		printk("%s: enabling highmem I/O\n", drive->name);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#739: FILE: drivers/scsi/aic7xxx/aic7xxx_linux_host.h:85:
+	can_dma_32: 1						\
 	          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#750: FILE: drivers/scsi/hosts.c:233:
+    retval->can_dma_32 = tpnt->can_dma_32;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#761: FILE: drivers/scsi/hosts.h:289:
+    unsigned can_dma_32:1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: drivers/scsi/hosts.h:389:
+    unsigned can_dma_32:1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#782: FILE: drivers/scsi/qlogicfc.h:103:
+        use_clustering:         ENABLE_CLUSTERING,^I^I^I   \$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#782: FILE: drivers/scsi/qlogicfc.h:103:
+        use_clustering:         ENABLE_CLUSTERING,			   \
                       ^

WARNING:INDENTED_LABEL: labels should not be indented
#782: FILE: drivers/scsi/qlogicfc.h:103:
+        use_clustering:         ENABLE_CLUSTERING,			   \

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#783: FILE: drivers/scsi/qlogicfc.h:104:
+	can_dma_32:		1					   \
 	          ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#798: FILE: drivers/scsi/scsi.c:179:
+void  scsi_initialize_queue(Scsi_Device * SDpnt, struct Scsi_Host * SHpnt)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#798: FILE: drivers/scsi/scsi.c:179:
+void  scsi_initialize_queue(Scsi_Device * SDpnt, struct Scsi_Host * SHpnt)

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Device>
#798: FILE: drivers/scsi/scsi.c:179:
+void  scsi_initialize_queue(Scsi_Device * SDpnt, struct Scsi_Host * SHpnt)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <SDpnt>
#798: FILE: drivers/scsi/scsi.c:179:
+void  scsi_initialize_queue(Scsi_Device * SDpnt, struct Scsi_Host * SHpnt)

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#798: FILE: drivers/scsi/scsi.c:179:
+void  scsi_initialize_queue(Scsi_Device * SDpnt, struct Scsi_Host * SHpnt)

CHECK:CAMELCASE: Avoid CamelCase: <SHpnt>
#798: FILE: drivers/scsi/scsi.c:179:
+void  scsi_initialize_queue(Scsi_Device * SDpnt, struct Scsi_Host * SHpnt)

CHECK:SPACING: No space is necessary after a cast
#804: FILE: drivers/scsi/scsi.c:185:
+	q->queuedata = (void *) SDpnt;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#816: FILE: drivers/scsi/scsi.h:394:
+#define CONTIGUOUS_BUFFERS(X,Y) (bh_bus((X)) + (X)->b_size == bh_bus((Y)))
                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'X' - possible side-effects?
#816: FILE: drivers/scsi/scsi.h:394:
+#define CONTIGUOUS_BUFFERS(X,Y) (bh_bus((X)) + (X)->b_size == bh_bus((Y)))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#858: FILE: drivers/scsi/scsi_lib.c:371:
+			printk("scsi_end_request: missing bh\n");

CHECK:CAMELCASE: Avoid CamelCase: <SCpnt>
#881: FILE: drivers/scsi/scsi_lib.c:471:
+	struct request *req = &SCpnt->request;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#894: FILE: drivers/scsi/scsi_lib.c:492:
+			scsi_free(SCpnt->request_buffer,SCpnt->request_bufflen);
 			                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#926: FILE: drivers/scsi/scsi_lib.c:571:
+				char *to = bh_kmap_irq(req->bh);
+				memcpy(to, SCpnt->buffer, SCpnt->bufflen);

ERROR:SPACING: space prohibited after that open parenthesis '('
#967: FILE: drivers/scsi/scsi_merge.c:244:
+				if( dma_host && bh_bus(bh) - 1 >= ISA_DMA_THRESHOLD

ERROR:SPACING: space required before the open parenthesis '('
#967: FILE: drivers/scsi/scsi_merge.c:244:
+				if( dma_host && bh_bus(bh) - 1 >= ISA_DMA_THRESHOLD

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#976: FILE: drivers/scsi/scsi_merge.c:306:
+(((((long)bh_bus((X))+(X)->b_size)|((long)bh_bus((Y)))) & \
                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#976: FILE: drivers/scsi/scsi_merge.c:306:
+(((((long)bh_bus((X))+(X)->b_size)|((long)bh_bus((Y)))) & \
                                   ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1031: FILE: drivers/scsi/scsi_merge.c:641:
 		    && CONTIGUOUS_BUFFERS(req->bhtail, next->bh)
+		    && bh_bus(req->bhtail) - 1 >= ISA_DMA_THRESHOLD )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1031: FILE: drivers/scsi/scsi_merge.c:641:
+		    && bh_bus(req->bhtail) - 1 >= ISA_DMA_THRESHOLD )

WARNING:TYPO_SPELLING: 'guarenteed' may be misspelled - perhaps 'guaranteed'?
#1149: FILE: drivers/scsi/scsi_merge.c:898:
+		 * set since it's guarenteed to be a low memory page
 		                  ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1189: FILE: drivers/scsi/scsi_merge.c:1007:
+	buff = req->buffer = bh->b_data;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1215: FILE: drivers/scsi/scsi_merge.c:1027:
+				char *buf = bh_kmap_irq(bh);
+				memcpy(buff, buf, this_count << 9);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'SDpnt->type == TYPE_DISK'
#1245: FILE: drivers/scsi/scsi_merge.c:1113:
+	if (SHpnt->can_dma_32 && (SDpnt->type == TYPE_DISK)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: braces {} should be used on all arms of this statement
#1245: FILE: drivers/scsi/scsi_merge.c:1113:
+	if (SHpnt->can_dma_32 && (SDpnt->type == TYPE_DISK)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1247: FILE: drivers/scsi/scsi_merge.c:1115:
+		printk("SCSI: channel %d, id %d: enabling highmem I/O\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1248: FILE: drivers/scsi/scsi_merge.c:1116:
+		printk("SCSI: channel %d, id %d: enabling highmem I/O\n",
+			SDpnt->channel, SDpnt->id);

CHECK:BRACES: Unbalanced braces around else statement
#1249: FILE: drivers/scsi/scsi_merge.c:1117:
+	} else

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1261: FILE: drivers/scsi/sym53c8xx.h:99:
+			use_clustering: DISABLE_CLUSTERING,	\
 			              ^

WARNING:INDENTED_LABEL: labels should not be indented
#1261: FILE: drivers/scsi/sym53c8xx.h:99:
+			use_clustering: DISABLE_CLUSTERING,	\

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1262: FILE: drivers/scsi/sym53c8xx.h:100:
+^I^I^Ican_dma_32:^I1} $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1262: FILE: drivers/scsi/sym53c8xx.h:100:
+			can_dma_32:	1} 
 			          ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1335: FILE: include/asm-i386/pci.h:96:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1344: FILE: include/asm-i386/pci.h:105:
+		BUG();

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1363: FILE: include/asm-i386/pci.h:135:
+	for (i = 0; i < nents; i++ ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1365: FILE: include/asm-i386/pci.h:137:
+			BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1367: FILE: include/asm-i386/pci.h:139:
+			BUG();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1403: FILE: include/asm-i386/scatterlist.h:8:
+    struct page * page; /* Location for highmem page, if any */$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1403: FILE: include/asm-i386/scatterlist.h:8:
+    struct page * page; /* Location for highmem page, if any */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1404: FILE: include/asm-i386/scatterlist.h:9:
+    char *  address;    /* Location data is to be transferred to, NULL for$

ERROR:POINTER_LOCATION: "foo *  bar" should be "foo *bar"
#1404: FILE: include/asm-i386/scatterlist.h:9:
+    char *  address;    /* Location data is to be transferred to, NULL for

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1405: FILE: include/asm-i386/scatterlist.h:10:
+			 * highmem page */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1408: FILE: include/asm-i386/scatterlist.h:13:
+    dma_addr_t dma_address;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1410: FILE: include/asm-i386/scatterlist.h:15:
+    unsigned int offset;/* for highmem, page offset */$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1461: FILE: include/linux/blkdev.h:134:
+extern void blk_queue_bounce_limit(request_queue_t *, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#1461: FILE: include/linux/blkdev.h:134:
+extern void blk_queue_bounce_limit(request_queue_t *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1461: FILE: include/linux/blkdev.h:134:
+extern void blk_queue_bounce_limit(request_queue_t *, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1464: FILE: include/linux/blkdev.h:137:
+extern struct buffer_head *create_bounce(int, struct buffer_head *);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bh' - possible side-effects?
#1486: FILE: include/linux/fs.h:281:
+#define bh_bus(bh)		(page_to_bus((bh)->b_page) + bh_offset((bh)))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1500: FILE: include/linux/highmem.h:16:
+extern struct buffer_head *create_bounce(int rw, struct buffer_head * bh_orig);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1500: FILE: include/linux/highmem.h:16:
+extern struct buffer_head *create_bounce(int rw, struct buffer_head * bh_orig);

CHECK:SPACING: No space is necessary after a cast
#1513: FILE: include/linux/highmem.h:33:
+	unsigned long addr = (unsigned long) kmap_atomic(bh->b_page, KM_BH_IRQ);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1516: FILE: include/linux/highmem.h:36:
+		BUG();

CHECK:SPACING: No space is necessary after a cast
#1518: FILE: include/linux/highmem.h:38:
+	return (char *) addr + bh_offset(bh);

CHECK:SPACING: No space is necessary after a cast
#1523: FILE: include/linux/highmem.h:43:
+	unsigned long ptr = (unsigned long) buffer & PAGE_MASK;

CHECK:SPACING: No space is necessary after a cast
#1525: FILE: include/linux/highmem.h:45:
+	kunmap_atomic((void *) ptr, KM_BH_IRQ);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rq' - possible side-effects?
#1559: FILE: include/linux/ide.h:760:
+#define ide_rq_offset(rq) (((rq)->hard_cur_sectors - (rq)->current_nr_sectors) << 9)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1593: FILE: kernel/ksyms.c:126:
+EXPORT_SYMBOL(kmap_pte);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000527210.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 31 warnings, 33 checks, 1339 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000527210.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
