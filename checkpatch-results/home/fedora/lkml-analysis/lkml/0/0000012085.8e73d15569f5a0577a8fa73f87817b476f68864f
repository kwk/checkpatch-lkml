WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#161: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#166: FILE: include/asm-parisc/irq-handlers.h:1:
+HANDLE_LEVEL_IRQ(_chip, cpu_ack_irq, cpu_end_irq)

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_IRQ_HANDLERS' is wrong - use Kconfig variables or standard guards instead
#190: FILE: include/asm-parisc/irq.h:30:
+#define ARCH_HAS_IRQ_HANDLERS

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct irq_desc *' should also have an identifier name
#210: FILE: include/asm-parisc/irq.h:54:
+void cpu_ack_irq(struct irq_desc *, unsigned int irq);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct irq_desc *' should also have an identifier name
#211: FILE: include/asm-parisc/irq.h:55:
+void cpu_end_irq(struct irq_desc *, unsigned int irq);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct irq_desc *' should also have an identifier name
#212: FILE: include/asm-parisc/irq.h:56:
+void iosapic_end_irq(struct irq_desc *, unsigned int irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#221: FILE: include/asm-parisc/irq.h:68:
+extern irqreturn_t timer_interrupt(int, void *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#221: FILE: include/asm-parisc/irq.h:68:
+extern irqreturn_t timer_interrupt(int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#221: FILE: include/asm-parisc/irq.h:68:
+extern irqreturn_t timer_interrupt(int, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#222: FILE: include/asm-parisc/irq.h:69:
+extern irqreturn_t ipi_interrupt(int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#222: FILE: include/asm-parisc/irq.h:69:
+extern irqreturn_t ipi_interrupt(int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#222: FILE: include/asm-parisc/irq.h:69:
+extern irqreturn_t ipi_interrupt(int, void *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000012085.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 9 warnings, 2 checks, 154 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000012085.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
