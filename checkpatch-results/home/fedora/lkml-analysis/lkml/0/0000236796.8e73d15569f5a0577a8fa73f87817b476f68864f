WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
diff -ru linux-2.6.10-rc1-nsz/include/asm-arm/div64.h linux-2.6.10-rc1/include/asm-arm/div64.h

ERROR:SPACING: space required after that ',' (ctx:VxV)
#82: FILE: include/asm-generic/div64.h:25:
+# define do_div(n,base) (					\
                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#82: FILE: include/asm-generic/div64.h:25:
+# define do_div(n,base) (					\
+	(__builtin_constant_p(base) && ((base) == 1)) ? 0 : ({	\
 	uint32_t __rem;						\
+	uint32_t __base = (base);				\
 	__rem = ((uint64_t)(n)) % __base;			\
 	(n) = ((uint64_t)(n)) / __base;				\
 	__rem;							\
+ }))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'base' - possible side-effects?
#82: FILE: include/asm-generic/div64.h:25:
+# define do_div(n,base) (					\
+	(__builtin_constant_p(base) && ((base) == 1)) ? 0 : ({	\
 	uint32_t __rem;						\
+	uint32_t __base = (base);				\
 	__rem = ((uint64_t)(n)) % __base;			\
 	(n) = ((uint64_t)(n)) / __base;				\
 	__rem;							\
+ }))

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#85: FILE: include/asm-generic/div64.h:28:
+	uint32_t __base = (base);				\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: include/asm-generic/div64.h:32:
+ }))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#109: FILE: include/asm-generic/div64.h:41:
+# define do_div(n,base) (					\
                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#109: FILE: include/asm-generic/div64.h:41:
+# define do_div(n,base) (					\
+	(__builtin_constant_p(base) && ((base) == 1)) ? 0 : ({	\
+	uint32_t __base = (base);				\
+	uint32_t __rem;						\
+	(void)(((typeof((n)) *)0) == ((uint64_t *)0));		\
+	if (likely(((n) >> 32) == 0)) {				\
+		__rem = (uint32_t)(n) % __base;			\
+		(n) = (uint32_t)(n) / __base;			\
+	} else 							\
+		__rem = __div64_32(&(n), __base);		\
+	__rem;							\
+ }))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'base' - possible side-effects?
#109: FILE: include/asm-generic/div64.h:41:
+# define do_div(n,base) (					\
+	(__builtin_constant_p(base) && ((base) == 1)) ? 0 : ({	\
+	uint32_t __base = (base);				\
+	uint32_t __rem;						\
+	(void)(((typeof((n)) *)0) == ((uint64_t *)0));		\
+	if (likely(((n) >> 32) == 0)) {				\
+		__rem = (uint32_t)(n) % __base;			\
+		(n) = (uint32_t)(n) / __base;			\
+	} else 							\
+		__rem = __div64_32(&(n), __base);		\
+	__rem;							\
+ }))

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#111: FILE: include/asm-generic/div64.h:43:
+	uint32_t __base = (base);				\

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#112: FILE: include/asm-generic/div64.h:44:
+	uint32_t __rem;						\

CHECK:SPACING: No space is necessary after a cast
#113: FILE: include/asm-generic/div64.h:45:
+	(void)(((typeof((n)) *)0) == ((uint64_t *)0));		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#117: FILE: include/asm-generic/div64.h:49:
+^I} else ^I^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: include/asm-generic/div64.h:52:
+ }))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#132: FILE: include/asm-i386/div64.h:16:
+#define do_div(n,base) ( \
                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'base' - possible side-effects?
#132: FILE: include/asm-i386/div64.h:16:
+#define do_div(n,base) ( \
+	(__builtin_constant_p(base) && ((base) == 1)) ? 0 : ({ \
 	unsigned long __upper, __low, __high, __mod, __base; \
 	__base = (base); \
 	asm("":"=a" (__low), "=d" (__high):"A" (n)); \

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#153: FILE: include/asm-m32r/div64.h:15:
+((__builtin_constant_p(base) && ((base) == 1)) ? 0 : ^I^I\$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000236796.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 5 warnings, 9 checks, 158 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000236796.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
