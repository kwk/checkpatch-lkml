WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#40: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#45: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#88: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:44:
+ *  $Id: ehca_eq.c,v 1.40 2006/02/06 16:20:38 schickhj Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#109: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:65:
+	extern struct workqueue_struct *ehca_wq;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#122: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:78:
+	if (type!=EHCA_EQ && type!=EHCA_NEQ) {
 	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#122: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:78:
+	if (type!=EHCA_EQ && type!=EHCA_NEQ) {
 	                         ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#126: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:82:
+	if (length==0) {
 	          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:87:
+     ^Iret = hipz_h_alloc_resource_eq(shca->ipz_hca_handle,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#131: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:87:
+     ^Iret = hipz_h_alloc_resource_eq(shca->ipz_hca_handle,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:87:
+     ^Iret = hipz_h_alloc_resource_eq(shca->ipz_hca_handle,$

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#137: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:93:
+				       &nr_pages, &eq->irq_info.ist);
 				                                ^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#154: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:110:
+		if (!(vpage = ipz_QPageit_get_inc(&eq->ipz_queue))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:CAMELCASE: Avoid CamelCase: <ipz_QPageit_get_inc>
#154: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:110:
+		if (!(vpage = ipz_QPageit_get_inc(&eq->ipz_queue))) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret != H_Success'
#169: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:125:
+			if ((ret != H_Success) || (vpage != 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vpage != 0'
#169: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:125:
+			if ((ret != H_Success) || (vpage != 0)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#169: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:125:
+			if ((ret != H_Success) || (vpage != 0)) {
+				goto create_eq_exit2;
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret != H_PAGE_REGISTERED'
#173: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:129:
+			if ((ret != H_PAGE_REGISTERED) || (vpage == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vpage == 0'
#173: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:129:
+			if ((ret != H_PAGE_REGISTERED) || (vpage == 0)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#173: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:129:
+			if ((ret != H_PAGE_REGISTERED) || (vpage == 0)) {
+				goto create_eq_exit2;
+			}

CHECK:CAMELCASE: Avoid CamelCase: <ipz_QEit_reset>
#179: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:135:
+	ipz_QEit_reset(&eq->ipz_queue);

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:139:
+^I        pid_t pid = 0;$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around eq->work
#187: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:143:
+		(eq->irq_info).work = &(eq->work);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around eq->work
#193: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:149:
+		INIT_WORK(&(eq->work),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around eq->irq_info
#194: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:150:
+			  ehca_interrupt_eq, (void *)&(eq->irq_info));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around eq->irq_info
#196: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:152:
+		hipz_request_interrupt(&(eq->irq_info), ehca_interrupt);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around eq->work
#198: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:154:
+		INIT_WORK(&(eq->work),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around eq->irq_info
#199: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:155:
+			  ehca_interrupt_neq, (void *)&(eq->irq_info));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around eq->irq_info
#200: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:156:
+		hipz_request_interrupt(&(eq->irq_info), ehca_interrupt);

WARNING:INDENTED_LABEL: labels should not be indented
#207: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:163:
+      create_eq_exit2:

WARNING:INDENTED_LABEL: labels should not be indented
#210: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:166:
+      create_eq_exit1:

CHECK:CAMELCASE: Avoid CamelCase: <ipz_QEit_EQ_get_inc_valid>
#228: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:184:
+	eqe = ipz_QEit_EQ_get_inc_valid(&eq->ipz_queue);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#238: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:194:
+	extern struct workqueue_struct *ehca_wq;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#240: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:196:
+	struct ehca_module* module = data;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#255: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:211:
+	while(!kthread_should_stop());

ERROR:WHILE_AFTER_BRACE: while should follow close brace '}'
#255: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:211:
+	}
+	while(!kthread_should_stop());

while should follow the closing bracket on the same line::

  do {
          ...
  } while(something);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around eq->irq_info
#270: FILE: drivers/infiniband/hw/ehca/ehca_eq.c:226:
+	hipz_free_interrupt(&(eq->irq_info));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#293: FILE: drivers/infiniband/hw/ehca/ehca_eq.h:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#336: FILE: drivers/infiniband/hw/ehca/ehca_eq.h:44:
+ *  $Id: ehca_eq.h,v 1.10 2006/02/06 10:17:34 schickhj Exp $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#362: FILE: drivers/infiniband/hw/ehca/ehca_eq.h:70:
+/** @brief hcad internal poll EQ
+  - check if new EQE available,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103208.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 15 warnings, 15 checks, 320 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103208.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
