WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: drivers/mmc/mmci.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#63: FILE: drivers/mmc/mmci.c:2:
+ *  linux/drivers/mmc/mmci.c - ARM PrimeCell MMCI PL180/1 driver

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#83: FILE: drivers/mmc/mmci.c:22:
+#include <asm/io.h>

WARNING:BRACES: braces {} are not necessary for single statement blocks
#179: FILE: drivers/mmc/mmci.c:118:
+	if (status & MCI_DATABLOCKEND) {
+		host->data_xfered += 1 << data->blksz_bits;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#182: FILE: drivers/mmc/mmci.c:121:
+	if (status & (MCI_DATACRCFAIL|MCI_DATATIMEOUT|MCI_TXUNDERRUN|MCI_RXOVERRUN)) {
 	                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#182: FILE: drivers/mmc/mmci.c:121:
+	if (status & (MCI_DATACRCFAIL|MCI_DATATIMEOUT|MCI_TXUNDERRUN|MCI_RXOVERRUN)) {
 	                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#182: FILE: drivers/mmc/mmci.c:121:
+	if (status & (MCI_DATACRCFAIL|MCI_DATATIMEOUT|MCI_TXUNDERRUN|MCI_RXOVERRUN)) {
 	                                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#187: FILE: drivers/mmc/mmci.c:126:
+		else if (status & (MCI_TXUNDERRUN|MCI_RXOVERRUN))
 		                                 ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#193: FILE: drivers/mmc/mmci.c:132:
+		if (!data->stop) {
[...]
+		} else /*if (readl(host->base + MMCIDATACNT) > 6)*/ {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#212: FILE: drivers/mmc/mmci.c:151:
+	if (status & MCI_CMDTIMEOUT) {
[...]
+	} else if (status & MCI_CMDCRCFAIL && cmd->flags & MMC_RSP_CRC) {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#218: FILE: drivers/mmc/mmci.c:157:
+	if (!cmd->data || cmd->error != MMC_ERR_NONE) {
[...]
+	} else if (!(cmd->data->flags & MMC_DATA_READ)) {
[...]

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#234: FILE: drivers/mmc/mmci.c:173:
+		if (!(status & (MCI_RXDATAAVLBL|MCI_RXFIFOHALFFULL|
 		                               ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#234: FILE: drivers/mmc/mmci.c:173:
+		if (!(status & (MCI_RXDATAAVLBL|MCI_RXFIFOHALFFULL|
 		                                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#235: FILE: drivers/mmc/mmci.c:174:
+				MCI_TXFIFOEMPTY|MCI_TXFIFOHALFEMPTY)))
 				               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#240: FILE: drivers/mmc/mmci.c:179:
+		if (status & (MCI_RXDATAAVLBL|MCI_RXFIFOHALFFULL)) {
 		                             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#242: FILE: drivers/mmc/mmci.c:181:
+			int count = host->size - (readl(host->base + MMCIFIFOCNT) << 2);
+			if (count < 0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#252: FILE: drivers/mmc/mmci.c:191:
+				static int first = 1;
+				if (first) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#254: FILE: drivers/mmc/mmci.c:193:
+					printk(KERN_ERR "MMCI: sinking excessive data\n");

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#259: FILE: drivers/mmc/mmci.c:198:
+		if (status & (MCI_TXFIFOEMPTY|MCI_TXFIFOHALFEMPTY)) {
 		                             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#261: FILE: drivers/mmc/mmci.c:200:
+			int count = host->size;
+			if (count > MCI_FIFOHALFSIZE)

WARNING:LINE_SPACING: Missing a blank line after declarations
#271: FILE: drivers/mmc/mmci.c:210:
+				static int first = 1;
+				if (first) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#273: FILE: drivers/mmc/mmci.c:212:
+					printk(KERN_ERR "MMCI: ran out of source data\n");

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#304: FILE: drivers/mmc/mmci.c:243:
+		if (status & (MCI_DATACRCFAIL|MCI_DATATIMEOUT|MCI_TXUNDERRUN|
 		                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#304: FILE: drivers/mmc/mmci.c:243:
+		if (status & (MCI_DATACRCFAIL|MCI_DATATIMEOUT|MCI_TXUNDERRUN|
 		                                             ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#304: FILE: drivers/mmc/mmci.c:243:
+		if (status & (MCI_DATACRCFAIL|MCI_DATATIMEOUT|MCI_TXUNDERRUN|
 		                                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#305: FILE: drivers/mmc/mmci.c:244:
+			      MCI_RXOVERRUN|MCI_DATAEND|MCI_DATABLOCKEND))
 			                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#305: FILE: drivers/mmc/mmci.c:244:
+			      MCI_RXOVERRUN|MCI_DATAEND|MCI_DATABLOCKEND))
 			                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#309: FILE: drivers/mmc/mmci.c:248:
+		if (status & (MCI_CMDCRCFAIL|MCI_CMDTIMEOUT|MCI_CMDSENT|MCI_CMDRESPEND) && cmd)
 		                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#309: FILE: drivers/mmc/mmci.c:248:
+		if (status & (MCI_CMDCRCFAIL|MCI_CMDTIMEOUT|MCI_CMDSENT|MCI_CMDRESPEND) && cmd)
 		                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#309: FILE: drivers/mmc/mmci.c:248:
+		if (status & (MCI_CMDCRCFAIL|MCI_CMDTIMEOUT|MCI_CMDSENT|MCI_CMDRESPEND) && cmd)
 		                                                       ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "host->req"
#324: FILE: drivers/mmc/mmci.c:263:
+	WARN_ON(host->req != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#450: FILE: drivers/mmc/mmci.c:389:
+	writel(MCI_TXFIFOHALFEMPTYMASK|MCI_RXFIFOHALFFULLMASK, host->base + MMCIMASK1);
 	                              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#456: FILE: drivers/mmc/mmci.c:395:
+	printk(KERN_INFO "%s: MMCI rev %x cfg %02x at 0x%08lx irq %d,%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: drivers/mmc/mmci.c:396:
+	printk(KERN_INFO "%s: MMCI rev %x cfg %02x at 0x%08lx irq %d,%d\n",
+		mmc->host_name, amba_rev(dev), amba_config(dev),

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#589: FILE: drivers/mmc/mmci.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#590: FILE: drivers/mmc/mmci.h:2:
+ *  linux/drivers/mmc/mmci.h - ARM PrimeCell MMCI PL180/1 driver

CHECK:BIT_MACRO: Prefer using the BIT macro
#602: FILE: drivers/mmc/mmci.h:14:
+#define MCI_OD			(1 << 6)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#603: FILE: drivers/mmc/mmci.h:15:
+#define MCI_ROD			(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#606: FILE: drivers/mmc/mmci.h:18:
+#define MCI_CLK_ENABLE		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#607: FILE: drivers/mmc/mmci.h:19:
+#define MCI_PWRSAVE		(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#608: FILE: drivers/mmc/mmci.h:20:
+#define MCI_BYPASS		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#612: FILE: drivers/mmc/mmci.h:24:
+#define MCI_CPSM_RESPONSE	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#613: FILE: drivers/mmc/mmci.h:25:
+#define MCI_CPSM_LONGRSP	(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#614: FILE: drivers/mmc/mmci.h:26:
+#define MCI_CPSM_INTERRUPT	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#615: FILE: drivers/mmc/mmci.h:27:
+#define MCI_CPSM_PENDING	(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#616: FILE: drivers/mmc/mmci.h:28:
+#define MCI_CPSM_ENABLE		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#626: FILE: drivers/mmc/mmci.h:38:
+#define MCI_DPSM_ENABLE		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#627: FILE: drivers/mmc/mmci.h:39:
+#define MCI_DPSM_DIRECTION	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#628: FILE: drivers/mmc/mmci.h:40:
+#define MCI_DPSM_MODE		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#629: FILE: drivers/mmc/mmci.h:41:
+#define MCI_DPSM_DMAENABLE	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#633: FILE: drivers/mmc/mmci.h:45:
+#define MCI_CMDCRCFAIL		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#634: FILE: drivers/mmc/mmci.h:46:
+#define MCI_DATACRCFAIL		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#635: FILE: drivers/mmc/mmci.h:47:
+#define MCI_CMDTIMEOUT		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#636: FILE: drivers/mmc/mmci.h:48:
+#define MCI_DATATIMEOUT		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#637: FILE: drivers/mmc/mmci.h:49:
+#define MCI_TXUNDERRUN		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#638: FILE: drivers/mmc/mmci.h:50:
+#define MCI_RXOVERRUN		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#639: FILE: drivers/mmc/mmci.h:51:
+#define MCI_CMDRESPEND		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#640: FILE: drivers/mmc/mmci.h:52:
+#define MCI_CMDSENT		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#641: FILE: drivers/mmc/mmci.h:53:
+#define MCI_DATAEND		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#642: FILE: drivers/mmc/mmci.h:54:
+#define MCI_DATABLOCKEND	(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#643: FILE: drivers/mmc/mmci.h:55:
+#define MCI_CMDACTIVE		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#644: FILE: drivers/mmc/mmci.h:56:
+#define MCI_TXACTIVE		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#645: FILE: drivers/mmc/mmci.h:57:
+#define MCI_RXACTIVE		(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#646: FILE: drivers/mmc/mmci.h:58:
+#define MCI_TXFIFOHALFEMPTY	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#647: FILE: drivers/mmc/mmci.h:59:
+#define MCI_RXFIFOHALFFULL	(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#648: FILE: drivers/mmc/mmci.h:60:
+#define MCI_TXFIFOFULL		(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#649: FILE: drivers/mmc/mmci.h:61:
+#define MCI_RXFIFOFULL		(1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#650: FILE: drivers/mmc/mmci.h:62:
+#define MCI_TXFIFOEMPTY		(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#651: FILE: drivers/mmc/mmci.h:63:
+#define MCI_RXFIFOEMPTY		(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#652: FILE: drivers/mmc/mmci.h:64:
+#define MCI_TXDATAAVLBL		(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#653: FILE: drivers/mmc/mmci.h:65:
+#define MCI_RXDATAAVLBL		(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#656: FILE: drivers/mmc/mmci.h:68:
+#define MCI_CMDCRCFAILCLR	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#657: FILE: drivers/mmc/mmci.h:69:
+#define MCI_DATACRCFAILCLR	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#658: FILE: drivers/mmc/mmci.h:70:
+#define MCI_CMDTIMEOUTCLR	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#659: FILE: drivers/mmc/mmci.h:71:
+#define MCI_DATATIMEOUTCLR	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#660: FILE: drivers/mmc/mmci.h:72:
+#define MCI_TXUNDERRUNCLR	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#661: FILE: drivers/mmc/mmci.h:73:
+#define MCI_RXOVERRUNCLR	(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#662: FILE: drivers/mmc/mmci.h:74:
+#define MCI_CMDRESPENDCLR	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#663: FILE: drivers/mmc/mmci.h:75:
+#define MCI_CMDSENTCLR		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#664: FILE: drivers/mmc/mmci.h:76:
+#define MCI_DATAENDCLR		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#665: FILE: drivers/mmc/mmci.h:77:
+#define MCI_DATABLOCKENDCLR	(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#668: FILE: drivers/mmc/mmci.h:80:
+#define MCI_CMDCRCFAILMASK	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#669: FILE: drivers/mmc/mmci.h:81:
+#define MCI_DATACRCFAILMASK	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#670: FILE: drivers/mmc/mmci.h:82:
+#define MCI_CMDTIMEOUTMASK	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#671: FILE: drivers/mmc/mmci.h:83:
+#define MCI_DATATIMEOUTMASK	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#672: FILE: drivers/mmc/mmci.h:84:
+#define MCI_TXUNDERRUNMASK	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#673: FILE: drivers/mmc/mmci.h:85:
+#define MCI_RXOVERRUNMASK	(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#674: FILE: drivers/mmc/mmci.h:86:
+#define MCI_CMDRESPENDMASK	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#675: FILE: drivers/mmc/mmci.h:87:
+#define MCI_CMDSENTMASK		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#676: FILE: drivers/mmc/mmci.h:88:
+#define MCI_DATAENDMASK		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#677: FILE: drivers/mmc/mmci.h:89:
+#define MCI_DATABLOCKENDMASK	(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#678: FILE: drivers/mmc/mmci.h:90:
+#define MCI_CMDACTIVEMASK	(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#679: FILE: drivers/mmc/mmci.h:91:
+#define MCI_TXACTIVEMASK	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#680: FILE: drivers/mmc/mmci.h:92:
+#define MCI_RXACTIVEMASK	(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#681: FILE: drivers/mmc/mmci.h:93:
+#define MCI_TXFIFOHALFEMPTYMASK	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#682: FILE: drivers/mmc/mmci.h:94:
+#define MCI_RXFIFOHALFFULLMASK	(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#683: FILE: drivers/mmc/mmci.h:95:
+#define MCI_TXFIFOFULLMASK	(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#684: FILE: drivers/mmc/mmci.h:96:
+#define MCI_RXFIFOFULLMASK	(1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#685: FILE: drivers/mmc/mmci.h:97:
+#define MCI_TXFIFOEMPTYMASK	(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#686: FILE: drivers/mmc/mmci.h:98:
+#define MCI_RXFIFOEMPTYMASK	(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#687: FILE: drivers/mmc/mmci.h:99:
+#define MCI_TXDATAAVLBLMASK	(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#688: FILE: drivers/mmc/mmci.h:100:
+#define MCI_RXDATAAVLBLMASK	(1 << 21)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#695: FILE: drivers/mmc/mmci.h:107:
+	(MCI_CMDCRCFAIL|MCI_DATACRCFAIL|MCI_CMDTIMEOUT|MCI_DATATIMEOUT|	\
 	               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#695: FILE: drivers/mmc/mmci.h:107:
+	(MCI_CMDCRCFAIL|MCI_DATACRCFAIL|MCI_CMDTIMEOUT|MCI_DATATIMEOUT|	\
 	                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#695: FILE: drivers/mmc/mmci.h:107:
+	(MCI_CMDCRCFAIL|MCI_DATACRCFAIL|MCI_CMDTIMEOUT|MCI_DATATIMEOUT|	\
 	                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#695: FILE: drivers/mmc/mmci.h:107:
+	(MCI_CMDCRCFAIL|MCI_DATACRCFAIL|MCI_CMDTIMEOUT|MCI_DATATIMEOUT|	\
 	                                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#696: FILE: drivers/mmc/mmci.h:108:
+	MCI_TXUNDERRUN|MCI_RXOVERRUN|MCI_CMDRESPEND|MCI_CMDSENT|	\
 	              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#696: FILE: drivers/mmc/mmci.h:108:
+	MCI_TXUNDERRUN|MCI_RXOVERRUN|MCI_CMDRESPEND|MCI_CMDSENT|	\
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#696: FILE: drivers/mmc/mmci.h:108:
+	MCI_TXUNDERRUN|MCI_RXOVERRUN|MCI_CMDRESPEND|MCI_CMDSENT|	\
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#696: FILE: drivers/mmc/mmci.h:108:
+	MCI_TXUNDERRUN|MCI_RXOVERRUN|MCI_CMDRESPEND|MCI_CMDSENT|	\
 	                                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#697: FILE: drivers/mmc/mmci.h:109:
+	MCI_DATAEND|MCI_DATABLOCKEND)
 	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#700: FILE: drivers/mmc/mmci.h:112:
+	(MCI_CMDCRCFAILMASK|MCI_DATACRCFAILMASK|MCI_CMDTIMEOUTMASK|	\
 	                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#700: FILE: drivers/mmc/mmci.h:112:
+	(MCI_CMDCRCFAILMASK|MCI_DATACRCFAILMASK|MCI_CMDTIMEOUTMASK|	\
 	                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#700: FILE: drivers/mmc/mmci.h:112:
+	(MCI_CMDCRCFAILMASK|MCI_DATACRCFAILMASK|MCI_CMDTIMEOUTMASK|	\
 	                                                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#701: FILE: drivers/mmc/mmci.h:113:
+	MCI_DATATIMEOUTMASK|MCI_TXUNDERRUNMASK|MCI_RXOVERRUNMASK|	\
 	                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#701: FILE: drivers/mmc/mmci.h:113:
+	MCI_DATATIMEOUTMASK|MCI_TXUNDERRUNMASK|MCI_RXOVERRUNMASK|	\
 	                                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#701: FILE: drivers/mmc/mmci.h:113:
+	MCI_DATATIMEOUTMASK|MCI_TXUNDERRUNMASK|MCI_RXOVERRUNMASK|	\
 	                                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#702: FILE: drivers/mmc/mmci.h:114:
+	MCI_CMDRESPENDMASK|MCI_CMDSENTMASK|MCI_DATAENDMASK|		\
 	                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#702: FILE: drivers/mmc/mmci.h:114:
+	MCI_CMDRESPENDMASK|MCI_CMDSENTMASK|MCI_DATAENDMASK|		\
 	                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#702: FILE: drivers/mmc/mmci.h:114:
+	MCI_CMDRESPENDMASK|MCI_CMDSENTMASK|MCI_DATAENDMASK|		\
 	                                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#706: FILE: drivers/mmc/mmci.h:118:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#718: FILE: drivers/mmc/mmci.h:130:
+	spinlock_t		lock;

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mmc' - possible side-effects?
#737: FILE: drivers/mmc/mmci.h:149:
+#define to_mmci_host(mmc)	container_of(mmc, struct mmci_host, mmc)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#742: FILE: include/asm-arm/mach/mmc.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#743: FILE: include/asm-arm/mach/mmc.h:2:
+ *  linux/include/asm-arm/mach/mmc.h

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#753: FILE: include/asm-arm/mach/mmc.h:12:
+	u32 (*translate_vdd)(struct device *, unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#753: FILE: include/asm-arm/mach/mmc.h:12:
+	u32 (*translate_vdd)(struct device *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#754: FILE: include/asm-arm/mach/mmc.h:13:
+	unsigned int (*status)(struct device *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000285231.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 20 warnings, 107 checks, 708 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000285231.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
