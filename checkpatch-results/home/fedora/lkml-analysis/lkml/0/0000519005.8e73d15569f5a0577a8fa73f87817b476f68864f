WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#33: 
into a seperate C file (this is how sparc does it), fixes the race
       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
==============================================================================

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#82: FILE: arch/i386/lib/debuglocks.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'invarient' may be misspelled - perhaps 'invariant'?
#100: FILE: arch/i386/lib/debuglocks.c:19:
+ * contention.  The invarient condition is that last_lock_processor
                     ^^^^^^^^^

WARNING:TYPO_SPELLING: 'trys' may be misspelled - perhaps 'tries'?
#120: FILE: arch/i386/lib/debuglocks.c:39:
+ * when the lock is grabbed, so if somebody comes along later and trys
                                                                   ^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#133: FILE: arch/i386/lib/debuglocks.c:52:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#135: FILE: arch/i386/lib/debuglocks.c:54:
+		BUG();

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#137: FILE: arch/i386/lib/debuglocks.c:56:
+	__asm__ __volatile__(

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#139: FILE: arch/i386/lib/debuglocks.c:58:
+		:"=m" (lock->lock) : : "memory");
 		^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#149: FILE: arch/i386/lib/debuglocks.c:68:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#151: FILE: arch/i386/lib/debuglocks.c:70:
+		BUG();

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#154: FILE: arch/i386/lib/debuglocks.c:73:
+	__asm__ __volatile__(

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#156: FILE: arch/i386/lib/debuglocks.c:75:
+		:"=m" (lock->lock) : : "memory");
 		^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#164: FILE: arch/i386/lib/debuglocks.c:83:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#166: FILE: arch/i386/lib/debuglocks.c:85:
+		BUG();

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#168: FILE: arch/i386/lib/debuglocks.c:87:
+	__asm__ __volatile__(

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#170: FILE: arch/i386/lib/debuglocks.c:89:
+		:"=q" (oldval), "=m" (lock->lock)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#171: FILE: arch/i386/lib/debuglocks.c:90:
+		:"0" (0) : "memory");
 		^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#190: FILE: arch/i386/lib/debuglocks.c:109:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#192: FILE: arch/i386/lib/debuglocks.c:111:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#202: FILE: arch/i386/lib/debuglocks.c:121:
+		BUG();

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#204: FILE: arch/i386/lib/debuglocks.c:123:
+	if (rw->write_lock_processor == smp_processor_id()
+	    || atomic_read(&rw->read_lock_count[smp_processor_id()]) > 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#205: FILE: arch/i386/lib/debuglocks.c:124:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#215: FILE: arch/i386/lib/debuglocks.c:134:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#217: FILE: arch/i386/lib/debuglocks.c:136:
+		BUG();

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#219: FILE: arch/i386/lib/debuglocks.c:138:
+	asm volatile("lock ; incl %0" :"=m" ((rw)->lock) : : "memory");
 	                              ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#225: FILE: arch/i386/lib/debuglocks.c:144:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#227: FILE: arch/i386/lib/debuglocks.c:146:
+		BUG();

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#232: FILE: arch/i386/lib/debuglocks.c:151:
+		     :"=m" ((rw)->lock) : : "memory");
 		     ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#240: FILE: arch/i386/lib/debuglocks.c:159:
+		BUG();

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#242: FILE: arch/i386/lib/debuglocks.c:161:
+	if (rw->write_lock_processor == smp_processor_id()
+	    || atomic_read(&rw->read_lock_count[smp_processor_id()]) > 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#243: FILE: arch/i386/lib/debuglocks.c:162:
+		BUG();

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#255: FILE: arch/i386/lib/debuglocks.c:174:
+EXPORT_SYMBOL(spin_lock);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#256: FILE: arch/i386/lib/debuglocks.c:175:
+EXPORT_SYMBOL(spin_unlock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#257: FILE: arch/i386/lib/debuglocks.c:176:
+EXPORT_SYMBOL(spin_trylock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#258: FILE: arch/i386/lib/debuglocks.c:177:
+EXPORT_SYMBOL(read_lock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#259: FILE: arch/i386/lib/debuglocks.c:178:
+EXPORT_SYMBOL(write_lock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#260: FILE: arch/i386/lib/debuglocks.c:179:
+EXPORT_SYMBOL(read_unlock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#261: FILE: arch/i386/lib/debuglocks.c:180:
+EXPORT_SYMBOL(write_unlock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#262: FILE: arch/i386/lib/debuglocks.c:181:
+EXPORT_SYMBOL(write_trylock);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#303: FILE: include/asm-i386/spinlock.h:31:
+#define SPINLOCK_MAGIC_INIT	, SPINLOCK_MAGIC, NULL, NULL, -1
                            	^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#303: FILE: include/asm-i386/spinlock.h:31:
+#define SPINLOCK_MAGIC_INIT	, SPINLOCK_MAGIC, NULL, NULL, -1

WARNING:LINE_SPACING: Missing a blank line after declarations
#361: FILE: include/asm-i386/spinlock.h:95:
+	char oldval;
+	__asm__ __volatile__(

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#361: FILE: include/asm-i386/spinlock.h:95:
+	__asm__ __volatile__(

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#363: FILE: include/asm-i386/spinlock.h:97:
+		:"=q" (oldval), "=m" (lock->lock)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#364: FILE: include/asm-i386/spinlock.h:98:
+		:"0" (0) : "memory");
 		^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#386: FILE: include/asm-i386/spinlock.h:126:
+#define RWLOCK_MAGIC_INIT	, RWLOCK_MAGIC, -1
                          	^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#386: FILE: include/asm-i386/spinlock.h:126:
+#define RWLOCK_MAGIC_INIT	, RWLOCK_MAGIC, -1

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000519005.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 30 warnings, 6 checks, 352 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000519005.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
