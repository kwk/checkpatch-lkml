WARNING:SPACING: space prohibited between function name and open parenthesis '('
#64: FILE: drivers/w1/w1.c:142:
+	struct w1_master *md = container_of (dev, struct w1_master, dev);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: drivers/w1/w1.c:144:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#67: FILE: drivers/w1/w1.c:145:
+	if (down_interruptible (&md->mutex))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&md->mutex'
#67: FILE: drivers/w1/w1.c:145:
+	if (down_interruptible (&md->mutex))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: drivers/w1/w1.c:149:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: drivers/w1/w1.c:159:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: drivers/w1/w1.c:164:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#94: FILE: drivers/w1/w1.c:172:
+	ssize_t count;
+	count = sprintf(buf, "%d\n", w1_timeout);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: drivers/w1/w1.c:180:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: drivers/w1/w1.c:185:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: drivers/w1/w1.c:194:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: drivers/w1/w1.c:199:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: drivers/w1/w1.c:208:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: drivers/w1/w1.c:213:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: drivers/w1/w1.c:236:
+ ^I^I^Ic -= snprintf(buf + PAGE_SIZE - c, c, "%s\n", sl->name);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#170: FILE: drivers/w1/w1.c:236:
+ ^I^I^Ic -= snprintf(buf + PAGE_SIZE - c, c, "%s\n", sl->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/w1/w1.c:236:
+ ^I^I^Ic -= snprintf(buf + PAGE_SIZE - c, c, "%s\n", sl->name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: drivers/w1/w1.c:247:
+ ^I^I^I.name = "w1_master_slaves",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#185: FILE: drivers/w1/w1.c:247:
+ ^I^I^I.name = "w1_master_slaves",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: drivers/w1/w1.c:247:
+ ^I^I^I.name = "w1_master_slaves",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: drivers/w1/w1.c:251:
+ ^I.show = &w1_master_attribute_show_slaves,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#190: FILE: drivers/w1/w1.c:251:
+ ^I.show = &w1_master_attribute_show_slaves,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: drivers/w1/w1.c:251:
+ ^I.show = &w1_master_attribute_show_slaves,$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#192: FILE: drivers/w1/w1.c:253:
+};
+static struct device_attribute w1_master_attribute_slave_count = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#195: FILE: drivers/w1/w1.c:256:
+			.mode = S_IRUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#200: FILE: drivers/w1/w1.c:261:
+};
+static struct device_attribute w1_master_attribute_attempts = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#203: FILE: drivers/w1/w1.c:264:
+			.mode = S_IRUGO,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#208: FILE: drivers/w1/w1.c:269:
+};
+static struct device_attribute w1_master_attribute_max_slave_count = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#211: FILE: drivers/w1/w1.c:272:
+			.mode = S_IRUGO,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#216: FILE: drivers/w1/w1.c:277:
+};
+static struct device_attribute w1_master_attribute_timeout = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#219: FILE: drivers/w1/w1.c:280:
+			.mode = S_IRUGO,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#224: FILE: drivers/w1/w1.c:285:
+};
+static struct device_attribute w1_master_attribute_pointer = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#227: FILE: drivers/w1/w1.c:288:
+			.mode = S_IRUGO,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#232: FILE: drivers/w1/w1.c:293:
+};
+static struct device_attribute w1_master_attribute_name = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#235: FILE: drivers/w1/w1.c:296:
+			.mode = S_IRUGO,

ERROR:SPACING: space prohibited after that open parenthesis '('
#248: FILE: drivers/w1/w1.c:569:
+	if (	device_create_file(&dev->dev, &w1_master_attribute_slaves) < 0 ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: drivers/w1/w1.c:570:
+	if (	device_create_file(&dev->dev, &w1_master_attribute_slaves) < 0 ||
+		device_create_file(&dev->dev, &w1_master_attribute_slave_count) < 0 ||

ERROR:SPACING: spaces required around that '||' (ctx:VxE)
#252: FILE: drivers/w1/w1.c:573:
+		device_create_file(&dev->dev, &w1_master_attribute_timeout) < 0||
 		                                                               ^

ERROR:SPACING: spaces required around that '||' (ctx:VxE)
#253: FILE: drivers/w1/w1.c:574:
+		device_create_file(&dev->dev, &w1_master_attribute_pointer) < 0||
 		                                                               ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#271: FILE: drivers/w1/w1.c:592:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#280: FILE: drivers/w1/w1.c:606:
+		timeout = w1_timeout*HZ;
 		                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#298: FILE: drivers/w1/w1.c:677:
+		timeout = w1_timeout*HZ;
 		                    ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#307: FILE: drivers/w1/w1.c:766:
+EXPORT_SYMBOL(w1_create_master_attributes);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#308: FILE: drivers/w1/w1.c:767:
+EXPORT_SYMBOL(w1_destroy_master_attributes);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct w1_master *' should also have an identifier name
#316: FILE: drivers/w1/w1.h:110:
+int w1_create_master_attributes(struct w1_master *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct w1_master *' should also have an identifier name
#317: FILE: drivers/w1/w1.h:111:
+void w1_destroy_master_attributes(struct w1_master *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257521.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 19 warnings, 11 checks, 277 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257521.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
