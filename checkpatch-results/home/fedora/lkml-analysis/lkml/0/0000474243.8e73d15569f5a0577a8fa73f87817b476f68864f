WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# Project Name: The Linux 2.4 Kernel

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#	           ChangeSet	1.156.1.2 -> 1.159

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#	include/asm-sparc64/pgtable.h	1.14    -> 1.15

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#	include/linux/mmzone.h	1.6     -> 1.7

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#	drivers/char/agp/agpgart_be.c	1.22    -> 1.23

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#	include/asm-s390/pgtable.h	1.4     -> 1.5

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#	         mm/vmscan.c	1.56    -> 1.57

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#	drivers/char/drm/i810_dma.c	1.5     -> 1.6

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#	include/asm-i386/pgtable.h	1.4     -> 1.5

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#	include/asm-s390x/pgtable.h	1.4     -> 1.5

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#	include/asm-sparc/pgtable.h	1.4     -> 1.5

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#	include/asm-sh/pgtable.h	1.6     -> 1.7

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#	include/asm-arm/pgtable.h	1.5     -> 1.6

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#	         fs/buffer.c	1.54    -> 1.55

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
#	        mm/filemap.c	1.53    -> 1.54

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
#	  include/linux/mm.h	1.34    -> 1.36

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
#	     mm/page_alloc.c	1.40    -> 1.42

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
#	include/asm-mips/pgtable.h	1.3     -> 1.4

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#	drivers/char/drm-4.0/i810_dma.c	1.1     -> 1.2

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
#	include/linux/pagemap.h	1.16    -> 1.17

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#	include/asm-alpha/pgtable.h	1.7     -> 1.8

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
#	         mm/Makefile	1.3.1.1 -> 1.5

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
#	include/asm-mips64/pgtable.h	1.3     -> 1.4

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
#	include/asm-sparc64/page.h	1.3     -> 1.4

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
#	include/asm-ia64/pgtable.h	1.6     -> 1.7

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
#	include/asm-cris/pgtable.h	1.5     -> 1.6

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
#	include/asm-parisc/pgtable.h	1.2     -> 1.3

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
#	include/asm-ppc/pgtable.h	1.7     -> 1.8

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#84: 
# 02/02/25	riel@imladris.surriel.com	1.158

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#85: 
# merge the mm/Makefile changes by hand

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#86: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#87: 
# 02/02/25	riel@imladris.surriel.com	1.159

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#88: 
# replace init_page_count(page) by set_page_count(page, 0) to avoid

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#89: 
# direct access to the opaque type atomic_t  (as suggested by DaveM)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#90: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#91: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#93: 
--- a/drivers/char/agp/agpgart_be.c	Mon Feb 25 23:10:17 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LINE_SPACING: Missing a blank line after declarations
#130: FILE: drivers/char/drm/i810_dma.c:299:
+		struct page *p = virt_to_page(page);
+		atomic_dec(p);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#145: FILE: drivers/char/drm-4.0/i810_dma.c:291:
+	struct page * p = virt_to_page(page);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#167: FILE: fs/buffer.c:2260:
+ * asynchronously: you need to check page->locked and page->uptodate.
                                                             ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#178: FILE: fs/buffer.c:2394:
+ * and page->uptodate.
              ^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <__SetPageReserved>
#426: FILE: include/linux/mm.h:315:
+#define __SetPageReserved(page)	__set_bit(PG_reserved, &(page)->flags)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#457: FILE: include/linux/mm.h:346:
+#define set_page_address(page, address)			\
+	do {						\
+		(page)->virtual = (address);		\
+	} while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space required before the open parenthesis '('
#460: FILE: include/linux/mm.h:349:
+	} while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#463: FILE: include/linux/mm.h:352:
+#define set_page_address(page, address)  do { } while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#476: FILE: include/linux/mm.h:365:
+#define page_address(page)						\
+	__va( (((page) - page_zone(page)->zone_mem_map) << PAGE_SHIFT)	\
+			+ page_zone(page)->zone_start_paddr)

ERROR:SPACING: space prohibited after that open parenthesis '('
#477: FILE: include/linux/mm.h:366:
+	__va( (((page) - page_zone(page)->zone_mem_map) << PAGE_SHIFT)	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#502: FILE: include/linux/mmzone.h:55:
+^I * ^I^I^I^I== BITS_PER_LONG (1 << wait_table_bits)$

ERROR:POINTER_LOCATION: "foo	* bar" should be "foo	*bar"
#523: FILE: include/linux/mmzone.h:76:
+	wait_queue_head_t	* wait_table;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#553: FILE: include/linux/pagemap.h:100:
+extern void wake_up_page(struct page *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LINE_SPACING: Missing a blank line after declarations
#616: FILE: mm/filemap.c:787:
+	unsigned long n = hash;
+	n <<= 18;

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#677: FILE: mm/filemap.c:845:
+	if (waitqueue_active(waitqueue))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#740: FILE: mm/page_alloc.c:34:
+zone_t *zone_table[MAX_NR_ZONES*MAX_NR_NODES];
                                ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'zone' - possible side-effects?
#751: FILE: mm/page_alloc.c:65:
+#define BAD_RANGE(zone, page)						\
+(									\
+	(((page) - mem_map) >= ((zone)->zone_start_mapnr+(zone)->size))	\
+	|| (((page) - mem_map) < (zone)->zone_start_mapnr)		\
+	|| ((zone) != page_zone(page))					\
+)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#751: FILE: mm/page_alloc.c:65:
+#define BAD_RANGE(zone, page)						\
+(									\
+	(((page) - mem_map) >= ((zone)->zone_start_mapnr+(zone)->size))	\
+	|| (((page) - mem_map) < (zone)->zone_start_mapnr)		\
+	|| ((zone) != page_zone(page))					\
+)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#753: FILE: mm/page_alloc.c:67:
+	(((page) - mem_map) >= ((zone)->zone_start_mapnr+(zone)->size))	\
 	                                                ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#754: FILE: mm/page_alloc.c:68:
+	(((page) - mem_map) >= ((zone)->zone_start_mapnr+(zone)->size))	\
+	|| (((page) - mem_map) < (zone)->zone_start_mapnr)		\

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#755: FILE: mm/page_alloc.c:69:
+	|| (((page) - mem_map) < (zone)->zone_start_mapnr)		\
+	|| ((zone) != page_zone(page))					\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#795: FILE: mm/page_alloc.c:154:
+^I^I * ^I-mask = 1+~mask$

ERROR:SPACING: space required before the open parenthesis '('
#906: FILE: mm/page_alloc.c:783:
+		for(i = 0; i < zone->wait_table_size; ++i)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000474243.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 51 warnings, 9 checks, 737 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000474243.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
