WARNING:SPLIT_STRING: quoted string split across lines
#63: FILE: security/slim/slm_main.c:1206:
+	dprintk(SLM_VERBOSE, "ruid %d euid %d suid %d "
+			"cur: uid %d euid %d suid %d "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#64: FILE: security/slim/slm_main.c:1207:
+			"cur: uid %d euid %d suid %d "
+			"permitted %x effective %x\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cur_tsec->iac_r == cur_tsec->iac_wx'
#102: FILE: security/slim/slm_main.c:1214:
+	if ((cur_tsec->iac_r == cur_tsec->iac_wx)
+	    && (cur_tsec->iac_r == SLM_IAC_UNTRUSTED)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cur_tsec->iac_r == SLM_IAC_UNTRUSTED'
#102: FILE: security/slim/slm_main.c:1214:
+	if ((cur_tsec->iac_r == cur_tsec->iac_wx)
+	    && (cur_tsec->iac_r == SLM_IAC_UNTRUSTED)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#103: FILE: security/slim/slm_main.c:1215:
+	if ((cur_tsec->iac_r == cur_tsec->iac_wx)
+	    && (cur_tsec->iac_r == SLM_IAC_UNTRUSTED)) {

WARNING:SPLIT_STRING: quoted string split across lines
#106: FILE: security/slim/slm_main.c:1218:
+			"Integrity: pid %d iac_r %d "
+			" iac_wx %d remains UNTRUSTED\n",

WARNING:SPLIT_STRING: quoted string split across lines
#113: FILE: security/slim/slm_main.c:1225:
+		dprintk(SLM_INTEGRITY, "setting: pid %d iac_r %d "
+			" iac_wx %d to USER\n",

WARNING:SPLIT_STRING: quoted string split across lines
#120: FILE: security/slim/slm_main.c:1232:
+		dprintk(SLM_INTEGRITY, "setting: pid %d iac_r %d "
+			" iac_wx %d to SYSTEM\n",

CHECK:BRACES: Unbalanced braces around else statement
#125: FILE: security/slim/slm_main.c:1237:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#127: FILE: security/slim/slm_main.c:1239:
+		dprintk(SLM_INTEGRITY, "%s: pid %d iac_r %d "
+			" iac_wx %d \n", __FUNCTION__,

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#127: FILE: security/slim/slm_main.c:1239:
+			" iac_wx %d \n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#127: FILE: security/slim/slm_main.c:1239:
+			" iac_wx %d \n", __FUNCTION__,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000037232.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 8 warnings, 4 checks, 91 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000037232.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
