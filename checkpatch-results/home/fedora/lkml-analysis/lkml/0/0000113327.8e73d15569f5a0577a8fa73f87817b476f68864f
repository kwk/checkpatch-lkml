WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#47: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#119: FILE: drivers/w1/masters/ds2482.c:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/delay.h> instead of <asm/delay.h>
#139: FILE: drivers/w1/masters/ds2482.c:21:
+#include <asm/delay.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#190: FILE: drivers/w1/masters/ds2482.c:72:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#197: FILE: drivers/w1/masters/ds2482.c:79:
+static const u8 ds2482_chan_wr[8] =
+	{ 0xF0, 0xE1, 0xD2, 0xC3, 0xB4, 0xA5, 0x96, 0x87 };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#199: FILE: drivers/w1/masters/ds2482.c:81:
+static const u8 ds2482_chan_rd[8] =
+	{ 0xB8, 0xB1, 0xAA, 0xA3, 0x9C, 0x95, 0x8E, 0x87 };

CHECK:LINE_SPACING: Please don't use multiple blank lines
#201: FILE: drivers/w1/masters/ds2482.c:83:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#214: FILE: drivers/w1/masters/ds2482.c:96:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#219: FILE: drivers/w1/masters/ds2482.c:101:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#258: FILE: drivers/w1/masters/ds2482.c:140:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#317: FILE: drivers/w1/masters/ds2482.c:199:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#343: FILE: drivers/w1/masters/ds2482.c:225:
+		printk(KERN_ERR "%s: timeout on channel %d\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#372: FILE: drivers/w1/masters/ds2482.c:254:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#496: FILE: drivers/w1/masters/ds2482.c:378:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#535: FILE: drivers/w1/masters/ds2482.c:417:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#544: FILE: drivers/w1/masters/ds2482.c:426:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#562: FILE: drivers/w1/masters/ds2482.c:444:
+	if (!(data = kzalloc(sizeof(struct ds2482_data), GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct ds2482_data)...)
#562: FILE: drivers/w1/masters/ds2482.c:444:
+	if (!(data = kzalloc(sizeof(struct ds2482_data), GFP_KERNEL))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPLIT_STRING: quoted string split across lines
#587: FILE: drivers/w1/masters/ds2482.c:469:
+		dev_dbg(&adapter->dev, "DS2482 (0x%02x) reset status "
+			"0x%02X - not a DS2482\n", address, temp1);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#606: FILE: drivers/w1/masters/ds2482.c:488:
+	if ((err = i2c_attach_client(new_client)))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "data->w1_ch[idx].pdev"
#635: FILE: drivers/w1/masters/ds2482.c:517:
+		if (data->w1_ch[idx].pdev != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "data->w1_ch[idx].pdev"
#651: FILE: drivers/w1/masters/ds2482.c:533:
+		if (data->w1_ch[idx].pdev != NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#656: FILE: drivers/w1/masters/ds2482.c:538:
+	if ((err = i2c_detach_client(client))) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000113327.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 5 warnings, 13 checks, 615 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000113327.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
