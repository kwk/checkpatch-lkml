CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: include/asm-i386/io_apic.h:136:
+extern int setup_one_IO_APIC_irq(int apic, int pin);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#94: FILE: arch/i386/kernel/pci-irq.c:715:
+	/* HACK. We need a generic way to detect the built-in bridges;
+	   the "bridge swizzle" rule cannot be applied for those.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#95: FILE: arch/i386/kernel/pci-irq.c:716:
+	   For now check for P64H/P64H2 bridges only. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#104: FILE: arch/i386/kernel/pci-irq.c:725:
+	/* Check that there are mp irq entries either for this bridge itself
+	   or for its children. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#104: FILE: arch/i386/kernel/pci-irq.c:725:
+	   or for its children. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#118: FILE: arch/i386/kernel/pci-irq.c:739:
+		printk(KERN_WARNING "PCI: no IRQ routing found for bridge %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#134: FILE: arch/i386/kernel/pci-irq.c:755:
+		printk(KERN_WARNING "PCI: no I/O APIC found for bridge %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#153: FILE: arch/i386/kernel/pci-irq.c:774:
+		printk(KERN_INFO "PCI: external bridge %s, INT%c fixup\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: arch/i386/kernel/pci-irq.c:836:
+					irq1 = IO_APIC_get_PCI_irq_vector(bridge->bus->number,
 							PCI_SLOT(bridge->devfn), pin);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#203: FILE: arch/i386/kernel/pci-irq.c:840:
+					/* IRQ for this device doesn't match one for parent slot.
+					   Use the latter. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#203: FILE: arch/i386/kernel/pci-irq.c:840:
+					   Use the latter. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: arch/i386/kernel/pci-irq.c:842:
+^I^I^I^I^Iprintk(KERN_WARNING "PCI: using PPB(B%d,I%d,P%d) to get irq %d\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#205: FILE: arch/i386/kernel/pci-irq.c:842:
+					printk(KERN_WARNING "PCI: using PPB(B%d,I%d,P%d) to get irq %d\n", 

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#206: FILE: arch/i386/kernel/pci-irq.c:843:
+						bridge->bus->number, PCI_SLOT(bridge->devfn), pin, irq);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: arch/i386/kernel/pci-irq.c:843:
+					printk(KERN_WARNING "PCI: using PPB(B%d,I%d,P%d) to get irq %d\n", 
+						bridge->bus->number, PCI_SLOT(bridge->devfn), pin, irq);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#224: FILE: arch/i386/kernel/io_apic.c:623:
+	idx = find_irq_entry(apic,pin,mp_INT);
 	                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#224: FILE: arch/i386/kernel/io_apic.c:623:
+	idx = find_irq_entry(apic,pin,mp_INT);
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#230: FILE: arch/i386/kernel/io_apic.c:629:
+	memset(&entry,0,sizeof(entry));
 	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#230: FILE: arch/i386/kernel/io_apic.c:629:
+	memset(&entry,0,sizeof(entry));
 	               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: arch/i386/kernel/io_apic.c:649:
+^Iif ((clustered_apic_mode == CLUSTERED_APIC_NUMAQ) $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'clustered_apic_mode == CLUSTERED_APIC_NUMAQ'
#250: FILE: arch/i386/kernel/io_apic.c:649:
+	if ((clustered_apic_mode == CLUSTERED_APIC_NUMAQ) 
+		&& (apic != 0) && (irq == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'apic != 0'
#250: FILE: arch/i386/kernel/io_apic.c:649:
+	if ((clustered_apic_mode == CLUSTERED_APIC_NUMAQ) 
+		&& (apic != 0) && (irq == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq == 0'
#250: FILE: arch/i386/kernel/io_apic.c:649:
+	if ((clustered_apic_mode == CLUSTERED_APIC_NUMAQ) 
+		&& (apic != 0) && (irq == 0))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#251: FILE: arch/i386/kernel/io_apic.c:650:
+	if ((clustered_apic_mode == CLUSTERED_APIC_NUMAQ) 
+		&& (apic != 0) && (irq == 0))

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#253: FILE: arch/i386/kernel/io_apic.c:652:
+		return 0;
+	else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: arch/i386/kernel/io_apic.c:668:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq < 16'
#270: FILE: arch/i386/kernel/io_apic.c:669:
+		if (!apic && (irq < 16))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#274: FILE: arch/i386/kernel/io_apic.c:673:
+	io_apic_write(apic, 0x11+2*pin, *(((int *)&entry)+1));
 	                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#274: FILE: arch/i386/kernel/io_apic.c:673:
+	io_apic_write(apic, 0x11+2*pin, *(((int *)&entry)+1));
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#274: FILE: arch/i386/kernel/io_apic.c:673:
+	io_apic_write(apic, 0x11+2*pin, *(((int *)&entry)+1));
 	                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#275: FILE: arch/i386/kernel/io_apic.c:674:
+	io_apic_write(apic, 0x10+2*pin, *(((int *)&entry)+0));
 	                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#275: FILE: arch/i386/kernel/io_apic.c:674:
+	io_apic_write(apic, 0x10+2*pin, *(((int *)&entry)+0));
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#275: FILE: arch/i386/kernel/io_apic.c:674:
+	io_apic_write(apic, 0x10+2*pin, *(((int *)&entry)+0));
 	                                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#307: FILE: arch/i386/kernel/io_apic.c:693:
+				printk(KERN_DEBUG " IO-APIC (apicid-pin) %d-%d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: arch/i386/kernel/io_apic.c:694:
+				printk(KERN_DEBUG " IO-APIC (apicid-pin) %d-%d",
+					mp_ioapics[apic].mpc_apicid, pin);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000387673.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 13 warnings, 15 checks, 290 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000387673.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
