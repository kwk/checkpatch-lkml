CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#193: FILE: drivers/char/random.c:1628:
+static __u32 syncookie_secret[2][16-3+SHA_DIGEST_WORDS];
                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#193: FILE: drivers/char/random.c:1628:
+static __u32 syncookie_secret[2][16-3+SHA_DIGEST_WORDS];
                                      ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#217: FILE: include/linux/cryptohash.h:1:
+#ifndef __CRYPTOHASH_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#232: FILE: lib/sha1.c:1:
+/*

ERROR:SPACING: space required after that ',' (ctx:VxV)
#243: FILE: lib/sha1.c:12:
+#define f1(x,y,z)   (z ^ (x & (y ^ z)))		/* Rounds  0-19: x ? y : z */
             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#243: FILE: lib/sha1.c:12:
+#define f1(x,y,z)   (z ^ (x & (y ^ z)))		/* Rounds  0-19: x ? y : z */
               ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#243: FILE: lib/sha1.c:12:
+#define f1(x,y,z)   (z ^ (x & (y ^ z)))		/* Rounds  0-19: x ? y : z */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#243: FILE: lib/sha1.c:12:
+#define f1(x,y,z)   (z ^ (x & (y ^ z)))		/* Rounds  0-19: x ? y : z */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'z' - possible side-effects?
#243: FILE: lib/sha1.c:12:
+#define f1(x,y,z)   (z ^ (x & (y ^ z)))		/* Rounds  0-19: x ? y : z */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'z' may be better as '(z)' to avoid precedence issues
#243: FILE: lib/sha1.c:12:
+#define f1(x,y,z)   (z ^ (x & (y ^ z)))		/* Rounds  0-19: x ? y : z */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#244: FILE: lib/sha1.c:13:
+#define f2(x,y,z)   (x ^ y ^ z)			/* Rounds 20-39: XOR */
             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#244: FILE: lib/sha1.c:13:
+#define f2(x,y,z)   (x ^ y ^ z)			/* Rounds 20-39: XOR */
               ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#244: FILE: lib/sha1.c:13:
+#define f2(x,y,z)   (x ^ y ^ z)			/* Rounds 20-39: XOR */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#244: FILE: lib/sha1.c:13:
+#define f2(x,y,z)   (x ^ y ^ z)			/* Rounds 20-39: XOR */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'z' may be better as '(z)' to avoid precedence issues
#244: FILE: lib/sha1.c:13:
+#define f2(x,y,z)   (x ^ y ^ z)			/* Rounds 20-39: XOR */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#245: FILE: lib/sha1.c:14:
+#define f3(x,y,z)   ((x & y) + (z & (x ^ y)))	/* Rounds 40-59: majority */
             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#245: FILE: lib/sha1.c:14:
+#define f3(x,y,z)   ((x & y) + (z & (x ^ y)))	/* Rounds 40-59: majority */
               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#245: FILE: lib/sha1.c:14:
+#define f3(x,y,z)   ((x & y) + (z & (x ^ y)))	/* Rounds 40-59: majority */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#245: FILE: lib/sha1.c:14:
+#define f3(x,y,z)   ((x & y) + (z & (x ^ y)))	/* Rounds 40-59: majority */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'y' - possible side-effects?
#245: FILE: lib/sha1.c:14:
+#define f3(x,y,z)   ((x & y) + (z & (x ^ y)))	/* Rounds 40-59: majority */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#245: FILE: lib/sha1.c:14:
+#define f3(x,y,z)   ((x & y) + (z & (x ^ y)))	/* Rounds 40-59: majority */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'z' may be better as '(z)' to avoid precedence issues
#245: FILE: lib/sha1.c:14:
+#define f3(x,y,z)   ((x & y) + (z & (x ^ y)))	/* Rounds 40-59: majority */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#246: FILE: lib/sha1.c:15:
+#define f4(x,y,z)   (x ^ y ^ z)			/* Rounds 60-79: XOR */
             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#246: FILE: lib/sha1.c:15:
+#define f4(x,y,z)   (x ^ y ^ z)			/* Rounds 60-79: XOR */
               ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#246: FILE: lib/sha1.c:15:
+#define f4(x,y,z)   (x ^ y ^ z)			/* Rounds 60-79: XOR */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'y' may be better as '(y)' to avoid precedence issues
#246: FILE: lib/sha1.c:15:
+#define f4(x,y,z)   (x ^ y ^ z)			/* Rounds 60-79: XOR */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'z' may be better as '(z)' to avoid precedence issues
#246: FILE: lib/sha1.c:15:
+#define f4(x,y,z)   (x ^ y ^ z)			/* Rounds 60-79: XOR */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#282: FILE: lib/sha1.c:51:
+		TEMP = W[i] ^ W[i+2] ^ W[i+8] ^ W[i+13];
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#282: FILE: lib/sha1.c:51:
+		TEMP = W[i] ^ W[i+2] ^ W[i+8] ^ W[i+13];
 		                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#282: FILE: lib/sha1.c:51:
+		TEMP = W[i] ^ W[i+2] ^ W[i+8] ^ W[i+13];
 		                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#283: FILE: lib/sha1.c:52:
+		W[i+16] = rol32(TEMP, 1);
 		   ^

ERROR:SPACING: space prohibited after that open square bracket '['
#287: FILE: lib/sha1.c:56:
+	A = digest[ 0 ];

ERROR:SPACING: space prohibited before that close square bracket ']'
#287: FILE: lib/sha1.c:56:
+	A = digest[ 0 ];

ERROR:SPACING: space prohibited after that open square bracket '['
#288: FILE: lib/sha1.c:57:
+	B = digest[ 1 ];

ERROR:SPACING: space prohibited before that close square bracket ']'
#288: FILE: lib/sha1.c:57:
+	B = digest[ 1 ];

ERROR:SPACING: space prohibited after that open square bracket '['
#289: FILE: lib/sha1.c:58:
+	C = digest[ 2 ];

ERROR:SPACING: space prohibited before that close square bracket ']'
#289: FILE: lib/sha1.c:58:
+	C = digest[ 2 ];

ERROR:SPACING: space prohibited after that open square bracket '['
#290: FILE: lib/sha1.c:59:
+	D = digest[ 3 ];

ERROR:SPACING: space prohibited before that close square bracket ']'
#290: FILE: lib/sha1.c:59:
+	D = digest[ 3 ];

ERROR:SPACING: space prohibited after that open square bracket '['
#291: FILE: lib/sha1.c:60:
+	E = digest[ 4 ];

ERROR:SPACING: space prohibited before that close square bracket ']'
#291: FILE: lib/sha1.c:60:
+	E = digest[ 4 ];

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000213272.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 2 warnings, 21 checks, 282 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000213272.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
