WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: drivers/char/pcmcia/synclink_cs.c:713:
+    pcmcia_disable_device(link->handle);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/ide/legacy/ide-cs.c:373:
+    pcmcia_disable_device(link->handle);$

CHECK:CAMELCASE: Avoid CamelCase: <BasePort1>
#265: FILE: drivers/isdn/hardware/avm/avm_cs.c:370:
+	b1pcmcia_delcard(link->io.BasePort1, link->irq.AssignedIRQ);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <AssignedIRQ>
#265: FILE: drivers/isdn/hardware/avm/avm_cs.c:370:
+	b1pcmcia_delcard(link->io.BasePort1, link->irq.AssignedIRQ);

CHECK:CAMELCASE: Avoid CamelCase: <HiSax_closecard>
#287: FILE: drivers/isdn/hisax/avma1_cs.c:381:
+	HiSax_closecard(local->node.minor);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: drivers/isdn/hisax/elsa_cs.c:384:
+    pcmcia_disable_device(link->handle);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: drivers/isdn/hisax/sedlbauer_cs.c:471:
+    pcmcia_disable_device(link->handle);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: drivers/isdn/hisax/teles_cs.c:375:
+    pcmcia_disable_device(link->handle);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#506: FILE: drivers/net/pcmcia/ibmtr_cs.c:358:
+		struct tok_info *ti = netdev_priv(dev);
+		iounmap(ti->mmio);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#589: FILE: drivers/net/pcmcia/smc91c92_cs.c:1188:
+		struct smc_private *smc = netdev_priv(dev);
+		iounmap(smc->base);

WARNING:LINE_SPACING: Missing a blank line after declarations
#622: FILE: drivers/net/pcmcia/xirc2ps_cs.c:1098:
+		local_info_t *local = netdev_priv(dev);
+		if (local->dingo)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#687: FILE: drivers/net/wireless/atmel_cs.c:426:
+	((local_info_t*)link->priv)->eth_dev = NULL;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <ramBase>
#743: FILE: drivers/net/wireless/netwave_cs.c:879:
+		iounmap(priv->ramBase);

CHECK:SPACING: No space is necessary after a cast
#795: FILE: drivers/net/wireless/wavelan_cs.c:4101:
+	struct net_device *	dev = (struct net_device *) link->priv;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#795: FILE: drivers/net/wireless/wavelan_cs.c:4101:
+	struct net_device *	dev = (struct net_device *) link->priv;

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#796: FILE: drivers/net/wireless/wavelan_cs.c:4102:
+	net_local *		lp = netdev_priv(dev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#800: FILE: drivers/net/wireless/wavelan_cs.c:4105:
+	printk(KERN_DEBUG "%s: -> wv_pcmcia_release(0x%p)\n", dev->name, link);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#816: FILE: drivers/net/wireless/wavelan_cs.c:4112:
+	printk(KERN_DEBUG "%s: <- wv_pcmcia_release()\n", dev->name);

WARNING:LINE_SPACING: Missing a blank line after declarations
#873: FILE: drivers/parport/parport_cs.c:276:
+		struct parport *p = info->port;
+		parport_pc_unregister_port(p);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->io.BasePort1 != req->BasePort1'
#942: FILE: drivers/pcmcia/pcmcia_resource.c:503:
+	if ((c->io.BasePort1 != req->BasePort1) ||
+	    (c->io.NumPorts1 != req->NumPorts1) ||
+	    (c->io.BasePort2 != req->BasePort2) ||
+	    (c->io.NumPorts2 != req->NumPorts2))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->io.NumPorts1 != req->NumPorts1'
#942: FILE: drivers/pcmcia/pcmcia_resource.c:503:
+	if ((c->io.BasePort1 != req->BasePort1) ||
+	    (c->io.NumPorts1 != req->NumPorts1) ||
+	    (c->io.BasePort2 != req->BasePort2) ||
+	    (c->io.NumPorts2 != req->NumPorts2))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->io.BasePort2 != req->BasePort2'
#942: FILE: drivers/pcmcia/pcmcia_resource.c:503:
+	if ((c->io.BasePort1 != req->BasePort1) ||
+	    (c->io.NumPorts1 != req->NumPorts1) ||
+	    (c->io.BasePort2 != req->BasePort2) ||
+	    (c->io.NumPorts2 != req->NumPorts2))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->io.NumPorts2 != req->NumPorts2'
#942: FILE: drivers/pcmcia/pcmcia_resource.c:503:
+	if ((c->io.BasePort1 != req->BasePort1) ||
+	    (c->io.NumPorts1 != req->NumPorts1) ||
+	    (c->io.BasePort2 != req->BasePort2) ||
+	    (c->io.NumPorts2 != req->NumPorts2))

CHECK:CAMELCASE: Avoid CamelCase: <NumPorts1>
#943: FILE: drivers/pcmcia/pcmcia_resource.c:504:
+	    (c->io.NumPorts1 != req->NumPorts1) ||

CHECK:CAMELCASE: Avoid CamelCase: <BasePort2>
#944: FILE: drivers/pcmcia/pcmcia_resource.c:505:
+	    (c->io.BasePort2 != req->BasePort2) ||

CHECK:CAMELCASE: Avoid CamelCase: <NumPorts2>
#945: FILE: drivers/pcmcia/pcmcia_resource.c:506:
+	    (c->io.NumPorts2 != req->NumPorts2))

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#956: FILE: drivers/pcmcia/pcmcia_resource.c:523:
+	config_t *c= p_dev->function_config;
 	           ^

CHECK:CAMELCASE: Avoid CamelCase: <Attributes>
#976: FILE: drivers/pcmcia/pcmcia_resource.c:531:
+	if (c->irq.Attributes != req->Attributes)

CHECK:CAMELCASE: Avoid CamelCase: <Config>
#980: FILE: drivers/pcmcia/pcmcia_resource.c:535:
+	if (--s->irq.Config == 0) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#991: FILE: drivers/pcmcia/pcmcia_resource.c:929:
+void pcmcia_disable_device(struct pcmcia_device *p_dev) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000088511.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 11 warnings, 14 checks, 890 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000088511.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
