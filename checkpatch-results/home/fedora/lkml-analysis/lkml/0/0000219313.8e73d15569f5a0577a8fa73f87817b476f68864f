WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#278: FILE: include/asm-ppc64/lppaca.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: include/asm-ppc64/lppaca.h:4:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: include/asm-ppc64/lppaca.h:9:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: include/asm-ppc64/lppaca.h:14:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#293: FILE: include/asm-ppc64/lppaca.h:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#294: FILE: include/asm-ppc64/lppaca.h:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#300: FILE: include/asm-ppc64/lppaca.h:23:
+//                                   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: include/asm-ppc64/lppaca.h:24:
+//^IThis control block contains the data that is shared between the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: include/asm-ppc64/lppaca.h:26:
+//    $

CHECK:CAMELCASE: Avoid CamelCase: <ItLpPaca>
#308: FILE: include/asm-ppc64/lppaca.h:31:
+struct ItLpPaca

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#309: FILE: include/asm-ppc64/lppaca.h:32:
+struct ItLpPaca
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: include/asm-ppc64/lppaca.h:35:
+// NOTE: The xDynXyz fields are fields that will be dynamically changed by $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: include/asm-ppc64/lppaca.h:36:
+// PLIC when preparing to bring a processor online or when dispatching a $

CHECK:CAMELCASE: Avoid CamelCase: <xDesc>
#316: FILE: include/asm-ppc64/lppaca.h:39:
+	u32	xDesc;			// Eye catcher 0xD397D781	x00-x03

CHECK:CAMELCASE: Avoid CamelCase: <xSize>
#317: FILE: include/asm-ppc64/lppaca.h:40:
+	u16	xSize;			// Size of this struct		x04-x05

CHECK:CAMELCASE: Avoid CamelCase: <xRsvd1_0>
#318: FILE: include/asm-ppc64/lppaca.h:41:
+	u16	xRsvd1_0;		// Reserved			x06-x07

CHECK:CAMELCASE: Avoid CamelCase: <xRsvd1_1>
#319: FILE: include/asm-ppc64/lppaca.h:42:
+	u16	xRsvd1_1:14;		// Reserved			x08-x09

CHECK:CAMELCASE: Avoid CamelCase: <xSharedProc>
#320: FILE: include/asm-ppc64/lppaca.h:43:
+	u8	xSharedProc:1;		// Shared processor indicator	...

CHECK:CAMELCASE: Avoid CamelCase: <xSecondaryThread>
#321: FILE: include/asm-ppc64/lppaca.h:44:
+	u8	xSecondaryThread:1;	// Secondary thread indicator	...

CHECK:CAMELCASE: Avoid CamelCase: <xDynProcStatus>
#322: FILE: include/asm-ppc64/lppaca.h:45:
+	volatile u8 xDynProcStatus:8;	// Dynamic Status of this proc	x0A-x0A

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#322: FILE: include/asm-ppc64/lppaca.h:45:
+	volatile u8 xDynProcStatus:8;	// Dynamic Status of this proc	x0A-x0A

CHECK:CAMELCASE: Avoid CamelCase: <xSecondaryThreadCnt>
#323: FILE: include/asm-ppc64/lppaca.h:46:
+	u8	xSecondaryThreadCnt;	// Secondary thread count	x0B-x0B

CHECK:CAMELCASE: Avoid CamelCase: <xDynHvPhysicalProcIndex>
#324: FILE: include/asm-ppc64/lppaca.h:47:
+	volatile u16 xDynHvPhysicalProcIndex;// Dynamic HV Physical Proc Index0C-x0D

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#324: FILE: include/asm-ppc64/lppaca.h:47:
+	volatile u16 xDynHvPhysicalProcIndex;// Dynamic HV Physical Proc Index0C-x0D

CHECK:CAMELCASE: Avoid CamelCase: <xDynHvLogicalProcIndex>
#325: FILE: include/asm-ppc64/lppaca.h:48:
+	volatile u16 xDynHvLogicalProcIndex;// Dynamic HV Logical Proc Indexx0E-x0F

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#325: FILE: include/asm-ppc64/lppaca.h:48:
+	volatile u16 xDynHvLogicalProcIndex;// Dynamic HV Logical Proc Indexx0E-x0F

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#326: FILE: include/asm-ppc64/lppaca.h:49:
+^Iu32^IxDecrVal;   ^I^I// Value for Decr programming ^Ix10-x13$

CHECK:CAMELCASE: Avoid CamelCase: <xDecrVal>
#326: FILE: include/asm-ppc64/lppaca.h:49:
+	u32	xDecrVal;   		// Value for Decr programming 	x10-x13

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#327: FILE: include/asm-ppc64/lppaca.h:50:
+^Iu32^IxPMCVal;       ^I^I// Value for PMC regs         ^Ix14-x17$

CHECK:CAMELCASE: Avoid CamelCase: <xPMCVal>
#327: FILE: include/asm-ppc64/lppaca.h:50:
+	u32	xPMCVal;       		// Value for PMC regs         	x14-x17

CHECK:CAMELCASE: Avoid CamelCase: <xDynHwNodeId>
#328: FILE: include/asm-ppc64/lppaca.h:51:
+	volatile u32 xDynHwNodeId;	// Dynamic Hardware Node id	x18-x1B

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#328: FILE: include/asm-ppc64/lppaca.h:51:
+	volatile u32 xDynHwNodeId;	// Dynamic Hardware Node id	x18-x1B

CHECK:CAMELCASE: Avoid CamelCase: <xDynHwProcId>
#329: FILE: include/asm-ppc64/lppaca.h:52:
+	volatile u32 xDynHwProcId;	// Dynamic Hardware Proc Id	x1C-x1F

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#329: FILE: include/asm-ppc64/lppaca.h:52:
+	volatile u32 xDynHwProcId;	// Dynamic Hardware Proc Id	x1C-x1F

CHECK:CAMELCASE: Avoid CamelCase: <xDynPIR>
#330: FILE: include/asm-ppc64/lppaca.h:53:
+	volatile u32 xDynPIR;		// Dynamic ProcIdReg value	x20-x23

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#330: FILE: include/asm-ppc64/lppaca.h:53:
+	volatile u32 xDynPIR;		// Dynamic ProcIdReg value	x20-x23

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#331: FILE: include/asm-ppc64/lppaca.h:54:
+^Iu32^IxDseiData;           ^I// DSEI data                  ^Ix24-x27$

CHECK:CAMELCASE: Avoid CamelCase: <xDseiData>
#331: FILE: include/asm-ppc64/lppaca.h:54:
+	u32	xDseiData;           	// DSEI data                  	x24-x27

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#332: FILE: include/asm-ppc64/lppaca.h:55:
+^Iu64^IxSPRG3;               ^I// SPRG3 value                ^Ix28-x2F$

CHECK:CAMELCASE: Avoid CamelCase: <xSPRG3>
#332: FILE: include/asm-ppc64/lppaca.h:55:
+	u64	xSPRG3;               	// SPRG3 value                	x28-x2F

CHECK:CAMELCASE: Avoid CamelCase: <xRsvd1_3>
#333: FILE: include/asm-ppc64/lppaca.h:56:
+	u8	xRsvd1_3[80];		// Reserved			x30-x7F

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: include/asm-ppc64/lppaca.h:57:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: include/asm-ppc64/lppaca.h:57:
+   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: include/asm-ppc64/lppaca.h:61:
+^I// This Dword contains a byte for each type of interrupt that can occur.  $

CHECK:CAMELCASE: Avoid CamelCase: <xAnyInt>
#341: FILE: include/asm-ppc64/lppaca.h:64:
+		u64	xAnyInt;

CHECK:CAMELCASE: Avoid CamelCase: <xRsvd>
#343: FILE: include/asm-ppc64/lppaca.h:66:
+			u16	xRsvd;		// Reserved - cleared by #mpasmbl

CHECK:CAMELCASE: Avoid CamelCase: <xXirrInt>
#344: FILE: include/asm-ppc64/lppaca.h:67:
+			u8	xXirrInt;	// Indicates xXirrValue is valid or Immed IO

CHECK:CAMELCASE: Avoid CamelCase: <xIpiCnt>
#345: FILE: include/asm-ppc64/lppaca.h:68:
+			u8	xIpiCnt;	// IPI Count

CHECK:CAMELCASE: Avoid CamelCase: <xDecrInt>
#346: FILE: include/asm-ppc64/lppaca.h:69:
+			u8	xDecrInt;	// DECR interrupt occurred

CHECK:CAMELCASE: Avoid CamelCase: <xPdcInt>
#347: FILE: include/asm-ppc64/lppaca.h:70:
+			u8	xPdcInt;	// PDC interrupt occurred

CHECK:CAMELCASE: Avoid CamelCase: <xQuantumInt>
#348: FILE: include/asm-ppc64/lppaca.h:71:
+			u8	xQuantumInt;	// Interrupt quantum reached

CHECK:CAMELCASE: Avoid CamelCase: <xOldPlicDeferredExtInt>
#349: FILE: include/asm-ppc64/lppaca.h:72:
+			u8	xOldPlicDeferredExtInt;	// Old PLIC has a deferred XIRR pending

CHECK:CAMELCASE: Avoid CamelCase: <xFields>
#350: FILE: include/asm-ppc64/lppaca.h:73:
+		} xFields;

CHECK:CAMELCASE: Avoid CamelCase: <xIntDword>
#351: FILE: include/asm-ppc64/lppaca.h:74:
+	} xIntDword;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: include/asm-ppc64/lppaca.h:76:
+^I// Whenever any fields in this Dword are set then PLIC will defer the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: include/asm-ppc64/lppaca.h:77:
+^I// processing of external interrupts.  Note that PLIC will store the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: include/asm-ppc64/lppaca.h:78:
+^I// XIRR directly into the xXirrValue field so that another XIRR will $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: include/asm-ppc64/lppaca.h:79:
+^I// not be presented until this one clears.  The layout of the low $

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#357: FILE: include/asm-ppc64/lppaca.h:80:
+	// 4-bytes of this Dword is upto SLIC - PLIC just checks whether the 
 	                            ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: include/asm-ppc64/lppaca.h:80:
+^I// 4-bytes of this Dword is upto SLIC - PLIC just checks whether the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: include/asm-ppc64/lppaca.h:81:
+^I// entire Dword is zero or not.  A non-zero value in the low order $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: include/asm-ppc64/lppaca.h:82:
+^I// 2-bytes will result in SLIC being granted the highest thread $

CHECK:CAMELCASE: Avoid CamelCase: <xPlicDeferIntsArea>
#361: FILE: include/asm-ppc64/lppaca.h:84:
+	u64	xPlicDeferIntsArea;	// Entire Dword

ERROR:TRAILING_WHITESPACE: trailing whitespace
#363: FILE: include/asm-ppc64/lppaca.h:86:
+^I// Used to pass the real SRR0/1 from PLIC to SLIC as well as to $

CHECK:CAMELCASE: Avoid CamelCase: <xSavedSrr0>
#365: FILE: include/asm-ppc64/lppaca.h:88:
+	u64     xSavedSrr0;             // Saved SRR0                   x10-x17

CHECK:CAMELCASE: Avoid CamelCase: <xSavedSrr1>
#366: FILE: include/asm-ppc64/lppaca.h:89:
+	u64     xSavedSrr1;             // Saved SRR1                   x18-x1F

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#368: FILE: include/asm-ppc64/lppaca.h:91:
+	// Used to pass parms from the OS to PLIC for SetAsrAndRfid
 	                ^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <xSavedGpr3>
#369: FILE: include/asm-ppc64/lppaca.h:92:
+	u64     xSavedGpr3;             // Saved GPR3                   x20-x27

CHECK:CAMELCASE: Avoid CamelCase: <xSavedGpr4>
#370: FILE: include/asm-ppc64/lppaca.h:93:
+	u64     xSavedGpr4;             // Saved GPR4                   x28-x2F

CHECK:CAMELCASE: Avoid CamelCase: <xSavedGpr5>
#371: FILE: include/asm-ppc64/lppaca.h:94:
+	u64     xSavedGpr5;             // Saved GPR5                   x30-x37

CHECK:CAMELCASE: Avoid CamelCase: <xRsvd2_1>
#373: FILE: include/asm-ppc64/lppaca.h:96:
+	u8	xRsvd2_1;		// Reserved			x38-x38

CHECK:CAMELCASE: Avoid CamelCase: <xCpuCtlsTaskAttributes>
#374: FILE: include/asm-ppc64/lppaca.h:97:
+	u8      xCpuCtlsTaskAttributes; // Task attributes for cpuctls  x39-x39

CHECK:CAMELCASE: Avoid CamelCase: <xFPRegsInUse>
#375: FILE: include/asm-ppc64/lppaca.h:98:
+	u8      xFPRegsInUse;           // FP regs in use               x3A-x3A

CHECK:CAMELCASE: Avoid CamelCase: <xPMCRegsInUse>
#376: FILE: include/asm-ppc64/lppaca.h:99:
+	u8      xPMCRegsInUse;          // PMC regs in use              x3B-x3B

CHECK:CAMELCASE: Avoid CamelCase: <xSavedDecr>
#377: FILE: include/asm-ppc64/lppaca.h:100:
+	volatile u32  xSavedDecr;	// Saved Decr Value             x3C-x3F

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#377: FILE: include/asm-ppc64/lppaca.h:100:
+	volatile u32  xSavedDecr;	// Saved Decr Value             x3C-x3F

CHECK:CAMELCASE: Avoid CamelCase: <xEmulatedTimeBase>
#378: FILE: include/asm-ppc64/lppaca.h:101:
+	volatile u64  xEmulatedTimeBase;// Emulated TB for this thread  x40-x47

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#378: FILE: include/asm-ppc64/lppaca.h:101:
+	volatile u64  xEmulatedTimeBase;// Emulated TB for this thread  x40-x47

CHECK:CAMELCASE: Avoid CamelCase: <xCurPLICLatency>
#379: FILE: include/asm-ppc64/lppaca.h:102:
+	volatile u64  xCurPLICLatency;	// Unaccounted PLIC latency     x48-x4F

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#379: FILE: include/asm-ppc64/lppaca.h:102:
+	volatile u64  xCurPLICLatency;	// Unaccounted PLIC latency     x48-x4F

ERROR:TRAILING_WHITESPACE: trailing whitespace
#380: FILE: include/asm-ppc64/lppaca.h:103:
+^Iu64     xTotPLICLatency;        // Accumulated PLIC latency     x50-x57   $

CHECK:CAMELCASE: Avoid CamelCase: <xTotPLICLatency>
#380: FILE: include/asm-ppc64/lppaca.h:103:
+	u64     xTotPLICLatency;        // Accumulated PLIC latency     x50-x57   

CHECK:CAMELCASE: Avoid CamelCase: <xWaitStateCycles>
#381: FILE: include/asm-ppc64/lppaca.h:104:
+	u64     xWaitStateCycles;       // Wait cycles for this proc    x58-x5F

CHECK:CAMELCASE: Avoid CamelCase: <xEndOfQuantum>
#382: FILE: include/asm-ppc64/lppaca.h:105:
+	u64     xEndOfQuantum;          // TB at end of quantum         x60-x67

CHECK:CAMELCASE: Avoid CamelCase: <xPDCSavedSPRG1>
#383: FILE: include/asm-ppc64/lppaca.h:106:
+	u64     xPDCSavedSPRG1;         // Saved SPRG1 for PMC int      x68-x6F

CHECK:CAMELCASE: Avoid CamelCase: <xPDCSavedSRR0>
#384: FILE: include/asm-ppc64/lppaca.h:107:
+	u64     xPDCSavedSRR0;          // Saved SRR0 for PMC int       x70-x77

CHECK:CAMELCASE: Avoid CamelCase: <xVirtualDecr>
#385: FILE: include/asm-ppc64/lppaca.h:108:
+	volatile u32 xVirtualDecr;	// Virtual DECR for shared procsx78-x7B

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#385: FILE: include/asm-ppc64/lppaca.h:108:
+	volatile u32 xVirtualDecr;	// Virtual DECR for shared procsx78-x7B

CHECK:CAMELCASE: Avoid CamelCase: <xSLBCount>
#386: FILE: include/asm-ppc64/lppaca.h:109:
+	u16     xSLBCount;              // # of SLBs to maintain        x7C-x7D

CHECK:CAMELCASE: Avoid CamelCase: <xIdle>
#387: FILE: include/asm-ppc64/lppaca.h:110:
+	u8      xIdle;                  // Indicate OS is idle          x7E

CHECK:CAMELCASE: Avoid CamelCase: <xRsvd2_2>
#388: FILE: include/asm-ppc64/lppaca.h:111:
+	u8      xRsvd2_2;               // Reserved                     x7F

CHECK:LINE_SPACING: Please don't use multiple blank lines
#390: FILE: include/asm-ppc64/lppaca.h:113:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#394: FILE: include/asm-ppc64/lppaca.h:117:
+^I// This is the xYieldCount.  An "odd" value (low bit on) means that $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: include/asm-ppc64/lppaca.h:118:
+^I// the processor is yielded (either because of an OS yield or a PLIC $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: include/asm-ppc64/lppaca.h:119:
+^I// preempt).  An even value implies that the processor is currently $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: include/asm-ppc64/lppaca.h:121:
+^I// NOTE: This value will ALWAYS be zero for dedicated processors and $

CHECK:CAMELCASE: Avoid CamelCase: <xYieldCount>
#400: FILE: include/asm-ppc64/lppaca.h:123:
+	volatile u32 xYieldCount;	// PLIC increments each dispatchx00-x03

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#400: FILE: include/asm-ppc64/lppaca.h:123:
+	volatile u32 xYieldCount;	// PLIC increments each dispatchx00-x03

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: include/asm-ppc64/lppaca.h:124:
+^Iu8^IxRsvd3_0[124];^I^I// Reserved                     x04-x7F         $

CHECK:CAMELCASE: Avoid CamelCase: <xRsvd3_0>
#401: FILE: include/asm-ppc64/lppaca.h:124:
+	u8	xRsvd3_0[124];		// Reserved                     x04-x7F         

CHECK:CAMELCASE: Avoid CamelCase: <xPmcSaveArea>
#406: FILE: include/asm-ppc64/lppaca.h:129:
+	u8      xPmcSaveArea[256];	// PMC interrupt Area           x00-xFF

CHECK:LINE_SPACING: Please don't use multiple blank lines
#408: FILE: include/asm-ppc64/lppaca.h:131:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000219313.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 19 warnings, 56 checks, 197 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000219313.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
