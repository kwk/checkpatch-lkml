WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
> It may well be that interrupt stacks are a win anyway. If we can get the kernel

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#64: FILE: include/asm-i386/processor.h:451:
+unsigned min_stack_headroom(struct task_struct *tsk);

CHECK:SPACING: No space is necessary after a cast
#68: FILE: include/asm-i386/processor.h:455:
+			((struct task_struct *) __get_free_pages(GFP_KERNEL,1));	\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#68: FILE: include/asm-i386/processor.h:455:
+			((struct task_struct *) __get_free_pages(GFP_KERNEL,1));	\
 			                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#70: FILE: include/asm-i386/processor.h:457:
+			memset(p+1, 0xa5, PAGE_SIZE*2 - sizeof(*p));			\
 			        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#70: FILE: include/asm-i386/processor.h:457:
+			memset(p+1, 0xa5, PAGE_SIZE*2 - sizeof(*p));			\
 			                           ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#89: FILE: kernel/sched.c:1106:
+static unsigned min_ever_stack_headroom = ~0U;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#93: FILE: kernel/sched.c:1110:
+unsigned min_stack_headroom(struct task_struct *tsk)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#96: FILE: kernel/sched.c:1113:
+	unsigned ret;

WARNING:LINE_SPACING: Missing a blank line after declarations
#97: FILE: kernel/sched.c:1114:
+	unsigned ret;
+	while (*p == 0xa5a5a5a5)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#109: FILE: kernel/sched.c:1126:
+static void show_task(struct task_struct * p,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: kernel/sched.c:1127:
+static void show_task(struct task_struct * p,
+		unsigned *least_spare_stack, pid_t *pid)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#110: FILE: kernel/sched.c:1127:
+		unsigned *least_spare_stack, pid_t *pid)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#128: FILE: kernel/sched.c:1153:
+		printk("%5lu %5d %6d ", free, p->pid, p->p_pptr->pid);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#136: FILE: kernel/sched.c:1160:
+	printk("%5d ????? %6d ", p->pid, p->p_pptr->pid);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#145: FILE: kernel/sched.c:1206:
+	unsigned least_spare_stack;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#169: FILE: kernel/sched.c:1232:
+		printk("Minimum stack headroom: pid %d with %u bytes\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: kernel/sched.c:1233:
+		printk("Minimum stack headroom: pid %d with %u bytes\n",
+			pid, least_spare_stack);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#171: FILE: kernel/sched.c:1234:
+		printk("Minimum ever: `%s' with %u bytes\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: kernel/sched.c:1235:
+		printk("Minimum ever: `%s' with %u bytes\n",
+				min_stack_name, min_ever_stack_headroom);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000530716.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 12 warnings, 6 checks, 121 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000530716.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
