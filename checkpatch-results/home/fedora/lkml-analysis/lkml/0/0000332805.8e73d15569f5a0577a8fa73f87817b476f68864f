WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#58: 
diff -urN linux-2.6.0-test6-bk3/fs/Kconfig linux-2.6.0-test6-bk3-dirty/fs/Kconfig

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#93: FILE: fs/cifs/cifsencrypt.c:35:
+static int cifs_calculate_signature(const struct smb_hdr * cifs_pdu, struct crypto_tfm *md5_tfm,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: fs/cifs/cifsencrypt.c:36:
+static int cifs_calculate_signature(const struct smb_hdr * cifs_pdu, struct crypto_tfm *md5_tfm,
+	const char * key, char * signature)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#94: FILE: fs/cifs/cifsencrypt.c:36:
+	const char * key, char * signature)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#94: FILE: fs/cifs/cifsencrypt.c:36:
+	const char * key, char * signature)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#108: FILE: fs/cifs/cifsencrypt.c:45:
+	sg[0].length = CIFS_SESSION_KEY_SIZE+16;
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Protocol>
#109: FILE: fs/cifs/cifsencrypt.c:46:
+	sg[1].page = virt_to_page(cifs_pdu->Protocol);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space required after that ',' (ctx:VxV)
#123: FILE: fs/cifs/cifsencrypt.c:78:
+	rc = cifs_calculate_signature(cifs_pdu, ses->md5_tfm, ses->mac_signing_key,smb_signature);
 	                                                                          ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#133: FILE: fs/cifs/cifsencrypt.c:87:
+int cifs_verify_signature(struct smb_hdr * cifs_pdu, const struct cifsSesInfo * ses,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#133: FILE: fs/cifs/cifsencrypt.c:87:
+int cifs_verify_signature(struct smb_hdr * cifs_pdu, const struct cifsSesInfo * ses,

CHECK:CAMELCASE: Avoid CamelCase: <cifsSesInfo>
#133: FILE: fs/cifs/cifsencrypt.c:87:
+int cifs_verify_signature(struct smb_hdr * cifs_pdu, const struct cifsSesInfo * ses,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: fs/cifs/cifsencrypt.c:88:
+int cifs_verify_signature(struct smb_hdr * cifs_pdu, const struct cifsSesInfo * ses,
+	const char * mac_key, __u32 expected_sequence_number)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#134: FILE: fs/cifs/cifsencrypt.c:88:
+	const char * mac_key, __u32 expected_sequence_number)

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: fs/cifs/cifsencrypt.c:122:
+        rc = cifs_calculate_signature(cifs_pdu, ses->md5_tfm, mac_key,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: fs/cifs/cifsencrypt.c:122:
+        rc = cifs_calculate_signature(cifs_pdu, ses->md5_tfm, mac_key,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: fs/cifs/cifsencrypt.c:123:
+        rc = cifs_calculate_signature(cifs_pdu, ses->md5_tfm, mac_key,
 		what_we_think_sig_should_be);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#152: FILE: fs/cifs/cifsencrypt.c:139:
+int cifs_calculate_mac_key(const struct cifsSesInfo * ses, char * key, const char * rn,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#152: FILE: fs/cifs/cifsencrypt.c:139:
+int cifs_calculate_mac_key(const struct cifsSesInfo * ses, char * key, const char * rn,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#152: FILE: fs/cifs/cifsencrypt.c:139:
+int cifs_calculate_mac_key(const struct cifsSesInfo * ses, char * key, const char * rn,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: fs/cifs/cifsencrypt.c:140:
+int cifs_calculate_mac_key(const struct cifsSesInfo * ses, char * key, const char * rn,
+	const char * password)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: fs/cifs/cifsencrypt.c:140:
+	const char * password)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: fs/cifs/cifsencrypt.c:198:
+    $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: fs/cifs/cifsencrypt.c:198:
+    $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#251: FILE: fs/cifs/cifsencrypt.c:247:
+	sg[1].length = (user_name_len+dom_name_len)*2;
 	                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#251: FILE: fs/cifs/cifsencrypt.c:247:
+	sg[1].length = (user_name_len+dom_name_len)*2;
 	                                           ^

CHECK:CAMELCASE: Avoid CamelCase: <cryptKey>
#277: FILE: fs/cifs/cifsencrypt.c:269:
+	sg[1].page = virt_to_page(ses->server->cryptKey);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#290: FILE: fs/cifs/cifsencrypt.h:1:
+#ifndef CIFSENCRYPT_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#300: FILE: fs/cifs/cifsencrypt.h:11:
+extern void cifs_prepare_keypads(u8 *ipad, u8 *opad, const u8 *key, int len);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#301: FILE: fs/cifs/cifsencrypt.h:12:
+extern void cifs_update_with_opad(struct crypto_tfm *md5_tfm, u8 *pad, u8 *digest);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#302: FILE: fs/cifs/cifsencrypt.h:13:
+extern void cifs_do_hash(struct crypto_tfm *tfm, struct scatterlist *sg, int n, u8 *digest);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#346: FILE: fs/cifs/cifsproto.h:231:
+extern int cifs_verify_signature(const struct smb_hdr *, const struct cifsSesInfo * ses,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#346: FILE: fs/cifs/cifsproto.h:231:
+extern int cifs_verify_signature(const struct smb_hdr *, const struct cifsSesInfo * ses,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct smb_hdr *' should also have an identifier name
#346: FILE: fs/cifs/cifsproto.h:231:
+extern int cifs_verify_signature(const struct smb_hdr *, const struct cifsSesInfo * ses,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: fs/cifs/cifsproto.h:232:
+extern int cifs_verify_signature(const struct smb_hdr *, const struct cifsSesInfo * ses,
+	const char * mac_key, __u32 expected_sequence_number);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#347: FILE: fs/cifs/cifsproto.h:232:
+	const char * mac_key, __u32 expected_sequence_number);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#348: FILE: fs/cifs/cifsproto.h:233:
+extern int cifs_calculate_mac_key(const struct cifsSesInfo * ses, char * key,const char * rn,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#348: FILE: fs/cifs/cifsproto.h:233:
+extern int cifs_calculate_mac_key(const struct cifsSesInfo * ses, char * key,const char * rn,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#348: FILE: fs/cifs/cifsproto.h:233:
+extern int cifs_calculate_mac_key(const struct cifsSesInfo * ses, char * key,const char * rn,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#348: FILE: fs/cifs/cifsproto.h:233:
+extern int cifs_calculate_mac_key(const struct cifsSesInfo * ses, char * key,const char * rn,
                                                                             ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#348: FILE: fs/cifs/cifsproto.h:233:
+extern int cifs_calculate_mac_key(const struct cifsSesInfo * ses, char * key,const char * rn,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: fs/cifs/cifsproto.h:234:
+extern int cifs_calculate_mac_key(const struct cifsSesInfo * ses, char * key,const char * rn,
+	const char * pass);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#349: FILE: fs/cifs/cifsproto.h:234:
+	const char * pass);

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#357: FILE: fs/cifs/connect.c:18:
  *   along with this library; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#358: FILE: fs/cifs/connect.c:19:
  *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA $

CHECK:CAMELCASE: Avoid CamelCase: <SMBNTencrypt>
#369: FILE: fs/cifs/connect.c:46:
+extern void SMBNTencrypt(const struct cifsSesInfo *ses, unsigned char *passwd, unsigned char *c8,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#369: FILE: fs/cifs/connect.c:46:
+extern void SMBNTencrypt(const struct cifsSesInfo *ses, unsigned char *passwd, unsigned char *c8,

CHECK:CAMELCASE: Avoid CamelCase: <pSesInfo>
#378: FILE: fs/cifs/connect.c:683:
+					SMBNTencrypt(pSesInfo, pSesInfo->password_with_pad,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#379: FILE: fs/cifs/connect.c:684:
+					SMBNTencrypt(pSesInfo, pSesInfo->password_with_pad,
 						pSesInfo->server->cryptKey,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#384: FILE: fs/cifs/connect.c:688:
+					cifs_calculate_mac_key(pSesInfo, pSesInfo->mac_signing_key,
 						ntlm_session_key,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#393: FILE: fs/cifs/connect.c:702:
+			SMBNTencrypt(pSesInfo, pSesInfo->password_with_pad,
 				pSesInfo->server->cryptKey,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#397: FILE: fs/cifs/connect.c:705:
+^I^I^Icifs_calculate_mac_key(pSesInfo, pSesInfo->mac_signing_key, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#398: FILE: fs/cifs/connect.c:706:
+			cifs_calculate_mac_key(pSesInfo, pSesInfo->mac_signing_key, 
 				ntlm_session_key, pSesInfo->password_with_pad);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pSesInfo->md5_tfm"
#408: FILE: fs/cifs/connect.c:923:
+			if (unlikely(pSesInfo->md5_tfm == NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#409: FILE: fs/cifs/connect.c:924:
+				printk(KERN_WARNING "failed to load transform for md5\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pSesInfo->md4_tfm"
#413: FILE: fs/cifs/connect.c:928:
+			if (unlikely(pSesInfo->md4_tfm == NULL)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#414: FILE: fs/cifs/connect.c:929:
+				printk(KERN_WARNING "failed to load transform for md4\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pSesInfo->md5_tfm"
#425: FILE: fs/cifs/connect.c:1014:
+		if (pSesInfo->md5_tfm != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pSesInfo->md4_tfm"
#429: FILE: fs/cifs/connect.c:1018:
+		if (pSesInfo->md4_tfm != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ses->md5_tfm"
#441: FILE: fs/cifs/connect.c:2446:
+	if (ses->md5_tfm != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ses->md4_tfm"
#445: FILE: fs/cifs/connect.c:2450:
+	if (ses->md4_tfm != NULL) {

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#484: FILE: fs/cifs/smbencrypt.c:68:
+void nt_lm_owf_gen(const struct cifsSesInfo *ses, char *pwd, unsigned char nt_p16[16],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#485: FILE: fs/cifs/smbencrypt.c:69:
+void nt_lm_owf_gen(const struct cifsSesInfo *ses, char *pwd, unsigned char nt_p16[16],
+	unsigned char p16[16]);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#491: FILE: fs/cifs/smbencrypt.c:74:
+void SMBNTencrypt(const struct cifsSesInfo *ses, unsigned char *passwd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#492: FILE: fs/cifs/smbencrypt.c:75:
+void SMBNTencrypt(const struct cifsSesInfo *ses, unsigned char *passwd,
+	unsigned char *c8, unsigned char *p24);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#525: FILE: fs/cifs/smbencrypt.c:175:
+nt_lm_owf_gen(const struct cifsSesInfo *ses, char *pwd, unsigned char nt_p16[16], unsigned char p16[16])

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#544: FILE: fs/cifs/smbencrypt.c:215:
+ntv2_owf_gen(struct crypto_tfm *md5_tfm, const unsigned char owf[16], const char *user_n,
 		const char *domain_n, unsigned char kr_buf[16],

ERROR:TRAILING_WHITESPACE: trailing whitespace
#583: FILE: fs/cifs/smbencrypt.c:251:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: fs/cifs/smbencrypt.c:251:
+    $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: fs/cifs/smbencrypt.c:302:
+SMBNTencrypt(const struct cifsSesInfo *ses, unsigned char *passwd, unsigned char *c8,
+	unsigned char *p24)

CHECK:CAMELCASE: Avoid CamelCase: <SMBOWFencrypt_ntv2>
#611: FILE: fs/cifs/smbencrypt.c:321:
+SMBOWFencrypt_ntv2(struct crypto_tfm *md5_tfm, const unsigned char kr[16],

ERROR:CODE_INDENT: code indent should use tabs where possible
#616: FILE: fs/cifs/smbencrypt.c:325:
+        struct scatterlist sg[3];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: fs/cifs/smbencrypt.c:325:
+        struct scatterlist sg[3];$

CHECK:CAMELCASE: Avoid CamelCase: <LMv2_generate_response>
#646: FILE: fs/cifs/smbencrypt.c:351:
+static struct data_blob LMv2_generate_response(struct crypto_tfm *md5_tfm,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#647: FILE: fs/cifs/smbencrypt.c:352:
+static struct data_blob LMv2_generate_response(struct crypto_tfm *md5_tfm,
+	const unsigned char ntlm_v2_hash[16], const struct data_blob * server_chal)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#647: FILE: fs/cifs/smbencrypt.c:352:
+	const unsigned char ntlm_v2_hash[16], const struct data_blob * server_chal)

ERROR:CODE_INDENT: code indent should use tabs where possible
#656: FILE: fs/cifs/smbencrypt.c:362:
+        SMBOWFencrypt_ntv2(md5_tfm, ntlm_v2_hash, server_chal, &lmv2_client_data, lmv2_response);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: fs/cifs/smbencrypt.c:362:
+        SMBOWFencrypt_ntv2(md5_tfm, ntlm_v2_hash, server_chal, &lmv2_client_data, lmv2_response);$

CHECK:CAMELCASE: Avoid CamelCase: <SMBsesskeygen_ntv2>
#665: FILE: fs/cifs/smbencrypt.c:416:
+SMBsesskeygen_ntv2(struct crypto_tfm *md5_tfm, const unsigned char kr[16],

CHECK:CAMELCASE: Avoid CamelCase: <SMBsesskeygen_ntv1>
#694: FILE: fs/cifs/smbencrypt.c:441:
+SMBsesskeygen_ntv1(struct crypto_tfm *md4_tfm, const unsigned char kr[16],

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#713: FILE: fs/cifs/smbencrypt.c:478:
+int SMBNTLMv2encrypt(const struct cifsSesInfo* ses, const char *user, const char *domain, const char *password,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#713: FILE: fs/cifs/smbencrypt.c:478:
+int SMBNTLMv2encrypt(const struct cifsSesInfo* ses, const char *user, const char *domain, const char *password,

CHECK:CAMELCASE: Avoid CamelCase: <SMBNTLMv2encrypt>
#713: FILE: fs/cifs/smbencrypt.c:478:
+int SMBNTLMv2encrypt(const struct cifsSesInfo* ses, const char *user, const char *domain, const char *password,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#714: FILE: fs/cifs/smbencrypt.c:479:
+int SMBNTLMv2encrypt(const struct cifsSesInfo* ses, const char *user, const char *domain, const char *password,
                       const struct data_blob *server_chal,

ERROR:CODE_INDENT: code indent should use tabs where possible
#722: FILE: fs/cifs/smbencrypt.c:486:
+        E_md4hash(ses->md4_tfm, password, nt_hash);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: fs/cifs/smbencrypt.c:486:
+        E_md4hash(ses->md4_tfm, password, nt_hash);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#729: FILE: fs/cifs/smbencrypt.c:492:
+        ntv2_owf_gen(ses->md5_tfm, nt_hash, user, domain, ntlm_v2_hash,nls_codepage);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: fs/cifs/smbencrypt.c:492:
+        ntv2_owf_gen(ses->md5_tfm, nt_hash, user, domain, ntlm_v2_hash,nls_codepage);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#729: FILE: fs/cifs/smbencrypt.c:492:
+        ntv2_owf_gen(ses->md5_tfm, nt_hash, user, domain, ntlm_v2_hash,nls_codepage);
                                                                       ^

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#738: FILE: fs/cifs/smbencrypt.c:502:
+                        SMBsesskeygen_ntv2(ses->md5_tfm, ntlm_v2_hash, nt_response->data, nt_session_key->data);

ERROR:CODE_INDENT: code indent should use tabs where possible
#738: FILE: fs/cifs/smbencrypt.c:502:
+                        SMBsesskeygen_ntv2(ses->md5_tfm, ntlm_v2_hash, nt_response->data, nt_session_key->data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#738: FILE: fs/cifs/smbencrypt.c:502:
+                        SMBsesskeygen_ntv2(ses->md5_tfm, ntlm_v2_hash, nt_response->data, nt_session_key->data);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#746: FILE: fs/cifs/smbencrypt.c:509:
+                *lm_response = LMv2_generate_response(ses->md5_tfm, ntlm_v2_hash, server_chal);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#746: FILE: fs/cifs/smbencrypt.c:509:
+                *lm_response = LMv2_generate_response(ses->md5_tfm, ntlm_v2_hash, server_chal);$

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#758: FILE: fs/cifs/transport.c:270:
+				rc = cifs_verify_signature(out_buf, ses, ses->mac_signing_key,midQ->sequence_number); /* BB fix BB */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#758: FILE: fs/cifs/transport.c:270:
+				rc = cifs_verify_signature(out_buf, ses, ses->mac_signing_key,midQ->sequence_number); /* BB fix BB */
 				                                                             ^

CHECK:CAMELCASE: Avoid CamelCase: <midQ>
#758: FILE: fs/cifs/transport.c:270:
+				rc = cifs_verify_signature(out_buf, ses, ses->mac_signing_key,midQ->sequence_number); /* BB fix BB */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000332805.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 34 errors, 21 warnings, 41 checks, 639 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000332805.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
