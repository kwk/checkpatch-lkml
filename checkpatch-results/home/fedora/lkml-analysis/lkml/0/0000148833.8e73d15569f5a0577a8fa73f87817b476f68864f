ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#220: FILE: drivers/char/specialix.c:341:
+static inline int sx_request_io_range(struct specialix_board * bp)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#245: FILE: drivers/char/specialix.c:355:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#281: FILE: drivers/char/specialix.c:445:
+		if (sx_in_off (bp, reg) & bit)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#290: FILE: drivers/char/specialix.c:469:
+		sx_interrupt (((struct specialix_board *)data)->irq,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#308: FILE: drivers/char/specialix.c:506:
 
+

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#335: FILE: drivers/char/specialix.c:545:
+		sx_long_delay(HZ/20);
 		                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: drivers/char/specialix.c:560:
+^I^I        val1, val2, val3);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#398: FILE: drivers/char/specialix.c:658:
+	printk(KERN_INFO "sx%d: %s interrupt from invalid port %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#416: FILE: drivers/char/specialix.c:708:
+		printk(KERN_INFO "sx%d: port %d: Receiver timeout. Hardware problems ?\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#553: FILE: drivers/char/specialix.c:941:
+^I                                    SRSR_MREQint)))) {$

CHECK:CAMELCASE: Avoid CamelCase: <SRSR_MREQint>
#553: FILE: drivers/char/specialix.c:941:
+	                                    SRSR_MREQint)))) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#579: FILE: drivers/char/specialix.c:970:
+
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#639: FILE: drivers/char/specialix.c:1119:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp < 0x10'
#669: FILE: drivers/char/specialix.c:1153:
+	if ((tmp < 0x10) && time_before(again, jiffies)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#678: FILE: drivers/char/specialix.c:1165:
+^I^I^I        "Read specialix.txt for more info.\n",$

CHECK:BRACES: Unbalanced braces around else statement
#695: FILE: drivers/char/specialix.c:1178:
+	} else

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#700: FILE: drivers/char/specialix.c:1182:
+	tmp = ((baud + HZ/2) / HZ) * 2 - CD186x_NFIFO;
 	                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#803: FILE: drivers/char/specialix.c:1341:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#837: FILE: drivers/char/specialix.c:1401:
 
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#918: FILE: drivers/char/specialix.c:1682:
+static int sx_write(struct tty_struct * tty,

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#972: FILE: drivers/char/specialix.c:1998:
+#if 0

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1005: FILE: drivers/char/specialix.c:2075:
+static int sx_ioctl(struct tty_struct * tty, struct file * filp,
                                                            ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1005: FILE: drivers/char/specialix.c:2075:
+static int sx_ioctl(struct tty_struct * tty, struct file * filp,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1005: FILE: drivers/char/specialix.c:2075:
+static int sx_ioctl(struct tty_struct * tty, struct file * filp,

WARNING:TABSTOP: Statements should start on a tabstop
#1023: FILE: drivers/char/specialix.c:2130:
+	 case TIOCSSERIAL:

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1038: FILE: drivers/char/specialix.c:2158:
+	if (SX_CRTSCTS (tty))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1195: FILE: drivers/char/specialix.c:2513:
+			pdev = pci_find_device (PCI_VENDOR_ID_SPECIALIX,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1196: FILE: drivers/char/specialix.c:2514:
+^I^I^I                        PCI_DEVICE_ID_SPECIALIX_IO8,$

CHECK:CAMELCASE: Avoid CamelCase: <WakeupPort>
#1243: FILE: drivers/net/eepro.c:555:
+		if (request_region(WakeupPort, 2, "eepro wakeup")) {

CHECK:BRACES: Unbalanced braces around else statement
#1254: FILE: drivers/net/eepro.c:567:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1255: FILE: drivers/net/eepro.c:568:
+			printk(KERN_WARNING "PnP wakeup region busy!\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1264: FILE: drivers/net/eepro.c:710:
+			printk("%s: Intel EtherExpress Pro/10+ ISA\n at %#x,",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1265: FILE: drivers/net/eepro.c:711:
+			printk("%s: Intel EtherExpress Pro/10+ ISA\n at %#x,",
 					dev->name, (unsigned)dev->base_addr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1273: FILE: drivers/net/eepro.c:718:
+			printk("%s: Intel 82595-based lan card at %#x,",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1274: FILE: drivers/net/eepro.c:719:
+			printk("%s: Intel 82595-based lan card at %#x,",
 					dev->name, (unsigned)dev->base_addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1365: FILE: drivers/net/eepro.c:1416:
+					printk(KERN_NOTICE "%s: multicast setup failed.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1366: FILE: drivers/net/eepro.c:1417:
+					printk(KERN_NOTICE "%s: multicast setup failed.\n",
 						dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1383: FILE: drivers/net/eepro.c:1648:
+			printk(KERN_DEBUG "%s: event = %#x, status = %#x, next = %#x, size = %#x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1384: FILE: drivers/net/eepro.c:1649:
+			printk(KERN_DEBUG "%s: event = %#x, status = %#x, next = %#x, size = %#x\n",
 				dev->name, rcv_event, rcv_status, rcv_next_frame, rcv_size);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1405: FILE: drivers/net/eepro.c:1728:
+^Icmd->supported = ^ISUPPORTED_10baseT_Half |$

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_10baseT_Half>
#1405: FILE: drivers/net/eepro.c:1728:
+	cmd->supported = 	SUPPORTED_10baseT_Half |

CHECK:BRACES: Unbalanced braces around else statement
#1476: FILE: sound/oss/cs4232.c:200:
+		else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1491: FILE: sound/oss/wavfront.c:2437:
+	if (!request_region (io_base, 16, "wavfront")) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1499: FILE: sound/oss/wavfront.c:2469:
+			release_region (io_base, 16);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1505: FILE: sound/oss/wavfront.c:2475:
+			release_region (io_base, 16);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1513: FILE: sound/oss/wavfront.c:2495:
+		release_region (io_base, 16);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1522: FILE: sound/oss/wavfront.c:2504:
+	release_region (io_base, 16);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1532: FILE: sound/oss/wavfront.c:2814:
+	if (!request_region (dev.base+2, 6, "wavefront synth"))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1532: FILE: sound/oss/wavfront.c:2814:
+	if (!request_region (dev.base+2, 6, "wavefront synth"))
 	                             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1536: FILE: sound/oss/wavfront.c:2818:
+		if (!request_region (dev.base+8, 8, "wavefront fx")) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1536: FILE: sound/oss/wavfront.c:2818:
+		if (!request_region (dev.base+8, 8, "wavefront fx")) {
 		                             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1537: FILE: sound/oss/wavfront.c:2819:
+			release_region (dev.base+2, 6);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1537: FILE: sound/oss/wavfront.c:2819:
+			release_region (dev.base+2, 6);
 			                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1578: FILE: sound/oss/wavfront.c:2856:
+	release_region (dev.base+2, 6);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1578: FILE: sound/oss/wavfront.c:2856:
+	release_region (dev.base+2, 6);
 	                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1580: FILE: sound/oss/wavfront.c:2858:
+		release_region (dev.base+8, 8);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1580: FILE: sound/oss/wavfront.c:2858:
+		release_region (dev.base+8, 8);
 		                        ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148833.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 25 warnings, 24 checks, 1369 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148833.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
