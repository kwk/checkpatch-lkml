WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
On Tue, Jan 25, 2005 at 03:16:21PM -0000, Sachithanantham_Saravanan@emc.com wrote:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: drivers/dump/dump_i386.c:94:
+__dump_save_context(int cpu, const struct pt_regs *regs, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: drivers/dump/dump_i386.c:95:
+__dump_save_context(int cpu, const struct pt_regs *regs, 
+	struct task_struct *tsk)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: drivers/dump/dump_i386.c:105:
+		memcpy((void *)dump_header_asm.dha_stack[cpu],
+				STACK_START_POSITION(tsk),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: drivers/dump/dump_ia64.c:89:
+		memcpy((void *)dump_header_asm.dha_stack[cpu],
+				STACK_START_POSITION(tsk),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: drivers/dump/dump_ia64.c:95:
+__dump_save_context(int cpu, const struct pt_regs *regs, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: drivers/dump/dump_ia64.c:96:
+__dump_save_context(int cpu, const struct pt_regs *regs, 
+	struct task_struct *tsk)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#161: FILE: drivers/dump/dump_ia64.c:102:
+	if (regs) {
+		dump_header_asm.dha_smp_regs[cpu] = *regs;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: drivers/dump/dump_ppc64.c:223:
+__dump_save_context(int cpu, const struct pt_regs *regs, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: drivers/dump/dump_ppc64.c:224:
+__dump_save_context(int cpu, const struct pt_regs *regs, 
+	struct task_struct *tsk)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: drivers/dump/dump_ppc64.c:234:
+		memcpy((void *)dump_header_asm.dha_stack[cpu],
+				STACK_START_POSITION(tsk),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: drivers/dump/dump_x8664.c:80:
+__dump_save_context(int cpu, const struct pt_regs *regs, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: drivers/dump/dump_x8664.c:81:
+__dump_save_context(int cpu, const struct pt_regs *regs, 
+	struct task_struct *tsk)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: drivers/dump/dump_x8664.c:91:
+		memcpy((void *)dump_header_asm.dha_stack[cpu],
+				STACK_START_POSITION(tsk),

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#239: FILE: include/linux/dump.h:411:
+extern void	__dump_save_context(int cpu, const struct pt_regs *, struct task_struct *tsk);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct pt_regs *' should also have an identifier name
#239: FILE: include/linux/dump.h:411:
+extern void	__dump_save_context(int cpu, const struct pt_regs *, struct task_struct *tsk);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000212231.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 3 warnings, 9 checks, 155 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000212231.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
