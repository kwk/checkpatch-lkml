WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
This patch contains a handful of trivial functions, and one fairly short function

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#65: FILE: mm/page_alloc.c:70:
+}
+static inline int is_min_fallback_reserved(struct zone *zone)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#69: FILE: mm/page_alloc.c:74:
+}
+static inline unsigned int get_pageblock_type(struct zone *zone,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#80: FILE: mm/page_alloc.c:85:
+	for (i=0; i < BITS_PER_RCLM_TYPE; i++) {
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#82: FILE: mm/page_alloc.c:87:
+		type |= (!!test_bit(bitidx+i, usemap));
 		                          ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#88: FILE: mm/page_alloc.c:93:
+void assign_bit(int bit_nr, unsigned long* map, int value)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#98: FILE: mm/page_alloc.c:103:
+}
+/*

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#116: FILE: mm/page_alloc.c:121:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#128: FILE: mm/page_alloc.c:527:
+static inline struct page* steal_largepage(struct zone *zone, int alloctype)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#132: FILE: mm/page_alloc.c:531:
+	int i=0;
 	     ^

ERROR:SPACING: space required before the open parenthesis '('
#134: FILE: mm/page_alloc.c:533:
+	for(i = 0; i < RCLM_TYPES; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#135: FILE: mm/page_alloc.c:534:
+		if(i == alloctype)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#138: FILE: mm/page_alloc.c:537:
+		area = &zone->free_area_lists[i][MAX_ORDER-1];
 		                                          ^

ERROR:SPACING: space required before the open parenthesis '('
#139: FILE: mm/page_alloc.c:538:
+		if(!list_empty(&area->free_list))

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#142: FILE: mm/page_alloc.c:541:
+	if (i == RCLM_TYPES) return NULL;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148108.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 1 warnings, 6 checks, 103 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148108.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
