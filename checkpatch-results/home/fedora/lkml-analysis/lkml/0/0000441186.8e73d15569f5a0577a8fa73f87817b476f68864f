WARNING:TYPO_SPELLING: 'supprt' may be misspelled - perhaps 'support'?
#40: 
>From Randolph Chung, is supprt for a 64bit kernel and a 32bit userland.
                         ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: Unbalanced braces around else statement
#55: FILE: include/asm-ppc/rtc.h:73:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: include/asm-generic/rtc.h:1:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#63: FILE: include/asm-generic/rtc.h:1:
+/* 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'inclue' may be misspelled - perhaps 'include'?
#64: FILE: include/asm-generic/rtc.h:2:
+ * inclue/asm-generic/rtc.h
    ^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#86: FILE: include/asm-generic/rtc.h:24:
+extern void gen_rtc_interrupt(unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#86: FILE: include/asm-generic/rtc.h:24:
+extern void gen_rtc_interrupt(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:REPEATED_WORD: Possible repeated word: 'to'
#118: FILE: include/asm-generic/rtc.h:56:
+	 * can take just over 2ms. We wait 10 to 20ms. There is no need to
+	 * to poll-wait (up to 1s - eeccch) for the falling edge of RTC_UIP.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#120: FILE: include/asm-generic/rtc.h:58:
+^I * periodic update complete interrupts, (via ioctl) and then $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#126: FILE: include/asm-generic/rtc.h:64:
+		while (jiffies - uip_watchdog < 2*HZ/100) {
 		                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#126: FILE: include/asm-generic/rtc.h:64:
+		while (jiffies - uip_watchdog < 2*HZ/100) {
 		                                    ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#150: FILE: include/asm-generic/rtc.h:88:
+	if (!(ctrl & RTC_DM_BINARY) || RTC_ALWAYS_BCD)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'independant' may be misspelled - perhaps 'independent'?
#211: FILE: include/asm-generic/rtc.h:149:
+	/* These limits and adjustments are independant of
 	                                    ^^^^^^^^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#223: FILE: include/asm-generic/rtc.h:161:
+	if (!(CMOS_READ(RTC_CONTROL) & RTC_DM_BINARY)
+	    || RTC_ALWAYS_BCD) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#233: FILE: include/asm-generic/rtc.h:171:
+	CMOS_WRITE((save_control|RTC_SET), RTC_CONTROL);
 	                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#235: FILE: include/asm-generic/rtc.h:173:
+	CMOS_WRITE((save_freq_select|RTC_DIV_RESET2), RTC_FREQ_SELECT);
 	                            ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#267: FILE: include/asm-generic/rtc.h:205:
+}
+static inline int set_rtc_pll(struct rtc_pll_info *pll)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#277: FILE: include/asm-i386/rtc.h:1:
+#ifndef _I386_RTC_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#290: FILE: include/asm-alpha/rtc.h:1:
+#ifndef _ALPHA_RTC_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: include/asm-parisc/rtc.h:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#303: FILE: include/asm-parisc/rtc.h:1:
+/* 

WARNING:TYPO_SPELLING: 'inclue' may be misspelled - perhaps 'include'?
#304: FILE: include/asm-parisc/rtc.h:2:
+ * inclue/asm-parisc/rtc.h
    ^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#324: FILE: include/asm-parisc/rtc.h:22:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#329: FILE: include/asm-parisc/rtc.h:27:
+extern void gen_rtc_interrupt(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#329: FILE: include/asm-parisc/rtc.h:27:
+extern void gen_rtc_interrupt(unsigned long);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'year' - possible side-effects?
#337: FILE: include/asm-parisc/rtc.h:35:
+# define __isleap(year) \
+  ((year) % 4 == 0 && ((year) % 100 != 0 || (year) % 400 == 0))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: include/asm-parisc/rtc.h:36:
+  ((year) % 4 == 0 && ((year) % 100 != 0 || (year) % 400 == 0))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#342: FILE: include/asm-parisc/rtc.h:40:
+static const unsigned short int __mon_yday[2][13] =
+{

WARNING:UNNECESSARY_INT: Prefer 'long' over 'long int' as the int is unnecessary
#352: FILE: include/asm-parisc/rtc.h:50:
+	long int days, rem, y;

ERROR:SPACING: space required before the open parenthesis '('
#355: FILE: include/asm-parisc/rtc.h:53:
+	if(pdc_tod_read(&tod_data) < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: include/asm-parisc/rtc.h:56:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#358: FILE: include/asm-parisc/rtc.h:56:
+
+	

CHECK:LINE_SPACING: Please don't use multiple blank lines
#364: FILE: include/asm-parisc/rtc.h:62:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: include/asm-parisc/rtc.h:72:
+^I$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#375: FILE: include/asm-parisc/rtc.h:73:
+#define DIV(a, b) ((a) / (b) - ((a) % (b) < 0))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#375: FILE: include/asm-parisc/rtc.h:73:
+#define DIV(a, b) ((a) / (b) - ((a) % (b) < 0))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#376: FILE: include/asm-parisc/rtc.h:74:
+#define LEAPS_THRU_END_OF(y) (DIV (y, 4) - DIV (y, 100) + DIV (y, 400))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#376: FILE: include/asm-parisc/rtc.h:74:
+#define LEAPS_THRU_END_OF(y) (DIV (y, 4) - DIV (y, 100) + DIV (y, 400))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#376: FILE: include/asm-parisc/rtc.h:74:
+#define LEAPS_THRU_END_OF(y) (DIV (y, 4) - DIV (y, 100) + DIV (y, 400))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'y' - possible side-effects?
#376: FILE: include/asm-parisc/rtc.h:74:
+#define LEAPS_THRU_END_OF(y) (DIV (y, 4) - DIV (y, 100) + DIV (y, 400))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#378: FILE: include/asm-parisc/rtc.h:76:
+	while (days < 0 || days >= (__isleap (y) ? 366 : 365))
+	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#378: FILE: include/asm-parisc/rtc.h:76:
+	while (days < 0 || days >= (__isleap (y) ? 366 : 365))

WARNING:UNNECESSARY_INT: Prefer 'long' over 'long int' as the int is unnecessary
#381: FILE: include/asm-parisc/rtc.h:79:
+		long int yg = y + days / 365 - (days % 365 < 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#385: FILE: include/asm-parisc/rtc.h:83:
+			 + LEAPS_THRU_END_OF (yg - 1)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#386: FILE: include/asm-parisc/rtc.h:84:
+			 - LEAPS_THRU_END_OF (y - 1));

CHECK:SPACING: No space is necessary after a cast
#392: FILE: include/asm-parisc/rtc.h:90:
+	for (y = 11; days < (long int) ip[y]; --y)

WARNING:UNNECESSARY_INT: Prefer 'long' over 'long int' as the int is unnecessary
#392: FILE: include/asm-parisc/rtc.h:90:
+	for (y = 11; days < (long int) ip[y]; --y)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#397: FILE: include/asm-parisc/rtc.h:95:
+^I$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#403: FILE: include/asm-parisc/rtc.h:101:
+	u_int32_t secs;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#405: FILE: include/asm-parisc/rtc.h:103:
+^Isecs = mktime(wtime->tm_year + 1900, wtime->tm_mon + 1, wtime->tm_mday, $

ERROR:SPACING: space required before the open parenthesis '('
#408: FILE: include/asm-parisc/rtc.h:106:
+	if(pdc_tod_set(secs, 0) < 0)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#413: FILE: include/asm-parisc/rtc.h:111:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#427: FILE: include/asm-parisc/rtc.h:125:
+}
+static inline int set_rtc_pll(struct rtc_pll_info *pll)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#455: FILE: drivers/char/genrtc.c:133:
+		printk(KERN_INFO "genrtc: timer task delayed by %ld jiffies\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#464: FILE: drivers/char/genrtc.c:178:
+        if (count != sizeof (unsigned int) && count != sizeof (unsigned long))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: drivers/char/genrtc.c:178:
+        if (count != sizeof (unsigned int) && count != sizeof (unsigned long))$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#464: FILE: drivers/char/genrtc.c:178:
+        if (count != sizeof (unsigned int) && count != sizeof (unsigned long))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#464: FILE: drivers/char/genrtc.c:178:
+        if (count != sizeof (unsigned int) && count != sizeof (unsigned long))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#474: FILE: drivers/char/genrtc.c:198:
+	if (sizeof (int) != sizeof (long) && count == sizeof (unsigned int)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#474: FILE: drivers/char/genrtc.c:198:
+	if (sizeof (int) != sizeof (long) && count == sizeof (unsigned int)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#474: FILE: drivers/char/genrtc.c:198:
+	if (sizeof (int) != sizeof (long) && count == sizeof (unsigned int)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#476: FILE: drivers/char/genrtc.c:200:
+		unsigned int uidata = data;
+		retval = put_user(uidata, (unsigned long *)buf);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#478: FILE: drivers/char/genrtc.c:202:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#478: FILE: drivers/char/genrtc.c:202:
+	else {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441186.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 29 warnings, 21 checks, 426 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441186.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
