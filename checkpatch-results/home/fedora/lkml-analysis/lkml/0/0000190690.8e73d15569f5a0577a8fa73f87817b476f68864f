WARNING:TYPO_SPELLING: 'upcomming' may be misspelled - perhaps 'upcoming'?
#26: 
This interacts better with Hugh's upcomming VMA walk optimization
                                  ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_SETUP_ADDITIONAL_PAGES' is wrong - use Kconfig variables or standard guards instead
#49: FILE: arch/x86_64/ia32/ia32_binfmt.c:315:
+#define ARCH_HAS_SETUP_ADDITIONAL_PAGES 1

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#51: FILE: arch/x86_64/ia32/ia32_binfmt.c:317:
+extern int syscall32_setup_pages(struct linux_binprm *, int exstack);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct linux_binprm *' should also have an identifier name
#51: FILE: arch/x86_64/ia32/ia32_binfmt.c:317:
+extern int syscall32_setup_pages(struct linux_binprm *, int exstack);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:LINE_SPACING: Missing a blank line after declarations
#111: FILE: arch/x86_64/ia32/syscall32.c:38:
+	struct page *p = virt_to_page(adr - vma->vm_start + syscall32_page);
+	get_page(p);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#126: FILE: arch/x86_64/ia32/syscall32.c:47:
+static struct vm_operations_struct syscall32_vm_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#153: FILE: arch/x86_64/ia32/syscall32.c:74:
+	vma->vm_flags = VM_READ|VM_EXEC|VM_MAYREAD|VM_MAYEXEC|VM_MAYEXEC|VM_MAYWRITE;
 	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#153: FILE: arch/x86_64/ia32/syscall32.c:74:
+	vma->vm_flags = VM_READ|VM_EXEC|VM_MAYREAD|VM_MAYEXEC|VM_MAYEXEC|VM_MAYWRITE;
 	                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#153: FILE: arch/x86_64/ia32/syscall32.c:74:
+	vma->vm_flags = VM_READ|VM_EXEC|VM_MAYREAD|VM_MAYEXEC|VM_MAYEXEC|VM_MAYWRITE;
 	                                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#153: FILE: arch/x86_64/ia32/syscall32.c:74:
+	vma->vm_flags = VM_READ|VM_EXEC|VM_MAYREAD|VM_MAYEXEC|VM_MAYEXEC|VM_MAYWRITE;
 	                                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#153: FILE: arch/x86_64/ia32/syscall32.c:74:
+	vma->vm_flags = VM_READ|VM_EXEC|VM_MAYREAD|VM_MAYEXEC|VM_MAYEXEC|VM_MAYWRITE;
 	                                                                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#215: FILE: arch/x86_64/mm/init.c:587:
+/* A pseudo VMAs to allow ptrace access for the vsyscall page.   This only
+   covers the 64bit vsyscall page now. 32bit has a real VMA now and does

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#216: FILE: arch/x86_64/mm/init.c:588:
+   not need special handling anymore. */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000190690.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 7 warnings, 5 checks, 206 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000190690.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
