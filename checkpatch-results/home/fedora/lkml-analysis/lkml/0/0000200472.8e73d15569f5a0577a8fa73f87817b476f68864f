WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#92: FILE: drivers/char/tpm/Kconfig:7:
+config TCG_TPM
+	tristate "TPM Hardware Support"
+	depends on EXPERIMENTAL
+	---help---
+	  If you have a TPM security chip in your system, which
+	  implements the Trusted Computing Group's specification,
+	  say Yes and it will be accessible from within Linux.  For
+	  more information see <http://www.trustedcomputinggroup.org>. 
+	  An implementation of the Trusted Software Stack (TSS), the 
+	  userspace enablement piece of the specification, can be 
+	  obtained at: <http://sourceforge.net/projects/trousers>.  To 
+	  compile this driver as a module, choose M here; the module 
+	  will be called tpm. If unsure, say N.
+
+config TCG_NSC
+	tristate "National Semiconductor TPM Interface"
+	depends on TCG_TPM
+	---help---
+	  If you have a TPM security chip from National Semicondutor 
+	  say Yes and it will be accessible from within Linux.  To 
+	  compile this driver as a module, choose M here; the module 
+	  will be called tpm_nsc.
+
+config TCG_ATMEL
+	tristate "Atmel TPM Interface"
+	depends on TCG_TPM
+	---help---
+	  If you have a TPM security chip from Atmel say Yes and it 
+	  will be accessible from within Linux.  To compile this driver 
+	  as a module, choose M here; the module will be called tpm_atmel.
+
+endmenu
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: drivers/char/tpm/Kconfig:14:
+^I  more information see <http://www.trustedcomputinggroup.org>. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: drivers/char/tpm/Kconfig:15:
+^I  An implementation of the Trusted Software Stack (TSS), the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: drivers/char/tpm/Kconfig:16:
+^I  userspace enablement piece of the specification, can be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: drivers/char/tpm/Kconfig:17:
+^I  obtained at: <http://sourceforge.net/projects/trousers>.  To $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: drivers/char/tpm/Kconfig:18:
+^I  compile this driver as a module, choose M here; the module $

WARNING:TYPO_SPELLING: 'Semicondutor' may be misspelled - perhaps 'Semiconductor'?
#110: FILE: drivers/char/tpm/Kconfig:25:
+	  If you have a TPM security chip from National Semicondutor 
 	                                                ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: drivers/char/tpm/Kconfig:25:
+^I  If you have a TPM security chip from National Semicondutor $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: drivers/char/tpm/Kconfig:26:
+^I  say Yes and it will be accessible from within Linux.  To $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: drivers/char/tpm/Kconfig:27:
+^I  compile this driver as a module, choose M here; the module $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: drivers/char/tpm/Kconfig:34:
+^I  If you have a TPM security chip from Atmel say Yes and it $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#120: FILE: drivers/char/tpm/Kconfig:35:
+^I  will be accessible from within Linux.  To compile this driver $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#140: FILE: drivers/char/tpm/tpm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: drivers/char/tpm/tpm.c:13:
+ * Specifications at www.trustedcomputinggroup.org^I $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: drivers/char/tpm/tpm.c:19:
+ * $

CHECK:SPACING: No space is necessary after a cast
#186: FILE: drivers/char/tpm/tpm.c:47:
+	struct tpm_chip *chip = (struct tpm_chip *) ptr;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#196: FILE: drivers/char/tpm/tpm.c:57:
+	int *exp = (int *) ptr;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#200: FILE: drivers/char/tpm/tpm.c:61:
+EXPORT_SYMBOL_GPL(tpm_time_expired);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#266: FILE: drivers/char/tpm/tpm.c:127:
+EXPORT_SYMBOL_GPL(tpm_lpc_bus_init);

CHECK:SPACING: No space is necessary after a cast
#278: FILE: drivers/char/tpm/tpm.c:139:
+	native_size = (__force __be32 *) (buf + 2);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#285: FILE: drivers/char/tpm/tpm.c:146:
+			"invalid count value %x %x \n", count, bufsiz);

CHECK:SPACING: No space is necessary after a cast
#291: FILE: drivers/char/tpm/tpm.c:152:
+	if ((len = chip->vendor->send(chip, (u8 *) buf, count)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#291: FILE: drivers/char/tpm/tpm.c:152:
+	if ((len = chip->vendor->send(chip, (u8 *) buf, count)) < 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tpm_transmit', this function's name, in a string
#293: FILE: drivers/char/tpm/tpm.c:154:
+			"tpm_transmit: tpm_send: error %d\n", len);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: No space is necessary after a cast
#302: FILE: drivers/char/tpm/tpm.c:163:
+	chip->device_timer.data = (unsigned long) &chip->time_expired;

WARNING:LINE_SPACING: Missing a blank line after declarations
#308: FILE: drivers/char/tpm/tpm.c:169:
+		u8 status = inb(chip->vendor->base + 1);
+		if ((status & chip->vendor->req_complete_mask) ==

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#317: FILE: drivers/char/tpm/tpm.c:178:
+		rmb();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#320: FILE: drivers/char/tpm/tpm.c:181:
+
+

CHECK:SPACING: No space is necessary after a cast
#327: FILE: drivers/char/tpm/tpm.c:188:
+	len = chip->vendor->recv(chip, (u8 *) buf, bufsiz);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tpm_transmit', this function's name, in a string
#330: FILE: drivers/char/tpm/tpm.c:191:
+			"tpm_transmit: tpm_recv: error %d\n", len);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#363: FILE: drivers/char/tpm/tpm.c:224:
+	if (chip == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#367: FILE: drivers/char/tpm/tpm.c:228:
+	if ((len = tpm_transmit(chip, data, sizeof(data)))

CHECK:SPACING: No space is necessary after a cast
#371: FILE: drivers/char/tpm/tpm.c:232:
+	num_pcrs = be32_to_cpu(*((__force __be32 *) (data + 14)));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#377: FILE: drivers/char/tpm/tpm.c:238:
+		if ((len = tpm_transmit(chip, data, sizeof(data)))

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_pcrs' to 'pcrs_show'
#386: FILE: drivers/char/tpm/tpm.c:247:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#388: FILE: drivers/char/tpm/tpm.c:249:
+static DEVICE_ATTR(pcrs, S_IRUGO, show_pcrs, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#407: FILE: drivers/char/tpm/tpm.c:268:
+	if (chip == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#413: FILE: drivers/char/tpm/tpm.c:274:
+	if ((len = tpm_transmit(chip, data, sizeof(data))) <

ERROR:TRAILING_WHITESPACE: trailing whitespace
#417: FILE: drivers/char/tpm/tpm.c:278:
+^I/* $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#418: FILE: drivers/char/tpm/tpm.c:279:
+	/* 
+	   ignore header 10 bytes

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: drivers/char/tpm/tpm.c:283:
+^I   parameters (RSA 12->bytes: keybit, #primes, expbit)  $

CHECK:SPACING: No space is necessary after a cast
#428: FILE: drivers/char/tpm/tpm.c:289:
+	native_val = (__force __be32 *) (data + 34);

WARNING:SPLIT_STRING: quoted string split across lines
#434: FILE: drivers/char/tpm/tpm.c:295:
+		    "Sigscheme: %02X %02X\nParameters: %02X %02X %02X %02X"
+		    " %02X %02X %02X %02X %02X %02X %02X %02X\n"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#435: FILE: drivers/char/tpm/tpm.c:296:
+		    "Modulus length: %d\nModulus: \n",

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_pubek' to 'pubek_show'
#449: FILE: drivers/char/tpm/tpm.c:310:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#451: FILE: drivers/char/tpm/tpm.c:312:
+static DEVICE_ATTR(pubek, S_IRUGO, show_pubek, NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#480: FILE: drivers/char/tpm/tpm.c:341:
+	if (chip == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#485: FILE: drivers/char/tpm/tpm.c:346:
+	if ((len = tpm_transmit(chip, data, sizeof(data))) <

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#494: FILE: drivers/char/tpm/tpm.c:355:
+	if ((len = tpm_transmit(chip, data, sizeof(data))) <

CHECK:SPACING: No space is necessary after a cast
#500: FILE: drivers/char/tpm/tpm.c:361:
+		    (int) data[14], (int) data[15], (int) data[16],

CHECK:SPACING: No space is necessary after a cast
#501: FILE: drivers/char/tpm/tpm.c:362:
+		    (int) data[17]);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_caps' to 'caps_show'
#504: FILE: drivers/char/tpm/tpm.c:365:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#506: FILE: drivers/char/tpm/tpm.c:367:
+static DEVICE_ATTR(caps, S_IRUGO, show_caps, NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#525: FILE: drivers/char/tpm/tpm.c:386:
+	if (chip == NULL) {

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#542: FILE: drivers/char/tpm/tpm.c:403:
+	chip->data_buffer = kmalloc(TPM_BUFSIZE * sizeof(u8), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip->data_buffer"
#543: FILE: drivers/char/tpm/tpm.c:404:
+	if (chip->data_buffer == NULL) {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#559: FILE: drivers/char/tpm/tpm.c:420:
+EXPORT_SYMBOL_GPL(tpm_open);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#582: FILE: drivers/char/tpm/tpm.c:443:
+EXPORT_SYMBOL_GPL(tpm_release);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#584: FILE: drivers/char/tpm/tpm.c:445:
+ssize_t tpm_write(struct file * file, const char __user * buf,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#584: FILE: drivers/char/tpm/tpm.c:445:
+ssize_t tpm_write(struct file * file, const char __user * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#585: FILE: drivers/char/tpm/tpm.c:446:
+		  size_t size, loff_t * off)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#591: FILE: drivers/char/tpm/tpm.c:452:
+	/* cannot perform a write until the read has cleared
+	   either via tpm_read or a user_read_timer timeout */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#591: FILE: drivers/char/tpm/tpm.c:452:
+	   either via tpm_read or a user_read_timer timeout */

CHECK:SPACING: No space is necessary after a cast
#603: FILE: drivers/char/tpm/tpm.c:464:
+	    (chip->data_buffer, (void __user *) buf, in_size)) {

CHECK:SPACING: No space is necessary after a cast
#618: FILE: drivers/char/tpm/tpm.c:479:
+	chip->user_read_timer.data = (unsigned long) chip;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#626: FILE: drivers/char/tpm/tpm.c:487:
+EXPORT_SYMBOL_GPL(tpm_write);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#628: FILE: drivers/char/tpm/tpm.c:489:
+ssize_t tpm_read(struct file * file, char __user * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#628: FILE: drivers/char/tpm/tpm.c:489:
+ssize_t tpm_read(struct file * file, char __user * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#629: FILE: drivers/char/tpm/tpm.c:490:
+		 size_t size, loff_t * off)

CHECK:SPACING: No space is necessary after a cast
#650: FILE: drivers/char/tpm/tpm.c:511:
+			if (copy_to_user((void __user *) buf,

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#661: FILE: drivers/char/tpm/tpm.c:522:
+EXPORT_SYMBOL_GPL(tpm_read);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#663: FILE: drivers/char/tpm/tpm.c:524:
+void __devexit tpm_remove(struct pci_dev *pci_dev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#667: FILE: drivers/char/tpm/tpm.c:528:
+	if (chip == NULL) {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#694: FILE: drivers/char/tpm/tpm.c:555:
+EXPORT_SYMBOL_GPL(tpm_remove);

WARNING:LINE_SPACING: Missing a blank line after declarations
#709: FILE: drivers/char/tpm/tpm.c:570:
+	struct tpm_chip *chip = pci_get_drvdata(pci_dev);
+	if (chip == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#709: FILE: drivers/char/tpm/tpm.c:570:
+	if (chip == NULL)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#716: FILE: drivers/char/tpm/tpm.c:577:
+EXPORT_SYMBOL_GPL(tpm_pm_suspend);

WARNING:LINE_SPACING: Missing a blank line after declarations
#725: FILE: drivers/char/tpm/tpm.c:586:
+	struct tpm_chip *chip = pci_get_drvdata(pci_dev);
+	if (chip == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#725: FILE: drivers/char/tpm/tpm.c:586:
+	if (chip == NULL)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#735: FILE: drivers/char/tpm/tpm.c:596:
+EXPORT_SYMBOL_GPL(tpm_pm_resume);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#738: FILE: drivers/char/tpm/tpm.c:599:
+ * Called from tpm_<specific>.c probe function only for devices $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#753: FILE: drivers/char/tpm/tpm.c:614:
+	if (chip == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#776: FILE: drivers/char/tpm/tpm.c:637:
+	if (chip->dev_num < 0) {
[...]
+	} else if (chip->dev_num == 0)
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pci_dev->dev
#789: FILE: drivers/char/tpm/tpm.c:650:
+	chip->vendor->miscdev.dev = &(pci_dev->dev);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#818: FILE: drivers/char/tpm/tpm.c:679:
+EXPORT_SYMBOL_GPL(tpm_register_hardware);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#827: FILE: drivers/char/tpm/tpm.c:688:
+{
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#828: FILE: drivers/char/tpm/tpm.c:689:
+
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#841: FILE: drivers/char/tpm/tpm.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#853: FILE: drivers/char/tpm/tpm.h:13:
+ * Specifications at www.trustedcomputinggroup.org^I $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#859: FILE: drivers/char/tpm/tpm.h:19:
+ * $

WARNING:SPACING: Unnecessary space before function pointer arguments
#880: FILE: drivers/char/tpm/tpm.h:40:
+	int (*recv) (struct tpm_chip *, u8 *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tpm_chip *' should also have an identifier name
#880: FILE: drivers/char/tpm/tpm.h:40:
+	int (*recv) (struct tpm_chip *, u8 *, size_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8 *' should also have an identifier name
#880: FILE: drivers/char/tpm/tpm.h:40:
+	int (*recv) (struct tpm_chip *, u8 *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#880: FILE: drivers/char/tpm/tpm.h:40:
+	int (*recv) (struct tpm_chip *, u8 *, size_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#881: FILE: drivers/char/tpm/tpm.h:41:
+	int (*send) (struct tpm_chip *, u8 *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tpm_chip *' should also have an identifier name
#881: FILE: drivers/char/tpm/tpm.h:41:
+	int (*send) (struct tpm_chip *, u8 *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8 *' should also have an identifier name
#881: FILE: drivers/char/tpm/tpm.h:41:
+	int (*send) (struct tpm_chip *, u8 *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#881: FILE: drivers/char/tpm/tpm.h:41:
+	int (*send) (struct tpm_chip *, u8 *, size_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#882: FILE: drivers/char/tpm/tpm.h:42:
+	void (*cancel) (struct tpm_chip *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tpm_chip *' should also have an identifier name
#882: FILE: drivers/char/tpm/tpm.h:42:
+	void (*cancel) (struct tpm_chip *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#920: FILE: drivers/char/tpm/tpm.h:80:
+extern void tpm_time_expired(unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#921: FILE: drivers/char/tpm/tpm.h:81:
+extern int tpm_lpc_bus_init(struct pci_dev *, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#921: FILE: drivers/char/tpm/tpm.h:81:
+extern int tpm_lpc_bus_init(struct pci_dev *, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#921: FILE: drivers/char/tpm/tpm.h:81:
+extern int tpm_lpc_bus_init(struct pci_dev *, u16);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#923: FILE: drivers/char/tpm/tpm.h:83:
+extern int tpm_register_hardware(struct pci_dev *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#923: FILE: drivers/char/tpm/tpm.h:83:
+extern int tpm_register_hardware(struct pci_dev *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tpm_vendor_specific *' should also have an identifier name
#923: FILE: drivers/char/tpm/tpm.h:83:
+extern int tpm_register_hardware(struct pci_dev *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#925: FILE: drivers/char/tpm/tpm.h:85:
+extern int tpm_open(struct inode *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#925: FILE: drivers/char/tpm/tpm.h:85:
+extern int tpm_open(struct inode *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#925: FILE: drivers/char/tpm/tpm.h:85:
+extern int tpm_open(struct inode *, struct file *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#926: FILE: drivers/char/tpm/tpm.h:86:
+extern int tpm_release(struct inode *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#926: FILE: drivers/char/tpm/tpm.h:86:
+extern int tpm_release(struct inode *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#926: FILE: drivers/char/tpm/tpm.h:86:
+extern int tpm_release(struct inode *, struct file *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#927: FILE: drivers/char/tpm/tpm.h:87:
+extern ssize_t tpm_write(struct file *, const char __user *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#927: FILE: drivers/char/tpm/tpm.h:87:
+extern ssize_t tpm_write(struct file *, const char __user *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char __user *' should also have an identifier name
#927: FILE: drivers/char/tpm/tpm.h:87:
+extern ssize_t tpm_write(struct file *, const char __user *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#927: FILE: drivers/char/tpm/tpm.h:87:
+extern ssize_t tpm_write(struct file *, const char __user *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#927: FILE: drivers/char/tpm/tpm.h:87:
+extern ssize_t tpm_write(struct file *, const char __user *, size_t,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#929: FILE: drivers/char/tpm/tpm.h:89:
+extern ssize_t tpm_read(struct file *, char __user *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#929: FILE: drivers/char/tpm/tpm.h:89:
+extern ssize_t tpm_read(struct file *, char __user *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char __user *' should also have an identifier name
#929: FILE: drivers/char/tpm/tpm.h:89:
+extern ssize_t tpm_read(struct file *, char __user *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#929: FILE: drivers/char/tpm/tpm.h:89:
+extern ssize_t tpm_read(struct file *, char __user *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#929: FILE: drivers/char/tpm/tpm.h:89:
+extern ssize_t tpm_read(struct file *, char __user *, size_t, loff_t *);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#930: FILE: drivers/char/tpm/tpm.h:90:
+extern void __devexit tpm_remove(struct pci_dev *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#930: FILE: drivers/char/tpm/tpm.h:90:
+extern void __devexit tpm_remove(struct pci_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#930: FILE: drivers/char/tpm/tpm.h:90:
+extern void __devexit tpm_remove(struct pci_dev *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#931: FILE: drivers/char/tpm/tpm.h:91:
+extern int tpm_pm_suspend(struct pci_dev *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#931: FILE: drivers/char/tpm/tpm.h:91:
+extern int tpm_pm_suspend(struct pci_dev *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#931: FILE: drivers/char/tpm/tpm.h:91:
+extern int tpm_pm_suspend(struct pci_dev *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#932: FILE: drivers/char/tpm/tpm.h:92:
+extern int tpm_pm_resume(struct pci_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#932: FILE: drivers/char/tpm/tpm.h:92:
+extern int tpm_pm_resume(struct pci_dev *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#937: FILE: drivers/char/tpm/tpm_atmel.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#949: FILE: drivers/char/tpm/tpm_atmel.c:13:
+ * Specifications at www.trustedcomputinggroup.org^I $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#955: FILE: drivers/char/tpm/tpm_atmel.c:19:
+ * $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#972: FILE: drivers/char/tpm/tpm_atmel.c:36:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#973: FILE: drivers/char/tpm/tpm_atmel.c:37:
+static int tpm_atml_recv(struct tpm_chip *chip, u8 * buf, size_t count)

CHECK:SPACING: No space is necessary after a cast
#995: FILE: drivers/char/tpm/tpm_atmel.c:59:
+	native_size = (__force __be32 *) (hdr + 2);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1033: FILE: drivers/char/tpm/tpm_atmel.c:97:
+static int tpm_atml_send(struct tpm_chip *chip, u8 * buf, size_t count)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tpm_atml_send', this function's name, in a string
#1037: FILE: drivers/char/tpm/tpm_atmel.c:101:
+	dev_dbg(&chip->pci_dev->dev, "tpm_atml_send: ");

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1051: FILE: drivers/char/tpm/tpm_atmel.c:115:
+static struct file_operations atmel_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1070: FILE: drivers/char/tpm/tpm_atmel.c:134:
+static int __devinit tpm_atml_init(struct pci_dev *pci_dev,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1086: FILE: drivers/char/tpm/tpm_atmel.c:150:
+	if (tpm_read_index(4) != 'A' || tpm_read_index(5) != 'T'
+	    || tpm_read_index(6) != 'M' || tpm_read_index(7) != 'L') {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1092: FILE: drivers/char/tpm/tpm_atmel.c:156:
+	if ((version[0] = tpm_read_index(0x00)) != 0xFF) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1102: FILE: drivers/char/tpm/tpm_atmel.c:166:
+	if ((rc = tpm_register_hardware(pci_dev, &tpm_atmel)) < 0)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1115: FILE: drivers/char/tpm/tpm_atmel.c:179:
+static struct pci_device_id tpm_pci_tbl[] __devinitdata = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1157: FILE: drivers/char/tpm/tpm_nsc.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1169: FILE: drivers/char/tpm/tpm_nsc.c:13:
+ * Specifications at www.trustedcomputinggroup.org^I $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1175: FILE: drivers/char/tpm/tpm_nsc.c:19:
+ * $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1212: FILE: drivers/char/tpm/tpm_nsc.c:56:
+static int wait_for_stat(struct tpm_chip *chip, u8 mask, u8 val, u8 * data)

CHECK:SPACING: No space is necessary after a cast
#1217: FILE: drivers/char/tpm/tpm_nsc.c:61:
+			      (unsigned long) &expired);

ERROR:WHILE_AFTER_BRACE: while should follow close brace '}'
#1235: FILE: drivers/char/tpm/tpm_nsc.c:79:
+	}
+	while (!expired);

while should follow the closing bracket on the same line::

  do {
          ...
  } while(something);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#1246: FILE: drivers/char/tpm/tpm_nsc.c:90:
+			      (unsigned long) &expired);

ERROR:WHILE_AFTER_BRACE: while should follow close brace '}'
#1268: FILE: drivers/char/tpm/tpm_nsc.c:112:
+	}
+	while (!expired);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1274: FILE: drivers/char/tpm/tpm_nsc.c:118:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1275: FILE: drivers/char/tpm/tpm_nsc.c:119:
+static int tpm_nsc_recv(struct tpm_chip *chip, u8 * buf, size_t count)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1289: FILE: drivers/char/tpm/tpm_nsc.c:133:
+	if ((data =

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1313: FILE: drivers/char/tpm/tpm_nsc.c:157:
+	if ((data = inb(chip->vendor->base + NSC_DATA)) != NSC_COMMAND_EOC) {

CHECK:SPACING: No space is necessary after a cast
#1319: FILE: drivers/char/tpm/tpm_nsc.c:163:
+	native_size = (__force __be32 *) (buf + 2);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1328: FILE: drivers/char/tpm/tpm_nsc.c:172:
+static int tpm_nsc_send(struct tpm_chip *chip, u8 * buf, size_t count)

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1378: FILE: drivers/char/tpm/tpm_nsc.c:222:
+static struct file_operations nsc_ops = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1397: FILE: drivers/char/tpm/tpm_nsc.c:241:
+static int __devinit tpm_nsc_init(struct pci_dev *pci_dev,

WARNING:SPLIT_STRING: quoted string split across lines
#1438: FILE: drivers/char/tpm/tpm_nsc.c:282:
+		"NSC Config "
+		"0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1481: FILE: drivers/char/tpm/tpm_nsc.c:325:
+	if ((rc = tpm_register_hardware(pci_dev, &tpm_nsc)) < 0)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1491: FILE: drivers/char/tpm/tpm_nsc.c:335:
+static struct pci_device_id tpm_pci_tbl[] __devinitdata = {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200472.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 45 errors, 75 warnings, 44 checks, 1445 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200472.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
