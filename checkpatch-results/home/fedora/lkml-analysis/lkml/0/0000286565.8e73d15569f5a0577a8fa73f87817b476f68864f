WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#47: 
> occur in the initrd before any disk activity has occured.
                                                   ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#77: FILE: kernel/power/swsusp.c:2:
+ * linux/kernel/power/swsusp.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#124: FILE: kernel/power/swsusp.c:142:
+# define PRINTK(f, a...)	printk(f, ## a)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#127: FILE: kernel/power/swsusp.c:144:
+# define PRINTK(f, a...)       ^Ido { } while(0)$

ERROR:SPACING: space required before the open parenthesis '('
#127: FILE: kernel/power/swsusp.c:144:
+# define PRINTK(f, a...)       	do { } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#134: FILE: kernel/power/swsusp.c:150:
+#define MDELAY(a) do { } while(0)

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#165: FILE: kernel/power/swsusp.c:353:
+		BUG();		/* Not a BUG_ON(): we want fill_suspend_header to be called, always */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#165: FILE: kernel/power/swsusp.c:353:
+		BUG();		/* Not a BUG_ON(): we want fill_suspend_header to be called, always */

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#193: FILE: kernel/power/swsusp.c:376:
+struct highmem_page *highmem_copy = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:LINE_SPACING: Missing a blank line after declarations
#198: FILE: kernel/power/swsusp.c:381:
+	unsigned long zone_pfn;
+	for (zone_pfn = 0; zone_pfn < zone->spanned_pages; ++zone_pfn) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#205: FILE: kernel/power/swsusp.c:388:
+		if (!(pfn%1000))
 		         ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#206: FILE: kernel/power/swsusp.c:389:
+			printk(".");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#219: FILE: kernel/power/swsusp.c:400:
+			printk("highmem reserved page?!\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#222: FILE: kernel/power/swsusp.c:403:
+		if ((chunk_size = is_head_of_free_region(page))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*save)...) over kmalloc(sizeof(struct highmem_page)...)
#227: FILE: kernel/power/swsusp.c:408:
+		save = kmalloc(sizeof(struct highmem_page), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#232: FILE: kernel/power/swsusp.c:413:
+		save->data = (void *) get_zeroed_page(GFP_ATOMIC);

WARNING:LINE_SPACING: Missing a blank line after declarations
#259: FILE: kernel/power/swsusp.c:430:
+	int res = 0;
+	for_each_zone(zone) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#284: FILE: kernel/power/swsusp.c:444:
+		void *kaddr;
+		highmem_copy = save->next;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: kernel/power/swsusp.c:445:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#289: FILE: kernel/power/swsusp.c:449:
+		free_page((long) save->data);

WARNING:LINE_SPACING: Missing a blank line after declarations
#305: FILE: kernel/power/swsusp.c:460:
+	unsigned long nosave_end_pfn = PAGE_ALIGN(__pa(&__nosave_end)) >> PAGE_SHIFT;
+	return (pfn >= nosave_begin_pfn) && (pfn < nosave_end_pfn);

WARNING:LINE_SPACING: Missing a blank line after declarations
#313: FILE: kernel/power/swsusp.c:468:
+	struct pbe *pbe = *pagedir_p;
+	for (zone_pfn = 0; zone_pfn < zone->spanned_pages; ++zone_pfn) {

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#317: FILE: kernel/power/swsusp.c:472:
+		if (!(pfn%1000))
 		         ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#318: FILE: kernel/power/swsusp.c:473:
+			printk(".");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#322: FILE: kernel/power/swsusp.c:477:
+		BUG_ON(PageReserved(page) && PageNosave(page));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#329: FILE: kernel/power/swsusp.c:484:
+		if ((chunk_size = is_head_of_free_region(page))) {

CHECK:SPACING: No space is necessary after a cast
#337: FILE: kernel/power/swsusp.c:492:
+		pbe->orig_address = (long) page_address(page);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#339: FILE: kernel/power/swsusp.c:494:
+		/* Copy page is dangerous: it likes to mess with
+		   preempt count on specific cpus. Wrong preempt count is then copied,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#340: FILE: kernel/power/swsusp.c:495:
+		   oops. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#357: FILE: kernel/power/swsusp.c:507:
+	struct zone *zone;
+	for_each_zone(zone) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#368: FILE: kernel/power/swsusp.c:517:
+	unsigned long zone_pfn, pagedir_end, pagedir_pfn, pagedir_end_pfn;
+	pagedir_end = pagedir + (PAGE_SIZE << pagedir_order);

WARNING:LINE_SPACING: Missing a blank line after declarations
#374: FILE: kernel/power/swsusp.c:523:
+		unsigned long pfn = zone_pfn + zone->zone_start_pfn;
+		if (!pfn_valid(pfn))

WARNING:LINE_SPACING: Missing a blank line after declarations
#392: FILE: kernel/power/swsusp.c:537:
+	struct zone *zone;
+	for_each_zone(zone) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#424: FILE: kernel/power/swsusp.c:604:
+	printk( "/critical section: ");

ERROR:SPACING: space prohibited after that open parenthesis '('
#424: FILE: kernel/power/swsusp.c:604:
+	printk( "/critical section: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#426: FILE: kernel/power/swsusp.c:606:
+	printk( "handling highmem" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#426: FILE: kernel/power/swsusp.c:606:
+	printk( "handling highmem" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#426: FILE: kernel/power/swsusp.c:606:
+	printk( "handling highmem" );

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#428: FILE: kernel/power/swsusp.c:608:
+		printk(KERN_CRIT "%sNot enough free pages for highmem\n", name_suspend);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#431: FILE: kernel/power/swsusp.c:611:
+	printk(", ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#434: FILE: kernel/power/swsusp.c:614:
+	printk("counting pages to copy" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#434: FILE: kernel/power/swsusp.c:614:
+	printk("counting pages to copy" );

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#463: FILE: kernel/power/swsusp.c:637:
+		/* Pagedir is big, one-chunk allocation. It is easily possible for this allocation to fail */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#464: FILE: kernel/power/swsusp.c:638:
+		printk(KERN_CRIT "%sCouldn't allocate continuous pagedir\n", name_suspend);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#475: FILE: kernel/power/swsusp.c:724:
+	printk( "Restoring highmem\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#475: FILE: kernel/power/swsusp.c:724:
+	printk( "Restoring highmem\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#475: FILE: kernel/power/swsusp.c:724:
+	printk( "Restoring highmem\n" );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#478: FILE: kernel/power/swsusp.c:727:
+	printk("done, devices\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#505: FILE: kernel/power/swsusp.c:800:
+^IPRINTK( "ok\n" );^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#505: FILE: kernel/power/swsusp.c:800:
+	PRINTK( "ok\n" );	

ERROR:SPACING: space prohibited before that close parenthesis ')'
#505: FILE: kernel/power/swsusp.c:800:
+	PRINTK( "ok\n" );	

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286565.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 30 warnings, 6 checks, 420 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286565.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
