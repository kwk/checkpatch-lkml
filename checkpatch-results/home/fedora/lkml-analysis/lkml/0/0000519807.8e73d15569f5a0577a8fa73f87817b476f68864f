CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#55: FILE: include/linux/fs.h:1164:
+extern int fsync_dev_lockfs(kdev_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kdev_t' should also have an identifier name
#55: FILE: include/linux/fs.h:1164:
+extern int fsync_dev_lockfs(kdev_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#63: FILE: include/linux/fs.h:1174:
+extern void sync_supers_lockfs(kdev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kdev_t' should also have an identifier name
#63: FILE: include/linux/fs.h:1174:
+extern void sync_supers_lockfs(kdev_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#64: FILE: include/linux/fs.h:1175:
+extern void unlockfs(kdev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kdev_t' should also have an identifier name
#64: FILE: include/linux/fs.h:1175:
+extern void unlockfs(kdev_t);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#75: FILE: kernel/ksyms.c:181:
+EXPORT_SYMBOL(unlockfs);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#126: FILE: fs/buffer.c:380:
+	/* you are not allowed to try locking all the filesystems
+	** on the system, your chances of getting through without

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: space prohibited before semicolon
#130: FILE: fs/buffer.c:384:
+		return fsync_dev(dev) ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: fs/buffer.c:389:
+^I/* note, the FS might need to start transactions to $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#136: FILE: fs/buffer.c:390:
+	/* note, the FS might need to start transactions to 
+	** sync the inodes, or the quota, no locking until

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#142: FILE: fs/buffer.c:396:
+	/* if inodes or quotas could be dirtied during the
+	** sync_supers_lockfs call, the FS is responsible for getting

WARNING:SPACING: space prohibited before semicolon
#145: FILE: fs/buffer.c:399:
+	sync_supers_lockfs(dev) ;

WARNING:SPACING: space prohibited before semicolon
#148: FILE: fs/buffer.c:402:
+	return sync_buffers(dev, 1) ;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#187: FILE: fs/super.c:737:
+	struct super_block * sb;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#200: FILE: fs/super.c:750:
+	struct super_block * sb;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#204: FILE: fs/super.c:754:
+		/* we cannot lock the super here because someone
+		** might be waiting on the unlock with the

WARNING:SPACING: space prohibited before semicolon
#216: FILE: fs/super.c:766:
+				sb->s_op->unlockfs(sb) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: fs/reiserfs/super.c:83:
+    journal_end_sync(&th, s, 1) ;$

WARNING:SPACING: space prohibited before semicolon
#231: FILE: fs/reiserfs/super.c:83:
+    journal_end_sync(&th, s, 1) ;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000519807.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 14 warnings, 3 checks, 164 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000519807.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
