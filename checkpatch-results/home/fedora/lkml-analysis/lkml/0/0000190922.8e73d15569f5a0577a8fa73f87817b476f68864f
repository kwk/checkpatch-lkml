WARNING:TYPO_SPELLING: 'splitted' may be misspelled - perhaps 'split'?
#31: 
gateway. Resending splitted.
                   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#47: 
                Signed-off-by: Alex Aizman <itn780@yahoo.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#48: 
                Signed-off-by: Dmitry Yusupov <dmitry_yus@yahoo.com>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#66: FILE: drivers/scsi/iscsi_tcp.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPLIT_STRING: quoted string split across lines
#109: FILE: drivers/scsi/iscsi_tcp.c:44:
+MODULE_AUTHOR("Dmitry Yusupov <dmitry_yus@yahoo.com>, "
+	      "Alex Aizman <itn780@yahoo.com>");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#118: FILE: drivers/scsi/iscsi_tcp.c:53:
+#define debug_tcp(fmt...) printk("tcp: " fmt)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#124: FILE: drivers/scsi/iscsi_tcp.c:59:
+#define debug_scsi(fmt...) printk("scsi: " fmt)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#130: FILE: drivers/scsi/iscsi_tcp.c:65:
+#ifdef BUG_ON

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#131: FILE: drivers/scsi/iscsi_tcp.c:66:
+#undef BUG_ON

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#133: FILE: drivers/scsi/iscsi_tcp.c:68:
+#define BUG_ON(expr)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#161: FILE: drivers/scsi/iscsi_tcp.c:96:
+	BUG_ON(rc < 0);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!frag_list"
#187: FILE: drivers/scsi/iscsi_tcp.c:122:
+		if (skb_shinfo(skb)->frag_list == NULL &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#190: FILE: drivers/scsi/iscsi_tcp.c:125:
+				((char*)skb->data + conn->in.offset);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#193: FILE: drivers/scsi/iscsi_tcp.c:128:
+			 * in.copy before */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: drivers/scsi/iscsi_tcp.c:130:
+			skb_copy_bits(skb, conn->in.offset,
+				&conn->hdr, conn->hdr_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: drivers/scsi/iscsi_tcp.c:145:
+			skb_copy_bits(skb, conn->in.offset,
+				&conn->hdr, conn->in.copy);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: drivers/scsi/iscsi_tcp.c:151:
+			debug_tcp("PDU gather #1 %d bytes!\n",
+			       conn->in.hdr_offset);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#222: FILE: drivers/scsi/iscsi_tcp.c:157:
+			printk("iscsi_tcp: PDU gather failed! "

WARNING:SPLIT_STRING: quoted string split across lines
#223: FILE: drivers/scsi/iscsi_tcp.c:158:
+			printk("iscsi_tcp: PDU gather failed! "
+			       "copylen %d conn->in.copy %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: drivers/scsi/iscsi_tcp.c:167:
+		skb_copy_bits(skb, conn->in.offset,
+		    (char*)&conn->hdr + conn->in.hdr_offset, copylen);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#232: FILE: drivers/scsi/iscsi_tcp.c:167:
+		    (char*)&conn->hdr + conn->in.hdr_offset, copylen);

CHECK:CAMELCASE: Avoid CamelCase: <SCp>
#264: FILE: drivers/scsi/iscsi_tcp.c:199:
+	sc->SCp.Status = SUCCESS;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Status>
#264: FILE: drivers/scsi/iscsi_tcp.c:199:
+	sc->SCp.Status = SUCCESS;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#266: FILE: drivers/scsi/iscsi_tcp.c:201:
+	__kfifo_put(session->cmdpool.queue, (void*)&ctask, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#266: FILE: drivers/scsi/iscsi_tcp.c:201:
+	__kfifo_put(session->cmdpool.queue, (void*)&ctask, sizeof(void*));

ERROR:SPACING: space prohibited before that close parenthesis ')'
#303: FILE: drivers/scsi/iscsi_tcp.c:238:
+		if (sc->sc_data_direction != DMA_TO_DEVICE ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#306: FILE: drivers/scsi/iscsi_tcp.c:241:
+				int res_count = ntohl(rhdr->residual_count);
+				if (res_count > 0 &&

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxW)
#313: FILE: drivers/scsi/iscsi_tcp.c:248:
+			} else if (rhdr->flags& ISCSI_FLAG_CMD_BIDI_UNDERFLOW) {
 			                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#352: FILE: drivers/scsi/iscsi_tcp.c:287:
+	if (max_cmdsn < exp_cmdsn -1)
 	                          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#369: FILE: drivers/scsi/iscsi_tcp.c:304:
+		struct scsi_cmnd *sc = ctask->sc;
+		conn->exp_statsn = ntohl(rhdr->statsn) + 1;

WARNING:LINE_SPACING: Missing a blank line after declarations
#372: FILE: drivers/scsi/iscsi_tcp.c:307:
+			int res_count = ntohl(rhdr->residual_count);
+			if (res_count > 0 &&

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#410: FILE: drivers/scsi/iscsi_tcp.c:345:
+	BUG_ON(!dtask);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#433: FILE: drivers/scsi/iscsi_tcp.c:368:
+	iscsi_buf_init_hdr(conn, &r2t->headbuf, (char*)hdr,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#462: FILE: drivers/scsi/iscsi_tcp.c:397:
+		BUG_ON(r2t->sg == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!r2t->sg"
#462: FILE: drivers/scsi/iscsi_tcp.c:397:
+		BUG_ON(r2t->sg == NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#465: FILE: drivers/scsi/iscsi_tcp.c:400:
+		iscsi_buf_init_virt(&ctask->sendbuf,
+			    (char*)sc->request_buffer + r2t->data_offset,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#465: FILE: drivers/scsi/iscsi_tcp.c:400:
+			    (char*)sc->request_buffer + r2t->data_offset,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#481: FILE: drivers/scsi/iscsi_tcp.c:416:
+	uint32_t max_cmdsn = ntohl(rhdr->max_cmdsn);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#482: FILE: drivers/scsi/iscsi_tcp.c:417:
+	uint32_t exp_cmdsn = ntohl(rhdr->exp_cmdsn);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#503: FILE: drivers/scsi/iscsi_tcp.c:438:
+	if (!__kfifo_get(ctask->r2tpool.queue, (void*)&r2t, sizeof(void*)))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#503: FILE: drivers/scsi/iscsi_tcp.c:438:
+	if (!__kfifo_get(ctask->r2tpool.queue, (void*)&r2t, sizeof(void*)))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#523: FILE: drivers/scsi/iscsi_tcp.c:458:
+	__kfifo_put(ctask->r2tqueue, (void*)&r2t, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#523: FILE: drivers/scsi/iscsi_tcp.c:458:
+	__kfifo_put(ctask->r2tqueue, (void*)&r2t, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#524: FILE: drivers/scsi/iscsi_tcp.c:459:
+	__kfifo_put(conn->writequeue, (void*)&ctask, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#524: FILE: drivers/scsi/iscsi_tcp.c:459:
+	__kfifo_put(conn->writequeue, (void*)&ctask, sizeof(void*));

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#537: FILE: drivers/scsi/iscsi_tcp.c:472:
+	uint32_t cdgst, rdgst = 0;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#544: FILE: drivers/scsi/iscsi_tcp.c:479:
+		printk("iscsi_tcp: datalen %d > %d\n", conn->in.datalen,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#551: FILE: drivers/scsi/iscsi_tcp.c:486:
+	conn->in.ahslen = hdr->hlength*(4*sizeof(__u16));
 	                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#551: FILE: drivers/scsi/iscsi_tcp.c:486:
+	conn->in.ahslen = hdr->hlength*(4*sizeof(__u16));
 	                                 ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#555: FILE: drivers/scsi/iscsi_tcp.c:490:
+		printk("iscsi_tcp: can't handle AHS with length %d bytes\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#561: FILE: drivers/scsi/iscsi_tcp.c:496:
+	conn->in.padding = conn->in.datalen & (ISCSI_PAD_LEN-1);
 	                                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#573: FILE: drivers/scsi/iscsi_tcp.c:508:
+		rdgst = *(uint32_t*)((char*)hdr + sizeof(struct iscsi_hdr) +

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#573: FILE: drivers/scsi/iscsi_tcp.c:508:
+		rdgst = *(uint32_t*)((char*)hdr + sizeof(struct iscsi_hdr) +

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#587: FILE: drivers/scsi/iscsi_tcp.c:522:
+			printk("iscsi_tcp: itt %x: hdrdgst error recv 0x%x "

WARNING:SPLIT_STRING: quoted string split across lines
#588: FILE: drivers/scsi/iscsi_tcp.c:523:
+			printk("iscsi_tcp: itt %x: hdrdgst error recv 0x%x "
+			       "calc 0x%x\n", conn->in.itt, rdgst, cdgst);

ERROR:SPACING: space required before the open parenthesis '('
#599: FILE: drivers/scsi/iscsi_tcp.c:534:
+		switch(conn->in.opcode) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#601: FILE: drivers/scsi/iscsi_tcp.c:536:
+			BUG_ON((void*)ctask != ctask->sc->SCp.ptr);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#601: FILE: drivers/scsi/iscsi_tcp.c:536:
+			BUG_ON((void*)ctask != ctask->sc->SCp.ptr);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#609: FILE: drivers/scsi/iscsi_tcp.c:544:
+					 * placeholder */

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#618: FILE: drivers/scsi/iscsi_tcp.c:553:
+			BUG_ON((void*)ctask != ctask->sc->SCp.ptr);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#618: FILE: drivers/scsi/iscsi_tcp.c:553:
+			BUG_ON((void*)ctask != ctask->sc->SCp.ptr);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#623: FILE: drivers/scsi/iscsi_tcp.c:558:
+				((struct iscsi_data_rsp*)hdr)->cmd_status;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#627: FILE: drivers/scsi/iscsi_tcp.c:562:
+			BUG_ON((void*)ctask != ctask->sc->SCp.ptr);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#627: FILE: drivers/scsi/iscsi_tcp.c:562:
+			BUG_ON((void*)ctask != ctask->sc->SCp.ptr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#647: FILE: drivers/scsi/iscsi_tcp.c:582:
+					__kfifo_put(session->immpool.queue,
+					    (void*)&mtask, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#647: FILE: drivers/scsi/iscsi_tcp.c:582:
+					    (void*)&mtask, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#647: FILE: drivers/scsi/iscsi_tcp.c:582:
+					    (void*)&mtask, sizeof(void*));

ERROR:SPACING: space required before the open parenthesis '('
#667: FILE: drivers/scsi/iscsi_tcp.c:602:
+		switch(conn->in.opcode) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#675: FILE: drivers/scsi/iscsi_tcp.c:610:
+					__kfifo_put(session->immpool.queue,
+					    (void*)&mtask, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#675: FILE: drivers/scsi/iscsi_tcp.c:610:
+					    (void*)&mtask, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#675: FILE: drivers/scsi/iscsi_tcp.c:610:
+					    (void*)&mtask, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#686: FILE: drivers/scsi/iscsi_tcp.c:621:
+			__kfifo_put(session->immpool.queue, (void*)&mtask,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#687: FILE: drivers/scsi/iscsi_tcp.c:622:
+				    sizeof(void*));

WARNING:TYPO_SPELLING: 'destanation' may be misspelled - perhaps 'destination'?
#715: FILE: drivers/scsi/iscsi_tcp.c:650:
+ * iscsi_ctask_copy - copy skb bits to the destanation cmd task
                                            ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#722: FILE: drivers/scsi/iscsi_tcp.c:657:
+iscsi_ctask_copy(struct iscsi_conn *conn, struct iscsi_cmd_task *ctask,
+		void *buf, int buf_size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#744: FILE: drivers/scsi/iscsi_tcp.c:679:
+	debug_tcp("ctask_copy %d bytes at offset %d copied %d\n",
+	       size, conn->in.offset, conn->in.copied);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#746: FILE: drivers/scsi/iscsi_tcp.c:681:
+	BUG_ON(size <= 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#747: FILE: drivers/scsi/iscsi_tcp.c:682:
+	BUG_ON(ctask->sent + size > ctask->total_length);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#750: FILE: drivers/scsi/iscsi_tcp.c:685:
+			   (char*)buf + conn->data_copied, size);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#752: FILE: drivers/scsi/iscsi_tcp.c:687:
+	BUG_ON(rc);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#761: FILE: drivers/scsi/iscsi_tcp.c:696:
+	BUG_ON(conn->in.copy < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#762: FILE: drivers/scsi/iscsi_tcp.c:697:
+	BUG_ON(ctask->data_count < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#766: FILE: drivers/scsi/iscsi_tcp.c:701:
+			BUG_ON(buf_size - conn->data_copied < 0);

WARNING:TYPO_SPELLING: 'destanation' may be misspelled - perhaps 'destination'?
#779: FILE: drivers/scsi/iscsi_tcp.c:714:
+ * iscsi_tcp_copy - copy skb bits to the destanation buffer
                                          ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#791: FILE: drivers/scsi/iscsi_tcp.c:726:
+	debug_tcp("tcp_copy %d bytes at offset %d copied %d\n",
+	       size, conn->in.offset, conn->data_copied);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#792: FILE: drivers/scsi/iscsi_tcp.c:727:
+	BUG_ON(size <= 0);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#795: FILE: drivers/scsi/iscsi_tcp.c:730:
+			   (char*)buf + conn->data_copied, size);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#796: FILE: drivers/scsi/iscsi_tcp.c:731:
+	BUG_ON(rc);

ERROR:SPACING: space required before the open parenthesis '('
#815: FILE: drivers/scsi/iscsi_tcp.c:750:
+	switch(conn->in.opcode) {

WARNING:TABSTOP: Statements should start on a tabstop
#817: FILE: drivers/scsi/iscsi_tcp.c:752:
+	    struct iscsi_cmd_task *ctask = conn->in.ctask;

WARNING:TABSTOP: Statements should start on a tabstop
#818: FILE: drivers/scsi/iscsi_tcp.c:753:
+	    struct scsi_cmnd *sc = ctask->sc;

WARNING:LINE_SPACING: Missing a blank line after declarations
#819: FILE: drivers/scsi/iscsi_tcp.c:754:
+	    struct scsi_cmnd *sc = ctask->sc;
+	    BUG_ON(!(ctask->in_progress & IN_PROGRESS_READ &&

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#819: FILE: drivers/scsi/iscsi_tcp.c:754:
+	    BUG_ON(!(ctask->in_progress & IN_PROGRESS_READ &&

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#821: FILE: drivers/scsi/iscsi_tcp.c:756:
+	    BUG_ON((void*)ctask != sc->SCp.ptr);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#821: FILE: drivers/scsi/iscsi_tcp.c:756:
+	    BUG_ON((void*)ctask != sc->SCp.ptr);

WARNING:TABSTOP: Statements should start on a tabstop
#826: FILE: drivers/scsi/iscsi_tcp.c:761:
+	    if (sc->use_sg) {

WARNING:TABSTOP: Statements should start on a tabstop
#851: FILE: drivers/scsi/iscsi_tcp.c:786:
+	    } else {

WARNING:TABSTOP: Statements should start on a tabstop
#857: FILE: drivers/scsi/iscsi_tcp.c:792:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#860: FILE: drivers/scsi/iscsi_tcp.c:795:
+	    if (conn->in.flags & ISCSI_FLAG_DATA_STATUS) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#860: FILE: drivers/scsi/iscsi_tcp.c:795:
+	    if (conn->in.flags & ISCSI_FLAG_DATA_STATUS) {
+		    debug_scsi("done [sc %lx res %d itt 0x%x]\n",

WARNING:TABSTOP: Statements should start on a tabstop
#865: FILE: drivers/scsi/iscsi_tcp.c:800:
+	    }

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#911: FILE: drivers/scsi/iscsi_tcp.c:846:
+			__kfifo_put(session->immpool.queue, (void*)&mtask,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#912: FILE: drivers/scsi/iscsi_tcp.c:847:
+				    sizeof(void*));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#918: FILE: drivers/scsi/iscsi_tcp.c:853:
+		BUG_ON(1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#929: FILE: drivers/scsi/iscsi_tcp.c:864:
+iscsi_tcp_data_recv(read_descriptor_t *rd_desc, struct sk_buff *skb,
+		unsigned int offset, size_t len)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#943: FILE: drivers/scsi/iscsi_tcp.c:878:
+	BUG_ON(conn->in.copy <= 0);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 23)
#953: FILE: drivers/scsi/iscsi_tcp.c:888:
+		if (rc) {
+		       if (rc == -EAGAIN)

WARNING:TABSTOP: Statements should start on a tabstop
#954: FILE: drivers/scsi/iscsi_tcp.c:889:
+		       if (rc == -EAGAIN)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 32)
#954: FILE: drivers/scsi/iscsi_tcp.c:889:
+		       if (rc == -EAGAIN)
+				goto nomore;

CHECK:BRACES: braces {} should be used on all arms of this statement
#954: FILE: drivers/scsi/iscsi_tcp.c:889:
+		       if (rc == -EAGAIN)
[...]
+		       else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TABSTOP: Statements should start on a tabstop
#956: FILE: drivers/scsi/iscsi_tcp.c:891:
+		       else {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 32)
#956: FILE: drivers/scsi/iscsi_tcp.c:891:
+		       else {
+				iscsi_cnx_error(conn->handle, rc);

CHECK:BRACES: Unbalanced braces around else statement
#956: FILE: drivers/scsi/iscsi_tcp.c:891:
+		       else {

WARNING:TABSTOP: Statements should start on a tabstop
#959: FILE: drivers/scsi/iscsi_tcp.c:894:
+		       }

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#976: FILE: drivers/scsi/iscsi_tcp.c:911:
+	    conn->in.copy) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#978: FILE: drivers/scsi/iscsi_tcp.c:913:
+		debug_tcp("data_recv offset %d copy %d\n",
+		       conn->in.offset, conn->in.copy);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#996: FILE: drivers/scsi/iscsi_tcp.c:931:
+	debug_tcp("f, processed %d from out of %d padding %d\n",
+	       conn->in.offset - offset, (int)len, conn->in.padding);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#997: FILE: drivers/scsi/iscsi_tcp.c:932:
+	BUG_ON(conn->in.offset - offset > len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1001: FILE: drivers/scsi/iscsi_tcp.c:936:
+		debug_tcp("continue to process %d bytes\n",
+		       (int)len - (conn->in.offset - offset));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1006: FILE: drivers/scsi/iscsi_tcp.c:941:
+	BUG_ON(conn->in.offset - offset == 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1011: FILE: drivers/scsi/iscsi_tcp.c:946:
+^I          conn->in.offset - offset, (int)len, (int)rd_desc->count);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1012: FILE: drivers/scsi/iscsi_tcp.c:947:
+	BUG_ON(conn->in.offset - offset == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1013: FILE: drivers/scsi/iscsi_tcp.c:948:
+	BUG_ON(conn->in.offset - offset > len);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sock *' should also have an identifier name
#1039: FILE: drivers/scsi/iscsi_tcp.c:974:
+	void (*old_state_change)(struct sock *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1043: FILE: drivers/scsi/iscsi_tcp.c:978:
+	conn = (struct iscsi_conn*)sk->sk_user_data;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iscsi_tcp_state_change', this function's name, in a string
#1048: FILE: drivers/scsi/iscsi_tcp.c:983:
+		debug_tcp("iscsi_tcp_state_change: TCP_CLOSE|TCP_CLOSE_WAIT\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1072: FILE: drivers/scsi/iscsi_tcp.c:1007:
+	struct iscsi_conn *conn = (struct iscsi_conn*)sk->sk_user_data;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1073: FILE: drivers/scsi/iscsi_tcp.c:1008:
+	struct iscsi_conn *conn = (struct iscsi_conn*)sk->sk_user_data;
+	conn->old_write_space(sk);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iscsi_write_space', this function's name, in a string
#1074: FILE: drivers/scsi/iscsi_tcp.c:1009:
+	debug_tcp("iscsi_write_space: cid %d\n", conn->id);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1124: FILE: drivers/scsi/iscsi_tcp.c:1059:
+	BUG_ON(buf->sent + size > buf->sg.length);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1131: FILE: drivers/scsi/iscsi_tcp.c:1066:
+	debug_tcp("sendhdr %p %d bytes at offset %d sent %d res %d\n",
+		page_address(buf->sg.page), size, offset, buf->sent, res);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct socket *' should also have an identifier name
#1155: FILE: drivers/scsi/iscsi_tcp.c:1090:
+	ssize_t (*sendpage)(struct socket *, struct page *, int, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#1155: FILE: drivers/scsi/iscsi_tcp.c:1090:
+	ssize_t (*sendpage)(struct socket *, struct page *, int, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1155: FILE: drivers/scsi/iscsi_tcp.c:1090:
+	ssize_t (*sendpage)(struct socket *, struct page *, int, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1155: FILE: drivers/scsi/iscsi_tcp.c:1090:
+	ssize_t (*sendpage)(struct socket *, struct page *, int, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1155: FILE: drivers/scsi/iscsi_tcp.c:1090:
+	ssize_t (*sendpage)(struct socket *, struct page *, int, size_t, int);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1161: FILE: drivers/scsi/iscsi_tcp.c:1096:
+	BUG_ON(buf->sent + size > buf->sg.length);

WARNING:SPLIT_STRING: quoted string split across lines
#1174: FILE: drivers/scsi/iscsi_tcp.c:1109:
+	debug_tcp("sendpage %p %d bytes, boff %d bsent %d "
+		  "left %d sent %d res %d\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1212: FILE: drivers/scsi/iscsi_tcp.c:1147:
+	BUG_ON(!dtask);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1233: FILE: drivers/scsi/iscsi_tcp.c:1168:
+	iscsi_buf_init_hdr(conn, &r2t->headbuf, (char*)hdr,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1237: FILE: drivers/scsi/iscsi_tcp.c:1172:
+		BUG_ON(ctask->bad_sg == r2t->sg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1244: FILE: drivers/scsi/iscsi_tcp.c:1179:
+		iscsi_buf_init_virt(&ctask->sendbuf,
+			    (char*)sc->request_buffer + new_offset,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1244: FILE: drivers/scsi/iscsi_tcp.c:1179:
+			    (char*)sc->request_buffer + new_offset,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1258: FILE: drivers/scsi/iscsi_tcp.c:1193:
+	BUG_ON(!dtask);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1280: FILE: drivers/scsi/iscsi_tcp.c:1215:
+	iscsi_buf_init_hdr(conn, &ctask->headbuf, (char*)hdr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1291: FILE: drivers/scsi/iscsi_tcp.c:1226:
+iscsi_cmd_init(struct iscsi_conn *conn, struct iscsi_cmd_task *ctask,
+		struct scsi_cmnd *sc)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1317: FILE: drivers/scsi/iscsi_tcp.c:1252:
+		BUG_ON(ctask->total_length == 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1327: FILE: drivers/scsi/iscsi_tcp.c:1262:
+			iscsi_buf_init_virt(&ctask->sendbuf, sc->request_buffer,
+					sc->request_bufflen);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1328: FILE: drivers/scsi/iscsi_tcp.c:1263:
+			BUG_ON(sc->request_bufflen > PAGE_SIZE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1350: FILE: drivers/scsi/iscsi_tcp.c:1285:
+				ctask->imm_count = min(session->first_burst,
+							conn->max_xmit_dlength);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1353: FILE: drivers/scsi/iscsi_tcp.c:1288:
+				ctask->imm_count = min(ctask->total_length,
+							conn->max_xmit_dlength);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1362: FILE: drivers/scsi/iscsi_tcp.c:1297:
+			ctask->unsol_count = min(session->first_burst,
+				ctask->total_length) - ctask->imm_count;

WARNING:SPLIT_STRING: quoted string split across lines
#1374: FILE: drivers/scsi/iscsi_tcp.c:1309:
+		debug_scsi("cmd [itt %x total %d imm %d imm_data %d "
+			   "r2t_data %d]\n",

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1387: FILE: drivers/scsi/iscsi_tcp.c:1322:
+	iscsi_buf_init_hdr(conn, &ctask->headbuf, (char*)&ctask->hdr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1388: FILE: drivers/scsi/iscsi_tcp.c:1323:
+	iscsi_buf_init_hdr(conn, &ctask->headbuf, (char*)&ctask->hdr,
+			    (u8 *)ctask->hdrext);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1405: FILE: drivers/scsi/iscsi_tcp.c:1340:
+{
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1407: FILE: drivers/scsi/iscsi_tcp.c:1342:
+	debug_scsi("mtask deq [cid %d state %x itt 0x%x]\n",
+		conn->id, mtask->xmstate, mtask->itt);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1422: FILE: drivers/scsi/iscsi_tcp.c:1357:
+		BUG_ON(!mtask->data_count);

WARNING:TYPO_SPELLING: 'spreaded' may be misspelled - perhaps 'spread'?
#1425: FILE: drivers/scsi/iscsi_tcp.c:1360:
+		 * Virtual buffer could be spreaded across multiple pages...
 		                           ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1429: FILE: drivers/scsi/iscsi_tcp.c:1364:
+			if (iscsi_sendpage(conn, &mtask->sendbuf,
+				   &mtask->data_count, &mtask->sent)) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1436: FILE: drivers/scsi/iscsi_tcp.c:1371:
+	BUG_ON(mtask->xmstate != XMSTATE_IDLE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1446: FILE: drivers/scsi/iscsi_tcp.c:1381:
+	debug_scsi("ctask deq [cid %d state %x itt 0x%x]\n",
+		conn->id, ctask->xmstate, ctask->itt);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1451: FILE: drivers/scsi/iscsi_tcp.c:1386:
+			BUG_ON(ctask->xmstate != XMSTATE_IDLE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1467: FILE: drivers/scsi/iscsi_tcp.c:1402:
+		BUG_ON(!ctask->imm_count);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1483: FILE: drivers/scsi/iscsi_tcp.c:1418:
+		BUG_ON(!ctask->unsol_count);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1497: FILE: drivers/scsi/iscsi_tcp.c:1432:
+		debug_scsi("uns dout [itt 0x%x dlen %d sent %d]\n",
 		                ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1498: FILE: drivers/scsi/iscsi_tcp.c:1433:
+		debug_scsi("uns dout [itt 0x%x dlen %d sent %d]\n",
+			ctask->itt, ctask->unsol_count, ctask->sent);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1502: FILE: drivers/scsi/iscsi_tcp.c:1437:
+		BUG_ON(!ctask->data_count);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1506: FILE: drivers/scsi/iscsi_tcp.c:1441:
+			int start = ctask->sent;
+			if (iscsi_sendpage(conn, &ctask->sendbuf,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1514: FILE: drivers/scsi/iscsi_tcp.c:1449:
+			BUG_ON(ctask->sent > ctask->total_length);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1521: FILE: drivers/scsi/iscsi_tcp.c:1456:
+		BUG_ON(ctask->unsol_count < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1532: FILE: drivers/scsi/iscsi_tcp.c:1467:
+		BUG_ON(ctask->xmstate != XMSTATE_IDLE);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1540: FILE: drivers/scsi/iscsi_tcp.c:1475:
+			__kfifo_get(ctask->r2tqueue, (void*)&r2t,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1541: FILE: drivers/scsi/iscsi_tcp.c:1476:
+				    sizeof(void*));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1545: FILE: drivers/scsi/iscsi_tcp.c:1480:
+		BUG_ON(r2t == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!r2t"
#1545: FILE: drivers/scsi/iscsi_tcp.c:1480:
+		BUG_ON(r2t == NULL);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1552: FILE: drivers/scsi/iscsi_tcp.c:1487:
+		debug_scsi("sol dout [dsn %d itt 0x%x dlen %d sent %d]\n",
 		                ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1553: FILE: drivers/scsi/iscsi_tcp.c:1488:
+		debug_scsi("sol dout [dsn %d itt 0x%x dlen %d sent %d]\n",
+			r2t->solicit_datasn - 1, ctask->itt, r2t->data_count,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1574: FILE: drivers/scsi/iscsi_tcp.c:1509:
+			BUG_ON(r2t->data_count < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1576: FILE: drivers/scsi/iscsi_tcp.c:1511:
+				BUG_ON(ctask->bad_sg == r2t->sg);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1577: FILE: drivers/scsi/iscsi_tcp.c:1512:
+				BUG_ON(ctask->sc->use_sg == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1591: FILE: drivers/scsi/iscsi_tcp.c:1526:
+		BUG_ON(r2t->data_length - r2t->sent < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1603: FILE: drivers/scsi/iscsi_tcp.c:1538:
+		BUG_ON(ctask->r2t_data_count - r2t->data_length < 0);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1606: FILE: drivers/scsi/iscsi_tcp.c:1541:
+		__kfifo_put(ctask->r2tpool.queue, (void*)&r2t, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1606: FILE: drivers/scsi/iscsi_tcp.c:1541:
+		__kfifo_put(ctask->r2tpool.queue, (void*)&r2t, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1607: FILE: drivers/scsi/iscsi_tcp.c:1542:
+		if (__kfifo_get(ctask->r2tqueue, (void*)&r2t, sizeof(void*))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1607: FILE: drivers/scsi/iscsi_tcp.c:1542:
+		if (__kfifo_get(ctask->r2tqueue, (void*)&r2t, sizeof(void*))) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1614: FILE: drivers/scsi/iscsi_tcp.c:1549:
+	BUG_ON(ctask->xmstate != XMSTATE_IDLE);

WARNING:TYPO_SPELLING: 'guarantie' may be misspelled - perhaps 'guarantee'?
#1640: FILE: drivers/scsi/iscsi_tcp.c:1575:
+	 * we guarantie one producer and one consumer.
 	      ^^^^^^^^^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1646: FILE: drivers/scsi/iscsi_tcp.c:1581:
+		__kfifo_get(conn->writequeue, (void*)&conn->ctask,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1647: FILE: drivers/scsi/iscsi_tcp.c:1582:
+			    sizeof(void*)) ||

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1648: FILE: drivers/scsi/iscsi_tcp.c:1583:
+		__kfifo_get(conn->xmitqueue, (void*)&conn->ctask,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1649: FILE: drivers/scsi/iscsi_tcp.c:1584:
+			    sizeof(void*)))) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1650: FILE: drivers/scsi/iscsi_tcp.c:1585:
+			    sizeof(void*)))) {
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1663: FILE: drivers/scsi/iscsi_tcp.c:1598:
+	while (conn->mtask || __kfifo_get(conn->immqueue, (void*)&conn->mtask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1664: FILE: drivers/scsi/iscsi_tcp.c:1599:
+	while (conn->mtask || __kfifo_get(conn->immqueue, (void*)&conn->mtask,
+			   sizeof(void*))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1664: FILE: drivers/scsi/iscsi_tcp.c:1599:
+			   sizeof(void*))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1674: FILE: drivers/scsi/iscsi_tcp.c:1609:
+			__kfifo_put(session->immpool.queue, (void*)&conn->mtask,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1675: FILE: drivers/scsi/iscsi_tcp.c:1610:
+				    sizeof(void*));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1685: FILE: drivers/scsi/iscsi_tcp.c:1620:
+			 * when immediate PDU interrupts xmitqueue loop */

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#1736: FILE: drivers/scsi/iscsi_tcp.c:1671:
+	struct Scsi_Host *host;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1747: FILE: drivers/scsi/iscsi_tcp.c:1682:
+	BUG_ON(host != session->host);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1787: FILE: drivers/scsi/iscsi_tcp.c:1722:
+	__kfifo_get(session->cmdpool.queue, (void*)&ctask, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1787: FILE: drivers/scsi/iscsi_tcp.c:1722:
+	__kfifo_get(session->cmdpool.queue, (void*)&ctask, sizeof(void*));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1792: FILE: drivers/scsi/iscsi_tcp.c:1727:
+	BUG_ON(!ctask);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1793: FILE: drivers/scsi/iscsi_tcp.c:1728:
+	BUG_ON(ctask->in_progress = IN_PROGRESS_IDLE);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1795: FILE: drivers/scsi/iscsi_tcp.c:1730:
+	sc->SCp.ptr = (char*)ctask;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1798: FILE: drivers/scsi/iscsi_tcp.c:1733:
+	__kfifo_put(conn->xmitqueue, (void*)&ctask, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1798: FILE: drivers/scsi/iscsi_tcp.c:1733:
+	__kfifo_put(conn->xmitqueue, (void*)&ctask, sizeof(void*));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1799: FILE: drivers/scsi/iscsi_tcp.c:1734:
+	debug_scsi(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1805: FILE: drivers/scsi/iscsi_tcp.c:1740:
+        if (!in_interrupt() && !down_trylock(&conn->xmitsema)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1805: FILE: drivers/scsi/iscsi_tcp.c:1740:
+        if (!in_interrupt() && !down_trylock(&conn->xmitsema)) {$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1805: FILE: drivers/scsi/iscsi_tcp.c:1740:
+        if (!in_interrupt() && !down_trylock(&conn->xmitsema)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1811: FILE: drivers/scsi/iscsi_tcp.c:1746:
+	} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1823: FILE: drivers/scsi/iscsi_tcp.c:1758:
+	printk("iscsi_tcp: cmd 0x%x is not queued (%d)\n", sc->cmnd[0], reason);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1851: FILE: drivers/scsi/iscsi_tcp.c:1786:
+	*items = kmalloc(max * sizeof(void*), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!items"
#1852: FILE: drivers/scsi/iscsi_tcp.c:1787:
+	if (*items == NULL)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1856: FILE: drivers/scsi/iscsi_tcp.c:1791:
+	q->pool = kmalloc(max * sizeof(void*), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1856: FILE: drivers/scsi/iscsi_tcp.c:1791:
+	q->pool = kmalloc(max * sizeof(void*), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!q->pool"
#1857: FILE: drivers/scsi/iscsi_tcp.c:1792:
+	if (q->pool == NULL) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1862: FILE: drivers/scsi/iscsi_tcp.c:1797:
+	q->queue = kfifo_init((void*)q->pool, max * sizeof(void*),

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1862: FILE: drivers/scsi/iscsi_tcp.c:1797:
+	q->queue = kfifo_init((void*)q->pool, max * sizeof(void*),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!q->pool[i]"
#1872: FILE: drivers/scsi/iscsi_tcp.c:1807:
+		if (q->pool[i] == NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1874: FILE: drivers/scsi/iscsi_tcp.c:1809:
+			int j;
+			for (j = 0; j < i; j++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1874: FILE: drivers/scsi/iscsi_tcp.c:1809:
+			for (j = 0; j < i; j++) {
+				kfree(q->pool[j]);
+			}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1884: FILE: drivers/scsi/iscsi_tcp.c:1819:
+		__kfifo_put(q->queue, (void*)&q->pool[i], sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1884: FILE: drivers/scsi/iscsi_tcp.c:1819:
+		__kfifo_put(q->queue, (void*)&q->pool[i], sizeof(void*));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1906: FILE: drivers/scsi/iscsi_tcp.c:1841:
+iscsi_conn_create(iscsi_snx_t snxh, iscsi_cnx_t handle,
+			 uint32_t conn_idx)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*conn)...) over kmalloc(sizeof(struct iscsi_conn)...)
#1911: FILE: drivers/scsi/iscsi_tcp.c:1846:
+	conn = kmalloc(sizeof(struct iscsi_conn), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!conn"
#1912: FILE: drivers/scsi/iscsi_tcp.c:1847:
+	if (conn == NULL)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1932: FILE: drivers/scsi/iscsi_tcp.c:1867:
+	conn->xmitqueue = kfifo_alloc(session->cmds_max * sizeof(void*),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1933: FILE: drivers/scsi/iscsi_tcp.c:1868:
+	conn->xmitqueue = kfifo_alloc(session->cmds_max * sizeof(void*),
+					GFP_KERNEL, NULL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1938: FILE: drivers/scsi/iscsi_tcp.c:1873:
+	conn->writequeue = kfifo_alloc(session->cmds_max * sizeof(void*),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1939: FILE: drivers/scsi/iscsi_tcp.c:1874:
+	conn->writequeue = kfifo_alloc(session->cmds_max * sizeof(void*),
+					GFP_KERNEL, NULL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1944: FILE: drivers/scsi/iscsi_tcp.c:1879:
+	conn->immqueue = kfifo_alloc(session->imm_max * sizeof(void*),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1945: FILE: drivers/scsi/iscsi_tcp.c:1880:
+	conn->immqueue = kfifo_alloc(session->imm_max * sizeof(void*),
+					GFP_KERNEL, NULL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1952: FILE: drivers/scsi/iscsi_tcp.c:1887:
+	if (!__kfifo_get(session->immpool.queue, (void*)&conn->login_mtask,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1953: FILE: drivers/scsi/iscsi_tcp.c:1888:
+			 sizeof(void*))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1963: FILE: drivers/scsi/iscsi_tcp.c:1898:
+		conn->data = (void*)__get_free_pages(GFP_KERNEL,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1976: FILE: drivers/scsi/iscsi_tcp.c:1911:
+	__kfifo_put(session->immpool.queue, (void*)&conn->login_mtask,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1977: FILE: drivers/scsi/iscsi_tcp.c:1912:
+		    sizeof(void*));

WARNING:TYPO_SPELLING: 'pathes' may be misspelled - perhaps 'paths'?
#2025: FILE: drivers/scsi/iscsi_tcp.c:1960:
+	 * We must serialize with xmitwork recv pathes.
 	                                        ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2053: FILE: drivers/scsi/iscsi_tcp.c:1988:
+		free_pages((unsigned long)conn->data,
+					get_order(conn->max_recv_dlength));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2056: FILE: drivers/scsi/iscsi_tcp.c:1991:
+	__kfifo_put(session->immpool.queue, (void*)&conn->login_mtask,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2057: FILE: drivers/scsi/iscsi_tcp.c:1992:
+		    sizeof(void*));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2070: FILE: drivers/scsi/iscsi_tcp.c:2005:
+		session->leadconn = container_of(session->connections.next,
+			struct iscsi_conn, item);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!session->leadconn"
#2073: FILE: drivers/scsi/iscsi_tcp.c:2008:
+	if (session->leadconn == NULL)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2075: FILE: drivers/scsi/iscsi_tcp.c:2010:
+		session->cmdsn = session->max_cmdsn = session->exp_cmdsn = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2091: FILE: drivers/scsi/iscsi_tcp.c:2026:
+	if (!(sock = sockfd_lookup(transport_fd, &err))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2092: FILE: drivers/scsi/iscsi_tcp.c:2027:
+		printk("iscsi_tcp: sockfd_lookup failed %d\n", err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2102: FILE: drivers/scsi/iscsi_tcp.c:2037:
+				printk("iscsi_tcp: can't bind non-stopped "

WARNING:SPLIT_STRING: quoted string split across lines
#2103: FILE: drivers/scsi/iscsi_tcp.c:2038:
+				printk("iscsi_tcp: can't bind non-stopped "
+				       "connection (%d:%d)\n", conn->c_stage,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!session"
#2160: FILE: drivers/scsi/iscsi_tcp.c:2095:
+	if (session == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2161: FILE: drivers/scsi/iscsi_tcp.c:2096:
+		printk("iscsi_tcp: can't start not-binded connection\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#2175: FILE: drivers/scsi/iscsi_tcp.c:2110:
+	if (conn->stop_stage == STOP_CNX_RECOVER) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2183: FILE: drivers/scsi/iscsi_tcp.c:2118:
+	} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2209: FILE: drivers/scsi/iscsi_tcp.c:2144:
+		BUG_ON(!conn->sock);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2223: FILE: drivers/scsi/iscsi_tcp.c:2158:
+		while (__kfifo_get(conn->writequeue, (void*)&conn->ctask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2224: FILE: drivers/scsi/iscsi_tcp.c:2159:
+		while (__kfifo_get(conn->writequeue, (void*)&conn->ctask,
+			    sizeof(void*)) ||

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2224: FILE: drivers/scsi/iscsi_tcp.c:2159:
+			    sizeof(void*)) ||

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2225: FILE: drivers/scsi/iscsi_tcp.c:2160:
+			__kfifo_get(conn->xmitqueue, (void*)&conn->ctask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2226: FILE: drivers/scsi/iscsi_tcp.c:2161:
+			__kfifo_get(conn->xmitqueue, (void*)&conn->ctask,
+			    sizeof(void*))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2226: FILE: drivers/scsi/iscsi_tcp.c:2161:
+			    sizeof(void*))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2228: FILE: drivers/scsi/iscsi_tcp.c:2163:
+			__kfifo_put(session->cmdpool.queue, (void*)&conn->ctask,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2229: FILE: drivers/scsi/iscsi_tcp.c:2164:
+				    sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2233: FILE: drivers/scsi/iscsi_tcp.c:2168:
+		while (__kfifo_get(conn->immqueue, (void*)&conn->mtask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2234: FILE: drivers/scsi/iscsi_tcp.c:2169:
+		while (__kfifo_get(conn->immqueue, (void*)&conn->mtask,
+			   sizeof(void*))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2234: FILE: drivers/scsi/iscsi_tcp.c:2169:
+			   sizeof(void*))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2236: FILE: drivers/scsi/iscsi_tcp.c:2171:
+			__kfifo_put(session->immpool.queue, (void*)&conn->mtask,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2237: FILE: drivers/scsi/iscsi_tcp.c:2172:
+				    sizeof(void*));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2247: FILE: drivers/scsi/iscsi_tcp.c:2182:
+iscsi_conn_send_pdu(iscsi_cnx_t cnxh, struct iscsi_hdr *hdr, char *data,
+		  uint32_t data_size)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2254: FILE: drivers/scsi/iscsi_tcp.c:2189:
+	BUG_ON(!(hdr->opcode & ISCSI_OP_IMMEDIATE));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2259: FILE: drivers/scsi/iscsi_tcp.c:2194:
+		if (!__kfifo_get(session->immpool.queue, (void*)&mtask,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2260: FILE: drivers/scsi/iscsi_tcp.c:2195:
+				 sizeof(void*))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2279: FILE: drivers/scsi/iscsi_tcp.c:2214:
+		((struct iscsi_nopout*)hdr)->cmdsn = htonl(session->cmdsn);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2280: FILE: drivers/scsi/iscsi_tcp.c:2215:
+		if (conn->c_stage == ISCSI_CNX_STARTED) {
+			session->cmdsn++;
+		}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2285: FILE: drivers/scsi/iscsi_tcp.c:2220:
+		((struct iscsi_nopout*)hdr)->cmdsn = htonl(session->cmdsn);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2287: FILE: drivers/scsi/iscsi_tcp.c:2222:
+	((struct iscsi_nopout*)hdr)->exp_statsn = htonl(conn->exp_statsn);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2292: FILE: drivers/scsi/iscsi_tcp.c:2227:
+		iscsi_buf_init_hdr(conn, &mtask->headbuf, (char*)&mtask->hdr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2293: FILE: drivers/scsi/iscsi_tcp.c:2228:
+		iscsi_buf_init_hdr(conn, &mtask->headbuf, (char*)&mtask->hdr,
+				    (u8 *)mtask->hdrext);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2295: FILE: drivers/scsi/iscsi_tcp.c:2230:
+		iscsi_buf_init_virt(&mtask->headbuf, (char*)&mtask->hdr,

CHECK:BRACES: braces {} should be used on all arms of this statement
#2300: FILE: drivers/scsi/iscsi_tcp.c:2235:
+	if (data_size) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2303: FILE: drivers/scsi/iscsi_tcp.c:2238:
+	} else

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2309: FILE: drivers/scsi/iscsi_tcp.c:2244:
+		iscsi_buf_init_virt(&mtask->sendbuf, (char*)mtask->data,

WARNING:TYPO_SPELLING: 'convertion' may be misspelled - perhaps 'conversion'?
#2311: FILE: drivers/scsi/iscsi_tcp.c:2246:
+		/* FIXME: implement: convertion of mtask->data into 1st
 		                     ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'spreaded' may be misspelled - perhaps 'spread'?
#2313: FILE: drivers/scsi/iscsi_tcp.c:2248:
+		 *        could be spreaded across multiple pages... */
 		                   ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2313: FILE: drivers/scsi/iscsi_tcp.c:2248:
+		 *        could be spreaded across multiple pages... */

ERROR:SPACING: space required before the open parenthesis '('
#2314: FILE: drivers/scsi/iscsi_tcp.c:2249:
+		if(mtask->sendbuf.sg.offset + mtask->data_count > PAGE_SIZE) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2318: FILE: drivers/scsi/iscsi_tcp.c:2253:
+					    (void*)&mtask, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2318: FILE: drivers/scsi/iscsi_tcp.c:2253:
+					    (void*)&mtask, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2328: FILE: drivers/scsi/iscsi_tcp.c:2263:
+	__kfifo_put(conn->immqueue, (void*)&mtask, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2328: FILE: drivers/scsi/iscsi_tcp.c:2263:
+	__kfifo_put(conn->immqueue, (void*)&mtask, sizeof(void*));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2405: FILE: drivers/scsi/iscsi_tcp.c:2340:
+		rc = iscsi_conn_send_pdu(iscsi_handle(conn),
+			    (struct iscsi_hdr *)hdr, NULL, 0);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2411: FILE: drivers/scsi/iscsi_tcp.c:2346:
+			conn->tmabort_timer.expires = 3*HZ + jiffies; /*3 secs*/
 			                               ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2419: FILE: drivers/scsi/iscsi_tcp.c:2354:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#2430: FILE: drivers/scsi/iscsi_tcp.c:2365:
+		int p_state = session->state;
+		rc = wait_event_interruptible(conn->ehwait,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2431: FILE: drivers/scsi/iscsi_tcp.c:2366:
+		rc = wait_event_interruptible(conn->ehwait,
+			(p_state == ISCSI_STATE_LOGGED_IN ?

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2472: FILE: drivers/scsi/iscsi_tcp.c:2407:
+	BUG_ON(session->state != ISCSI_STATE_LOGGED_IN);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2492: FILE: drivers/scsi/iscsi_tcp.c:2427:
+^I        struct iscsi_cmd_task *ctask = session->cmds[cmd_i];$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2496: FILE: drivers/scsi/iscsi_tcp.c:2431:
+		if (iscsi_pool_init(&ctask->r2tpool, session->max_r2t,
+			(void***)&ctask->r2ts, sizeof(struct iscsi_r2t_info))) {

ERROR:POINTER_LOCATION: "(foo***)" should be "(foo ***)"
#2496: FILE: drivers/scsi/iscsi_tcp.c:2431:
+			(void***)&ctask->r2ts, sizeof(struct iscsi_r2t_info))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2501: FILE: drivers/scsi/iscsi_tcp.c:2436:
+		ctask->r2tqueue = kfifo_alloc(session->max_r2t * sizeof(void*),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2502: FILE: drivers/scsi/iscsi_tcp.c:2437:
+		ctask->r2tqueue = kfifo_alloc(session->max_r2t * sizeof(void*),
+						GFP_KERNEL, NULL);

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#2504: FILE: drivers/scsi/iscsi_tcp.c:2439:
+			iscsi_pool_free(&ctask->r2tpool, (void**)ctask->r2ts);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2514: FILE: drivers/scsi/iscsi_tcp.c:2449:
+		ctask->datapool = mempool_create(ISCSI_DTASK_DEFAULT_MAX,
+			 mempool_alloc_slab, mempool_free_slab, taskcache);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ctask->datapool"
#2515: FILE: drivers/scsi/iscsi_tcp.c:2450:
+		if (ctask->datapool == NULL) {

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#2517: FILE: drivers/scsi/iscsi_tcp.c:2452:
+			iscsi_pool_free(&ctask->r2tpool, (void**)ctask->r2ts);

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#2530: FILE: drivers/scsi/iscsi_tcp.c:2465:
+				(void**)session->cmds[i]->r2ts);

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#2544: FILE: drivers/scsi/iscsi_tcp.c:2479:
+				(void**)session->cmds[i]->r2ts);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2551: FILE: drivers/scsi/iscsi_tcp.c:2486:
+        .queuecommand           = iscsi_queuecommand,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2551: FILE: drivers/scsi/iscsi_tcp.c:2486:
+        .queuecommand           = iscsi_queuecommand,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2555: FILE: drivers/scsi/iscsi_tcp.c:2490:
+        .eh_abort_handler       = iscsi_eh_abort,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2555: FILE: drivers/scsi/iscsi_tcp.c:2490:
+        .eh_abort_handler       = iscsi_eh_abort,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2556: FILE: drivers/scsi/iscsi_tcp.c:2491:
+        .use_clustering         = DISABLE_CLUSTERING,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2556: FILE: drivers/scsi/iscsi_tcp.c:2491:
+        .use_clustering         = DISABLE_CLUSTERING,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2563: FILE: drivers/scsi/iscsi_tcp.c:2498:
+iscsi_session_create(iscsi_snx_t handle, uint32_t initial_cmdsn,
+			struct Scsi_Host *host)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2584: FILE: drivers/scsi/iscsi_tcp.c:2519:
+	if (iscsi_pool_init(&session->cmdpool, session->cmds_max,
+		(void***)&session->cmds, sizeof(struct iscsi_cmd_task)))

ERROR:POINTER_LOCATION: "(foo***)" should be "(foo ***)"
#2584: FILE: drivers/scsi/iscsi_tcp.c:2519:
+		(void***)&session->cmds, sizeof(struct iscsi_cmd_task)))

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2588: FILE: drivers/scsi/iscsi_tcp.c:2523:
+	for (cmd_i = 0; cmd_i < session->cmds_max; cmd_i++) {
+		session->cmds[cmd_i]->itt = cmd_i;
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2598: FILE: drivers/scsi/iscsi_tcp.c:2533:
+	if (iscsi_pool_init(&session->immpool, session->imm_max,
+		(void***)&session->imm_cmds, sizeof(struct iscsi_mgmt_task)))

ERROR:POINTER_LOCATION: "(foo***)" should be "(foo ***)"
#2598: FILE: drivers/scsi/iscsi_tcp.c:2533:
+		(void***)&session->imm_cmds, sizeof(struct iscsi_mgmt_task)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2601: FILE: drivers/scsi/iscsi_tcp.c:2536:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2605: FILE: drivers/scsi/iscsi_tcp.c:2540:
+		session->imm_cmds[cmd_i]->data = kmalloc(

WARNING:LINE_SPACING: Missing a blank line after declarations
#2609: FILE: drivers/scsi/iscsi_tcp.c:2544:
+			int j;
+			for (j = 0; j < cmd_i; j++)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2619: FILE: drivers/scsi/iscsi_tcp.c:2554:
+		printk("iscsi_tcp: can not reserve module\n");

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#2630: FILE: drivers/scsi/iscsi_tcp.c:2565:
+	iscsi_pool_free(&session->immpool, (void**)session->imm_cmds);

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#2633: FILE: drivers/scsi/iscsi_tcp.c:2568:
+	iscsi_pool_free(&session->cmdpool, (void**)session->cmds);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2647: FILE: drivers/scsi/iscsi_tcp.c:2582:
+		struct iscsi_cmd_task *ctask = session->cmds[cmd_i];
+		list_for_each_entry_safe(dtask, n, &ctask->dataqueue, item) {

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#2657: FILE: drivers/scsi/iscsi_tcp.c:2592:
+	iscsi_pool_free(&session->immpool, (void**)session->imm_cmds);

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#2658: FILE: drivers/scsi/iscsi_tcp.c:2593:
+	iscsi_pool_free(&session->cmdpool, (void**)session->cmds);

ERROR:SPACING: space required before the open parenthesis '('
#2670: FILE: drivers/scsi/iscsi_tcp.c:2605:
+		switch(param) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2682: FILE: drivers/scsi/iscsi_tcp.c:2617:
+				conn->data = (void*)__get_free_pages(GFP_KERNEL,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!conn->data"
#2684: FILE: drivers/scsi/iscsi_tcp.c:2619:
+			if (conn->data == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2692: FILE: drivers/scsi/iscsi_tcp.c:2627:
+				free_pages((unsigned long)saveptr,
+					get_order(conn->max_recv_dlength));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2772: FILE: drivers/scsi/iscsi_tcp.c:2707:
+		printk("iscsi_tcp: can not change parameter [%d]\n", param);

ERROR:SPACING: space required before the open parenthesis '('
#2784: FILE: drivers/scsi/iscsi_tcp.c:2719:
+	switch(param) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2860: FILE: drivers/scsi/iscsi_tcp.c:2795:
+	taskcache = kmem_cache_create("iscsi_taskcache",
+			sizeof(struct iscsi_data_task), 0,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2885: FILE: drivers/scsi/iscsi_tcp.h:1:
+/*

WARNING:TYPO_SPELLING: 'recieve' may be misspelled - perhaps 'receive'?
#2983: FILE: drivers/scsi/iscsi_tcp.h:99:
+/* Socket connection recieve helper */
                      ^^^^^^^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3001: FILE: drivers/scsi/iscsi_tcp.h:117:
+	uint32_t		itt;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3006: FILE: drivers/scsi/iscsi_tcp.h:122:
+	char			hdrext[4*sizeof(__u16) +
 	    			        ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3012: FILE: drivers/scsi/iscsi_tcp.h:128:
+	uint32_t		exp_statsn;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3030: FILE: drivers/scsi/iscsi_tcp.h:146:
+	volatile int		c_stage;	/* Connection state */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3034: FILE: drivers/scsi/iscsi_tcp.h:150:
+	volatile int		suspend;	/* connection suspended */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3042: FILE: drivers/scsi/iscsi_tcp.h:158:
+	volatile int		tmabort_state;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3044: FILE: drivers/scsi/iscsi_tcp.h:160:
+	volatile int		stop_stage;	/* cnx_stop() state machine */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sock *' should also have an identifier name
#3054: FILE: drivers/scsi/iscsi_tcp.h:170:
+	void			(*old_data_ready)(struct sock *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#3054: FILE: drivers/scsi/iscsi_tcp.h:170:
+	void			(*old_data_ready)(struct sock *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sock *' should also have an identifier name
#3055: FILE: drivers/scsi/iscsi_tcp.h:171:
+	void			(*old_state_change)(struct sock *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sock *' should also have an identifier name
#3056: FILE: drivers/scsi/iscsi_tcp.h:172:
+	void			(*old_write_space)(struct sock *);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3061: FILE: drivers/scsi/iscsi_tcp.h:177:
+	uint32_t		cmdsn;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3062: FILE: drivers/scsi/iscsi_tcp.h:178:
+	uint32_t		exp_cmdsn;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3063: FILE: drivers/scsi/iscsi_tcp.h:179:
+	uint32_t		max_cmdsn;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#3084: FILE: drivers/scsi/iscsi_tcp.h:200:
+	spinlock_t		lock;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3085: FILE: drivers/scsi/iscsi_tcp.h:201:
+	volatile int		state;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3090: FILE: drivers/scsi/iscsi_tcp.h:206:
+	volatile int		generation;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3111: FILE: drivers/scsi/iscsi_tcp.h:227:
+};
+#define ISCSI_DTASK_DEFAULT_MAX	ISCSI_SG_TABLESIZE * PAGE_SIZE / 512

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3111: FILE: drivers/scsi/iscsi_tcp.h:227:
+#define ISCSI_DTASK_DEFAULT_MAX	ISCSI_SG_TABLESIZE * PAGE_SIZE / 512

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3117: FILE: drivers/scsi/iscsi_tcp.h:233:
+	volatile int	xmstate;		/* mgmt xmit progress */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3122: FILE: drivers/scsi/iscsi_tcp.h:238:
+	uint32_t	itt;			/* this ITT */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3126: FILE: drivers/scsi/iscsi_tcp.h:242:
+	uint32_t		ttt;		/* copied from R2T */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3127: FILE: drivers/scsi/iscsi_tcp.h:243:
+	uint32_t		exp_statsn;	/* copeid and incr. from R2T */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3140: FILE: drivers/scsi/iscsi_tcp.h:256:
+	char			hdrext[4*sizeof(__u16)+	/* one AHS */
 	    			        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#3140: FILE: drivers/scsi/iscsi_tcp.h:256:
+	char			hdrext[4*sizeof(__u16)+	/* one AHS */
 	    			                      ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3150: FILE: drivers/scsi/iscsi_tcp.h:266:
+	uint32_t		unsol_datasn;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3151: FILE: drivers/scsi/iscsi_tcp.h:267:
+	uint32_t		exp_r2tsn;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3152: FILE: drivers/scsi/iscsi_tcp.h:268:
+	volatile int		in_progress;		/* State machine */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3153: FILE: drivers/scsi/iscsi_tcp.h:269:
+	volatile int		xmstate;		/* Xmit State machine */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000190922.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 120 errors, 144 warnings, 104 checks, 3102 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000190922.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
