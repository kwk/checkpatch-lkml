WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#42: 
Signed-Off-By: Carl Love <carll@us.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#43: 
Signed-Off-By: Maynard Johnson <mpjohn@us.ibm.com>

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#65: FILE: arch/powerpc/oprofile/common.c:137:
 	switch (cur_cpu_spec->oprofile_type) {
[...]
+		case PPC_OPROFILE_CELL:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#100: FILE: arch/powerpc/oprofile/op_model_cell.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#122: FILE: arch/powerpc/oprofile/op_model_cell.c:23:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#123: FILE: arch/powerpc/oprofile/op_model_cell.c:24:
+#include <asm/io.h>

WARNING:TYPO_SPELLING: 'Interpetation' may be misspelled - perhaps 'Interpretation'?
#144: FILE: arch/powerpc/oprofile/op_model_cell.c:45:
+/* Interpetation of hdw_thread:
    ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#153: FILE: arch/powerpc/oprofile/op_model_cell.c:54:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#155: FILE: arch/powerpc/oprofile/op_model_cell.c:56:
+ * are using this structure in the RTAS calls */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#195: FILE: arch/powerpc/oprofile/op_model_cell.c:96:
+		printk(KERN_WARNING "%s: rtas returned: %d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#196: FILE: arch/powerpc/oprofile/op_model_cell.c:97:
+		       __FUNCTION__, ret);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#203: FILE: arch/powerpc/oprofile/op_model_cell.c:104:
+	if (passthru[node] == PASSTHRU_DISABLE) {
+		passthru[node] = PASSTHRU_ENABLE;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#214: FILE: arch/powerpc/oprofile/op_model_cell.c:115:
+		printk(KERN_WARNING "%s: rtas returned: %d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#215: FILE: arch/powerpc/oprofile/op_model_cell.c:116:
+		       __FUNCTION__, ret);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#232: FILE: arch/powerpc/oprofile/op_model_cell.c:133:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pm_signal[node][ctr]
#238: FILE: arch/powerpc/oprofile/op_model_cell.c:139:
+			p = &(pm_signal[node][ctr]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#246: FILE: arch/powerpc/oprofile/op_model_cell.c:147:
+		return;
+	} else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#250: FILE: arch/powerpc/oprofile/op_model_cell.c:151:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pm_signal[0][ctr]
#257: FILE: arch/powerpc/oprofile/op_model_cell.c:158:
+	p = &(pm_signal[0][ctr]);

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#265: FILE: arch/powerpc/oprofile/op_model_cell.c:166:
+		pm_signal[node][ctr].signal_group
+			= pm_signal[0][ctr].signal_group;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus_type == 0'
#286: FILE: arch/powerpc/oprofile/op_model_cell.c:187:
+		if ((bus_type == 0) && p->signal_group >= 60)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus_type == 1'
#288: FILE: arch/powerpc/oprofile/op_model_cell.c:189:
+		if ((bus_type == 1) && p->signal_group >= 50)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#317: FILE: arch/powerpc/oprofile/op_model_cell.c:218:
+	/* clear the structure of values for setting the
+	   pm_control register */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#317: FILE: arch/powerpc/oprofile/op_model_cell.c:218:
+	   pm_control register */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#343: FILE: arch/powerpc/oprofile/op_model_cell.c:244:
+	 *  the count mode based on the user selection of user and kernel */

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#347: FILE: arch/powerpc/oprofile/op_model_cell.c:248:
+
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#353: FILE: arch/powerpc/oprofile/op_model_cell.c:254:
+	 *  neither is specified, OProfile will count in hypervisor mode */

ERROR:SPACING: space required before the open parenthesis '('
#355: FILE: arch/powerpc/oprofile/op_model_cell.c:256:
+		if(user)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#360: FILE: arch/powerpc/oprofile/op_model_cell.c:261:
+		if(user)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#367: FILE: arch/powerpc/oprofile/op_model_cell.c:268:
+static inline void enable_ctr(u32 cpu, u32 ctr, u32 * pm07_cntrl)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#369: FILE: arch/powerpc/oprofile/op_model_cell.c:270:
+{
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#377: FILE: arch/powerpc/oprofile/op_model_cell.c:278:
+	int val = 0;
+	cbe_write_pm07_control(cpu, ctr, val);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#380: FILE: arch/powerpc/oprofile/op_model_cell.c:281:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#388: FILE: arch/powerpc/oprofile/op_model_cell.c:289:
+	 * virtual CPUs */

CHECK:CAMELCASE: Avoid CamelCase: <nEnabled>
#394: FILE: arch/powerpc/oprofile/op_model_cell.c:295:
+	int nEnabled = 0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please don't use multiple blank lines
#396: FILE: arch/powerpc/oprofile/op_model_cell.c:297:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: arch/powerpc/oprofile/op_model_cell.c:301:
+        /* cntr offset for the cntrs that were running */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: arch/powerpc/oprofile/op_model_cell.c:302:
+^Icntr_offset_prev = num_counters *  hdw_thread;^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: arch/powerpc/oprofile/op_model_cell.c:304:
+        /* switch the cpu handling the interrupts */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: arch/powerpc/oprofile/op_model_cell.c:310:
+        /* The following is done only once per each node, but$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#417: FILE: arch/powerpc/oprofile/op_model_cell.c:318:
+		 * for previous thread */

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#424: FILE: arch/powerpc/oprofile/op_model_cell.c:325:
+			pmc_values[cpu][i + cntr_offset_prev]
+				= cbe_read_ctr(cpu, i);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#426: FILE: arch/powerpc/oprofile/op_model_cell.c:327:
+				      pmc_values[cpu][i+cntr_offset_next]);
 				                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#436: FILE: arch/powerpc/oprofile/op_model_cell.c:337:
+			if (pmc_cntrl[ hdw_thread][i+cntr_offset_next].enabled) {
 			                            ^

ERROR:SPACING: space prohibited after that open square bracket '['
#436: FILE: arch/powerpc/oprofile/op_model_cell.c:337:
+			if (pmc_cntrl[ hdw_thread][i+cntr_offset_next].enabled) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#447: FILE: arch/powerpc/oprofile/op_model_cell.c:348:
+		 * is starting */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#451: FILE: arch/powerpc/oprofile/op_model_cell.c:352:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#452: FILE: arch/powerpc/oprofile/op_model_cell.c:353:
+		
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#464: FILE: arch/powerpc/oprofile/op_model_cell.c:365:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#477: FILE: arch/powerpc/oprofile/op_model_cell.c:378:
+
+

WARNING:MEMORY_BARRIER: memory barrier without comment
#487: FILE: arch/powerpc/oprofile/op_model_cell.c:388:
+	smp_mb();

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#490: FILE: arch/powerpc/oprofile/op_model_cell.c:391:
+		printk("ERROR, ibm,cbe-perftools RTAS_UNKNOWN_SERVICE\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#494: FILE: arch/powerpc/oprofile/op_model_cell.c:395:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#515: FILE: arch/powerpc/oprofile/op_model_cell.c:416:
+	for (i = 0; i < num_ctrs; ++i) {
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#521: FILE: arch/powerpc/oprofile/op_model_cell.c:422:
+		for (j = 0; j < NR_CPUS; j++) {
+			pmc_values[j][i] = 0;
+		}

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#521: FILE: arch/powerpc/oprofile/op_model_cell.c:422:
+		for (j = 0; j < NR_CPUS; j++) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#530: FILE: arch/powerpc/oprofile/op_model_cell.c:431:
+	for (i = 0; i < num_ctrs; ++i) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ctr[i].event >= 2100'
#531: FILE: arch/powerpc/oprofile/op_model_cell.c:432:
+		if ((ctr[i].event >= 2100) && (ctr[i].event <= 2111))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ctr[i].event <= 2111'
#531: FILE: arch/powerpc/oprofile/op_model_cell.c:432:
+		if ((ctr[i].event >= 2100) && (ctr[i].event <= 2111))

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#574: FILE: arch/powerpc/oprofile/op_model_cell.c:475:
+
+}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#591: FILE: arch/powerpc/oprofile/op_model_cell.c:492:
+		printk("ERROR, RTAS_UNKNOWN_SERVICE\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#618: FILE: arch/powerpc/oprofile/op_model_cell.c:519:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#625: FILE: arch/powerpc/oprofile/op_model_cell.c:526:
+^I/* There is one performance monitor per node, so we $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#648: FILE: arch/powerpc/oprofile/op_model_cell.c:549:
+
+

WARNING:MEMORY_BARRIER: memory barrier without comment
#652: FILE: arch/powerpc/oprofile/op_model_cell.c:553:
+	smp_mb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#663: FILE: arch/powerpc/oprofile/op_model_cell.c:564:
+^I/* There is one performance monitor per node, so we $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#666: FILE: arch/powerpc/oprofile/op_model_cell.c:567:
+	if (is_smt() && (cpu & 1)) {
+		return;
+	}

WARNING:MEMORY_BARRIER: memory barrier without comment
#671: FILE: arch/powerpc/oprofile/op_model_cell.c:572:
+	smp_mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#683: FILE: arch/powerpc/oprofile/op_model_cell.c:584:
+	smp_mb();

WARNING:TYPO_SPELLING: 'Reenable' may be misspelled - perhaps 'Re-enable'?
#715: FILE: arch/powerpc/oprofile/op_model_cell.c:616:
+	 * Reenable the interrupt and restart the counters.
 	   ^^^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000019498.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 29 warnings, 29 checks, 685 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000019498.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
