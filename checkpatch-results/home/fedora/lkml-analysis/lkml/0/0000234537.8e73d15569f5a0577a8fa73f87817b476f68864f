WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#189: FILE: arch/i386/kernel/irq.c:95:
+			"       movl   %%ebx,%%esp      \n"

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#209: FILE: arch/i386/kernel/traps.c:407:
+fastcall void do_##name(struct pt_regs * regs, long error_code) \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#218: FILE: arch/i386/kernel/traps.c:416:
+fastcall void do_##name(struct pt_regs * regs, long error_code) \

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#227: FILE: arch/i386/kernel/traps.c:430:
+fastcall void do_##name(struct pt_regs * regs, long error_code) \

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#236: FILE: arch/i386/kernel/traps.c:439:
+fastcall void do_##name(struct pt_regs * regs, long error_code) \

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#245: FILE: arch/i386/kernel/traps.c:465:
+fastcall void do_general_protection(struct pt_regs * regs, long error_code)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#254: FILE: arch/i386/kernel/traps.c:625:
+fastcall void do_nmi(struct pt_regs * regs, long error_code)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#272: FILE: arch/i386/kernel/traps.c:686:
+fastcall void do_debug(struct pt_regs * regs, long error_code)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#281: FILE: arch/i386/kernel/traps.c:825:
+fastcall void do_coprocessor_error(struct pt_regs * regs, long error_code)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#290: FILE: arch/i386/kernel/traps.c:879:
+fastcall void do_simd_coprocessor_error(struct pt_regs * regs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#291: FILE: arch/i386/kernel/traps.c:880:
+fastcall void do_simd_coprocessor_error(struct pt_regs * regs,
 					  long error_code)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#299: FILE: arch/i386/kernel/traps.c:903:
+fastcall void do_spurious_interrupt_bug(struct pt_regs * regs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: arch/i386/kernel/traps.c:904:
+fastcall void do_spurious_interrupt_bug(struct pt_regs * regs,
 					  long error_code)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#327: FILE: arch/i386/mm/fault.c:204:
+fastcall void do_invalid_op(struct pt_regs *, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#327: FILE: arch/i386/mm/fault.c:204:
+fastcall void do_invalid_op(struct pt_regs *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#327: FILE: arch/i386/mm/fault.c:204:
+fastcall void do_invalid_op(struct pt_regs *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#363: FILE: include/asm-i386/hw_irq.h:44:
+fastcall void thermal_interrupt(struct pt_regs *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#375: FILE: include/linux/irq.h:82:
+extern fastcall int handle_IRQ_event(unsigned int irq, struct pt_regs *regs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: include/linux/irq.h:83:
+extern fastcall int handle_IRQ_event(unsigned int irq, struct pt_regs *regs,
 				       struct irqaction *action);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#378: FILE: include/linux/irq.h:84:
+extern fastcall unsigned int __do_IRQ(unsigned int irq, struct pt_regs *regs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: kernel/irq/handle.c:90:
+fastcall int handle_IRQ_event(unsigned int irq, struct pt_regs *regs,
 				struct irqaction *action)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234537.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 5 warnings, 6 checks, 321 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234537.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
