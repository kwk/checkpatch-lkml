WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
> > which stops the via-rhine. a small two-line patch will solve the problem.

WARNING:REPEATED_WORD: Possible repeated word: 'hack'
#58: FILE: via-rhine.c:486:
+     // XXX hack hack hack

WARNING:REPEATED_WORD: Possible repeated word: 'hack'
#58: FILE: via-rhine.c:486:
+     // XXX hack hack hack

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: via-rhine.c:487:
+     int intr_cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: via-rhine.c:1308:
+     struct netdev_private *np=dev->priv;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#68: FILE: via-rhine.c:1308:
+     struct netdev_private *np=dev->priv;
                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: via-rhine.c:1314:
+     np->intr_cmd=readw(ioaddr+ChipCmd); // needed later in via_rhine_tx$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#74: FILE: via-rhine.c:1314:
+     np->intr_cmd=readw(ioaddr+ChipCmd); // needed later in via_rhine_tx
                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#74: FILE: via-rhine.c:1314:
+     np->intr_cmd=readw(ioaddr+ChipCmd); // needed later in via_rhine_tx
                               ^

CHECK:CAMELCASE: Avoid CamelCase: <ChipCmd>
#74: FILE: via-rhine.c:1314:
+     np->intr_cmd=readw(ioaddr+ChipCmd); // needed later in via_rhine_tx

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: via-rhine.c:1366:
+             if (txstatus & DescOwn) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: via-rhine.c:1366:
+             if (txstatus & DescOwn) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (13, 21)
#83: FILE: via-rhine.c:1366:
+             if (txstatus & DescOwn) {
+                     if ((np->intr_cmd&0x0010)==0) // Gack! DMA is off

CHECK:CAMELCASE: Avoid CamelCase: <DescOwn>
#83: FILE: via-rhine.c:1366:
+             if (txstatus & DescOwn) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: via-rhine.c:1367:
+                     if ((np->intr_cmd&0x0010)==0) // Gack! DMA is off$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: via-rhine.c:1367:
+                     if ((np->intr_cmd&0x0010)==0) // Gack! DMA is off$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (21, 29)
#84: FILE: via-rhine.c:1367:
+                     if ((np->intr_cmd&0x0010)==0) // Gack! DMA is off
+                             writel(np->tx_ring_dma + entry * sizeof(struct tx_desc),

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#84: FILE: via-rhine.c:1367:
+                     if ((np->intr_cmd&0x0010)==0) // Gack! DMA is off
                                       ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#84: FILE: via-rhine.c:1367:
+                     if ((np->intr_cmd&0x0010)==0) // Gack! DMA is off
                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: via-rhine.c:1368:
+                             writel(np->tx_ring_dma + entry * sizeof(struct tx_desc),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: via-rhine.c:1368:
+                             writel(np->tx_ring_dma + entry * sizeof(struct tx_desc),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: via-rhine.c:1369:
+                                     dev->base_addr+TxRingPtr);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: via-rhine.c:1369:
+                             writel(np->tx_ring_dma + entry * sizeof(struct tx_desc),
+                                     dev->base_addr+TxRingPtr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: via-rhine.c:1369:
+                                     dev->base_addr+TxRingPtr);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#86: FILE: via-rhine.c:1369:
+                                     dev->base_addr+TxRingPtr);
                                                    ^

CHECK:CAMELCASE: Avoid CamelCase: <TxRingPtr>
#86: FILE: via-rhine.c:1369:
+                                     dev->base_addr+TxRingPtr);

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: via-rhine.c:1371:
+             }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: via-rhine.c:1371:
+             }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000418306.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 13 warnings, 7 checks, 47 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000418306.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
