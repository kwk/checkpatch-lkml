WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#43: FILE: fs/9p/v9fs.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#60: FILE: fs/9p/v9fs.h:18:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#61: FILE: fs/9p/v9fs.h:19:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#66: FILE: fs/9p/v9fs.h:24:
+/*
+  * Session structure provides information for an opened session

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#103: FILE: fs/9p/v9fs.h:61:
+	spinlock_t muxlock;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct v9fs_session_info *' should also have an identifier name
#107: FILE: fs/9p/v9fs.h:65:
+int v9fs_session_init(struct v9fs_session_info *, const char *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#107: FILE: fs/9p/v9fs.h:65:
+int v9fs_session_init(struct v9fs_session_info *, const char *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#107: FILE: fs/9p/v9fs.h:65:
+int v9fs_session_init(struct v9fs_session_info *, const char *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#108: FILE: fs/9p/v9fs.h:66:
+struct v9fs_session_info *v9fs_inode2v9ses(struct inode *);

WARNING:TYPO_SPELLING: 'inital' may be misspelled - perhaps 'initial'?
#122: FILE: fs/9p/v9fs.h:80:
+/* inital pool sizes for fids and tags */
    ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required before the open parenthesis '('
#126: FILE: fs/9p/v9fs.h:84:
+#define safe_cache_free(x, y) { if(y) kmem_cache_free(x, y); }

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'y' - possible side-effects?
#126: FILE: fs/9p/v9fs.h:84:
+#define safe_cache_free(x, y) { if(y) kmem_cache_free(x, y); }

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#132: FILE: fs/9p/v9fs.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#133: FILE: fs/9p/v9fs.c:2:
+ *  linux/fs/9p/v9fs.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#151: FILE: fs/9p/v9fs.c:20:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#152: FILE: fs/9p/v9fs.c:21:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#172: FILE: fs/9p/v9fs.c:41:
+int v9fs_debug_level = 0;	/* feature-rific global debug level  */

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#175: FILE: fs/9p/v9fs.c:44:
+/*
+  * Option Parsing (code inspired by NFS code)

CHECK:CAMELCASE: Avoid CamelCase: <Opt_port>
#186: FILE: fs/9p/v9fs.c:55:
+	Opt_port, Opt_msize, Opt_uid, Opt_gid, Opt_afid, Opt_debug,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Opt_msize>
#186: FILE: fs/9p/v9fs.c:55:
+	Opt_port, Opt_msize, Opt_uid, Opt_gid, Opt_afid, Opt_debug,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_uid>
#186: FILE: fs/9p/v9fs.c:55:
+	Opt_port, Opt_msize, Opt_uid, Opt_gid, Opt_afid, Opt_debug,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_gid>
#186: FILE: fs/9p/v9fs.c:55:
+	Opt_port, Opt_msize, Opt_uid, Opt_gid, Opt_afid, Opt_debug,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_afid>
#186: FILE: fs/9p/v9fs.c:55:
+	Opt_port, Opt_msize, Opt_uid, Opt_gid, Opt_afid, Opt_debug,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_debug>
#186: FILE: fs/9p/v9fs.c:55:
+	Opt_port, Opt_msize, Opt_uid, Opt_gid, Opt_afid, Opt_debug,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_name>
#188: FILE: fs/9p/v9fs.c:57:
+	Opt_name, Opt_remotename,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_remotename>
#188: FILE: fs/9p/v9fs.c:57:
+	Opt_name, Opt_remotename,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_legacy>
#190: FILE: fs/9p/v9fs.c:59:
+	Opt_legacy, Opt_nodevmap, Opt_unix, Opt_tcp,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_nodevmap>
#190: FILE: fs/9p/v9fs.c:59:
+	Opt_legacy, Opt_nodevmap, Opt_unix, Opt_tcp,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_unix>
#190: FILE: fs/9p/v9fs.c:59:
+	Opt_legacy, Opt_nodevmap, Opt_unix, Opt_tcp,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_tcp>
#190: FILE: fs/9p/v9fs.c:59:
+	Opt_legacy, Opt_nodevmap, Opt_unix, Opt_tcp,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_err>
#192: FILE: fs/9p/v9fs.c:61:
+	Opt_err

WARNING:LINE_SPACING: Missing a blank line after declarations
#244: FILE: fs/9p/v9fs.c:113:
+		int token;
+		if (!*p)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#248: FILE: fs/9p/v9fs.c:117:
+			if ((ret = match_int(&args[0], &option)) < 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#254: FILE: fs/9p/v9fs.c:123:
+
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#281: FILE: fs/9p/v9fs.c:150:
+			match_strcpy(v9ses->name,&args[0]);
 			                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#281: FILE: fs/9p/v9fs.c:150:
+			match_strcpy(v9ses->name,&args[0]);
 			                         ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#284: FILE: fs/9p/v9fs.c:153:
+			match_strcpy(v9ses->remotename,&args[0]);
 			                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#284: FILE: fs/9p/v9fs.c:153:
+			match_strcpy(v9ses->remotename,&args[0]);
 			                               ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#324: FILE: fs/9p/v9fs.c:193:
+			if (inode->i_sb->s_fs_info)
[...]
+			else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#326: FILE: fs/9p/v9fs.c:195:
+				return (inode->i_sb->s_fs_info);
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#326: FILE: fs/9p/v9fs.c:195:
+			else {

ERROR:SPACING: space required before the open parenthesis '('
#358: FILE: fs/9p/v9fs.c:227:
+	if(!v9ses->name)

ERROR:SPACING: space required before the open parenthesis '('
#362: FILE: fs/9p/v9fs.c:231:
+	if(!v9ses->remotename) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#388: FILE: fs/9p/v9fs.c:257:
+		printk(KERN_ERR "v9fs: Bad mount protocol %d\n", v9ses->proto);

CHECK:CAMELCASE: Avoid CamelCase: <SessCleanUp>
#390: FILE: fs/9p/v9fs.c:259:
+		goto SessCleanUp;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*v9ses->transport)...) over kmalloc(sizeof(struct v9fs_transport)...)
#393: FILE: fs/9p/v9fs.c:262:
+	v9ses->transport = kmalloc(sizeof(struct v9fs_transport), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#403: FILE: fs/9p/v9fs.c:272:
+	if ((retval = v9ses->transport->init(v9ses, dev_name, data)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#412: FILE: fs/9p/v9fs.c:281:
+	if ((retval = v9fs_mux_init(v9ses, dev_name)) < 0) {

CHECK:CAMELCASE: Avoid CamelCase: <FreeFcall>
#428: FILE: fs/9p/v9fs.c:297:
+			goto FreeFcall;

ERROR:SPACING: space prohibited after that open parenthesis '('
#441: FILE: fs/9p/v9fs.c:310:
+		kfree( fcall);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#443: FILE: fs/9p/v9fs.c:312:
+^I^Iif (n < v9ses->maxdata) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#464: FILE: fs/9p/v9fs.c:333:
+	if ((retval =

WARNING:INDENTED_LABEL: labels should not be indented
#479: FILE: fs/9p/v9fs.c:348:
+      FreeFcall:

ERROR:SPACING: space prohibited after that open parenthesis '('
#480: FILE: fs/9p/v9fs.c:349:
+	kfree( fcall);

WARNING:INDENTED_LABEL: labels should not be indented
#482: FILE: fs/9p/v9fs.c:351:
+      SessCleanUp:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#523: FILE: fs/9p/v9fs.c:392:
+	printk(KERN_INFO "Installing v9fs 9P2000 file system support\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#549: FILE: fs/9p/v9fs_vfs.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#566: FILE: fs/9p/v9fs_vfs.h:18:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#567: FILE: fs/9p/v9fs_vfs.h:19:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#573: FILE: fs/9p/v9fs_vfs.h:25:
+ * the plan9 approach is superior as it provides an atomic $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#574: FILE: fs/9p/v9fs_vfs.h:26:
+ * open. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#576: FILE: fs/9p/v9fs_vfs.h:28:
+ * non-zero, we use the fid and can skip some steps. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#577: FILE: fs/9p/v9fs_vfs.h:29:
+ * there may be a better way to do this, but I don't know it. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#582: FILE: fs/9p/v9fs_vfs.h:34:
+/* special case: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: fs/9p/v9fs_vfs.h:36:
+ * that kind of thing so that we don't try to clunk a dead fid. $

WARNING:CONST_STRUCT: struct file_operations should normally be const
#588: FILE: fs/9p/v9fs_vfs.h:40:
+extern struct file_operations v9fs_file_operations;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#589: FILE: fs/9p/v9fs_vfs.h:41:
+extern struct file_operations v9fs_dir_operations;

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#590: FILE: fs/9p/v9fs_vfs.h:42:
+extern struct dentry_operations v9fs_dentry_operations;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct v9fs_stat *' should also have an identifier name
#594: FILE: fs/9p/v9fs_vfs.h:46:
+void v9fs_mistat2inode(struct v9fs_stat *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#594: FILE: fs/9p/v9fs_vfs.h:46:
+void v9fs_mistat2inode(struct v9fs_stat *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#594: FILE: fs/9p/v9fs_vfs.h:46:
+void v9fs_mistat2inode(struct v9fs_stat *, struct inode *,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#596: FILE: fs/9p/v9fs_vfs.h:48:
+int v9fs_dir_release(struct inode *inode, struct file *filp);
                                                        ^^^^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#599: FILE: fs/9p/v9fs_vfs.h:51:
+void v9fs_dentry_release(struct dentry *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#605: FILE: fs/9p/vfs_super.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#606: FILE: fs/9p/vfs_super.c:2:
+ *  linux/fs/9p/vfs_super.c

WARNING:TYPO_SPELLING: 'contians' may be misspelled - perhaps 'contains'?
#608: FILE: fs/9p/vfs_super.c:4:
+ * This file contians superblock ops for 9P2000. It is intended that 
              ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#608: FILE: fs/9p/vfs_super.c:4:
+ * This file contians superblock ops for 9P2000. It is intended that $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#625: FILE: fs/9p/vfs_super.c:21:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#626: FILE: fs/9p/vfs_super.c:22:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#667: FILE: fs/9p/vfs_super.c:63:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#680: FILE: fs/9p/vfs_super.c:76:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#684: FILE: fs/9p/vfs_super.c:80:
+ * $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#694: FILE: fs/9p/vfs_super.c:90:
+		for (nrbits = 31; nrbits && !(bsize & (1 << nrbits));
+		     nrbits--) ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPACING: space prohibited before semicolon
#695: FILE: fs/9p/vfs_super.c:91:
+		     nrbits--) ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#708: FILE: fs/9p/vfs_super.c:104:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#711: FILE: fs/9p/vfs_super.c:107:
+static void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#720: FILE: fs/9p/vfs_super.c:116:
+^Isb->s_flags = flags | MS_ACTIVE | MS_SYNCHRONOUS | MS_DIRSYNC | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#730: FILE: fs/9p/vfs_super.c:126:
+ * $

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#743: FILE: fs/9p/vfs_super.c:139:
+	int mode = S_IRWXUGO | S_ISVTX;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#750: FILE: fs/9p/vfs_super.c:146:
+	dprintk(DEBUG_VFS, " \n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#756: FILE: fs/9p/vfs_super.c:152:
+	if ((newfid = v9fs_session_init(v9ses, dev_name, data)) < 0) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#764: FILE: fs/9p/vfs_super.c:160:
+	v9fs_fill_super( sb, v9ses, flags );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#764: FILE: fs/9p/vfs_super.c:160:
+	v9fs_fill_super( sb, v9ses, flags );

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!root_fid"
#786: FILE: fs/9p/vfs_super.c:182:
+	if (root_fid == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space prohibited after that open parenthesis '('
#806: FILE: fs/9p/vfs_super.c:202:
+	kfree( fcall);

WARNING:INDENTED_LABEL: labels should not be indented
#815: FILE: fs/9p/vfs_super.c:211:
+      release_inode:

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#816: FILE: fs/9p/vfs_super.c:212:
+	iput(inode);
 	^^^^

WARNING:INDENTED_LABEL: labels should not be indented
#818: FILE: fs/9p/vfs_super.c:214:
+      put_back_sb:

WARNING:INDENTED_LABEL: labels should not be indented
#824: FILE: fs/9p/vfs_super.c:220:
+      free_session:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#833: FILE: fs/9p/vfs_super.c:229:
+ * $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000178967.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 43 errors, 35 warnings, 22 checks, 804 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000178967.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
