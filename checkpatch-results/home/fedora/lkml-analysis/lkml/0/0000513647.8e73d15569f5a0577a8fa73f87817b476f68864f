WARNING:TYPO_SPELLING: 'Defered' may be misspelled - perhaps 'Deferred'?
#38: 
	o [FEATURE] Defered timeout handling. It's just safer.
	            ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
diff -u -p linux/include/net/irda/irda-usb.d8.h linux/include/net/irda/irda-usb.h

WARNING:TYPO_SPELLING: 'harware' may be misspelled - perhaps 'hardware'?
#81: FILE: include/net/irda/irda-usb.h:40:
+ * This is the amount of buffers the we keep between the USB harware and the
                                                              ^^^^^^^

WARNING:TYPO_SPELLING: 'penalities' may be misspelled - perhaps 'penalties'?
#95: FILE: include/net/irda/irda-usb.h:54:
+ * On the other hand, increasing the number of URB will have penalities
                                                              ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#97: FILE: include/net/irda/irda-usb.h:56:
+ * Jean II */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#103: FILE: include/net/irda/irda-usb.h:62:
+ * Jean II */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#109: FILE: include/net/irda/irda-usb.h:68:
+ * ourselves... See also following option. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#112: FILE: include/net/irda/irda-usb.h:71:
+ * Work only with usb-uhci.o so far. Please fix uhic.c and usb-ohci.c */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: include/net/irda/irda-usb.h:76:
+#undef IU_DUMP_CLASS_DESC $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'uglyness' may be misspelled - perhaps 'ugliness'?
#264: FILE: drivers/net/irda/irda-usb.c:92:
+ * Handle speed change, timeout and lot's of uglyness...
                                              ^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#295: FILE: drivers/net/irda/irda-usb.c:97:
+/*
+ * Function irda_usb_build_header(self, skb, header)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!force'
#319: FILE: drivers/net/irda/irda-usb.c:121:
+		if ((self->capability & IUC_SPEED_BUG) &&
+		    (!force) && (self->speed != -1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#322: FILE: drivers/net/irda/irda-usb.c:124:
+			 * (we'll do it later in the write callback) */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#323: FILE: drivers/net/irda/irda-usb.c:125:
+			IRDA_DEBUG(2, __FUNCTION__ "(), not changing speed yet\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#334: FILE: drivers/net/irda/irda-usb.c:130:
+		IRDA_DEBUG(2, __FUNCTION__ "(), changing speed to %d\n", self->new_speed);

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: drivers/net/irda/irda-usb.c:136:
+^I^I        *header = SPEED_2400;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: drivers/net/irda/irda-usb.c:149:
+^I^I        *header = SPEED_57600;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: drivers/net/irda/irda-usb.c:152:
+^I^I        *header = SPEED_115200;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: drivers/net/irda/irda-usb.c:155:
+^I^I        *header = SPEED_576000;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: drivers/net/irda/irda-usb.c:158:
+^I^I        *header = SPEED_1152000;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: drivers/net/irda/irda-usb.c:161:
+^I^I        *header = SPEED_4000000;$

CHECK:BRACES: Unbalanced braces around else statement
#385: FILE: drivers/net/irda/irda-usb.c:165:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#396: FILE: drivers/net/irda/irda-usb.c:171:
+		IRDA_DEBUG(2, __FUNCTION__ "(), changing xbofs to %d\n", self->new_xbofs);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#508: FILE: drivers/net/irda/irda-usb.c:218:
+	IRDA_DEBUG(2, __FUNCTION__ "(), speed=%d, xbofs=%d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#514: FILE: drivers/net/irda/irda-usb.c:224:
+		WARNING(__FUNCTION__ "(), URB still in use!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#538: FILE: drivers/net/irda/irda-usb.c:237:
+        FILL_BULK_URB(purb, self->usbdev,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: drivers/net/irda/irda-usb.c:237:
+        FILL_BULK_URB(purb, self->usbdev,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#540: FILE: drivers/net/irda/irda-usb.c:239:
+                      frame, IRDA_USB_SPEED_MTU,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: drivers/net/irda/irda-usb.c:239:
+                      frame, IRDA_USB_SPEED_MTU,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#541: FILE: drivers/net/irda/irda-usb.c:240:
+                      speed_bulk_callback, self);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: drivers/net/irda/irda-usb.c:240:
+                      speed_bulk_callback, self);$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#546: FILE: drivers/net/irda/irda-usb.c:245:
+	if ((ret = usb_submit_urb(purb))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#546: FILE: drivers/net/irda/irda-usb.c:245:
+	if ((ret = usb_submit_urb(purb))) {
+		IRDA_DEBUG(0, __FUNCTION__ "(), failed Speed URB\n");
 	}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#547: FILE: drivers/net/irda/irda-usb.c:246:
+		IRDA_DEBUG(0, __FUNCTION__ "(), failed Speed URB\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#613: FILE: drivers/net/irda/irda-usb.c:268:
+		WARNING(__FUNCTION__ "(), Empty URB still in use!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#624: FILE: drivers/net/irda/irda-usb.c:273:
+        FILL_BULK_URB(purb, self->usbdev,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: drivers/net/irda/irda-usb.c:273:
+        FILL_BULK_URB(purb, self->usbdev,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#626: FILE: drivers/net/irda/irda-usb.c:275:
+                      self->speed_buff, IRDA_USB_SPEED_MTU,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: drivers/net/irda/irda-usb.c:275:
+                      self->speed_buff, IRDA_USB_SPEED_MTU,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#627: FILE: drivers/net/irda/irda-usb.c:276:
+                      speed_bulk_callback, self);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: drivers/net/irda/irda-usb.c:276:
+                      speed_bulk_callback, self);$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#638: FILE: drivers/net/irda/irda-usb.c:281:
+	if ((ret = usb_submit_urb(purb))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#638: FILE: drivers/net/irda/irda-usb.c:281:
+	if ((ret = usb_submit_urb(purb))) {
+		IRDA_DEBUG(0, __FUNCTION__ "(), failed Empty URB\n");
+	}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#639: FILE: drivers/net/irda/irda-usb.c:282:
+		IRDA_DEBUG(0, __FUNCTION__ "(), failed Empty URB\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#647: FILE: drivers/net/irda/irda-usb.c:289:
+/*
+ * Note : this function will be called with both speed_urb and empty_urb...

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#664: FILE: drivers/net/irda/irda-usb.c:295:
+	IRDA_DEBUG(2, __FUNCTION__ "()\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self"
#668: FILE: drivers/net/irda/irda-usb.c:298:
+	if (self == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#669: FILE: drivers/net/irda/irda-usb.c:299:
+		IRDA_DEBUG(0, __FUNCTION__ "(), Bug : self == NULL\n");

ERROR:SPACING: space required before the open parenthesis '('
#685: FILE: drivers/net/irda/irda-usb.c:304:
+	if(purb->status != USB_ST_NOERROR) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#687: FILE: drivers/net/irda/irda-usb.c:306:
+		WARNING(__FUNCTION__ "(), URB complete status %d, transfer_flags 0x%04X\n", purb->status, purb->transfer_flags);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#687: FILE: drivers/net/irda/irda-usb.c:306:
+		WARNING(__FUNCTION__ "(), URB complete status %d, transfer_flags 0x%04X\n", purb->status, purb->transfer_flags);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#692: FILE: drivers/net/irda/irda-usb.c:311:
+		 * Jean II */

ERROR:SPACING: space required before the open parenthesis '('
#718: FILE: drivers/net/irda/irda-usb.c:320:
+	if(purb == &self->speed_urb) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#718: FILE: drivers/net/irda/irda-usb.c:320:
+	if(purb == &self->speed_urb) {
+		netif_wake_queue(self->netdev);
+	}

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#726: FILE: drivers/net/irda/irda-usb.c:327:
+/*
+ * Send an IrDA frame to the USB dongle (for transmission)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!self'
#741: FILE: drivers/net/irda/irda-usb.c:339:
+	if ((!self) || (!self->present)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!self->present'
#741: FILE: drivers/net/irda/irda-usb.c:339:
+	if ((!self) || (!self->present)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#742: FILE: drivers/net/irda/irda-usb.c:340:
+		IRDA_DEBUG(0, __FUNCTION__ "(), Device is gone...\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#753: FILE: drivers/net/irda/irda-usb.c:347:
+        xbofs = irda_get_next_xbofs(skb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#753: FILE: drivers/net/irda/irda-usb.c:347:
+        xbofs = irda_get_next_xbofs(skb);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#754: FILE: drivers/net/irda/irda-usb.c:348:
+        if ((xbofs != self->xbofs) && (xbofs != -1)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#754: FILE: drivers/net/irda/irda-usb.c:348:
+        if ((xbofs != self->xbofs) && (xbofs != -1)) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'xbofs != self->xbofs'
#754: FILE: drivers/net/irda/irda-usb.c:348:
+        if ((xbofs != self->xbofs) && (xbofs != -1)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#754: FILE: drivers/net/irda/irda-usb.c:348:
+        if ((xbofs != self->xbofs) && (xbofs != -1)) {
+		self->new_xbofs = xbofs;
+	}

ERROR:CODE_INDENT: code indent should use tabs where possible
#762: FILE: drivers/net/irda/irda-usb.c:352:
+        /* Check if we need to change the speed */$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'speed != self->speed'
#764: FILE: drivers/net/irda/irda-usb.c:354:
+	if ((speed != self->speed) && (speed != -1)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#776: FILE: drivers/net/irda/irda-usb.c:366:
+			 * Jean II */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#797: FILE: drivers/net/irda/irda-usb.c:376:
+		WARNING(__FUNCTION__ "(), URB still in use!\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#835: FILE: drivers/net/irda/irda-usb.c:395:
+        FILL_BULK_URB(purb, self->usbdev, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#835: FILE: drivers/net/irda/irda-usb.c:395:
+        FILL_BULK_URB(purb, self->usbdev, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#835: FILE: drivers/net/irda/irda-usb.c:395:
+        FILL_BULK_URB(purb, self->usbdev, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#837: FILE: drivers/net/irda/irda-usb.c:397:
+                      skb->data, IRDA_USB_MAX_MTU,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#837: FILE: drivers/net/irda/irda-usb.c:397:
+                      skb->data, IRDA_USB_MAX_MTU,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#838: FILE: drivers/net/irda/irda-usb.c:398:
+                      write_bulk_callback, skb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#838: FILE: drivers/net/irda/irda-usb.c:398:
+                      write_bulk_callback, skb);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#845: FILE: drivers/net/irda/irda-usb.c:405:
+	 * This flag was previously called USB_DISABLE_SPD - Jean II */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#849: FILE: drivers/net/irda/irda-usb.c:409:
+^I$

WARNING:TYPO_SPELLING: 'chater' may be misspelled - perhaps 'chapter'?
#860: FILE: drivers/net/irda/irda-usb.c:420:
+	 * by itself (spec 1.0, chater 4, page 6). Who knows ??? That's
 	                        ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#863: FILE: drivers/net/irda/irda-usb.c:423:
+	 * Jean II */

WARNING:LINE_SPACING: Missing a blank line after declarations
#868: FILE: drivers/net/irda/irda-usb.c:428:
+			int diff;
+			get_fast_time(&self->now);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#873: FILE: drivers/net/irda/irda-usb.c:433:
+^I^I        /* Check if the mtt is larger than the time we have$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#879: FILE: drivers/net/irda/irda-usb.c:439:
+					mdelay(mtt/1000);
 					          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#886: FILE: drivers/net/irda/irda-usb.c:445:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#887: FILE: drivers/net/irda/irda-usb.c:446:
+	if ((res = usb_submit_urb(purb))) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#888: FILE: drivers/net/irda/irda-usb.c:447:
+		IRDA_DEBUG(0, __FUNCTION__ "(), failed Tx URB\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#895: FILE: drivers/net/irda/irda-usb.c:454:
+                self->stats.tx_bytes += skb->len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#895: FILE: drivers/net/irda/irda-usb.c:454:
+                self->stats.tx_bytes += skb->len;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#896: FILE: drivers/net/irda/irda-usb.c:455:
+^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#911: FILE: drivers/net/irda/irda-usb.c:470:
+		 * Jean II */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#913: FILE: drivers/net/irda/irda-usb.c:472:
+			IRDA_DEBUG(2, __FUNCTION__ "(), Kick Tx...\n");

CHECK:SPACING: No space is necessary after a cast
#957: FILE: drivers/net/irda/irda-usb.c:489:
+	struct irda_usb_cb *self = ((struct irda_skb_cb *) skb->cb)->context;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#958: FILE: drivers/net/irda/irda-usb.c:490:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#959: FILE: drivers/net/irda/irda-usb.c:491:
+	IRDA_DEBUG(2, __FUNCTION__ "()\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self"
#965: FILE: drivers/net/irda/irda-usb.c:494:
+	if (self == NULL) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#966: FILE: drivers/net/irda/irda-usb.c:495:
+		IRDA_DEBUG(0, __FUNCTION__ "(), Bug : self == NULL\n");

ERROR:SPACING: space required before the open parenthesis '('
#1044: FILE: drivers/net/irda/irda-usb.c:504:
+	if(purb->status != USB_ST_NOERROR) {

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#1046: FILE: drivers/net/irda/irda-usb.c:506:
+		WARNING(__FUNCTION__ "(), URB complete status %d, transfer_flags 0x%04X\n", purb->status, purb->transfer_flags);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1046: FILE: drivers/net/irda/irda-usb.c:506:
+		WARNING(__FUNCTION__ "(), URB complete status %d, transfer_flags 0x%04X\n", purb->status, purb->transfer_flags);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1052: FILE: drivers/net/irda/irda-usb.c:512:
+		 * Jean II */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!self->netopen'
#1074: FILE: drivers/net/irda/irda-usb.c:521:
+	if ((!self->netopen) || (!self->present)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!self->present'
#1074: FILE: drivers/net/irda/irda-usb.c:521:
+	if ((!self->netopen) || (!self->present)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1075: FILE: drivers/net/irda/irda-usb.c:522:
+		IRDA_DEBUG(0, __FUNCTION__ "(), Network is gone...\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1102: FILE: drivers/net/irda/irda-usb.c:528:
+		IRDA_DEBUG(0, __FUNCTION__ "(), Changing speed now...\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1114: FILE: drivers/net/irda/irda-usb.c:538:
+/*
+ * Watchdog timer from the network layer.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1132: FILE: drivers/net/irda/irda-usb.c:551:
+	IRDA_DEBUG(0, __FUNCTION__ "(), Network layer thinks we timed out!\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1138: FILE: drivers/net/irda/irda-usb.c:554:
+		WARNING(__FUNCTION__ "(), device not present!\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around self->empty_urb
#1146: FILE: drivers/net/irda/irda-usb.c:561:
+	purb = &(self->empty_urb);

WARNING:LONG_LINE: line length of 150 exceeds 100 columns
#1148: FILE: drivers/net/irda/irda-usb.c:563:
+		WARNING("%s: Empty change timed out, urb->status=%d, urb->transfer_flags=0x%04X\n", netdev->name, purb->status, purb->transfer_flags);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1164: FILE: drivers/net/irda/irda-usb.c:575:
+			 * in completion handler - Jean II */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around self->speed_urb
#1180: FILE: drivers/net/irda/irda-usb.c:586:
+	purb = &(self->speed_urb);

WARNING:LONG_LINE: line length of 150 exceeds 100 columns
#1182: FILE: drivers/net/irda/irda-usb.c:588:
+		WARNING("%s: Speed change timed out, urb->status=%d, urb->transfer_flags=0x%04X\n", netdev->name, purb->status, purb->transfer_flags);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1209: FILE: drivers/net/irda/irda-usb.c:601:
+			 * in completion handler - Jean II */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around self->tx_urb
#1219: FILE: drivers/net/irda/irda-usb.c:611:
+	purb = &(self->tx_urb);

WARNING:LONG_LINE: line length of 140 exceeds 100 columns
#1237: FILE: drivers/net/irda/irda-usb.c:615:
+		WARNING("%s: Tx timed out, urb->status=%d, urb->transfer_flags=0x%04X\n", netdev->name, purb->status, purb->transfer_flags);

ERROR:SPACING: space required before the open parenthesis '('
#1262: FILE: drivers/net/irda/irda-usb.c:622:
+		if(self->new_speed == -1)

ERROR:SPACING: space required before the open parenthesis '('
#1264: FILE: drivers/net/irda/irda-usb.c:624:
+		if(self->new_xbofs == -1)

ERROR:SPACING: space required before the open parenthesis '('
#1291: FILE: drivers/net/irda/irda-usb.c:633:
+			if(skb != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "skb"
#1291: FILE: drivers/net/irda/irda-usb.c:633:
+			if(skb != NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1302: FILE: drivers/net/irda/irda-usb.c:644:
+			 * in completion handler - Jean II */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1375: FILE: drivers/net/irda/irda-usb.c:669:
+/*
+ * Submit a Rx URB to the USB layer to handle reception of a frame

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1416: FILE: drivers/net/irda/irda-usb.c:708:
+	IRDA_DEBUG(2, __FUNCTION__ "()\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1465: FILE: drivers/net/irda/irda-usb.c:712:
+		IRDA_DEBUG(0, __FUNCTION__ "(), Bug : purb == NULL\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1494: FILE: drivers/net/irda/irda-usb.c:768:
+	IRDA_DEBUG(2, __FUNCTION__ "(), len=%d\n", purb->actual_length);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1495: FILE: drivers/net/irda/irda-usb.c:769:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#1504: FILE: drivers/net/irda/irda-usb.c:784:
+	if(purb->status != USB_ST_NOERROR) {

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#1513: FILE: drivers/net/irda/irda-usb.c:791:
+			WARNING(__FUNCTION__ "(), Connection Reset (-104), transfer_flags 0x%04X \n", purb->transfer_flags);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1513: FILE: drivers/net/irda/irda-usb.c:791:
+			WARNING(__FUNCTION__ "(), Connection Reset (-104), transfer_flags 0x%04X \n", purb->transfer_flags);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1513: FILE: drivers/net/irda/irda-usb.c:791:
+			WARNING(__FUNCTION__ "(), Connection Reset (-104), transfer_flags 0x%04X \n", purb->transfer_flags);

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#1520: FILE: drivers/net/irda/irda-usb.c:797:
+			WARNING(__FUNCTION__ "(), RX status %d,transfer_flags 0x%04X \n", purb->status, purb->transfer_flags);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1520: FILE: drivers/net/irda/irda-usb.c:797:
+			WARNING(__FUNCTION__ "(), RX status %d,transfer_flags 0x%04X \n", purb->status, purb->transfer_flags);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1520: FILE: drivers/net/irda/irda-usb.c:797:
+			WARNING(__FUNCTION__ "(), RX status %d,transfer_flags 0x%04X \n", purb->status, purb->transfer_flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1526: FILE: drivers/net/irda/irda-usb.c:802:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1554: FILE: drivers/net/irda/irda-usb.c:857:
+	 * Jean II */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1556: FILE: drivers/net/irda/irda-usb.c:859:
+	 * processing the Rx URB. Another time... Jean II */

WARNING:TYPO_SPELLING: 'Callbak' may be misspelled - perhaps 'Callback'?
#1571: FILE: drivers/net/irda/irda-usb.c:870:
+ * Callbak from IrDA layer. IrDA wants to know if we have
    ^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1571: FILE: drivers/net/irda/irda-usb.c:870:
+/*
+ * Callbak from IrDA layer. IrDA wants to know if we have

WARNING:TYPO_SPELLING: 'decriptor' may be misspelled - perhaps 'descriptor'?
#1582: FILE: drivers/net/irda/irda-usb.c:881:
+	 * on the default decriptor with a usb_control_msg(), but that
 	                  ^^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1598: FILE: drivers/net/irda/irda-usb.c:897:
+/*
+ * Main calls from the IrDA/Network subsystem.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1606: FILE: drivers/net/irda/irda-usb.c:905:
+/*
+ * Callback when a new IrDA device is created.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1646: FILE: drivers/net/irda/irda-usb.c:969:
+	 * to send us some data... */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around self->rx_urb[i]
#1648: FILE: drivers/net/irda/irda-usb.c:971:
+		irda_usb_submit(self, NULL, &(self->rx_urb[i]));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around self->rx_urb[IU_MAX_ACTIVE_RX_URBS]
#1650: FILE: drivers/net/irda/irda-usb.c:973:
+	self->idle_rx_urb = &(self->rx_urb[IU_MAX_ACTIVE_RX_URBS]);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1660: FILE: drivers/net/irda/irda-usb.c:983:
+/*
+ * Function irda_usb_net_close (self)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1662: FILE: drivers/net/irda/irda-usb.c:985:
+ *    Network device is taken down. Usually this is done by $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1663: FILE: drivers/net/irda/irda-usb.c:986:
+ *    "ifconfig irda0 down" $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1670: FILE: drivers/net/irda/irda-usb.c:993:
+	IRDA_DEBUG(0, __FUNCTION__ "()\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "netdev"
#1672: FILE: drivers/net/irda/irda-usb.c:995:
+	ASSERT(netdev != NULL, return -1;);

CHECK:SPACING: No space is necessary after a cast
#1673: FILE: drivers/net/irda/irda-usb.c:996:
+	self = (struct irda_usb_cb *) netdev->priv;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self"
#1674: FILE: drivers/net/irda/irda-usb.c:997:
+	ASSERT(self != NULL, return -1;);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1677: FILE: drivers/net/irda/irda-usb.c:1000:
+	 * stopping the network Tx queue - Jean II */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around self->rx_urb[i]
#1685: FILE: drivers/net/irda/irda-usb.c:1008:
+		purb_t purb = &(self->rx_urb[i]);

CHECK:SPACING: No space is necessary after a cast
#1686: FILE: drivers/net/irda/irda-usb.c:1009:
+		struct sk_buff *skb = (struct sk_buff *) purb->context;

ERROR:SPACING: space required before the open parenthesis '('
#1690: FILE: drivers/net/irda/irda-usb.c:1013:
+		if(skb) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around self->tx_urb
#1696: FILE: drivers/net/irda/irda-usb.c:1019:
+	usb_unlink_urb(&(self->tx_urb));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around self->speed_urb
#1697: FILE: drivers/net/irda/irda-usb.c:1020:
+	usb_unlink_urb(&(self->speed_urb));

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1711: FILE: drivers/net/irda/irda-usb.c:1034:
+/*
+ * IOCTLs : Extra out-of-band network commands...

CHECK:SPACING: No space is necessary after a cast
#1715: FILE: drivers/net/irda/irda-usb.c:1038:
+	struct if_irda_req *irq = (struct if_irda_req *) rq;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev"
#1719: FILE: drivers/net/irda/irda-usb.c:1042:
+	ASSERT(dev != NULL, return -1;);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self"
#1721: FILE: drivers/net/irda/irda-usb.c:1044:
+	ASSERT(self != NULL, return -1;);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1723: FILE: drivers/net/irda/irda-usb.c:1046:
+	IRDA_DEBUG(2, __FUNCTION__ "(), %s, (cmd=0x%X)\n", dev->name, cmd);

ERROR:SPACING: space required before the open parenthesis '('
#1726: FILE: drivers/net/irda/irda-usb.c:1049:
+	if(!self->present)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1749: FILE: drivers/net/irda/irda-usb.c:1072:
+^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1755: FILE: drivers/net/irda/irda-usb.c:1078:
+/*
+ * Get device stats (for /proc/net/dev and ifconfig)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1760: FILE: drivers/net/irda/irda-usb.c:1083:
+	struct irda_usb_cb *self = dev->priv;
+	return &self->stats;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1765: FILE: drivers/net/irda/irda-usb.c:1088:
+/*
+ * Various subroutines dealing with IrDA and network stuff we use to

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1772: FILE: drivers/net/irda/irda-usb.c:1095:
+/*
+ * Set proper values in the IrDA QOS structure

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1778: FILE: drivers/net/irda/irda-usb.c:1101:
+	IRDA_DEBUG(3, __FUNCTION__ "()\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1779: FILE: drivers/net/irda/irda-usb.c:1102:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1781: FILE: drivers/net/irda/irda-usb.c:1104:
+^I$

CHECK:CAMELCASE: Avoid CamelCase: <wBaudRate>
#1785: FILE: drivers/net/irda/irda-usb.c:1108:
+	self->qos.baud_rate.bits       = desc->wBaudRate;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <bmMinTurnaroundTime>
#1786: FILE: drivers/net/irda/irda-usb.c:1109:
+	self->qos.min_turn_time.bits   = desc->bmMinTurnaroundTime;

CHECK:CAMELCASE: Avoid CamelCase: <bmAdditionalBOFs>
#1787: FILE: drivers/net/irda/irda-usb.c:1110:
+	self->qos.additional_bofs.bits = desc->bmAdditionalBOFs;

CHECK:CAMELCASE: Avoid CamelCase: <bmWindowSize>
#1788: FILE: drivers/net/irda/irda-usb.c:1111:
+	self->qos.window_size.bits     = desc->bmWindowSize;

CHECK:CAMELCASE: Avoid CamelCase: <bmDataSize>
#1789: FILE: drivers/net/irda/irda-usb.c:1112:
+	self->qos.data_size.bits       = desc->bmDataSize;

WARNING:LONG_LINE: line length of 255 exceeds 100 columns
#1791: FILE: drivers/net/irda/irda-usb.c:1114:
+	IRDA_DEBUG(0, __FUNCTION__ "(), dongle says speed=0x%X, size=0x%X, window=0x%X, bofs=0x%X, turn=0x%X\n", self->qos.baud_rate.bits, self->qos.data_size.bits, self->qos.window_size.bits, self->qos.additional_bofs.bits, self->qos.min_turn_time.bits);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1791: FILE: drivers/net/irda/irda-usb.c:1114:
+	IRDA_DEBUG(0, __FUNCTION__ "(), dongle says speed=0x%X, size=0x%X, window=0x%X, bofs=0x%X, turn=0x%X\n", self->qos.baud_rate.bits, self->qos.data_size.bits, self->qos.window_size.bits, self->qos.additional_bofs.bits, self->qos.min_turn_time.bits);

ERROR:SPACING: space required before the open parenthesis '('
#1794: FILE: drivers/net/irda/irda-usb.c:1117:
+	if(self->capability & IUC_SIR_ONLY)

ERROR:SPACING: space required before the open parenthesis '('
#1796: FILE: drivers/net/irda/irda-usb.c:1119:
+	if(self->capability & IUC_SMALL_PKT)

ERROR:SPACING: space required before the open parenthesis '('
#1798: FILE: drivers/net/irda/irda-usb.c:1121:
+	if(self->capability & IUC_NO_WINDOW)

ERROR:SPACING: space required before the open parenthesis '('
#1800: FILE: drivers/net/irda/irda-usb.c:1123:
+	if(self->capability & IUC_MAX_WINDOW)

ERROR:SPACING: space required before the open parenthesis '('
#1802: FILE: drivers/net/irda/irda-usb.c:1125:
+	if(self->capability & IUC_MAX_XBOFS)

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1805: FILE: drivers/net/irda/irda-usb.c:1128:
+#if 1

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1809: FILE: drivers/net/irda/irda-usb.c:1132:
+#endif^I    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1810: FILE: drivers/net/irda/irda-usb.c:1133:
+^I/* $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1811: FILE: drivers/net/irda/irda-usb.c:1134:
+	/* 
+	 * Note : most of those values apply only for the receive path,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1812: FILE: drivers/net/irda/irda-usb.c:1135:
+^I * the transmit path will be set differently - Jean II $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1827: FILE: drivers/net/irda/irda-usb.c:1150:
+/*
+ * Initialise the network side of the irda-usb instance

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1835: FILE: drivers/net/irda/irda-usb.c:1158:
+	IRDA_DEBUG(0, __FUNCTION__ "()\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1840: FILE: drivers/net/irda/irda-usb.c:1163:
+^I$

WARNING:TYPO_SPELLING: 'beeing' may be misspelled - perhaps 'being'?
#1841: FILE: drivers/net/irda/irda-usb.c:1164:
+	/* Initialise list of skb beeing curently transmitted */
 	                          ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1847: FILE: drivers/net/irda/irda-usb.c:1170:
+	 * Jean II */

CHECK:SPACING: No space is necessary after a cast
#1848: FILE: drivers/net/irda/irda-usb.c:1171:
+	self->speed_buff = (char *) kmalloc(IRDA_USB_SPEED_MTU, GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1848: FILE: drivers/net/irda/irda-usb.c:1171:
+	self->speed_buff = (char *) kmalloc(IRDA_USB_SPEED_MTU, GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1849: FILE: drivers/net/irda/irda-usb.c:1172:
+^Iif (self->speed_buff == NULL) $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self->speed_buff"
#1849: FILE: drivers/net/irda/irda-usb.c:1172:
+	if (self->speed_buff == NULL) 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1854: FILE: drivers/net/irda/irda-usb.c:1177:
+	if (!(netdev = dev_alloc("irda%d", &err))) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1855: FILE: drivers/net/irda/irda-usb.c:1178:
+		ERROR(__FUNCTION__ "(), dev_alloc() failed!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1859: FILE: drivers/net/irda/irda-usb.c:1182:
+ ^Inetdev->priv = (void *) self;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1859: FILE: drivers/net/irda/irda-usb.c:1182:
+ ^Inetdev->priv = (void *) self;$

CHECK:SPACING: No space is necessary after a cast
#1859: FILE: drivers/net/irda/irda-usb.c:1182:
+ 	netdev->priv = (void *) self;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1859: FILE: drivers/net/irda/irda-usb.c:1182:
+ ^Inetdev->priv = (void *) self;$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1865: FILE: drivers/net/irda/irda-usb.c:1188:
+	netdev->watchdog_timeo  = 110*HZ/1000;	/* 110 ms > USB timeout */
 	                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1865: FILE: drivers/net/irda/irda-usb.c:1188:
+	netdev->watchdog_timeo  = 110*HZ/1000;	/* 110 ms > USB timeout */
 	                                ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1875: FILE: drivers/net/irda/irda-usb.c:1198:
+		ERROR(__FUNCTION__ "(), register_netdev() failed!\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1885: FILE: drivers/net/irda/irda-usb.c:1208:
+/*
+ * Cleanup the network side of the irda-usb instance

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1890: FILE: drivers/net/irda/irda-usb.c:1213:
+	IRDA_DEBUG(0, __FUNCTION__ "()\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self"
#1892: FILE: drivers/net/irda/irda-usb.c:1215:
+	ASSERT(self != NULL, return -1;);

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#1902: FILE: drivers/net/irda/irda-usb.c:1225:
+	hashbin_delete(self->tx_list, (FREE_FUNC) &dev_kfree_skb_any);
 	                                          ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self->speed_buff"
#1904: FILE: drivers/net/irda/irda-usb.c:1227:
+	if (self->speed_buff != NULL) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1914: FILE: drivers/net/irda/irda-usb.c:1237:
+/*
+ * Various subroutines dealing with USB stuff we use to configure and

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1921: FILE: drivers/net/irda/irda-usb.c:1244:
+/*
+ * Function irda_usb_parse_endpoints(dev, ifnum)

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#1931: FILE: drivers/net/irda/irda-usb.c:1254:
+static inline int irda_usb_parse_endpoints(struct irda_usb_cb *self, struct usb_endpoint_descriptor *endpoint, int ennum)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1934: FILE: drivers/net/irda/irda-usb.c:1257:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#1941: FILE: drivers/net/irda/irda-usb.c:1264:
+	for(i = 0; i < ennum; i++) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1943: FILE: drivers/net/irda/irda-usb.c:1266:
+		 * so let's aim for clarity... - Jean II */

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#1950: FILE: drivers/net/irda/irda-usb.c:1273:
+		ep = endpoint[i].bEndpointAddress & USB_ENDPOINT_NUMBER_MASK;

CHECK:CAMELCASE: Avoid CamelCase: <bmAttributes>
#1952: FILE: drivers/net/irda/irda-usb.c:1275:
+		attr = endpoint[i].bmAttributes;

CHECK:CAMELCASE: Avoid CamelCase: <wMaxPacketSize>
#1953: FILE: drivers/net/irda/irda-usb.c:1276:
+		psize = endpoint[i].wMaxPacketSize;

ERROR:SPACING: space required before the open parenthesis '('
#1956: FILE: drivers/net/irda/irda-usb.c:1279:
+		if(attr == USB_ENDPOINT_XFER_BULK) {

ERROR:SPACING: space required before the open parenthesis '('
#1958: FILE: drivers/net/irda/irda-usb.c:1281:
+			if(dir == USB_DIR_IN) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'attr == USB_ENDPOINT_XFER_INT'
#1967: FILE: drivers/net/irda/irda-usb.c:1290:
+			if((attr == USB_ENDPOINT_XFER_INT) &&
+			   (dir == USB_DIR_IN)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dir == USB_DIR_IN'
#1967: FILE: drivers/net/irda/irda-usb.c:1290:
+			if((attr == USB_ENDPOINT_XFER_INT) &&
+			   (dir == USB_DIR_IN)) {

ERROR:SPACING: space required before the open parenthesis '('
#1967: FILE: drivers/net/irda/irda-usb.c:1290:
+			if((attr == USB_ENDPOINT_XFER_INT) &&

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1972: FILE: drivers/net/irda/irda-usb.c:1295:
+				ERROR(__FUNCTION__ "(), Unrecognised endpoint %02X.\n", ep);

WARNING:LONG_LINE: line length of 177 exceeds 100 columns
#1977: FILE: drivers/net/irda/irda-usb.c:1300:
+	IRDA_DEBUG(0, __FUNCTION__ "(), And our endpoints are : in=%02X, out=%02X (%d), int=%02X\n", self->bulk_in_ep, self->bulk_out_ep, self->bulk_out_mtu, self->bulk_int_ep);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1977: FILE: drivers/net/irda/irda-usb.c:1300:
+	IRDA_DEBUG(0, __FUNCTION__ "(), And our endpoints are : in=%02X, out=%02X (%d), int=%02X\n", self->bulk_in_ep, self->bulk_out_ep, self->bulk_out_mtu, self->bulk_int_ep);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1987: FILE: drivers/net/irda/irda-usb.c:1310:
+/*
+ * Function usb_irda_dump_class_desc(desc)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1994: FILE: drivers/net/irda/irda-usb.c:1317:
+	printk("bLength=%x\n", desc->bLength);

CHECK:CAMELCASE: Avoid CamelCase: <bLength>
#1994: FILE: drivers/net/irda/irda-usb.c:1317:
+	printk("bLength=%x\n", desc->bLength);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1995: FILE: drivers/net/irda/irda-usb.c:1318:
+	printk("bDescriptorType=%x\n", desc->bDescriptorType);

CHECK:CAMELCASE: Avoid CamelCase: <bDescriptorType>
#1995: FILE: drivers/net/irda/irda-usb.c:1318:
+	printk("bDescriptorType=%x\n", desc->bDescriptorType);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1996: FILE: drivers/net/irda/irda-usb.c:1319:
+^Iprintk("bcdSpecRevision=%x\n", desc->bcdSpecRevision); $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1996: FILE: drivers/net/irda/irda-usb.c:1319:
+	printk("bcdSpecRevision=%x\n", desc->bcdSpecRevision); 

CHECK:CAMELCASE: Avoid CamelCase: <bcdSpecRevision>
#1996: FILE: drivers/net/irda/irda-usb.c:1319:
+	printk("bcdSpecRevision=%x\n", desc->bcdSpecRevision); 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1997: FILE: drivers/net/irda/irda-usb.c:1320:
+	printk("bmDataSize=%x\n", desc->bmDataSize);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1998: FILE: drivers/net/irda/irda-usb.c:1321:
+	printk("bmWindowSize=%x\n", desc->bmWindowSize);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1999: FILE: drivers/net/irda/irda-usb.c:1322:
+	printk("bmMinTurnaroundTime=%d\n", desc->bmMinTurnaroundTime);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2000: FILE: drivers/net/irda/irda-usb.c:1323:
+	printk("wBaudRate=%x\n", desc->wBaudRate);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2001: FILE: drivers/net/irda/irda-usb.c:1324:
+	printk("bmAdditionalBOFs=%x\n", desc->bmAdditionalBOFs);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2002: FILE: drivers/net/irda/irda-usb.c:1325:
+	printk("bIrdaRateSniff=%x\n", desc->bIrdaRateSniff);

CHECK:CAMELCASE: Avoid CamelCase: <bIrdaRateSniff>
#2002: FILE: drivers/net/irda/irda-usb.c:1325:
+	printk("bIrdaRateSniff=%x\n", desc->bIrdaRateSniff);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2003: FILE: drivers/net/irda/irda-usb.c:1326:
+	printk("bMaxUnicastList=%x\n", desc->bMaxUnicastList);

CHECK:CAMELCASE: Avoid CamelCase: <bMaxUnicastList>
#2003: FILE: drivers/net/irda/irda-usb.c:1326:
+	printk("bMaxUnicastList=%x\n", desc->bMaxUnicastList);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2009: FILE: drivers/net/irda/irda-usb.c:1332:
+/*
+ * Function irda_usb_find_class_desc(dev, ifnum)

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#2017: FILE: drivers/net/irda/irda-usb.c:1340:
+static inline struct irda_class_desc *irda_usb_find_class_desc(struct usb_device *dev, unsigned int ifnum)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2022: FILE: drivers/net/irda/irda-usb.c:1345:
+^I^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2023: FILE: drivers/net/irda/irda-usb.c:1346:
+	desc = kmalloc(sizeof (struct irda_class_desc), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*desc)...) over kmalloc(sizeof (struct irda_class_desc)...)
#2023: FILE: drivers/net/irda/irda-usb.c:1346:
+	desc = kmalloc(sizeof (struct irda_class_desc), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2024: FILE: drivers/net/irda/irda-usb.c:1347:
+^Iif (desc == NULL) $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!desc"
#2024: FILE: drivers/net/irda/irda-usb.c:1347:
+	if (desc == NULL) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2027: FILE: drivers/net/irda/irda-usb.c:1350:
+^I$

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#2028: FILE: drivers/net/irda/irda-usb.c:1351:
+	ret = usb_get_class_descriptor(dev, ifnum, USB_DT_IRDA, 0, (void *) desc, sizeof(struct irda_class_desc));

CHECK:SPACING: No space is necessary after a cast
#2028: FILE: drivers/net/irda/irda-usb.c:1351:
+	ret = usb_get_class_descriptor(dev, ifnum, USB_DT_IRDA, 0, (void *) desc, sizeof(struct irda_class_desc));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2029: FILE: drivers/net/irda/irda-usb.c:1352:
+	IRDA_DEBUG(0, __FUNCTION__ "(), ret=%d\n", ret);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2030: FILE: drivers/net/irda/irda-usb.c:1353:
+	if (ret) {
+		WARNING("usb-irda: usb_get_class_descriptor failed (0x%x)\n", ret);  
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2031: FILE: drivers/net/irda/irda-usb.c:1354:
+^I^IWARNING("usb-irda: usb_get_class_descriptor failed (0x%x)\n", ret);  $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2041: FILE: drivers/net/irda/irda-usb.c:1361:
+	IRDA_DEBUG(0, __FUNCTION__ "(), parsing extra descriptors ...\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2042: FILE: drivers/net/irda/irda-usb.c:1362:
+^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2070: FILE: drivers/net/irda/irda-usb.c:1385:
+/*
+ * This routine is called by the USB subsystem for each new device

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2098: FILE: drivers/net/irda/irda-usb.c:1403:
+	 * Jean II */

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#2102: FILE: drivers/net/irda/irda-usb.c:1405:
+	IRDA_DEBUG(0, "Vendor: %x, Product: %x\n", dev->descriptor.idVendor, dev->descriptor.idProduct);

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#2102: FILE: drivers/net/irda/irda-usb.c:1405:
+	IRDA_DEBUG(0, "Vendor: %x, Product: %x\n", dev->descriptor.idVendor, dev->descriptor.idProduct);

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#2102: FILE: drivers/net/irda/irda-usb.c:1405:
+	IRDA_DEBUG(0, "Vendor: %x, Product: %x\n", dev->descriptor.idVendor, dev->descriptor.idProduct);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2103: FILE: drivers/net/irda/irda-usb.c:1406:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2119: FILE: drivers/net/irda/irda-usb.c:1412:
+	 * Jean II */

WARNING:LINE_SPACING: Missing a blank line after declarations
#2122: FILE: drivers/net/irda/irda-usb.c:1415:
+		struct irda_usb_cb *irda = &irda_instance[i];
+		if((irda->usbdev != NULL) &&

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irda->usbdev != NULL'
#2122: FILE: drivers/net/irda/irda-usb.c:1415:
+		if((irda->usbdev != NULL) &&
+		   (irda->present == 0) &&
+		   (irda->netopen == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irda->present == 0'
#2122: FILE: drivers/net/irda/irda-usb.c:1415:
+		if((irda->usbdev != NULL) &&
+		   (irda->present == 0) &&
+		   (irda->netopen == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irda->netopen == 0'
#2122: FILE: drivers/net/irda/irda-usb.c:1415:
+		if((irda->usbdev != NULL) &&
+		   (irda->present == 0) &&
+		   (irda->netopen == 0)) {

ERROR:SPACING: space required before the open parenthesis '('
#2122: FILE: drivers/net/irda/irda-usb.c:1415:
+		if((irda->usbdev != NULL) &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "irda->usbdev"
#2122: FILE: drivers/net/irda/irda-usb.c:1415:
+		if((irda->usbdev != NULL) &&

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2125: FILE: drivers/net/irda/irda-usb.c:1418:
+			IRDA_DEBUG(0, __FUNCTION__ "(), found a zombie instance !!!\n");

CHECK:SPACING: No space is necessary after a cast
#2126: FILE: drivers/net/irda/irda-usb.c:1419:
+			irda_usb_disconnect(irda->usbdev, (void *) irda);

ERROR:SPACING: space required before the open parenthesis '('
#2151: FILE: drivers/net/irda/irda-usb.c:1426:
+		if(irda_instance[i].usbdev == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!irda_instance[i].usbdev"
#2151: FILE: drivers/net/irda/irda-usb.c:1426:
+		if(irda_instance[i].usbdev == NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#2156: FILE: drivers/net/irda/irda-usb.c:1431:
+	if(self == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self"
#2156: FILE: drivers/net/irda/irda-usb.c:1431:
+	if(self == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2172: FILE: drivers/net/irda/irda-usb.c:1442:
+	if (usb_set_configuration (dev, dev->config[0].bConfigurationValue) < 0) {

CHECK:CAMELCASE: Avoid CamelCase: <bConfigurationValue>
#2172: FILE: drivers/net/irda/irda-usb.c:1442:
+	if (usb_set_configuration (dev, dev->config[0].bConfigurationValue) < 0) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2188: FILE: drivers/net/irda/irda-usb.c:1450:
+	 * Jean II */

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#2191: FILE: drivers/net/irda/irda-usb.c:1453:
+	switch (ret) {
+		case USB_ST_NOERROR:		/* 0 */
[...]
+		case USB_ST_STALL:		/* -EPIPE = -32 */

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2199: FILE: drivers/net/irda/irda-usb.c:1458:
+			IRDA_DEBUG(0, __FUNCTION__ "(), Clearing stall on control interface\n" );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2199: FILE: drivers/net/irda/irda-usb.c:1458:
+			IRDA_DEBUG(0, __FUNCTION__ "(), Clearing stall on control interface\n" );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2202: FILE: drivers/net/irda/irda-usb.c:1461:
+			IRDA_DEBUG(0, __FUNCTION__ "(), Unknown error %d\n", ret);

ERROR:SPACING: space required before the open parenthesis '('
#2223: FILE: drivers/net/irda/irda-usb.c:1468:
+	if(!irda_usb_parse_endpoints(self, interface->endpoint,

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#2224: FILE: drivers/net/irda/irda-usb.c:1469:
+				     interface->bNumEndpoints)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2225: FILE: drivers/net/irda/irda-usb.c:1470:
+		ERROR(__FUNCTION__ "(), Bogus endpoints...\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!irda_desc"
#2237: FILE: drivers/net/irda/irda-usb.c:1476:
+	if (irda_desc == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2239: FILE: drivers/net/irda/irda-usb.c:1478:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2240: FILE: drivers/net/irda/irda-usb.c:1479:
+^Iself->irda_desc =  irda_desc;^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2255: FILE: drivers/net/irda/irda-usb.c:1493:
+/*
+ * The current irda-usb device is removed, the USB layer tell us

CHECK:SPACING: No space is necessary after a cast
#2263: FILE: drivers/net/irda/irda-usb.c:1498:
+	struct irda_usb_cb *self = (struct irda_usb_cb *) ptr;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2269: FILE: drivers/net/irda/irda-usb.c:1501:
+	IRDA_DEBUG(0, __FUNCTION__ "()\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around self->rx_urb[i]
#2285: FILE: drivers/net/irda/irda-usb.c:1513:
+			usb_unlink_urb(&(self->rx_urb[i]));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around self->tx_urb
#2287: FILE: drivers/net/irda/irda-usb.c:1515:
+		usb_unlink_urb(&(self->tx_urb));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around self->speed_urb
#2288: FILE: drivers/net/irda/irda-usb.c:1516:
+		usb_unlink_urb(&(self->speed_urb));

WARNING:LONG_LINE_STRING: line length of 102 exceeds 100 columns
#2309: FILE: drivers/net/irda/irda-usb.c:1518:
+		IRDA_DEBUG(0, __FUNCTION__ "(), postponing disconnect, network is still active...\n");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2309: FILE: drivers/net/irda/irda-usb.c:1518:
+		IRDA_DEBUG(0, __FUNCTION__ "(), postponing disconnect, network is still active...\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2311: FILE: drivers/net/irda/irda-usb.c:1520:
+		 * will do whats needed */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2325: FILE: drivers/net/irda/irda-usb.c:1528:
+	IRDA_DEBUG(0, __FUNCTION__ "(), USB IrDA Disconnected\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2330: FILE: drivers/net/irda/irda-usb.c:1533:
+/*
+ * USB device callbacks

WARNING:INDENTED_LABEL: labels should not be indented
#2333: FILE: drivers/net/irda/irda-usb.c:1536:
+	name:		"irda-usb",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2334: FILE: drivers/net/irda/irda-usb.c:1537:
+	probe:		irda_usb_probe,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#2334: FILE: drivers/net/irda/irda-usb.c:1537:
+	probe:		irda_usb_probe,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2335: FILE: drivers/net/irda/irda-usb.c:1538:
+	disconnect:	irda_usb_disconnect,
 	          ^

WARNING:INDENTED_LABEL: labels should not be indented
#2335: FILE: drivers/net/irda/irda-usb.c:1538:
+	disconnect:	irda_usb_disconnect,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2336: FILE: drivers/net/irda/irda-usb.c:1539:
+	id_table:	dongles,
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#2336: FILE: drivers/net/irda/irda-usb.c:1539:
+	id_table:	dongles,

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2341: FILE: drivers/net/irda/irda-usb.c:1544:
+/*
+ * Deal with module insertion/removal

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2347: FILE: drivers/net/irda/irda-usb.c:1550:
+/*
+ * Module insertion

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2358: FILE: drivers/net/irda/irda-usb.c:1564:
+/*
+ * Module removal

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2380: FILE: drivers/net/irda/irda-usb.c:1588:
+/*
+ * Module parameters

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513647.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 80 errors, 162 warnings, 70 checks, 2313 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513647.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
