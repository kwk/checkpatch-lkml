CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: include/linux/sched.h:652:
+extern void reap_thread(task_t *p);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#73: FILE: include/linux/sched.h:653:
+extern void release_task(struct task_struct * p);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#73: FILE: include/linux/sched.h:653:
+extern void release_task(struct task_struct * p);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#83: FILE: include/linux/init_task.h:62:
+    zombie_list:	LIST_HEAD_INIT(tsk.zombie_list),		\
                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#83: FILE: include/linux/init_task.h:62:
+    zombie_list:	LIST_HEAD_INIT(tsk.zombie_list),		\

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#94: FILE: kernel/exit.c:57:
+void release_task(struct task_struct * p)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#97: FILE: kernel/exit.c:60:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#99: FILE: kernel/exit.c:62:
+		BUG();

WARNING:NEW_TYPEDEFS: do not add new typedefs
#136: FILE: kernel/signal.c:1516:
+typedef struct {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#137: FILE: kernel/signal.c:1517:
+	spinlock_t lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#148: FILE: kernel/signal.c:1528:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#150: FILE: kernel/signal.c:1530:
+		printk("hm, %s(%d) reaped already.\n", p->comm, p->pid);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#160: FILE: kernel/signal.c:1540:
+		BUG();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#166: FILE: kernel/signal.c:1546:
+static int kwaitd(void * __cpu)

CHECK:SPACING: No space is necessary after a cast
#168: FILE: kernel/signal.c:1548:
+	int cpu = (long) __cpu;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#175: FILE: kernel/signal.c:1555:
+	printk("[kwaitd_CPU%d] started up.\n", cpu);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: kernel/signal.c:1560:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#201: FILE: kernel/signal.c:1581:
+
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#206: FILE: kernel/signal.c:1586:
+static int __devinit cpu_callback(struct notifier_block *nfb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: kernel/signal.c:1587:
+static int __devinit cpu_callback(struct notifier_block *nfb,
+				unsigned long action, void *hcpu)

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: kernel/signal.c:1591:
+        if (action == CPU_ONLINE) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: kernel/signal.c:1591:
+        if (action == CPU_ONLINE) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: kernel/signal.c:1593:
+		if (kernel_thread(kwaitd, hcpu,
+				CLONE_FS | CLONE_FILES | CLONE_SIGNAL) < 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#214: FILE: kernel/signal.c:1594:
+			printk("start_kwaitd() failed for cpu %d\n", cpu);

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#218: FILE: kernel/signal.c:1598:
+			yield();

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: kernel/signal.c:1600:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: kernel/signal.c:1600:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: kernel/fork.c:744:
+        INIT_LIST_HEAD(&p->zombie_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: kernel/fork.c:744:
+        INIT_LIST_HEAD(&p->zombie_list);$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#254: FILE: init/main.c:530:
+	extern int start_kwaitd(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000439759.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 14 warnings, 8 checks, 193 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000439759.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
