WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
Clean up comments to follow consistent style established by previous cleanups. 

ERROR:CODE_INDENT: code indent should use tabs where possible
#37: FILE: fs/cifs/inode.c:60:
+        ^I^I/* have to skip first of the double backslash of$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#37: FILE: fs/cifs/inode.c:60:
+        ^I^I/* have to skip first of the double backslash of$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#37: FILE: fs/cifs/inode.c:60:
+        ^I^I/* have to skip first of the double backslash of$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#38: FILE: fs/cifs/inode.c:61:
+        		/* have to skip first of the double backslash of
+			   UNC name */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#38: FILE: fs/cifs/inode.c:61:
+			   UNC name */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#47: FILE: fs/cifs/inode.c:86:
+			   the server is really filling in that field? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#58: FILE: fs/cifs/inode.c:136:
+		/* can not safely change the file size here if the client is
+		   writing to it due to potential races */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#58: FILE: fs/cifs/inode.c:136:
+		   writing to it due to potential races */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#70: FILE: fs/cifs/inode.c:140:
+			/* blksize needs to be multiple of two. So safer to
+			   default to blksize and blkbits set in superblock so

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#71: FILE: fs/cifs/inode.c:141:
+			   2**blkbits and blksize will match */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#73: FILE: fs/cifs/inode.c:143:
+/*			inode->i_blksize = (pTcon->ses->server->maxBuf -
+					    MAX_CIFS_HDR_SIZE) & 0xFFFFFE00; */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#73: FILE: fs/cifs/inode.c:143:
+					    MAX_CIFS_HDR_SIZE) & 0xFFFFFE00; */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#76: FILE: fs/cifs/inode.c:146:
+			/* This seems incredibly stupid but it turns out that
+			   i_blocks is not related to (i_size / i_blksize),

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#78: FILE: fs/cifs/inode.c:148:
+			   calculating num blocks */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#83: FILE: fs/cifs/inode.c:151:
+/*			inode->i_blocks = (inode->i_blksize - 1 + num_of_bytes)
+					  >> inode->i_blkbits; */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#83: FILE: fs/cifs/inode.c:151:
+					  >> inode->i_blkbits; */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#88: FILE: fs/cifs/inode.c:154:
+			/* 512 bytes (2**9) is the fake blocksize that must be
+			   used for this calculation */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#88: FILE: fs/cifs/inode.c:154:
+			   used for this calculation */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#106: FILE: fs/cifs/inode.c:253:
+			   the server is really filling in that field? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#114: FILE: fs/cifs/inode.c:256:
+			/* We can not use the IndexNumber from either Windows
+			   or Samba as it is frequently set to zero */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#114: FILE: fs/cifs/inode.c:256:
+			   or Samba as it is frequently set to zero */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#116: FILE: fs/cifs/inode.c:258:
+			/* There may be higher info levels that work but are
+			   there Windows server or network appliances for which

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#117: FILE: fs/cifs/inode.c:259:
+			   IndexNumber field is not guaranteed unique? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#128: FILE: fs/cifs/inode.c:278:
+		/* blksize needs to be multiple of two. So safer to default to
+		   blksize and blkbits set in superblock so 2**blkbits and

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#129: FILE: fs/cifs/inode.c:279:
+		   blksize will match */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#135: FILE: fs/cifs/inode.c:284:
+		/* Linux can not store file creation time unfortunately so we
+		   ignore it */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#135: FILE: fs/cifs/inode.c:284:
+		   ignore it */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#146: FILE: fs/cifs/inode.c:300:
+		/* We no longer handle these as symlinks because we could not
+		   follow them due to the absolute path with drive letter */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#146: FILE: fs/cifs/inode.c:300:
+		   follow them due to the absolute path with drive letter */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#150: FILE: fs/cifs/inode.c:303:
+		/* override default perms since we do not do byte range locking
+		   on dirs */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#150: FILE: fs/cifs/inode.c:303:
+		   on dirs */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#157: FILE: fs/cifs/inode.c:309:
+			/* treat the dos attribute of read-only as read-only
+			   mode e.g. 555 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#157: FILE: fs/cifs/inode.c:309:
+			   mode e.g. 555 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#162: FILE: fs/cifs/inode.c:313:
+		/* BB add code here -
+		   validate if device or weird share or device type? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#162: FILE: fs/cifs/inode.c:313:
+		   validate if device or weird share or device type? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#168: FILE: fs/cifs/inode.c:317:
+			/* can not safely change the file size here if the
+			   client is writing to it due to potential races */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#168: FILE: fs/cifs/inode.c:317:
+			   client is writing to it due to potential races */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#174: FILE: fs/cifs/inode.c:321:
+			/* 512 bytes (2**9) is the fake blocksize that must be
+			   used for this calculation */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#174: FILE: fs/cifs/inode.c:321:
+			   used for this calculation */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#183: FILE: fs/cifs/inode.c:329:
+		   or retrieve from NTFS stream extended attribute */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#189: FILE: fs/cifs/inode.c:334:
+			   bad data after user has changed them in memory */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#211: FILE: fs/cifs/inode.c:394:
+	/* Unlink can be called from rename so we can not grab the sem here
+	   since we deadlock otherwise */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#211: FILE: fs/cifs/inode.c:394:
+	   since we deadlock otherwise */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#239: FILE: fs/cifs/inode.c:449:
+			/* BB could scan to see if we already have it open
+			   and pass in pid of opener to function */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#239: FILE: fs/cifs/inode.c:449:
+			   and pass in pid of opener to function */

CHECK:CAMELCASE: Avoid CamelCase: <cifsInode>
#248: FILE: fs/cifs/inode.c:491:
+	cifsInode->time = 0;	/* will force revalidate to get info when

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#249: FILE: fs/cifs/inode.c:492:
+	cifsInode->time = 0;	/* will force revalidate to get info when
+				   needed */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#249: FILE: fs/cifs/inode.c:492:
+				   needed */

CHECK:BRACES: Unbalanced braces around else statement
#260: FILE: fs/cifs/inode.c:559:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#262: FILE: fs/cifs/inode.c:561:
+			/* BB to be implemented via Windows secrty descriptors
+			   eg CIFSSMBWinSetPerms(xid, pTcon, full_path, mode,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#263: FILE: fs/cifs/inode.c:562:
+						 -1, -1, local_nls); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#273: FILE: fs/cifs/inode.c:606:
+	cifsInode->time = 0;	/* force revalidate to go get info when
+				   needed */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#273: FILE: fs/cifs/inode.c:606:
+				   needed */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#284: FILE: fs/cifs/inode.c:636:
+		return -EXDEV;	/* BB actually could be allowed if same server,
+				   but different share.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#285: FILE: fs/cifs/inode.c:637:
+				   Might eventually add support for this */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#291: FILE: fs/cifs/inode.c:641:
+	/* we already  have the rename sem so we do not need to grab it again
+	   here to protect the path integrity */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#291: FILE: fs/cifs/inode.c:641:
+	   here to protect the path integrity */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#302: FILE: fs/cifs/inode.c:653:
+		/* check if they are the same file because rename of hardlinked
+		   files is a noop */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#302: FILE: fs/cifs/inode.c:653:
+		   files is a noop */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#313: FILE: fs/cifs/inode.c:672:
+			/* do not rename since the files are hardlinked which
+			   is a noop */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#313: FILE: fs/cifs/inode.c:672:
+			   is a noop */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#322: FILE: fs/cifs/inode.c:678:
+			   semantics */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#333: FILE: fs/cifs/inode.c:699:
+		   might not right be right access to request */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#344: FILE: fs/cifs/inode.c:748:
+	/* can not safely grab the rename sem here if rename calls revalidate
+	   since that would deadlock */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#344: FILE: fs/cifs/inode.c:748:
+	   since that would deadlock */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#354: FILE: fs/cifs/inode.c:785:
+				rc = 0; */	/* BB should we cache info on
+						   certain errors? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#354: FILE: fs/cifs/inode.c:785:
+						   certain errors? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#364: FILE: fs/cifs/inode.c:794:
+				rc = 0; */	/* BB should we cache info on
+						   certain errors? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#364: FILE: fs/cifs/inode.c:794:
+						   certain errors? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#372: FILE: fs/cifs/inode.c:800:
+	/* if not oplocked, we invalidate inode pages if mtime or file size
+	   had changed on server */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#372: FILE: fs/cifs/inode.c:800:
+	   had changed on server */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#384: FILE: fs/cifs/inode.c:809:
+			/* no need to invalidate inode pages since we were the
+			   only ones who could have modified the file and the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#385: FILE: fs/cifs/inode.c:810:
+			   server copy is staler than ours */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#396: FILE: fs/cifs/inode.c:817:
+	/* can not grab this sem since kernel filesys locking documentation
+	   indicates i_sem may be taken by the kernel on lookup and rename

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#397: FILE: fs/cifs/inode.c:818:
+	   which could deadlock if we grab the i_sem here as well */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#403: FILE: fs/cifs/inode.c:823:
+		/* do we need to lock inode until after invalidate completes
+		   below? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#403: FILE: fs/cifs/inode.c:823:
+		   below? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#428: FILE: fs/cifs/inode.c:918:
+		/* To avoid spurious oplock breaks from server, in the case of
+		   inodes that we already have open, avoid doing path based

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#433: FILE: fs/cifs/inode.c:923:
+		   request would allow */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#444: FILE: fs/cifs/inode.c:933:
+					/* we found a valid, writeable network
+					   file handle to use to try to set the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#445: FILE: fs/cifs/inode.c:934:
+					   file size */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#459: FILE: fs/cifs/inode.c:945:
+					/* Do not need reopen and retry on
+					   EAGAIN since we will retry by

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#460: FILE: fs/cifs/inode.c:946:
+					   pathname below */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#463: FILE: fs/cifs/inode.c:949:
+					/* now that we found one valid file
+					   handle no sense continuing to loop

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#464: FILE: fs/cifs/inode.c:950:
+					   trying others, so break here */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#477: FILE: fs/cifs/inode.c:960:
+			/* Set file size by pathname rather than by handle
+			   either because no valid, writeable file handle for

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#479: FILE: fs/cifs/inode.c:962:
+			   it by handle */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#490: FILE: fs/cifs/inode.c:970:
+		/* Server is ok setting allocation size implicitly - no need
+		   to call:

CHECK:CAMELCASE: Avoid CamelCase: <cFYI>
#517: FILE: fs/cifs/inode.c:1037:
+		cFYI(1, (" CIFS - CTIME changed ")); /* BB probably no need */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#527: FILE: fs/cifs/inode.c:1045:
+		/* BB what if setting one attribute fails (such as size) but
+		   time setting works? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#527: FILE: fs/cifs/inode.c:1045:
+		   time setting works? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#531: FILE: fs/cifs/inode.c:1048:
+		   via Handle (SetFileInfo) instead of by path */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#542: FILE: fs/cifs/inode.c:1062:
+			/* BB we could scan to see if we already have it open
+			   and pass in pid of opener to function */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#542: FILE: fs/cifs/inode.c:1062:
+			   and pass in pid of opener to function */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#552: FILE: fs/cifs/inode.c:1074:
+			   granularity */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#562: FILE: fs/cifs/inode.c:1083:
+	/* do not need local check to inode_check_ok since the server does
+	   that */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#562: FILE: fs/cifs/inode.c:1083:
+	   that */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#571: FILE: fs/cifs/inode.c:1096:
+	   directories added e.g. via FindNotify */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000195623.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 95 warnings, 3 checks, 507 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000195623.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
