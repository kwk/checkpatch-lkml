WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
--- linux-2.6.orig/drivers/net/wan/Makefile	2003-08-09 06:37:29.000000000 +0200

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: drivers/net/wan/wanxl.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#84: FILE: drivers/net/wan/wanxl.h:18:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#148: FILE: drivers/net/wan/wanxl.h:82:
+#define PLX_OFFSET		PLX + 0x80

WARNING:NEW_TYPEDEFS: do not add new typedefs
#197: FILE: drivers/net/wan/wanxl.h:131:
+typedef struct {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#198: FILE: drivers/net/wan/wanxl.h:132:
+	volatile u32 stat;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#200: FILE: drivers/net/wan/wanxl.h:134:
+	volatile u32 length;

ERROR:SPACING: space required after that close brace '}'
#201: FILE: drivers/net/wan/wanxl.h:135:
+}desc_t;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#203: FILE: drivers/net/wan/wanxl.h:137:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#204: FILE: drivers/net/wan/wanxl.h:138:
+typedef struct {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#206: FILE: drivers/net/wan/wanxl.h:140:
+	volatile u32 open;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#207: FILE: drivers/net/wan/wanxl.h:141:
+	volatile u32 cable;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#208: FILE: drivers/net/wan/wanxl.h:142:
+	volatile u32 rx_overruns;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#209: FILE: drivers/net/wan/wanxl.h:143:
+	volatile u32 rx_frame_errors;

ERROR:SPACING: space required after that close brace '}'
#216: FILE: drivers/net/wan/wanxl.h:150:
+}port_status_t;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#222: FILE: drivers/net/wan/wanxl.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#250: FILE: drivers/net/wan/wanxl.c:29:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/delay.h> instead of <asm/delay.h>
#251: FILE: drivers/net/wan/wanxl.c:30:
+#include <asm/delay.h>

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#255: FILE: drivers/net/wan/wanxl.c:34:
+static const char* version = "wanXL serial card driver version: 0.46";

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#273: FILE: drivers/net/wan/wanxl.c:52:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#274: FILE: drivers/net/wan/wanxl.c:53:
+typedef struct {

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: drivers/net/wan/wanxl.c:57:
+        int node;^I^I/* physical port #0 - 3 */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: drivers/net/wan/wanxl.c:57:
+        int node;^I^I/* physical port #0 - 3 */$

ERROR:SPACING: space required after that close brace '}'
#282: FILE: drivers/net/wan/wanxl.c:61:
+}port_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#284: FILE: drivers/net/wan/wanxl.c:63:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#285: FILE: drivers/net/wan/wanxl.c:64:
+typedef struct {

ERROR:SPACING: space required after that close brace '}'
#288: FILE: drivers/net/wan/wanxl.c:67:
+}card_status_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#290: FILE: drivers/net/wan/wanxl.c:69:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#291: FILE: drivers/net/wan/wanxl.c:70:
+typedef struct card_t {

ERROR:SPACING: space required after that close brace '}'
#302: FILE: drivers/net/wan/wanxl.c:81:
+}card_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#304: FILE: drivers/net/wan/wanxl.c:83:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#306: FILE: drivers/net/wan/wanxl.c:85:
+static inline port_t* hdlc_to_port(hdlc_device *hdlc)

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: drivers/net/wan/wanxl.c:87:
+        return (port_t*)hdlc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: drivers/net/wan/wanxl.c:87:
+        return (port_t*)hdlc;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#308: FILE: drivers/net/wan/wanxl.c:87:
+        return (port_t*)hdlc;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#311: FILE: drivers/net/wan/wanxl.c:90:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#312: FILE: drivers/net/wan/wanxl.c:91:
+static inline port_t* dev_to_port(struct net_device *dev)

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: drivers/net/wan/wanxl.c:93:
+        return hdlc_to_port(dev_to_hdlc(dev));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: drivers/net/wan/wanxl.c:93:
+        return hdlc_to_port(dev_to_hdlc(dev));$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#317: FILE: drivers/net/wan/wanxl.c:96:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#318: FILE: drivers/net/wan/wanxl.c:97:
+static inline struct net_device *port_to_dev(port_t* port)

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: drivers/net/wan/wanxl.c:99:
+        return hdlc_to_dev(&port->hdlc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: drivers/net/wan/wanxl.c:99:
+        return hdlc_to_dev(&port->hdlc);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#323: FILE: drivers/net/wan/wanxl.c:102:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#324: FILE: drivers/net/wan/wanxl.c:103:
+static inline const char* port_name(port_t *port)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#326: FILE: drivers/net/wan/wanxl.c:105:
+	return hdlc_to_name((hdlc_device*)port);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#329: FILE: drivers/net/wan/wanxl.c:108:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#330: FILE: drivers/net/wan/wanxl.c:109:
+static inline const char* card_name(struct pci_dev *pdev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#335: FILE: drivers/net/wan/wanxl.c:114:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#336: FILE: drivers/net/wan/wanxl.c:115:
+static inline port_status_t* get_status(port_t *port)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#341: FILE: drivers/net/wan/wanxl.c:120:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#347: FILE: drivers/net/wan/wanxl.c:126:
+	dma_addr_t addr = pci_map_single(pdev, ptr, size, direction);
+	if (addr + size > 0x100000000LL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#348: FILE: drivers/net/wan/wanxl.c:127:
+		printk(KERN_CRIT "wanXL %s: pci_map_single() returned memory"

WARNING:SPLIT_STRING: quoted string split across lines
#349: FILE: drivers/net/wan/wanxl.c:128:
+		printk(KERN_CRIT "wanXL %s: pci_map_single() returned memory"
+		       " at 0x%X!\n", card_name(pdev), addr);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#357: FILE: drivers/net/wan/wanxl.c:136:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#365: FILE: drivers/net/wan/wanxl.c:144:
+	switch(value & 0x7) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#366: FILE: drivers/net/wan/wanxl.c:145:
+	case STATUS_CABLE_V35: cable = "V.35"; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#367: FILE: drivers/net/wan/wanxl.c:146:
+	case STATUS_CABLE_X21: cable = "X.21"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#368: FILE: drivers/net/wan/wanxl.c:147:
+	case STATUS_CABLE_V24: cable = "V.24"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#369: FILE: drivers/net/wan/wanxl.c:148:
+	case STATUS_CABLE_EIA530: cable = "EIA530"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#370: FILE: drivers/net/wan/wanxl.c:149:
+	case STATUS_CABLE_NONE: cable = "no"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#371: FILE: drivers/net/wan/wanxl.c:150:
+	default: cable = "invalid";

ERROR:SPACING: space required before the open parenthesis '('
#374: FILE: drivers/net/wan/wanxl.c:153:
+	switch((value >> STATUS_CABLE_PM_SHIFT) & 0x7) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#375: FILE: drivers/net/wan/wanxl.c:154:
+	case STATUS_CABLE_V35: pm = "V.35"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#376: FILE: drivers/net/wan/wanxl.c:155:
+	case STATUS_CABLE_X21: pm = "X.21"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#377: FILE: drivers/net/wan/wanxl.c:156:
+	case STATUS_CABLE_V24: pm = "V.24"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#378: FILE: drivers/net/wan/wanxl.c:157:
+	case STATUS_CABLE_EIA530: pm = "EIA530"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#379: FILE: drivers/net/wan/wanxl.c:158:
+	case STATUS_CABLE_NONE: pm = "no personality"; valid = 0; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#380: FILE: drivers/net/wan/wanxl.c:159:
+	default: pm = "invalid personality"; valid = 0;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#392: FILE: drivers/net/wan/wanxl.c:171:
+	printk(KERN_INFO "%s: %s%s module, %s cable%s%s\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#398: FILE: drivers/net/wan/wanxl.c:177:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: drivers/net/wan/wanxl.c:183:
+                desc_t *desc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: drivers/net/wan/wanxl.c:183:
+                desc_t *desc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: drivers/net/wan/wanxl.c:202:
+                desc->stat = PACKET_EMPTY; /* Free descriptor */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: drivers/net/wan/wanxl.c:202:
+                desc->stat = PACKET_EMPTY; /* Free descriptor */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: drivers/net/wan/wanxl.c:206:
+                port->tx_in = (port->tx_in + 1) % TX_BUFFERS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: drivers/net/wan/wanxl.c:206:
+                port->tx_in = (port->tx_in + 1) % TX_BUFFERS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: drivers/net/wan/wanxl.c:207:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: drivers/net/wan/wanxl.c:207:
+        }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#431: FILE: drivers/net/wan/wanxl.c:210:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#437: FILE: drivers/net/wan/wanxl.c:216:
+	desc_t *desc;
+	while(desc = &card->status->rx_descs[card->rx_in],

ERROR:SPACING: space required before the open parenthesis '('
#437: FILE: drivers/net/wan/wanxl.c:216:
+	while(desc = &card->status->rx_descs[card->rx_in],

CHECK:BRACES: braces {} should be used on all arms of this statement
#443: FILE: drivers/net/wan/wanxl.c:222:
+		if ((desc->stat & PACKET_PORT_MASK) > card->n_ports)
[...]
+		else if (!skb)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#444: FILE: drivers/net/wan/wanxl.c:223:
+			printk(KERN_CRIT "wanXL %s: received packet for"

WARNING:SPLIT_STRING: quoted string split across lines
#445: FILE: drivers/net/wan/wanxl.c:224:
+			printk(KERN_CRIT "wanXL %s: received packet for"
+			       " nonexistent port\n", card_name(card->pdev));

CHECK:BRACES: Unbalanced braces around else statement
#450: FILE: drivers/net/wan/wanxl.c:229:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#456: FILE: drivers/net/wan/wanxl.c:235:
+			printk(KERN_DEBUG "%s RX(%i):", port_name(port),

CHECK:LINE_SPACING: Please don't use multiple blank lines
#483: FILE: drivers/net/wan/wanxl.c:262:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#485: FILE: drivers/net/wan/wanxl.c:264:
+static irqreturn_t wanxl_intr(int irq, void* dev_id, struct pt_regs *regs)

ERROR:CODE_INDENT: code indent should use tabs where possible
#487: FILE: drivers/net/wan/wanxl.c:266:
+        card_t *card = dev_id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: drivers/net/wan/wanxl.c:266:
+        card_t *card = dev_id;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#488: FILE: drivers/net/wan/wanxl.c:267:
+        int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: drivers/net/wan/wanxl.c:267:
+        int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: drivers/net/wan/wanxl.c:268:
+        u32 stat;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: drivers/net/wan/wanxl.c:268:
+        u32 stat;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: drivers/net/wan/wanxl.c:269:
+        int handled = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: drivers/net/wan/wanxl.c:269:
+        int handled = 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#492: FILE: drivers/net/wan/wanxl.c:271:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#493: FILE: drivers/net/wan/wanxl.c:272:
+        while((stat = readl(card->plx + PLX_DOORBELL_FROM_CARD)) != 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: drivers/net/wan/wanxl.c:272:
+        while((stat = readl(card->plx + PLX_DOORBELL_FROM_CARD)) != 0) {$

ERROR:SPACING: space required before the open parenthesis '('
#493: FILE: drivers/net/wan/wanxl.c:272:
+        while((stat = readl(card->plx + PLX_DOORBELL_FROM_CARD)) != 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#494: FILE: drivers/net/wan/wanxl.c:273:
+                handled = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: drivers/net/wan/wanxl.c:273:
+                handled = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: drivers/net/wan/wanxl.c:276:
+                for (i = 0; i < card->n_ports; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: drivers/net/wan/wanxl.c:276:
+                for (i = 0; i < card->n_ports; i++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#505: FILE: drivers/net/wan/wanxl.c:284:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: drivers/net/wan/wanxl.c:284:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#507: FILE: drivers/net/wan/wanxl.c:286:
+        return IRQ_RETVAL(handled);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: drivers/net/wan/wanxl.c:286:
+        return IRQ_RETVAL(handled);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#510: FILE: drivers/net/wan/wanxl.c:289:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#515: FILE: drivers/net/wan/wanxl.c:294:
+        port_t *port = hdlc_to_port(hdlc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: drivers/net/wan/wanxl.c:294:
+        port_t *port = hdlc_to_port(hdlc);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#517: FILE: drivers/net/wan/wanxl.c:296:
+        spin_lock(&port->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: drivers/net/wan/wanxl.c:296:
+        spin_lock(&port->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#520: FILE: drivers/net/wan/wanxl.c:299:
+        if (desc->stat != PACKET_EMPTY) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: drivers/net/wan/wanxl.c:299:
+        if (desc->stat != PACKET_EMPTY) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#521: FILE: drivers/net/wan/wanxl.c:300:
+                /* should never happen - previous xmit should stop queue */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#523: FILE: drivers/net/wan/wanxl.c:302:
+                printk(KERN_DEBUG "%s: transmitter buffer full\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: drivers/net/wan/wanxl.c:302:
+                printk(KERN_DEBUG "%s: transmitter buffer full\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#523: FILE: drivers/net/wan/wanxl.c:302:
+                printk(KERN_DEBUG "%s: transmitter buffer full\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#532: FILE: drivers/net/wan/wanxl.c:311:
+	printk(KERN_DEBUG "%s TX(%i):", port_name(port), skb->len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#550: FILE: drivers/net/wan/wanxl.c:329:
+		printk(KERN_DEBUG "%s: transmitter buffer full\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#559: FILE: drivers/net/wan/wanxl.c:338:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#582: FILE: drivers/net/wan/wanxl.c:361:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#631: FILE: drivers/net/wan/wanxl.c:410:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: drivers/net/wan/wanxl.c:410:
+        }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#634: FILE: drivers/net/wan/wanxl.c:413:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#645: FILE: drivers/net/wan/wanxl.c:424:
+		printk(KERN_ERR "%s: port already open\n", port_name(port));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#648: FILE: drivers/net/wan/wanxl.c:427:
+	if ((i = hdlc_open(hdlc)) != 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#651: FILE: drivers/net/wan/wanxl.c:430:
+	port->tx_in = port->tx_out = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#658: FILE: drivers/net/wan/wanxl.c:437:
+	do
[...]
+			return 0;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#663: FILE: drivers/net/wan/wanxl.c:442:
+	printk(KERN_ERR "%s: unable to open port\n", port_name(port));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#669: FILE: drivers/net/wan/wanxl.c:448:
+
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#684: FILE: drivers/net/wan/wanxl.c:463:
+	do
[...]
+			break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#690: FILE: drivers/net/wan/wanxl.c:469:
+		printk(KERN_ERR "%s: unable to close port\n", port_name(port));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#706: FILE: drivers/net/wan/wanxl.c:485:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#712: FILE: drivers/net/wan/wanxl.c:491:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#717: FILE: drivers/net/wan/wanxl.c:496:
+        return &hdlc->stats;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: drivers/net/wan/wanxl.c:496:
+        return &hdlc->stats;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#720: FILE: drivers/net/wan/wanxl.c:499:
+
+

ERROR:SPACING: space required after that close brace '}'
#732: FILE: drivers/net/wan/wanxl.c:511:
+	}while (time_after(timeout, jiffies));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#737: FILE: drivers/net/wan/wanxl.c:516:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#751: FILE: drivers/net/wan/wanxl.c:530:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#788: FILE: drivers/net/wan/wanxl.c:567:
+
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#791: FILE: drivers/net/wan/wanxl.c:570:
+static int __devinit wanxl_pci_init_one(struct pci_dev *pdev,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#807: FILE: drivers/net/wan/wanxl.c:586:
+	/* QUICC can only access first 256 MB of host RAM directly,
+	   but PLX9060 DMA does 32-bits for actual packet data transfers */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#807: FILE: drivers/net/wan/wanxl.c:586:
+	   but PLX9060 DMA does 32-bits for actual packet data transfers */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#810: FILE: drivers/net/wan/wanxl.c:589:
+	/* FIXME when PCI/DMA subsystems are fixed.
+	   We set both dma_mask and consistent_dma_mask to 28 bits

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#812: FILE: drivers/net/wan/wanxl.c:591:
+	   work on most platforms */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#815: FILE: drivers/net/wan/wanxl.c:594:
+		printk(KERN_ERR "No usable DMA configuration\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#824: FILE: drivers/net/wan/wanxl.c:603:
+	case PCI_DEVICE_ID_SBE_WANXL100: ports = 1; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#825: FILE: drivers/net/wan/wanxl.c:604:
+	case PCI_DEVICE_ID_SBE_WANXL200: ports = 2; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#826: FILE: drivers/net/wan/wanxl.c:605:
+	default: ports = 4;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!card"
#831: FILE: drivers/net/wan/wanxl.c:610:
+	if (card == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#832: FILE: drivers/net/wan/wanxl.c:611:
+		printk(KERN_ERR "wanXL %s: unable to allocate memory\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!card->status"
#845: FILE: drivers/net/wan/wanxl.c:624:
+	if (card->status == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#851: FILE: drivers/net/wan/wanxl.c:630:
+	printk(KERN_DEBUG "wanXL %s: pci_alloc_consistent() returned memory"

WARNING:SPLIT_STRING: quoted string split across lines
#852: FILE: drivers/net/wan/wanxl.c:631:
+	printk(KERN_DEBUG "wanXL %s: pci_alloc_consistent() returned memory"
+	       " at 0x%X\n", card_name(pdev), card->status_address);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#856: FILE: drivers/net/wan/wanxl.c:635:
+	/* FIXME when PCI/DMA subsystems are fixed.
+	   We set both dma_mask and consistent_dma_mask back to 32 bits

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#857: FILE: drivers/net/wan/wanxl.c:636:
+	   to indicate the card can do 32-bit DMA addressing */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#860: FILE: drivers/net/wan/wanxl.c:639:
+		printk(KERN_ERR "No usable DMA configuration\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#868: FILE: drivers/net/wan/wanxl.c:647:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#868: FILE: drivers/net/wan/wanxl.c:647:
+  $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#876: FILE: drivers/net/wan/wanxl.c:655:
+			printk(KERN_WARNING "wanXL %s: timeout waiting for"

WARNING:SPLIT_STRING: quoted string split across lines
#877: FILE: drivers/net/wan/wanxl.c:656:
+			printk(KERN_WARNING "wanXL %s: timeout waiting for"
+			       " PUTS to complete\n", card_name(pdev));

ERROR:SPACING: space required before the open parenthesis '('
#882: FILE: drivers/net/wan/wanxl.c:661:
+		switch(stat & 0xC0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#888: FILE: drivers/net/wan/wanxl.c:667:
+			printk(KERN_WARNING "wanXL %s: PUTS test 0x%X"

WARNING:SPLIT_STRING: quoted string split across lines
#889: FILE: drivers/net/wan/wanxl.c:668:
+			printk(KERN_WARNING "wanXL %s: PUTS test 0x%X"
+			       " failed\n", card_name(pdev), stat & 0x30);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#903: FILE: drivers/net/wan/wanxl.c:682:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#907: FILE: drivers/net/wan/wanxl.c:686:
+		printk(KERN_WARNING "wanXL %s: no enough on-board RAM"

WARNING:SPLIT_STRING: quoted string split across lines
#908: FILE: drivers/net/wan/wanxl.c:687:
+		printk(KERN_WARNING "wanXL %s: no enough on-board RAM"
+		       " (%u bytes detected, %u bytes required)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#916: FILE: drivers/net/wan/wanxl.c:695:
+		printk(KERN_WARNING "wanXL %s: unable to Set Byte Swap"

WARNING:SPLIT_STRING: quoted string split across lines
#917: FILE: drivers/net/wan/wanxl.c:696:
+		printk(KERN_WARNING "wanXL %s: unable to Set Byte Swap"
+		       " Mode\n", card_name(pdev));

WARNING:LINE_SPACING: Missing a blank line after declarations
#926: FILE: drivers/net/wan/wanxl.c:705:
+		struct net_device *dev = hdlc_to_dev(&port->hdlc);
+		spin_lock_init(&port->lock);

ERROR:SPACING: space required before the open parenthesis '('
#934: FILE: drivers/net/wan/wanxl.c:713:
+		if(register_hdlc_device(&port->hdlc)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#935: FILE: drivers/net/wan/wanxl.c:714:
+			printk(KERN_ERR "wanXL %s: unable to register hdlc"

WARNING:SPLIT_STRING: quoted string split across lines
#936: FILE: drivers/net/wan/wanxl.c:715:
+			printk(KERN_ERR "wanXL %s: unable to register hdlc"
+			       " device\n", card_name(pdev));

WARNING:LINE_SPACING: Missing a blank line after declarations
#949: FILE: drivers/net/wan/wanxl.c:728:
+		struct sk_buff *skb = dev_alloc_skb(BUFFER_LENGTH);
+		card->rx_skbs[i] = skb;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#959: FILE: drivers/net/wan/wanxl.c:738:
+		writel(htonl(*(u32*)(firmware + i)), mem + PDM_OFFSET + i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#972: FILE: drivers/net/wan/wanxl.c:751:
+		printk(KERN_WARNING "wanXL %s: unable to Abort and Jump\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#981: FILE: drivers/net/wan/wanxl.c:760:
+		if ((stat = readl(card->plx + PLX_MAILBOX_5)) != 0)

ERROR:SPACING: space required after that close brace '}'
#984: FILE: drivers/net/wan/wanxl.c:763:
+	}while (time_after(timeout, jiffies));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#987: FILE: drivers/net/wan/wanxl.c:766:
+		printk(KERN_WARNING "wanXL %s: timeout while initializing card"

WARNING:SPLIT_STRING: quoted string split across lines
#988: FILE: drivers/net/wan/wanxl.c:767:
+		printk(KERN_WARNING "wanXL %s: timeout while initializing card"
+		       "firmware\n", card_name(pdev));

WARNING:MISSING_SPACE: break quoted strings at a space character
#988: FILE: drivers/net/wan/wanxl.c:767:
+		printk(KERN_WARNING "wanXL %s: timeout while initializing card"
+		       "firmware\n", card_name(pdev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#997: FILE: drivers/net/wan/wanxl.c:776:
+	printk(KERN_INFO "wanXL %s: at 0x%X, %u KB of RAM at 0x%X, irq"

WARNING:SPLIT_STRING: quoted string split across lines
#998: FILE: drivers/net/wan/wanxl.c:777:
+	printk(KERN_INFO "wanXL %s: at 0x%X, %u KB of RAM at 0x%X, irq"
+	       " %u\n" KERN_INFO "wanXL %s: port", card_name(pdev),

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1002: FILE: drivers/net/wan/wanxl.c:781:
+		printk("%s #%i: %s", i ? "," : "", i,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1004: FILE: drivers/net/wan/wanxl.c:783:
+	printk("\n");

ERROR:SPACING: space required before the open parenthesis '('
#1007: FILE: drivers/net/wan/wanxl.c:786:
+	if(request_irq(pdev->irq, wanxl_intr, SA_SHIRQ, "wanXL", card)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1008: FILE: drivers/net/wan/wanxl.c:787:
+		printk(KERN_WARNING "wanXL %s: could not allocate IRQ%i.\n",

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1018: FILE: drivers/net/wan/wanxl.c:797:
+static struct pci_device_id wanxl_pci_tbl[] __devinitdata = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1028: FILE: drivers/net/wan/wanxl.c:807:
+
+

WARNING:INDENTED_LABEL: labels should not be indented
#1030: FILE: drivers/net/wan/wanxl.c:809:
+	name:           "wanXL",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1031: FILE: drivers/net/wan/wanxl.c:810:
+	id_table:       wanxl_pci_tbl,
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1031: FILE: drivers/net/wan/wanxl.c:810:
+	id_table:       wanxl_pci_tbl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1032: FILE: drivers/net/wan/wanxl.c:811:
+	probe:          wanxl_pci_init_one,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#1032: FILE: drivers/net/wan/wanxl.c:811:
+	probe:          wanxl_pci_init_one,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1033: FILE: drivers/net/wan/wanxl.c:812:
+	remove:         wanxl_pci_remove_one,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#1033: FILE: drivers/net/wan/wanxl.c:812:
+	remove:         wanxl_pci_remove_one,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1036: FILE: drivers/net/wan/wanxl.c:815:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1040: FILE: drivers/net/wan/wanxl.c:819:
+	printk(KERN_INFO "%s\n", version);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1050: FILE: drivers/net/wan/wanxl.c:829:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1061: FILE: drivers/net/wan/wanxlfw.S:1:
+.psize 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1194: FILE: drivers/net/wan/wanxlfw.S:134:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1439: FILE: drivers/net/wan/wanxlfw.S:379:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1459: FILE: drivers/net/wan/wanxlfw.S:399:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1492: FILE: drivers/net/wan/wanxlfw.S:432:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1698: FILE: drivers/net/wan/wanxlfw.S:638:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000337054.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 77 errors, 96 warnings, 36 checks, 2096 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000337054.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
