CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#98: FILE: fs/mpage.c:577:
+			if ((current->flags & PF_MEMALLOC) &&
+					!PageActive(page) && PageLRU(page)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: mm/filemap.c:557:
+int add_to_page_cache_lru(struct page *page,
+		struct address_space *mapping, pgoff_t offset)

WARNING:LINE_SPACING: Missing a blank line after declarations
#147: FILE: mm/filemap.c:560:
+	int ret = add_to_page_cache(page, mapping, offset);
+	if (ret == 0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: mm/filemap.c:1785:
+__grab_cache_page(struct address_space *mapping, unsigned long index,
+			struct page **cached_page, struct pagevec *lru_pvec)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#338: FILE: include/linux/pagemap.h:61:
+extern int add_to_page_cache_lru(struct page *page,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#339: FILE: include/linux/pagemap.h:62:
+extern int add_to_page_cache_lru(struct page *page,
+		struct address_space *mapping, unsigned long index);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440383.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 1 warnings, 5 checks, 247 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440383.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
