CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#36: 
Em Dom, 2005-11-06 às 13:33 -0500, Lee Revell escreveu:
                   ^

WARNING:TYPO_SPELLING: 'funcion' may be misspelled - perhaps 'function'?
#50: 
funcion on this device.
^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#68: 
 media/video/saa7134/saa7134-alsa.c   | 1061 +++++++++++++++++++++++++++++++++

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#86: FILE: media/video/saa7134/saa7134-alsa.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#103: FILE: media/video/saa7134/saa7134-alsa.c:18:
+ *   along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#104: FILE: media/video/saa7134/saa7134-alsa.c:19:
+ *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#124: FILE: media/video/saa7134/saa7134-alsa.c:39:
+static unsigned int debug  = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#126: FILE: media/video/saa7134/saa7134-alsa.c:41:
+MODULE_PARM_DESC(debug,"enable debug messages [alsa]");
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#128: FILE: media/video/saa7134/saa7134-alsa.c:43:
+unsigned int dsp_nr = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#137: FILE: media/video/saa7134/saa7134-alsa.c:52:
+#define MAX_BUFFER_SIZE		(256*1024)
                        		    ^

WARNING:LONG_LINE: line length of 177 exceeds 100 columns
#138: FILE: media/video/saa7134/saa7134-alsa.c:53:
+#define USE_FORMATS 		SNDRV_PCM_FMTBIT_S16_LE | SNDRV_PCM_FMTBIT_S16_BE | SNDRV_PCM_FMTBIT_S8 | SNDRV_PCM_FMTBIT_U8 | SNDRV_PCM_FMTBIT_U16_LE | SNDRV_PCM_FMTBIT_U16_BE

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#138: FILE: media/video/saa7134/saa7134-alsa.c:53:
+#define USE_FORMATS ^I^ISNDRV_PCM_FMTBIT_S16_LE | SNDRV_PCM_FMTBIT_S16_BE | SNDRV_PCM_FMTBIT_S8 | SNDRV_PCM_FMTBIT_U8 | SNDRV_PCM_FMTBIT_U16_LE | SNDRV_PCM_FMTBIT_U16_BE$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#138: FILE: media/video/saa7134/saa7134-alsa.c:53:
+#define USE_FORMATS 		SNDRV_PCM_FMTBIT_S16_LE | SNDRV_PCM_FMTBIT_S16_BE | SNDRV_PCM_FMTBIT_S8 | SNDRV_PCM_FMTBIT_U8 | SNDRV_PCM_FMTBIT_U16_LE | SNDRV_PCM_FMTBIT_U16_BE

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#139: FILE: media/video/saa7134/saa7134-alsa.c:54:
+#define USE_RATE		SNDRV_PCM_RATE_32000 | SNDRV_PCM_RATE_48000

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#142: FILE: media/video/saa7134/saa7134-alsa.c:57:
+#define USE_CHANNELS_MIN ^I1$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#143: FILE: media/video/saa7134/saa7134-alsa.c:58:
+#define USE_CHANNELS_MAX ^I2$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#145: FILE: media/video/saa7134/saa7134-alsa.c:60:
+#define USE_PERIODS_MIN ^I2$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#148: FILE: media/video/saa7134/saa7134-alsa.c:63:
+#define USE_PERIODS_MAX ^I1024$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#156: FILE: media/video/saa7134/saa7134-alsa.c:71:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#161: FILE: media/video/saa7134/saa7134-alsa.c:76:
+#define dprintk(fmt, arg...)    if (debug) \
+	printk(KERN_DEBUG "%s/alsa: " fmt, dev->name, ## arg)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#162: FILE: media/video/saa7134/saa7134-alsa.c:77:
+	printk(KERN_DEBUG "%s/alsa: " fmt, dev->name, ## arg)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#164: FILE: media/video/saa7134/saa7134-alsa.c:79:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#169: FILE: media/video/saa7134/saa7134-alsa.c:84:
+typedef struct snd_card_saa7134 {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#171: FILE: media/video/saa7134/saa7134-alsa.c:86:
+	spinlock_t mixer_lock;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#172: FILE: media/video/saa7134/saa7134-alsa.c:87:
+	int mixer_volume[MIXER_ADDR_LAST+1][2];
 	                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#173: FILE: media/video/saa7134/saa7134-alsa.c:88:
+	int capture_source[MIXER_ADDR_LAST+1][2];
 	                                  ^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#180: FILE: media/video/saa7134/saa7134-alsa.c:95:
+	spinlock_t lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#183: FILE: media/video/saa7134/saa7134-alsa.c:98:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#189: FILE: media/video/saa7134/saa7134-alsa.c:104:
+typedef struct snd_card_saa7134_pcm {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#192: FILE: media/video/saa7134/saa7134-alsa.c:107:
+	spinlock_t lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#201: FILE: media/video/saa7134/saa7134-alsa.c:116:
+
+

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#253: FILE: media/video/saa7134/saa7134-alsa.c:168:
+	if (UNSET == dev->oss.dma_blk) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#268: FILE: media/video/saa7134/saa7134-alsa.c:183:
+	if (0 == reg) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#274: FILE: media/video/saa7134/saa7134-alsa.c:189:
+	if (dev->oss.read_count >= dev->oss.blksize * (dev->oss.blocks-2)) {
 	                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#275: FILE: media/video/saa7134/saa7134-alsa.c:190:
+		dprintk("irq: overrun [full=%d/%d] - Blocks in %d\n",dev->oss.read_count,
 		                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#283: FILE: media/video/saa7134/saa7134-alsa.c:198:
+	saa_writel(reg,next_blk * dev->oss.blksize);
 	              ^

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#287: FILE: media/video/saa7134/saa7134-alsa.c:202:
+			next_blk * dev->oss.blksize, dev->oss.blocks, dev->oss.blksize, dev->oss.read_count);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#303: FILE: media/video/saa7134/saa7134-alsa.c:218:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#315: FILE: media/video/saa7134/saa7134-alsa.c:230:
+	struct saa7134_dev *dev = (struct saa7134_dev*) dev_id;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#315: FILE: media/video/saa7134/saa7134-alsa.c:230:
+	struct saa7134_dev *dev = (struct saa7134_dev*) dev_id;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#325: FILE: media/video/saa7134/saa7134-alsa.c:240:
+			saa_writel(SAA7134_IRQ_REPORT,report);
 			                             ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#332: FILE: media/video/saa7134/saa7134-alsa.c:247:
+	if (loop == 10) {
+		dprintk("error! looping IRQ!");
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#350: FILE: media/video/saa7134/saa7134-alsa.c:265:
+static int snd_card_saa7134_capture_trigger(snd_pcm_substream_t * substream,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: media/video/saa7134/saa7134-alsa.c:266:
+static int snd_card_saa7134_capture_trigger(snd_pcm_substream_t * substream,
+					  int cmd)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#377: FILE: media/video/saa7134/saa7134-alsa.c:292:
+	if ((blksize * blocks) > 1024*1024)
 	                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#378: FILE: media/video/saa7134/saa7134-alsa.c:293:
+		blocks = 1024*1024 / blksize;
 		             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#385: FILE: media/video/saa7134/saa7134-alsa.c:300:
+		blocks,blksize,blksize * blocks / 1024);
 		      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#385: FILE: media/video/saa7134/saa7134-alsa.c:300:
+		blocks,blksize,blksize * blocks / 1024);
 		              ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#405: FILE: media/video/saa7134/saa7134-alsa.c:320:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#409: FILE: media/video/saa7134/saa7134-alsa.c:324:
+	if (0 != err)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#426: FILE: media/video/saa7134/saa7134-alsa.c:341:
+static int snd_card_saa7134_capture_prepare(snd_pcm_substream_t * substream)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#437: FILE: media/video/saa7134/saa7134-alsa.c:352:
+	unsigned count;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#452: FILE: media/video/saa7134/saa7134-alsa.c:367:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#453: FILE: media/video/saa7134/saa7134-alsa.c:368:
+	dev=saa7134->saadev;
 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#455: FILE: media/video/saa7134/saa7134-alsa.c:370:
+	dsp_buffer_conf(dev,saapcm->pcm_count,(saapcm->pcm_size/saapcm->pcm_count));
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#455: FILE: media/video/saa7134/saa7134-alsa.c:370:
+	dsp_buffer_conf(dev,saapcm->pcm_count,(saapcm->pcm_size/saapcm->pcm_count));
 	                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#455: FILE: media/video/saa7134/saa7134-alsa.c:370:
+	dsp_buffer_conf(dev,saapcm->pcm_count,(saapcm->pcm_size/saapcm->pcm_count));
 	                                                       ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#458: FILE: media/video/saa7134/saa7134-alsa.c:373:
+	if (0 != err)

ERROR:SPACING: space required after that ',' (ctx:VxO)
#462: FILE: media/video/saa7134/saa7134-alsa.c:377:
+	if (0 != (err = videobuf_dma_pci_map(dev->pci,&dev->oss.dma)))
 	                                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#462: FILE: media/video/saa7134/saa7134-alsa.c:377:
+	if (0 != (err = videobuf_dma_pci_map(dev->pci,&dev->oss.dma)))
 	                                              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#462: FILE: media/video/saa7134/saa7134-alsa.c:377:
+	if (0 != (err = videobuf_dma_pci_map(dev->pci,&dev->oss.dma)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required after that ',' (ctx:VxO)
#464: FILE: media/video/saa7134/saa7134-alsa.c:379:
+	if (0 != (err = saa7134_pgtable_alloc(dev->pci,&dev->oss.pt)))
 	                                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#464: FILE: media/video/saa7134/saa7134-alsa.c:379:
+	if (0 != (err = saa7134_pgtable_alloc(dev->pci,&dev->oss.pt)))
 	                                               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#464: FILE: media/video/saa7134/saa7134-alsa.c:379:
+	if (0 != (err = saa7134_pgtable_alloc(dev->pci,&dev->oss.pt)))

ERROR:SPACING: space required after that ',' (ctx:VxO)
#466: FILE: media/video/saa7134/saa7134-alsa.c:381:
+	if (0 != (err = saa7134_pgtable_build(dev->pci,&dev->oss.pt,
 	                                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#466: FILE: media/video/saa7134/saa7134-alsa.c:381:
+	if (0 != (err = saa7134_pgtable_build(dev->pci,&dev->oss.pt,
 	                                               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#466: FILE: media/video/saa7134/saa7134-alsa.c:381:
+	if (0 != (err = saa7134_pgtable_build(dev->pci,&dev->oss.pt,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#472: FILE: media/video/saa7134/saa7134-alsa.c:387:
+
+

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#474: FILE: media/video/saa7134/saa7134-alsa.c:389:
+	switch (runtime->format) {
+	  case SNDRV_PCM_FORMAT_U8:
+	  case SNDRV_PCM_FORMAT_S8:
[...]
+	  case SNDRV_PCM_FORMAT_U16_LE:
+	  case SNDRV_PCM_FORMAT_U16_BE:
+	  case SNDRV_PCM_FORMAT_S16_LE:
+	  case SNDRV_PCM_FORMAT_S16_BE:
[...]
+	  default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:TABSTOP: Statements should start on a tabstop
#475: FILE: media/video/saa7134/saa7134-alsa.c:390:
+	  case SNDRV_PCM_FORMAT_U8:

WARNING:TABSTOP: Statements should start on a tabstop
#476: FILE: media/video/saa7134/saa7134-alsa.c:391:
+	  case SNDRV_PCM_FORMAT_S8:

WARNING:TABSTOP: Statements should start on a tabstop
#479: FILE: media/video/saa7134/saa7134-alsa.c:394:
+	  case SNDRV_PCM_FORMAT_U16_LE:

WARNING:TABSTOP: Statements should start on a tabstop
#480: FILE: media/video/saa7134/saa7134-alsa.c:395:
+	  case SNDRV_PCM_FORMAT_U16_BE:

WARNING:TABSTOP: Statements should start on a tabstop
#481: FILE: media/video/saa7134/saa7134-alsa.c:396:
+	  case SNDRV_PCM_FORMAT_S16_LE:

WARNING:TABSTOP: Statements should start on a tabstop
#482: FILE: media/video/saa7134/saa7134-alsa.c:397:
+	  case SNDRV_PCM_FORMAT_S16_BE:

WARNING:TABSTOP: Statements should start on a tabstop
#485: FILE: media/video/saa7134/saa7134-alsa.c:400:
+	  default:

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#490: FILE: media/video/saa7134/saa7134-alsa.c:405:
+	switch (runtime->format) {
+	  case SNDRV_PCM_FORMAT_S8:
+	  case SNDRV_PCM_FORMAT_S16_LE:
+	  case SNDRV_PCM_FORMAT_S16_BE:
[...]
+	  default:

WARNING:TABSTOP: Statements should start on a tabstop
#491: FILE: media/video/saa7134/saa7134-alsa.c:406:
+	  case SNDRV_PCM_FORMAT_S8:

WARNING:TABSTOP: Statements should start on a tabstop
#492: FILE: media/video/saa7134/saa7134-alsa.c:407:
+	  case SNDRV_PCM_FORMAT_S16_LE:

WARNING:TABSTOP: Statements should start on a tabstop
#493: FILE: media/video/saa7134/saa7134-alsa.c:408:
+	  case SNDRV_PCM_FORMAT_S16_BE:

WARNING:TABSTOP: Statements should start on a tabstop
#496: FILE: media/video/saa7134/saa7134-alsa.c:411:
+	  default:

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#501: FILE: media/video/saa7134/saa7134-alsa.c:416:
+	switch (runtime->format) {
+	  case SNDRV_PCM_FORMAT_U16_BE:
+	  case SNDRV_PCM_FORMAT_S16_BE:
[...]
+	  default:

WARNING:TABSTOP: Statements should start on a tabstop
#502: FILE: media/video/saa7134/saa7134-alsa.c:417:
+	  case SNDRV_PCM_FORMAT_U16_BE:

WARNING:TABSTOP: Statements should start on a tabstop
#503: FILE: media/video/saa7134/saa7134-alsa.c:418:
+	  case SNDRV_PCM_FORMAT_S16_BE:

WARNING:TABSTOP: Statements should start on a tabstop
#505: FILE: media/video/saa7134/saa7134-alsa.c:420:
+	  default:

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#509: FILE: media/video/saa7134/saa7134-alsa.c:424:
+	switch (dev->pci->device) {
+	  case PCI_DEVICE_ID_PHILIPS_SAA7134:
[...]
+	  case PCI_DEVICE_ID_PHILIPS_SAA7133:
+	  case PCI_DEVICE_ID_PHILIPS_SAA7135:

WARNING:TABSTOP: Statements should start on a tabstop
#510: FILE: media/video/saa7134/saa7134-alsa.c:425:
+	  case PCI_DEVICE_ID_PHILIPS_SAA7134:

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#511: FILE: media/video/saa7134/saa7134-alsa.c:426:
+		if (1 == runtime->channels)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#513: FILE: media/video/saa7134/saa7134-alsa.c:428:
+		if (2 == runtime->channels)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#518: FILE: media/video/saa7134/saa7134-alsa.c:433:
+		fmt |= (MIXER_ADDR_TVTUNER == dev->oss.input) ? 0xc0 : 0x80;

WARNING:TABSTOP: Statements should start on a tabstop
#525: FILE: media/video/saa7134/saa7134-alsa.c:440:
+	  case PCI_DEVICE_ID_PHILIPS_SAA7133:

WARNING:TABSTOP: Statements should start on a tabstop
#526: FILE: media/video/saa7134/saa7134-alsa.c:441:
+	  case PCI_DEVICE_ID_PHILIPS_SAA7135:

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#527: FILE: media/video/saa7134/saa7134-alsa.c:442:
+		if (1 == runtime->channels)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#529: FILE: media/video/saa7134/saa7134-alsa.c:444:
+		if (2 == runtime->channels)

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#533: FILE: media/video/saa7134/saa7134-alsa.c:448:
+		saa_writel(SAA7133_NUM_SAMPLES, dev->oss.blksize -1);
 		                                                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#550: FILE: media/video/saa7134/saa7134-alsa.c:465:
+	/* I should be able to use runtime->dma_addr in the control
+	   byte, but it doesn't work. So I allocate the DMA using the

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#551: FILE: media/video/saa7134/saa7134-alsa.c:466:
+	   V4L functions, and force ALSA to use that as the DMA area */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#555: FILE: media/video/saa7134/saa7134-alsa.c:470:
+	saa_writel(SAA7134_RS_BA1(6),0);
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#556: FILE: media/video/saa7134/saa7134-alsa.c:471:
+	saa_writel(SAA7134_RS_BA2(6),dev->oss.blksize);
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#557: FILE: media/video/saa7134/saa7134-alsa.c:472:
+	saa_writel(SAA7134_RS_PITCH(6),0);
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#558: FILE: media/video/saa7134/saa7134-alsa.c:473:
+	saa_writel(SAA7134_RS_CONTROL(6),control);
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#562: FILE: media/video/saa7134/saa7134-alsa.c:477:
+	spin_lock_irqsave(&dev->slock,flags);
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#564: FILE: media/video/saa7134/saa7134-alsa.c:479:
+	spin_unlock_irqrestore(&dev->slock,flags);
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#568: FILE: media/video/saa7134/saa7134-alsa.c:483:
+	saa7134_pgtable_free(dev->pci,&dev->oss.pt);
 	                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#568: FILE: media/video/saa7134/saa7134-alsa.c:483:
+	saa7134_pgtable_free(dev->pci,&dev->oss.pt);
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#570: FILE: media/video/saa7134/saa7134-alsa.c:485:
+	videobuf_dma_pci_unmap(dev->pci,&dev->oss.dma);
 	                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#570: FILE: media/video/saa7134/saa7134-alsa.c:485:
+	videobuf_dma_pci_unmap(dev->pci,&dev->oss.dma);
 	                                ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#573: FILE: media/video/saa7134/saa7134-alsa.c:488:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#574: FILE: media/video/saa7134/saa7134-alsa.c:489:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#587: FILE: media/video/saa7134/saa7134-alsa.c:502:
+static snd_pcm_uframes_t snd_card_saa7134_capture_pointer(snd_pcm_substream_t * substream)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#591: FILE: media/video/saa7134/saa7134-alsa.c:506:
+	struct saa7134_dev *dev=saapcm->saadev;
 	                       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#593: FILE: media/video/saa7134/saa7134-alsa.c:508:
+
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#610: FILE: media/video/saa7134/saa7134-alsa.c:525:
+static snd_pcm_hardware_t snd_card_saa7134_capture =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#635: FILE: media/video/saa7134/saa7134-alsa.c:550:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#647: FILE: media/video/saa7134/saa7134-alsa.c:562:
+static int snd_card_saa7134_hw_params(snd_pcm_substream_t * substream,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#648: FILE: media/video/saa7134/saa7134-alsa.c:563:
+static int snd_card_saa7134_hw_params(snd_pcm_substream_t * substream,
+				    snd_pcm_hw_params_t * hw_params)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#648: FILE: media/video/saa7134/saa7134-alsa.c:563:
+				    snd_pcm_hw_params_t * hw_params)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#650: FILE: media/video/saa7134/saa7134-alsa.c:565:
+{
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#653: FILE: media/video/saa7134/saa7134-alsa.c:568:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#654: FILE: media/video/saa7134/saa7134-alsa.c:569:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#667: FILE: media/video/saa7134/saa7134-alsa.c:582:
+static int snd_card_saa7134_hw_free(snd_pcm_substream_t * substream)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#682: FILE: media/video/saa7134/saa7134-alsa.c:597:
+		BUG();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#703: FILE: media/video/saa7134/saa7134-alsa.c:618:
+static int snd_card_saa7134_capture_close(snd_pcm_substream_t * substream)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#710: FILE: media/video/saa7134/saa7134-alsa.c:625:
+	spin_lock_irqsave(&dev->slock,flags);
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#712: FILE: media/video/saa7134/saa7134-alsa.c:627:
+	spin_unlock_irqrestore(&dev->slock,flags);
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#715: FILE: media/video/saa7134/saa7134-alsa.c:630:
+	saa7134_pgtable_free(dev->pci,&dev->oss.pt);
 	                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#715: FILE: media/video/saa7134/saa7134-alsa.c:630:
+	saa7134_pgtable_free(dev->pci,&dev->oss.pt);
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#716: FILE: media/video/saa7134/saa7134-alsa.c:631:
+	videobuf_dma_pci_unmap(dev->pci,&dev->oss.dma);
 	                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#716: FILE: media/video/saa7134/saa7134-alsa.c:631:
+	videobuf_dma_pci_unmap(dev->pci,&dev->oss.dma);
 	                                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#732: FILE: media/video/saa7134/saa7134-alsa.c:647:
+static int snd_card_saa7134_capture_open(snd_pcm_substream_t * substream)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!saapcm"
#750: FILE: media/video/saa7134/saa7134-alsa.c:665:
+	if (saapcm == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#752: FILE: media/video/saa7134/saa7134-alsa.c:667:
+	saapcm->saadev=saa7134->saadev;
 	              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#761: FILE: media/video/saa7134/saa7134-alsa.c:676:
+	if ((err = snd_pcm_hw_constraint_integer(runtime, SNDRV_PCM_HW_PARAM_PERIODS)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#795: FILE: media/video/saa7134/saa7134-alsa.c:710:
+	if ((err = snd_pcm_new(saa7134->card, "SAA7134 PCM", device, 0, 1, &pcm)) < 0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: media/video/saa7134/saa7134-alsa.c:721:
+  .info = snd_saa7134_volume_info, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#807: FILE: media/video/saa7134/saa7134-alsa.c:722:
+  .get = snd_saa7134_volume_get, .put = snd_saa7134_volume_put, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#808: FILE: media/video/saa7134/saa7134-alsa.c:723:
+  .private_value = addr }$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#810: FILE: media/video/saa7134/saa7134-alsa.c:725:
+static int snd_saa7134_volume_info(snd_kcontrol_t * kcontrol, snd_ctl_elem_info_t * uinfo)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#810: FILE: media/video/saa7134/saa7134-alsa.c:725:
+static int snd_saa7134_volume_info(snd_kcontrol_t * kcontrol, snd_ctl_elem_info_t * uinfo)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#819: FILE: media/video/saa7134/saa7134-alsa.c:734:
+static int snd_saa7134_volume_get(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#819: FILE: media/video/saa7134/saa7134-alsa.c:734:
+static int snd_saa7134_volume_get(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#832: FILE: media/video/saa7134/saa7134-alsa.c:747:
+static int snd_saa7134_volume_put(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#832: FILE: media/video/saa7134/saa7134-alsa.c:747:
+static int snd_saa7134_volume_put(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#860: FILE: media/video/saa7134/saa7134-alsa.c:775:
+  .info = snd_saa7134_capsrc_info, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#861: FILE: media/video/saa7134/saa7134-alsa.c:776:
+  .get = snd_saa7134_capsrc_get, .put = snd_saa7134_capsrc_put, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#862: FILE: media/video/saa7134/saa7134-alsa.c:777:
+  .private_value = addr }$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#864: FILE: media/video/saa7134/saa7134-alsa.c:779:
+static int snd_saa7134_capsrc_info(snd_kcontrol_t * kcontrol, snd_ctl_elem_info_t * uinfo)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#864: FILE: media/video/saa7134/saa7134-alsa.c:779:
+static int snd_saa7134_capsrc_info(snd_kcontrol_t * kcontrol, snd_ctl_elem_info_t * uinfo)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#873: FILE: media/video/saa7134/saa7134-alsa.c:788:
+static int snd_saa7134_capsrc_get(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#873: FILE: media/video/saa7134/saa7134-alsa.c:788:
+static int snd_saa7134_capsrc_get(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#886: FILE: media/video/saa7134/saa7134-alsa.c:801:
+static int snd_saa7134_capsrc_put(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#886: FILE: media/video/saa7134/saa7134-alsa.c:801:
+static int snd_saa7134_capsrc_put(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#906: FILE: media/video/saa7134/saa7134-alsa.c:821:
+	dev->oss.input=addr;
 	              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#909: FILE: media/video/saa7134/saa7134-alsa.c:824:
+
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#910: FILE: media/video/saa7134/saa7134-alsa.c:825:
+	if (change) {
+	  switch (dev->pci->device) {

WARNING:TABSTOP: Statements should start on a tabstop
#911: FILE: media/video/saa7134/saa7134-alsa.c:826:
+	  switch (dev->pci->device) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#911: FILE: media/video/saa7134/saa7134-alsa.c:826:
+	  switch (dev->pci->device) {
[...]
+	   case PCI_DEVICE_ID_PHILIPS_SAA7134:
[...]
+	   case PCI_DEVICE_ID_PHILIPS_SAA7133:
+	   case PCI_DEVICE_ID_PHILIPS_SAA7135:

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#912: FILE: media/video/saa7134/saa7134-alsa.c:827:
+	  switch (dev->pci->device) {
+

WARNING:TABSTOP: Statements should start on a tabstop
#913: FILE: media/video/saa7134/saa7134-alsa.c:828:
+	   case PCI_DEVICE_ID_PHILIPS_SAA7134:

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#914: FILE: media/video/saa7134/saa7134-alsa.c:829:
+		switch (addr) {
+			case MIXER_ADDR_TVTUNER:
[...]
+			case MIXER_ADDR_LINE1:
+			case MIXER_ADDR_LINE2:

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#921: FILE: media/video/saa7134/saa7134-alsa.c:836:
+				analog_io = (MIXER_ADDR_LINE1 == addr) ? 0x00 : 0x08;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#922: FILE: media/video/saa7134/saa7134-alsa.c:837:
+				rate = (32000 == dev->oss.rate) ? 0x01 : 0x03;

WARNING:TABSTOP: Statements should start on a tabstop
#930: FILE: media/video/saa7134/saa7134-alsa.c:845:
+	   case PCI_DEVICE_ID_PHILIPS_SAA7133:

WARNING:TABSTOP: Statements should start on a tabstop
#931: FILE: media/video/saa7134/saa7134-alsa.c:846:
+	   case PCI_DEVICE_ID_PHILIPS_SAA7135:

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#934: FILE: media/video/saa7134/saa7134-alsa.c:849:
+		switch (addr) {
+			case MIXER_ADDR_TVTUNER:
[...]
+			case MIXER_ADDR_LINE1:
[...]
+			case MIXER_ADDR_LINE2:

ERROR:CODE_INDENT: code indent should use tabs where possible
#947: FILE: media/video/saa7134/saa7134-alsa.c:862:
+^I    ^I/* output xbar always main channel */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#947: FILE: media/video/saa7134/saa7134-alsa.c:862:
+^I    ^I/* output xbar always main channel */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 18)
#950: FILE: media/video/saa7134/saa7134-alsa.c:865:
+		if (left || right) { // We've got data, turn the input on
+		  saa_dsp_writel(dev, SAA7133_DIGITAL_INPUT_XBAR1, xbarin);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 18)
#953: FILE: media/video/saa7134/saa7134-alsa.c:868:
+		} else {
+		  saa_dsp_writel(dev, SAA7133_DIGITAL_INPUT_XBAR1, 0);

WARNING:TABSTOP: Statements should start on a tabstop
#958: FILE: media/video/saa7134/saa7134-alsa.c:873:
+	  }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#981: FILE: media/video/saa7134/saa7134-alsa.c:896:
+static int snd_card_saa7134_new_mixer(snd_card_saa7134_t * chip)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "chip"
#987: FILE: media/video/saa7134/saa7134-alsa.c:902:
+	snd_assert(chip != NULL, return -EINVAL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#991: FILE: media/video/saa7134/saa7134-alsa.c:906:
+		if ((err = snd_ctl_add(card, snd_ctl_new1(&snd_saa7134_controls[idx], chip))) < 0)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1005: FILE: media/video/saa7134/saa7134-alsa.c:920:
+	snd_card_saa7134_t *chip = device->device_data;
+	return snd_saa7134_free(chip);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1016: FILE: media/video/saa7134/saa7134-alsa.c:931:
+int alsa_card_saa7134_create (struct saa7134_dev *saadev, unsigned int devicenum)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1027: FILE: media/video/saa7134/saa7134-alsa.c:942:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!card"
#1039: FILE: media/video/saa7134/saa7134-alsa.c:954:
+	if (card == NULL)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1047: FILE: media/video/saa7134/saa7134-alsa.c:962:
+	if (chip == NULL) {
+		return -ENOMEM;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#1047: FILE: media/video/saa7134/saa7134-alsa.c:962:
+	if (chip == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1062: FILE: media/video/saa7134/saa7134-alsa.c:977:
+	err = request_irq(chip->pci->irq, saa7134_alsa_irq,
+				SA_SHIRQ | SA_INTERRUPT, saadev->name, saadev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1065: FILE: media/video/saa7134/saa7134-alsa.c:980:
+		printk(KERN_ERR "%s: can't get IRQ %d for ALSA\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1066: FILE: media/video/saa7134/saa7134-alsa.c:981:
+		printk(KERN_ERR "%s: can't get IRQ %d for ALSA\n",
+			saadev->name, saadev->pci->irq);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1070: FILE: media/video/saa7134/saa7134-alsa.c:985:
+	if ((err = snd_device_new(card, SNDRV_DEV_LOWLEVEL, chip, &ops)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1075: FILE: media/video/saa7134/saa7134-alsa.c:990:
+	if ((err = snd_card_saa7134_new_mixer(chip)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1078: FILE: media/video/saa7134/saa7134-alsa.c:993:
+	if ((err = snd_card_saa7134_pcm(chip, 0)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1091: FILE: media/video/saa7134/saa7134-alsa.c:1006:
+	if ((err = snd_card_register(card)) == 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1112: FILE: media/video/saa7134/saa7134-alsa.c:1027:
+        struct saa7134_dev *saadev = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1112: FILE: media/video/saa7134/saa7134-alsa.c:1027:
+        struct saa7134_dev *saadev = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1113: FILE: media/video/saa7134/saa7134-alsa.c:1028:
+        struct list_head *list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1113: FILE: media/video/saa7134/saa7134-alsa.c:1028:
+        struct list_head *list;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1115: FILE: media/video/saa7134/saa7134-alsa.c:1030:
+	printk(KERN_INFO "saa7134 ALSA driver for DMA sound loaded\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1117: FILE: media/video/saa7134/saa7134-alsa.c:1032:
+        list_for_each(list,&saa7134_devlist) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1117: FILE: media/video/saa7134/saa7134-alsa.c:1032:
+        list_for_each(list,&saa7134_devlist) {$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1117: FILE: media/video/saa7134/saa7134-alsa.c:1032:
+        list_for_each(list,&saa7134_devlist) {
                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1117: FILE: media/video/saa7134/saa7134-alsa.c:1032:
+        list_for_each(list,&saa7134_devlist) {
                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1118: FILE: media/video/saa7134/saa7134-alsa.c:1033:
+                saadev = list_entry(list, struct saa7134_dev, devlist);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1118: FILE: media/video/saa7134/saa7134-alsa.c:1033:
+                saadev = list_entry(list, struct saa7134_dev, devlist);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1119: FILE: media/video/saa7134/saa7134-alsa.c:1034:
+		alsa_card_saa7134_create(saadev,dsp_nr);
 		                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1120: FILE: media/video/saa7134/saa7134-alsa.c:1035:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1120: FILE: media/video/saa7134/saa7134-alsa.c:1035:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1122: FILE: media/video/saa7134/saa7134-alsa.c:1037:
+^Iif (saadev == NULL) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!saadev"
#1122: FILE: media/video/saa7134/saa7134-alsa.c:1037:
+	if (saadev == NULL) 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1123: FILE: media/video/saa7134/saa7134-alsa.c:1038:
+		printk(KERN_INFO "saa7134 ALSA: no saa7134 cards found\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1127: FILE: media/video/saa7134/saa7134-alsa.c:1042:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1136: FILE: media/video/saa7134/saa7134-alsa.c:1051:
+	int idx;
+	for (idx = 0; idx < SNDRV_CARDS; idx++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1136: FILE: media/video/saa7134/saa7134-alsa.c:1051:
+	for (idx = 0; idx < SNDRV_CARDS; idx++) {
+		snd_card_free(snd_saa7134_cards[idx]);
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1139: FILE: media/video/saa7134/saa7134-alsa.c:1054:
+	printk(KERN_INFO "saa7134 ALSA driver for DMA sound unloaded\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#1141: FILE: media/video/saa7134/saa7134-alsa.c:1056:
+	return;
+}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137448.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 91 errors, 78 warnings, 40 checks, 1070 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137448.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
