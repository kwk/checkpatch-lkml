WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#58: 
Content-Disposition: attachment; filename="01-numa-sched-core-2.5.53-24.patch"

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#61: 
--- a/arch/i386/kernel/smpboot.c	2002-12-24 06:20:16.000000000 +0100

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#90: FILE: arch/ia64/kernel/smpboot.c:528:
 int __devinit

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#108: FILE: include/linux/sched.h:449:
+extern void build_node_data(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#142: FILE: kernel/sched.c:193:
+static int _node_nr_cpus[MAX_NUMNODES] = { [0 ... MAX_NUMNODES-1] = NR_CPUS };
                                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#142: FILE: kernel/sched.c:193:
+static int _node_nr_cpus[MAX_NUMNODES] = { [0 ... MAX_NUMNODES-1] = NR_CPUS };

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#143: FILE: kernel/sched.c:194:
+static int node_ptr[MAX_NUMNODES+1]; /* first cpu of node (logical cpus are sorted!)*/
                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#151: FILE: kernel/sched.c:202:
+#define NODE_DELAY_IDLE  (1*HZ/1000)
                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#151: FILE: kernel/sched.c:202:
+#define NODE_DELAY_IDLE  (1*HZ/1000)
                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#152: FILE: kernel/sched.c:203:
+#define NODE_DELAY_BUSY  (20*HZ/1000)
                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#152: FILE: kernel/sched.c:203:
+#define NODE_DELAY_BUSY  (20*HZ/1000)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#155: FILE: kernel/sched.c:206:
+#define loop_over_node(cpu,node) \
                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpu' - possible side-effects?
#155: FILE: kernel/sched.c:206:
+#define loop_over_node(cpu,node) \
+	for(cpu = node_ptr[node]; cpu < node_ptr[node+1]; cpu++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'node' - possible side-effects?
#155: FILE: kernel/sched.c:206:
+#define loop_over_node(cpu,node) \
+	for(cpu = node_ptr[node]; cpu < node_ptr[node+1]; cpu++)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#156: FILE: kernel/sched.c:207:
+	for(cpu = node_ptr[node]; cpu < node_ptr[node+1]; cpu++)
 	                                             ^

ERROR:SPACING: space required before the open parenthesis '('
#156: FILE: kernel/sched.c:207:
+	for(cpu = node_ptr[node]; cpu < node_ptr[node+1]; cpu++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#168: FILE: kernel/sched.c:219:
+	ptr=0;
 	   ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#172: FILE: kernel/sched.c:223:
+		for (cpu = 0; cpu < NR_CPUS; cpu++)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#178: FILE: kernel/sched.c:229:
+	printk("CPU nodes : %d\n",numnodes);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#178: FILE: kernel/sched.c:229:
+	printk("CPU nodes : %d\n",numnodes);
 	                         ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#180: FILE: kernel/sched.c:231:
+		printk("node %d : %d .. %d\n",n,node_ptr[n],node_ptr[n+1]-1);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#180: FILE: kernel/sched.c:231:
+		printk("node %d : %d .. %d\n",n,node_ptr[n],node_ptr[n+1]-1);
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#180: FILE: kernel/sched.c:231:
+		printk("node %d : %d .. %d\n",n,node_ptr[n],node_ptr[n+1]-1);
 		                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#180: FILE: kernel/sched.c:231:
+		printk("node %d : %d .. %d\n",n,node_ptr[n],node_ptr[n+1]-1);
 		                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#180: FILE: kernel/sched.c:231:
+		printk("node %d : %d .. %d\n",n,node_ptr[n],node_ptr[n+1]-1);
 		                                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#180: FILE: kernel/sched.c:231:
+		printk("node %d : %d .. %d\n",n,node_ptr[n],node_ptr[n+1]-1);
 		                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#187: FILE: kernel/sched.c:238:
+#define loop_over_node(cpu,n) for(cpu = 0; cpu < NR_CPUS; cpu++)
                           ^

ERROR:SPACING: space required before the open parenthesis '('
#187: FILE: kernel/sched.c:238:
+#define loop_over_node(cpu,n) for(cpu = 0; cpu < NR_CPUS; cpu++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpu' - possible side-effects?
#187: FILE: kernel/sched.c:238:
+#define loop_over_node(cpu,n) for(cpu = 0; cpu < NR_CPUS; cpu++)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#190: FILE: kernel/sched.c:241:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: kernel/sched.c:719:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: kernel/sched.c:730:
+ * node is unloaded) if the most loaded node didn't change. This gives less $

WARNING:TYPO_SPELLING: 'easilly' may be misspelled - perhaps 'easily'?
#217: FILE: kernel/sched.c:734:
+ * This concept can be extended easilly to more than two levels (multi-level
                                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#235: FILE: kernel/sched.c:752:
+#define cpus_balanced(m,t) (((m)<=1) || (((m)-(t))/2 < (((m)+(t))/2 + 3)/4))
                        ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#235: FILE: kernel/sched.c:752:
+#define cpus_balanced(m,t) (((m)<=1) || (((m)-(t))/2 < (((m)+(t))/2 + 3)/4))
                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#235: FILE: kernel/sched.c:752:
+#define cpus_balanced(m,t) (((m)<=1) || (((m)-(t))/2 < (((m)+(t))/2 + 3)/4))
                                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#235: FILE: kernel/sched.c:752:
+#define cpus_balanced(m,t) (((m)<=1) || (((m)-(t))/2 < (((m)+(t))/2 + 3)/4))
                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#235: FILE: kernel/sched.c:752:
+#define cpus_balanced(m,t) (((m)<=1) || (((m)-(t))/2 < (((m)+(t))/2 + 3)/4))
                                                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#235: FILE: kernel/sched.c:752:
+#define cpus_balanced(m,t) (((m)<=1) || (((m)-(t))/2 < (((m)+(t))/2 + 3)/4))
                                                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#235: FILE: kernel/sched.c:752:
+#define cpus_balanced(m,t) (((m)<=1) || (((m)-(t))/2 < (((m)+(t))/2 + 3)/4))
                                                                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm' - possible side-effects?
#235: FILE: kernel/sched.c:752:
+#define cpus_balanced(m,t) (((m)<=1) || (((m)-(t))/2 < (((m)+(t))/2 + 3)/4))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 't' - possible side-effects?
#235: FILE: kernel/sched.c:752:
+#define cpus_balanced(m,t) (((m)<=1) || (((m)-(t))/2 < (((m)+(t))/2 + 3)/4))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#241: FILE: kernel/sched.c:757:
+#define nodes_balanced(comp,this) (((comp)-(this)) < LOADSCALE/2)
                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#241: FILE: kernel/sched.c:757:
+#define nodes_balanced(comp,this) (((comp)-(this)) < LOADSCALE/2)
                                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#241: FILE: kernel/sched.c:757:
+#define nodes_balanced(comp,this) (((comp)-(this)) < LOADSCALE/2)
                                                               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#248: FILE: kernel/sched.c:762:
+	int busiest_cpu, busiest_node=0, cpu, load, max_avg_load, avg_load;
 	                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#249: FILE: kernel/sched.c:763:
+^Iint n, steal_delay, system_load = 0, this_node=__cpu_to_node(this_cpu); $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#249: FILE: kernel/sched.c:763:
+	int n, steal_delay, system_load = 0, this_node=__cpu_to_node(this_cpu); 
 	                                              ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#250: FILE: kernel/sched.c:764:
+	struct node_queue_data nd[MAX_NUMNODES], *node;
 	                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#287: FILE: kernel/sched.c:772:
+		nd[n].busiest_cpu_load = -1;
 		^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#288: FILE: kernel/sched.c:773:
+		nd[n].total_load = 0;
 		^^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#295: FILE: kernel/sched.c:777:
+	for (cpu = 0; cpu < NR_CPUS; cpu++) {

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#298: FILE: kernel/sched.c:780:
+		node = &nd[__cpu_to_node(cpu)];
 		        ^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'src_rq->nr_running < this_rq->prev_nr_running[cpu]'
#300: FILE: kernel/sched.c:782:
+		if (idle || (src_rq->nr_running < this_rq->prev_nr_running[cpu]))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#320: FILE: kernel/sched.c:794:
+	busiest_cpu = nd[this_node].busiest_cpu;
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#322: FILE: kernel/sched.c:796:
+		if (!cpus_balanced(nd[this_node].busiest_cpu_load,*nr_running)) {
 		                   ^^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#322: FILE: kernel/sched.c:796:
+		if (!cpus_balanced(nd[this_node].busiest_cpu_load,*nr_running)) {
 		                                                 ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#322: FILE: kernel/sched.c:796:
+		if (!cpus_balanced(nd[this_node].busiest_cpu_load,*nr_running)) {
 		                                                  ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#333: FILE: kernel/sched.c:806:
+		node = &nd[n];
 		        ^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#335: FILE: kernel/sched.c:808:
+		node->average_load = node->total_load*LOADSCALE/node_nr_cpus(n);
 		                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#335: FILE: kernel/sched.c:808:
+		node->average_load = node->total_load*LOADSCALE/node_nr_cpus(n);
 		                                               ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'busiest_node == this_node'
#346: FILE: kernel/sched.c:816:
+	if ((busiest_node == this_node) || (max_avg_load <= LOADSCALE) ||
+	    nodes_balanced(max_avg_load,nd[this_node].average_load)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'max_avg_load <= LOADSCALE'
#346: FILE: kernel/sched.c:816:
+	if ((busiest_node == this_node) || (max_avg_load <= LOADSCALE) ||
+	    nodes_balanced(max_avg_load,nd[this_node].average_load)) {

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#347: FILE: kernel/sched.c:817:
+	    nodes_balanced(max_avg_load,nd[this_node].average_load)) {
 	                                ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#347: FILE: kernel/sched.c:817:
+	    nodes_balanced(max_avg_load,nd[this_node].average_load)) {
 	                               ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#360: FILE: kernel/sched.c:822:
+	busiest_cpu = nd[busiest_node].busiest_cpu;
 	              ^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#361: FILE: kernel/sched.c:823:
+	avg_load = system_load*LOADSCALE/num_online_cpus();
 	                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#361: FILE: kernel/sched.c:823:
+	avg_load = system_load*LOADSCALE/num_online_cpus();
 	                                ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#363: FILE: kernel/sched.c:825:
+	if (nodes_balanced(avg_load,nd[this_node].average_load))
 	                            ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#363: FILE: kernel/sched.c:825:
+	if (nodes_balanced(avg_load,nd[this_node].average_load))
 	                           ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#368: FILE: kernel/sched.c:830:
+	if (this_rq->wait_node != busiest_node) {
[...]
+	} else if (jiffies - this_rq->wait_time < steal_delay)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#376: FILE: kernel/sched.c:838:
+	if ((!cpus_balanced(nd[busiest_node].busiest_cpu_load,*nr_running))) {
 	                    ^^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#376: FILE: kernel/sched.c:838:
+	if ((!cpus_balanced(nd[busiest_node].busiest_cpu_load,*nr_running))) {
 	                                                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#376: FILE: kernel/sched.c:838:
+	if ((!cpus_balanced(nd[busiest_node].busiest_cpu_load,*nr_running))) {
 	                                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#404: FILE: kernel/sched.c:886:
+	imbalance = (busiest->nr_running - nr_running)/2;
 	                                              ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000404064.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 19 warnings, 32 checks, 337 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000404064.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
