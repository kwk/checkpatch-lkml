WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
diff -urpN linux-2.5.67-bk6/arch/i386/kernel/apic.c cpu-2.5.67-bk6-1/arch/i386/kernel/apic.c

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#76: FILE: arch/i386/kernel/io_apic.c:243:
+static void set_ioapic_affinity (unsigned int irq, unsigned long dest)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#94: FILE: arch/i386/kernel/io_apic.c:258:
+		io_apic_write(entry->apic, 0x10 + 1 + pin*2, regval);
 		                                         ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#103: FILE: arch/i386/kernel/io_apic.c:280:
+extern cpumask_t irq_affinity[NR_IRQS];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: arch/i386/kernel/io_apic.c:312:
+static unsigned long move(int curr_cpu, cpumask_t allowed_mask,
 			unsigned long now, int direction)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#246: FILE: arch/i386/kernel/irq.c:803:
+#define HEX_DIGITS (2*sizeof(cpumask_t))
                      ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#287: FILE: arch/i386/kernel/irq.c:849:
+cpumask_t irq_affinity [NR_IRQS] = { [0 ... NR_IRQS-1] = CPU_MASK_ALL };

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#287: FILE: arch/i386/kernel/irq.c:849:
+cpumask_t irq_affinity [NR_IRQS] = { [0 ... NR_IRQS-1] = CPU_MASK_ALL };
                                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#299: FILE: arch/i386/kernel/irq.c:860:
+	for (k = 0; k < sizeof(cpumask_t)/sizeof(unsigned long); ++k) {
 	                                 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#300: FILE: arch/i386/kernel/irq.c:861:
+		int j = sprintf (page, "%08lx\n", cpus_coerce(tmp));

WARNING:LINE_SPACING: Missing a blank line after declarations
#301: FILE: arch/i386/kernel/irq.c:862:
+		int j = sprintf (page, "%08lx\n", cpus_coerce(tmp));
+		cpus_shift_right(tmp, tmp, BITS_PER_LONG);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#449: FILE: arch/i386/kernel/smp.c:244:
+static volatile cpumask_t flush_cpumask;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: arch/i386/kernel/smp.c:346:
+static void flush_tlb_others(cpumask_t cpumask, struct mm_struct *mm,
 						unsigned long va)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#504: FILE: arch/i386/kernel/smp.c:356:
+	BUG_ON(cpus_empty(cpumask));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#507: FILE: arch/i386/kernel/smp.c:359:
+	BUG_ON(!cpus_equal(cpumask, tmp));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#508: FILE: arch/i386/kernel/smp.c:360:
+	BUG_ON(cpu_isset(smp_processor_id(), cpumask));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#509: FILE: arch/i386/kernel/smp.c:361:
+	BUG_ON(!mm);

WARNING:MEMORY_BARRIER: memory barrier without comment
#523: FILE: arch/i386/kernel/smp.c:378:
+	mb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#607: FILE: arch/i386/kernel/smp.c:473:
+	cpumask_t cpumask = CPU_MASK_NONE;
+	cpu_set(cpu, cpumask);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#634: FILE: arch/i386/kernel/smpboot.c:67:
+static volatile cpumask_t cpu_callin_map;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#635: FILE: arch/i386/kernel/smpboot.c:68:
+volatile cpumask_t cpu_callout_map;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#709: FILE: arch/i386/kernel/smpboot.c:502:
+volatile cpumask_t node_2_cpu_mask[MAX_NR_NODES] = $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#709: FILE: arch/i386/kernel/smpboot.c:502:
+volatile cpumask_t node_2_cpu_mask[MAX_NR_NODES] = 

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#710: FILE: arch/i386/kernel/smpboot.c:503:
+volatile cpumask_t node_2_cpu_mask[MAX_NR_NODES] = 
+				{ [0 ... MAX_NR_NODES-1] = CPU_MASK_NONE };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#710: FILE: arch/i386/kernel/smpboot.c:503:
+				{ [0 ... MAX_NR_NODES-1] = CPU_MASK_NONE };
 				                     ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#827: FILE: arch/i386/kernel/smpboot.c:1088:
+			if (!cpu_isset(cpu, cpu_callout_map)) continue;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#837: FILE: arch/i386/kernel/smpboot.c:1124:
 void __devinit smp_prepare_boot_cpu(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#845: FILE: arch/i386/kernel/smpboot.c:1130:
 int __devinit __cpu_up(unsigned int cpu)

WARNING:LINE_SPACING: Missing a blank line after declarations
#954: FILE: include/asm-i386/mach-default/mach_apic.h:89:
+	cpumask_t mask;
+	cpus_clear(mask);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1029: FILE: include/asm-i386/mach-numaq/mach_apic.h:77:
+	cpu_set(cpu + 4*node, mask);
 	               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1054: FILE: include/asm-i386/mach-numaq/mach_ipi.h:14:
+	cpumask_t mask = cpu_online_map;
+	cpu_clear(smp_processor_id(), mask);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1086: FILE: include/asm-i386/mmu_context.h:48:
+		BUG_ON(cpu_tlbstate[cpu].active_mm != next);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1160: FILE: include/asm-i386/smp.h:59:
+extern volatile cpumask_t cpu_callout_map;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1207: FILE: include/asm-i386/topology.h:37:
+extern volatile cpumask_t node_2_cpu_mask[];

WARNING:LINE_SPACING: Missing a blank line after declarations
#1226: FILE: include/asm-i386/topology.h:63:
+	cpumask_t mask = node_to_cpumask(node);
+	return first_cpu(mask);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000377627.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 23 warnings, 8 checks, 1052 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000377627.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
