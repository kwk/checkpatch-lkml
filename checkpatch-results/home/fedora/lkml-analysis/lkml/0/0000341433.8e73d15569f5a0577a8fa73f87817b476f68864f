WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
Attached is an updated patch against 2.6.0-test4 that enables Extensible Firmware Interface (EFI) awareness in ia32 Linux kernels.  I've incorporated the feedback I've received since my initial posting (http://marc.theaimsgroup.com/?l=linux-kernel&m=105848983307228&w=2) including:

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#72: FILE: arch/i386/kernel/acpi/boot.c:278:
+^Iextern int ^I^Iefi_enabled;$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#72: FILE: arch/i386/kernel/acpi/boot.c:278:
+	extern int 		efi_enabled;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#73: FILE: arch/i386/kernel/acpi/boot.c:279:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: arch/i386/kernel/acpi/boot.c:285:
+^I} $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#87: FILE: arch/i386/kernel/efi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: arch/i386/kernel/efi.c:4:
+ * Based on Extensible Firmware Interface Specification version 1.0 $

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#120: FILE: arch/i386/kernel/efi.c:34:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#122: FILE: arch/i386/kernel/efi.c:36:
+#include <asm/pgtable.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#123: FILE: arch/i386/kernel/efi.c:37:
+#include <asm/processor.h>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#129: FILE: arch/i386/kernel/efi.c:43:
+#define PFX ^I^I"EFI: "$

WARNING:STORAGE_CLASS: storage class 'asmlinkage' should be located before type 'efi_status_t'
#131: FILE: arch/i386/kernel/efi.c:45:
+extern efi_status_t asmlinkage efi_call_phys(void *, ...);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#131: FILE: arch/i386/kernel/efi.c:45:
+extern efi_status_t asmlinkage efi_call_phys(void *, ...);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#137: FILE: arch/i386/kernel/efi.c:51:
+static int efi_pte = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/i386/kernel/efi.c:53:
+    __attribute__ ((aligned(4096))) __initdata ;$

WARNING:SPACING: space prohibited before semicolon
#139: FILE: arch/i386/kernel/efi.c:53:
+    __attribute__ ((aligned(4096))) __initdata ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4096) over __attribute__((aligned(4096)))
#139: FILE: arch/i386/kernel/efi.c:53:
+    __attribute__ ((aligned(4096))) __initdata ;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#140: FILE: arch/i386/kernel/efi.c:54:
+extern pgd_t swapper_pg_dir[1024];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: arch/i386/kernel/efi.c:57:
+ * efi_dir is allocated here, but the directory isn't created $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#153: FILE: arch/i386/kernel/efi.c:67:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: arch/i386/kernel/efi.c:70:
+ * prelog/epilog before/after the invocation to disable interrupt, to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: arch/i386/kernel/efi.c:86:
+^I$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#178: FILE: arch/i386/kernel/efi.c:92:
+	__asm__ __volatile__("movl %%cr4, %0":"=r"(cr4));
 	                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#204: FILE: arch/i386/kernel/efi.c:118:
+	__asm__ __volatile__("lgdt %0":"=m"
 	                              ^

CHECK:SPACING: No space is necessary after a cast
#205: FILE: arch/i386/kernel/efi.c:119:
+			    (*(struct Xgt_desc_struct *) __pa(&cpu_gdt_descr[0])));

CHECK:CAMELCASE: Avoid CamelCase: <Xgt_desc_struct>
#205: FILE: arch/i386/kernel/efi.c:119:
+			    (*(struct Xgt_desc_struct *) __pa(&cpu_gdt_descr[0])));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: arch/i386/kernel/efi.c:126:
+^Icpu_gdt_descr[0].address = $

CHECK:SPACING: No space is necessary after a cast
#213: FILE: arch/i386/kernel/efi.c:127:
+		(unsigned long) __va(cpu_gdt_descr[0].address);

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#214: FILE: arch/i386/kernel/efi.c:128:
+	__asm__ __volatile__("lgdt %0":"=m"(cpu_gdt_descr));
 	                              ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#215: FILE: arch/i386/kernel/efi.c:129:
+	__asm__ __volatile__("movl %%cr4, %0":"=r"(cr4));
 	                                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: arch/i386/kernel/efi.c:151:
+static efi_status_t $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: arch/i386/kernel/efi.c:152:
+phys_efi_set_virtual_address_map(unsigned long memory_map_size, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: arch/i386/kernel/efi.c:154:
+^I^I^I^I u32 descriptor_version, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: arch/i386/kernel/efi.c:158:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: arch/i386/kernel/efi.c:160:
+^Istatus = efi_call_phys(efi_phys.set_virtual_address_map, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: arch/i386/kernel/efi.c:161:
+	status = efi_call_phys(efi_phys.set_virtual_address_map, 
+				     memory_map_size, descriptor_size,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: arch/i386/kernel/efi.c:167:
+efi_status_t $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: arch/i386/kernel/efi.c:175:
+^Ireturn status; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: arch/i386/kernel/efi.c:187:
+^I^I            tm.second);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: arch/i386/kernel/efi.c:187:
+	tv->tv_sec = mktime(tm.year, tm.month, tm.day, tm.hour, tm.minute,
+		            tm.second);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: arch/i386/kernel/efi.c:191:
+static int $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#278: FILE: arch/i386/kernel/efi.c:192:
+is_available_memory(efi_memory_desc_t * md)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#283: FILE: arch/i386/kernel/efi.c:197:
+	switch (md->type) {
+		case EFI_LOADER_CODE:
+		case EFI_LOADER_DATA:
+		case EFI_BOOT_SERVICES_CODE:
+		case EFI_BOOT_SERVICES_DATA:
+		case EFI_CONVENTIONAL_MEMORY:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:BRACES: braces {} should be used on all arms of this statement
#314: FILE: arch/i386/kernel/efi.c:228:
+		if (is_available_memory(md)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: arch/i386/kernel/efi.c:230:
+^I^I^Icurr.end = curr.start + $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#324: FILE: arch/i386/kernel/efi.c:238:
+					printk(PFX "Unordered memory map\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#325: FILE: arch/i386/kernel/efi.c:239:
+				if (prev.end == curr.start)
[...]
+				else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#327: FILE: arch/i386/kernel/efi.c:241:
+				else {

CHECK:SPACING: No space is necessary after a cast
#329: FILE: arch/i386/kernel/efi.c:243:
+					    (unsigned long) (PAGE_ALIGN(prev.start));

CHECK:SPACING: No space is necessary after a cast
#330: FILE: arch/i386/kernel/efi.c:244:
+					end = (unsigned long) (prev.end & PAGE_MASK);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'end > start'
#331: FILE: arch/i386/kernel/efi.c:245:
+					if ((end > start)
+					    && (*callback) (start, end, arg) < 0)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#332: FILE: arch/i386/kernel/efi.c:246:
+					if ((end > start)
+					    && (*callback) (start, end, arg) < 0)

CHECK:BRACES: Unbalanced braces around else statement
#337: FILE: arch/i386/kernel/efi.c:251:
+		} else

CHECK:SPACING: No space is necessary after a cast
#341: FILE: arch/i386/kernel/efi.c:255:
+		start = (unsigned long) PAGE_ALIGN(prev.start);

CHECK:SPACING: No space is necessary after a cast
#342: FILE: arch/i386/kernel/efi.c:256:
+		end = (unsigned long) (prev.end & PAGE_MASK);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#351: FILE: arch/i386/kernel/efi.c:265:
+unsigned long __init $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#359: FILE: arch/i386/kernel/efi.c:273:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: arch/i386/kernel/efi.c:275:
+^Ivirt_start_addr = (unsigned long) __va(MAXMEM) + $

CHECK:SPACING: No space is necessary after a cast
#361: FILE: arch/i386/kernel/efi.c:275:
+	virt_start_addr = (unsigned long) __va(MAXMEM) + 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: arch/i386/kernel/efi.c:276:
+^I^I^I^I(efi_pte << EFI_PAGE_SHIFT) + $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#367: FILE: arch/i386/kernel/efi.c:281:
+			printk(PFX "EFI Page Table is full!\n");

CHECK:SPACING: No space is necessary after a cast
#372: FILE: arch/i386/kernel/efi.c:286:
+			swapper_pg_dir[((unsigned long) ((unsigned long)

CHECK:SPACING: No space is necessary after a cast
#374: FILE: arch/i386/kernel/efi.c:288:
+			    (unsigned long) (__pa(&(efi_temp_page_table[0])) | 7);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around efi_temp_page_table[0]
#374: FILE: arch/i386/kernel/efi.c:288:
+			    (unsigned long) (__pa(&(efi_temp_page_table[0])) | 7);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#393: FILE: arch/i386/kernel/efi.c:307:
+	memset(&efi, 0, sizeof(efi) );

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#398: FILE: arch/i386/kernel/efi.c:312:
+	memmap.nr_map= EFI_MEMMAP_SIZE/EFI_MEMDESC_SIZE;
 	             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#398: FILE: arch/i386/kernel/efi.c:312:
+	memmap.nr_map= EFI_MEMMAP_SIZE/EFI_MEMDESC_SIZE;
 	                              ^

CHECK:SPACING: No space is necessary after a cast
#402: FILE: arch/i386/kernel/efi.c:316:
+	    efi_setup_temp_page_table((unsigned long) efi_phys.systab,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!efi.systab"
#407: FILE: arch/i386/kernel/efi.c:321:
+	if (efi.systab == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#408: FILE: arch/i386/kernel/efi.c:322:
+		printk(PFX "Woah! Can't find EFI system table.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#410: FILE: arch/i386/kernel/efi.c:324:
+		printk(PFX "Woah! EFI system table signature incorrect\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#412: FILE: arch/i386/kernel/efi.c:326:
+		printk(PFX

WARNING:SPLIT_STRING: quoted string split across lines
#414: FILE: arch/i386/kernel/efi.c:328:
+		       "Warning: EFI system table major version mismatch: "
+		       "got %d.%02d, expected %d.%02d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#421: FILE: arch/i386/kernel/efi.c:335:
+	c16 = (efi_char16_t *) efi_setup_temp_page_table(efi.systab->fw_vendor, 2);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: arch/i386/kernel/efi.c:342:
+^I^I^I/* $

CHECK:SPACING: No space is necessary after a cast
#431: FILE: arch/i386/kernel/efi.c:345:
+			if ((((unsigned long) c16) & 0xfff) == 0)

CHECK:SPACING: No space is necessary after a cast
#433: FILE: arch/i386/kernel/efi.c:347:
+				    (efi_char16_t *) efi_setup_temp_page_table(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#433: FILE: arch/i386/kernel/efi.c:347:
+				    (efi_char16_t *) efi_setup_temp_page_table(

CHECK:SPACING: No space is necessary after a cast
#434: FILE: arch/i386/kernel/efi.c:348:
+					    ((unsigned long) (efi.systab->fw_vendor)) + i, 4096);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#439: FILE: arch/i386/kernel/efi.c:353:
+	printk(PFX "EFI v%u.%.02u by %s \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#439: FILE: arch/i386/kernel/efi.c:353:
+	printk(PFX "EFI v%u.%.02u by %s \n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#448: FILE: arch/i386/kernel/efi.c:362:
+^I^I^I        efi.systab->nr_tables * sizeof (efi_config_table_t));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#448: FILE: arch/i386/kernel/efi.c:362:
+				efi_setup_temp_page_table(efi.systab->tables,
+			        efi.systab->nr_tables * sizeof (efi_config_table_t));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#448: FILE: arch/i386/kernel/efi.c:362:
+			        efi.systab->nr_tables * sizeof (efi_config_table_t));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#453: FILE: arch/i386/kernel/efi.c:367:
+			printk(" MPS=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#454: FILE: arch/i386/kernel/efi.c:368:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, ACPI_20_TABLE_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#454: FILE: arch/i386/kernel/efi.c:368:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#455: FILE: arch/i386/kernel/efi.c:369:
+		    if (efi_guidcmp(config_tables[i].guid, ACPI_20_TABLE_GUID) == 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#457: FILE: arch/i386/kernel/efi.c:371:
+			printk(" ACPI 2.0=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#458: FILE: arch/i386/kernel/efi.c:372:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, ACPI_TABLE_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#458: FILE: arch/i386/kernel/efi.c:372:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#459: FILE: arch/i386/kernel/efi.c:373:
+		    if (efi_guidcmp(config_tables[i].guid, ACPI_TABLE_GUID) == 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#461: FILE: arch/i386/kernel/efi.c:375:
+			printk(" ACPI=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#462: FILE: arch/i386/kernel/efi.c:376:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, SMBIOS_TABLE_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#462: FILE: arch/i386/kernel/efi.c:376:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#463: FILE: arch/i386/kernel/efi.c:377:
+		    if (efi_guidcmp(config_tables[i].guid, SMBIOS_TABLE_GUID) == 0) {

CHECK:SPACING: No space is necessary after a cast
#464: FILE: arch/i386/kernel/efi.c:378:
+			efi.smbios = (void *) config_tables[i].table;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#465: FILE: arch/i386/kernel/efi.c:379:
+			printk(" SMBIOS=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#466: FILE: arch/i386/kernel/efi.c:380:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, HCDP_TABLE_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#466: FILE: arch/i386/kernel/efi.c:380:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#467: FILE: arch/i386/kernel/efi.c:381:
+		    if (efi_guidcmp(config_tables[i].guid, HCDP_TABLE_GUID) == 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#469: FILE: arch/i386/kernel/efi.c:383:
+			printk(" HCDP=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#470: FILE: arch/i386/kernel/efi.c:384:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, UGA_IO_PROTOCOL_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#470: FILE: arch/i386/kernel/efi.c:384:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#471: FILE: arch/i386/kernel/efi.c:385:
+		    if (efi_guidcmp(config_tables[i].guid, UGA_IO_PROTOCOL_GUID) == 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#473: FILE: arch/i386/kernel/efi.c:387:
+			printk(" UGA=0x%lx ", config_tables[i].table);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#474: FILE: arch/i386/kernel/efi.c:388:
+^I^I} $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#476: FILE: arch/i386/kernel/efi.c:390:
+	printk("\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: arch/i386/kernel/efi.c:391:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#479: FILE: arch/i386/kernel/efi.c:393:
+^I * Set up the page tables for runtime services. We need to map $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#480: FILE: arch/i386/kernel/efi.c:394:
+^I * the runtime services table so that we can grab the physical $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#483: FILE: arch/i386/kernel/efi.c:397:
+^I    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#484: FILE: arch/i386/kernel/efi.c:398:
+^Iefi.systab->runtime = $

CHECK:SPACING: No space is necessary after a cast
#485: FILE: arch/i386/kernel/efi.c:399:
+		(efi_runtime_services_t *) efi_setup_temp_page_table(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#485: FILE: arch/i386/kernel/efi.c:399:
+		(efi_runtime_services_t *) efi_setup_temp_page_table(

CHECK:SPACING: No space is necessary after a cast
#486: FILE: arch/i386/kernel/efi.c:400:
+						(unsigned long) efi.systab->runtime,

ERROR:CODE_INDENT: code indent should use tabs where possible
#487: FILE: arch/i386/kernel/efi.c:401:
+^I^I^I^I      ^I^Isizeof(efi_runtime_services_t));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#487: FILE: arch/i386/kernel/efi.c:401:
+^I^I^I^I      ^I^Isizeof(efi_runtime_services_t));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: arch/i386/kernel/efi.c:403:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#490: FILE: arch/i386/kernel/efi.c:404:
+^I * We will only need *early* access to the following two EFI RT $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#491: FILE: arch/i386/kernel/efi.c:405:
+^I * services before set_virtual_address_map is invoked.  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#492: FILE: arch/i386/kernel/efi.c:406:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#492: FILE: arch/i386/kernel/efi.c:406:
+ ^I */$

CHECK:SPACING: No space is necessary after a cast
#493: FILE: arch/i386/kernel/efi.c:407:
+	efi_phys.get_time = (efi_get_time_t *) efi.systab->runtime->get_time;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#494: FILE: arch/i386/kernel/efi.c:408:
+^Iefi_phys.set_virtual_address_map = $

CHECK:SPACING: No space is necessary after a cast
#495: FILE: arch/i386/kernel/efi.c:409:
+		(efi_set_virtual_address_map_t *) efi.systab->runtime->set_virtual_address_map;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#497: FILE: arch/i386/kernel/efi.c:411:
+^Imemmap.map = (efi_memory_desc_t *) $

CHECK:SPACING: No space is necessary after a cast
#497: FILE: arch/i386/kernel/efi.c:411:
+	memmap.map = (efi_memory_desc_t *) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#498: FILE: arch/i386/kernel/efi.c:412:
+^I^I^Iefi_setup_temp_page_table((unsigned long) EFI_MEMMAP, $

CHECK:SPACING: No space is necessary after a cast
#498: FILE: arch/i386/kernel/efi.c:412:
+			efi_setup_temp_page_table((unsigned long) EFI_MEMMAP, 

ERROR:CODE_INDENT: code indent should use tabs where possible
#499: FILE: arch/i386/kernel/efi.c:413:
+^I^I^I^I^I^I   ^IEFI_MEMMAP_SIZE);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#499: FILE: arch/i386/kernel/efi.c:413:
+^I^I^I^I^I^I   ^IEFI_MEMMAP_SIZE);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#499: FILE: arch/i386/kernel/efi.c:413:
+			efi_setup_temp_page_table((unsigned long) EFI_MEMMAP, 
+						   	EFI_MEMMAP_SIZE);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#500: FILE: arch/i386/kernel/efi.c:414:
+	if (EFI_MEMDESC_SIZE != sizeof(efi_memory_desc_t)) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#501: FILE: arch/i386/kernel/efi.c:415:
+		printk(PFX "Warning! Kernel-defined memdesc doesn't "

WARNING:SPLIT_STRING: quoted string split across lines
#502: FILE: arch/i386/kernel/efi.c:416:
+		printk(PFX "Warning! Kernel-defined memdesc doesn't "
+			   "match the one from EFI!\n");

CHECK:SPACING: No space is necessary after a cast
#512: FILE: arch/i386/kernel/efi.c:426:
+	memmap.map = ioremap((unsigned long) memmap.phys_map, EFI_MEMMAP_SIZE);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#515: FILE: arch/i386/kernel/efi.c:429:
+		printk(PFX "ioremap of memmap.map failed \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#515: FILE: arch/i386/kernel/efi.c:429:
+		printk(PFX "ioremap of memmap.map failed \n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#520: FILE: arch/i386/kernel/efi.c:434:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#523: FILE: arch/i386/kernel/efi.c:437:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: arch/i386/kernel/efi.c:439:
+^I^I^Imd->virt_addr = $

CHECK:SPACING: No space is necessary after a cast
#526: FILE: arch/i386/kernel/efi.c:440:
+				(u64) ioremap((unsigned long) md->phys_addr,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: arch/i386/kernel/efi.c:441:
+^I^I^I^I^I      (unsigned long) (md->num_pages $

CHECK:SPACING: No space is necessary after a cast
#527: FILE: arch/i386/kernel/efi.c:441:
+					      (unsigned long) (md->num_pages 

CHECK:SPACING: No space is necessary after a cast
#529: FILE: arch/i386/kernel/efi.c:443:
+			if (!(unsigned long) md->virt_addr) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#530: FILE: arch/i386/kernel/efi.c:444:
+^I^I^I^Iprintk(PFX "ioremap of md: 0x%lX failed \n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#530: FILE: arch/i386/kernel/efi.c:444:
+				printk(PFX "ioremap of md: 0x%lX failed \n", 

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#530: FILE: arch/i386/kernel/efi.c:444:
+				printk(PFX "ioremap of md: 0x%lX failed \n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#531: FILE: arch/i386/kernel/efi.c:445:
+				printk(PFX "ioremap of md: 0x%lX failed \n", 
+					(unsigned long) md->phys_addr);

CHECK:SPACING: No space is necessary after a cast
#531: FILE: arch/i386/kernel/efi.c:445:
+					(unsigned long) md->phys_addr);

WARNING:LONG_LINE: line length of 199 exceeds 100 columns
#534: FILE: arch/i386/kernel/efi.c:448:
+			if (((unsigned long)md->phys_addr <= (unsigned long)efi_phys.systab) && ((unsigned long)efi_phys.systab < md->phys_addr + ((unsigned long) md->num_pages << EFI_PAGE_SHIFT))) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#534: FILE: arch/i386/kernel/efi.c:448:
+			if (((unsigned long)md->phys_addr <= (unsigned long)efi_phys.systab) && ((unsigned long)efi_phys.systab < md->phys_addr + ((unsigned long) md->num_pages << EFI_PAGE_SHIFT))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#535: FILE: arch/i386/kernel/efi.c:449:
+^I^I^I^Iefi.systab = (efi_system_table_t *) $

CHECK:SPACING: No space is necessary after a cast
#535: FILE: arch/i386/kernel/efi.c:449:
+				efi.systab = (efi_system_table_t *) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#536: FILE: arch/i386/kernel/efi.c:450:
+^I^I^I^I^I((md->virt_addr - md->phys_addr) + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#537: FILE: arch/i386/kernel/efi.c:451:
+^I^I^I^I^I(u64)efi_phys.systab); $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#543: FILE: arch/i386/kernel/efi.c:457:
+		BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#544: FILE: arch/i386/kernel/efi.c:458:
+^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#546: FILE: arch/i386/kernel/efi.c:460:
+	status = phys_efi_set_virtual_address_map(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#547: FILE: arch/i386/kernel/efi.c:461:
+^I^I^IEFI_MEMMAP_SIZE, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#549: FILE: arch/i386/kernel/efi.c:463:
+^I^I^IEFI_MEMDESC_VERSION,^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#550: FILE: arch/i386/kernel/efi.c:464:
+^I^I       ^Imemmap.phys_map);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#550: FILE: arch/i386/kernel/efi.c:464:
+^I^I       ^Imemmap.phys_map);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#551: FILE: arch/i386/kernel/efi.c:465:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#553: FILE: arch/i386/kernel/efi.c:467:
+		printk ("You are screwed! "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#553: FILE: arch/i386/kernel/efi.c:467:
+		printk ("You are screwed! "

WARNING:SPLIT_STRING: quoted string split across lines
#554: FILE: arch/i386/kernel/efi.c:468:
+		printk ("You are screwed! "
+			"Unable to switch EFI into virtual mode "

WARNING:SPLIT_STRING: quoted string split across lines
#555: FILE: arch/i386/kernel/efi.c:469:
+			"Unable to switch EFI into virtual mode "
+			"(status=%lu)\n", status);

CHECK:SPACING: No space is necessary after a cast
#565: FILE: arch/i386/kernel/efi.c:479:
+	efi.get_time = (efi_get_time_t *) efi.systab->runtime->get_time;

CHECK:SPACING: No space is necessary after a cast
#566: FILE: arch/i386/kernel/efi.c:480:
+	efi.set_time = (efi_set_time_t *) efi.systab->runtime->set_time;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#582: FILE: arch/i386/kernel/efi.c:496:
+
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: arch/i386/kernel/efi.c:498:
+void __init $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#591: FILE: arch/i386/kernel/efi.c:505:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#594: FILE: arch/i386/kernel/efi.c:508:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#647: FILE: arch/i386/kernel/efi.c:561:
+			printk(PFX "Failed to allocate res %s : 0x%lx-0x%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#648: FILE: arch/i386/kernel/efi.c:562:
+			printk(PFX "Failed to allocate res %s : 0x%lx-0x%lx\n",
+				      res->name, res->start, res->end);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#657: FILE: arch/i386/kernel/efi.c:571:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#659: FILE: arch/i386/kernel/efi.c:573:
+ * allocator - particularly the memmap.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#663: FILE: arch/i386/kernel/efi.c:577:
+^Ireserve_bootmem((unsigned long)memmap.phys_map, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#675: FILE: arch/i386/kernel/efi.c:589:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'md->phys_addr <= phys_addr'
#678: FILE: arch/i386/kernel/efi.c:592:
+		if ((md->phys_addr <= phys_addr) && (phys_addr <
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT)) ))

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#679: FILE: arch/i386/kernel/efi.c:593:
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT)) ))
 			                    ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#679: FILE: arch/i386/kernel/efi.c:593:
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT)) ))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'md->phys_addr <= phys_addr'
#692: FILE: arch/i386/kernel/efi.c:606:
+		if ((md->phys_addr <= phys_addr) && (phys_addr <
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT)) ))

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#693: FILE: arch/i386/kernel/efi.c:607:
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT)) ))
 			                    ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#693: FILE: arch/i386/kernel/efi.c:607:
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT)) ))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#703: FILE: arch/i386/kernel/efi.c:617:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#706: FILE: arch/i386/kernel/efi.c:620:
+		printk("mem%02u: type=%u, attr=0x%llx, range=[0x%016llx-0x%016llx) (%lluMB)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#707: FILE: arch/i386/kernel/efi.c:621:
+		printk("mem%02u: type=%u, attr=0x%llx, range=[0x%016llx-0x%016llx) (%lluMB)\n",
+			i, md->type, md->attribute, md->phys_addr,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#717: FILE: arch/i386/kernel/efi_stub.S:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#737: FILE: arch/i386/kernel/efi_stub.S:21:
+ * at the end no matter how many we use, because we can not assure EFI runtime $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#744: FILE: arch/i386/kernel/efi_stub.S:28:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#747: FILE: arch/i386/kernel/efi_stub.S:31:
+^I * the values of these registers are the same. And, the corresponding $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#764: FILE: arch/i386/kernel/efi_stub.S:48:
+^I * 2. Now on the top of stack is the return $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#766: FILE: arch/i386/kernel/efi_stub.S:50:
+^I * parameter 2, ..., param n. To make things easy, we save the return $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#791: FILE: arch/i386/kernel/efi_stub.S:75:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#799: FILE: arch/i386/kernel/efi_stub.S:83:
+^I * 6. After EFI runtime service returns, control will return to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#820: FILE: arch/i386/kernel/efi_stub.S:104:
+^I/* $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#873: FILE: arch/i386/kernel/reboot.c:269:
+			__asm__ __volatile__("lidt %0": :"m" (no_idt));
 			                              ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#873: FILE: arch/i386/kernel/reboot.c:269:
+			__asm__ __volatile__("lidt %0": :"m" (no_idt));
 			                                ^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#914: FILE: arch/i386/kernel/setup.c:61:
+int efi_enabled = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#923: FILE: arch/i386/kernel/setup.c:148:
+	extern struct efi_memory_map memmap;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#932: FILE: arch/i386/kernel/setup.c:157:
+						(((current_size-size) + PAGE_SIZE-1) >> PAGE_SHIFT);
 						               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#932: FILE: arch/i386/kernel/setup.c:157:
+						(((current_size-size) + PAGE_SIZE-1) >> PAGE_SHIFT);
 						                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#938: FILE: arch/i386/kernel/setup.c:163:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#948: FILE: arch/i386/kernel/setup.c:179:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#950: FILE: arch/i386/kernel/setup.c:181:
+       ^I^Ix = e820.nr_map;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#950: FILE: arch/i386/kernel/setup.c:181:
+       ^I^Ix = e820.nr_map;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: arch/i386/kernel/setup.c:181:
+       ^I^Ix = e820.nr_map;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#956: FILE: arch/i386/kernel/setup.c:183:
+		if (x == E820MAX) {
+		    printk(KERN_ERR "Ooops! Too many entries in the memory map!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#957: FILE: arch/i386/kernel/setup.c:184:
+		    printk(KERN_ERR "Ooops! Too many entries in the memory map!\n");

WARNING:TABSTOP: Statements should start on a tabstop
#958: FILE: arch/i386/kernel/setup.c:185:
+		    return;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#978: FILE: arch/i386/kernel/setup.c:469:
+		printk(KERN_INFO "EFI-provided physical memory map:\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#991: FILE: arch/i386/kernel/setup.c:606:
+ * Callback for efi_memory_walk... $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#993: FILE: arch/i386/kernel/setup.c:608:
+static int __init $

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#999: FILE: arch/i386/kernel/setup.c:614:
+		pfn = PFN_UP(end -1);
 		                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1006: FILE: arch/i386/kernel/setup.c:621:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1028: FILE: arch/i386/kernel/setup.c:710:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1033: FILE: arch/i386/kernel/setup.c:715:
+static int __init $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1064: FILE: arch/i386/kernel/setup.c:838:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1065: FILE: arch/i386/kernel/setup.c:839:
+^I * Reserve memory for the EFI memory map so later we can $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1066: FILE: arch/i386/kernel/setup.c:840:
+^I * switch the Runtime Services in Virtual Mode. $

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#1087: FILE: arch/i386/kernel/setup.c:848:
+			if (efi_boot_params.initrd_start + efi_boot_params.initrd_size <= (max_low_pfn << PAGE_SHIFT)) {

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#1088: FILE: arch/i386/kernel/setup.c:849:
+				reserve_bootmem(efi_boot_params.initrd_start, efi_boot_params.initrd_size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1092: FILE: arch/i386/kernel/setup.c:853:
+				printk(KERN_ERR "initrd extends beyond end of memory! "

WARNING:SPLIT_STRING: quoted string split across lines
#1093: FILE: arch/i386/kernel/setup.c:854:
+				printk(KERN_ERR "initrd extends beyond end of memory! "
+						"(0x%08lx > 0x%08lx)\n disabling initrd\n",

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#1094: FILE: arch/i386/kernel/setup.c:855:
+						efi_boot_params.initrd_start + efi_boot_params.initrd_size,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1105: FILE: arch/i386/kernel/setup.c:866:
+				initrd_end = initrd_start+INITRD_SIZE;
 				                         ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1107: FILE: arch/i386/kernel/setup.c:868:
+			}
+			else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1107: FILE: arch/i386/kernel/setup.c:868:
+			else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1108: FILE: arch/i386/kernel/setup.c:869:
+				printk(KERN_ERR "initrd extends beyond end of memory "

WARNING:SPLIT_STRING: quoted string split across lines
#1109: FILE: arch/i386/kernel/setup.c:870:
+				printk(KERN_ERR "initrd extends beyond end of memory "
+				    "(0x%08lx > 0x%08lx)\ndisabling initrd\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1122: FILE: arch/i386/kernel/setup.c:888:
+static void __init $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1128: FILE: arch/i386/kernel/setup.c:892:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1154: FILE: arch/i386/kernel/setup.c:931:
+^Ielse $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1157: FILE: arch/i386/kernel/setup.c:934:
+ ^I /* EFI systems may still have VGA */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1157: FILE: arch/i386/kernel/setup.c:934:
+ ^I /* EFI systems may still have VGA */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1157: FILE: arch/i386/kernel/setup.c:934:
+ ^I /* EFI systems may still have VGA */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1187: FILE: arch/i386/kernel/setup.c:1072:
+ ^I^IROOT_DEV = ORIG_ROOT_DEV;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1187: FILE: arch/i386/kernel/setup.c:1072:
+ ^I^IROOT_DEV = ORIG_ROOT_DEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1187: FILE: arch/i386/kernel/setup.c:1072:
+ ^I^IROOT_DEV = ORIG_ROOT_DEV;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1188: FILE: arch/i386/kernel/setup.c:1073:
+ ^I^Idrive_info = DRIVE_INFO;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1188: FILE: arch/i386/kernel/setup.c:1073:
+ ^I^Idrive_info = DRIVE_INFO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1188: FILE: arch/i386/kernel/setup.c:1073:
+ ^I^Idrive_info = DRIVE_INFO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1189: FILE: arch/i386/kernel/setup.c:1074:
+ ^I^Iscreen_info = SCREEN_INFO;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1189: FILE: arch/i386/kernel/setup.c:1074:
+ ^I^Iscreen_info = SCREEN_INFO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1189: FILE: arch/i386/kernel/setup.c:1074:
+ ^I^Iscreen_info = SCREEN_INFO;$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1193: FILE: arch/i386/kernel/setup.c:1078:
+		printk("Video mode to be used for restore is %lx\n", saved_videomode);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1194: FILE: arch/i386/kernel/setup.c:1079:
+		if (SYS_DESC_TABLE.length != 0 ) {

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#1195: FILE: arch/i386/kernel/setup.c:1080:
+			MCA_bus = SYS_DESC_TABLE.table[3] &0x2;
 			                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1199: FILE: arch/i386/kernel/setup.c:1084:
+^I^I}^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1247: FILE: arch/i386/kernel/time.c:165:
+^Iunsigned long ^Iflags;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1248: FILE: arch/i386/kernel/time.c:166:
+^Iefi_status_t ^Istatus;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1249: FILE: arch/i386/kernel/time.c:167:
+^Iefi_time_t ^Ieft;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1250: FILE: arch/i386/kernel/time.c:168:
+^Iefi_time_cap_t ^Icap;$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1260: FILE: arch/i386/kernel/time.c:178:
+	if (((abs(real_minutes - eft.minute) + 15)/30) & 1)
 	                                          ^

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1283: FILE: arch/i386/kernel/time.c:245:
+		if ((efi_enabled && (!efi_set_rtc_mmss(xtime.tv_sec) )) || (set_rtc_mmss(xtime.tv_sec) == 0))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1283: FILE: arch/i386/kernel/time.c:245:
+		if ((efi_enabled && (!efi_set_rtc_mmss(xtime.tv_sec) )) || (set_rtc_mmss(xtime.tv_sec) == 0))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1305: FILE: arch/i386/kernel/time.c:324:
+		printk("Oops: efitime: can't read time status: 0x%lx\n", status);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1308: FILE: arch/i386/kernel/time.c:327:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1341: FILE: drivers/acpi/Kconfig:270:
+^I   the EFI Configuration Table.  On Itanium systems this is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1343: FILE: drivers/acpi/Kconfig:272:
+^I   EFI firmware should leave this enabled.  Platforms with $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1368: FILE: include/asm-i386/setup.h:33:
+#define EFI_MEMDESC_SIZE ( (efi_boot_params.efi_mem_desc_size))

ERROR:SPACING: space prohibited after that open parenthesis '('
#1369: FILE: include/asm-i386/setup.h:34:
+#define EFI_MEMDESC_VERSION ( (efi_boot_params.efi_mem_desc_version))

ERROR:SPACING: space prohibited after that open parenthesis '('
#1370: FILE: include/asm-i386/setup.h:35:
+#define EFI_MEMMAP ( (efi_boot_params.efi_mem_map))

ERROR:SPACING: space prohibited after that open parenthesis '('
#1371: FILE: include/asm-i386/setup.h:36:
+#define EFI_MEMMAP_SIZE ( (efi_boot_params.efi_mem_map_size))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1385: FILE: include/asm-i386/setup.h:58:
+^Iunsigned long efi_mem_desc_size;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1389: FILE: include/asm-i386/setup.h:62:
+^Iunsigned long loader_start;^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1418: FILE: include/linux/efi.h:101:
+#if defined (__i386__)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#1418: FILE: include/linux/efi.h:101:
+#if defined (__i386__)

Architecture specific defines should be avoided wherever
possible.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1448: FILE: include/linux/efi.h:208:
+    EFI_GUID(  0x61a4d49e, 0x6f68, 0x4f1b, 0xb9, 0x22, 0xa8, 0x6e, 0xed, 0xb, 0x7, 0xa2 )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1448: FILE: include/linux/efi.h:208:
+    EFI_GUID(  0x61a4d49e, 0x6f68, 0x4f1b, 0xb9, 0x22, 0xa8, 0x6e, 0xed, 0xb, 0x7, 0xa2 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1448: FILE: include/linux/efi.h:208:
+    EFI_GUID(  0x61a4d49e, 0x6f68, 0x4f1b, 0xb9, 0x22, 0xa8, 0x6e, 0xed, 0xb, 0x7, 0xa2 )

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1486: FILE: include/linux/efi.h:290:
+extern void print_efi_memmap(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1487: FILE: include/linux/efi.h:291:
+extern void efi_reserve_bootmem(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1488: FILE: include/linux/efi.h:292:
+extern void efi_initialize_iomem_resources(struct resource *code_resource,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1489: FILE: include/linux/efi.h:293:
+extern void efi_initialize_iomem_resources(struct resource *code_resource,
+					struct resource *data_resource);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1490: FILE: include/linux/efi.h:294:
+extern efi_status_t phys_efi_get_time(efi_time_t *tm, efi_time_cap_t *tc);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000341433.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 110 errors, 89 warnings, 80 checks, 1380 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000341433.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
