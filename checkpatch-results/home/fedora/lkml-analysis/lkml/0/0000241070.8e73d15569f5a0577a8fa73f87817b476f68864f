WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
In http://lkml.org/lkml/2004/8/18/50 Roland added the infrastructure to make

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#92: FILE: fs/proc/array.c:303:
+static void sub_task_accounting(struct task_struct *leader_task, unsigned long* utime, unsigned long* stime)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#92: FILE: fs/proc/array.c:303:
+static void sub_task_accounting(struct task_struct *leader_task, unsigned long* utime, unsigned long* stime)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#92: FILE: fs/proc/array.c:303:
+static void sub_task_accounting(struct task_struct *leader_task, unsigned long* utime, unsigned long* stime)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#94: FILE: fs/proc/array.c:305:
+	struct task_struct *task=leader_task;
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: fs/proc/array.c:315:
+static int proc_pid_stat(struct task_struct *task, char * buffer, char taskview)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: fs/proc/array.c:382:
+^Iif (!taskview) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#152: FILE: fs/proc/array.c:438:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: fs/proc/array.c:439:
+int proc_tid_stat(struct task_struct *task, char * buffer)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#158: FILE: fs/proc/array.c:444:
+int proc_tgid_stat(struct task_struct *task, char * buffer)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#163: FILE: fs/proc/array.c:449:
+
+

ERROR:SPACING: space required after that ',' (ctx:OxV)
#175: FILE: fs/proc/base.c:192:
+int proc_tid_stat(struct task_struct*,char*);
                                      ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#176: FILE: fs/proc/base.c:193:
+int proc_tgid_stat(struct task_struct*,char*);
                                       ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#176: FILE: fs/proc/base.c:193:
+int proc_tgid_stat(struct task_struct*,char*);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct*' should also have an identifier name
#176: FILE: fs/proc/base.c:193:
+int proc_tgid_stat(struct task_struct*,char*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char*' should also have an identifier name
#176: FILE: fs/proc/base.c:193:
+int proc_tgid_stat(struct task_struct*,char*);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: fs/proc/base.c:1321:
+^I^I^Ibreak;^I^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000241070.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 5 warnings, 2 checks, 96 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000241070.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
