WARNING:TYPO_SPELLING: 'wasnt' may be misspelled - perhaps 'wasn't'?
#19: 
there some reason it wasnt merged or did it just escape ?
                     ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#21: 
diff -u --new-file --recursive --exclude-from /usr/src/exclude linux-2.5.65-bk3/drivers/parport/init.c linux-2.5.65-ac3/drivers/parport/init.c

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res"
#215: FILE: drivers/parport/parport_arc.c:115:
+	if (res == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#394: FILE: drivers/parport/parport_mfc3.c:297:
+^I.data_forward^I= mfc3_data_forward, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: drivers/parport/parport_mfc3.c:298:
+^I.data_reverse^I= mfc3_data_reverse, $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base_res"
#536: FILE: drivers/parport/parport_pc.c:2212:
+	if (base_res == NULL)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#566: FILE: drivers/parport/parport_pc.c:2252:
+		EPP_res = request_region(base+0x3, 5, fake_name);
 		                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#573: FILE: drivers/parport/parport_pc.c:2257:
+	if (!parport_SPP_supported (p))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#633: FILE: drivers/parport/parport_pc.c:2417:
+		release_region(base+0x3, 5);
 		                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#635: FILE: drivers/parport/parport_pc.c:2419:
+	kfree (priv);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#636: FILE: drivers/parport/parport_pc.c:2420:
+	kfree (ops);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#831: FILE: drivers/parport/share.c:90:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#831: FILE: drivers/parport/share.c:90:
+ $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#880: FILE: drivers/parport/share.c:430:
+	spin_lock_irq (&parportlist_lock);

WARNING:LINE_SPACING: Missing a blank line after declarations
#883: FILE: drivers/parport/share.c:433:
+		struct parport *itr = portlist;
+		while (itr) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#887: FILE: drivers/parport/share.c:437:
+				break;
+			else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!itr"
#891: FILE: drivers/parport/share.c:441:
+		if (itr == NULL)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#899: FILE: drivers/parport/share.c:449:
+	tmp->portnum = tmp->number = portnum;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#903: FILE: drivers/parport/share.c:453:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#903: FILE: drivers/parport/share.c:453:
 
+	

WARNING:BRACES: braces {} are not necessary for single statement blocks
#922: FILE: drivers/parport/share.c:675:
+	if (!try_module_get(port->ops->owner)) {
+		return NULL;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#925: FILE: drivers/parport/share.c:678:
+^I^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000383556.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 10 warnings, 7 checks, 897 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000383556.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
