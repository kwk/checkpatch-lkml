CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: arch/powerpc/mm/fault.c:146:
+	if (notify_page_fault(DIE_PAGE_FAULT, "page_fault", regs, error_code,
 				11, SIGSEGV) == NOTIFY_STOP)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#104: FILE: include/asm-powerpc/kdebug.h:21:
+extern int register_page_fault_notifier(struct notifier_block *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_block *' should also have an identifier name
#104: FILE: include/asm-powerpc/kdebug.h:21:
+extern int register_page_fault_notifier(struct notifier_block *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#105: FILE: include/asm-powerpc/kdebug.h:22:
+extern int unregister_page_fault_notifier(struct notifier_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_block *' should also have an identifier name
#105: FILE: include/asm-powerpc/kdebug.h:22:
+extern int unregister_page_fault_notifier(struct notifier_block *);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#115: FILE: include/asm-powerpc/kdebug.h:42:
+static inline int notify_page_fault(enum die_val val,char *str,struct pt_regs *regs,long err,int trap, int sig)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#115: FILE: include/asm-powerpc/kdebug.h:42:
+static inline int notify_page_fault(enum die_val val,char *str,struct pt_regs *regs,long err,int trap, int sig)
                                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#115: FILE: include/asm-powerpc/kdebug.h:42:
+static inline int notify_page_fault(enum die_val val,char *str,struct pt_regs *regs,long err,int trap, int sig)
                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#115: FILE: include/asm-powerpc/kdebug.h:42:
+static inline int notify_page_fault(enum die_val val,char *str,struct pt_regs *regs,long err,int trap, int sig)
                                                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#115: FILE: include/asm-powerpc/kdebug.h:42:
+static inline int notify_page_fault(enum die_val val,char *str,struct pt_regs *regs,long err,int trap, int sig)
                                                                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#117: FILE: include/asm-powerpc/kdebug.h:44:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#117: FILE: include/asm-powerpc/kdebug.h:44:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#117: FILE: include/asm-powerpc/kdebug.h:44:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#117: FILE: include/asm-powerpc/kdebug.h:44:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#117: FILE: include/asm-powerpc/kdebug.h:44:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#117: FILE: include/asm-powerpc/kdebug.h:44:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                                                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#118: FILE: include/asm-powerpc/kdebug.h:45:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
+	return atomic_notifier_call_chain(&notify_page_fault_chain, val, &args);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000084298.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 4 warnings, 3 checks, 52 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000084298.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
