WARNING:TYPO_SPELLING: 'improvments' may be misspelled - perhaps 'improvements'?
#12: 
Subject: [PATCH][IO_APIC] 2.5.63bk7 irq_balance improvments / bug-fixes
                                                ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'interupts' may be misspelled - perhaps 'interrupts'?
#38: 
  If interupts / time drops down the IRQ is routed back to the default CPU
     ^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
  This is needed to decide which IRQ has to be routed back to the default CPU.

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#89: FILE: arch/i386/kernel/io_apic.c:219:
+#  define TDprintk(x...) do { printk("<%lu:%s:%d>: ", jiffies, __FILE__, __LINE__); printk(x); } while (0)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#89: FILE: arch/i386/kernel/io_apic.c:219:
+#  define TDprintk(x...) do { printk("<%lu:%s:%d>: ", jiffies, __FILE__, __LINE__); printk(x); } while (0)

CHECK:CAMELCASE: Avoid CamelCase: <TDprintk>
#89: FILE: arch/i386/kernel/io_apic.c:219:
+#  define TDprintk(x...) do { printk("<%lu:%s:%d>: ", jiffies, __FILE__, __LINE__); printk(x); } while (0)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#99: FILE: arch/i386/kernel/io_apic.c:239:
+} irq_cpu_total[NR_CPUS];

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == irq_desc[j].processor'
#152: FILE: arch/i386/kernel/io_apic.c:322:
+			if ((i == irq_desc[j].processor) &&
+			    (delta < useful_load_threshold) &&
+			    (irq_desc[j].processor != IRQ_PRIMARY_CPU)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'delta < useful_load_threshold'
#152: FILE: arch/i386/kernel/io_apic.c:322:
+			if ((i == irq_desc[j].processor) &&
+			    (delta < useful_load_threshold) &&
+			    (irq_desc[j].processor != IRQ_PRIMARY_CPU)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq_desc[j].processor != IRQ_PRIMARY_CPU'
#152: FILE: arch/i386/kernel/io_apic.c:322:
+			if ((i == irq_desc[j].processor) &&
+			    (delta < useful_load_threshold) &&
+			    (irq_desc[j].processor != IRQ_PRIMARY_CPU)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#156: FILE: arch/i386/kernel/io_apic.c:326:
+				balance_irq(irq_desc[j].processor,j,1);
 				                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#156: FILE: arch/i386/kernel/io_apic.c:326:
+				balance_irq(irq_desc[j].processor,j,1);
 				                                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#179: FILE: arch/i386/kernel/io_apic.c:488:
+static inline void balance_irq (int cpu, int irq, int on_primary)

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#224: FILE: arch/i386/kernel/io_apic.c:504:
+	/* Does ist make sense to balance ? */
 	        ^^^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#228: FILE: arch/i386/kernel/io_apic.c:508:
+	for (i = 0; i < NR_CPUS; i++) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#229: FILE: arch/i386/kernel/io_apic.c:509:
+		if (!cpu_online(i) || !IRQ_ALLOWED(i,allowed_mask))
 		                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#236: FILE: arch/i386/kernel/io_apic.c:516:
+	if (CPU_IRQ_TOTAL(CPU_TO_PACKAGEINDEX(new_cpu)) + IRQ_DELTA(CPU_TO_PACKAGEINDEX(cpu),irq)
 	                                                                                    ^

CHECK:CAMELCASE: Avoid CamelCase: <Dprintk>
#238: FILE: arch/i386/kernel/io_apic.c:518:
+		Dprintk("balanced_irq: Balance makes no sense\n");

CHECK:BRACES: Unbalanced braces around else statement
#250: FILE: arch/i386/kernel/io_apic.c:529:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#262: FILE: arch/i386/kernel/io_apic.c:541:
+	/* push everything to CPU(IRQ_PRIMRAY_CPU)
+	   to give us a starting point. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#262: FILE: arch/i386/kernel/io_apic.c:541:
+	   to give us a starting point. */

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#269: FILE: arch/i386/kernel/io_apic.c:548:
+	for (i = 0; i < NR_CPUS; i++) {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#311: FILE: arch/i386/kernel/irq.c:70:
+irq_desc_t irq_desc[NR_IRQS] __cacheline_aligned =
+	{ [0 ... NR_IRQS-1] = { 0, &no_irq_type, NULL, 0, 0, SPIN_LOCK_UNLOCKED}};

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#311: FILE: arch/i386/kernel/irq.c:70:
+	{ [0 ... NR_IRQS-1] = { 0, &no_irq_type, NULL, 0, 0, SPIN_LOCK_UNLOCKED}};
 	                ^

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#324: FILE: arch/i386/kernel/irq.c:149:
+	p += seq_printf(p, "ON_CPU");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000388731.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 13 warnings, 7 checks, 255 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000388731.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
