WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
>> > +/******************************** Disk dump **************************

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#90: FILE: include/linux/diskdumplib.h:1:
+#ifndef _LINUX_DISKDUMPLIB_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct timer_list *' should also have an identifier name
#101: FILE: include/linux/diskdumplib.h:12:
+void diskdump_add_timer(struct timer_list *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct timer_list *' should also have an identifier name
#102: FILE: include/linux/diskdumplib.h:13:
+int diskdump_del_timer(struct timer_list *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct timer_list *' should also have an identifier name
#103: FILE: include/linux/diskdumplib.h:14:
+int diskdump_mod_timer(struct timer_list *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#103: FILE: include/linux/diskdumplib.h:14:
+int diskdump_mod_timer(struct timer_list *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tasklet_struct *' should also have an identifier name
#104: FILE: include/linux/diskdumplib.h:15:
+void diskdump_tasklet_schedule(struct tasklet_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct work_struct *' should also have an identifier name
#105: FILE: include/linux/diskdumplib.h:16:
+int diskdump_schedule_work(struct work_struct *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#171: FILE: kernel/diskdumplib.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#172: FILE: kernel/diskdumplib.c:2:
+ *  linux/kernel/diskdumplib.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#190: FILE: kernel/diskdumplib.c:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#191: FILE: kernel/diskdumplib.c:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#214: FILE: kernel/diskdumplib.c:44:
+unsigned long volatile diskdump_base_jiffies;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#230: FILE: kernel/diskdumplib.c:60:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!diskdump_tasklets[i]"
#236: FILE: kernel/diskdumplib.c:66:
+		if (diskdump_tasklets[i] == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#257: FILE: kernel/diskdumplib.c:87:
+			printk(KERN_ERR "diskdumplib: too many tasklet. Ignored\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "timer->base"
#282: FILE: kernel/diskdumplib.c:112:
+	if (timer->base != NULL) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#285: FILE: kernel/diskdumplib.c:115:
+		return 1;
+	} else {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#335: FILE: kernel/diskdumplib.c:165:
+		if ((tasklet = diskdump_tasklets[i]))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#360: FILE: kernel/diskdumplib.c:190:
+	udelay(1000000/HZ);
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#373: FILE: kernel/diskdumplib.c:203:
+EXPORT_SYMBOL(diskdump_lib_init);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#374: FILE: kernel/diskdumplib.c:204:
+EXPORT_SYMBOL(diskdump_lib_exit);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#375: FILE: kernel/diskdumplib.c:205:
+EXPORT_SYMBOL(diskdump_update);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#376: FILE: kernel/diskdumplib.c:206:
+EXPORT_SYMBOL(diskdump_add_timer);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#377: FILE: kernel/diskdumplib.c:207:
+EXPORT_SYMBOL(diskdump_del_timer);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#378: FILE: kernel/diskdumplib.c:208:
+EXPORT_SYMBOL(diskdump_mod_timer);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#379: FILE: kernel/diskdumplib.c:209:
+EXPORT_SYMBOL(diskdump_tasklet_schedule);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#380: FILE: kernel/diskdumplib.c:210:
+EXPORT_SYMBOL(diskdump_schedule_work);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#381: FILE: kernel/diskdumplib.c:211:
+EXPORT_SYMBOL(diskdump_schedule_timeout);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#391: FILE: kernel/timer.c:258:
+	if (crashdump_mode()) {
+		return diskdump_mod_timer(timer, expires);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#402: FILE: kernel/timer.c:293:
+	if (crashdump_mode()) {
+		return diskdump_del_timer(timer);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#413: FILE: kernel/timer.c:338:
+	if (crashdump_mode()) {
+		return diskdump_del_timer(timer);
+	}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000274416.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 25 warnings, 4 checks, 327 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000274416.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
