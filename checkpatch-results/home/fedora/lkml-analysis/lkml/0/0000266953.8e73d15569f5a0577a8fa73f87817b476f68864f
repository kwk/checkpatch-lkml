WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#19: 
Subject: [PATCH 466] m68k sparse inline

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

ERROR:SPACING: space prohibited after that open parenthesis '('
#65: FILE: drivers/block/ataflop.c:391:
+static inline void start_check_change_timer( void )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#65: FILE: drivers/block/ataflop.c:391:
+static inline void start_check_change_timer( void )

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#106: FILE: drivers/block/ataflop.c:571:
+	for (cnt = 512/4; cnt; cnt--)
 	              ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#150: FILE: drivers/char/ser_a2232.c:177:
+static inline volatile struct a2232memory *a2232mem(unsigned int board)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#152: FILE: drivers/char/ser_a2232.c:179:
+	return (volatile struct a2232memory *)ZTWO_VADDR(zd_a2232[board]->resource.start);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#155: FILE: drivers/char/ser_a2232.c:182:
+static inline volatile struct a2232status *a2232stat(unsigned int board,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#158: FILE: drivers/char/ser_a2232.c:185:
+	volatile struct a2232memory *mem = a2232mem(board);

WARNING:LINE_SPACING: Missing a blank line after declarations
#159: FILE: drivers/char/ser_a2232.c:186:
+	volatile struct a2232memory *mem = a2232mem(board);
+	return &(mem->Status[portonboard]);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around mem->Status[portonboard]
#159: FILE: drivers/char/ser_a2232.c:186:
+	return &(mem->Status[portonboard]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <Status>
#159: FILE: drivers/char/ser_a2232.c:186:
+	return &(mem->Status[portonboard]);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#164: FILE: drivers/char/ser_a2232.c:191:
+/* ^IMostly stolen from other drivers.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#165: FILE: drivers/char/ser_a2232.c:192:
+/* 	Mostly stolen from other drivers.
+	Maybe one could implement a more efficient version by not only

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: drivers/char/ser_a2232.c:196:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#175: FILE: drivers/char/ser_a2232.c:202:
+#if 0

ERROR:SPACING: space required before the open parenthesis '('
#176: FILE: drivers/char/ser_a2232.c:203:
+	switch(err) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#262: FILE: drivers/scsi/fastlane.c:114:
+^Istruct fastlane_dma_registers *dregs = $

CHECK:SPACING: No space is necessary after a cast
#263: FILE: drivers/scsi/fastlane.c:115:
+		(struct fastlane_dma_registers *) (esp->dregs);

WARNING:SPACING: space prohibited before semicolon
#272: FILE: drivers/scsi/fastlane.c:124:
+	*t = 0 ;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000266953.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 10 warnings, 4 checks, 291 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000266953.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
