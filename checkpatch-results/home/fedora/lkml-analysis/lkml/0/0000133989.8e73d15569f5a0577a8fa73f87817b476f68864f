WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
The attached patch makes it possible for a running process (such as gssapid)

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#83: 
Signed-Off-By: David Howells <dhowells@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:TYPO_SPELLING: 'authorititive' may be misspelled - perhaps 'authoritative'?
#191: FILE: Documentation/keys.txt:669:
+     The assumed authorititive key is inherited across fork and exec.
                  ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#290: FILE: security/keys/internal.h:142:
+extern long keyctl_assume_authority(key_serial_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'key_serial_t' should also have an identifier name
#290: FILE: security/keys/internal.h:142:
+extern long keyctl_assume_authority(key_serial_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#302: FILE: security/keys/keyctl.c:838:
+	 * assumed before calling this */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#349: FILE: security/keys/keyctl.c:881:
+	 * instantiation of the key */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#371: FILE: security/keys/keyctl.c:907:
+	 * assumed before calling this */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#402: FILE: security/keys/keyctl.c:935:
+	 * instantiation of the key */

CHECK:SPACING: No space is necessary after a cast
#466: FILE: security/keys/keyctl.c:1144:
+		return keyctl_assume_authority((key_serial_t) arg2);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#564: FILE: security/keys/permission.c:107:
+EXPORT_SYMBOL(key_validate);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:BRACES: Unbalanced braces around else statement
#636: FILE: security/keys/process_keys.c:472:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#637: FILE: security/keys/process_keys.c:473:
+		key_ref = keyring_search_aux(

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#702: FILE: security/keys/request_key_auth.c:18:
+#include <asm/uaccess.h>

CHECK:SPACING: No space is necessary after a cast
#757: FILE: security/keys/request_key_auth.c:46:
+	key->payload.data = (struct request_key_auth *) data;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#845: FILE: security/keys/request_key_auth.c:131:
+	 * another process */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#852: FILE: security/keys/request_key_auth.c:138:
 	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#852: FILE: security/keys/request_key_auth.c:138:
+	else {

CHECK:SPACING: No space is necessary after a cast
#919: FILE: security/keys/request_key_auth.c:186:
+	key_serial_t id = (key_serial_t)(unsigned long) _id;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#947: FILE: security/keys/request_key_auth.c:205:
+	authkey_ref = search_process_keyrings(

CHECK:SPACING: No space is necessary after a cast
#949: FILE: security/keys/request_key_auth.c:207:
+		(void *) (unsigned long) target_id,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000133989.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 11 warnings, 9 checks, 948 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000133989.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
