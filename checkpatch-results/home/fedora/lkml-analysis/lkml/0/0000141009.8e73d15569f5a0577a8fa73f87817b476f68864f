WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
> > It seems pretty clear that a separate notifier_head would be a good thing 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: kernel/sys.c:110:
+int notifier_chain_register(struct notifier_head *nh,
+		struct notifier_block *n)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: kernel/sys.c:149:
+int notifier_chain_unregister(struct notifier_head *nh,
+		struct notifier_block *n)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#268: FILE: include/linux/notifier.h:41:
+#define ATOMIC_NOTIFIER_HEAD_INIT(name) {			\
+		.type = ATOMIC_NOTIFIER,			\
+		.rwsem = __RWSEM_INITIALIZER((name).rwsem),	\
+		.chain = LIST_HEAD_INIT((name).chain) }

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#273: FILE: include/linux/notifier.h:46:
+#define BLOCKING_NOTIFIER_HEAD_INIT(name) {			\
+		.type = BLOCKING_NOTIFIER,			\
+		.rwsem = __RWSEM_INITIALIZER((name).rwsem),	\
+		.chain = LIST_HEAD_INIT((name).chain) }

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#278: FILE: include/linux/notifier.h:51:
+#define DEFINE_ATOMIC_NOTIFIER_HEAD(name) ^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#278: FILE: include/linux/notifier.h:51:
+#define DEFINE_ATOMIC_NOTIFIER_HEAD(name) 	\
+		struct notifier_head name = ATOMIC_NOTIFIER_HEAD_INIT(name)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#281: FILE: include/linux/notifier.h:54:
+#define DEFINE_BLOCKING_NOTIFIER_HEAD(name) ^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#281: FILE: include/linux/notifier.h:54:
+#define DEFINE_BLOCKING_NOTIFIER_HEAD(name) 	\
+		struct notifier_head name = BLOCKING_NOTIFIER_HEAD_INIT(name)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#289: FILE: include/linux/notifier.h:60:
+	int (*notifier_call)(struct notifier_block *self, unsigned long,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#289: FILE: include/linux/notifier.h:60:
+	int (*notifier_call)(struct notifier_block *self, unsigned long,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: include/linux/notifier.h:61:
+	int (*notifier_call)(struct notifier_block *self, unsigned long,
+			void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#301: FILE: include/linux/notifier.h:69:
+extern int notifier_chain_register(struct notifier_head *nh,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: include/linux/notifier.h:70:
+extern int notifier_chain_register(struct notifier_head *nh,
+		struct notifier_block *n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#303: FILE: include/linux/notifier.h:71:
+extern int notifier_chain_unregister(struct notifier_head *nh,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: include/linux/notifier.h:72:
+extern int notifier_chain_unregister(struct notifier_head *nh,
+		struct notifier_block *n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#305: FILE: include/linux/notifier.h:73:
+extern int notifier_call_chain(struct notifier_head *nh,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: include/linux/notifier.h:74:
+extern int notifier_call_chain(struct notifier_head *nh,
+		unsigned long val, void *v);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#312: FILE: include/linux/notifier.h:79:
+#define NOTIFY_BAD		(NOTIFY_STOP_MASK|0x0002)
                   		                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000141009.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 5 warnings, 14 checks, 231 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000141009.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
