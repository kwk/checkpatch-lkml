WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
In article <Pine.LNX.4.44.0210311021560.19356-100000@netcore.fi> (at Thu, 31 Oct 2002 10:24:11 +0200 (EET)), Pekka Savola <pekkas@netcore.fi> says:

WARNING:TYPO_SPELLING: 'temprary' may be misspelled - perhaps 'temporary'?
#46: 
   (don't generate and use temprary addresses by default)
                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PATCH_PREFIX: patch prefix 'Documentation' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'temorary' may be misspelled - perhaps 'temporary'?
#75: FILE: networking/ip-sysctl.txt:629:
+	Preferred lifetime (in seconds) for temorary addresses.
 	                                    ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: networking/ip-sysctl.txt:634:
+^Ithat ensures that clients don't synchronize with each $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: networking/ip-sysctl.txt:638:
+^I$

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#123: FILE: linux/sysctl.h:387:
+	NET_IPV6_RTR_SOLICIT_DELAY=10,
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#124: FILE: linux/sysctl.h:388:
+	NET_IPV6_USE_TEMPADDR=11,
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#125: FILE: linux/sysctl.h:389:
+	NET_IPV6_TEMP_VALID_LFT=12,
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#126: FILE: linux/sysctl.h:390:
+	NET_IPV6_TEMP_PREFERED_LFT=13,
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#127: FILE: linux/sysctl.h:391:
+	NET_IPV6_REGEN_MAX_RETRY=14,
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#128: FILE: linux/sysctl.h:392:
+	NET_IPV6_MAX_DESYNC_FACTOR=15
 	                          ^

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#144: FILE: net/addrconf.h:9:
+#define TEMP_VALID_LIFETIME		(7*86400)
                            		  ^

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#214: FILE: ipv6/Kconfig:4:
+config IPV6_PRIVACY
+	bool "IPv6: Privacy Extensions (RFC 3041) support"
+	depends on IPV6
+	---help---
+	  Privacy Extensions for Stateless Address Autoconfiguration in IPv6
+	  support.  With this option, additional periodically-alter 
+	  pseudo-random global-scope unicast address(es) will assigned to
+	  your interface(s).
+	
+	  By default, kernel do not generate temporary addresses.
+	  To use temporary addresses, do
+	
+	        echo 2 >/proc/sys/net/ipv6/conf/all/use_tempaddr 
+
+	  See <file:Documentation/networking/ip-sysctl.txt> for details.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#219: FILE: ipv6/Kconfig:9:
+^I  support.  With this option, additional periodically-alter $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: ipv6/Kconfig:12:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: ipv6/Kconfig:15:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#226: FILE: ipv6/Kconfig:16:
+^I        echo 2 >/proc/sys/net/ipv6/conf/all/use_tempaddr $

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: ipv6/addrconf.c:96:
+static int __ipv6_try_regen_rndid(struct inet6_dev *idev, struct in6_addr *tmpaddr); $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#284: FILE: ipv6/addrconf.c:141:
+^I.use_tempaddr ^I^I^I= 0,$

CHECK:SPACING: No space is necessary after a cast
#316: FILE: ipv6/addrconf.c:312:
+		ndev->regen_timer.data = (unsigned long) ndev;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#317: FILE: ipv6/addrconf.c:313:
+		if ((dev->flags&IFF_LOOPBACK) ||
 		               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#320: FILE: ipv6/addrconf.c:316:
+			printk(KERN_INFO

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#339: FILE: ipv6/addrconf.c:452:
+	if (ifa->flags&IFA_F_TEMPORARY) {
 	              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#372: FILE: ipv6/addrconf.c:505:
+	if (ifp->flags&IFA_F_TEMPORARY) {
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#373: FILE: ipv6/addrconf.c:506:
+		for (ifap = &idev->tempaddr_list; (ifa=*ifap) != NULL;
 		                                      ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#373: FILE: ipv6/addrconf.c:506:
+		for (ifap = &idev->tempaddr_list; (ifa=*ifap) != NULL;
 		                                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#423: FILE: ipv6/addrconf.c:569:
+		printk(KERN_INFO

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipv6_create_tempaddr', this function's name, in a string
#424: FILE: ipv6/addrconf.c:570:
+			"ipv6_create_tempaddr(): use_tempaddr is disabled.\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#434: FILE: ipv6/addrconf.c:580:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipv6_create_tempaddr', this function's name, in a string
#435: FILE: ipv6/addrconf.c:581:
+			"ipv6_create_tempaddr(): regeneration time exceeded. disabled temporary address support.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#444: FILE: ipv6/addrconf.c:590:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipv6_create_tempaddr', this function's name, in a string
#445: FILE: ipv6/addrconf.c:591:
+			"ipv6_create_tempaddr(): regeneration of randomized interface id failed.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#455: FILE: ipv6/addrconf.c:601:
+^Itmp_prefered_lft = min_t(__u32, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#456: FILE: ipv6/addrconf.c:602:
+^I^I^I^I ifp->prefered_lft, $

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#463: FILE: ipv6/addrconf.c:609:
+			      ipv6_addr_type(&addr)&IPV6_ADDR_SCOPE_MASK, IFA_F_TEMPORARY) : 0;
 			                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#467: FILE: ipv6/addrconf.c:613:
+		printk(KERN_INFO

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipv6_create_tempaddr', this function's name, in a string
#468: FILE: ipv6/addrconf.c:614:
+			"ipv6_create_tempaddr(): retry temporary address regeneration.\n");

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#493: FILE: ipv6/addrconf.c:640:
+static int inline ipv6_saddr_pref(const struct inet6_ifaddr *ifp, u8 invpref)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:LINE_SPACING: Missing a blank line after declarations
#496: FILE: ipv6/addrconf.c:643:
+	int pref;
+	pref = ifp->flags&IFA_F_DEPRECATED ? 0 : 2;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#496: FILE: ipv6/addrconf.c:643:
+	pref = ifp->flags&IFA_F_DEPRECATED ? 0 : 2;
 	                 ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#498: FILE: ipv6/addrconf.c:645:
+	pref |= (ifp->flags^invpref)&IFA_F_TEMPORARY ? 0 : 1;
 	                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#498: FILE: ipv6/addrconf.c:645:
+	pref |= (ifp->flags^invpref)&IFA_F_TEMPORARY ? 0 : 1;
 	                            ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#526: FILE: ipv6/addrconf.c:696:
+					if (ifp->flags&IFA_F_TENTATIVE)
 					              ^

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#529: FILE: ipv6/addrconf.c:699:
+					score = ipv6_saddr_pref(ifp, idev->cnf.use_tempaddr > 1 ? IFA_F_TEMPORARY : 0);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#561: FILE: ipv6/addrconf.c:739:
+					if (ifp->flags&IFA_F_TENTATIVE)
 					              ^

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#564: FILE: ipv6/addrconf.c:742:
+					score = ipv6_saddr_pref(ifp, idev->cnf.use_tempaddr > 1 ? IFA_F_TEMPORARY : 0);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#617: FILE: ipv6/addrconf.c:866:
+	} else if (ifp->flags&IFA_F_TEMPORARY) {
 	                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#619: FILE: ipv6/addrconf.c:868:
+		struct inet6_ifaddr *ifpub;
+		spin_lock_bh(&ifp->lock);

CHECK:SPACING: No space is necessary after a cast
#649: FILE: ipv6/addrconf.c:956:
+	sg[0].offset = ((long) idev->entropy & ~PAGE_MASK);

CHECK:SPACING: No space is necessary after a cast
#652: FILE: ipv6/addrconf.c:959:
+	sg[1].offset = ((long) eui64 & ~PAGE_MASK);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#661: FILE: ipv6/addrconf.c:968:
+		printk(KERN_INFO

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__ipv6_regen_rndid', this function's name, in a string
#662: FILE: ipv6/addrconf.c:969:
+			"__ipv6_regen_rndid(idev=%p): cannot get EUI64 identifier; use random bytes.\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tfm"
#668: FILE: ipv6/addrconf.c:975:
+	if (tfm == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#670: FILE: ipv6/addrconf.c:977:
+			printk(KERN_WARNING

ERROR:TRAILING_WHITESPACE: trailing whitespace
#695: FILE: ipv6/addrconf.c:1002:
+^Iif (idev->rndid[0] == 0xfd && $

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#696: FILE: ipv6/addrconf.c:1003:
+	    (idev->rndid[1]&idev->rndid[2]&idev->rndid[3]&idev->rndid[4]&idev->rndid[5]&idev->rndid[6]) &&

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#696: FILE: ipv6/addrconf.c:1003:
+	    (idev->rndid[1]&idev->rndid[2]&idev->rndid[3]&idev->rndid[4]&idev->rndid[5]&idev->rndid[6]) &&
 	                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#696: FILE: ipv6/addrconf.c:1003:
+	    (idev->rndid[1]&idev->rndid[2]&idev->rndid[3]&idev->rndid[4]&idev->rndid[5]&idev->rndid[6]) &&
 	                                  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#696: FILE: ipv6/addrconf.c:1003:
+	    (idev->rndid[1]&idev->rndid[2]&idev->rndid[3]&idev->rndid[4]&idev->rndid[5]&idev->rndid[6]) &&
 	                                                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#696: FILE: ipv6/addrconf.c:1003:
+	    (idev->rndid[1]&idev->rndid[2]&idev->rndid[3]&idev->rndid[4]&idev->rndid[5]&idev->rndid[6]) &&
 	                                                                ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#696: FILE: ipv6/addrconf.c:1003:
+	    (idev->rndid[1]&idev->rndid[2]&idev->rndid[3]&idev->rndid[4]&idev->rndid[5]&idev->rndid[6]) &&
 	                                                                               ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#697: FILE: ipv6/addrconf.c:1004:
+	    (idev->rndid[7]&0x80))
 	                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#699: FILE: ipv6/addrconf.c:1006:
+	if ((idev->rndid[0]|idev->rndid[1]) == 0) {
 	                   ^

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#702: FILE: ipv6/addrconf.c:1009:
+		if ((idev->rndid[2]|idev->rndid[3]|idev->rndid[4]|idev->rndid[5]|idev->rndid[6]|idev->rndid[7]) == 0x00)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#702: FILE: ipv6/addrconf.c:1009:
+		if ((idev->rndid[2]|idev->rndid[3]|idev->rndid[4]|idev->rndid[5]|idev->rndid[6]|idev->rndid[7]) == 0x00)
 		                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#702: FILE: ipv6/addrconf.c:1009:
+		if ((idev->rndid[2]|idev->rndid[3]|idev->rndid[4]|idev->rndid[5]|idev->rndid[6]|idev->rndid[7]) == 0x00)
 		                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#702: FILE: ipv6/addrconf.c:1009:
+		if ((idev->rndid[2]|idev->rndid[3]|idev->rndid[4]|idev->rndid[5]|idev->rndid[6]|idev->rndid[7]) == 0x00)
 		                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#702: FILE: ipv6/addrconf.c:1009:
+		if ((idev->rndid[2]|idev->rndid[3]|idev->rndid[4]|idev->rndid[5]|idev->rndid[6]|idev->rndid[7]) == 0x00)
 		                                                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#702: FILE: ipv6/addrconf.c:1009:
+		if ((idev->rndid[2]|idev->rndid[3]|idev->rndid[4]|idev->rndid[5]|idev->rndid[6]|idev->rndid[7]) == 0x00)
 		                                                                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#705: FILE: ipv6/addrconf.c:1012:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#708: FILE: ipv6/addrconf.c:1015:
+		printk(KERN_WARNING

WARNING:TYPO_SPELLING: 'diabled' may be misspelled - perhaps 'disabled'?
#709: FILE: ipv6/addrconf.c:1016:
+			"__ipv6_regen_rndid(): too short regeneration interval; timer diabled for %s.\n",
 			                                                              ^^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__ipv6_regen_rndid', this function's name, in a string
#709: FILE: ipv6/addrconf.c:1016:
+			"__ipv6_regen_rndid(): too short regeneration interval; timer diabled for %s.\n",

CHECK:SPACING: No space is necessary after a cast
#721: FILE: ipv6/addrconf.c:1028:
+	struct inet6_dev *idev = (struct inet6_dev *) data;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#731: FILE: ipv6/addrconf.c:1038:
+static int __ipv6_try_regen_rndid(struct inet6_dev *idev, struct in6_addr *tmpaddr) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#777: FILE: ipv6/addrconf.c:1284:
+			for (ift=in6_dev->tempaddr_list; ift; ift=ift->tmp_next) {
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#777: FILE: ipv6/addrconf.c:1284:
+			for (ift=in6_dev->tempaddr_list; ift; ift=ift->tmp_next) {
 			                                         ^

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#792: FILE: ipv6/addrconf.c:1299:
+					ift->prefered_lft = prefered_lft + (jiffies - ift->tstamp) / HZ;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#794: FILE: ipv6/addrconf.c:1301:
+				if (!(flags&IFA_F_TENTATIVE))
 				           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#803: FILE: ipv6/addrconf.c:1310:
+^I^I^I^Iread_unlock_bh(&in6_dev->lock); $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#855: FILE: ipv6/addrconf.c:2367:
+	for (i=0; t->addrconf_vars[i].data; i++) {
 	      ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000417638.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 34 warnings, 29 checks, 723 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000417638.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
