CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#90: FILE: include/asm-x86_64/irqflags.h:22:
+	__asm__ __volatile__(

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#101: FILE: include/asm-x86_64/irqflags.h:33:
+#define raw_local_save_flags(flags) \
+		do { (flags) = __raw_local_save_flags(); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#106: FILE: include/asm-x86_64/irqflags.h:38:
+	__asm__ __volatile__(

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#109: FILE: include/asm-x86_64/irqflags.h:41:
+		:"g" (flags)
 		^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#110: FILE: include/asm-x86_64/irqflags.h:42:
+		:"memory", "cc"
 		^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#157: FILE: include/asm-x86_64/irqflags.h:68:
+	return !(flags & (1<<9)) || (flags & (1 << 18));
 	                   ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#203: FILE: include/asm-x86_64/irqflags.h:103:
+#define raw_local_irq_save(flags) \
+		do { (flags) = __raw_local_irq_save(); } while (0)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#228: FILE: include/asm-x86_64/irqflags.h:128:
+	__asm__ __volatile__("hlt": : :"memory");
 	                          ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#228: FILE: include/asm-x86_64/irqflags.h:128:
+	__asm__ __volatile__("hlt": : :"memory");
 	                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#233: FILE: include/asm-x86_64/irqflags.h:133:
+#  define TRACE_IRQS_ON		call trace_hardirqs_on_thunk

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#234: FILE: include/asm-x86_64/irqflags.h:134:
+#  define TRACE_IRQS_OFF	call trace_hardirqs_off_thunk

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000073422.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 2 warnings, 3 checks, 184 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000073422.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
