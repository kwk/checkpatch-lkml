WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Content-Disposition: attachment; filename=kexec-tools-crashdump-backup-x86.patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#51: FILE: kexec/arch/i386/crashdump-x86.h:1:
+#ifndef CRASHDUMP_X86_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#114: FILE: kexec/arch/i386/kexec-elf-x86.c:227:
+		 * to be created. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#120: FILE: kexec/arch/i386/kexec-elf-x86.c:233:
+			 * memory*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: kexec/arch/i386/kexec-elf-x86.c:238:
+			info->backup_start = add_buffer(info, tmp, sz, sz, 1024,
+						0, max_addr, 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: kexec/arch/i386/kexec-x86.c:41:
+int get_memory_ranges(struct memory_range **range, int *ranges,
+				unsigned long kexec_flags)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#169: FILE: kexec/arch/i386/kexec-x86.c:83:
 		}
+		else if (memcmp(str, "Crash kernel\n", 13) == 0) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#193: FILE: kexec/arch/i386/kexec-x86.c:267:
+	uint8_t panic_kernel = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: kexec/arch/i386/kexec-x86.c:282:
+		elf_rel_set_symbol(&info->rhdr, "backup_start",
+				&info->backup_start, sizeof(info->backup_start));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: kexec/arch/i386/kexec-x86.c:285:
+	elf_rel_set_symbol(&info->rhdr, "panic_kernel",
+		&panic_kernel, sizeof(panic_kernel));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: kexec/arch/ia64/kexec-ia64.c:42:
+int get_memory_ranges(struct memory_range **range, int *ranges,
+				unsigned long kexec_flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#342: FILE: kexec/arch/ppc/kexec-ppc.c:27:
+int get_memory_ranges(struct memory_range **range, int *ranges,
+					unsigned long kexec_flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#418: FILE: kexec/arch/x86_64/kexec-x86_64.c:41:
+int get_memory_ranges(struct memory_range **range, int *ranges,
+					unsigned long kexec_flags)

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#452: FILE: kexec/kexec.c:41:
+unsigned long long mem_min = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#480: FILE: kexec/kexec.c:474:
+		if (info->segment[i].mem == (void *)info->backup_start) {
+			continue;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: kexec/kexec.c:568:
+	if (file_type[i].load(argc, argv, kernel_buf, kernel_size, &info,
+				kexec_flags) < 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#544: FILE: kexec/kexec.h:122:
+int get_memory_ranges(struct memory_range **range, int *ranges,
+						unsigned long kexec_flags);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#577: FILE: purgatory/arch/i386/crashdump_backup.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#593: FILE: purgatory/arch/i386/crashdump_backup.c:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#594: FILE: purgatory/arch/i386/crashdump_backup.c:18:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#604: FILE: purgatory/arch/i386/crashdump_backup.c:28:
+uint32_t backup_start = 0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#604: FILE: purgatory/arch/i386/crashdump_backup.c:28:
+uint32_t backup_start = 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#608: FILE: purgatory/arch/i386/crashdump_backup.c:32:
+ * validity checks have to be performed. */

CHECK:SPACING: No space is necessary after a cast
#614: FILE: purgatory/arch/i386/crashdump_backup.c:38:
+	src = (void *) BACKUP_REGION_SOURCE;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#628: FILE: purgatory/arch/i386/purgatory-x86.c:33:
+uint8_t panic_kernel = 0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#628: FILE: purgatory/arch/i386/purgatory-x86.c:33:
+uint8_t panic_kernel = 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#636: FILE: purgatory/arch/i386/purgatory-x86.c:41:
+	if (panic_kernel)   crashdump_backup_memory();

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000204878.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 7 warnings, 13 checks, 475 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000204878.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
