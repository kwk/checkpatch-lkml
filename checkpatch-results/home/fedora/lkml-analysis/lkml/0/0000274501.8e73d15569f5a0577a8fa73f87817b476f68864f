WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
This is just a resync of the staircase6.E patch with no changes. A formal=20

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#137: FILE: include/linux/sysctl.h:136:
+	KERN_INTERACTIVE=66,	/* interactive tasks can have cpu bursts */
 	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#138: FILE: include/linux/sysctl.h:137:
+	KERN_COMPUTE=67,	/* adjust timeslices for a compute server */
 	            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#156: FILE: init/main.c:323:
+	printk("Generic cache decay timeout: %ld msecs.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: init/main.c:324:
+	printk("Generic cache decay timeout: %ld msecs.\n",
+		(cache_decay_ticks * 1000 / HZ));

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#304: FILE: kernel/sched.c:71:
+int compute = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: kernel/sched.c:72:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#353: FILE: kernel/sched.c:112:
+	unsigned long bitmap[BITS_TO_LONGS(MAX_PRIO+1)];
 	                                           ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#374: FILE: kernel/sched.c:195:
+	if (!compute || rq->cache_ticks >= cache_decay_ticks ||
[...]
+			return 1;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#375: FILE: kernel/sched.c:196:
+	if (!compute || rq->cache_ticks >= cache_decay_ticks ||
+		rt_task(p) || !p->mm || rq->curr == rq->idle)

WARNING:LINE_SPACING: Missing a blank line after declarations
#481: FILE: kernel/sched.c:256:
+	unsigned int task_user_prio;
+	if (rt_task(p))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#513: FILE: kernel/sched.c:268:
+	unsigned int best_burst;
+	best_burst = burst(p);

WARNING:LINE_SPACING: Missing a blank line after declarations
#549: FILE: kernel/sched.c:283:
+	unsigned int slice = RR_INTERVAL;
+	if (!rt_task(p))

WARNING:LINE_SPACING: Missing a blank line after declarations
#582: FILE: kernel/sched.c:302:
+	unsigned int best_burst;
+	if (rt_task(p))

WARNING:LINE_SPACING: Missing a blank line after declarations
#609: FILE: kernel/sched.c:329:
+	unsigned long total_run = NS_TO_JIFFIES(p->totalrun) + run_time;
+	if (!run_time && NS_TO_JIFFIES(p->runtime + sleep_time) < RR_INTERVAL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#909: FILE: kernel/sched.c:1139:
+static inline $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#910: FILE: kernel/sched.c:1140:
+void pull_task(runqueue_t *src_rq, task_t *p, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#911: FILE: kernel/sched.c:1141:
+void pull_task(runqueue_t *src_rq, task_t *p, 
+		runqueue_t *this_rq, int this_cpu)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#973: FILE: kernel/sched.c:1211:
+^Iif (idx >= MAX_PRIO) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1121: FILE: kernel/sched.c:1832:
+		if (((smt_curr->slice * (100 - sd->per_cpu_gain) / 100) >
[...]
 				ret = 1;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1132: FILE: kernel/sched.c:1842:
+^I^Iif ((((p->slice * (100 - sd->per_cpu_gain) / 100) > $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1132: FILE: kernel/sched.c:1842:
+		if ((((p->slice * (100 - sd->per_cpu_gain) / 100) > 
[...]
 				resched_task(smt_curr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1133: FILE: kernel/sched.c:1843:
+^I^I^Islice(smt_curr) || rt_task(p)) && $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1252: FILE: kernel/sched.c:2217:
+	if ((queued = task_queued(p)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1273: FILE: kernel/sched.c:2332:
+	BUG_ON(task_queued(p));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1293: FILE: kernel/sched.c:2408:
+	if ((queued = task_queued(p)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1406: FILE: kernel/sched.c:3543:
+^I^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1428: FILE: kernel/sched.c:3558:
+		memset(rq->bitmap, 0, BITS_TO_LONGS(MAX_PRIO+1)*sizeof(long));
 		                                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1428: FILE: kernel/sched.c:3558:
+		memset(rq->bitmap, 0, BITS_TO_LONGS(MAX_PRIO+1)*sizeof(long));
 		                                               ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1445: FILE: kernel/sysctl.c:643:
+		.maxlen		= sizeof (int),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1453: FILE: kernel/sysctl.c:651:
+		.maxlen		= sizeof (int),

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000274501.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 13 warnings, 6 checks, 1320 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000274501.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
