ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#36: 
--- a/include/linux/skbuff.h	Tue Apr 27 10:40:45 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#42: FILE: include/linux/skbuff.h:514:
+extern void skb_queue_head(struct sk_buff_head *list, struct sk_buff *newsk);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#79: FILE: include/linux/skbuff.h:539:
+extern void skb_queue_tail(struct sk_buff_head *list, struct sk_buff *newsk);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#114: FILE: include/linux/skbuff.h:563:
+extern struct sk_buff *skb_dequeue(struct sk_buff_head *list);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#146: FILE: include/linux/skbuff.h:587:
+extern void        skb_insert(struct sk_buff *old, struct sk_buff *newsk);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#177: FILE: include/linux/skbuff.h:602:
+extern void	   skb_append(struct sk_buff *old, struct sk_buff *newsk);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#207: FILE: include/linux/skbuff.h:612:
+extern void	   skb_unlink(struct sk_buff *skb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#247: FILE: include/linux/skbuff.h:637:
+extern struct sk_buff *skb_dequeue_tail(struct sk_buff_head *list);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#302: FILE: include/linux/skbuff.h:884:
+extern void skb_queue_purge(struct sk_buff_head *list);

WARNING:LINE_SPACING: Missing a blank line after declarations
#363: FILE: net/core/skbuff.c:1144:
+	struct sk_buff *skb;
+	while ((skb = skb_dequeue(list)) != NULL)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#406: FILE: net/core/skbuff.c:1187:
+}
+/**

CHECK:LINE_SPACING: Please don't use multiple blank lines
#432: FILE: net/core/skbuff.c:1213:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#452: FILE: net/core/skbuff.c:1233:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#480: FILE: net/core/skbuff.c:1296:
+EXPORT_SYMBOL(skb_dequeue_tail);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#481: FILE: net/core/skbuff.c:1297:
+EXPORT_SYMBOL(skb_insert);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#482: FILE: net/core/skbuff.c:1298:
+EXPORT_SYMBOL(skb_queue_purge);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#483: FILE: net/core/skbuff.c:1299:
+EXPORT_SYMBOL(skb_queue_head);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#484: FILE: net/core/skbuff.c:1300:
+EXPORT_SYMBOL(skb_queue_tail);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#485: FILE: net/core/skbuff.c:1301:
+EXPORT_SYMBOL(skb_unlink);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#486: FILE: net/core/skbuff.c:1302:
+EXPORT_SYMBOL(skb_append);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000285765.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 8 warnings, 11 checks, 432 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000285765.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
