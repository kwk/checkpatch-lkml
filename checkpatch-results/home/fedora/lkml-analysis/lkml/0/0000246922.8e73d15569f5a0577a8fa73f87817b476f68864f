WARNING:TYPO_SPELLING: 'varable' may be misspelled - perhaps 'variable'?
#51: 
	- Removed unnecessary local varable initializations.
	                            ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#116: FILE: include/acpi/acpi_bus.h:327:
+int acpi_bus_scan (struct acpi_device *start);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#118: FILE: include/acpi/acpi_bus.h:329:
+int acpi_bus_add (struct acpi_device **child, struct acpi_device *parent,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: include/acpi/acpi_bus.h:330:
+int acpi_bus_add (struct acpi_device **child, struct acpi_device *parent,
+		acpi_handle handle, int type);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#132: FILE: drivers/acpi/acpi_ksyms.c:139:
+EXPORT_SYMBOL(acpi_bus_trim);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#133: FILE: drivers/acpi/acpi_ksyms.c:140:
+EXPORT_SYMBOL(acpi_bus_add);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#153: FILE: drivers/acpi/scan.c:69:
+		list_add_tail(&device->wakeup_list,&acpi_wakeup_device_list);
 		                                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#153: FILE: drivers/acpi/scan.c:69:
+		list_add_tail(&device->wakeup_list,&acpi_wakeup_device_list);
 		                                   ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#162: FILE: drivers/acpi/scan.c:87:
+	if (device->parent) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#165: FILE: drivers/acpi/scan.c:90:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#203: FILE: drivers/acpi/scan.c:772:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#205: FILE: drivers/acpi/scan.c:774:
+acpi_bus_remove (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#205: FILE: drivers/acpi/scan.c:774:
+acpi_bus_remove (

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#209: FILE: drivers/acpi/scan.c:778:
+^Iint ^I^I^Iresult = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: drivers/acpi/scan.c:780:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'driver->ops.remove'
#219: FILE: drivers/acpi/scan.c:788:
+	if ((driver) && (driver->ops.remove)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#220: FILE: drivers/acpi/scan.c:789:
+	if ((driver) && (driver->ops.remove)) {
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#228: FILE: drivers/acpi/scan.c:797:
+		if (result) {
+			return_VALUE(result);
+		}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->parent'
#241: FILE: drivers/acpi/scan.c:810:
+		if ((dev->parent) && (dev->parent->ops.unbind))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->parent->ops.unbind'
#241: FILE: drivers/acpi/scan.c:810:
+		if ((dev->parent) && (dev->parent->ops.unbind))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: drivers/acpi/scan.c:813:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#250: FILE: drivers/acpi/scan.c:819:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#260: FILE: drivers/acpi/scan.c:967:
+int acpi_bus_scan (struct acpi_device	*start)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: drivers/acpi/scan.c:1072:
+acpi_bus_trim(struct acpi_device	*start,
+		int rmdevice)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#281: FILE: drivers/acpi/scan.c:1083:
+	child = chandle = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: drivers/acpi/scan.c:1087:
+		status = acpi_get_next_object(ACPI_TYPE_ANY, phandle,
+			chandle, &chandle);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#306: FILE: drivers/acpi/scan.c:1108:
+		if (ACPI_FAILURE(status)) {
+			continue;
+		}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#334: FILE: include/acpi/acpi_drivers.h:64:
+void acpi_pci_irq_del_prt (int segment, int bus);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#341: FILE: include/acpi/acpi_drivers.h:71:
+int acpi_pci_unbind (struct acpi_device *device);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#394: FILE: drivers/acpi/pci_irq.c:156:
+acpi_pci_irq_del_entry (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#394: FILE: drivers/acpi/pci_irq.c:156:
+acpi_pci_irq_del_entry (

ERROR:SPACING: space required before the open brace '{'
#399: FILE: drivers/acpi/pci_irq.c:161:
+	if (segment == entry->id.segment && bus == entry->id.bus){

CHECK:LINE_SPACING: Please don't use multiple blank lines
#406: FILE: drivers/acpi/pci_irq.c:168:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#415: FILE: drivers/acpi/pci_irq.c:243:
+acpi_pci_irq_del_prt (int segment, int bus)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#420: FILE: drivers/acpi/pci_irq.c:248:
+	if (!acpi_prt.count)    {
+		return;
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#424: FILE: drivers/acpi/pci_irq.c:252:
+	printk(KERN_DEBUG "ACPI: Delete PCI Interrupt Routing Table for %x:%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#425: FILE: drivers/acpi/pci_irq.c:253:
+	printk(KERN_DEBUG "ACPI: Delete PCI Interrupt Routing Table for %x:%x\n",
+		segment, bus);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#452: FILE: drivers/acpi/pci_bind.c:261:
+int acpi_pci_unbind(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: drivers/acpi/pci_bind.c:277:
+	ACPI_DEBUG_PRINT((ACPI_DB_INFO, "Unbinding PCI device [%s]...\n",
+		pathname));

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#470: FILE: drivers/acpi/pci_bind.c:279:
+	status = acpi_get_data(device->handle, acpi_pci_data_handler, (void**)&data);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: drivers/acpi/pci_bind.c:282:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+			"Unable to get data from device %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#482: FILE: drivers/acpi/pci_bind.c:291:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+			"Unable to detach data from device %s\n",

WARNING:BRACES: braces {} are not necessary for single statement blocks
#487: FILE: drivers/acpi/pci_bind.c:296:
+	if (data->dev->subordinate) {
+		acpi_pci_irq_del_prt(data->id.segment, data->bus->number);
+	}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000246922.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 17 warnings, 20 checks, 394 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000246922.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
