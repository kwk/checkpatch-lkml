CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'enable == 0'
#127: FILE: arch/i386/kernel/apm.c:641:
+	if ((enable == 0) && (apm_info.bios.flags & APM_BIOS_DISENGAGED))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#164: FILE: arch/i386/kernel/apm.c:706:
 	if ((enable == 0) && (device == APM_DEVICE_ALL)
+	    && (apm_info.bios.flags & APM_BIOS_DISABLED))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'apm_info.connection_version > 0x100'
#201: FILE: arch/i386/kernel/apm.c:1040:
+		if ((apm_info.connection_version > 0x100) && (pending_count-- <= 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'smp_num_cpus == 1'
#229: FILE: arch/i386/kernel/apm.c:1265:
+	if ((smp_num_cpus == 1) &&
 	    !(error = apm_get_power_status(&bx, &cx, &dx))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#229: FILE: arch/i386/kernel/apm.c:1265:
+	if ((smp_num_cpus == 1) &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'smp_num_cpus == 1'
#291: FILE: arch/i386/kernel/apm.c:1363:
+	if (debug && (smp_num_cpus == 1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'apm_info.connection_version > 0x0100'
#319: FILE: arch/i386/kernel/apm.c:1416:
+	if ((apm_info.bios.flags & APM_BIOS_DISENGAGED)
+	    && (apm_info.connection_version > 0x0100)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#320: FILE: arch/i386/kernel/apm.c:1417:
+	if ((apm_info.bios.flags & APM_BIOS_DISENGAGED)
+	    && (apm_info.connection_version > 0x0100)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#378: FILE: arch/i386/kernel/apm.c:1516:
+			printk(" cseg16 len %x", apm_info.bios.cseg_16_len);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#444: FILE: arch/i386/kernel/dmi_scan.c:133:
+			if(strcmp(dmi_string(dm, data[4]), "Phoenix Technologies LTD")==0)
 			                                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#444: FILE: arch/i386/kernel/dmi_scan.c:133:
+			if(strcmp(dmi_string(dm, data[4]), "Phoenix Technologies LTD")==0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#451: FILE: arch/i386/kernel/dmi_scan.c:135:
+^I^I^I^Iif(strcmp(dmi_string(dm, data[5]), "A04")==0 $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#451: FILE: arch/i386/kernel/dmi_scan.c:135:
+				if(strcmp(dmi_string(dm, data[5]), "A04")==0 
+					&& strcmp(dmi_string(dm, data[8]), "08/24/2000")==0)
+				{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#451: FILE: arch/i386/kernel/dmi_scan.c:135:
+				if(strcmp(dmi_string(dm, data[5]), "A04")==0 
 				                                         ^

ERROR:SPACING: space required before the open parenthesis '('
#451: FILE: arch/i386/kernel/dmi_scan.c:135:
+				if(strcmp(dmi_string(dm, data[5]), "A04")==0 

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#452: FILE: arch/i386/kernel/dmi_scan.c:136:
+				if(strcmp(dmi_string(dm, data[5]), "A04")==0 
+					&& strcmp(dmi_string(dm, data[8]), "08/24/2000")==0)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#452: FILE: arch/i386/kernel/dmi_scan.c:136:
+					&& strcmp(dmi_string(dm, data[8]), "08/24/2000")==0)
 					                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#454: FILE: arch/i386/kernel/dmi_scan.c:138:
+^I^I^I^I   ^Iapm_info.get_power_status_broken = 1;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#454: FILE: arch/i386/kernel/dmi_scan.c:138:
+^I^I^I^I   ^Iapm_info.get_power_status_broken = 1;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#455: FILE: arch/i386/kernel/dmi_scan.c:139:
+					printk(KERN_WARNING "BIOS strings suggest APM bugs, disabling power status reporting.\n");

WARNING:TYPO_SPELLING: 'persistant' may be misspelled - perhaps 'persistent'?
#497: FILE: include/linux/apm_bios.h:49:
+ * Data for APM that is persistant across module unload/load
                         ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000551718.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 4 warnings, 8 checks, 445 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000551718.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
