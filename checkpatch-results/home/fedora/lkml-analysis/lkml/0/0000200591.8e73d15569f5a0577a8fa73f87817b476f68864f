WARNING:LINE_SPACING: Missing a blank line after declarations
#73: FILE: mm/vmalloc.c:36:
+		pte_t ptent = ptep_get_and_clear(&init_mm, addr, pte);
+		WARN_ON(!pte_none(ptent) && !pte_present(ptent));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#134: FILE: mm/vmalloc.c:74:
+	unsigned long addr = (unsigned long) area->addr;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#137: FILE: mm/vmalloc.c:77:
+	BUG_ON(addr >= end);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#161: FILE: mm/vmalloc.c:84:
+	flush_tlb_kernel_range((unsigned long) area->addr, end);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: mm/vmalloc.c:88:
+static int vmap_pte_range(pmd_t *pmd, unsigned long addr, unsigned long end,
+				pgprot_t prot, struct page ***pages)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: mm/vmalloc.c:107:
+static int vmap_pmd_range(pud_t *pud, unsigned long addr, unsigned long end,
+				pgprot_t prot, struct page ***pages)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: mm/vmalloc.c:124:
+static int vmap_pud_range(pgd_t *pgd, unsigned long addr, unsigned long end,
+				pgprot_t prot, struct page ***pages)

CHECK:SPACING: No space is necessary after a cast
#282: FILE: mm/vmalloc.c:144:
+	unsigned long addr = (unsigned long) area->addr;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#287: FILE: mm/vmalloc.c:148:
+	BUG_ON(addr >= end);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200591.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 3 warnings, 6 checks, 276 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200591.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
