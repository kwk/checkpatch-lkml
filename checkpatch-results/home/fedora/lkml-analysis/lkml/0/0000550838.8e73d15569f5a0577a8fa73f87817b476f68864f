CHECK:LINE_SPACING: Please don't use multiple blank lines
#89: FILE: maestro3.c:285:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#110: FILE: maestro3.c:367:
+static struct m3_card *devs = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#113: FILE: maestro3.c:370:
 
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: maestro3.c:2757:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: maestro3.c:2761:
+    for (card = devs; card != NULL; card = card->next) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "card"
#128: FILE: maestro3.c:2761:
+    for (card = devs; card != NULL; card = card->next) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: maestro3.c:2762:
+        if (!card->in_suspend) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: maestro3.c:2762:
+        if (!card->in_suspend) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#129: FILE: maestro3.c:2762:
+        if (!card->in_suspend) {
+            for (i=0;i<NR_DSPS;i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: maestro3.c:2763:
+            for (i=0;i<NR_DSPS;i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: maestro3.c:2763:
+            for (i=0;i<NR_DSPS;i++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#130: FILE: maestro3.c:2763:
+            for (i=0;i<NR_DSPS;i++) {
                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ';' (ctx:VxV)
#130: FILE: maestro3.c:2763:
+            for (i=0;i<NR_DSPS;i++) {
                     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#130: FILE: maestro3.c:2763:
+            for (i=0;i<NR_DSPS;i++) {
                       ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#130: FILE: maestro3.c:2763:
+            for (i=0;i<NR_DSPS;i++) {
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: maestro3.c:2764:
+                struct m3_state *s = &card->channels[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: maestro3.c:2764:
+                struct m3_state *s = &card->channels[i];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: maestro3.c:2766:
+                if (s->dev_audio == -1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: maestro3.c:2766:
+                if (s->dev_audio == -1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#133: FILE: maestro3.c:2766:
+                if (s->dev_audio == -1)
+                    continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: maestro3.c:2767:
+                    continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: maestro3.c:2767:
+                    continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: maestro3.c:2769:
+                DPRINTK(DPMOD, "stop_adc/dac() device %d\n",i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: maestro3.c:2769:
+                DPRINTK(DPMOD, "stop_adc/dac() device %d\n",i);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#136: FILE: maestro3.c:2769:
+                DPRINTK(DPMOD, "stop_adc/dac() device %d\n",i);
                                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: maestro3.c:2770:
+                stop_dac(s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: maestro3.c:2770:
+                stop_dac(s);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: maestro3.c:2771:
+                stop_adc(s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: maestro3.c:2771:
+                stop_adc(s);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: maestro3.c:2772:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: maestro3.c:2772:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: maestro3.c:2774:
+            mdelay(10); /* give the assp a chance to idle.. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: maestro3.c:2774:
+            mdelay(10); /* give the assp a chance to idle.. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: maestro3.c:2776:
+            m3_assp_halt(card);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: maestro3.c:2776:
+            m3_assp_halt(card);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: maestro3.c:2778:
+            DPRINTK(DPMOD, "powering down apci regs\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: maestro3.c:2778:
+            DPRINTK(DPMOD, "powering down apci regs\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: maestro3.c:2779:
+            m3_outw(card, 0xffff, 0x54);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: maestro3.c:2779:
+            m3_outw(card, 0xffff, 0x54);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: maestro3.c:2780:
+            m3_outw(card, 0xffff, 0x56);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: maestro3.c:2780:
+            m3_outw(card, 0xffff, 0x56);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: maestro3.c:2782:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: maestro3.c:2782:
+        }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#149: FILE: maestro3.c:2782:
+
+        }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: maestro3.c:2933:
+    int status;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: maestro3.c:2934:
+   $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: maestro3.c:2934:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: maestro3.c:2937:
+    status = pci_module_init(&m3_pci_driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: maestro3.c:2938:
+    if (status == 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: maestro3.c:2939:
+        register_reboot_notifier(&m3_reboot_nb); /* never fails */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: maestro3.c:2939:
+        register_reboot_notifier(&m3_reboot_nb); /* never fails */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: maestro3.c:2941:
+    return status;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000550838.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 25 warnings, 4 checks, 111 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000550838.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
