CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#87: FILE: include/linux/plist.h:83:
+	spinlock_t *lock;

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'head' - possible side-effects?
#108: FILE: include/linux/plist.h:103:
+#define PLIST_HEAD_INIT(head, _lock)			\
 {							\
 	.prio_list = LIST_HEAD_INIT((head).prio_list),	\
 	.node_list = LIST_HEAD_INIT((head).node_list),	\
+	PLIST_HEAD_LOCK_INIT(&(_lock))			\
 }

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'head' - possible side-effects?
#146: FILE: include/linux/plist.h:224:
+# define plist_first_entry(head, type, member)	\
+({ \
+	WARN_ON(plist_head_empty(head)); \
+	container_of(plist_first(head), type, member); \
+})

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#172: FILE: lib/plist.c:35:
+		printk("top: %p, n: %p, p: %p\n", t, t->next, t->prev);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#173: FILE: lib/plist.c:36:
+		printk("prev: %p, n: %p, p: %p\n", p, p->next, p->prev);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#174: FILE: lib/plist.c:37:
+		printk("next: %p, n: %p, p: %p\n", n, n->next, n->prev);

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#195: FILE: lib/plist.c:58:
+		WARN_ON_SMP(!spin_is_locked(head->lock));

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000088532.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 4 warnings, 3 checks, 154 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000088532.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
