WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#60: 
 include/asm-parisc/unistd.h                 |   72 ----------------------------

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#506: FILE: sbus/char/envctrl.c:1004:
+	if (0 > sys_execve("/sbin/shutdown", argv, envp)) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#773: FILE: linux/syscalls.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#786: FILE: linux/syscalls.h:14:
+asmlinkage long sys_newstat(char * filename, struct stat * statbuf);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#786: FILE: linux/syscalls.h:14:
+asmlinkage long sys_newstat(char * filename, struct stat * statbuf);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#794: FILE: linux/syscalls.h:22:
+asmlinkage long sys_mount(char *dev_name, char *dir_name, char *type,
+				 unsigned long flags, void *data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#798: FILE: linux/syscalls.h:26:
+asmlinkage long sys_read(int fd, char * buf, off_t count);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#799: FILE: linux/syscalls.h:27:
+asmlinkage long sys_write(int fd, const char * buf, off_t count);

WARNING:PATCH_PREFIX: patch prefix 'init' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'init' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'init' exists, appears to be a -p0 patch

ERROR:SPACING: space required after that ';' (ctx:VxV)
#921: FILE: do_mounts_initrd.c:29:
+	sys_close(old_fd);sys_close(root_fd);
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ';' (ctx:VxV)
#922: FILE: do_mounts_initrd.c:30:
+	sys_close(0);sys_close(1);sys_close(2);
 	            ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#922: FILE: do_mounts_initrd.c:30:
+	sys_close(0);sys_close(1);sys_close(2);
 	                         ^

CHECK:SPACING: No space is necessary after a cast
#924: FILE: do_mounts_initrd.c:32:
+	(void) sys_open("/dev/console",O_RDWR,0);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#924: FILE: do_mounts_initrd.c:32:
+	(void) sys_open("/dev/console",O_RDWR,0);
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#924: FILE: do_mounts_initrd.c:32:
+	(void) sys_open("/dev/console",O_RDWR,0);
 	                                     ^

CHECK:SPACING: No space is necessary after a cast
#925: FILE: do_mounts_initrd.c:33:
+	(void) sys_dup(0);

CHECK:SPACING: No space is necessary after a cast
#926: FILE: do_mounts_initrd.c:34:
+	(void) sys_dup(0);

WARNING:PATCH_PREFIX: patch prefix 'init' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'init' exists, appears to be a -p0 patch

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1051: FILE: do_mounts_rd.c:95:
+	sys_lseek(fd, (start_block+1) * BLOCK_SIZE, 0);
 	                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1130: FILE: do_mounts_rd.c:354:
+    written = sys_write(crd_outfd, window, outcnt);$

WARNING:PATCH_PREFIX: patch prefix 'init' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'init' exists, appears to be a -p0 patch

CHECK:SPACING: No space is necessary after a cast
#1191: FILE: main.c:582:
+	(void) sys_dup(0);

CHECK:SPACING: No space is necessary after a cast
#1192: FILE: main.c:583:
+	(void) sys_dup(0);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init', this function's name, in a string
#1206: FILE: main.c:594:
+	sys_execve("/sbin/init", argv_init, envp_init);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1207: FILE: main.c:595:
+	sys_execve("/etc/init" , argv_init, envp_init);
 	                       ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init', this function's name, in a string
#1207: FILE: main.c:595:
+	sys_execve("/etc/init" , argv_init, envp_init);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1208: FILE: main.c:596:
+	sys_execve("/bin/init" , argv_init, envp_init);
 	                       ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init', this function's name, in a string
#1208: FILE: main.c:596:
+	sys_execve("/bin/init" , argv_init, envp_init);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1209: FILE: main.c:597:
+	sys_execve("/bin/sh"   , argv_sh  , envp_init);
 	                       ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1209: FILE: main.c:597:
+	sys_execve("/bin/sh"   , argv_sh  , envp_init);
 	                                  ^

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1246: FILE: kmod.c:172:
+		retval = sys_execve(sub_info->path, sub_info->argv,
+				sub_info->envp);

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 61)
#1296: FILE: workqueue.c:202:
+			while (sys_wait4(-1, NULL, __WALL|WNOHANG, NULL) > 0)
 				/* SIGCHLD - auto-reaping */ ;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1296: FILE: workqueue.c:202:
+			while (sys_wait4(-1, NULL, __WALL|WNOHANG, NULL) > 0)
 			                                 ^

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1387: FILE: ipv4/ipvs/ip_vs_sync.c:864:
+	if ((waitpid_result = sys_wait4(pid, NULL, __WCLONE, NULL)) != pid) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'sound' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1492: FILE: isa/wavefront/wavefront_synth.c:1947:
+	if ((fd = sys_open (path, 0, 0)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1492: FILE: isa/wavefront/wavefront_synth.c:1947:
+	if ((fd = sys_open (path, 0, 0)) < 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1501: FILE: isa/wavefront/wavefront_synth.c:1956:
+		if ((x = sys_read (fd, &section_length, sizeof (section_length))) !=

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1501: FILE: isa/wavefront/wavefront_synth.c:1956:
+		if ((x = sys_read (fd, &section_length, sizeof (section_length))) !=

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1501: FILE: isa/wavefront/wavefront_synth.c:1956:
+		if ((x = sys_read (fd, &section_length, sizeof (section_length))) !=

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1510: FILE: isa/wavefront/wavefront_synth.c:1966:
+		if (sys_read (fd, section, section_length) != section_length) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1519: FILE: isa/wavefront/wavefront_synth.c:2005:
+	sys_close (fd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1525: FILE: isa/wavefront/wavefront_synth.c:2010:
+	sys_close (fd);

WARNING:PATCH_PREFIX: patch prefix 'sound' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1554: FILE: oss/wavfront.c:2524:
+	if ((fd = sys_open (path, 0, 0)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1554: FILE: oss/wavfront.c:2524:
+	if ((fd = sys_open (path, 0, 0)) < 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1563: FILE: oss/wavfront.c:2533:
+		if ((x = sys_read (fd, &section_length, sizeof (section_length))) !=

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1563: FILE: oss/wavfront.c:2533:
+		if ((x = sys_read (fd, &section_length, sizeof (section_length))) !=

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1563: FILE: oss/wavfront.c:2533:
+		if ((x = sys_read (fd, &section_length, sizeof (section_length))) !=

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1572: FILE: oss/wavfront.c:2543:
+		if (sys_read (fd, section, section_length) != section_length) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1581: FILE: oss/wavfront.c:2582:
+	sys_close (fd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1587: FILE: oss/wavfront.c:2587:
+	sys_close (fd);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000335511.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 66 warnings, 9 checks, 1093 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000335511.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
