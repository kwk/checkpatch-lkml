WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
http://www.kernel.org/pub/linux/kernel/people/jgarzik/patchkits/2.6/2.6.8.1-libata2.patch.bz2

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#101: 
--- a/drivers/scsi/ata_piix.c	2004-08-18 03:11:44 -04:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#127: FILE: drivers/scsi/ata_piix.c:70:
+static void piix_set_piomode (struct ata_port *ap, struct ata_device *adev);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#128: FILE: drivers/scsi/ata_piix.c:71:
+static void piix_set_dmamode (struct ata_port *ap, struct ata_device *adev);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#180: FILE: drivers/scsi/ata_piix.c:180:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#206: FILE: drivers/scsi/ata_piix.c:205:
+#if 0

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#244: FILE: drivers/scsi/ata_piix.c:390:
+static void piix_set_piomode (struct ata_port *ap, struct ata_device *adev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#268: FILE: drivers/scsi/ata_piix.c:442:
+static void piix_set_dmamode (struct ata_port *ap, struct ata_device *adev)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#279: FILE: drivers/scsi/ata_piix.c:475:
+		case XFER_MW_DMA_1:	break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#292: FILE: drivers/scsi/ata_piix.c:484:
+		if (speed == XFER_UDMA_5) {
[...]
+		} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#293: FILE: drivers/scsi/ata_piix.c:485:
+			pci_write_config_byte(dev, 0x55, (u8) reg55|w_flag);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#293: FILE: drivers/scsi/ata_piix.c:485:
+			pci_write_config_byte(dev, 0x55, (u8) reg55|w_flag);
 			                                           ^

CHECK:SPACING: No space is necessary after a cast
#295: FILE: drivers/scsi/ata_piix.c:487:
+			pci_write_config_byte(dev, 0x55, (u8) reg55 & ~w_flag);

CHECK:BRACES: braces {} should be used on all arms of this statement
#299: FILE: drivers/scsi/ata_piix.c:491:
+		if (speed > XFER_UDMA_2) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#302: FILE: drivers/scsi/ata_piix.c:494:
+		} else

CHECK:SPACING: No space is necessary after a cast
#313: FILE: drivers/scsi/ata_piix.c:504:
+			pci_write_config_byte(dev, 0x55, (u8) reg55 & ~w_flag);

CHECK:BIT_MACRO: Prefer using the BIT macro
#331: FILE: drivers/scsi/ata_piix.c:522:
+#define AHCI_ENABLE (1 << 31)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: drivers/scsi/ata_piix.c:537:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: drivers/scsi/ata_piix.c:541:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#360: FILE: drivers/scsi/ata_piix.c:551:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#375: FILE: drivers/scsi/ata_piix.c:590:
+		int rc = piix_disable_ahci(pdev);
+		if (rc)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#416: FILE: drivers/scsi/libata-core.c:531:
+static const char * xfer_mode_str[] = {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#416: FILE: drivers/scsi/libata-core.c:531:
+static const char * xfer_mode_str[] = {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#491: FILE: drivers/scsi/libata-core.c:981:
+	BUG_ON(qc == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!qc"
#491: FILE: drivers/scsi/libata-core.c:981:
+	BUG_ON(qc == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'qc->tf.command == ATA_CMD_ID_ATA'
#533: FILE: drivers/scsi/libata-core.c:1022:
+		if ((using_edd) && (qc->tf.command == ATA_CMD_ID_ATA)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rc < 12'
#617: FILE: drivers/scsi/libata-core.c:1106:
+		if ((rc < 12) || (rc > ATAPI_CDB_LEN)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rc > ATAPI_CDB_LEN'
#617: FILE: drivers/scsi/libata-core.c:1106:
+		if ((rc < 12) || (rc > ATAPI_CDB_LEN)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#618: FILE: drivers/scsi/libata-core.c:1107:
+			printk(KERN_WARNING "ata%u: unsupported CDB len\n", ap->id);

CHECK:SPACING: No space is necessary after a cast
#621: FILE: drivers/scsi/libata-core.c:1110:
+		ap->cdb_len = (unsigned int) rc;

CHECK:SPACING: No space is necessary after a cast
#622: FILE: drivers/scsi/libata-core.c:1111:
+		ap->host->max_cmd_len = (unsigned char) ap->cdb_len;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#677: FILE: drivers/scsi/libata-core.c:1288:
+	printk(KERN_INFO "ata%u: dev %u configured for %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#678: FILE: drivers/scsi/libata-core.c:1289:
+	printk(KERN_INFO "ata%u: dev %u configured for %s\n",
+		ap->id, dev->devno, xfer_mode_str[idx]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#690: FILE: drivers/scsi/libata-core.c:1301:
+		printk(KERN_WARNING "ata%u: no PIO support\n", ap->id);

WARNING:LINE_SPACING: Missing a blank line after declarations
#702: FILE: drivers/scsi/libata-core.c:1313:
+		struct ata_device *dev = &ap->device[i];
+		if (ata_dev_present(dev)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#715: FILE: drivers/scsi/libata-core.c:1326:
+static void ata_host_set_dma(struct ata_port *ap, u8 xfer_mode,
+			    unsigned int xfer_shift)

WARNING:LINE_SPACING: Missing a blank line after declarations
#721: FILE: drivers/scsi/libata-core.c:1332:
+		struct ata_device *dev = &ap->device[i];
+		if (ata_dev_present(dev)) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#761: FILE: drivers/scsi/libata-core.c:1361:
+	xfer_mode = xfer_shift = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#837: FILE: drivers/scsi/libata-core.c:1667:
+	}
+	else if (shift == ATA_SHIFT_MWDMA) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#844: FILE: drivers/scsi/libata-core.c:1674:
+	}
+	else if (shift == ATA_SHIFT_PIO) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#851: FILE: drivers/scsi/libata-core.c:1681:
+			u16 tmp_mode = master->id[ATA_ID_PIO_MODES] & 0x03;
+			tmp_mode <<= 3;

WARNING:LINE_SPACING: Missing a blank line after declarations
#860: FILE: drivers/scsi/libata-core.c:1690:
+			u16 tmp_mode = slave->id[ATA_ID_PIO_MODES] & 0x03;
+			tmp_mode <<= 3;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#865: FILE: drivers/scsi/libata-core.c:1695:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#865: FILE: drivers/scsi/libata-core.c:1695:
+	else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#867: FILE: drivers/scsi/libata-core.c:1697:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1011: FILE: drivers/scsi/libata-core.c:1767:
+	BUG_ON(qc == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!qc"
#1011: FILE: drivers/scsi/libata-core.c:1767:
+	BUG_ON(qc == NULL);

CHECK:SPACING: No space is necessary after a cast
#1123: FILE: drivers/scsi/libata-core.c:2083:
+	u16 *buf16 = (u16 *) buf;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1205: FILE: drivers/scsi/libata-core.c:2165:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1212: FILE: drivers/scsi/libata-core.c:2172:
+	/* make sure byte count is multiple of sector size; not
+	* required by standard (warning! warning!), but IDE driver

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1221: FILE: drivers/scsi/libata-core.c:2181:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1225: FILE: drivers/scsi/libata-core.c:2185:
+	printk(KERN_INFO "ata%u: dev %u: ATAPI check failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1226: FILE: drivers/scsi/libata-core.c:2186:
+	printk(KERN_INFO "ata%u: dev %u: ATAPI check failed\n",
+	      ap->id, dev->devno);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "qc"
#1272: FILE: drivers/scsi/libata-core.c:2242:
+	assert(qc != NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1280: FILE: drivers/scsi/libata-core.c:2245:
+	printk(KERN_WARNING "ata%u: PIO error, drv_stat 0x%x\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#1364: FILE: drivers/scsi/libata-core.c:2494:
+		struct completion *waiting = qc->waiting;
+		qc->waiting = NULL;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1437: FILE: drivers/scsi/libata-core.c:2884:
+	else if (qc->tf.protocol == ATA_PROT_ATAPI_NODATA) {
 		/* do nothing */
 	}

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1465: FILE: drivers/scsi/libata-core.c:3077:
+		xfer_mode_mask =(ap->udma_mask << ATA_SHIFT_UDMA) |
 		               ^

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1510: FILE: drivers/scsi/libata-scsi.c:32:
+#include <asm/uaccess.h>

CHECK:SPACING: No space is necessary after a cast
#1533: FILE: drivers/scsi/libata-scsi.c:79:
+	ap = (struct ata_port *) &scsidev->host->hostdata[0];

CHECK:SPACING: No space is necessary after a cast
#1551: FILE: drivers/scsi/libata-scsi.c:97:
+		val = (long) arg;

WARNING:LONG_LINE_COMMENT: line length of 111 exceeds 100 columns
#1595: FILE: drivers/scsi/libata-scsi.c:180:
+		{0xd1, 		ABORTED_COMMAND, 0x00, 0x00}, 	// Device busy                  Aborted command

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1595: FILE: drivers/scsi/libata-scsi.c:180:
+^I^I{0xd1, ^I^IABORTED_COMMAND, 0x00, 0x00}, ^I// Device busy                  Aborted command$

WARNING:LONG_LINE_COMMENT: line length of 111 exceeds 100 columns
#1597: FILE: drivers/scsi/libata-scsi.c:182:
+		{0xd0,  	ABORTED_COMMAND, 0x00, 0x00}, 	// Device busy                  Aborted command

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1597: FILE: drivers/scsi/libata-scsi.c:182:
+^I^I{0xd0,  ^IABORTED_COMMAND, 0x00, 0x00}, ^I// Device busy                  Aborted command$

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#1599: FILE: drivers/scsi/libata-scsi.c:184:
+		{0x61, 		HARDWARE_ERROR, 0x00, 0x00}, 	// Device fault                 Hardware error

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1599: FILE: drivers/scsi/libata-scsi.c:184:
+^I^I{0x61, ^I^IHARDWARE_ERROR, 0x00, 0x00}, ^I// Device fault                 Hardware error$

WARNING:LONG_LINE_COMMENT: line length of 113 exceeds 100 columns
#1601: FILE: drivers/scsi/libata-scsi.c:186:
+		{0x84, 		ABORTED_COMMAND, 0x47, 0x00}, 	// Data CRC error               SCSI parity error

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1601: FILE: drivers/scsi/libata-scsi.c:186:
+^I^I{0x84, ^I^IABORTED_COMMAND, 0x47, 0x00}, ^I// Data CRC error               SCSI parity error$

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#1603: FILE: drivers/scsi/libata-scsi.c:188:
+		{0x37, 		NOT_READY, 0x04, 0x00}, 	// Unit offline                 Not ready

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1603: FILE: drivers/scsi/libata-scsi.c:188:
+^I^I{0x37, ^I^INOT_READY, 0x04, 0x00}, ^I// Unit offline                 Not ready$

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#1605: FILE: drivers/scsi/libata-scsi.c:190:
+		{0x09, 		NOT_READY, 0x04, 0x00}, 	// Unrecovered disk error       Not ready

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1605: FILE: drivers/scsi/libata-scsi.c:190:
+^I^I{0x09, ^I^INOT_READY, 0x04, 0x00}, ^I// Unrecovered disk error       Not ready$

WARNING:LONG_LINE_COMMENT: line length of 133 exceeds 100 columns
#1607: FILE: drivers/scsi/libata-scsi.c:192:
+		{0x01, 		MEDIUM_ERROR, 0x13, 0x00}, 	// Address mark not found       Address mark not found for data field

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1607: FILE: drivers/scsi/libata-scsi.c:192:
+^I^I{0x01, ^I^IMEDIUM_ERROR, 0x13, 0x00}, ^I// Address mark not found       Address mark not found for data field$

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#1609: FILE: drivers/scsi/libata-scsi.c:194:
+		{0x02, 		HARDWARE_ERROR, 0x00, 0x00}, 	// Track 0 not found		  Hardware error

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1609: FILE: drivers/scsi/libata-scsi.c:194:
+^I^I{0x02, ^I^IHARDWARE_ERROR, 0x00, 0x00}, ^I// Track 0 not found^I^I  Hardware error$

WARNING:LONG_LINE_COMMENT: line length of 111 exceeds 100 columns
#1611: FILE: drivers/scsi/libata-scsi.c:196:
+		{0x04, 		ABORTED_COMMAND, 0x00, 0x00}, 	// Aborted command              Aborted command

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1611: FILE: drivers/scsi/libata-scsi.c:196:
+^I^I{0x04, ^I^IABORTED_COMMAND, 0x00, 0x00}, ^I// Aborted command              Aborted command$

WARNING:LONG_LINE_COMMENT: line length of 111 exceeds 100 columns
#1613: FILE: drivers/scsi/libata-scsi.c:198:
+		{0x08, 		NOT_READY, 0x04, 0x00}, 	// Media change request	  FIXME: faking offline

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1613: FILE: drivers/scsi/libata-scsi.c:198:
+^I^I{0x08, ^I^INOT_READY, 0x04, 0x00}, ^I// Media change request^I  FIXME: faking offline$

WARNING:LONG_LINE_COMMENT: line length of 121 exceeds 100 columns
#1615: FILE: drivers/scsi/libata-scsi.c:200:
+		{0x10, 		ABORTED_COMMAND, 0x14, 0x00}, 	// ID not found                 Recorded entity not found

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1615: FILE: drivers/scsi/libata-scsi.c:200:
+^I^I{0x10, ^I^IABORTED_COMMAND, 0x14, 0x00}, ^I// ID not found                 Recorded entity not found$

WARNING:LONG_LINE_COMMENT: line length of 111 exceeds 100 columns
#1617: FILE: drivers/scsi/libata-scsi.c:202:
+		{0x08,  	NOT_READY, 0x04, 0x00}, 	// Media change		  FIXME: faking offline

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1617: FILE: drivers/scsi/libata-scsi.c:202:
+^I^I{0x08,  ^INOT_READY, 0x04, 0x00}, ^I// Media change^I^I  FIXME: faking offline$

WARNING:LONG_LINE_COMMENT: line length of 118 exceeds 100 columns
#1619: FILE: drivers/scsi/libata-scsi.c:204:
+		{0x40, 		MEDIUM_ERROR, 0x11, 0x04}, 	// Uncorrectable ECC error      Unrecovered read error

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1619: FILE: drivers/scsi/libata-scsi.c:204:
+^I^I{0x40, ^I^IMEDIUM_ERROR, 0x11, 0x04}, ^I// Uncorrectable ECC error      Unrecovered read error$

WARNING:LONG_LINE_COMMENT: line length of 134 exceeds 100 columns
#1621: FILE: drivers/scsi/libata-scsi.c:206:
+		{0x80, 		MEDIUM_ERROR, 0x11, 0x04}, 	// Block marked bad		  Medium error, unrecovered read error

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1621: FILE: drivers/scsi/libata-scsi.c:206:
+^I^I{0x80, ^I^IMEDIUM_ERROR, 0x11, 0x04}, ^I// Block marked bad^I^I  Medium error, unrecovered read error$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1622: FILE: drivers/scsi/libata-scsi.c:207:
+^I^I{0xFF, 0xFF, 0xFF, 0xFF}, // END mark $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1626: FILE: drivers/scsi/libata-scsi.c:211:
+^I^I{0x80, ^I^IABORTED_COMMAND, 0x47, 0x00},^I// Busy, fake parity for now$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1627: FILE: drivers/scsi/libata-scsi.c:212:
+^I^I{0x20, ^I^IHARDWARE_ERROR,  0x00, 0x00}, ^I// Device fault$

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#1628: FILE: drivers/scsi/libata-scsi.c:213:
+		{0x08, 		ABORTED_COMMAND, 0x47, 0x00},	// Timed out in xfer, fake parity for now

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1628: FILE: drivers/scsi/libata-scsi.c:213:
+^I^I{0x08, ^I^IABORTED_COMMAND, 0x47, 0x00},^I// Timed out in xfer, fake parity for now$

WARNING:LONG_LINE_COMMENT: line length of 113 exceeds 100 columns
#1629: FILE: drivers/scsi/libata-scsi.c:214:
+		{0x04, 		RECOVERED_ERROR, 0x11, 0x00},	// Recovered ECC error	  Medium error, recovered

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1629: FILE: drivers/scsi/libata-scsi.c:214:
+^I^I{0x04, ^I^IRECOVERED_ERROR, 0x11, 0x00},^I// Recovered ECC error^I  Medium error, recovered$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1630: FILE: drivers/scsi/libata-scsi.c:215:
+^I^I{0xFF, 0xFF, 0xFF, 0xFF}, // END mark $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1640: FILE: drivers/scsi/libata-scsi.c:220:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1644: FILE: drivers/scsi/libata-scsi.c:224:
+^I $

ERROR:SPACING: space required before the open parenthesis '('
#1645: FILE: drivers/scsi/libata-scsi.c:225:
+	if(drv_stat & ATA_ERR)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1650: FILE: drivers/scsi/libata-scsi.c:230:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1651: FILE: drivers/scsi/libata-scsi.c:231:
+	printk(KERN_WARNING "ata%u: status=0x%02x { ", qc->ap->id, drv_stat);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1652: FILE: drivers/scsi/libata-scsi.c:232:
+	if(drv_stat & 0x80)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#1652: FILE: drivers/scsi/libata-scsi.c:232:
+	if(drv_stat & 0x80)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1654: FILE: drivers/scsi/libata-scsi.c:234:
+		printk("Busy ");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1657: FILE: drivers/scsi/libata-scsi.c:237:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1657: FILE: drivers/scsi/libata-scsi.c:237:
+	else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1658: FILE: drivers/scsi/libata-scsi.c:238:
+		if(drv_stat & 0x40)	printk("DriveReady ");

ERROR:SPACING: space required before the open parenthesis '('
#1658: FILE: drivers/scsi/libata-scsi.c:238:
+		if(drv_stat & 0x40)	printk("DriveReady ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1658: FILE: drivers/scsi/libata-scsi.c:238:
+		if(drv_stat & 0x40)	printk("DriveReady ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1659: FILE: drivers/scsi/libata-scsi.c:239:
+		if(drv_stat & 0x20)	printk("DeviceFault ");

ERROR:SPACING: space required before the open parenthesis '('
#1659: FILE: drivers/scsi/libata-scsi.c:239:
+		if(drv_stat & 0x20)	printk("DeviceFault ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1659: FILE: drivers/scsi/libata-scsi.c:239:
+		if(drv_stat & 0x20)	printk("DeviceFault ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1660: FILE: drivers/scsi/libata-scsi.c:240:
+		if(drv_stat & 0x10)	printk("SeekComplete ");

ERROR:SPACING: space required before the open parenthesis '('
#1660: FILE: drivers/scsi/libata-scsi.c:240:
+		if(drv_stat & 0x10)	printk("SeekComplete ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1660: FILE: drivers/scsi/libata-scsi.c:240:
+		if(drv_stat & 0x10)	printk("SeekComplete ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1661: FILE: drivers/scsi/libata-scsi.c:241:
+		if(drv_stat & 0x08)	printk("DataRequest ");

ERROR:SPACING: space required before the open parenthesis '('
#1661: FILE: drivers/scsi/libata-scsi.c:241:
+		if(drv_stat & 0x08)	printk("DataRequest ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1661: FILE: drivers/scsi/libata-scsi.c:241:
+		if(drv_stat & 0x08)	printk("DataRequest ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1662: FILE: drivers/scsi/libata-scsi.c:242:
+		if(drv_stat & 0x04)	printk("CorrectedError ");

ERROR:SPACING: space required before the open parenthesis '('
#1662: FILE: drivers/scsi/libata-scsi.c:242:
+		if(drv_stat & 0x04)	printk("CorrectedError ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1662: FILE: drivers/scsi/libata-scsi.c:242:
+		if(drv_stat & 0x04)	printk("CorrectedError ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1663: FILE: drivers/scsi/libata-scsi.c:243:
+		if(drv_stat & 0x02)	printk("Index ");

ERROR:SPACING: space required before the open parenthesis '('
#1663: FILE: drivers/scsi/libata-scsi.c:243:
+		if(drv_stat & 0x02)	printk("Index ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1663: FILE: drivers/scsi/libata-scsi.c:243:
+		if(drv_stat & 0x02)	printk("Index ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1664: FILE: drivers/scsi/libata-scsi.c:244:
+		if(drv_stat & 0x01)	printk("Error ");

ERROR:SPACING: space required before the open parenthesis '('
#1664: FILE: drivers/scsi/libata-scsi.c:244:
+		if(drv_stat & 0x01)	printk("Error ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1664: FILE: drivers/scsi/libata-scsi.c:244:
+		if(drv_stat & 0x01)	printk("Error ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1666: FILE: drivers/scsi/libata-scsi.c:246:
+	printk("}\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1667: FILE: drivers/scsi/libata-scsi.c:247:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1668: FILE: drivers/scsi/libata-scsi.c:248:
+	if(err)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#1668: FILE: drivers/scsi/libata-scsi.c:248:
+	if(err)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1670: FILE: drivers/scsi/libata-scsi.c:250:
+		printk(KERN_WARNING "ata%u: error=0x%02x { ", qc->ap->id, err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1671: FILE: drivers/scsi/libata-scsi.c:251:
+		if(err & 0x04)		printk("DriveStatusError ");

ERROR:SPACING: space required before the open parenthesis '('
#1671: FILE: drivers/scsi/libata-scsi.c:251:
+		if(err & 0x04)		printk("DriveStatusError ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1671: FILE: drivers/scsi/libata-scsi.c:251:
+		if(err & 0x04)		printk("DriveStatusError ");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1672: FILE: drivers/scsi/libata-scsi.c:252:
+		if(err & 0x80)
+		{

ERROR:SPACING: space required before the open parenthesis '('
#1672: FILE: drivers/scsi/libata-scsi.c:252:
+		if(err & 0x80)

ERROR:SPACING: space required before the open parenthesis '('
#1674: FILE: drivers/scsi/libata-scsi.c:254:
+			if(err & 0x04)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1675: FILE: drivers/scsi/libata-scsi.c:255:
+				printk("BadCRC ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1677: FILE: drivers/scsi/libata-scsi.c:257:
+				printk("Sector ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1679: FILE: drivers/scsi/libata-scsi.c:259:
+		if(err & 0x40)		printk("UncorrectableError ");

ERROR:SPACING: space required before the open parenthesis '('
#1679: FILE: drivers/scsi/libata-scsi.c:259:
+		if(err & 0x40)		printk("UncorrectableError ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1679: FILE: drivers/scsi/libata-scsi.c:259:
+		if(err & 0x40)		printk("UncorrectableError ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1680: FILE: drivers/scsi/libata-scsi.c:260:
+		if(err & 0x10)		printk("SectorIdNotFound ");

ERROR:SPACING: space required before the open parenthesis '('
#1680: FILE: drivers/scsi/libata-scsi.c:260:
+		if(err & 0x10)		printk("SectorIdNotFound ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1680: FILE: drivers/scsi/libata-scsi.c:260:
+		if(err & 0x10)		printk("SectorIdNotFound ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1681: FILE: drivers/scsi/libata-scsi.c:261:
+		if(err & 0x02)		printk("TrackZeroNotFound ");

ERROR:SPACING: space required before the open parenthesis '('
#1681: FILE: drivers/scsi/libata-scsi.c:261:
+		if(err & 0x02)		printk("TrackZeroNotFound ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1681: FILE: drivers/scsi/libata-scsi.c:261:
+		if(err & 0x02)		printk("TrackZeroNotFound ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1682: FILE: drivers/scsi/libata-scsi.c:262:
+		if(err & 0x01)		printk("AddrMarkNotFound ");

ERROR:SPACING: space required before the open parenthesis '('
#1682: FILE: drivers/scsi/libata-scsi.c:262:
+		if(err & 0x01)		printk("AddrMarkNotFound ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1682: FILE: drivers/scsi/libata-scsi.c:262:
+		if(err & 0x01)		printk("AddrMarkNotFound ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1683: FILE: drivers/scsi/libata-scsi.c:263:
+		printk("}\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1684: FILE: drivers/scsi/libata-scsi.c:264:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1687: FILE: drivers/scsi/libata-scsi.c:267:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1688: FILE: drivers/scsi/libata-scsi.c:268:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1688: FILE: drivers/scsi/libata-scsi.c:268:
+		
+	

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1690: FILE: drivers/scsi/libata-scsi.c:270:
+	while(sense_table[i][0] != 0xFF)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#1690: FILE: drivers/scsi/libata-scsi.c:270:
+	while(sense_table[i][0] != 0xFF)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1693: FILE: drivers/scsi/libata-scsi.c:273:
+		if((sense_table[i][0] & err) == sense_table[i][0])
+		{

ERROR:SPACING: space required before the open parenthesis '('
#1693: FILE: drivers/scsi/libata-scsi.c:273:
+		if((sense_table[i][0] & err) == sense_table[i][0])

ERROR:SPACING: space required before the open parenthesis '('
#1705: FILE: drivers/scsi/libata-scsi.c:285:
+	if(err)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1706: FILE: drivers/scsi/libata-scsi.c:286:
+		printk(KERN_DEBUG "ata%u: no sense translation for 0x%02x\n", qc->ap->id, err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1707: FILE: drivers/scsi/libata-scsi.c:287:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1709: FILE: drivers/scsi/libata-scsi.c:289:
+	while(stat_table[i][0] != 0xFF)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#1709: FILE: drivers/scsi/libata-scsi.c:289:
+	while(stat_table[i][0] != 0xFF)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1711: FILE: drivers/scsi/libata-scsi.c:291:
+		if(stat_table[i][0] & drv_stat)
+		{

ERROR:SPACING: space required before the open parenthesis '('
#1711: FILE: drivers/scsi/libata-scsi.c:291:
+		if(stat_table[i][0] & drv_stat)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1723: FILE: drivers/scsi/libata-scsi.c:303:
+	printk(KERN_ERR "ata%u: called with no error (%02X)!\n", qc->ap->id, drv_stat);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1725: FILE: drivers/scsi/libata-scsi.c:305:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1813: FILE: drivers/scsi/libata-scsi.c:448:
+	if (scsicmd[0] == VERIFY) {
[...]
+	else if (scsicmd[0] == VERIFY_16) {
[...]
+	else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#1856: FILE: drivers/scsi/libata-scsi.c:491:
+	if (lba48) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1862: FILE: drivers/scsi/libata-scsi.c:497:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1933: FILE: drivers/scsi/libata-scsi.c:1251:
+	if (unlikely(drv_stat & (ATA_ERR | ATA_BUSY | ATA_DRQ)))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1935: FILE: drivers/scsi/libata-scsi.c:1253:
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1996: FILE: drivers/scsi/libata-scsi.c:1314:
+	else {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'scsidev->channel != 0'
#2021: FILE: drivers/scsi/libata-scsi.c:1356:
+	if (unlikely((scsidev->channel != 0) ||
+		     (scsidev->lun != 0)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'scsidev->lun != 0'
#2021: FILE: drivers/scsi/libata-scsi.c:1356:
+	if (unlikely((scsidev->channel != 0) ||
+		     (scsidev->lun != 0)))

CHECK:SPACING: No space is necessary after a cast
#2080: FILE: drivers/scsi/libata-scsi.c:1457:
+	ap = (struct ata_port *) &scsidev->host->hostdata[0];

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#2101: FILE: drivers/scsi/libata-scsi.c:1509:
 	switch(scsicmd[0]) {
[...]
+		case SYNCHRONIZE_CACHE:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2115: FILE: drivers/scsi/libata.h:45:
+extern void swap_buf_le16(u16 *buf, unsigned int buf_words);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2120: FILE: drivers/scsi/libata.h:49:
+extern void ata_to_sense_error(struct ata_queued_cmd *qc, u8 drv_stat);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2208: FILE: drivers/scsi/sata_promise.c:275:
+		/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2256: FILE: drivers/scsi/sata_promise.c:319:
+		printk(KERN_ERR "ata%u: command timeout\n", ap->id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2301: FILE: drivers/scsi/sata_promise.c:469:
+	WARN_ON (tf->protocol == ATA_PROT_DMA ||

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2310: FILE: drivers/scsi/sata_promise.c:477:
+	WARN_ON (tf->protocol == ATA_PROT_DMA ||

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#2321: FILE: drivers/scsi/sata_promise.c:532:
+	msleep(10);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2639: FILE: drivers/scsi/sata_sx4.c:680:
+		BUG();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2704: FILE: drivers/scsi/sata_sx4.c:868:
+		printk(KERN_ERR "ata%u: command timeout\n", ap->id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2715: FILE: drivers/scsi/sata_sx4.c:888:
+	WARN_ON (tf->protocol == ATA_PROT_DMA ||

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2725: FILE: drivers/scsi/sata_sx4.c:896:
+	WARN_ON (tf->protocol == ATA_PROT_DMA ||

WARNING:LINE_SPACING: Missing a blank line after declarations
#2875: FILE: include/linux/ata.h:242:
+	u16 tmp = dev_id[0] & 0x3;
+	switch (tmp) {

WARNING:SPACING: Unnecessary space before function pointer arguments
#2992: FILE: include/linux/libata.h:315:
+	void (*set_piomode) (struct ata_port *, struct ata_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_port *' should also have an identifier name
#2992: FILE: include/linux/libata.h:315:
+	void (*set_piomode) (struct ata_port *, struct ata_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#2992: FILE: include/linux/libata.h:315:
+	void (*set_piomode) (struct ata_port *, struct ata_device *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2993: FILE: include/linux/libata.h:316:
+	void (*set_dmamode) (struct ata_port *, struct ata_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_port *' should also have an identifier name
#2993: FILE: include/linux/libata.h:316:
+	void (*set_dmamode) (struct ata_port *, struct ata_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#2993: FILE: include/linux/libata.h:316:
+	void (*set_dmamode) (struct ata_port *, struct ata_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3009: FILE: include/linux/libata.h:374:
+extern int ata_scsi_ioctl(struct scsi_device *dev, int cmd, void __user *arg);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000259183.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 66 errors, 97 warnings, 37 checks, 2758 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000259183.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
