WARNING:TYPO_SPELLING: 'ammount' may be misspelled - perhaps 'amount'?
#41: 
> I don't know. I'd let Linus decide. I don't like hard limit on ammount
                                                                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#61: 
diff -ruN linux-2.5.63/arch/i386/kernel/Makefile linux-2.5.63-01/arch/i386/kernel/Makefile

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#82: FILE: arch/i386/kernel/suspend.c:138:
+static int loop __nosavedata = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#83: FILE: arch/i386/kernel/suspend.c:139:
+static int loop2 __nosavedata = 0;

ERROR:SPACING: space prohibited after that open parenthesis '('
#96: FILE: arch/i386/kernel/suspend.c:152:
+		asm (	"movl %esp, saved_context_esp\n\t"

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: arch/i386/kernel/suspend.c:161:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#106: FILE: arch/i386/kernel/suspend.c:162:
+		do_magic_suspend_2();		/* If everything goes okay, this function does not return */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: arch/i386/kernel/suspend.c:167:
+^I * place in memory $

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: arch/i386/kernel/suspend.c:170:
+        __asm__( "movl %%ecx,%%cr3\n" ::"c"(__pa(swapper_pg_dir)));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: arch/i386/kernel/suspend.c:170:
+        __asm__( "movl %%ecx,%%cr3\n" ::"c"(__pa(swapper_pg_dir)));$

ERROR:SPACING: space prohibited after that open parenthesis '('
#114: FILE: arch/i386/kernel/suspend.c:170:
+        __asm__( "movl %%ecx,%%cr3\n" ::"c"(__pa(swapper_pg_dir)));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: arch/i386/kernel/suspend.c:178:
+ * with 4MB page tables. That's why we require have_pse.  $

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#130: FILE: arch/i386/kernel/suspend.c:186:
+ * Critical section here: noone should touch saved memory after
                           ^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#136: FILE: arch/i386/kernel/suspend.c:192:
+	for (loop=0; loop < nr_copy_pages; loop++) {
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#138: FILE: arch/i386/kernel/suspend.c:194:
+		for (loop2=0; loop2 < PAGE_SIZE; loop2++) {
 		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#139: FILE: arch/i386/kernel/suspend.c:195:
+			*(((char *)(PAGEDIR_ENTRY(pagedir_nosave,loop)->orig_address))+loop2) =
 			                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#139: FILE: arch/i386/kernel/suspend.c:195:
+			*(((char *)(PAGEDIR_ENTRY(pagedir_nosave,loop)->orig_address))+loop2) =
 			                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#140: FILE: arch/i386/kernel/suspend.c:196:
+				*(((char *)(PAGEDIR_ENTRY(pagedir_nosave,loop)->address))+loop2);
 				                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#140: FILE: arch/i386/kernel/suspend.c:196:
+				*(((char *)(PAGEDIR_ENTRY(pagedir_nosave,loop)->address))+loop2);
 				                                                         ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#145: FILE: arch/i386/kernel/suspend.c:201:
+	asm(	"movl saved_context_esp, %esp\n\t"

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#157: FILE: arch/i386/kernel/suspend.c:213:
+/* Ahah, we now run with our old stack, and with registers copied from
+   suspend time */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#157: FILE: arch/i386/kernel/suspend.c:213:
+   suspend time */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#198: FILE: include/linux/suspend.h:45:
+#define PAGEDIR_CAPACITY(x)     (((x)*PAGE_SIZE/sizeof(struct pbe)))
                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#198: FILE: include/linux/suspend.h:45:
+#define PAGEDIR_CAPACITY(x)     (((x)*PAGE_SIZE/sizeof(struct pbe)))
                                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#199: FILE: include/linux/suspend.h:46:
+#define PAGEDIR_ENTRY(pagedir, i) (pagedir[i/PAGEDIR_CAPACITY(1)] + (i%PAGEDIR_CAPACITY(1)))
                                             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#199: FILE: include/linux/suspend.h:46:
+#define PAGEDIR_ENTRY(pagedir, i) (pagedir[i/PAGEDIR_CAPACITY(1)] + (i%PAGEDIR_CAPACITY(1)))
                                                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#199: FILE: include/linux/suspend.h:46:
+#define PAGEDIR_ENTRY(pagedir, i) (pagedir[i/PAGEDIR_CAPACITY(1)] + (i%PAGEDIR_CAPACITY(1)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'i' may be better as '(i)' to avoid precedence issues
#199: FILE: include/linux/suspend.h:46:
+#define PAGEDIR_ENTRY(pagedir, i) (pagedir[i/PAGEDIR_CAPACITY(1)] + (i%PAGEDIR_CAPACITY(1)))

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#231: FILE: kernel/suspend.c:119:
+static suspend_pagedir_t **pagedir_save = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#232: FILE: kernel/suspend.c:120:
+static int pagedir_size __nosavedata = 0;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#250: FILE: kernel/suspend.c:412:
+		address = PAGEDIR_ENTRY(pagedir_nosave,i)->address;
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#254: FILE: kernel/suspend.c:415:
+		PAGEDIR_ENTRY(pagedir_nosave,i)->swap_address = entry;
 		                            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#261: FILE: kernel/suspend.c:418:
+	printk( "Writing pagedir (%d pages): ", pagedir_size);

ERROR:SPACING: space prohibited after that open parenthesis '('
#261: FILE: kernel/suspend.c:418:
+	printk( "Writing pagedir (%d pages): ", pagedir_size);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#262: FILE: kernel/suspend.c:419:
+	for (i=0; i<pagedir_size; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#262: FILE: kernel/suspend.c:419:
+	for (i=0; i<pagedir_size; i++) {
 	           ^

CHECK:SPACING: No space is necessary after a cast
#263: FILE: kernel/suspend.c:420:
+		cur = (union diskpage *) pagedir_nosave[i];

WARNING:LONG_LINE: line length of 157 exceeds 100 columns
#286: FILE: kernel/suspend.c:510:
+			copy_page((void *) PAGEDIR_ENTRY(pagedir_p, nr_copy_pages)->address, (void *) PAGEDIR_ENTRY(pagedir_p, nr_copy_pages)->orig_address);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#286: FILE: kernel/suspend.c:510:
+			copy_page((void *) PAGEDIR_ENTRY(pagedir_p, nr_copy_pages)->address, (void *) PAGEDIR_ENTRY(pagedir_p, nr_copy_pages)->orig_address);

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#294: FILE: kernel/suspend.c:517:
+static void free_suspend_pagedir(struct pbe ** this_pagedir)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#314: FILE: kernel/suspend.c:525:
+	for(i = 0; i < nr_copy_pages; i++) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#315: FILE: kernel/suspend.c:526:
+		if (PAGEDIR_ENTRY(this_pagedir,i)->address) {
 		                              ^

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#317: FILE: kernel/suspend.c:528:
+				printk("Pagedir entry %d-%d address2 not set!\n", rangestart, rangeend);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#317: FILE: kernel/suspend.c:528:
+				printk("Pagedir entry %d-%d address2 not set!\n", rangestart, rangeend);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#320: FILE: kernel/suspend.c:531:
+			ClearPageNosave(virt_to_page(PAGEDIR_ENTRY(this_pagedir,i)->address));
 			                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#321: FILE: kernel/suspend.c:532:
+			free_page(PAGEDIR_ENTRY(this_pagedir,i)->address);
 			                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: kernel/suspend.c:539:
+^I^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#331: FILE: kernel/suspend.c:541:
+		printk("Pagedir entry %d-%d address not set!\n", rangestart, nr_copy_pages - 1);

ERROR:SPACING: space prohibited after that '-' (ctx:WxW)
#331: FILE: kernel/suspend.c:541:
+		printk("Pagedir entry %d-%d address not set!\n", rangestart, nr_copy_pages - 1);
 		                                                                           ^

ERROR:SPACING: space required before the open parenthesis '('
#333: FILE: kernel/suspend.c:543:
+	for(i = 0; i < pagedir_size; i++)

CHECK:SPACING: No space is necessary after a cast
#334: FILE: kernel/suspend.c:544:
+		free_page((unsigned long) this_pagedir[i]);

CHECK:SPACING: No space is necessary after a cast
#336: FILE: kernel/suspend.c:546:
+	free_page((unsigned long) this_pagedir);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#357: FILE: kernel/suspend.c:560:
+	p = pagedir = (suspend_pagedir_t **)__get_free_pages(GFP_ATOMIC | __GFP_COLD, 0);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required before the open parenthesis '('
#358: FILE: kernel/suspend.c:561:
+	if(!p)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#367: FILE: kernel/suspend.c:566:
+	 * needs to be adjusted */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#368: FILE: kernel/suspend.c:567:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#373: FILE: kernel/suspend.c:572:
+			int j;
+			for (j = 0; j < i; j++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#373: FILE: kernel/suspend.c:572:
+			for (j = 0; j < i; j++) {
+				free_page((unsigned long) p[j]);
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#374: FILE: kernel/suspend.c:573:
+				free_page((unsigned long) p[j]);

CHECK:SPACING: No space is necessary after a cast
#376: FILE: kernel/suspend.c:575:
+			free_page((unsigned long) p);

ERROR:SPACING: space required before the open parenthesis '('
#386: FILE: kernel/suspend.c:582:
+		if(!PAGEDIR_ENTRY(p, nr_copy_pages)->address) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#481: FILE: kernel/suspend.c:918:
+static void warmup_collision_cache(suspend_pagedir_t **pagedir) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#494: FILE: kernel/suspend.c:925:
+	for(i=0; i < nr_copy_pages; i++) {
 	     ^

ERROR:SPACING: space required before the open parenthesis '('
#494: FILE: kernel/suspend.c:925:
+	for(i=0; i < nr_copy_pages; i++) {

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#496: FILE: kernel/suspend.c:927:
+		if (!(i%800)) {
 		       ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#496: FILE: kernel/suspend.c:927:
+		if (!(i%800)) {
+			PRINTK(".");
+		}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#503: FILE: kernel/suspend.c:934:
 }
+#define does_collide(address) (PageCollides(virt_to_page(address)))

CHECK:SPACING: No space is necessary after a cast
#526: FILE: kernel/suspend.c:947:
+		while ((addr = (void *) get_zeroed_page(GFP_ATOMIC))) {

CHECK:SPACING: No space is necessary after a cast
#528: FILE: kernel/suspend.c:949:
+			if (!does_collide((unsigned long) addr)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#528: FILE: kernel/suspend.c:949:
+			if (!does_collide((unsigned long) addr)) {
+				break;
+			}

CHECK:SPACING: No space is necessary after a cast
#535: FILE: kernel/suspend.c:956:
+		PAGEDIR_ENTRY(pagedir_nosave,i)->address = (unsigned long) addr;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#535: FILE: kernel/suspend.c:956:
+		PAGEDIR_ENTRY(pagedir_nosave,i)->address = (unsigned long) addr;
 		                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#538: FILE: kernel/suspend.c:959:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#541: FILE: kernel/suspend.c:962:
+	while(c) {

CHECK:SPACING: No space is necessary after a cast
#545: FILE: kernel/suspend.c:966:
+			free_page((unsigned long) f);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#548: FILE: kernel/suspend.c:969:
+^I$

CHECK:SPACING: No space is necessary after a cast
#593: FILE: kernel/suspend.c:991:
+			this_collides = does_collide((unsigned long) pagedir_nosave);

CHECK:SPACING: No space is necessary after a cast
#595: FILE: kernel/suspend.c:993:
+			this_collides = does_collide((unsigned long) pagedir_nosave[i]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#596: FILE: kernel/suspend.c:994:
+^I^I$

CHECK:SPACING: No space is necessary after a cast
#598: FILE: kernel/suspend.c:996:
+			while ((m = (void *) __get_free_pages(GFP_ATOMIC, 0))) {

CHECK:SPACING: No space is necessary after a cast
#603: FILE: kernel/suspend.c:1001:
+						free_page((unsigned long) pagedir_nosave);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#606: FILE: kernel/suspend.c:1004:
+					}
+					else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#606: FILE: kernel/suspend.c:1004:
+					else {

CHECK:SPACING: No space is necessary after a cast
#607: FILE: kernel/suspend.c:1005:
+						copy_page(m, (void *) pagedir_nosave[i]);

CHECK:SPACING: No space is necessary after a cast
#608: FILE: kernel/suspend.c:1006:
+						free_page((unsigned long) pagedir_nosave[i]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#615: FILE: kernel/suspend.c:1013:
+^I^I^I^IPRINTK("Eaten: %d. Still to try:%d\r", numeaten, nr_free_pages()); $

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#620: FILE: kernel/suspend.c:1018:
+				printk("\nRan out of memory trying to relocate pagedir (tried %d pages).\n", numeaten);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#620: FILE: kernel/suspend.c:1018:
+				printk("\nRan out of memory trying to relocate pagedir (tried %d pages).\n", numeaten);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#626: FILE: kernel/suspend.c:1024:
 
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#627: FILE: kernel/suspend.c:1025:
+^I^I$

CHECK:SPACING: No space is necessary after a cast
#637: FILE: kernel/suspend.c:1032:
+			free_pages((unsigned long) f, 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#641: FILE: kernel/suspend.c:1035:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#643: FILE: kernel/suspend.c:1037:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#644: FILE: kernel/suspend.c:1038:
+^Iif (oom) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#675: FILE: kernel/suspend.c:1170:
+		int i;
+		for (i = 0; i < pagedir_size; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#679: FILE: kernel/suspend.c:1174:
+				int j;
+				for (j = 0; j < i; j++)

CHECK:SPACING: No space is necessary after a cast
#680: FILE: kernel/suspend.c:1175:
+					free_page((unsigned long) pagedir_nosave[j]);

CHECK:SPACING: No space is necessary after a cast
#681: FILE: kernel/suspend.c:1176:
+				free_page((unsigned long) pagedir_nosave);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#691: FILE: kernel/suspend.c:1185:
+	for (i=pagedir_size-1; i>=0; i--) {
 	      ^

ERROR:SPACING: space required before that '-' (ctx:VxV)
#691: FILE: kernel/suspend.c:1185:
+	for (i=pagedir_size-1; i>=0; i--) {
 	                   ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#691: FILE: kernel/suspend.c:1185:
+	for (i=pagedir_size-1; i>=0; i--) {
 	                        ^

CHECK:SPACING: No space is necessary after a cast
#694: FILE: kernel/suspend.c:1187:
+		cur = (union diskpage *) pagedir_nosave[i];

ERROR:CODE_INDENT: code indent should use tabs where possible
#700: FILE: kernel/suspend.c:1193:
+ ^Iwarmup_collision_cache(pagedir_nosave);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#700: FILE: kernel/suspend.c:1193:
+ ^Iwarmup_collision_cache(pagedir_nosave);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: kernel/suspend.c:1193:
+ ^Iwarmup_collision_cache(pagedir_nosave);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#701: FILE: kernel/suspend.c:1194:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: kernel/suspend.c:1194:
+ $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#710: FILE: kernel/suspend.c:1202:
+		swp_entry_t swap_address = PAGEDIR_ENTRY(pagedir_nosave,i)->swap_address;
 		                                                       ^

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#716: FILE: kernel/suspend.c:1207:
+		if (bdev_read_page(bdev, swp_offset(swap_address) * PAGE_SIZE, (char *)(PAGEDIR_ENTRY(pagedir_nosave,i)->address)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#716: FILE: kernel/suspend.c:1207:
+		if (bdev_read_page(bdev, swp_offset(swap_address) * PAGE_SIZE, (char *)(PAGEDIR_ENTRY(pagedir_nosave,i)->address)))
 		                                                                                                    ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000389534.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 52 errors, 25 warnings, 33 checks, 621 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000389534.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
