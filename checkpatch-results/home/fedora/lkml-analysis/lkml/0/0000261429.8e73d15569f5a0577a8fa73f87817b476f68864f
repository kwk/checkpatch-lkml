WARNING:TYPO_SPELLING: 'intension' may be misspelled - perhaps 'intention'?
#29: 
       to be NULL,  the intension is checking the contents for
                        ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#46: FILE: read_write.c:549:
+       struct sendfile_target target;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: read_write.c:566:
+       if (!*ppos)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#55: FILE: read_write.c:566:
+       if (!*ppos)
                ppos = &in_file->f_pos;

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#58: FILE: read_write.c:568:
*ppos, count);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: read_write.c:590:
+       target.file = out_file;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: read_write.c:591:
+       target.pos = out_file->f_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: read_write.c:592:
+       retval = locks_verify_area(FLOCK_VERIFY_WRITE, out_inode,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#71: FILE: read_write.c:593:
+       retval = locks_verify_area(FLOCK_VERIFY_WRITE, out_inode,
        if (retval)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: read_write.c:614:
+       retval = in_file->f_op->sendfile(in_file, ppos, count,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: read_write.c:618:
+       if (!retval)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#85: FILE: read_write.c:618:
+       if (!retval)
+               out_file->f_pos = target.pos;

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: read_write.c:619:
+               out_file->f_pos = target.pos;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: read_write.c:619:
+               out_file->f_pos = target.pos;$

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: linux/fs.h:854:
+       loff_t *pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: linux/fs.h:860:
+       struct file *file;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: linux/fs.h:861:
+       loff_t pos;$

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: filemap.c:944:
+       struct file *file = desc->buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: filemap.c:945:
+       loff_t *ppos = desc->pos;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: filemap.c:951:
+                                      size, ppos, size<count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: filemap.c:951:
+                                      size, ppos, size<count);$

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#124: FILE: filemap.c:951:
+                                      size, ppos, size<count);
                                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: filemap.c:962:
+                        size_t count, read_actor_t actor, void __user$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: filemap.c:962:
+                        size_t count, read_actor_t actor, void __user$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: filemap.c:965:
+       struct sendfile_target *target = arg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: filemap.c:972:
+       desc.buf = target->file;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: filemap.c:974:
+       desc.pos = &target->pos;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000261429.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 24 warnings, 1 checks, 99 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000261429.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
