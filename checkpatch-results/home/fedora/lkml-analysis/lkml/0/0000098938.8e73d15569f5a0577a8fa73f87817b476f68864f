WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#44: 
     It holds this reference while calling iput on an inode.  This can
                                           ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#126: FILE: fs/dcache.c:117:
+		iput(inode);
 		^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#129: FILE: fs/dcache.c:120:
+static void dentry_iput(struct dentry * dentry)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: fs/dcache.c:239:
+ ^I^Ispin_unlock(&dentry->d_lock);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#193: FILE: fs/dcache.c:239:
+ ^I^Ispin_unlock(&dentry->d_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: fs/dcache.c:239:
+ ^I^Ispin_unlock(&dentry->d_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: fs/dcache.c:240:
+ ^I^Ispin_unlock(&dcache_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#194: FILE: fs/dcache.c:240:
+ ^I^Ispin_unlock(&dcache_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: fs/dcache.c:240:
+ ^I^Ispin_unlock(&dcache_lock);$

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#217: FILE: fs/dcache.c:411:
+ * Note: the race was easiest to hit if iput was very slow, as
                                         ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#224: FILE: fs/dcache.c:418:
+	struct inode * ino;

CHECK:BRACES: Unbalanced braces around else statement
#236: FILE: fs/dcache.c:427:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000098938.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 8 warnings, 1 checks, 152 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000098938.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
