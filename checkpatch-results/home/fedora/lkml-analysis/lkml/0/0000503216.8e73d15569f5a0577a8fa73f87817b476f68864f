WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#72: 
//  EXTRAVERSION =-pre3
    ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#73: 
diff -ur 2.4/include/asm-i386/current.h build-2.4/include/asm-i386/current.h

WARNING:LINE_SPACING: Missing a blank line after declarations
#86: FILE: include/asm-i386/current.h:9:
+	struct task_struct *tsk;
+	__asm__("movl %%cr2,%0;": "=r" (tsk));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#86: FILE: include/asm-i386/current.h:9:
+	__asm__("movl %%cr2,%0;": "=r" (tsk));
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#91: FILE: include/asm-i386/current.h:14:
+static inline struct task_struct * hard_get_current(void)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#94: FILE: include/asm-i386/current.h:17:
+	struct task_struct **ptsk;
+	__asm__("andl %%esp,%0; ":"=r" (ptsk) : "0" (~8191UL));

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#94: FILE: include/asm-i386/current.h:17:
+	__asm__("andl %%esp,%0; ":"=r" (ptsk) : "0" (~8191UL));
 	                         ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#102: FILE: include/asm-i386/current.h:25:
+			:"r" (tsk));
 			^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: include/asm-i386/current.h:27:
+   $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: include/asm-i386/current.h:27:
+   $

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#116: FILE: include/asm-i386/processor.h:17:
+#include <asm/atomic.h>

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#125: FILE: include/asm-i386/processor.h:388:
+struct task_struct_info
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#142: FILE: include/asm-i386/processor.h:409:
+^I0, /* esp0 */ ^I^I^I^I^I^I\$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tsk' may be better as '(tsk)' to avoid precedence issues
#152: FILE: include/asm-i386/processor.h:458:
+#define TSK_TO_KSTACK(tsk) \
+	((unsigned long *) ((struct task_struct_info*)(tsk+1))->kstack)

CHECK:SPACING: No space is necessary after a cast
#153: FILE: include/asm-i386/processor.h:459:
+	((unsigned long *) ((struct task_struct_info*)(tsk+1))->kstack)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#153: FILE: include/asm-i386/processor.h:459:
+	((unsigned long *) ((struct task_struct_info*)(tsk+1))->kstack)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#153: FILE: include/asm-i386/processor.h:459:
+	((unsigned long *) ((struct task_struct_info*)(tsk+1))->kstack)
 	                                                  ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#163: FILE: include/asm-i386/processor.h:466:
+struct task_struct * alloc_task_struct(void);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#252: FILE: arch/i386/kernel/init_task.c:18:
+union task_union init_task_union =
+		{ INIT_TASK(init_task_union.task) };

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#260: FILE: arch/i386/kernel/init_task.c:25:
+unsigned long init_task_stack[THREAD_SIZE/sizeof(unsigned long)]
                                          ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#263: FILE: arch/i386/kernel/init_task.c:27:
 	__attribute__((__section__(".data.init_task"))) =
+	{ (unsigned long)&init_task_union,};

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#312: FILE: arch/i386/kernel/process.c:573:
+struct full_task_struct
+{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#317: FILE: arch/i386/kernel/process.c:578:
+static kmem_cache_t * tsk_cache;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#319: FILE: arch/i386/kernel/process.c:580:
+struct task_struct * alloc_task_struct(void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#322: FILE: arch/i386/kernel/process.c:583:
+	struct full_task_struct *f = kmem_cache_alloc(tsk_cache, GFP_KERNEL);
+	if (!f)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#324: FILE: arch/i386/kernel/process.c:585:
+	f->info.kstack = (void*)__get_free_pages(GFP_KERNEL,1);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#324: FILE: arch/i386/kernel/process.c:585:
+	f->info.kstack = (void*)__get_free_pages(GFP_KERNEL,1);
 	                                                   ^

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#329: FILE: arch/i386/kernel/process.c:590:
+	*(void**)f->info.kstack = &f->tsk;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: arch/i386/kernel/process.c:591:
+^Iatomic_set(&f->info.users, 1);^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#336: FILE: arch/i386/kernel/process.c:597:
+	struct full_task_struct *f = (struct full_task_struct*)tsk;

WARNING:LINE_SPACING: Missing a blank line after declarations
#337: FILE: arch/i386/kernel/process.c:598:
+	struct full_task_struct *f = (struct full_task_struct*)tsk;
+	atomic_inc(&f->info.users);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#342: FILE: arch/i386/kernel/process.c:603:
+	struct full_task_struct *f = (struct full_task_struct*)tsk;

WARNING:LINE_SPACING: Missing a blank line after declarations
#343: FILE: arch/i386/kernel/process.c:604:
+	struct full_task_struct *f = (struct full_task_struct*)tsk;
+	if(atomic_dec_and_test(&f->info.users)) {

ERROR:SPACING: space required before the open parenthesis '('
#343: FILE: arch/i386/kernel/process.c:604:
+	if(atomic_dec_and_test(&f->info.users)) {

CHECK:SPACING: No space is necessary after a cast
#344: FILE: arch/i386/kernel/process.c:605:
+		free_pages((unsigned long) f->info.kstack, 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#352: FILE: arch/i386/kernel/process.c:613:
+	tsk_cache = kmem_cache_create("task_cache",
+					 sizeof(struct full_task_struct),

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#363: FILE: arch/i386/kernel/process.c:624:
+	struct full_task_struct *f = (struct full_task_struct*)hard_get_current();

WARNING:LINE_SPACING: Missing a blank line after declarations
#364: FILE: arch/i386/kernel/process.c:625:
+	struct full_task_struct *f = (struct full_task_struct*)hard_get_current();
+	atomic_set(&f->info.users, 1);

CHECK:SPACING: No space is necessary after a cast
#379: FILE: arch/i386/kernel/process.c:643:
+	childregs = ((struct pt_regs *) (THREAD_SIZE + (unsigned long) f->info.kstack)) - 1;

CHECK:SPACING: No space is necessary after a cast
#407: FILE: arch/i386/kernel/smpboot.c:819:
+	stack_start.esp = (void *) (THREAD_SIZE + (char *)TSK_TO_KSTACK(idle));

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#493: FILE: init/main.c:597:
+#ifdef __i386__

Architecture specific defines should be avoided wherever
possible.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000503216.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 11 warnings, 10 checks, 360 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000503216.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
