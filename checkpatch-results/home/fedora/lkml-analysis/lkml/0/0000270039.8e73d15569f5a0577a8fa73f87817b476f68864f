WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#59: FILE: drivers/s390/net/ctcdbug.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#61: FILE: drivers/s390/net/ctcdbug.c:3:
+ * linux/drivers/s390/net/ctcdbug.c ($Revision: 1.1 $)

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#61: FILE: drivers/s390/net/ctcdbug.c:3:
+ * linux/drivers/s390/net/ctcdbug.c ($Revision: 1.1 $)

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#70: FILE: drivers/s390/net/ctcdbug.c:12:
+ *    $Revision: 1.1 $	 $Date: 2004/07/02 16:31:22 $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#83: FILE: drivers/s390/net/ctcdbug.c:25:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#84: FILE: drivers/s390/net/ctcdbug.c:26:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#92: FILE: drivers/s390/net/ctcdbug.c:34:
+debug_info_t *dbf_setup = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#93: FILE: drivers/s390/net/ctcdbug.c:35:
+debug_info_t *dbf_data = NULL;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#94: FILE: drivers/s390/net/ctcdbug.c:36:
+debug_info_t *dbf_trace = NULL;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#108: FILE: drivers/s390/net/ctcdbug.c:50:
+}
+int

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: drivers/s390/net/ctcdbug.c:54:
+	dbf_setup = debug_register(CTC_DBF_SETUP_NAME,
+					CTC_DBF_SETUP_INDEX,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: drivers/s390/net/ctcdbug.c:58:
+	dbf_data = debug_register(CTC_DBF_DATA_NAME,
+				       CTC_DBF_DATA_INDEX,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: drivers/s390/net/ctcdbug.c:62:
+	dbf_trace = debug_register(CTC_DBF_TRACE_NAME,
+					CTC_DBF_TRACE_INDEX,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dbf_setup == NULL'
#124: FILE: drivers/s390/net/ctcdbug.c:66:
+	if ((dbf_setup == NULL) || (dbf_data == NULL) ||
+	    (dbf_trace == NULL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dbf_data == NULL'
#124: FILE: drivers/s390/net/ctcdbug.c:66:
+	if ((dbf_setup == NULL) || (dbf_data == NULL) ||
+	    (dbf_trace == NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dbf_trace == NULL'
#124: FILE: drivers/s390/net/ctcdbug.c:66:
+	if ((dbf_setup == NULL) || (dbf_data == NULL) ||
+	    (dbf_trace == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dbf_setup"
#124: FILE: drivers/s390/net/ctcdbug.c:66:
+	if ((dbf_setup == NULL) || (dbf_data == NULL) ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dbf_data"
#124: FILE: drivers/s390/net/ctcdbug.c:66:
+	if ((dbf_setup == NULL) || (dbf_data == NULL) ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dbf_trace"
#125: FILE: drivers/s390/net/ctcdbug.c:67:
+	    (dbf_trace == NULL)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#141: FILE: drivers/s390/net/ctcdbug.c:83:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#146: FILE: drivers/s390/net/ctcdbug.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#148: FILE: drivers/s390/net/ctcdbug.h:3:
+ * linux/drivers/s390/net/ctcdbug.h ($Revision: 1.1 $)

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#148: FILE: drivers/s390/net/ctcdbug.h:3:
+ * linux/drivers/s390/net/ctcdbug.h ($Revision: 1.1 $)

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#157: FILE: drivers/s390/net/ctcdbug.h:12:
+ *    $Revision: 1.1 $	 $Date: 2004/07/02 16:31:22 $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#170: FILE: drivers/s390/net/ctcdbug.h:25:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#171: FILE: drivers/s390/net/ctcdbug.h:26:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#174: FILE: drivers/s390/net/ctcdbug.h:29:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#197: FILE: drivers/s390/net/ctcdbug.h:52:
+#define DBF_TEXT(name,level,text) \
                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#197: FILE: drivers/s390/net/ctcdbug.h:52:
+#define DBF_TEXT(name,level,text) \
                            ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#197: FILE: drivers/s390/net/ctcdbug.h:52:
+#define DBF_TEXT(name,level,text) \
+	do { \
+		debug_text_event(dbf_##name,level,text); \
+	} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: drivers/s390/net/ctcdbug.h:54:
+		debug_text_event(dbf_##name,level,text); \
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: drivers/s390/net/ctcdbug.h:54:
+		debug_text_event(dbf_##name,level,text); \
 		                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#202: FILE: drivers/s390/net/ctcdbug.h:57:
+#define DBF_HEX(name,level,addr,len) \
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#202: FILE: drivers/s390/net/ctcdbug.h:57:
+#define DBF_HEX(name,level,addr,len) \
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#202: FILE: drivers/s390/net/ctcdbug.h:57:
+#define DBF_HEX(name,level,addr,len) \
                                ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#202: FILE: drivers/s390/net/ctcdbug.h:57:
+#define DBF_HEX(name,level,addr,len) \
+	do { \
+		debug_event(dbf_##name,level,(void*)(addr),len); \
+	} while (0)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#204: FILE: drivers/s390/net/ctcdbug.h:59:
+		debug_event(dbf_##name,level,(void*)(addr),len); \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#204: FILE: drivers/s390/net/ctcdbug.h:59:
+		debug_event(dbf_##name,level,(void*)(addr),len); \
 		                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#204: FILE: drivers/s390/net/ctcdbug.h:59:
+		debug_event(dbf_##name,level,(void*)(addr),len); \
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#204: FILE: drivers/s390/net/ctcdbug.h:59:
+		debug_event(dbf_##name,level,(void*)(addr),len); \
 		                                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#212: FILE: drivers/s390/net/ctcdbug.h:67:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#213: FILE: drivers/s390/net/ctcdbug.h:68:
+#define DBF_TEXT_(name,level,text...)				\
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#213: FILE: drivers/s390/net/ctcdbug.h:68:
+#define DBF_TEXT_(name,level,text...)				\
                             ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#215: FILE: drivers/s390/net/ctcdbug.h:70:
+		char* dbf_txt_buf = get_cpu_var(dbf_txt_buf);	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#216: FILE: drivers/s390/net/ctcdbug.h:71:
+^I^Isprintf(dbf_txt_buf, text);^I^I^I  ^I\$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: drivers/s390/net/ctcdbug.h:72:
+		debug_text_event(dbf_##name,level,dbf_txt_buf);	\
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: drivers/s390/net/ctcdbug.h:72:
+		debug_text_event(dbf_##name,level,dbf_txt_buf);	\
 		                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#221: FILE: drivers/s390/net/ctcdbug.h:76:
+#define DBF_SPRINTF(name,level,text...) \
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#221: FILE: drivers/s390/net/ctcdbug.h:76:
+#define DBF_SPRINTF(name,level,text...) \
                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'level' - possible side-effects?
#221: FILE: drivers/s390/net/ctcdbug.h:76:
+#define DBF_SPRINTF(name,level,text...) \
+	do { \
+		debug_sprintf_event(dbf_trace, level, ##text ); \
+		debug_sprintf_event(dbf_trace, level, text ); \
+	} while (0)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#223: FILE: drivers/s390/net/ctcdbug.h:78:
+		debug_sprintf_event(dbf_trace, level, ##text ); \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#224: FILE: drivers/s390/net/ctcdbug.h:79:
+		debug_sprintf_event(dbf_trace, level, text ); \

CHECK:LINE_SPACING: Please don't use multiple blank lines
#227: FILE: drivers/s390/net/ctcdbug.h:82:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#236: FILE: drivers/s390/net/ctcdbug.h:91:
+#define HEXDUMP16(importance,header,ptr) \
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#236: FILE: drivers/s390/net/ctcdbug.h:91:
+#define HEXDUMP16(importance,header,ptr) \
                                    ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#236: FILE: drivers/s390/net/ctcdbug.h:91:
+#define HEXDUMP16(importance,header,ptr) \
+PRINT_##importance(header "%02x %02x %02x %02x  %02x %02x %02x %02x  " \
+		   "%02x %02x %02x %02x  %02x %02x %02x %02x\n", \
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \
+PRINT_##importance(header "%02x %02x %02x %02x  %02x %02x %02x %02x  " \
+		   "%02x %02x %02x %02x  %02x %02x %02x %02x\n", \
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'header' - possible side-effects?
#236: FILE: drivers/s390/net/ctcdbug.h:91:
+#define HEXDUMP16(importance,header,ptr) \
+PRINT_##importance(header "%02x %02x %02x %02x  %02x %02x %02x %02x  " \
+		   "%02x %02x %02x %02x  %02x %02x %02x %02x\n", \
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \
+PRINT_##importance(header "%02x %02x %02x %02x  %02x %02x %02x %02x  " \
+		   "%02x %02x %02x %02x  %02x %02x %02x %02x\n", \
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#236: FILE: drivers/s390/net/ctcdbug.h:91:
+#define HEXDUMP16(importance,header,ptr) \
+PRINT_##importance(header "%02x %02x %02x %02x  %02x %02x %02x %02x  " \
+		   "%02x %02x %02x %02x  %02x %02x %02x %02x\n", \
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \
+PRINT_##importance(header "%02x %02x %02x %02x  %02x %02x %02x %02x  " \
+		   "%02x %02x %02x %02x  %02x %02x %02x %02x\n", \
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#236: FILE: drivers/s390/net/ctcdbug.h:91:
+#define HEXDUMP16(importance,header,ptr) \
+PRINT_##importance(header "%02x %02x %02x %02x  %02x %02x %02x %02x  " \
+		   "%02x %02x %02x %02x  %02x %02x %02x %02x\n", \
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \
+PRINT_##importance(header "%02x %02x %02x %02x  %02x %02x %02x %02x  " \
+		   "%02x %02x %02x %02x  %02x %02x %02x %02x\n", \
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#239: FILE: drivers/s390/net/ctcdbug.h:94:
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#239: FILE: drivers/s390/net/ctcdbug.h:94:
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#239: FILE: drivers/s390/net/ctcdbug.h:94:
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \

ERROR:SPACING: space required after that ',' (ctx:VxO)
#239: FILE: drivers/s390/net/ctcdbug.h:94:
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
 		                  ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#239: FILE: drivers/s390/net/ctcdbug.h:94:
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#239: FILE: drivers/s390/net/ctcdbug.h:94:
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
 		                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#239: FILE: drivers/s390/net/ctcdbug.h:94:
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
 		                                    ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#239: FILE: drivers/s390/net/ctcdbug.h:94:
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
 		                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#239: FILE: drivers/s390/net/ctcdbug.h:94:
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
 		                                                   ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#240: FILE: drivers/s390/net/ctcdbug.h:95:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#240: FILE: drivers/s390/net/ctcdbug.h:95:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#240: FILE: drivers/s390/net/ctcdbug.h:95:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#240: FILE: drivers/s390/net/ctcdbug.h:95:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#240: FILE: drivers/s390/net/ctcdbug.h:95:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
 		                    ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#240: FILE: drivers/s390/net/ctcdbug.h:95:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
 		                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#240: FILE: drivers/s390/net/ctcdbug.h:95:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
 		                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#240: FILE: drivers/s390/net/ctcdbug.h:95:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
 		                                      ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#240: FILE: drivers/s390/net/ctcdbug.h:95:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
 		                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#240: FILE: drivers/s390/net/ctcdbug.h:95:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
 		                                                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#241: FILE: drivers/s390/net/ctcdbug.h:96:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#241: FILE: drivers/s390/net/ctcdbug.h:96:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#241: FILE: drivers/s390/net/ctcdbug.h:96:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#241: FILE: drivers/s390/net/ctcdbug.h:96:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#241: FILE: drivers/s390/net/ctcdbug.h:96:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
 		                    ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#241: FILE: drivers/s390/net/ctcdbug.h:96:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
 		                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#241: FILE: drivers/s390/net/ctcdbug.h:96:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
 		                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#241: FILE: drivers/s390/net/ctcdbug.h:96:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
 		                                      ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#241: FILE: drivers/s390/net/ctcdbug.h:96:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
 		                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#241: FILE: drivers/s390/net/ctcdbug.h:96:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
 		                                                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#242: FILE: drivers/s390/net/ctcdbug.h:97:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#242: FILE: drivers/s390/net/ctcdbug.h:97:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#242: FILE: drivers/s390/net/ctcdbug.h:97:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#242: FILE: drivers/s390/net/ctcdbug.h:97:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#242: FILE: drivers/s390/net/ctcdbug.h:97:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
 		                    ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#242: FILE: drivers/s390/net/ctcdbug.h:97:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
 		                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#242: FILE: drivers/s390/net/ctcdbug.h:97:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
 		                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#242: FILE: drivers/s390/net/ctcdbug.h:97:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
 		                                       ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#242: FILE: drivers/s390/net/ctcdbug.h:97:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
 		                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#242: FILE: drivers/s390/net/ctcdbug.h:97:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
 		                                                      ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#243: FILE: drivers/s390/net/ctcdbug.h:98:
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#243: FILE: drivers/s390/net/ctcdbug.h:98:
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#243: FILE: drivers/s390/net/ctcdbug.h:98:
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#243: FILE: drivers/s390/net/ctcdbug.h:98:
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#243: FILE: drivers/s390/net/ctcdbug.h:98:
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#243: FILE: drivers/s390/net/ctcdbug.h:98:
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \
 		                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#244: FILE: drivers/s390/net/ctcdbug.h:99:
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#244: FILE: drivers/s390/net/ctcdbug.h:99:
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#244: FILE: drivers/s390/net/ctcdbug.h:99:
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#244: FILE: drivers/s390/net/ctcdbug.h:99:
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#244: FILE: drivers/s390/net/ctcdbug.h:99:
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#244: FILE: drivers/s390/net/ctcdbug.h:99:
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \
 		                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#247: FILE: drivers/s390/net/ctcdbug.h:102:
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#247: FILE: drivers/s390/net/ctcdbug.h:102:
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#247: FILE: drivers/s390/net/ctcdbug.h:102:
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#247: FILE: drivers/s390/net/ctcdbug.h:102:
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#247: FILE: drivers/s390/net/ctcdbug.h:102:
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#247: FILE: drivers/s390/net/ctcdbug.h:102:
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \
 		                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#248: FILE: drivers/s390/net/ctcdbug.h:103:
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#248: FILE: drivers/s390/net/ctcdbug.h:103:
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#248: FILE: drivers/s390/net/ctcdbug.h:103:
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#248: FILE: drivers/s390/net/ctcdbug.h:103:
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#248: FILE: drivers/s390/net/ctcdbug.h:103:
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#248: FILE: drivers/s390/net/ctcdbug.h:103:
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \
 		                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#249: FILE: drivers/s390/net/ctcdbug.h:104:
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#249: FILE: drivers/s390/net/ctcdbug.h:104:
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#249: FILE: drivers/s390/net/ctcdbug.h:104:
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#249: FILE: drivers/s390/net/ctcdbug.h:104:
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#249: FILE: drivers/s390/net/ctcdbug.h:104:
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#249: FILE: drivers/s390/net/ctcdbug.h:104:
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \
 		                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#250: FILE: drivers/s390/net/ctcdbug.h:105:
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#250: FILE: drivers/s390/net/ctcdbug.h:105:
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#250: FILE: drivers/s390/net/ctcdbug.h:105:
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#250: FILE: drivers/s390/net/ctcdbug.h:105:
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#250: FILE: drivers/s390/net/ctcdbug.h:105:
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#250: FILE: drivers/s390/net/ctcdbug.h:105:
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \
 		                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#251: FILE: drivers/s390/net/ctcdbug.h:106:
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#251: FILE: drivers/s390/net/ctcdbug.h:106:
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#251: FILE: drivers/s390/net/ctcdbug.h:106:
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#251: FILE: drivers/s390/net/ctcdbug.h:106:
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#251: FILE: drivers/s390/net/ctcdbug.h:106:
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#251: FILE: drivers/s390/net/ctcdbug.h:106:
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \
 		                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#252: FILE: drivers/s390/net/ctcdbug.h:107:
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#252: FILE: drivers/s390/net/ctcdbug.h:107:
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#252: FILE: drivers/s390/net/ctcdbug.h:107:
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#252: FILE: drivers/s390/net/ctcdbug.h:107:
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#252: FILE: drivers/s390/net/ctcdbug.h:107:
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#252: FILE: drivers/s390/net/ctcdbug.h:107:
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \
 		                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#253: FILE: drivers/s390/net/ctcdbug.h:108:
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#253: FILE: drivers/s390/net/ctcdbug.h:108:
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#253: FILE: drivers/s390/net/ctcdbug.h:108:
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#253: FILE: drivers/s390/net/ctcdbug.h:108:
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#253: FILE: drivers/s390/net/ctcdbug.h:108:
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#253: FILE: drivers/s390/net/ctcdbug.h:108:
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \
 		                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#254: FILE: drivers/s390/net/ctcdbug.h:109:
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#254: FILE: drivers/s390/net/ctcdbug.h:109:
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#254: FILE: drivers/s390/net/ctcdbug.h:109:
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#254: FILE: drivers/s390/net/ctcdbug.h:109:
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#254: FILE: drivers/s390/net/ctcdbug.h:109:
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#254: FILE: drivers/s390/net/ctcdbug.h:109:
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));
 		                                    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#263: FILE: drivers/s390/net/ctcdbug.h:118:
+			printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#264: FILE: drivers/s390/net/ctcdbug.h:119:
+		printk("%02x ", *(buf + i));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#266: FILE: drivers/s390/net/ctcdbug.h:121:
+	printk("\n");

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#275: FILE: drivers/s390/net/ctcmain.c:2:
+ * $Id: ctcmain.c,v 1.61 2004/07/02 16:31:22 ptiedem Exp $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#280: FILE: drivers/s390/net/ctcmain.c:36:
  * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#281: FILE: drivers/s390/net/ctcmain.c:37:
  * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#284: FILE: drivers/s390/net/ctcmain.c:39:
+ * RELEASE-TAG: CTC/ESCON network driver $Revision: 1.61 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#301: FILE: drivers/s390/net/ctcmain.c:323:
+	char vbuf[] = "$Revision: 1.61 $";

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#312: FILE: drivers/s390/net/ctcmain.c:622:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#320: FILE: drivers/s390/net/ctcmain.c:764:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#328: FILE: drivers/s390/net/ctcmain.c:799:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#336: FILE: drivers/s390/net/ctcmain.c:845:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#345: FILE: drivers/s390/net/ctcmain.c:856:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#358: FILE: drivers/s390/net/ctcmain.c:926:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#368: FILE: drivers/s390/net/ctcmain.c:1009:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#376: FILE: drivers/s390/net/ctcmain.c:1036:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#384: FILE: drivers/s390/net/ctcmain.c:1107:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#393: FILE: drivers/s390/net/ctcmain.c:1183:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#401: FILE: drivers/s390/net/ctcmain.c:1223:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#409: FILE: drivers/s390/net/ctcmain.c:1255:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#417: FILE: drivers/s390/net/ctcmain.c:1335:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#425: FILE: drivers/s390/net/ctcmain.c:1368:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#433: FILE: drivers/s390/net/ctcmain.c:1420:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#441: FILE: drivers/s390/net/ctcmain.c:1451:
+	DBF_TEXT(setup, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#449: FILE: drivers/s390/net/ctcmain.c:1504:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#457: FILE: drivers/s390/net/ctcmain.c:1539:
+	DBF_TEXT(setup, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#465: FILE: drivers/s390/net/ctcmain.c:1568:
+	DBF_TEXT(setup, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#473: FILE: drivers/s390/net/ctcmain.c:1589:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#481: FILE: drivers/s390/net/ctcmain.c:1621:
+	DBF_TEXT(setup, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#489: FILE: drivers/s390/net/ctcmain.c:1650:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#497: FILE: drivers/s390/net/ctcmain.c:1708:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#505: FILE: drivers/s390/net/ctcmain.c:1730:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#513: FILE: drivers/s390/net/ctcmain.c:1881:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#521: FILE: drivers/s390/net/ctcmain.c:1987:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#529: FILE: drivers/s390/net/ctcmain.c:2024:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#537: FILE: drivers/s390/net/ctcmain.c:2120:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#545: FILE: drivers/s390/net/ctcmain.c:2214:
+	DBF_TEXT(setup, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#553: FILE: drivers/s390/net/ctcmain.c:2237:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#561: FILE: drivers/s390/net/ctcmain.c:2250:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#569: FILE: drivers/s390/net/ctcmain.c:2272:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#577: FILE: drivers/s390/net/ctcmain.c:2325:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#585: FILE: drivers/s390/net/ctcmain.c:2427:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#593: FILE: drivers/s390/net/ctcmain.c:2600:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#601: FILE: drivers/s390/net/ctcmain.c:2658:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#609: FILE: drivers/s390/net/ctcmain.c:2703:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#617: FILE: drivers/s390/net/ctcmain.c:2748:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#625: FILE: drivers/s390/net/ctcmain.c:2766:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#633: FILE: drivers/s390/net/ctcmain.c:2896:
+	DBF_TEXT(setup, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#641: FILE: drivers/s390/net/ctcmain.c:2948:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#649: FILE: drivers/s390/net/ctcmain.c:3020:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#657: FILE: drivers/s390/net/ctcmain.c:3067:
+	DBF_TEXT(setup, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#666: FILE: drivers/s390/net/ctcmain.c:3161:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#674: FILE: drivers/s390/net/ctcmain.c:3212:
+	DBF_TEXT(trace, 2, __FUNCTION__);

ERROR:SPACING: space required before the open brace '{'
#691: FILE: drivers/s390/net/ctcmain.c:3269:
+	if (ret){

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#711: FILE: drivers/s390/net/ctctty.c:2:
+ * $Id: ctctty.c,v 1.21 2004/07/02 16:31:22 ptiedem Exp $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#727: FILE: drivers/s390/net/ctctty.c:107:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#735: FILE: drivers/s390/net/ctctty.c:137:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#743: FILE: drivers/s390/net/ctctty.c:171:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#751: FILE: drivers/s390/net/ctctty.c:192:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#759: FILE: drivers/s390/net/ctctty.c:257:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#767: FILE: drivers/s390/net/ctctty.c:350:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#775: FILE: drivers/s390/net/ctctty.c:371:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#783: FILE: drivers/s390/net/ctctty.c:385:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#791: FILE: drivers/s390/net/ctctty.c:424:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#799: FILE: drivers/s390/net/ctctty.c:467:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#807: FILE: drivers/s390/net/ctctty.c:500:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#831: FILE: drivers/s390/net/ctctty.c:548:
+	DBF_TEXT(trace, 6, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#839: FILE: drivers/s390/net/ctctty.c:578:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#857: FILE: drivers/s390/net/ctctty.c:595:
+	DBF_TEXT_(trace, 2, "ex: %s ", __FUNCTION__);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#900: FILE: drivers/s390/net/ctctty.c:1213:
+	if (strchr(dev->name, '%'))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#903: FILE: drivers/s390/net/ctctty.c:1216:
+		int err = dev_alloc_name(dev, dev->name);	// dev->name is changed by this
+		if (err < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#904: FILE: drivers/s390/net/ctctty.c:1217:
+			printk(KERN_DEBUG "dev_alloc returned error %d\n", err);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#908: FILE: drivers/s390/net/ctctty.c:1221:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000270039.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 102 errors, 80 warnings, 49 checks, 781 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000270039.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
