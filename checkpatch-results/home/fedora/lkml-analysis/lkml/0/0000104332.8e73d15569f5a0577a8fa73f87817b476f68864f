CHECK:CAMELCASE: Avoid CamelCase: <DpCtl>
#55: FILE: drivers/char/rio/board.h:52:
+	u8 DpCtl;		/* 7C00 */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Dp_Unused2_>
#56: FILE: drivers/char/rio/board.h:53:
+	u8 Dp_Unused2_[127];

CHECK:CAMELCASE: Avoid CamelCase: <DpIntSet>
#57: FILE: drivers/char/rio/board.h:54:
+	u8 DpIntSet;		/* 7C80 */

CHECK:CAMELCASE: Avoid CamelCase: <Dp_Unused3_>
#58: FILE: drivers/char/rio/board.h:55:
+	u8 Dp_Unused3_[127];

CHECK:CAMELCASE: Avoid CamelCase: <DpTpuReset>
#59: FILE: drivers/char/rio/board.h:56:
+	u8 DpTpuReset;	/* 7D00 */

CHECK:CAMELCASE: Avoid CamelCase: <Dp_Unused4_>
#60: FILE: drivers/char/rio/board.h:57:
+	u8 Dp_Unused4_[127];

CHECK:CAMELCASE: Avoid CamelCase: <DpIntReset>
#61: FILE: drivers/char/rio/board.h:58:
+	u8 DpIntReset;	/* 7D80 */

CHECK:CAMELCASE: Avoid CamelCase: <Dp_Unused5_>
#62: FILE: drivers/char/rio/board.h:59:
+	u8 Dp_Unused5_[127];

CHECK:CAMELCASE: Avoid CamelCase: <DpSlxCode>
#78: FILE: drivers/char/rio/board.h:66:
+	u16 DpSlxCode[2];

CHECK:CAMELCASE: Avoid CamelCase: <DpRev>
#79: FILE: drivers/char/rio/board.h:67:
+	u16 DpRev;

CHECK:CAMELCASE: Avoid CamelCase: <Dp_Unused6_>
#80: FILE: drivers/char/rio/board.h:68:
+	u16 Dp_Unused6_;

CHECK:CAMELCASE: Avoid CamelCase: <DpUniq>
#81: FILE: drivers/char/rio/board.h:69:
+	u16 DpUniq[4];

CHECK:CAMELCASE: Avoid CamelCase: <DpJahre>
#82: FILE: drivers/char/rio/board.h:70:
+	u16 DpJahre;

CHECK:CAMELCASE: Avoid CamelCase: <DpWoche>
#83: FILE: drivers/char/rio/board.h:71:
+	u16 DpWoche;

CHECK:CAMELCASE: Avoid CamelCase: <DpHwFeature>
#84: FILE: drivers/char/rio/board.h:72:
+	u16 DpHwFeature[5];

CHECK:CAMELCASE: Avoid CamelCase: <DpOemId>
#85: FILE: drivers/char/rio/board.h:73:
+	u16 DpOemId;

CHECK:CAMELCASE: Avoid CamelCase: <DpSiggy>
#86: FILE: drivers/char/rio/board.h:74:
+	u16 DpSiggy[16];

CHECK:CAMELCASE: Avoid CamelCase: <Dp_Unused8_>
#96: FILE: drivers/char/rio/board.h:89:
+	u8 Dp_Unused8_[DP_PARMMAP_ADDR];

CHECK:CAMELCASE: Avoid CamelCase: <DpParmMapAd>
#97: FILE: drivers/char/rio/board.h:90:
+	u16 DpParmMapAd;

CHECK:CAMELCASE: Avoid CamelCase: <Dp_Unused9_>
#105: FILE: drivers/char/rio/board.h:94:
+	u8 Dp_Unused9_[DP_STARTUP_ADDR];

CHECK:CAMELCASE: Avoid CamelCase: <Dp_LongJump>
#106: FILE: drivers/char/rio/board.h:95:
+	u8 Dp_LongJump[0x4];

CHECK:CAMELCASE: Avoid CamelCase: <Dp_Unused10_>
#107: FILE: drivers/char/rio/board.h:96:
+	u8 Dp_Unused10_[2];

CHECK:CAMELCASE: Avoid CamelCase: <Dp_ShortJump>
#108: FILE: drivers/char/rio/board.h:97:
+	u8 Dp_ShortJump[0x2];

CHECK:CAMELCASE: Avoid CamelCase: <DpSramMem>
#113: FILE: drivers/char/rio/board.h:101:
+	u8 DpSramMem[DP_SRAM2_SIZE];

CHECK:CAMELCASE: Avoid CamelCase: <DpSram1>
#122: FILE: drivers/char/rio/board.h:110:
+	u8 DpSram1[DP_SRAM1_SIZE];	/* 0000 - 7BFF */

CHECK:CAMELCASE: Avoid CamelCase: <DpScratch>
#127: FILE: drivers/char/rio/board.h:113:
+	u8 DpScratch[DP_SCRATCH_SIZE];	/* 8000 - 8FFF */

CHECK:CAMELCASE: Avoid CamelCase: <DpSram3>
#128: FILE: drivers/char/rio/board.h:114:
+	u8 DpSram3[DP_SRAM3_SIZE];	/* 9000 - FFFF */

CHECK:CAMELCASE: Avoid CamelCase: <NumPackets>
#142: FILE: drivers/char/rio/cmdpkt.h:58:
+	u16 NumPackets;

CHECK:CAMELCASE: Avoid CamelCase: <LoadBase>
#143: FILE: drivers/char/rio/cmdpkt.h:59:
+	u16 LoadBase;

CHECK:CAMELCASE: Avoid CamelCase: <CodeSize>
#144: FILE: drivers/char/rio/cmdpkt.h:60:
+	u16 CodeSize;

CHECK:CAMELCASE: Avoid CamelCase: <Unit>
#152: FILE: drivers/char/rio/cmdpkt.h:66:
+	u8 Unit;

CHECK:CAMELCASE: Avoid CamelCase: <Link>
#153: FILE: drivers/char/rio/cmdpkt.h:67:
+	u8 Link;

CHECK:CAMELCASE: Avoid CamelCase: <PcCommand>
#158: FILE: drivers/char/rio/cmdpkt.h:71:
+	u8 PcCommand;

CHECK:CAMELCASE: Avoid CamelCase: <PcPhbNum>
#163: FILE: drivers/char/rio/cmdpkt.h:73:
+		u8 PcPhbNum;

CHECK:CAMELCASE: Avoid CamelCase: <PcLinkNum>
#164: FILE: drivers/char/rio/cmdpkt.h:74:
+		u8 PcLinkNum;

CHECK:CAMELCASE: Avoid CamelCase: <PcIDNum>
#165: FILE: drivers/char/rio/cmdpkt.h:75:
+		u8 PcIDNum;

CHECK:CAMELCASE: Avoid CamelCase: <PcSequence>
#175: FILE: drivers/char/rio/cmdpkt.h:87:
+			u16 PcSequence;

CHECK:CAMELCASE: Avoid CamelCase: <PcBootData>
#176: FILE: drivers/char/rio/cmdpkt.h:88:
+			u8 PcBootData[RTA_BOOT_DATA_SIZE];

CHECK:CAMELCASE: Avoid CamelCase: <PcUniqNum>
#183: FILE: drivers/char/rio/cmdpkt.h:92:
+			u8 PcUniqNum[4];	/* this is really a uint. */

CHECK:CAMELCASE: Avoid CamelCase: <PcModuleTypes>
#184: FILE: drivers/char/rio/cmdpkt.h:93:
+			u8 PcModuleTypes;	/* what modules are fitted */

CHECK:CAMELCASE: Avoid CamelCase: <PcModemStatus>
#195: FILE: drivers/char/rio/cmdpkt.h:98:
+			u8 PcModemStatus;

CHECK:CAMELCASE: Avoid CamelCase: <PcPortStatus>
#196: FILE: drivers/char/rio/cmdpkt.h:99:
+			u8 PcPortStatus;

CHECK:CAMELCASE: Avoid CamelCase: <PcSubCommand>
#197: FILE: drivers/char/rio/cmdpkt.h:100:
+			u8 PcSubCommand;	/* commands like mem or register dump */

CHECK:CAMELCASE: Avoid CamelCase: <PcSubAddr>
#198: FILE: drivers/char/rio/cmdpkt.h:101:
+			u16 PcSubAddr;	/* Address for command */

CHECK:CAMELCASE: Avoid CamelCase: <PcSubData>
#199: FILE: drivers/char/rio/cmdpkt.h:102:
+			u8 PcSubData[64];	/* Date area for command */

CHECK:CAMELCASE: Avoid CamelCase: <PcCommandText>
#206: FILE: drivers/char/rio/cmdpkt.h:106:
+			u8 PcCommandText[1];

CHECK:CAMELCASE: Avoid CamelCase: <PcIDNum2>
#208: FILE: drivers/char/rio/cmdpkt.h:108:
+			u8 PcIDNum2;	/* It had to go somewhere! */

CHECK:CAMELCASE: Avoid CamelCase: <WaitNoBoot>
#320: FILE: drivers/char/rio/link.h:70:
+	u16 WaitNoBoot;	/* Secs to hold off booting */

CHECK:CAMELCASE: Avoid CamelCase: <PortNum>
#532: FILE: drivers/char/rio/port.h:41:
+	int PortNum;			/* RIO port no., 0-511 */

CHECK:CAMELCASE: Avoid CamelCase: <HostPort>
#558: FILE: drivers/char/rio/port.h:44:
+	unsigned short HostPort;	/* Port number on host card */

CHECK:CAMELCASE: Avoid CamelCase: <RupNum>
#559: FILE: drivers/char/rio/port.h:45:
+	unsigned char RupNum;		/* Number of RUP for port */

CHECK:CAMELCASE: Avoid CamelCase: <State>
#561: FILE: drivers/char/rio/port.h:47:
+	unsigned long State;		/* FLAGS for open & xopen */

CHECK:CAMELCASE: Avoid CamelCase: <Config>
#597: FILE: drivers/char/rio/port.h:74:
+	unsigned long Config;		/* FLAGS for NOREAD.... */

CHECK:CAMELCASE: Avoid CamelCase: <PhbP>
#645: FILE: drivers/char/rio/port.h:95:
+	struct PHB *PhbP;		/* pointer to PHB for port */

CHECK:CAMELCASE: Avoid CamelCase: <TxAdd>
#646: FILE: drivers/char/rio/port.h:96:
+	u16 *TxAdd;			/* Add packets here */

CHECK:CAMELCASE: Avoid CamelCase: <TxStart>
#647: FILE: drivers/char/rio/port.h:97:
+	u16 *TxStart;			/* Start of add array */

CHECK:CAMELCASE: Avoid CamelCase: <TxEnd>
#648: FILE: drivers/char/rio/port.h:98:
+	u16 *TxEnd;			/* End of add array */

CHECK:CAMELCASE: Avoid CamelCase: <RxRemove>
#649: FILE: drivers/char/rio/port.h:99:
+	u16 *RxRemove;			/* Remove packets here */

CHECK:CAMELCASE: Avoid CamelCase: <RxStart>
#650: FILE: drivers/char/rio/port.h:100:
+	u16 *RxStart;			/* Start of remove array */

CHECK:CAMELCASE: Avoid CamelCase: <RxEnd>
#651: FILE: drivers/char/rio/port.h:101:
+	u16 *RxEnd;			/* End of remove array */

CHECK:CAMELCASE: Avoid CamelCase: <RtaUniqueNum>
#652: FILE: drivers/char/rio/port.h:102:
+	unsigned int RtaUniqueNum;	/* Unique number of RTA */

CHECK:CAMELCASE: Avoid CamelCase: <PortState>
#653: FILE: drivers/char/rio/port.h:103:
+	unsigned short PortState;	/* status of port */

CHECK:CAMELCASE: Avoid CamelCase: <ModemState>
#654: FILE: drivers/char/rio/port.h:104:
+	unsigned short ModemState;	/* status of modem lines */

CHECK:CAMELCASE: Avoid CamelCase: <ModemLines>
#655: FILE: drivers/char/rio/port.h:105:
+	unsigned long ModemLines;	/* Modem bits sent to RTA */

CHECK:CAMELCASE: Avoid CamelCase: <CookMode>
#656: FILE: drivers/char/rio/port.h:106:
+	unsigned char CookMode;		/* who expands CR/LF? */

CHECK:CAMELCASE: Avoid CamelCase: <ParamSem>
#657: FILE: drivers/char/rio/port.h:107:
+	unsigned char ParamSem;		/* Prevent write during param */

CHECK:CAMELCASE: Avoid CamelCase: <Mapped>
#658: FILE: drivers/char/rio/port.h:108:
+	unsigned char Mapped;		/* if port mapped onto host */

CHECK:CAMELCASE: Avoid CamelCase: <SecondBlock>
#659: FILE: drivers/char/rio/port.h:109:
+	unsigned char SecondBlock;	/* if port belongs to 2nd block

ERROR:CODE_INDENT: code indent should use tabs where possible
#660: FILE: drivers/char/rio/port.h:110:
+^I^I^I^I   ^I^Iof 16 port RTA */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#660: FILE: drivers/char/rio/port.h:110:
+^I^I^I^I   ^I^Iof 16 port RTA */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#660: FILE: drivers/char/rio/port.h:110:
+	unsigned char SecondBlock;	/* if port belongs to 2nd block
+				   		of 16 port RTA */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#660: FILE: drivers/char/rio/port.h:110:
+				   		of 16 port RTA */

CHECK:CAMELCASE: Avoid CamelCase: <InUse>
#661: FILE: drivers/char/rio/port.h:111:
+	unsigned char InUse;		/* how many pre-emptive cmds */

CHECK:CAMELCASE: Avoid CamelCase: <Lock>
#662: FILE: drivers/char/rio/port.h:112:
+	unsigned char Lock;		/* if params locked */

CHECK:CAMELCASE: Avoid CamelCase: <Store>
#663: FILE: drivers/char/rio/port.h:113:
+	unsigned char Store;		/* if params stored across closes */

CHECK:CAMELCASE: Avoid CamelCase: <FirstOpen>
#664: FILE: drivers/char/rio/port.h:114:
+	unsigned char FirstOpen;	/* TRUE if first time port opened */

CHECK:CAMELCASE: Avoid CamelCase: <FlushCmdBodge>
#665: FILE: drivers/char/rio/port.h:115:
+	unsigned char FlushCmdBodge;	/* if doing a (non)flush */

CHECK:CAMELCASE: Avoid CamelCase: <MagicFlags>
#666: FILE: drivers/char/rio/port.h:116:
+	unsigned char MagicFlags;	/* require intr processing */

CHECK:CAMELCASE: Avoid CamelCase: <WflushFlag>
#670: FILE: drivers/char/rio/port.h:120:
+	unsigned char WflushFlag;	/* 1 How many WFLUSHs active */

CHECK:CAMELCASE: Avoid CamelCase: <XpCps>
#679: FILE: drivers/char/rio/port.h:128:
+		unsigned int XpCps;

CHECK:CAMELCASE: Avoid CamelCase: <XpLen>
#685: FILE: drivers/char/rio/port.h:131:
+		unsigned short XpLen;	/* strlen(XpOn)+strlen(XpOff) */

CHECK:CAMELCASE: Avoid CamelCase: <XpActive>
#686: FILE: drivers/char/rio/port.h:132:
+		unsigned char XpActive;

CHECK:CAMELCASE: Avoid CamelCase: <XpLastTickOk>
#687: FILE: drivers/char/rio/port.h:133:
+		unsigned char XpLastTickOk;	/* TRUE if we can process */

CHECK:CAMELCASE: Avoid CamelCase: <RxDataStart>
#704: FILE: drivers/char/rio/port.h:138:
+	unsigned char RxDataStart;

CHECK:CAMELCASE: Avoid CamelCase: <Cor2Copy>
#705: FILE: drivers/char/rio/port.h:139:
+	unsigned char Cor2Copy;		/* copy of COR2 */

CHECK:CAMELCASE: Avoid CamelCase: <Name>
#706: FILE: drivers/char/rio/port.h:140:
+	char *Name;			/* points to the Rta's name */

CHECK:CAMELCASE: Avoid CamelCase: <TxBufferIn>
#727: FILE: drivers/char/rio/port.h:142:
+	unsigned short TxBufferIn;	/* New data arrives here */

CHECK:CAMELCASE: Avoid CamelCase: <TxBufferOut>
#728: FILE: drivers/char/rio/port.h:143:
+	unsigned short TxBufferOut;	/* Intr removes data here */

CHECK:CAMELCASE: Avoid CamelCase: <OldTxBufferOut>
#729: FILE: drivers/char/rio/port.h:144:
+	unsigned short OldTxBufferOut;	/* Indicates if draining */

CHECK:CAMELCASE: Avoid CamelCase: <TimeoutId>
#730: FILE: drivers/char/rio/port.h:145:
+	int TimeoutId;			/* Timeout ID */

CHECK:CAMELCASE: Avoid CamelCase: <Debug>
#731: FILE: drivers/char/rio/port.h:146:
+	unsigned int Debug;

CHECK:CAMELCASE: Avoid CamelCase: <WaitUntilBooted>
#732: FILE: drivers/char/rio/port.h:147:
+	unsigned char WaitUntilBooted;	/* True if open should block */

CHECK:CAMELCASE: Avoid CamelCase: <statsGather>
#733: FILE: drivers/char/rio/port.h:148:
+	unsigned int statsGather;	/* True if gathering stats */

CHECK:CAMELCASE: Avoid CamelCase: <LastRxTgl>
#739: FILE: drivers/char/rio/port.h:154:
+	unsigned char LastRxTgl;	/* Last state of rx toggle bit */

CHECK:CAMELCASE: Avoid CamelCase: <portSem>
#740: FILE: drivers/char/rio/port.h:155:
+	spinlock_t portSem;		/* Lock using this sem */

CHECK:CAMELCASE: Avoid CamelCase: <MonitorTstate>
#741: FILE: drivers/char/rio/port.h:156:
+	int MonitorTstate;		/* Monitoring ? */

CHECK:CAMELCASE: Avoid CamelCase: <firstOpen>
#744: FILE: drivers/char/rio/port.h:159:
+	int firstOpen;			/* First time open ? */

WARNING:TYPO_SPELLING: 'struc' may be misspelled - perhaps 'struct'?
#745: FILE: drivers/char/rio/port.h:160:
+	char *p;			/* save the global struc here .. */
 	        			                   ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <Flags>
#751: FILE: drivers/char/rio/port.h:165:
+	unsigned int Flags[4];		/* one per port on a module */

CHECK:CAMELCASE: Avoid CamelCase: <Port>
#763: FILE: drivers/char/rio/port.h:173:
+	unsigned int Port;

CHECK:CAMELCASE: Avoid CamelCase: <Channel_ptr>
#851: FILE: drivers/char/rio/riotypes.h:47:
+typedef u16 Channel_ptr;

CHECK:CAMELCASE: Avoid CamelCase: <Process_ptr>
#855: FILE: drivers/char/rio/riotypes.h:51:
+typedef u16 Process_ptr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#931: FILE: drivers/char/rio/typdef.h:42:
+typedef volatile u8 BYTE;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#932: FILE: drivers/char/rio/typdef.h:43:
+typedef volatile u16 WORD;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#933: FILE: drivers/char/rio/typdef.h:44:
+typedef volatile u32 DWORD;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#934: FILE: drivers/char/rio/typdef.h:45:
+typedef volatile u16 RIOP;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000104332.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 8 warnings, 97 checks, 857 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000104332.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
