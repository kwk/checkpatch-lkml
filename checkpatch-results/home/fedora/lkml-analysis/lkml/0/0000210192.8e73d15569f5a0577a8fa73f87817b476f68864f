WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
Attached patch incorporates real-time preempt support for MIPS. This patch applies over 

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#160: FILE: arch/mips/lib/dec_and_lock.c:54:
+EXPORT_SYMBOL(_atomic_dec_and_raw_spin_lock);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#183: FILE: arch/mips/kernel/smp.c:138:
+	for (i = 0; i < NR_CPUS; i++)

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#378: FILE: include/asm-mips/spinlock.h:12:
+#include <asm/atomic.h>

CHECK:SPACING: No space is necessary after a cast
#405: FILE: include/asm-mips/spinlock.h:24:
+#define RAW_SPIN_LOCK_UNLOCKED (raw_spinlock_t) __RAW_SPIN_LOCK_UNLOCKED

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#405: FILE: include/asm-mips/spinlock.h:24:
+#define RAW_SPIN_LOCK_UNLOCKED (raw_spinlock_t) __RAW_SPIN_LOCK_UNLOCKED

ERROR:SPACING: space required before the open parenthesis '('
#406: FILE: include/asm-mips/spinlock.h:25:
+#define __raw_spin_lock_init(x)        do { *(x) = RAW_SPIN_LOCK_UNLOCKED; } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#406: FILE: include/asm-mips/spinlock.h:25:
+#define __raw_spin_lock_init(x)        do { *(x) = RAW_SPIN_LOCK_UNLOCKED; } while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

CHECK:SPACING: No space is necessary after a cast
#464: FILE: include/asm-mips/spinlock.h:122:
+#define RAW_RW_LOCK_UNLOCKED (raw_rwlock_t) __RAW_RW_LOCK_UNLOCKED

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#464: FILE: include/asm-mips/spinlock.h:122:
+#define RAW_RW_LOCK_UNLOCKED (raw_rwlock_t) __RAW_RW_LOCK_UNLOCKED

ERROR:SPACING: space required before the open parenthesis '('
#467: FILE: include/asm-mips/spinlock.h:124:
+#define __raw_rwlock_init(x) do { *(x) = RAW_RW_LOCK_UNLOCKED; } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#467: FILE: include/asm-mips/spinlock.h:124:
+#define __raw_rwlock_init(x) do { *(x) = RAW_RW_LOCK_UNLOCKED; } while(0)

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#555: FILE: include/asm-mips/semaphore.h:36:
+#include <asm/atomic.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#602: FILE: include/asm-mips/atomic.h:86:
+^I} $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#604: FILE: include/asm-mips/atomic.h:88:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#620: FILE: include/asm-mips/atomic.h:127:
+^I} $

CHECK:BRACES: Unbalanced braces around else statement
#622: FILE: include/asm-mips/atomic.h:129:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#638: FILE: include/asm-mips/atomic.h:172:
+^I} $

CHECK:BRACES: Unbalanced braces around else statement
#640: FILE: include/asm-mips/atomic.h:174:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#657: FILE: include/asm-mips/atomic.h:218:
+^I} $

CHECK:BRACES: Unbalanced braces around else statement
#659: FILE: include/asm-mips/atomic.h:220:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#676: FILE: include/asm-mips/atomic.h:273:
+^I} $

CHECK:BRACES: Unbalanced braces around else statement
#678: FILE: include/asm-mips/atomic.h:275:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#695: FILE: include/asm-mips/atomic.h:406:
+^I} $

CHECK:BRACES: Unbalanced braces around else statement
#697: FILE: include/asm-mips/atomic.h:408:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#713: FILE: include/asm-mips/atomic.h:447:
+^I} $

CHECK:BRACES: Unbalanced braces around else statement
#715: FILE: include/asm-mips/atomic.h:449:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#731: FILE: include/asm-mips/atomic.h:492:
+^I} $

CHECK:BRACES: Unbalanced braces around else statement
#733: FILE: include/asm-mips/atomic.h:494:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#750: FILE: include/asm-mips/atomic.h:538:
+^I} $

CHECK:BRACES: Unbalanced braces around else statement
#752: FILE: include/asm-mips/atomic.h:540:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#769: FILE: include/asm-mips/atomic.h:593:
+^I} $

CHECK:BRACES: Unbalanced braces around else statement
#771: FILE: include/asm-mips/atomic.h:595:
+	else {

WARNING:TYPO_SPELLING: 'accouting' may be misspelled - perhaps 'accounting'?
#931: FILE: arch/mips/sibyte/sb1250/time.c:117:
+		 * every CPU should do profiling and process accouting
 		                                             ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210192.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 8 warnings, 12 checks, 770 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210192.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
