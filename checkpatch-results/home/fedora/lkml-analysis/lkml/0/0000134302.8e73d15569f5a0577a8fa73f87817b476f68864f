WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#56: 
>>    Of course, before these code, we hold our rq->lock first, so we should

WARNING:TYPO_SPELLING: 'beacause' may be misspelled - perhaps 'because'?
#81: 
beacause remove task from prio_array twice.
^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#105: FILE: kernel/sched.c:58:
+int keep_switch = 3*HZ; /* sysctl var */
                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#107: FILE: kernel/sched.c:60:
+#define PF_NONREGU      (PF_EXITING|PF_DEAD|PF_DUMPCORE)
                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#107: FILE: kernel/sched.c:60:
+#define PF_NONREGU      (PF_EXITING|PF_DEAD|PF_DUMPCORE)
                                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#110: FILE: kernel/sched.c:63:
+#define KEEP_LOAD_STD (KEEP_TEST_PERIOD*KEEP_LOAD_CFG/100)
                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#110: FILE: kernel/sched.c:63:
+#define KEEP_LOAD_STD (KEEP_TEST_PERIOD*KEEP_LOAD_CFG/100)
                                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#111: FILE: kernel/sched.c:64:
+#define KEEP_LOAD_DELTA  (KEEP_TEST_PERIOD*5/100)
                                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#111: FILE: kernel/sched.c:64:
+#define KEEP_LOAD_DELTA  (KEEP_TEST_PERIOD*5/100)
                                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#113: FILE: kernel/sched.c:66:
+#define KEEP_LOAD_BTM  (KEEP_LOAD_STD-KEEP_LOAD_DELTA)
                                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: kernel/sched.c:275:
+  int keep_tick;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: kernel/sched.c:276:
+  int keep_over;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: kernel/sched.c:277:
+  spinlock_t keep_lock;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#126: FILE: kernel/sched.c:277:
+  spinlock_t keep_lock;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: kernel/sched.c:278:
+  struct list_head keep;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: kernel/sched.c:617:
+    if (p->flags & PF_KEEPOVER)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: kernel/sched.c:618:
+        return;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: kernel/sched.c:618:
+        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: kernel/sched.c:629:
+    if (p->flags & PF_KEEPOVER)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: kernel/sched.c:630:
+        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: kernel/sched.c:630:
+        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: kernel/sched.c:646:
+    if (p->flags & PF_KEEPOVER)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: kernel/sched.c:647:
+        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: kernel/sched.c:647:
+        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: kernel/sched.c:2514:
+    if (rq->keep_tick > KEEP_LOAD_TOP)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: kernel/sched.c:2515:
+        rq->keep_over = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: kernel/sched.c:2515:
+        rq->keep_over = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: kernel/sched.c:2516:
+    else if (rq->keep_over && rq->keep_tick<KEEP_LOAD_BTM)$

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#175: FILE: kernel/sched.c:2516:
+    else if (rq->keep_over && rq->keep_tick<KEEP_LOAD_BTM)
                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: kernel/sched.c:2517:
+        rq->keep_over = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: kernel/sched.c:2517:
+        rq->keep_over = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: kernel/sched.c:2518:
+    keep_tick = rq->keep_tick; /* sysctl var for debug, but only work $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: kernel/sched.c:2518:
+    keep_tick = rq->keep_tick; /* sysctl var for debug, but only work $

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#178: FILE: kernel/sched.c:2518:
on UP */

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#179: FILE: kernel/sched.c:2519:
+    keep_tick = rq->keep_tick; /* sysctl var for debug, but only work 
+    keep_over = rq->keep_over; /* like above */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: kernel/sched.c:2520:
+    return rq->keep_over;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: kernel/sched.c:2526:
+    unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: kernel/sched.c:2528:
+    spin_lock_irqsave(&rq->keep_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: kernel/sched.c:2529:
+    if (p->flags & (PF_KEEPOVER|PF_NONREGU)) {$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#189: FILE: kernel/sched.c:2529:
+    if (p->flags & (PF_KEEPOVER|PF_NONREGU)) {
                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: kernel/sched.c:2530:
+        spin_unlock_irqrestore(&rq->keep_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: kernel/sched.c:2530:
+        spin_unlock_irqrestore(&rq->keep_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: kernel/sched.c:2531:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: kernel/sched.c:2531:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: kernel/sched.c:2532:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: kernel/sched.c:2533:
+    if (p->array)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: kernel/sched.c:2534:
+        deactivate_task(p, rq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: kernel/sched.c:2534:
+        deactivate_task(p, rq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: kernel/sched.c:2535:
+    list_add(&p->run_list, &rq->keep);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: kernel/sched.c:2536:
+    p->flags |= PF_KEEPOVER;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: kernel/sched.c:2537:
+    spin_unlock_irqrestore(&rq->keep_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: kernel/sched.c:2538:
+    return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: kernel/sched.c:2544:
+    struct task_struct *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: kernel/sched.c:2545:
+    unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: kernel/sched.c:2547:
+    spin_lock_irqsave(&rq->keep_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: kernel/sched.c:2548:
+    while (!list_empty(&rq->keep)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: kernel/sched.c:2549:
+        p = list_entry(rq->keep.next, struct task_struct, run_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: kernel/sched.c:2549:
+        p = list_entry(rq->keep.next, struct task_struct, run_list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: kernel/sched.c:2550:
+        if (p->flags & PF_KEEPOVER) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: kernel/sched.c:2550:
+        if (p->flags & PF_KEEPOVER) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#210: FILE: kernel/sched.c:2550:
+        if (p->flags & PF_KEEPOVER) {
+            list_del(&p->run_list);

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: kernel/sched.c:2551:
+            list_del(&p->run_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: kernel/sched.c:2551:
+            list_del(&p->run_list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: kernel/sched.c:2552:
+            p->state = TASK_RUNNING;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: kernel/sched.c:2552:
+            p->state = TASK_RUNNING;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: kernel/sched.c:2553:
+            p->flags &= (~PF_KEEPOVER);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: kernel/sched.c:2553:
+            p->flags &= (~PF_KEEPOVER);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: kernel/sched.c:2554:
+             __activate_task(p, rq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: kernel/sched.c:2554:
+             __activate_task(p, rq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: kernel/sched.c:2555:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: kernel/sched.c:2555:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: kernel/sched.c:2556:
+                show_stack(p, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: kernel/sched.c:2556:
+                show_stack(p, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: kernel/sched.c:2557:
+              panic(KERN_ALERT"dq normal-task%d. ", p->pid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: kernel/sched.c:2557:
+              panic(KERN_ALERT"dq normal-task%d. ", p->pid);$

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#217: FILE: kernel/sched.c:2557:
+              panic(KERN_ALERT"dq normal-task%d. ", p->pid);

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_ALERT
#217: FILE: kernel/sched.c:2557:
+              panic(KERN_ALERT"dq normal-task%d. ", p->pid);

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: kernel/sched.c:2558:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: kernel/sched.c:2558:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#219: FILE: kernel/sched.c:2559:
+    }       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: kernel/sched.c:2559:
+    }       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: kernel/sched.c:2560:
+    spin_unlock_irqrestore(&rq->keep_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: kernel/sched.c:2584:
+    if (in_interrupt()) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: kernel/sched.c:2585:
+        if (keep_task(p)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: kernel/sched.c:2585:
+        if (keep_task(p)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#234: FILE: kernel/sched.c:2585:
+        if (keep_task(p)) {
+            if ( ++rq->keep_tick>KEEP_TEST_PERIOD )

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: kernel/sched.c:2586:
+            if ( ++rq->keep_tick>KEEP_TEST_PERIOD )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: kernel/sched.c:2586:
+            if ( ++rq->keep_tick>KEEP_TEST_PERIOD )$

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#235: FILE: kernel/sched.c:2586:
+            if ( ++rq->keep_tick>KEEP_TEST_PERIOD )
                                 ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#235: FILE: kernel/sched.c:2586:
+            if ( ++rq->keep_tick>KEEP_TEST_PERIOD )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#235: FILE: kernel/sched.c:2586:
+            if ( ++rq->keep_tick>KEEP_TEST_PERIOD )

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: kernel/sched.c:2587:
+                rq->keep_tick = KEEP_TEST_PERIOD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: kernel/sched.c:2587:
+                rq->keep_tick = KEEP_TEST_PERIOD;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: kernel/sched.c:2588:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: kernel/sched.c:2588:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: kernel/sched.c:2589:
+        else if (!--rq->keep_tick) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: kernel/sched.c:2589:
+        else if (!--rq->keep_tick) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#238: FILE: kernel/sched.c:2589:
+        else if (!--rq->keep_tick) {
+            rq->keep_tick = 1;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#238: FILE: kernel/sched.c:2589:
+        }
+        else if (!--rq->keep_tick) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: kernel/sched.c:2590:
+            rq->keep_tick = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: kernel/sched.c:2590:
+            rq->keep_tick = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: kernel/sched.c:2591:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: kernel/sched.c:2591:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: kernel/sched.c:2592:
+        spin_lock(&rq->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: kernel/sched.c:2592:
+        spin_lock(&rq->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: kernel/sched.c:2593:
+        if ( !keep_check_overload(rq) )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: kernel/sched.c:2593:
+        if ( !keep_check_overload(rq) )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#242: FILE: kernel/sched.c:2593:
+        if ( !keep_check_overload(rq) )
+            clear_keep(rq);

ERROR:SPACING: space prohibited after that open parenthesis '('
#242: FILE: kernel/sched.c:2593:
+        if ( !keep_check_overload(rq) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#242: FILE: kernel/sched.c:2593:
+        if ( !keep_check_overload(rq) )

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: kernel/sched.c:2594:
+            clear_keep(rq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: kernel/sched.c:2594:
+            clear_keep(rq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: kernel/sched.c:2595:
+        spin_unlock(&rq->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: kernel/sched.c:2595:
+        spin_unlock(&rq->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: kernel/sched.c:2596:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: kernel/sched.c:2636:
+    if (keep_check_overload(rq)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: kernel/sched.c:2637:
+        if (keep_task(p) && enqueue_keep(p, rq)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: kernel/sched.c:2637:
+        if (keep_task(p) && enqueue_keep(p, rq)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#258: FILE: kernel/sched.c:2637:
+        if (keep_task(p) && enqueue_keep(p, rq)) {
+            set_tsk_need_resched(p);

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: kernel/sched.c:2638:
+            set_tsk_need_resched(p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: kernel/sched.c:2638:
+            set_tsk_need_resched(p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: kernel/sched.c:2639:
+            p->prio = effective_prio(p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: kernel/sched.c:2639:
+            p->prio = effective_prio(p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: kernel/sched.c:2640:
+            p->time_slice = task_timeslice(p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: kernel/sched.c:2640:
+            p->time_slice = task_timeslice(p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: kernel/sched.c:2641:
+            p->first_time_slice = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: kernel/sched.c:2641:
+            p->first_time_slice = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: kernel/sched.c:2642:
+            goto out_unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: kernel/sched.c:2642:
+            goto out_unlock;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#264: FILE: kernel/sched.c:2643:
+        }   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: kernel/sched.c:2643:
+        }   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: kernel/sched.c:2643:
+        }   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: kernel/sched.c:2644:
+    }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: kernel/sched.c:2979:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: kernel/sched.c:2979:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: kernel/sched.c:3611:
+    switch (policy) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: kernel/sched.c:3612:
+    case SCHED_RR:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: kernel/sched.c:3613:
+    case SCHED_FIFO:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: kernel/sched.c:3614:
+      p->prio = MAX_RT_PRIO-1 - p->rt_priority;$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#295: FILE: kernel/sched.c:3614:
+      p->prio = MAX_RT_PRIO-1 - p->rt_priority;
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: kernel/sched.c:3615:
+      break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: kernel/sched.c:3617:
+      p->prio = p->static_prio;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: kernel/sched.c:3618:
+    };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: kernel/sched.c:3642:
+     else if (policy != SCHED_FIFO && policy != SCHED_RR &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 13)
#312: FILE: kernel/sched.c:3642:
+     else if (policy != SCHED_FIFO && policy != SCHED_RR &&
[...]
+             return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: kernel/sched.c:3643:
+         policy != SCHED_NORMAL && policy != SCHED_KEEP)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: kernel/sched.c:3643:
+     else if (policy != SCHED_FIFO && policy != SCHED_RR &&
+         policy != SCHED_NORMAL && policy != SCHED_KEEP)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: kernel/sched.c:3643:
+         policy != SCHED_NORMAL && policy != SCHED_KEEP)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: kernel/sched.c:3644:
+             return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: kernel/sched.c:3644:
+             return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: kernel/sched.c:3658:
+    if ((policy == SCHED_NORMAL) != (param->sched_priority == 0)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#328: FILE: kernel/sched.c:3658:
+    if ((policy == SCHED_NORMAL) != (param->sched_priority == 0)) {
+      if ((policy == SCHED_KEEP) != (param->sched_priority == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'policy == SCHED_NORMAL'
#328: FILE: kernel/sched.c:3658:
+    if ((policy == SCHED_NORMAL) != (param->sched_priority == 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'param->sched_priority == 0'
#328: FILE: kernel/sched.c:3658:
+    if ((policy == SCHED_NORMAL) != (param->sched_priority == 0)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: kernel/sched.c:3659:
+      if ((policy == SCHED_KEEP) != (param->sched_priority == 0))$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'policy == SCHED_KEEP'
#329: FILE: kernel/sched.c:3659:
+      if ((policy == SCHED_KEEP) != (param->sched_priority == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'param->sched_priority == 0'
#329: FILE: kernel/sched.c:3659:
+      if ((policy == SCHED_KEEP) != (param->sched_priority == 0))

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: kernel/sched.c:3660:
+        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: kernel/sched.c:3660:
+        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: kernel/sched.c:3661:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: kernel/sched.c:3662:
+    if (policy==SCHED_KEEP && !p->mm)$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#332: FILE: kernel/sched.c:3662:
+    if (policy==SCHED_KEEP && !p->mm)
               ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#341: FILE: kernel/sched.c:3670:
         if (policy != p->policy &&
[...]
+          /* liyu@ccoss.com.cn */

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: kernel/sched.c:3671:
+            !p->signal->rlim[RLIMIT_RTPRIO].rlim_cur)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: kernel/sched.c:3671:
+            !p->signal->rlim[RLIMIT_RTPRIO].rlim_cur)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: kernel/sched.c:3672:
+          /* liyu@ccoss.com.cn */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: kernel/sched.c:3673:
+          //return -EPERM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: kernel/sched.c:3674:
+          {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: kernel/sched.c:3674:
+          {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: kernel/sched.c:3675:
+            if (policy != SCHED_KEEP)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: kernel/sched.c:3675:
+            if (policy != SCHED_KEEP)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 14)
#348: FILE: kernel/sched.c:3675:
+            if (policy != SCHED_KEEP)
+              return -EPERM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: kernel/sched.c:3676:
+              return -EPERM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: kernel/sched.c:3676:
+              return -EPERM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: kernel/sched.c:3677:
+          }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: kernel/sched.c:3677:
+          }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: kernel/sched.c:3678:
+        /* endm */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: kernel/sched.c:5331:
+        /* liyu@ccoss.com.cn */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: kernel/sched.c:5332:
+        rq->keep_lock = SPIN_LOCK_UNLOCKED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: kernel/sched.c:5332:
+        rq->keep_lock = SPIN_LOCK_UNLOCKED;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: kernel/sched.c:5333:
+        INIT_LIST_HEAD(&rq->keep);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: kernel/sched.c:5333:
+        INIT_LIST_HEAD(&rq->keep);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: kernel/sched.c:5334:
+        rq->keep_tick = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: kernel/sched.c:5334:
+        rq->keep_tick = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#364: FILE: kernel/sched.c:5335:
+        rq->keep_over = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: kernel/sched.c:5335:
+        rq->keep_over = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: kernel/sched.c:5336:
+        /* enda */   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: kernel/sched.c:5336:
+        /* enda */   $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134302.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 67 errors, 104 warnings, 17 checks, 259 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134302.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
