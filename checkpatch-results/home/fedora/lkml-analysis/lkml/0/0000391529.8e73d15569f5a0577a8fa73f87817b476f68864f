ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#44: 
--- a/arch/i386/kernel/cpuid.c	Fri Feb 21 17:16:00 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#50: FILE: arch/i386/kernel/cpuid.c:67:
+  preempt_disable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: arch/i386/kernel/cpuid.c:77:
+  preempt_enable();$

ERROR:SPACING: spaces required around that '==' (ctx:VxO)
#71: FILE: arch/i386/kernel/microcode.c:186:
+	if (on_each_cpu(do_update_one, NULL)==-1)
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '-' (ctx:OxV)
#71: FILE: arch/i386/kernel/microcode.c:186:
+	if (on_each_cpu(do_update_one, NULL)==-1)
 	                                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: arch/i386/kernel/msr.c:118:
+  int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: arch/i386/kernel/msr.c:120:
+  preempt_disable();$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#88: FILE: arch/i386/kernel/msr.c:121:
   if ( cpu == smp_processor_id() ) {
+    ret = wrmsr_eio(reg, eax, edx);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: arch/i386/kernel/msr.c:122:
+    ret = wrmsr_eio(reg, eax, edx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: arch/i386/kernel/msr.c:123:
+    preempt_enable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: arch/i386/kernel/msr.c:124:
+    return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: arch/i386/kernel/msr.c:132:
+    preempt_enable();$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#131: FILE: arch/i386/kernel/smp.c:570:
+		printk (KERN_ERR "%p: IPI timeout, giving up\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#131: FILE: arch/i386/kernel/smp.c:570:
+		printk (KERN_ERR "%p: IPI timeout, giving up\n",

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/smp.h> instead of <asm/smp.h>
#156: FILE: arch/i386/kernel/sysenter.c:20:
+#include <asm/smp.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#166: FILE: arch/i386/kernel/sysenter.c:101:
+	on_each_cpu (enable_sep_cpu, NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#196: FILE: arch/x86_64/mm/pageattr.c:126:
+	on_each_cpu(flush_kernel_map,(void *)address);
 	                            ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#240: FILE: include/asm-i386/agp.h:23:
+	__asm__ __volatile__ ("wbinvd": : :"memory");
 	                              ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#240: FILE: include/asm-i386/agp.h:23:
+	__asm__ __volatile__ ("wbinvd": : :"memory");
 	                                  ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#250: FILE: include/asm-i386/smp.h:49:
+extern int on_each_cpu(void (*func) (void *info), void *info);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#266: FILE: include/asm-x86_64/agp.h:23:
+	__asm__ __volatile__ ("wbinvd": : :"memory");
 	                              ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#266: FILE: include/asm-x86_64/agp.h:23:
+	__asm__ __volatile__ ("wbinvd": : :"memory");
 	                                  ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#276: FILE: include/asm-x86_64/smp.h:49:
+extern int on_each_cpu(void (*func) (void *info), void *info);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000391529.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 12 warnings, 3 checks, 187 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000391529.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
