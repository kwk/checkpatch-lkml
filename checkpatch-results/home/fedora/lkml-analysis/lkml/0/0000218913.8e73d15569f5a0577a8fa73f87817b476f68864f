WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: drivers/acpi/glue.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#72: FILE: drivers/acpi/glue.c:11:
+ACPI_MODULE_NAME                ("acpi_glue")

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: drivers/acpi/glue.c:92:
+	status = acpi_evaluate_integer(handle, METHOD_NAME__SEG, NULL,
+		&seg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: drivers/acpi/glue.c:102:
+	status = acpi_evaluate_integer(handle, METHOD_NAME__BBN, NULL,
+		&bus);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: drivers/acpi/glue.c:122:
+	acpi_get_devices(PCI_ROOT_HID_STRING,
+		find_pci_rootbridge,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#201: FILE: drivers/acpi/glue.c:140:
+	struct acpi_find_child *find = (struct acpi_find_child*)context;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: drivers/acpi/glue.c:160:
+	acpi_walk_namespace(ACPI_TYPE_DEVICE, parent,
+		1, find_child,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: drivers/acpi/glue.c:193:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+		    "Drivers changed 'platform_data' for %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: drivers/acpi/glue.c:223:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+		  "Oops, data corrupt for %s\n", dev->bus_id));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#289: FILE: drivers/acpi/glue.c:228:
+static int acpi_platform_notify (struct device *dev)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#308: FILE: drivers/acpi/glue.c:247:
+	if ((ret = type->find_device(dev, &handle)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#314: FILE: drivers/acpi/glue.c:253:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: drivers/acpi/glue.c:259:
+		ACPI_DEBUG_PRINT((ACPI_DB_INFO, "Device %s -> %s\n",
+			dev->bus_id, (char *)buffer.pointer));

CHECK:BRACES: Unbalanced braces around else statement
#322: FILE: drivers/acpi/glue.c:261:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#324: FILE: drivers/acpi/glue.c:263:
+		ACPI_DEBUG_PRINT((ACPI_DB_INFO, "Device %s -> No ACPI support\n",
+			dev->bus_id));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#364: FILE: include/acpi/acpi_bus.h:340:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#373: FILE: include/acpi/acpi_bus.h:349:
+	int (*find_device)(struct device *, acpi_handle*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_handle*' should also have an identifier name
#373: FILE: include/acpi/acpi_bus.h:349:
+	int (*find_device)(struct device *, acpi_handle*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#375: FILE: include/acpi/acpi_bus.h:351:
+	int (*find_bridge)(struct device *, acpi_handle *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_handle *' should also have an identifier name
#375: FILE: include/acpi/acpi_bus.h:351:
+	int (*find_bridge)(struct device *, acpi_handle *);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#377: FILE: include/acpi/acpi_bus.h:353:
+};
+int register_acpi_bus_type(struct acpi_bus_type *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct acpi_bus_type *' should also have an identifier name
#377: FILE: include/acpi/acpi_bus.h:353:
+int register_acpi_bus_type(struct acpi_bus_type *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct acpi_bus_type *' should also have an identifier name
#378: FILE: include/acpi/acpi_bus.h:354:
+int unregister_acpi_bus_type(struct acpi_bus_type *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_handle' should also have an identifier name
#379: FILE: include/acpi/acpi_bus.h:355:
+struct device *acpi_get_physical_device(acpi_handle);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_handle' should also have an identifier name
#381: FILE: include/acpi/acpi_bus.h:357:
+acpi_handle acpi_get_child(acpi_handle, acpi_integer);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_integer' should also have an identifier name
#381: FILE: include/acpi/acpi_bus.h:357:
+acpi_handle acpi_get_child(acpi_handle, acpi_integer);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#382: FILE: include/acpi/acpi_bus.h:358:
+acpi_handle acpi_get_pci_rootbridge_handle(unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#382: FILE: include/acpi/acpi_bus.h:358:
+acpi_handle acpi_get_pci_rootbridge_handle(unsigned int, unsigned int);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#418: FILE: drivers/acpi/glue.c:1:
+/*

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#428: FILE: drivers/acpi/glue.c:11:
+ACPI_MODULE_NAME                ("acpi_glue")

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: drivers/acpi/glue.c:92:
+	status = acpi_evaluate_integer(handle, METHOD_NAME__SEG, NULL,
+		&seg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: drivers/acpi/glue.c:102:
+	status = acpi_evaluate_integer(handle, METHOD_NAME__BBN, NULL,
+		&bus);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#539: FILE: drivers/acpi/glue.c:122:
+	acpi_get_devices(PCI_ROOT_HID_STRING,
+		find_pci_rootbridge,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#557: FILE: drivers/acpi/glue.c:140:
+	struct acpi_find_child *find = (struct acpi_find_child*)context;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#577: FILE: drivers/acpi/glue.c:160:
+	acpi_walk_namespace(ACPI_TYPE_DEVICE, parent,
+		1, find_child,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#610: FILE: drivers/acpi/glue.c:193:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+		    "Drivers changed 'platform_data' for %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#640: FILE: drivers/acpi/glue.c:223:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+		  "Oops, data corrupt for %s\n", dev->bus_id));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#645: FILE: drivers/acpi/glue.c:228:
+static int acpi_platform_notify (struct device *dev)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#664: FILE: drivers/acpi/glue.c:247:
+	if ((ret = type->find_device(dev, &handle)))

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#670: FILE: drivers/acpi/glue.c:253:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#676: FILE: drivers/acpi/glue.c:259:
+		ACPI_DEBUG_PRINT((ACPI_DB_INFO, "Device %s -> %s\n",
+			dev->bus_id, (char *)buffer.pointer));

CHECK:BRACES: Unbalanced braces around else statement
#678: FILE: drivers/acpi/glue.c:261:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#680: FILE: drivers/acpi/glue.c:263:
+		ACPI_DEBUG_PRINT((ACPI_DB_INFO, "Device %s -> No ACPI support\n",
+			dev->bus_id));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#720: FILE: include/acpi/acpi_bus.h:340:
 
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#729: FILE: include/acpi/acpi_bus.h:349:
+	int (*find_device)(struct device *, acpi_handle*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_handle*' should also have an identifier name
#729: FILE: include/acpi/acpi_bus.h:349:
+	int (*find_device)(struct device *, acpi_handle*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#731: FILE: include/acpi/acpi_bus.h:351:
+	int (*find_bridge)(struct device *, acpi_handle *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_handle *' should also have an identifier name
#731: FILE: include/acpi/acpi_bus.h:351:
+	int (*find_bridge)(struct device *, acpi_handle *);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#733: FILE: include/acpi/acpi_bus.h:353:
+};
+int register_acpi_bus_type(struct acpi_bus_type *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct acpi_bus_type *' should also have an identifier name
#733: FILE: include/acpi/acpi_bus.h:353:
+int register_acpi_bus_type(struct acpi_bus_type *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct acpi_bus_type *' should also have an identifier name
#734: FILE: include/acpi/acpi_bus.h:354:
+int unregister_acpi_bus_type(struct acpi_bus_type *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_handle' should also have an identifier name
#735: FILE: include/acpi/acpi_bus.h:355:
+struct device *acpi_get_physical_device(acpi_handle);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_handle' should also have an identifier name
#737: FILE: include/acpi/acpi_bus.h:357:
+acpi_handle acpi_get_child(acpi_handle, acpi_integer);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_integer' should also have an identifier name
#737: FILE: include/acpi/acpi_bus.h:357:
+acpi_handle acpi_get_child(acpi_handle, acpi_integer);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#738: FILE: include/acpi/acpi_bus.h:358:
+acpi_handle acpi_get_pci_rootbridge_handle(unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#738: FILE: include/acpi/acpi_bus.h:358:
+acpi_handle acpi_get_pci_rootbridge_handle(unsigned int, unsigned int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000218913.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 30 warnings, 22 checks, 636 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000218913.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
