WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
 drivers/pci/pci-sysfs.c |  105 ++++++++++++++++++++++++++++++++++++++++++++++++

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#38: 
--- a/drivers/pci/pci-sysfs.c	Thu Jul  3 18:16:32 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#56: FILE: drivers/pci/pci-sysfs.c:68:
+	struct pci_dev *dev = to_pci_dev(container_of(kobj,struct device,kobj));
 	                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#56: FILE: drivers/pci/pci-sysfs.c:68:
+	struct pci_dev *dev = to_pci_dev(container_of(kobj,struct device,kobj));
 	                                                                ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#60: FILE: drivers/pci/pci-sysfs.c:72:
+	if (capable(CAP_SYS_ADMIN)) {
[...]
+	} else if (dev->hdr_type == PCI_HEADER_TYPE_CARDBUS) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#77: FILE: drivers/pci/pci-sysfs.c:89:
+		unsigned char val;
+		pci_read_config_byte(dev, off, &val);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#86: FILE: drivers/pci/pci-sysfs.c:98:
+		unsigned int val;
+		pci_read_config_dword(dev, off, &val);

WARNING:LINE_SPACING: Missing a blank line after declarations
#97: FILE: drivers/pci/pci-sysfs.c:109:
+		unsigned char val;
+		pci_read_config_byte(dev, off, &val);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#109: FILE: drivers/pci/pci-sysfs.c:121:
+	struct pci_dev *dev = to_pci_dev(container_of(kobj,struct device,kobj));
 	                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#109: FILE: drivers/pci/pci-sysfs.c:121:
+	struct pci_dev *dev = to_pci_dev(container_of(kobj,struct device,kobj));
 	                                                                ^

CHECK:SPACING: No space is necessary after a cast
#128: FILE: drivers/pci/pci-sysfs.c:140:
+		val |= (unsigned int) buf[off + 1] << 8;

WARNING:LINE_SPACING: Missing a blank line after declarations
#128: FILE: drivers/pci/pci-sysfs.c:140:
+		unsigned int val = buf[off];
+		val |= (unsigned int) buf[off + 1] << 8;

CHECK:SPACING: No space is necessary after a cast
#129: FILE: drivers/pci/pci-sysfs.c:141:
+		val |= (unsigned int) buf[off + 2] << 16;

CHECK:SPACING: No space is necessary after a cast
#130: FILE: drivers/pci/pci-sysfs.c:142:
+		val |= (unsigned int) buf[off + 3] << 24;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#148: FILE: drivers/pci/pci-sysfs.c:160:
+		.mode = S_IRUGO | S_IWUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#181: FILE: fs/sysfs/bin.c:51:
+	printk("offs = %lld, *off = %lld, count = %zd\n", offs, *off, count);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000357697.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 8 warnings, 3 checks, 171 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000357697.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
