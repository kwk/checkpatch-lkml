WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
--- linux-2.5.60-mm1/arch/i386/kernel/cpu/proc.c	2003-02-10 12:38:52.000000=

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#55: FILE: arch/i386/kernel/cpu/proc.c:107:
+	extern long __rq_idx[NR_CPUS];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#60: FILE: arch/i386/kernel/cpu/proc.c:111:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#83: FILE: arch/i386/kernel/smpboot.c:947:
+	test_ht =3D 1;
 	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#87: FILE: arch/i386/kernel/smpboot.c:951:
+__setup("test_ht", ht_setup);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#113: FILE: arch/i386/kernel/smpboot.c:1101:
+printk("cpu_has_ht: %d, smp_num_siblings: %d, num_online_cpus(): %d.\n", c=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#113: FILE: arch/i386/kernel/smpboot.c:1101:
+printk("cpu_has_ht: %d, smp_num_siblings: %d, num_online_cpus(): %d.\n", c=
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#143: FILE: arch/i386/kernel/smpboot.c:1133:
+		for (cpu =3D 0; cpu < NR_CPUS; cpu++) {
 		         ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#143: FILE: arch/i386/kernel/smpboot.c:1133:
+		for (cpu =3D 0; cpu < NR_CPUS; cpu++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#145: FILE: arch/i386/kernel/smpboot.c:1135:
+			int i;
+			if (!test_bit(cpu, &cpu_callout_map))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#147: FILE: arch/i386/kernel/smpboot.c:1137:
+			for (i =3D 0; i < NR_CPUS; i++) {
 			       ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#147: FILE: arch/i386/kernel/smpboot.c:1137:
+			for (i =3D 0; i < NR_CPUS; i++) {

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#148: FILE: arch/i386/kernel/smpboot.c:1138:
+				if (i <=3D cpu)
 				      ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#158: FILE: arch/i386/kernel/smpboot.c:1142:
+				if (phys_proc_id[cpu] !=3D phys_proc_id[i])
 				                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#171: FILE: arch/i386/kernel/smpboot.c:1155:
+	if (smp_num_siblings =3D=3D 1 && test_ht) {
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#171: FILE: arch/i386/kernel/smpboot.c:1155:
+	if (smp_num_siblings =3D=3D 1 && test_ht) {
 	                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#171: FILE: arch/i386/kernel/smpboot.c:1155:
+	if (smp_num_siblings =3D=3D 1 && test_ht) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#172: FILE: arch/i386/kernel/smpboot.c:1156:
+		printk("Simulating a 2-sibling 1-phys-CPU HT setup!\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#203: FILE: arch/i386/kernel/smpboot.c:426:
+
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#231: FILE: arch/i386/kernel/smpboot.c:165:
+extern void sched_map_runqueue(int cpu1, int cpu2);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#287: FILE: kernel/fork.c:899:
+	p->last_run =3D jiffies;
 	            ^

WARNING:TYPO_SPELLING: 'assymetric' may be misspelled - perhaps 'asymmetric'?
#316: FILE: kernel/sched.c:167:
+ *  runqueue or even assymetric mappings.)
                      ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: kernel/sched.c:171:
+  long __rq_idx[NR_CPUS] __cacheline_aligned;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: kernel/sched.c:172:
+  static long __cpu_idx[NR_CPUS] __cacheline_aligned;$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'idx' - possible side-effects?
#324: FILE: kernel/sched.c:175:
+# define for_each_sibling(idx, rq) \
+		for ((idx) =3D 0; (idx) < (rq)->nr_cpus; (idx)++)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#325: FILE: kernel/sched.c:176:
+		for ((idx) =3D 0; (idx) < (rq)->nr_cpus; (idx)++)
 		           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#332: FILE: kernel/sched.c:183:
+# define for_each_sibling(idx, rq) while (0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: kernel/sched.c:187:
+  static inline void active_load_balance(runqueue_t *rq, int this_cpu) { }$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#339: FILE: kernel/sched.c:190:
+typedef struct cpu_s {

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#376: FILE: kernel/sched.c:224:
+#define cpu_int(c)		((cpu_rq(c))->cpu + cpu_idx(c))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#401: FILE: kernel/sched.c:246:
+# define task_running(p)		(cpu_curr_ptr(task_cpu(p)) =3D=3D (p))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#401: FILE: kernel/sched.c:246:
+# define task_running(p)		(cpu_curr_ptr(task_cpu(p)) =3D=3D (p))
                         		                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#401: FILE: kernel/sched.c:246:
+# define task_running(p)		(cpu_curr_ptr(task_cpu(p)) =3D=3D (p))
                         		                              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#401: FILE: kernel/sched.c:246:
+# define task_running(p)		(cpu_curr_ptr(task_cpu(p)) =3D=3D (p))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#419: FILE: kernel/sched.c:401:
+	unsigned long sleep_time =3D jiffies - p->last_run;
 	                         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#444: FILE: kernel/sched.c:456:
 }
+static inline void resched_cpu(int cpu)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#453: FILE: kernel/sched.c:464:
+		p->thread_info->cpu =3D cpu;
 		                    ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#497: FILE: kernel/sched.c:523:
+	if ((task_running(p)) && (task_cpu(p) !=3D smp_processor_id()))
 	                                      ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#501: FILE: kernel/sched.c:526:
 }
+static void wake_up_cpu(runqueue_t *rq, int cpu, task_t *p)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#511: FILE: kernel/sched.c:536:
+		curr_cpu =3D rq->cpu + idx;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#514: FILE: kernel/sched.c:539:
+		if (curr_cpu->idle =3D=3D curr_cpu->curr)
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#514: FILE: kernel/sched.c:539:
+		if (curr_cpu->idle =3D=3D curr_cpu->curr)
 		                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#514: FILE: kernel/sched.c:539:
+		if (curr_cpu->idle =3D=3D curr_cpu->curr)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#522: FILE: kernel/sched.c:547:
+		curr_cpu =3D rq->cpu + idx;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#525: FILE: kernel/sched.c:550:
+		curr =3D curr_cpu->curr;
 		     ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 0)
#538: FILE: kernel/sched.c:586:
+			if (unlikely(sync && !task_running(p) &&
[...]
=20

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#539: FILE: kernel/sched.c:587:
+			if (unlikely(sync && !task_running(p) &&
 				(task_cpu(p) !=3D smp_processor_id()) &&

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#550: FILE: kernel/sched.c:596:
+			if (sync)
[...]
+			else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#552: FILE: kernel/sched.c:598:
+			else {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#563: FILE: kernel/sched.c:691:
+static inline task_t * context_switch(runqueue_t *rq, task_t *prev, task_t=

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#563: FILE: kernel/sched.c:691:
+static inline task_t * context_switch(runqueue_t *rq, task_t *prev, task_t=
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#573: FILE: kernel/sched.c:704:
+		rq->prev_mm =3D oldmm;
 		            ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#585: FILE: kernel/sched.c:727:
+			sum +=3D cpu_rq(i)->nr_running;
 			    ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#596: FILE: kernel/sched.c:741:
+			sum +=3D cpu_rq(i)->nr_uninterruptible;
 			    ^

WARNING:TYPO_SPELLING: 'agressivity' may be misspelled - perhaps 'aggressivity'?
#608: FILE: kernel/sched.c:924:
+ * frequency and balancing agressivity depends on whether the CPU is
                            ^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#614: FILE: kernel/sched.c:930:
+#define BUSY_REBALANCE_TICK (HZ/4 ?: 1)
                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#615: FILE: kernel/sched.c:931:
+#define IDLE_REBALANCE_TICK (HZ/1000 ?: 1)
                                ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#619: FILE: kernel/sched.c:935:
+static inline void load_balance(runqueue_t *rq, int this_cpu, int idle) { =

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'agressive' may be misspelled - perhaps 'aggressive'?
#657: FILE: kernel/sched.c:1117:
+	 * (except if we are in idle mode which is a more agressive
 	                                                  ^^^^^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#665: FILE: kernel/sched.c:1120:
+#define CAN_MIGRATE_TASK(p,rq,cpu)		\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#665: FILE: kernel/sched.c:1120:
+#define CAN_MIGRATE_TASK(p,rq,cpu)		\
                              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#665: FILE: kernel/sched.c:1120:
+#define CAN_MIGRATE_TASK(p,rq,cpu)		\
+	(((idle && AGRESSIVE_IDLE_STEAL) ||	\
+		(jiffies - (p)->last_run > cache_decay_ticks)) && \
+			!task_running(p) && task_allowed(p, cpu))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#676: FILE: kernel/sched.c:1146:
 }
+#if CONFIG_SHARE_RUNQUEUE

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#682: FILE: kernel/sched.c:1152:
+	for (i =3D 0; i < NR_CPUS; i++) {
 	       ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#682: FILE: kernel/sched.c:1152:
+	for (i =3D 0; i < NR_CPUS; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#685: FILE: kernel/sched.c:1155:
+		rq =3D cpu_rq(i);
 		   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#686: FILE: kernel/sched.c:1156:
+		if (rq =3D=3D this_rq)
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#686: FILE: kernel/sched.c:1156:
+		if (rq =3D=3D this_rq)
 		          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#686: FILE: kernel/sched.c:1156:
+		if (rq =3D=3D this_rq)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#692: FILE: kernel/sched.c:1162:
+			if (rq->cpu[idx].idle =3D=3D rq->cpu[idx].curr)
 			                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#692: FILE: kernel/sched.c:1162:
+			if (rq->cpu[idx].idle =3D=3D rq->cpu[idx].curr)
 			                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#692: FILE: kernel/sched.c:1162:
+			if (rq->cpu[idx].idle =3D=3D rq->cpu[idx].curr)

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#701: FILE: kernel/sched.c:1171:
+		 * doesnt matter which one) and let it fix things up:
 		   ^^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#704: FILE: kernel/sched.c:1174:
+			cpu_active_balance(i) =3D 1;
 			                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#720: FILE: kernel/sched.c:1190:
+	cpu_active_balance(this_cpu) =3D 0;
 	                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#726: FILE: kernel/sched.c:1196:
+		if (this_rq->cpu[idx].idle =3D=3D this_rq->cpu[idx].curr)
 		                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#726: FILE: kernel/sched.c:1196:
+		if (this_rq->cpu[idx].idle =3D=3D this_rq->cpu[idx].curr)
 		                              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#726: FILE: kernel/sched.c:1196:
+		if (this_rq->cpu[idx].idle =3D=3D this_rq->cpu[idx].curr)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#729: FILE: kernel/sched.c:1199:
+	for (i =3D 0; i < NR_CPUS; i++) {
 	       ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#729: FILE: kernel/sched.c:1199:
+	for (i =3D 0; i < NR_CPUS; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#732: FILE: kernel/sched.c:1202:
+		rq =3D cpu_rq(i);
 		   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#733: FILE: kernel/sched.c:1203:
+		if (rq =3D=3D this_rq)
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#733: FILE: kernel/sched.c:1203:
+		if (rq =3D=3D this_rq)
 		          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#733: FILE: kernel/sched.c:1203:
+		if (rq =3D=3D this_rq)

ERROR:CODE_INDENT: code indent should use tabs where possible
#743: FILE: kernel/sched.c:1213:
+^I ^I * balance a thread over to the target queue.$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#743: FILE: kernel/sched.c:1213:
+^I ^I * balance a thread over to the target queue.$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#770: FILE: kernel/sched.c:1232:
+	runqueue_t *rq1 =3D cpu_rq(cpu1);
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#771: FILE: kernel/sched.c:1233:
+	runqueue_t *rq2 =3D cpu_rq(cpu2);
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#772: FILE: kernel/sched.c:1234:
+	int cpu2_idx_orig =3D cpu_idx(cpu2), cpu2_idx;
 	                  ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#774: FILE: kernel/sched.c:1236:
+	printk("sched_merge_runqueues: CPU#%d <=3D> CPU#%d, on CPU#%d.\n", cpu1, =

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#776: FILE: kernel/sched.c:1237:
+	if (rq1 =3D=3D rq2)
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#776: FILE: kernel/sched.c:1237:
+	if (rq1 =3D=3D rq2)
 	           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#776: FILE: kernel/sched.c:1237:
+	if (rq1 =3D=3D rq2)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#777: FILE: kernel/sched.c:1238:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#779: FILE: kernel/sched.c:1240:
+		BUG();

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#786: FILE: kernel/sched.c:1247:
+	cpu2_idx =3D rq1->nr_cpus++;
 	         ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#788: FILE: kernel/sched.c:1249:
+	if (rq_idx(cpu1) !=3D cpu1)
 	                 ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#789: FILE: kernel/sched.c:1250:
+		BUG();

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#790: FILE: kernel/sched.c:1251:
+	rq_idx(cpu2) =3D cpu1;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#791: FILE: kernel/sched.c:1252:
+	cpu_idx(cpu2) =3D cpu2_idx;
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#792: FILE: kernel/sched.c:1253:
+	rq1->cpu[cpu2_idx].cpu =3D cpu2;
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#793: FILE: kernel/sched.c:1254:
+	rq1->cpu[cpu2_idx].idle =3D rq2->cpu[cpu2_idx_orig].idle;
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#794: FILE: kernel/sched.c:1255:
+	rq1->cpu[cpu2_idx].curr =3D rq2->cpu[cpu2_idx_orig].curr;
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#798: FILE: kernel/sched.c:1259:
+	rq2->cpu[cpu2_idx_orig].idle =3D NULL;
 	                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#799: FILE: kernel/sched.c:1260:
+	rq2->cpu[cpu2_idx_orig].curr =3D NULL;
 	                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#804: FILE: kernel/sched.c:1265:
+DEFINE_PER_CPU(struct kernel_stat, kstat) =3D { { 0 } };
                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#841: FILE: kernel/sched.c:1302:
+	unsigned long j =3D jiffies;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#848: FILE: kernel/sched.c:1306:
+	if (p =3D=3D cpu_idle_ptr(cpu)) {
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#848: FILE: kernel/sched.c:1306:
+	if (p =3D=3D cpu_idle_ptr(cpu)) {
 	         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#848: FILE: kernel/sched.c:1306:
+	if (p =3D=3D cpu_idle_ptr(cpu)) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#883: FILE: kernel/sched.c:1366:
+				rq->expired_timestamp =3D j;
 				                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#902: FILE: kernel/sched.c:1385:
+	int idx, this_cpu, retry =3D 0;
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#921: FILE: kernel/sched.c:1404:
+	this_cpu =3D smp_processor_id();
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#928: FILE: kernel/sched.c:1409:
+	prev->last_run =3D jiffies;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#947: FILE: kernel/sched.c:1440:
+		next =3D cpu_idle_ptr(this_cpu);
 		     ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#955: FILE: kernel/sched.c:1455:
+new_array:
          ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#959: FILE: kernel/sched.c:1459:
+	if ((next !=3D prev) && (rq_nr_cpus(rq) > 1)) {
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#960: FILE: kernel/sched.c:1460:
+		struct list_head *tmp =3D queue->next;
 		                      ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#962: FILE: kernel/sched.c:1462:
+		while ((task_running(next) && (next !=3D prev)) || !task_allowed(next, t=
 		                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#962: FILE: kernel/sched.c:1462:
+		while ((task_running(next) && (next !=3D prev)) || !task_allowed(next, t=
 		                                                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#964: FILE: kernel/sched.c:1463:
+			tmp =3D tmp->next;
 			    ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#965: FILE: kernel/sched.c:1464:
+			if (tmp !=3D queue) {
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#966: FILE: kernel/sched.c:1465:
+				next =3D list_entry(tmp, task_t, run_list);
 				     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#969: FILE: kernel/sched.c:1468:
+			idx =3D find_next_bit(array->bitmap, MAX_PRIO, ++idx);
 			    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#970: FILE: kernel/sched.c:1469:
+			if (idx =3D=3D MAX_PRIO) {
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#970: FILE: kernel/sched.c:1469:
+			if (idx =3D=3D MAX_PRIO) {
 			           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#970: FILE: kernel/sched.c:1469:
+			if (idx =3D=3D MAX_PRIO) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#971: FILE: kernel/sched.c:1470:
+				if (retry || !rq->expired->nr_active) {
+					goto pick_idle;
+				}

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#979: FILE: kernel/sched.c:1478:
+				retry =3D 1;
 				      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#981: FILE: kernel/sched.c:1480:
+				array =3D rq->expired;
 				      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#984: FILE: kernel/sched.c:1483:
+			queue =3D array->queue + idx;
 			      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#985: FILE: kernel/sched.c:1484:
+			tmp =3D queue->next;
 			    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#986: FILE: kernel/sched.c:1485:
+			next =3D list_entry(tmp, task_t, run_list);
 			     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1000: FILE: kernel/sched.c:1495:
+		cpu_curr_ptr(this_cpu) =3D next;
 		                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1005: FILE: kernel/sched.c:1499:
+		prev =3D context_switch(rq, prev, next);
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1008: FILE: kernel/sched.c:1502:
+		prev_mm =3D rq->prev_mm;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1009: FILE: kernel/sched.c:1503:
+		rq->prev_mm =3D NULL;
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1033: FILE: kernel/sched.c:1872:
+	return cpu_curr_ptr(task_cpu(p)) =3D=3D p;
 	                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1033: FILE: kernel/sched.c:1872:
+	return cpu_curr_ptr(task_cpu(p)) =3D=3D p;
 	                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1042: FILE: kernel/sched.c:1881:
+	return cpu_curr_ptr(cpu) =3D=3D cpu_idle_ptr(cpu);
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1042: FILE: kernel/sched.c:1881:
+	return cpu_curr_ptr(cpu) =3D=3D cpu_idle_ptr(cpu);
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1060: FILE: kernel/sched.c:2445:
+	cpu_curr_ptr(cpu) =3D cpu_idle_ptr(cpu) =3D idle;
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1060: FILE: kernel/sched.c:2445:
+	cpu_curr_ptr(cpu) =3D cpu_idle_ptr(cpu) =3D idle;
 	                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1085: FILE: kernel/sched.c:2530:
+	cpu =3D task_cpu(p);
 	    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1101: FILE: kernel/sched.c:2540:
+static int migration_task(void * data)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1116: FILE: kernel/sched.c:2561:
+	migration_thread(cpu) =3D current;
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1117: FILE: kernel/sched.c:2562:
+	idx =3D cpu_idx(cpu);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1128: FILE: kernel/sched.c:2577:
+		head =3D migration_queue(cpu);
 		     ^

CHECK:SPACING: No space is necessary after a cast
#1148: FILE: kernel/sched.c:2626:
+	long cpu =3D (long) hcpu;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1148: FILE: kernel/sched.c:2626:
+	long cpu =3D (long) hcpu;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1148: FILE: kernel/sched.c:2626:
+	long cpu =3D (long) hcpu;
 	         ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1156: FILE: kernel/sched.c:2630:
+		printk("Starting migration thread for cpu %li\n", cpu);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1170: FILE: kernel/sched.c:2710:
+		rq_idx(i) =3D i;
 		          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1171: FILE: kernel/sched.c:2711:
+		cpu_idx(i) =3D 0;
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1179: FILE: kernel/sched.c:2718:
+		rq->nr_cpus =3D 1;
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1180: FILE: kernel/sched.c:2719:
+		rq->cpu[cpu_idx(i)].cpu =3D i;
 		                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1191: FILE: kernel/sched.c:2738:
+	cpu_curr_ptr(smp_processor_id()) =3D current;
 	                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1192: FILE: kernel/sched.c:2739:
+	cpu_idle_ptr(smp_processor_id()) =3D current;
 	                                 ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000393673.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 115 errors, 29 warnings, 14 checks, 1118 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000393673.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
