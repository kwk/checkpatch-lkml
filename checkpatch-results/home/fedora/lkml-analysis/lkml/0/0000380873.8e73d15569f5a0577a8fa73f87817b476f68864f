ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#36: 
--- a/drivers/i2c/chips/adm1021.c	Wed Apr  2 16:01:25 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LONG_LINE_COMMENT: line length of 120 exceeds 100 columns
#51: FILE: drivers/i2c/chips/adm1021.c:59:
+#define ADM1021_REG_MAN_ID		0x0FE	/* 0x41 = AMD, 0x49 = TI, 0x4D = Maxim, 0x23 = Genesys , 0x54 = Onsemi*/

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#103: FILE: drivers/i2c/chips/adm1021.c:91:
+#define TEMP_FROM_REG(val)	(val > 127 ? val-256 : val)
                           	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#103: FILE: drivers/i2c/chips/adm1021.c:91:
+#define TEMP_FROM_REG(val)	(val > 127 ? val-256 : val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#103: FILE: drivers/i2c/chips/adm1021.c:91:
+#define TEMP_FROM_REG(val)	(val > 127 ? val-256 : val)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#104: FILE: drivers/i2c/chips/adm1021.c:92:
+#define TEMP_TO_REG(val)	(SENSORS_LIMIT((val < 0 ? val+256 : val),0,255))
                         	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#104: FILE: drivers/i2c/chips/adm1021.c:92:
+#define TEMP_TO_REG(val)	(SENSORS_LIMIT((val < 0 ? val+256 : val),0,255))
                         	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#104: FILE: drivers/i2c/chips/adm1021.c:92:
+#define TEMP_TO_REG(val)	(SENSORS_LIMIT((val < 0 ? val+256 : val),0,255))
                         	                                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#104: FILE: drivers/i2c/chips/adm1021.c:92:
+#define TEMP_TO_REG(val)	(SENSORS_LIMIT((val < 0 ? val+256 : val),0,255))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#104: FILE: drivers/i2c/chips/adm1021.c:92:
+#define TEMP_TO_REG(val)	(SENSORS_LIMIT((val < 0 ? val+256 : val),0,255))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'value' may be better as '(value)' to avoid precedence issues
#208: FILE: drivers/i2c/chips/adm1021.c:158:
+#define show(value)	\
+static ssize_t show_##value(struct device *dev, char *buf)	\
+{								\
+	struct i2c_client *client = to_i2c_client(dev);		\
+	struct adm1021_data *data = i2c_get_clientdata(client);	\
+	int temp;						\
+								\
+	adm1021_update_client(client);				\
+	temp = TEMP_FROM_REG(data->value);			\
+	return sprintf(buf, "%d\n", temp);			\
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#219: FILE: drivers/i2c/chips/adm1021.c:169:
+}
+show(temp_max);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'value' - possible side-effects?
#228: FILE: drivers/i2c/chips/adm1021.c:178:
+#define set(value, reg)	\
+static ssize_t set_##value(struct device *dev, const char *buf, size_t count)	\
+{								\
+	struct i2c_client *client = to_i2c_client(dev);		\
+	struct adm1021_data *data = i2c_get_clientdata(client);	\
+	int temp = simple_strtoul(buf, NULL, 10);		\
+								\
+	data->value = TEMP_TO_REG(temp);			\
+	adm1021_write_value(client, reg, data->value);		\
+	return count;						\
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'value' may be better as '(value)' to avoid precedence issues
#228: FILE: drivers/i2c/chips/adm1021.c:178:
+#define set(value, reg)	\
+static ssize_t set_##value(struct device *dev, const char *buf, size_t count)	\
+{								\
+	struct i2c_client *client = to_i2c_client(dev);		\
+	struct adm1021_data *data = i2c_get_clientdata(client);	\
+	int temp = simple_strtoul(buf, NULL, 10);		\
+								\
+	data->value = TEMP_TO_REG(temp);			\
+	adm1021_write_value(client, reg, data->value);		\
+	return count;						\
+}

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#233: FILE: drivers/i2c/chips/adm1021.c:183:
+	int temp = simple_strtoul(buf, NULL, 10);		\

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#239: FILE: drivers/i2c/chips/adm1021.c:189:
+}
+set(temp_max, ADM1021_REG_TOS_W);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_max' to 'temp_max1_show' 'set_temp_max' to 'temp_max1_store'
#244: FILE: drivers/i2c/chips/adm1021.c:194:
+static DEVICE_ATTR(temp_max1, S_IWUSR | S_IRUGO, show_temp_max, set_temp_max);

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#244: FILE: drivers/i2c/chips/adm1021.c:194:
+static DEVICE_ATTR(temp_max1, S_IWUSR | S_IRUGO, show_temp_max, set_temp_max);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_hyst' to 'temp_min1_show' 'set_temp_hyst' to 'temp_min1_store'
#245: FILE: drivers/i2c/chips/adm1021.c:195:
+static DEVICE_ATTR(temp_min1, S_IWUSR | S_IRUGO, show_temp_hyst, set_temp_hyst);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#245: FILE: drivers/i2c/chips/adm1021.c:195:
+static DEVICE_ATTR(temp_min1, S_IWUSR | S_IRUGO, show_temp_hyst, set_temp_hyst);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_input' to 'temp_input1_show'
#246: FILE: drivers/i2c/chips/adm1021.c:196:
+static DEVICE_ATTR(temp_input1, S_IRUGO, show_temp_input, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#246: FILE: drivers/i2c/chips/adm1021.c:196:
+static DEVICE_ATTR(temp_input1, S_IRUGO, show_temp_input, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_remote_temp_max' to 'temp_max2_show' 'set_remote_temp_max' to 'temp_max2_store'
#247: FILE: drivers/i2c/chips/adm1021.c:197:
+static DEVICE_ATTR(temp_max2, S_IWUSR | S_IRUGO, show_remote_temp_max, set_remote_temp_max);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#247: FILE: drivers/i2c/chips/adm1021.c:197:
+static DEVICE_ATTR(temp_max2, S_IWUSR | S_IRUGO, show_remote_temp_max, set_remote_temp_max);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_remote_temp_hyst' to 'temp_min2_show' 'set_remote_temp_hyst' to 'temp_min2_store'
#248: FILE: drivers/i2c/chips/adm1021.c:198:
+static DEVICE_ATTR(temp_min2, S_IWUSR | S_IRUGO, show_remote_temp_hyst, set_remote_temp_hyst);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#248: FILE: drivers/i2c/chips/adm1021.c:198:
+static DEVICE_ATTR(temp_min2, S_IWUSR | S_IRUGO, show_remote_temp_hyst, set_remote_temp_hyst);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_remote_temp_input' to 'temp_input2_show'
#249: FILE: drivers/i2c/chips/adm1021.c:199:
+static DEVICE_ATTR(temp_input2, S_IRUGO, show_remote_temp_input, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#249: FILE: drivers/i2c/chips/adm1021.c:199:
+static DEVICE_ATTR(temp_input2, S_IRUGO, show_remote_temp_input, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_alarms' to 'alarms_show'
#250: FILE: drivers/i2c/chips/adm1021.c:200:
+static DEVICE_ATTR(alarms, S_IRUGO, show_alarms, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#250: FILE: drivers/i2c/chips/adm1021.c:200:
+static DEVICE_ATTR(alarms, S_IRUGO, show_alarms, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_die_code' to 'die_code_show'
#251: FILE: drivers/i2c/chips/adm1021.c:201:
+static DEVICE_ATTR(die_code, S_IRUGO, show_die_code, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#251: FILE: drivers/i2c/chips/adm1021.c:201:
+static DEVICE_ATTR(die_code, S_IRUGO, show_die_code, NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#253: FILE: drivers/i2c/chips/adm1021.c:203:
+
+

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#438: FILE: drivers/i2c/chips/adm1021.c:406:
+			data->remote_temp_prec = adm1021_read_value(client, ADM1021_REG_REM_TEMP_PREC);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#439: FILE: drivers/i2c/chips/adm1021.c:407:
+			data->remote_temp_os_prec = adm1021_read_value(client, ADM1021_REG_REM_TOS_PREC);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#440: FILE: drivers/i2c/chips/adm1021.c:408:
+			data->remote_temp_hyst_prec = adm1021_read_value(client, ADM1021_REG_REM_THYST_PREC);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#441: FILE: drivers/i2c/chips/adm1021.c:409:
+			data->remote_temp_offset = adm1021_read_value(client, ADM1021_REG_REM_OFFSET);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#442: FILE: drivers/i2c/chips/adm1021.c:410:
+			data->remote_temp_offset_prec = adm1021_read_value(client, ADM1021_REG_REM_OFFSET_PREC);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#451: FILE: drivers/i2c/chips/adm1021.c:421:
+ * conversion is correct, or not */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#452: FILE: drivers/i2c/chips/adm1021.c:422:
+__attribute__((unused))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#480: FILE: drivers/i2c/chips/adm1021.c:450:
+__attribute__((unused))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#503: FILE: drivers/i2c/chips/adm1021.c:466:
+			results[0] = results[0]*1000 + ((data->remote_temp_os_prec >> 5) * 125);
 			                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#504: FILE: drivers/i2c/chips/adm1021.c:467:
+			results[1] = results[1]*1000 + ((data->remote_temp_hyst_prec >> 5) * 125);
 			                       ^

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#505: FILE: drivers/i2c/chips/adm1021.c:468:
+			results[2] = (TEMP_FROM_REG(data->remote_temp_offset)*1000) + ((data->remote_temp_offset_prec >> 5) * 125);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#505: FILE: drivers/i2c/chips/adm1021.c:468:
+			results[2] = (TEMP_FROM_REG(data->remote_temp_offset)*1000) + ((data->remote_temp_offset_prec >> 5) * 125);
 			                                                     ^

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#506: FILE: drivers/i2c/chips/adm1021.c:469:
+			results[3] = (TEMP_FROM_REG(data->remote_temp_input)*1000) + ((data->remote_temp_prec >> 5) * 125);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#506: FILE: drivers/i2c/chips/adm1021.c:469:
+			results[3] = (TEMP_FROM_REG(data->remote_temp_input)*1000) + ((data->remote_temp_prec >> 5) * 125);
 			                                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#510: FILE: drivers/i2c/chips/adm1021.c:472:
+ ^I^I^I*nrels_mag = 3;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#510: FILE: drivers/i2c/chips/adm1021.c:472:
+ ^I^I^I*nrels_mag = 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: drivers/i2c/chips/adm1021.c:472:
+ ^I^I^I*nrels_mag = 3;$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#521: FILE: drivers/i2c/chips/adm1021.c:477:
+				prec = ((results[0]-((results[0]/1000)*1000))/125)<<5;
 				                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#521: FILE: drivers/i2c/chips/adm1021.c:477:
+				prec = ((results[0]-((results[0]/1000)*1000))/125)<<5;
 				                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#521: FILE: drivers/i2c/chips/adm1021.c:477:
+				prec = ((results[0]-((results[0]/1000)*1000))/125)<<5;
 				                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#521: FILE: drivers/i2c/chips/adm1021.c:477:
+				prec = ((results[0]-((results[0]/1000)*1000))/125)<<5;
 				                                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#521: FILE: drivers/i2c/chips/adm1021.c:477:
+				prec = ((results[0]-((results[0]/1000)*1000))/125)<<5;
 				                                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#523: FILE: drivers/i2c/chips/adm1021.c:479:
+				results[0] = results[0]/1000;
 				                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#524: FILE: drivers/i2c/chips/adm1021.c:480:
+				data->remote_temp_os_prec=prec;
 				                         ^

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#531: FILE: drivers/i2c/chips/adm1021.c:483:
+			adm1021_write_value(client, ADM1021_REG_REMOTE_TOS_W, data->remote_temp_max);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#541: FILE: drivers/i2c/chips/adm1021.c:487:
+				prec = ((results[1]-((results[1]/1000)*1000))/125)<<5;
 				                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#541: FILE: drivers/i2c/chips/adm1021.c:487:
+				prec = ((results[1]-((results[1]/1000)*1000))/125)<<5;
 				                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#541: FILE: drivers/i2c/chips/adm1021.c:487:
+				prec = ((results[1]-((results[1]/1000)*1000))/125)<<5;
 				                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#541: FILE: drivers/i2c/chips/adm1021.c:487:
+				prec = ((results[1]-((results[1]/1000)*1000))/125)<<5;
 				                                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#541: FILE: drivers/i2c/chips/adm1021.c:487:
+				prec = ((results[1]-((results[1]/1000)*1000))/125)<<5;
 				                                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#543: FILE: drivers/i2c/chips/adm1021.c:489:
+				results[1] = results[1]/1000;
 				                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#544: FILE: drivers/i2c/chips/adm1021.c:490:
+				data->remote_temp_hyst_prec=prec;
 				                           ^

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#550: FILE: drivers/i2c/chips/adm1021.c:493:
+			adm1021_write_value(client, ADM1021_REG_REMOTE_THYST_W, data->remote_temp_hyst);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#564: FILE: drivers/i2c/chips/adm1021.c:497:
+				prec = ((results[2]-((results[2]/1000)*1000))/125)<<5;
 				                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#564: FILE: drivers/i2c/chips/adm1021.c:497:
+				prec = ((results[2]-((results[2]/1000)*1000))/125)<<5;
 				                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#564: FILE: drivers/i2c/chips/adm1021.c:497:
+				prec = ((results[2]-((results[2]/1000)*1000))/125)<<5;
 				                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#564: FILE: drivers/i2c/chips/adm1021.c:497:
+				prec = ((results[2]-((results[2]/1000)*1000))/125)<<5;
 				                                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#564: FILE: drivers/i2c/chips/adm1021.c:497:
+				prec = ((results[2]-((results[2]/1000)*1000))/125)<<5;
 				                                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#566: FILE: drivers/i2c/chips/adm1021.c:499:
+				results[2]=results[2]/1000;
 				          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#566: FILE: drivers/i2c/chips/adm1021.c:499:
+				results[2]=results[2]/1000;
 				                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#567: FILE: drivers/i2c/chips/adm1021.c:500:
+				data->remote_temp_offset_prec=prec;
 				                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#568: FILE: drivers/i2c/chips/adm1021.c:501:
+				data->remote_temp_offset=results[2];
 				                        ^

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#569: FILE: drivers/i2c/chips/adm1021.c:502:
+				adm1021_write_value(client, ADM1021_REG_REM_OFFSET, data->remote_temp_offset);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#575: FILE: drivers/i2c/chips/adm1021.c:508:
+__attribute__((unused))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#583: FILE: drivers/i2c/chips/adm1021.c:525:
+__attribute__((unused))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#593: FILE: drivers/i2c/chips/adm1021.c:551:
+MODULE_AUTHOR ("Frodo Looijaard <frodol@dds.nl> and "

WARNING:SPLIT_STRING: quoted string split across lines
#594: FILE: drivers/i2c/chips/adm1021.c:552:
+MODULE_AUTHOR ("Frodo Looijaard <frodol@dds.nl> and "
+		"Philip Edelbrock <phil@netroedge.com>");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380873.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 37 warnings, 34 checks, 544 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380873.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
