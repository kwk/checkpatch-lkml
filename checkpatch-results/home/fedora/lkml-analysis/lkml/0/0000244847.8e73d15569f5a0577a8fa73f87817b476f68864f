WARNING:BAD_SIGN_OFF: Non-standard signature: 'Signed-of-by:' - perhaps 'Signed-off-by:'?
#53: 
   Signed-of-by: Ben Dooks <ben-wdog@fluff.org>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-of-by:
#53: 
   Signed-of-by: Ben Dooks <ben-wdog@fluff.org>

WARNING:BAD_SIGN_OFF: Non-standard signature: 'Signed-of-by:' - perhaps 'Signed-off-by:'?
#54: 
   Signed-of-by: Wim Van Sebroeck <wim@iguana.be>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-of-by:
#54: 
   Signed-of-by: Wim Van Sebroeck <wim@iguana.be>

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#65: 
================================================================================

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#67: 
--- a/arch/arm/configs/bast_defconfig	2004-10-03 21:15:40 +02:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#151: FILE: drivers/char/watchdog/s3c2410_wdt.c:1:
+/* linux/drivers/char/watchdog/s3c2410_wdt.c

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#151: FILE: drivers/char/watchdog/s3c2410_wdt.c:1:
+/* linux/drivers/char/watchdog/s3c2410_wdt.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#172: FILE: drivers/char/watchdog/s3c2410_wdt.c:22:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#173: FILE: drivers/char/watchdog/s3c2410_wdt.c:23:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#174: FILE: drivers/char/watchdog/s3c2410_wdt.c:24:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#190: FILE: drivers/char/watchdog/s3c2410_wdt.c:40:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#191: FILE: drivers/char/watchdog/s3c2410_wdt.c:41:
+#include <asm/io.h>

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#205: FILE: drivers/char/watchdog/s3c2410_wdt.c:55:
+#define pr_debug(msg, x...) do { printk(KERN_INFO msg, x); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#205: FILE: drivers/char/watchdog/s3c2410_wdt.c:55:
+#define pr_debug(msg, x...) do { printk(KERN_INFO msg, x); } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#205: FILE: drivers/char/watchdog/s3c2410_wdt.c:55:
+#define pr_debug(msg, x...) do { printk(KERN_INFO msg, x); } while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#225: FILE: drivers/char/watchdog/s3c2410_wdt.c:75:
+static int soft_noboot = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#232: FILE: drivers/char/watchdog/s3c2410_wdt.c:82:
+MODULE_PARM_DESC(tmr_margin, "Watchdog tmr_margin in seconds. default=" __MODULE_STRING(CONFIG_S3C2410_WATCHDOG_DEFAULT_TIME) ")");

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#234: FILE: drivers/char/watchdog/s3c2410_wdt.c:84:
+MODULE_PARM_DESC(tmr_atboot, "Watchdog is started at boot time if set to 1, default=" __MODULE_STRING(CONFIG_S3C2410_WATCHDOG_ATBOOT));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#240: FILE: drivers/char/watchdog/s3c2410_wdt.c:90:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#241: FILE: drivers/char/watchdog/s3c2410_wdt.c:91:
+typedef enum close_state {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#243: FILE: drivers/char/watchdog/s3c2410_wdt.c:93:
+	CLOSE_STATE_ALLOW=0x4021
 	                 ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#293: FILE: drivers/char/watchdog/s3c2410_wdt.c:143:
+		 __FUNCTION__, tmr_count, wtcon);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#317: FILE: drivers/char/watchdog/s3c2410_wdt.c:167:
+	freq /= 128/2;
 	           ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#321: FILE: drivers/char/watchdog/s3c2410_wdt.c:171:
+		 __FUNCTION__, count, timeout, freq);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#324: FILE: drivers/char/watchdog/s3c2410_wdt.c:174:
+	/* if the count is bigger than the watchdog register,
+	   then work out what we need to do (and if) we can

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#335: FILE: drivers/char/watchdog/s3c2410_wdt.c:185:
+			printk(KERN_ERR PFX "timeout %d too big\n", timeout);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#341: FILE: drivers/char/watchdog/s3c2410_wdt.c:191:
+		 __FUNCTION__, timeout, divisor, count, count/divisor);
 		                                             ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#341: FILE: drivers/char/watchdog/s3c2410_wdt.c:191:
+		 __FUNCTION__, timeout, divisor, count, count/divisor);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#349: FILE: drivers/char/watchdog/s3c2410_wdt.c:199:
+	wtcon |= S3C2410_WTCON_PRESCALE(divisor-1);
 	                                       ^

ERROR:SPACING: space required before the open parenthesis '('
#363: FILE: drivers/char/watchdog/s3c2410_wdt.c:213:
+	if(down_trylock(&open_lock))

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#366: FILE: drivers/char/watchdog/s3c2410_wdt.c:216:
+	if (nowayout) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#381: FILE: drivers/char/watchdog/s3c2410_wdt.c:231:
+^I * ^ILock it in if it's a module and we set nowayout$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#386: FILE: drivers/char/watchdog/s3c2410_wdt.c:236:
+		printk(KERN_CRIT PFX "Unexpected close, not stopping watchdog!\n");

ERROR:SPACING: space required before the open parenthesis '('
#401: FILE: drivers/char/watchdog/s3c2410_wdt.c:251:
+	if(len) {

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#423: FILE: drivers/char/watchdog/s3c2410_wdt.c:273:
+#define OPTIONS WDIOF_SETTIMEOUT | WDIOF_KEEPALIVEPING | WDIOF_MAGICCLOSE

CHECK:LINE_SPACING: Please don't use multiple blank lines
#431: FILE: drivers/char/watchdog/s3c2410_wdt.c:281:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#433: FILE: drivers/char/watchdog/s3c2410_wdt.c:283:
+static int s3c2410wdt_ioctl(struct inode *inode, struct file *file,
+	unsigned int cmd, unsigned long arg)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#439: FILE: drivers/char/watchdog/s3c2410_wdt.c:289:
+	switch (cmd) {
+		default:
[...]
+		case WDIOC_GETSUPPORT:
[...]
+		case WDIOC_GETSTATUS:
+		case WDIOC_GETBOOTSTATUS:
[...]
+		case WDIOC_KEEPALIVE:
[...]
+		case WDIOC_SETTIMEOUT:
[...]
+		case WDIOC_GETTIMEOUT:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#475: FILE: drivers/char/watchdog/s3c2410_wdt.c:325:
+static int s3c2410wdt_notify_sys(struct notifier_block *this, unsigned long code,
+			      void *unused)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#477: FILE: drivers/char/watchdog/s3c2410_wdt.c:327:
+	if(code==SYS_DOWN || code==SYS_HALT) {
 	       ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#477: FILE: drivers/char/watchdog/s3c2410_wdt.c:327:
+	if(code==SYS_DOWN || code==SYS_HALT) {
 	                         ^

ERROR:SPACING: space required before the open parenthesis '('
#477: FILE: drivers/char/watchdog/s3c2410_wdt.c:327:
+	if(code==SYS_DOWN || code==SYS_HALT) {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#486: FILE: drivers/char/watchdog/s3c2410_wdt.c:336:
+static struct file_operations s3c2410wdt_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#510: FILE: drivers/char/watchdog/s3c2410_wdt.c:360:
+	printk(KERN_INFO PFX "Watchdog timer expired!\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#515: FILE: drivers/char/watchdog/s3c2410_wdt.c:365:
+}
+/* device interface */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#524: FILE: drivers/char/watchdog/s3c2410_wdt.c:374:
+	pr_debug("%s: probe=%p, device=%p\n", __FUNCTION__, pdev, dev);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res"
#529: FILE: drivers/char/watchdog/s3c2410_wdt.c:379:
+	if (res == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'resouce' may be misspelled - perhaps 'resource'?
#530: FILE: drivers/char/watchdog/s3c2410_wdt.c:380:
+		printk(KERN_INFO PFX "failed to get memory region resouce\n");
 		                                                  ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#530: FILE: drivers/char/watchdog/s3c2410_wdt.c:380:
+		printk(KERN_INFO PFX "failed to get memory region resouce\n");

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#534: FILE: drivers/char/watchdog/s3c2410_wdt.c:384:
+	if (!request_mem_region(res->start, res->end-res->start, pdev->name)) {
 	                                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#535: FILE: drivers/char/watchdog/s3c2410_wdt.c:385:
+		printk(KERN_INFO PFX "failed to get memory region\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#541: FILE: drivers/char/watchdog/s3c2410_wdt.c:391:
+		printk(KERN_INFO PFX "failed to ioremap() region\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res"
#548: FILE: drivers/char/watchdog/s3c2410_wdt.c:398:
+	if (res == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#549: FILE: drivers/char/watchdog/s3c2410_wdt.c:399:
+		printk(KERN_INFO PFX "failed to get irq resource\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#555: FILE: drivers/char/watchdog/s3c2410_wdt.c:405:
+		printk(KERN_INFO PFX "failed to install irq (%d)\n", ret);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!wdt_clock"
#560: FILE: drivers/char/watchdog/s3c2410_wdt.c:410:
+	if (wdt_clock == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#561: FILE: drivers/char/watchdog/s3c2410_wdt.c:411:
+		printk(KERN_INFO PFX "failed to find watchdog clock source\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#568: FILE: drivers/char/watchdog/s3c2410_wdt.c:418:
+	 * not, try the default value */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#574: FILE: drivers/char/watchdog/s3c2410_wdt.c:424:
+			printk(KERN_INFO PFX "tmr_margin value out of range, default %d used\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#577: FILE: drivers/char/watchdog/s3c2410_wdt.c:427:
+			printk(KERN_INFO PFX "default timer value is out of range, cannot start\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#583: FILE: drivers/char/watchdog/s3c2410_wdt.c:433:
+		printk (KERN_ERR PFX "cannot register reboot notifier (%d)\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#583: FILE: drivers/char/watchdog/s3c2410_wdt.c:433:
+		printk (KERN_ERR PFX "cannot register reboot notifier (%d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#590: FILE: drivers/char/watchdog/s3c2410_wdt.c:440:
+		printk (KERN_ERR PFX "cannot register miscdev on minor=%d (%d)\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#590: FILE: drivers/char/watchdog/s3c2410_wdt.c:440:
+		printk (KERN_ERR PFX "cannot register miscdev on minor=%d (%d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#597: FILE: drivers/char/watchdog/s3c2410_wdt.c:447:
+		printk(KERN_INFO PFX "Starting Watchdog Timer\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "wdt_mem"
#606: FILE: drivers/char/watchdog/s3c2410_wdt.c:456:
+	if (wdt_mem != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "wdt_irq"
#612: FILE: drivers/char/watchdog/s3c2410_wdt.c:462:
+	if (wdt_irq != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "wdt_clock"
#617: FILE: drivers/char/watchdog/s3c2410_wdt.c:467:
+	if (wdt_clock != NULL) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#635: FILE: drivers/char/watchdog/s3c2410_wdt.c:485:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#641: FILE: drivers/char/watchdog/s3c2410_wdt.c:491:
+	printk(banner);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#706: FILE: drivers/char/watchdog/s3c2410_wdt.c:385:
+	size = (res->end-res->start)+1;
 	                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#706: FILE: drivers/char/watchdog/s3c2410_wdt.c:385:
+	size = (res->end-res->start)+1;
 	                            ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!wdt_mem"
#708: FILE: drivers/char/watchdog/s3c2410_wdt.c:387:
+	if (wdt_mem == NULL) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000244847.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 42 warnings, 19 checks, 632 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000244847.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
