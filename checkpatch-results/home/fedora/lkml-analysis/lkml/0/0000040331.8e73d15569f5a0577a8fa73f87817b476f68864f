WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
This module could be merged with mainline. Jprobes is used here so that the 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#96: FILE: drivers/misc/lkdtm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#110: FILE: drivers/misc/lkdtm.c:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#111: FILE: drivers/misc/lkdtm.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#171: FILE: drivers/misc/lkdtm.c:76:
+	BUG,

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#177: FILE: drivers/misc/lkdtm.c:82:
+static char* cp_name[] = {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#188: FILE: drivers/misc/lkdtm.c:93:
+static char* cp_type[] = {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#201: FILE: drivers/misc/lkdtm.c:106:
+static char* cpoint_name = INVALID;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#202: FILE: drivers/misc/lkdtm.c:107:
+static char* cpoint_type = NONE;

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#211: FILE: drivers/misc/lkdtm.c:116:
+MODULE_PARM_DESC(recur_count, "Recurcion level for the stack overflow test,\

ERROR:NON_OCTAL_PERMISSIONS: Use 4 digit octal (0777) not decimal permissions
#215: FILE: drivers/misc/lkdtm.c:120:
+module_param(cpoint_type, charp, 06444);
Permission bits should use 4 digit octal permissions (like 0700 or 0444).
Avoid using any other base like decimal.

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#216: FILE: drivers/misc/lkdtm.c:121:
+MODULE_PARM_DESC(cpoint_type, "Crash Point Type, action to be taken on\

ERROR:NON_OCTAL_PERMISSIONS: Use 4 digit octal (0777) not decimal permissions
#218: FILE: drivers/misc/lkdtm.c:123:
+module_param(cpoint_count, int, 06444);
WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#219: FILE: drivers/misc/lkdtm.c:124:
+MODULE_PARM_DESC(cpoint_count, "Crash Point Count, number of times the \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: drivers/misc/lkdtm.c:135:
+irqreturn_t jp_handle_irq_event(unsigned int irq, struct pt_regs *regs,
+			struct irqaction *action)

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: drivers/misc/lkdtm.c:157:
+                                        struct scan_control *sc)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: drivers/misc/lkdtm.c:157:
+unsigned long jp_shrink_page_list(struct list_head *page_list,
+                                        struct scan_control *sc)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: drivers/misc/lkdtm.c:157:
+                                        struct scan_control *sc)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: drivers/misc/lkdtm.c:165:
+int jp_hrtimer_start(struct hrtimer *timer, ktime_t tim,
+				const enum hrtimer_mode mode)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: drivers/misc/lkdtm.c:180:
+int jp_generic_ide_ioctl(ide_drive_t *drive, struct file *file,
+			struct block_device *bdev, unsigned int cmd,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#283: FILE: drivers/misc/lkdtm.c:188:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: drivers/misc/lkdtm.c:194:
+	if (cpoint_name == INVALID || cpoint_type == NONE ||
+					cpoint_count < 1 || recur_count < 1)

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: drivers/misc/lkdtm.c:212:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: drivers/misc/lkdtm.c:212:
+                return -EINVAL;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: drivers/misc/lkdtm.c:223:
+	memset(buf,0xFF,1024);
 	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: drivers/misc/lkdtm.c:223:
+	memset(buf,0xFF,1024);
 	               ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#322: FILE: drivers/misc/lkdtm.c:227:
+		return 0;
+	else

ERROR:CODE_INDENT: code indent should use tabs where possible
#323: FILE: drivers/misc/lkdtm.c:228:
+        ^Ireturn recursive_loop(a);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#323: FILE: drivers/misc/lkdtm.c:228:
+        ^Ireturn recursive_loop(a);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: drivers/misc/lkdtm.c:228:
+        ^Ireturn recursive_loop(a);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#328: FILE: drivers/misc/lkdtm.c:233:
+	printk(KERN_INFO "lkdtm : Crash point %s of type %s hit\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: drivers/misc/lkdtm.c:234:
+	printk(KERN_INFO "lkdtm : Crash point %s of type %s hit\n",
+					 cpoint_name, cpoint_type);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#337: FILE: drivers/misc/lkdtm.c:242:
+			printk(KERN_INFO "lkdtm : PANIC\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#340: FILE: drivers/misc/lkdtm.c:245:
+		case BUG:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#341: FILE: drivers/misc/lkdtm.c:246:
+			printk(KERN_INFO "lkdtm : BUG\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#342: FILE: drivers/misc/lkdtm.c:247:
+			BUG();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#345: FILE: drivers/misc/lkdtm.c:250:
+			printk(KERN_INFO "lkdtm : EXCEPTION\n");

CHECK:SPACING: No space is necessary after a cast
#346: FILE: drivers/misc/lkdtm.c:251:
+			*((int *) 0) = 0;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#349: FILE: drivers/misc/lkdtm.c:254:
+			printk(KERN_INFO "lkdtm : LOOP\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#350: FILE: drivers/misc/lkdtm.c:255:
+			for (;;);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#353: FILE: drivers/misc/lkdtm.c:258:
+			printk(KERN_INFO "lkdtm : OVERFLOW\n");

CHECK:SPACING: No space is necessary after a cast
#354: FILE: drivers/misc/lkdtm.c:259:
+			(void) recursive_loop(0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#368: FILE: drivers/misc/lkdtm.c:273:
+		printk(KERN_INFO "lkdtm : Invalid command\n");

CHECK:SPACING: No space is necessary after a cast
#375: FILE: drivers/misc/lkdtm.c:280:
+		lkdtm.entry = (kprobe_opcode_t*) jp_do_irq;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#375: FILE: drivers/misc/lkdtm.c:280:
+		lkdtm.entry = (kprobe_opcode_t*) jp_do_irq;

CHECK:SPACING: No space is necessary after a cast
#379: FILE: drivers/misc/lkdtm.c:284:
+		lkdtm.entry = (kprobe_opcode_t*) jp_handle_irq_event;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#379: FILE: drivers/misc/lkdtm.c:284:
+		lkdtm.entry = (kprobe_opcode_t*) jp_handle_irq_event;

CHECK:SPACING: No space is necessary after a cast
#383: FILE: drivers/misc/lkdtm.c:288:
+		lkdtm.entry = (kprobe_opcode_t*) jp_tasklet_action;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#383: FILE: drivers/misc/lkdtm.c:288:
+		lkdtm.entry = (kprobe_opcode_t*) jp_tasklet_action;

CHECK:SPACING: No space is necessary after a cast
#387: FILE: drivers/misc/lkdtm.c:292:
+		lkdtm.entry = (kprobe_opcode_t*) jp_ll_rw_block;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#387: FILE: drivers/misc/lkdtm.c:292:
+		lkdtm.entry = (kprobe_opcode_t*) jp_ll_rw_block;

CHECK:SPACING: No space is necessary after a cast
#391: FILE: drivers/misc/lkdtm.c:296:
+		lkdtm.entry = (kprobe_opcode_t*) jp_shrink_page_list;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#391: FILE: drivers/misc/lkdtm.c:296:
+		lkdtm.entry = (kprobe_opcode_t*) jp_shrink_page_list;

CHECK:SPACING: No space is necessary after a cast
#395: FILE: drivers/misc/lkdtm.c:300:
+		lkdtm.entry = (kprobe_opcode_t*) jp_hrtimer_start;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#395: FILE: drivers/misc/lkdtm.c:300:
+		lkdtm.entry = (kprobe_opcode_t*) jp_hrtimer_start;

CHECK:SPACING: No space is necessary after a cast
#399: FILE: drivers/misc/lkdtm.c:304:
+		lkdtm.entry = (kprobe_opcode_t*) jp_scsi_dispatch_cmd;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#399: FILE: drivers/misc/lkdtm.c:304:
+		lkdtm.entry = (kprobe_opcode_t*) jp_scsi_dispatch_cmd;

CHECK:SPACING: No space is necessary after a cast
#403: FILE: drivers/misc/lkdtm.c:308:
+		lkdtm.entry = (kprobe_opcode_t*) jp_generic_ide_ioctl;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#403: FILE: drivers/misc/lkdtm.c:308:
+		lkdtm.entry = (kprobe_opcode_t*) jp_generic_ide_ioctl;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#406: FILE: drivers/misc/lkdtm.c:311:
+		printk(KERN_INFO "lkdtm : Invalid Crash Point\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#410: FILE: drivers/misc/lkdtm.c:315:
+	if ( (ret = register_jprobe(&lkdtm)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#410: FILE: drivers/misc/lkdtm.c:315:
+	if ( (ret = register_jprobe(&lkdtm)) < 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: drivers/misc/lkdtm.c:316:
+                printk(KERN_INFO "lkdtm : Couldn't register jprobe\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: drivers/misc/lkdtm.c:316:
+                printk(KERN_INFO "lkdtm : Couldn't register jprobe\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#411: FILE: drivers/misc/lkdtm.c:316:
+                printk(KERN_INFO "lkdtm : Couldn't register jprobe\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: drivers/misc/lkdtm.c:317:
+                return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: drivers/misc/lkdtm.c:317:
+                return ret;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#415: FILE: drivers/misc/lkdtm.c:320:
+	printk(KERN_INFO "lkdtm : Crash point %s of type %s registered\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#416: FILE: drivers/misc/lkdtm.c:321:
+	printk(KERN_INFO "lkdtm : Crash point %s of type %s registered\n",
+						cpoint_name, cpoint_type);

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: drivers/misc/lkdtm.c:327:
+        unregister_jprobe(&lkdtm);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: drivers/misc/lkdtm.c:327:
+        unregister_jprobe(&lkdtm);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: drivers/misc/lkdtm.c:328:
+        printk(KERN_INFO "lkdtm : Crash point unregistered\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: drivers/misc/lkdtm.c:328:
+        printk(KERN_INFO "lkdtm : Crash point unregistered\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#423: FILE: drivers/misc/lkdtm.c:328:
+        printk(KERN_INFO "lkdtm : Crash point unregistered\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000040331.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 28 errors, 28 warnings, 18 checks, 355 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000040331.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
