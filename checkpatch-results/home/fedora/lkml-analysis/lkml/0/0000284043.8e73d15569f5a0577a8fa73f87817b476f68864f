WARNING:LINE_SPACING: Missing a blank line after declarations
#57: FILE: fs/buffer.c:84:
+	struct block_device *bd;
+	smp_mb();

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#57: FILE: fs/buffer.c:84:
+	smp_mb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#67: FILE: fs/buffer.c:94:
+	DEFINE_FILTERED_WAIT(wait, bh);
+	do {

WARNING:LONG_LINE_COMMENT: line length of 113 exceeds 100 columns
#102: FILE: include/linux/list.h:416:
+ * list_for_each_entry_reverse_safe - iterate over list of given type safe against removal of list entry backward

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#108: FILE: include/linux/list.h:422:
+#define list_for_each_entry_reverse_safe(pos, n, head, member)		\
+	for (pos = list_entry((head)->prev, typeof(*pos), member),	\
+		n = list_entry(pos->member.prev, typeof(*pos), member);	\
+	     &pos->member != (head); 					\
+	     pos = n, n = list_entry(n->member.prev, typeof(*n), member))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#108: FILE: include/linux/list.h:422:
+#define list_for_each_entry_reverse_safe(pos, n, head, member)		\
+	for (pos = list_entry((head)->prev, typeof(*pos), member),	\
+		n = list_entry(pos->member.prev, typeof(*pos), member);	\
+	     &pos->member != (head); 					\
+	     pos = n, n = list_entry(n->member.prev, typeof(*n), member))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'head' - possible side-effects?
#108: FILE: include/linux/list.h:422:
+#define list_for_each_entry_reverse_safe(pos, n, head, member)		\
+	for (pos = list_entry((head)->prev, typeof(*pos), member),	\
+		n = list_entry(pos->member.prev, typeof(*pos), member);	\
+	     &pos->member != (head); 					\
+	     pos = n, n = list_entry(n->member.prev, typeof(*n), member))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'member' - possible side-effects?
#108: FILE: include/linux/list.h:422:
+#define list_for_each_entry_reverse_safe(pos, n, head, member)		\
+	for (pos = list_entry((head)->prev, typeof(*pos), member),	\
+		n = list_entry(pos->member.prev, typeof(*pos), member);	\
+	     &pos->member != (head); 					\
+	     pos = n, n = list_entry(n->member.prev, typeof(*n), member))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#111: FILE: include/linux/list.h:425:
+^I     &pos->member != (head); ^I^I^I^I^I\$

WARNING:LINE_SPACING: Missing a blank line after declarations
#154: FILE: kernel/sched.c:2529:
+		int exclusive = wait->wait.flags & WQ_FLAG_EXCLUSIVE;
+		if (wait->key != key)

WARNING:LINE_SPACING: Missing a blank line after declarations
#176: FILE: mm/filemap.c:304:
+	unsigned long key = (unsigned long)page + bit;
+	return &zone->wait_table[hash_long(key, zone->wait_table_bits)];

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000284043.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 7 warnings, 4 checks, 167 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000284043.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
