WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
diff -ruN linux-2.6.7-rc1-mm1/drivers/Makefile linux-2.6.7-rc1-mm1.perfctr-2.7.3.core/drivers/Makefile

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#119: FILE: drivers/perfctr/cpumask.h:1:
+/* $Id: cpumask.h,v 1.7 2004/05/12 19:59:01 mikpe Exp $

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#119: FILE: drivers/perfctr/cpumask.h:1:
+/* $Id: cpumask.h,v 1.7 2004/05/12 19:59:01 mikpe Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#135: FILE: drivers/perfctr/cpumask.h:17:
+/* `perfctr_cpus_forbidden_mask' used to be defined in <asm/perfctr.h>,
+   but cpumask_t compatibility issues forced it to be moved here. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#135: FILE: drivers/perfctr/cpumask.h:17:
+   but cpumask_t compatibility issues forced it to be moved here. */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#147: FILE: drivers/perfctr/init.c:1:
+/* $Id: init.c,v 1.76 2004/05/31 18:18:55 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#147: FILE: drivers/perfctr/init.c:1:
+/* $Id: init.c,v 1.76 2004/05/31 18:18:55 mikpe Exp $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#159: FILE: drivers/perfctr/init.c:13:
+#include <asm/uaccess.h>

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#174: FILE: drivers/perfctr/init.c:28:
+	const unsigned int k_nrwords = PERFCTR_CPUMASK_NRLONGS*(sizeof(long)/sizeof(int));
 	                                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#174: FILE: drivers/perfctr/init.c:28:
+	const unsigned int k_nrwords = PERFCTR_CPUMASK_NRLONGS*(sizeof(long)/sizeof(int));
 	                                                                    ^

ERROR:SPACING: space required before the open parenthesis '('
#184: FILE: drivers/perfctr/init.c:38:
+	for(ui = 0, ki = 0; ki < PERFCTR_CPUMASK_NRLONGS; ++ki) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#186: FILE: drivers/perfctr/init.c:40:
+		unsigned long mask = cpus_addr(*cpus)[ki];
+		for(j = 0; j < sizeof(long)/sizeof(int); ++j) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#186: FILE: drivers/perfctr/init.c:40:
+		for(j = 0; j < sizeof(long)/sizeof(int); ++j) {
 		                           ^

ERROR:SPACING: space required before the open parenthesis '('
#186: FILE: drivers/perfctr/init.c:40:
+		for(j = 0; j < sizeof(long)/sizeof(int); ++j) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#190: FILE: drivers/perfctr/init.c:44:
+			mask = (mask >> (8*sizeof(int)-1)) >> 1;
 			                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#190: FILE: drivers/perfctr/init.c:44:
+			mask = (mask >> (8*sizeof(int)-1)) >> 1;
 			                              ^

WARNING:SIZEOF_PARENTHESIS: sizeof perfctr_info should be sizeof(perfctr_info)
#200: FILE: drivers/perfctr/init.c:54:
+	if (infop && copy_to_user(infop, &perfctr_info, sizeof perfctr_info))

WARNING:LINE_SPACING: Missing a blank line after declarations
#205: FILE: drivers/perfctr/init.c:59:
+		int err = cpus_copy_to_user(&cpus, cpusp);
+		if (err)

WARNING:LINE_SPACING: Missing a blank line after declarations
#211: FILE: drivers/perfctr/init.c:65:
+		int err = cpus_copy_to_user(&cpus, forbiddenp);
+		if (err)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#223: FILE: drivers/perfctr/init.c:77:
+		printk(KERN_INFO "perfctr: not supported by this processor\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#229: FILE: drivers/perfctr/init.c:83:
+	printk(KERN_INFO "perfctr: driver %s, cpu type %s at %u kHz\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#248: FILE: drivers/perfctr/version.h:1:
+#define VERSION "2.7.3"

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#253: FILE: include/linux/perfctr.h:1:
+/* $Id: perfctr.h,v 1.78 2004/05/31 20:45:51 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#253: FILE: include/linux/perfctr.h:1:
+/* $Id: perfctr.h,v 1.78 2004/05/31 20:45:51 mikpe Exp $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#283: FILE: include/linux/perfctr.h:31:
+/* abi_version values: Lower 16 bits contain the CPU data version, upper
+   16 bits contain the API version. Each half has a major version in its

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#284: FILE: include/linux/perfctr.h:32:
+   upper 8 bits, and a minor version in its lower 8 bits. */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#286: FILE: include/linux/perfctr.h:34:
+#define PERFCTR_ABI_VERSION	((PERFCTR_API_VERSION<<16)|PERFCTR_CPU_VERSION)
                            	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#286: FILE: include/linux/perfctr.h:34:
+#define PERFCTR_ABI_VERSION	((PERFCTR_API_VERSION<<16)|PERFCTR_CPU_VERSION)
                            	                          ^

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#316: FILE: include/linux/perfctr.h:64:
+asmlinkage long sys_perfctr_info(struct perfctr_info*, struct perfctr_cpu_mask*, struct perfctr_cpu_mask*);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#317: FILE: include/linux/perfctr.h:65:
+asmlinkage long sys_vperfctr_open(int tid, int creat);
                                                ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#335: FILE: include/linux/perfctr.h:83:
+extern struct vperfctr *__vperfctr_copy(struct vperfctr*);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#335: FILE: include/linux/perfctr.h:83:
+extern struct vperfctr *__vperfctr_copy(struct vperfctr*);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vperfctr*' should also have an identifier name
#335: FILE: include/linux/perfctr.h:83:
+extern struct vperfctr *__vperfctr_copy(struct vperfctr*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#336: FILE: include/linux/perfctr.h:84:
+extern void __vperfctr_exit(struct vperfctr*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#336: FILE: include/linux/perfctr.h:84:
+extern void __vperfctr_exit(struct vperfctr*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vperfctr*' should also have an identifier name
#336: FILE: include/linux/perfctr.h:84:
+extern void __vperfctr_exit(struct vperfctr*);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#337: FILE: include/linux/perfctr.h:85:
+extern void __vperfctr_suspend(struct vperfctr*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#337: FILE: include/linux/perfctr.h:85:
+extern void __vperfctr_suspend(struct vperfctr*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vperfctr*' should also have an identifier name
#337: FILE: include/linux/perfctr.h:85:
+extern void __vperfctr_suspend(struct vperfctr*);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#338: FILE: include/linux/perfctr.h:86:
+extern void __vperfctr_resume(struct vperfctr*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#338: FILE: include/linux/perfctr.h:86:
+extern void __vperfctr_resume(struct vperfctr*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vperfctr*' should also have an identifier name
#338: FILE: include/linux/perfctr.h:86:
+extern void __vperfctr_resume(struct vperfctr*);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#339: FILE: include/linux/perfctr.h:87:
+extern void __vperfctr_sample(struct vperfctr*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#339: FILE: include/linux/perfctr.h:87:
+extern void __vperfctr_sample(struct vperfctr*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vperfctr*' should also have an identifier name
#339: FILE: include/linux/perfctr.h:87:
+extern void __vperfctr_sample(struct vperfctr*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#340: FILE: include/linux/perfctr.h:88:
+extern void __vperfctr_set_cpus_allowed(struct task_struct*, struct vperfctr*, cpumask_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct*' should also have an identifier name
#340: FILE: include/linux/perfctr.h:88:
+extern void __vperfctr_set_cpus_allowed(struct task_struct*, struct vperfctr*, cpumask_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vperfctr*' should also have an identifier name
#340: FILE: include/linux/perfctr.h:88:
+extern void __vperfctr_set_cpus_allowed(struct task_struct*, struct vperfctr*, cpumask_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'cpumask_t' should also have an identifier name
#340: FILE: include/linux/perfctr.h:88:
+extern void __vperfctr_set_cpus_allowed(struct task_struct*, struct vperfctr*, cpumask_t);

WARNING:LINE_SPACING: Missing a blank line after declarations
#350: FILE: include/linux/perfctr.h:98:
+	struct vperfctr *perfctr;
+	perfctr = thread->perfctr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#358: FILE: include/linux/perfctr.h:106:
+	struct vperfctr *perfctr;
+	perfctr = prev->perfctr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#366: FILE: include/linux/perfctr.h:114:
+	struct vperfctr *perfctr;
+	perfctr = next->perfctr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#374: FILE: include/linux/perfctr.h:122:
+	struct vperfctr *perfctr;
+	perfctr = thread->perfctr;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000278263.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 33 warnings, 13 checks, 382 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000278263.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
