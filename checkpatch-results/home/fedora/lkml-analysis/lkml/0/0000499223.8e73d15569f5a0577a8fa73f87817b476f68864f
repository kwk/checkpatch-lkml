WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
diff -urN S15-pre5/arch/alpha/kernel/setup.c S15-pre5-current/arch/alpha/kernel/setup.c

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#95: FILE: arch/s390/kernel/setup.c:488:
+	unsigned n = v;

WARNING:SPLIT_STRING: quoted string split across lines
#117: FILE: arch/s390/kernel/setup.c:499:
+		seq_printf(m, "processor %i: "
+			       "version = %02X,  "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#118: FILE: arch/s390/kernel/setup.c:500:
+			       "version = %02X,  "
+			       "identification = %06X,  "

WARNING:SPLIT_STRING: quoted string split across lines
#119: FILE: arch/s390/kernel/setup.c:501:
+			       "identification = %06X,  "
+			       "machine = %04X\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: arch/s390/kernel/setup.c:506:
+        return 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: arch/s390/kernel/setup.c:506:
+        return 0;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#138: FILE: arch/s390/kernel/setup.c:511:
+	return *pos <= NR_CPUS ? (void)(*pos+1) : NULL;
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#138: FILE: arch/s390/kernel/setup.c:511:
+	return *pos <= NR_CPUS ? (void)(*pos+1) : NULL;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#140: FILE: arch/s390/kernel/setup.c:513:
+}
+static void *c_next(struct seq_file *m, void *v, loff_t *pos)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#145: FILE: arch/s390/kernel/setup.c:518:
+}
+static void c_stop(struct seq_file *m, void *v)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#148: FILE: arch/s390/kernel/setup.c:521:
+}
+struct seq_operations cpuinfo_op = {

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#148: FILE: arch/s390/kernel/setup.c:521:
+struct seq_operations cpuinfo_op = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#149: FILE: arch/s390/kernel/setup.c:522:
+	start:	c_start,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#150: FILE: arch/s390/kernel/setup.c:523:
+	next:	c_next,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#150: FILE: arch/s390/kernel/setup.c:523:
+	next:	c_next,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#151: FILE: arch/s390/kernel/setup.c:524:
+	stop:	c_stop,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#151: FILE: arch/s390/kernel/setup.c:524:
+	stop:	c_stop,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#152: FILE: arch/s390/kernel/setup.c:525:
+	show:	show_cpuinfo,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#152: FILE: arch/s390/kernel/setup.c:525:
+	show:	show_cpuinfo,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#189: FILE: arch/s390x/kernel/setup.c:477:
+	unsigned n = v;

WARNING:SPLIT_STRING: quoted string split across lines
#211: FILE: arch/s390x/kernel/setup.c:488:
+		seq_printf(m, "processor %i: "
+				"version = %02X,  "

WARNING:SPLIT_STRING: quoted string split across lines
#212: FILE: arch/s390x/kernel/setup.c:489:
+				"version = %02X,  "
+				"identification = %06X,  "

WARNING:SPLIT_STRING: quoted string split across lines
#213: FILE: arch/s390x/kernel/setup.c:490:
+				"identification = %06X,  "
+				"machine = %04X\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: arch/s390x/kernel/setup.c:495:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: arch/s390x/kernel/setup.c:495:
+        return 0;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#232: FILE: arch/s390x/kernel/setup.c:500:
+	return *pos <= NR_CPUS ? (void)(*pos+1) : NULL;
 	                                    ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#232: FILE: arch/s390x/kernel/setup.c:500:
+	return *pos <= NR_CPUS ? (void)(*pos+1) : NULL;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#234: FILE: arch/s390x/kernel/setup.c:502:
+}
+static void *c_next(struct seq_file *m, void *v, loff_t *pos)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#239: FILE: arch/s390x/kernel/setup.c:507:
+}
+static void c_stop(struct seq_file *m, void *v)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#242: FILE: arch/s390x/kernel/setup.c:510:
+}
+struct seq_operations cpuinfo_op = {

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#242: FILE: arch/s390x/kernel/setup.c:510:
+struct seq_operations cpuinfo_op = {

WARNING:INDENTED_LABEL: labels should not be indented
#243: FILE: arch/s390x/kernel/setup.c:511:
+	start:	c_start,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#244: FILE: arch/s390x/kernel/setup.c:512:
+	next:	c_next,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#244: FILE: arch/s390x/kernel/setup.c:512:
+	next:	c_next,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#245: FILE: arch/s390x/kernel/setup.c:513:
+	stop:	c_stop,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#245: FILE: arch/s390x/kernel/setup.c:513:
+	stop:	c_stop,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#246: FILE: arch/s390x/kernel/setup.c:514:
+	show:	show_cpuinfo,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#246: FILE: arch/s390x/kernel/setup.c:514:
+	show:	show_cpuinfo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: arch/sh/kernel/setup.c:531:
+	seq_printf(m, "bogomips\t: %lu.%02lu\n\n",
 		     loops_per_jiffy/(500000/HZ),

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#302: FILE: arch/sh/kernel/setup.c:551:
+	return (void*)(*pos == 0);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#304: FILE: arch/sh/kernel/setup.c:553:
 }
+static void *c_next(struct seq_file *m, void *v, loff_t *pos)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#308: FILE: arch/sh/kernel/setup.c:557:
+}
+static void c_stop(struct seq_file *m, void *v)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#311: FILE: arch/sh/kernel/setup.c:560:
+}
+struct seq_operations cpuinfo_op = {

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#311: FILE: arch/sh/kernel/setup.c:560:
+struct seq_operations cpuinfo_op = {

WARNING:INDENTED_LABEL: labels should not be indented
#312: FILE: arch/sh/kernel/setup.c:561:
+	start:	c_start,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#313: FILE: arch/sh/kernel/setup.c:562:
+	next:	c_next,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#313: FILE: arch/sh/kernel/setup.c:562:
+	next:	c_next,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#314: FILE: arch/sh/kernel/setup.c:563:
+	stop:	c_stop,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#314: FILE: arch/sh/kernel/setup.c:563:
+	stop:	c_stop,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#315: FILE: arch/sh/kernel/setup.c:564:
+	show:	show_cpuinfo,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#315: FILE: arch/sh/kernel/setup.c:564:
+	show:	show_cpuinfo,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#349: FILE: drivers/pci/proc.c:320:
+}
+static void *pci_seq_next(struct seq_file *m, void *v, loff_t *pos)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#355: FILE: drivers/pci/proc.c:326:
+}
+static void pci_seq_stop(struct seq_file *m, void *v)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#379: FILE: drivers/pci/proc.c:344:
+	seq_printf(m, "%02x%02x\t%04x%04x\t%x",
 			dev->bus->number,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#414: FILE: drivers/pci/proc.c:350:
+	for(i=0; i<7; i++)
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#414: FILE: drivers/pci/proc.c:350:
+	for(i=0; i<7; i++)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#414: FILE: drivers/pci/proc.c:350:
+	for(i=0; i<7; i++)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#416: FILE: drivers/pci/proc.c:352:
+		seq_printf(m, LONG_FORMAT,
+			dev->resource[i].start |

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#418: FILE: drivers/pci/proc.c:354:
+	for(i=0; i<7; i++)
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#418: FILE: drivers/pci/proc.c:354:
+	for(i=0; i<7; i++)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#418: FILE: drivers/pci/proc.c:354:
+	for(i=0; i<7; i++)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#420: FILE: drivers/pci/proc.c:356:
+		seq_printf(m, LONG_FORMAT,
+			dev->resource[i].start < dev->resource[i].end ?

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#429: FILE: drivers/pci/proc.c:365:
+static struct seq_operations proc_bus_pci_devices_op = {

WARNING:INDENTED_LABEL: labels should not be indented
#430: FILE: drivers/pci/proc.c:366:
+	start:	pci_seq_start,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#431: FILE: drivers/pci/proc.c:367:
+	next:	pci_seq_next,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#431: FILE: drivers/pci/proc.c:367:
+	next:	pci_seq_next,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#432: FILE: drivers/pci/proc.c:368:
+	stop:	pci_seq_stop,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#432: FILE: drivers/pci/proc.c:368:
+	stop:	pci_seq_stop,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#433: FILE: drivers/pci/proc.c:369:
+	show:	show_device
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#433: FILE: drivers/pci/proc.c:369:
+	show:	show_device

WARNING:LINE_SPACING: Missing a blank line after declarations
#461: FILE: drivers/pci/proc.c:426:
+	struct proc_dir_entry *de = bus->procdir;
+	if (de)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#499: FILE: drivers/pci/proc.c:464:
+	seq_printf(m, "  Bus %2d, device %3d, function %2d:\n",
+	       dev->bus->number, PCI_SLOT(dev->devfn), PCI_FUNC(dev->devfn));

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#522: FILE: drivers/pci/proc.c:476:
+		seq_printf(m, "      Master Capable.  ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: drivers/pci/proc.c:500:
+			seq_printf(m, "      I/O at 0x%lx [0x%lx].\n",
+				base, end);

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#588: FILE: drivers/pci/proc.c:525:
+static struct seq_operations proc_pci_op = {

WARNING:INDENTED_LABEL: labels should not be indented
#589: FILE: drivers/pci/proc.c:526:
+	start:	pci_seq_start,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#590: FILE: drivers/pci/proc.c:527:
+	next:	pci_seq_next,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#590: FILE: drivers/pci/proc.c:527:
+	next:	pci_seq_next,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#591: FILE: drivers/pci/proc.c:528:
+	stop:	pci_seq_stop,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#591: FILE: drivers/pci/proc.c:528:
+	stop:	pci_seq_stop,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#592: FILE: drivers/pci/proc.c:529:
+	show:	show_dev_config
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#592: FILE: drivers/pci/proc.c:529:
+	show:	show_dev_config

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#622: FILE: drivers/pci/proc.c:536:
 }
+static struct file_operations proc_bus_pci_dev_operations = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#622: FILE: drivers/pci/proc.c:536:
+static struct file_operations proc_bus_pci_dev_operations = {

WARNING:INDENTED_LABEL: labels should not be indented
#623: FILE: drivers/pci/proc.c:537:
+	open:		proc_bus_pci_dev_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#624: FILE: drivers/pci/proc.c:538:
+	read:		seq_read,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#624: FILE: drivers/pci/proc.c:538:
+	read:		seq_read,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#625: FILE: drivers/pci/proc.c:539:
+	llseek:		seq_lseek,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#625: FILE: drivers/pci/proc.c:539:
+	llseek:		seq_lseek,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#626: FILE: drivers/pci/proc.c:540:
+	release:	seq_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#626: FILE: drivers/pci/proc.c:540:
+	release:	seq_release,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#628: FILE: drivers/pci/proc.c:542:
+};
+static int proc_pci_open(struct inode *inode, struct file *file)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#632: FILE: drivers/pci/proc.c:546:
+}
+static struct file_operations proc_pci_operations = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#632: FILE: drivers/pci/proc.c:546:
+static struct file_operations proc_pci_operations = {

WARNING:INDENTED_LABEL: labels should not be indented
#633: FILE: drivers/pci/proc.c:547:
+	open:		proc_pci_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#634: FILE: drivers/pci/proc.c:548:
+	read:		seq_read,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#634: FILE: drivers/pci/proc.c:548:
+	read:		seq_read,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#635: FILE: drivers/pci/proc.c:549:
+	llseek:		seq_lseek,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#635: FILE: drivers/pci/proc.c:549:
+	llseek:		seq_lseek,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#636: FILE: drivers/pci/proc.c:550:
+	release:	seq_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#636: FILE: drivers/pci/proc.c:550:
+	release:	seq_release,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000499223.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 30 errors, 50 warnings, 22 checks, 582 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000499223.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
