WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
diff -urN linux-2.5.67/drivers/char/tty_io.c linux-2.5.67-s390/drivers/char/tty_io.c

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#45: FILE: drivers/char/tty_io.c:154:
+extern void sclp_tty_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:BRACES: braces {} should be used on all arms of this statement
#171: FILE: drivers/s390/char/sclp.c:119:
+	if (req) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#173: FILE: drivers/s390/char/sclp.c:121:
+		if (rc) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#176: FILE: drivers/s390/char/sclp.c:124:
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#178: FILE: drivers/s390/char/sclp.c:126:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "req->callback"
#181: FILE: drivers/s390/char/sclp.c:129:
+	if (rc == -EIO && req->callback != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "t->receiver_fn"
#191: FILE: drivers/s390/char/sclp.c:152:
+				if (t->receiver_fn != NULL) {

CHECK:SPACING: No space is necessary after a cast
#246: FILE: drivers/s390/char/sclp.c:295:
+			if (finished_sccb == (u32)(addr_t) tmp->sccb) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "req"
#265: FILE: drivers/s390/char/sclp.c:307:
+	if (req != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "req->callback"
#267: FILE: drivers/s390/char/sclp.c:309:
+		if (req->callback != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "req->callback"
#286: FILE: drivers/s390/char/sclp.c:369:
+		if (req->callback != NULL)

CHECK:SPACING: No space is necessary after a cast
#332: FILE: drivers/s390/char/sclp.c:745:
+	evbuf = (struct evbuf_header *) (sccb + 1);

CHECK:SPACING: No space is necessary after a cast
#339: FILE: drivers/s390/char/sclp.c:752:
+			memcpy((void *) evbuf,

CHECK:SPACING: No space is necessary after a cast
#340: FILE: drivers/s390/char/sclp.c:753:
+			       (void *) ((addr_t) evbuf + evbuf->length),

CHECK:SPACING: No space is necessary after a cast
#345: FILE: drivers/s390/char/sclp.c:758:
+					((addr_t) evbuf + evbuf->length);

CHECK:SPACING: No space is necessary after a cast
#439: FILE: drivers/s390/char/sclp_cpi.c:133:
+	sccb = (struct cpi_sccb *) __get_free_page(GFP_KERNEL | GFP_DMA);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "callback"
#511: FILE: drivers/s390/char/sclp_rw.c:471:
+		if (callback != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "callback"
#523: FILE: drivers/s390/char/sclp_rw.c:484:
+		if (callback != NULL)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#524: FILE: drivers/s390/char/sclp_rw.c:485:
+			callback(buffer, -ENOSYS);

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:BRACES: braces {} are not necessary for single statement blocks
#592: FILE: drivers/s390/char/sclp_tty.c:318:
+	if (buf != NULL) {
+		__sclp_ttybuf_emit(buf);
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buf"
#592: FILE: drivers/s390/char/sclp_tty.c:318:
+	if (buf != NULL) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#625: FILE: drivers/s390/char/sclp_tty.c:478:
+sclp_tty_input(unsigned char* buf, unsigned int count)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#640: FILE: drivers/s390/char/sclp_tty.c:724:
+		printk(KERN_ERR SCLP_TTY_PRINT_HEADER

WARNING:SPLIT_STRING: quoted string split across lines
#642: FILE: drivers/s390/char/sclp_tty.c:726:
+		       "could not register tty - "
+		       "sclp_rw_init returned %d\n", rc);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#649: FILE: drivers/s390/char/sclp_tty.c:732:
+		page = (void *) get_zeroed_page(GFP_KERNEL | GFP_DMA);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#670: FILE: drivers/s390/char/sclp_tty.c:815:
+		printk(KERN_ERR SCLP_TTY_PRINT_HEADER

WARNING:SPLIT_STRING: quoted string split across lines
#672: FILE: drivers/s390/char/sclp_tty.c:817:
+		       "could not register tty - "
+		       "sclp_drv_register returned %d\n", rc);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378067.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 8 warnings, 19 checks, 575 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378067.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
