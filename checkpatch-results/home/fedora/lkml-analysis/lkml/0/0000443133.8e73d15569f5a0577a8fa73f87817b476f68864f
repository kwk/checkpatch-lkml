WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#	           ChangeSet	1.536   -> 1.536.1.1

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#	drivers/char/nvram.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
# 02/07/29	torvalds@penguin.transmeta.com	1.537

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
# Chris Wright points out that this was also missed in the

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
# file locking LSM update

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
# 02/07/29	torvalds@home.transmeta.com	1.538

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
# Merge http://linux-isdn.bkbits.net/linux-2.5.make

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
# into home.transmeta.com:/home/torvalds/v2.5/linux

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
# 02/07/29	th122948@scl1.sfbay.sun.com	1.536.1.1

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
# Lindent drivers/char/nvram.c in anticipation of more patching

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#72: 
--- a/drivers/char/nvram.c	Tue Jul 30 15:32:37 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#110: FILE: drivers/char/nvram.c:73:
+#define RTC_PORT(x)		(TT_RTC_BAS + 2*(x))
                    		               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: drivers/char/nvram.c:112:
+static spinlock_t nvram_open_lock = SPIN_LOCK_UNLOCKED; /* guards $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#134: FILE: drivers/char/nvram.c:114:
+							 * nvram_open_mode */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#139: FILE: drivers/char/nvram.c:119:
+					 * NVRAM byte */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#140: FILE: drivers/char/nvram.c:120:
+#define	NVRAM_BYTES		128-RTC_FIRST_BYTE /* number of NVRAM bytes */
        	           		   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#140: FILE: drivers/char/nvram.c:120:
+#define	NVRAM_BYTES		128-RTC_FIRST_BYTE /* number of NVRAM bytes */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: drivers/char/nvram.c:127:
+static int mach_proc_infos(unsigned char *contents, char *buffer, int *len,
+    off_t *begin, off_t offset, int size);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/char/nvram.c:127:
+    off_t *begin, off_t offset, int size);$

WARNING:INLINE: plain inline is preferred over __inline__
#165: FILE: drivers/char/nvram.c:136:
+static __inline__ unsigned char

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#169: FILE: drivers/char/nvram.c:139:
+	return (CMOS_READ(RTC_FIRST_BYTE + i));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:INLINE: plain inline is preferred over __inline__
#173: FILE: drivers/char/nvram.c:142:
+static __inline__ void

WARNING:INLINE: plain inline is preferred over __inline__
#181: FILE: drivers/char/nvram.c:148:
+static __inline__ int

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#185: FILE: drivers/char/nvram.c:151:
+	return (mach_check_checksum());

WARNING:INLINE: plain inline is preferred over __inline__
#189: FILE: drivers/char/nvram.c:154:
+static __inline__ void

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#212: FILE: drivers/char/nvram.c:182:
+	return (c);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#243: FILE: drivers/char/nvram.c:205:
+	return (rv);

WARNING:INDENTED_LABEL: labels should not be indented
#324: FILE: drivers/char/nvram.c:267:
+      checksum_err:

WARNING:INDENTED_LABEL: labels should not be indented
#367: FILE: drivers/char/nvram.c:299:
+      checksum_err:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: drivers/char/nvram.c:306:
+nvram_ioctl(struct inode *inode, struct file *file,
+    unsigned int cmd, unsigned long arg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/char/nvram.c:306:
+    unsigned int cmd, unsigned long arg)$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#384: FILE: drivers/char/nvram.c:311:
+	switch (cmd) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#407: FILE: drivers/char/nvram.c:323:
+		return (0);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#411: FILE: drivers/char/nvram.c:327:
+				 * somehow...) */

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#422: FILE: drivers/char/nvram.c:334:
+		return (0);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#457: FILE: drivers/char/nvram.c:358:
+	return (0);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#474: FILE: drivers/char/nvram.c:371:
+	return (0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#483: FILE: drivers/char/nvram.c:377:
+nvram_read_proc(char *buffer, char **start, off_t offset,
+    int size, int *eof, void *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: drivers/char/nvram.c:377:
+    int size, int *eof, void *data)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: drivers/char/nvram.c:385:
+nvram_read_proc(char *buffer, char **start, off_t offset,
+    int size, int *eof, void *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: drivers/char/nvram.c:385:
+    int size, int *eof, void *data)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#531: FILE: drivers/char/nvram.c:407:
+#define	PRINT_PROC(fmt,args...)					\
        	              ^

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#531: FILE: drivers/char/nvram.c:407:
+#define	PRINT_PROC(fmt,args...)					\
+	do {							\
 		*len += sprintf( buffer+*len, fmt, ##args );	\
+		if (*begin + *len > offset + size)		\
+			return( 0 );				\
+		if (*begin + *len < offset) {			\
+			*begin += *len;				\
+			*len = 0;				\
+		}						\
 	} while(0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#541: FILE: drivers/char/nvram.c:411:
+			return( 0 );				\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#541: FILE: drivers/char/nvram.c:411:
+			return( 0 );				\

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#569: FILE: drivers/char/nvram.c:447:
+		printk(KERN_ERR "nvram: can't misc_register on minor=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#570: FILE: drivers/char/nvram.c:448:
+		printk(KERN_ERR "nvram: can't misc_register on minor=%d\n",
+		    NVRAM_MINOR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#575: FILE: drivers/char/nvram.c:452:
+	if (!create_proc_read_entry("driver/nvram", 0, 0, nvram_read_proc,
+		NULL)) {

WARNING:INDENTED_LABEL: labels should not be indented
#586: FILE: drivers/char/nvram.c:459:
+      out:

WARNING:INDENTED_LABEL: labels should not be indented
#588: FILE: drivers/char/nvram.c:461:
+      outmisc:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#661: FILE: drivers/char/nvram.c:523:
+pc_proc_infos(unsigned char *nvram, char *buffer, int *len,
+    off_t *begin, off_t offset, int size)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: drivers/char/nvram.c:523:
+    off_t *begin, off_t offset, int size)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#679: FILE: drivers/char/nvram.c:535:
+	PRINT_PROC("# floppies     : %d\n",
+	    (nvram[6] & 1) ? (nvram[6] >> 6) + 1 : 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#684: FILE: drivers/char/nvram.c:538:
+	if (type < sizeof (floppy_types) / sizeof (*floppy_types))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#684: FILE: drivers/char/nvram.c:538:
+	if (type < sizeof (floppy_types) / sizeof (*floppy_types))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#694: FILE: drivers/char/nvram.c:544:
+	if (type < sizeof (floppy_types) / sizeof (*floppy_types))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#694: FILE: drivers/char/nvram.c:544:
+	if (type < sizeof (floppy_types) / sizeof (*floppy_types))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#721: FILE: drivers/char/nvram.c:564:
+	PRINT_PROC("HD type 48 data: %d/%d/%d C/H/S, precomp %d, lz %d\n",
+	    nvram[18] | (nvram[19] << 8),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#725: FILE: drivers/char/nvram.c:568:
+	PRINT_PROC("HD type 49 data: %d/%d/%d C/H/S, precomp %d, lz %d\n",
+	    nvram[39] | (nvram[40] << 8),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#731: FILE: drivers/char/nvram.c:574:
+	PRINT_PROC("Extended memory: %d kB (configured), %d kB (tested)\n",
+	    nvram[9] | (nvram[10] << 8), nvram[34] | (nvram[35] << 8));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#758: FILE: drivers/char/nvram.c:579:
+	PRINT_PROC("FPU            : %sinstalled\n",
+	    (nvram[6] & 2) ? "" : "not ");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#760: FILE: drivers/char/nvram.c:581:
+	return (1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#783: FILE: drivers/char/nvram.c:598:
+	return (nvram_read_int(ATARI_CKS_LOC) == (~sum & 0xff) &&
+	    nvram_read_int(ATARI_CKS_LOC + 1) == (sum & 0xff));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#813: FILE: drivers/char/nvram.c:657:
+atari_proc_infos(unsigned char *nvram, char *buffer, int *len,
+    off_t *begin, off_t offset, int size)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#813: FILE: drivers/char/nvram.c:657:
+    off_t *begin, off_t offset, int size)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#840: FILE: drivers/char/nvram.c:676:
+	PRINT_PROC("SCSI arbitration : %s\n",
+	    (nvram[16] & 0x80) ? "on" : "off");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#876: FILE: drivers/char/nvram.c:699:
+	PRINT_PROC(dateformat[nvram[8] & 7],
+	    nvram[9] ? nvram[9] : '/', nvram[9] ? nvram[9] : '/');

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#886: FILE: drivers/char/nvram.c:706:
+		PRINT_PROC("%ds%s\n", nvram[10],
+		    nvram[10] < 8 ? ", no memory test" : "");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#902: FILE: drivers/char/nvram.c:710:
+	PRINT_PROC("Video mode       : %s colors, %d columns, %s %s monitor\n",
+	    colors[vmode & 7],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#906: FILE: drivers/char/nvram.c:714:
+	PRINT_PROC("                   %soverscan, compat. mode %s%s\n",
+	    vmode & 64 ? "" : "no ",

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#911: FILE: drivers/char/nvram.c:719:
+	return (1);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000443133.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 45 warnings, 22 checks, 834 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000443133.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
