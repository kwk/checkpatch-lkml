WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#82: 
diff -Nru a/Documentation/filesystems/ntfs.txt b/Documentation/filesystems/ntfs.txt

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#83: 
--- a/Documentation/filesystems/ntfs.txt	Sun Jun 30 13:16:02 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#154: FILE: fs/ntfs/Makefile:8:
+EXTRA_CFLAGS = -DNTFS_VERSION=\"2.0.11\"

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

CHECK:CAMELCASE: Avoid CamelCase: <NInoSetAttrList>
#230: FILE: fs/ntfs/inode.c:362:
+		NInoSetAttrList(ni);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPLIT_STRING: quoted string split across lines
#239: FILE: fs/ntfs/inode.c:367:
 			ntfs_error(vi->i_sb, "Attribute list attribute is "
+					"compressed/encrypted/sparse. Not "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#240: FILE: fs/ntfs/inode.c:368:
+					"compressed/encrypted/sparse. Not "
+					"allowed. Corrupt inode. You should "

WARNING:SPLIT_STRING: quoted string split across lines
#241: FILE: fs/ntfs/inode.c:369:
+					"allowed. Corrupt inode. You should "
+					"run chkdsk.");

CHECK:CAMELCASE: Avoid CamelCase: <NInoSetAttrListNonResident>
#250: FILE: fs/ntfs/inode.c:382:
+			NInoSetAttrListNonResident(ni);

CHECK:CAMELCASE: Avoid CamelCase: <NInoSetCompressed>
#259: FILE: fs/ntfs/inode.c:464:
+			NInoSetCompressed(ni);

CHECK:CAMELCASE: Avoid CamelCase: <NInoSetEncrypted>
#268: FILE: fs/ntfs/inode.c:472:
+			NInoSetEncrypted(ni);

CHECK:CAMELCASE: Avoid CamelCase: <NInoSetSparse>
#271: FILE: fs/ntfs/inode.c:475:
+			NInoSetSparse(ni);

CHECK:CAMELCASE: Avoid CamelCase: <NInoSetMstProtected>
#281: FILE: fs/ntfs/inode.c:539:
+		NInoSetMstProtected(ni);

CHECK:CAMELCASE: Avoid CamelCase: <NInoSetIndexAllocPresent>
#292: FILE: fs/ntfs/inode.c:549:
+		NInoSetIndexAllocPresent(ni);

WARNING:SPLIT_STRING: quoted string split across lines
#302: FILE: fs/ntfs/inode.c:571:
+			ntfs_error(vi->i_sb, "$INDEX_ALLOCATION attribute "
+					"is sparse.");

WARNING:SPLIT_STRING: quoted string split across lines
#316: FILE: fs/ntfs/inode.c:602:
 			ntfs_error(vi->i_sb, "$BITMAP attribute is compressed "
+					"and/or encrypted and/or sparse.");

CHECK:CAMELCASE: Avoid CamelCase: <NInoSetBmpNonResident>
#321: FILE: fs/ntfs/inode.c:606:
+			NInoSetBmpNonResident(ni);

CHECK:CAMELCASE: Avoid CamelCase: <NInoSetNonResident>
#343: FILE: fs/ntfs/inode.c:700:
+			NInoSetNonResident(ni);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#356: FILE: fs/ntfs/inode.c:732:
+						ctx->attr->_ANR(

WARNING:SPLIT_STRING: quoted string split across lines
#402: FILE: fs/ntfs/inode.c:970:
 			ntfs_error(sb, "Attribute list attribute is "
+					"compressed/encrypted/sparse. Not "

WARNING:SPLIT_STRING: quoted string split across lines
#403: FILE: fs/ntfs/inode.c:971:
+					"compressed/encrypted/sparse. Not "
+					"allowed. $MFT is corrupt. You should "

WARNING:SPLIT_STRING: quoted string split across lines
#404: FILE: fs/ntfs/inode.c:972:
+					"allowed. $MFT is corrupt. You should "
+					"run chkdsk.");

WARNING:SPLIT_STRING: quoted string split across lines
#429: FILE: fs/ntfs/inode.c:1110:
+			ntfs_error(sb, "$MFT must be uncompressed, "
+					"non-sparse, and unencrypted but a "

WARNING:SPLIT_STRING: quoted string split across lines
#430: FILE: fs/ntfs/inode.c:1111:
+					"non-sparse, and unencrypted but a "
+					"compressed/sparse/encrypted extent "

WARNING:SPLIT_STRING: quoted string split across lines
#431: FILE: fs/ntfs/inode.c:1112:
+					"compressed/sparse/encrypted extent "
+					"was found. $MFT is corrupt. Run "

WARNING:SPLIT_STRING: quoted string split across lines
#432: FILE: fs/ntfs/inode.c:1113:
+					"was found. $MFT is corrupt. Run "
+					"chkdsk.");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#471: FILE: fs/ntfs/inode.c:1359:
+		BUG_ON(!ni->name);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#522: FILE: fs/ntfs/inode.h:42:
+				   See ntfs_inode_state_bits below. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#557: FILE: fs/ntfs/inode.h:70:
+				   run_list.rl is always NULL.*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#599: FILE: fs/ntfs/inode.h:121:
+			   inodes describing an attribute this is -1. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#610: FILE: fs/ntfs/inode.h:132:
+						   the attribute belongs. */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#622: FILE: fs/ntfs/inode.h:144:
+typedef enum {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#626: FILE: fs/ntfs/inode.h:148:
+	NI_AttrListNonResident,	/* 1: Attribute list is non-resident. Implies
+				      NI_AttrList is set. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#626: FILE: fs/ntfs/inode.h:148:
+				      NI_AttrList is set. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#629: FILE: fs/ntfs/inode.h:151:
+	NI_Attr,		/* 1: Fake inode for attribute i/o.
+				   0: Real inode or extent inode. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#629: FILE: fs/ntfs/inode.h:151:
+				   0: Real inode or extent inode. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#632: FILE: fs/ntfs/inode.h:154:
+	NI_MstProtected,	/* 1: Attribute is protected by MST fixups.
+				   0: Attribute is not protected by fixups. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#632: FILE: fs/ntfs/inode.h:154:
+				   0: Attribute is not protected by fixups. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#634: FILE: fs/ntfs/inode.h:156:
+	NI_NonResident,		/* 1: Unnamed data attr is non-resident (f).
+				   1: Attribute is non-resident (a). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#634: FILE: fs/ntfs/inode.h:156:
+				   1: Attribute is non-resident (a). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#636: FILE: fs/ntfs/inode.h:158:
+	NI_IndexAllocPresent = NI_NonResident,	/* 1: $I30 index alloc attr is
+						   present (d). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#636: FILE: fs/ntfs/inode.h:158:
+						   present (d). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#638: FILE: fs/ntfs/inode.h:160:
+	NI_Compressed,		/* 1: Unnamed data attr is compressed (f).
+				   1: Create compressed files by default (d).

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#639: FILE: fs/ntfs/inode.h:161:
+				   1: Attribute is compressed (a). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#641: FILE: fs/ntfs/inode.h:163:
+	NI_Encrypted,		/* 1: Unnamed data attr is encrypted (f).
+				   1: Create encrypted files by default (d).

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#642: FILE: fs/ntfs/inode.h:164:
+				   1: Attribute is encrypted (a). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#644: FILE: fs/ntfs/inode.h:166:
+	NI_Sparse,		/* 1: Unnamed data attr is sparse (f).
+				   1: Create sparse files by default (d).

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#645: FILE: fs/ntfs/inode.h:167:
+				   1: Attribute is sparse (a). */

CHECK:CAMELCASE: Avoid CamelCase: <NIno##flag>
#660: FILE: fs/ntfs/inode.h:182:
+static inline int NIno##flag(ntfs_inode *ni)		\

CHECK:CAMELCASE: Avoid CamelCase: <NInoSet##flag>
#664: FILE: fs/ntfs/inode.h:186:
+static inline void NInoSet##flag(ntfs_inode *ni)	\

CHECK:CAMELCASE: Avoid CamelCase: <NInoClear##flag>
#668: FILE: fs/ntfs/inode.h:190:
+static inline void NInoClear##flag(ntfs_inode *ni)	\

CHECK:CAMELCASE: Avoid CamelCase: <Dirty>
#674: FILE: fs/ntfs/inode.h:196:
+NINO_FNS(Dirty)

CHECK:CAMELCASE: Avoid CamelCase: <AttrList>
#675: FILE: fs/ntfs/inode.h:197:
+NINO_FNS(AttrList)

CHECK:CAMELCASE: Avoid CamelCase: <AttrListNonResident>
#676: FILE: fs/ntfs/inode.h:198:
+NINO_FNS(AttrListNonResident)

CHECK:CAMELCASE: Avoid CamelCase: <Attr>
#677: FILE: fs/ntfs/inode.h:199:
+NINO_FNS(Attr)

CHECK:CAMELCASE: Avoid CamelCase: <MstProtected>
#678: FILE: fs/ntfs/inode.h:200:
+NINO_FNS(MstProtected)

CHECK:CAMELCASE: Avoid CamelCase: <NonResident>
#679: FILE: fs/ntfs/inode.h:201:
+NINO_FNS(NonResident)

CHECK:CAMELCASE: Avoid CamelCase: <IndexAllocPresent>
#680: FILE: fs/ntfs/inode.h:202:
+NINO_FNS(IndexAllocPresent)

CHECK:CAMELCASE: Avoid CamelCase: <Compressed>
#681: FILE: fs/ntfs/inode.h:203:
+NINO_FNS(Compressed)

CHECK:CAMELCASE: Avoid CamelCase: <Encrypted>
#682: FILE: fs/ntfs/inode.h:204:
+NINO_FNS(Encrypted)

CHECK:CAMELCASE: Avoid CamelCase: <Sparse>
#683: FILE: fs/ntfs/inode.h:205:
+NINO_FNS(Sparse)

CHECK:CAMELCASE: Avoid CamelCase: <BmpNonResident>
#684: FILE: fs/ntfs/inode.h:206:
+NINO_FNS(BmpNonResident)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#700: FILE: fs/ntfs/inode.h:238:
+extern ntfs_inode *ntfs_new_extent_inode(struct super_block *sb);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#701: FILE: fs/ntfs/inode.h:239:
+extern void ntfs_clear_extent_inode(ntfs_inode *ni);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#805: FILE: fs/ntfs/super.c:1713:
+	 * inode we have ever called iget()/iput() on, otherwise we A) leak
 	                                    ^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452963.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 37 warnings, 26 checks, 659 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452963.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
