WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#	           ChangeSet	1.1272  -> 1.1273 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#	include/asm-ia64/sn/pci/pcibr_private.h	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#	arch/ia64/sn/io/sn2/ml_iograph.c	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#	arch/ia64/sn/io/sn2/xtalk.c	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#	include/asm-ia64/sn/sgi.h	1.7     -> 1.8    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#	arch/ia64/sn/io/sn2/klconflib.c	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#	include/asm-ia64/sn/arc/hinv.h	1.4     ->         (deleted)      

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#	arch/ia64/sn/io/machvec/pci.c	1.11    -> 1.12   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#	arch/ia64/sn/io/machvec/pci_dma.c	1.16    -> 1.17   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#	include/asm-ia64/sn/klconfig.h	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#	arch/ia64/sn/io/io.c	1.8     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#	arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c	1.9     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#	arch/ia64/sn/io/platform_init/irix_io_init.c	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#	arch/ia64/sn/io/sgi_if.c	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#	arch/ia64/sn/io/sn2/shub_intr.c	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#	include/asm-ia64/sn/ioerror_handling.h	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#	arch/ia64/sn/io/sn2/shub.c	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#	arch/ia64/sn/io/hwgfs/hcl.c	1.7     -> 1.8    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#	arch/ia64/sn/io/hwgfs/labelcl.c	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#	arch/ia64/sn/io/sn2/geo_op.c	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
#	arch/ia64/sn/io/sn2/klgraph.c	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
#	arch/ia64/sn/io/drivers/ioconfig_bus.c	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
#	arch/ia64/sn/io/sn2/bte_error.c	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
#	arch/ia64/sn/io/machvec/pci_bus_cvlink.c	1.13    -> 1.14   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#	include/asm-ia64/sn/arc/types.h	1.5     ->         (deleted)      

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
# 03/10/10	pfg@attica.americas.sgi.com	1.1273

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
# Some general code clean up - nothing very interesting

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#80: 
--- a/arch/ia64/sn/io/drivers/ioconfig_bus.c	Fri Oct 10 16:40:38 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#504: FILE: arch/ia64/sn/io/sn2/ml_iograph.c:60:
+	extern void * snia_kmem_zalloc(size_t size);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#504: FILE: arch/ia64/sn/io/sn2/ml_iograph.c:60:
+	extern void * snia_kmem_zalloc(size_t size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rc != GRAPH_SUCCESS'
#532: FILE: arch/ia64/sn/io/sn2/ml_iograph.c:508:
+			if ((rc != -EEXIST) && (rc != GRAPH_SUCCESS)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:323:
+    slotp = snia_kmem_zalloc(sizeof(*slotp));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:397:
+    kfree(slotp);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#619: FILE: arch/ia64/sn/io/sn2/shub.c:206:
+        cnode = (cnodeid_t)(long)file->f_dentry->d_fsdata;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: arch/ia64/sn/io/sn2/shub.c:206:
+        cnode = (cnodeid_t)(long)file->f_dentry->d_fsdata;$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*intr_hdl)...) over kmalloc(sizeof(struct hub_intr_s)...)
#652: FILE: arch/ia64/sn/io/sn2/shub_intr.c:73:
+	intr_hdl = kmalloc(sizeof(struct hub_intr_s), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#911: FILE: include/asm-ia64/sn/ioerror_handling.h:258:
+^I^Ierror_env = snia_kmem_zalloc(sizeof(label_t));^I $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#937: FILE: include/asm-ia64/sn/klconfig.h:519:
+        unsigned short  pad4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#937: FILE: include/asm-ia64/sn/klconfig.h:519:
+        unsigned short  pad4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#938: FILE: include/asm-ia64/sn/klconfig.h:520:
+        unsigned short  pad5;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#938: FILE: include/asm-ia64/sn/klconfig.h:520:
+        unsigned short  pad5;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#951: FILE: include/asm-ia64/sn/pci/pcibr_private.h:665:
+#define NEWAf(ptr,n,f)	(ptr = snia_kmem_zalloc((n)*sizeof (*(ptr))))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#951: FILE: include/asm-ia64/sn/pci/pcibr_private.h:665:
+#define NEWAf(ptr,n,f)	(ptr = snia_kmem_zalloc((n)*sizeof (*(ptr))))
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#951: FILE: include/asm-ia64/sn/pci/pcibr_private.h:665:
+#define NEWAf(ptr,n,f)	(ptr = snia_kmem_zalloc((n)*sizeof (*(ptr))))
                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#951: FILE: include/asm-ia64/sn/pci/pcibr_private.h:665:
+#define NEWAf(ptr,n,f)	(ptr = snia_kmem_zalloc((n)*sizeof (*(ptr))))
                       	                           ^

CHECK:CAMELCASE: Avoid CamelCase: <NEWAf>
#951: FILE: include/asm-ia64/sn/pci/pcibr_private.h:665:
+#define NEWAf(ptr,n,f)	(ptr = snia_kmem_zalloc((n)*sizeof (*(ptr))))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#951: FILE: include/asm-ia64/sn/pci/pcibr_private.h:665:
+#define NEWAf(ptr,n,f)	(ptr = snia_kmem_zalloc((n)*sizeof (*(ptr))))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#952: FILE: include/asm-ia64/sn/pci/pcibr_private.h:666:
+#define NEWA(ptr,n)	(ptr = snia_kmem_zalloc((n)*sizeof (*(ptr))))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#952: FILE: include/asm-ia64/sn/pci/pcibr_private.h:666:
+#define NEWA(ptr,n)	(ptr = snia_kmem_zalloc((n)*sizeof (*(ptr))))
                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#952: FILE: include/asm-ia64/sn/pci/pcibr_private.h:666:
+#define NEWA(ptr,n)	(ptr = snia_kmem_zalloc((n)*sizeof (*(ptr))))
                    	                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#952: FILE: include/asm-ia64/sn/pci/pcibr_private.h:666:
+#define NEWA(ptr,n)	(ptr = snia_kmem_zalloc((n)*sizeof (*(ptr))))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#966: FILE: include/asm-ia64/sn/sgi.h:172:
+extern void * snia_kmem_zalloc(size_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#966: FILE: include/asm-ia64/sn/sgi.h:172:
+extern void * snia_kmem_zalloc(size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#966: FILE: include/asm-ia64/sn/sgi.h:172:
+extern void * snia_kmem_zalloc(size_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000330925.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 46 warnings, 8 checks, 551 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000330925.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
