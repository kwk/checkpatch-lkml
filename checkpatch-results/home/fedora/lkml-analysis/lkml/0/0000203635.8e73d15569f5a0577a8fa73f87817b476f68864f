WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
similar to pci_device_id. This allows a device table to be generated, which 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#56: FILE: arch/ppc/syslib/of_device.c:19:
+const struct of_device_id * of_match_device(const struct of_device_id *matches,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#57: FILE: arch/ppc/syslib/of_device.c:20:
+const struct of_device_id * of_match_device(const struct of_device_id *matches,
 					const struct of_device *dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#82: FILE: arch/ppc/syslib/of_device.c:46:
+	const struct of_device_id * matches = of_drv->match_table;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#103: FILE: drivers/i2c/busses/i2c-keywest.c:697:
+create_iface_macio(struct macio_dev* dev, const struct of_device_id *match)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#112: FILE: drivers/i2c/busses/i2c-keywest.c:709:
+create_iface_of_platform(struct of_device* dev, const struct of_device_id *match)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: drivers/i2c/busses/i2c-keywest.c:720:
+static struct of_device_id i2c_keywest_match[] = $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#121: FILE: drivers/i2c/busses/i2c-keywest.c:720:
+static struct of_device_id i2c_keywest_match[] = 

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#134: FILE: drivers/ide/ppc/pmac.c:1281:
 static int __devinit

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: drivers/ide/ppc/pmac.c:1503:
+static struct of_device_id pmac_ide_macio_match[] = $

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#145: FILE: drivers/ide/ppc/pmac.c:1503:
+static struct of_device_id pmac_ide_macio_match[] = 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#177: FILE: drivers/macintosh/macio_asic.c:36:
+	const struct of_device_id * matches = macio_drv->match_table;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#198: FILE: drivers/macintosh/mediabay.c:651:
+static int __devinit media_bay_attach(struct macio_dev *mdev, const struct of_device_id *match)

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#207: FILE: drivers/macintosh/mediabay.c:805:
+static struct of_device_id media_bay_match[] =

ERROR:SPACING: space prohibited after that open parenthesis '('
#243: FILE: drivers/macintosh/therm_windtunnel.c:457:
+therm_of_probe( struct of_device *dev, const struct of_device_id *match )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#243: FILE: drivers/macintosh/therm_windtunnel.c:457:
+therm_of_probe( struct of_device *dev, const struct of_device_id *match )

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#252: FILE: drivers/macintosh/therm_windtunnel.c:468:
+static struct of_device_id therm_of_match[] = {{

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#266: FILE: drivers/net/bmac.c:1264:
+static int __devinit bmac_probe(struct macio_dev *mdev, const struct of_device_id *match)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: drivers/net/bmac.c:1652:
+static struct of_device_id bmac_match[] = $

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#275: FILE: drivers/net/bmac.c:1652:
+static struct of_device_id bmac_match[] = 

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#296: FILE: drivers/net/mace.c:112:
+static int __devinit mace_probe(struct macio_dev *mdev, const struct of_device_id *match)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: drivers/net/mace.c:1014:
+static struct of_device_id mace_match[] = $

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#305: FILE: drivers/net/mace.c:1014:
+static struct of_device_id mace_match[] = 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: drivers/net/wireless/airport.c:275:
+static struct of_device_id airport_match[] = $

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#331: FILE: drivers/net/wireless/airport.c:275:
+static struct of_device_id airport_match[] = 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#341: FILE: drivers/net/wireless/airport.c:283:
+MODULE_DEVICE_TABLE (of, airport_match);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#363: FILE: drivers/scsi/mac53c94.c:548:
+static struct of_device_id mac53c94_match[] = $

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#363: FILE: drivers/scsi/mac53c94.c:548:
+static struct of_device_id mac53c94_match[] = 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#372: FILE: drivers/scsi/mac53c94.c:555:
+MODULE_DEVICE_TABLE (of, mac53c94_match);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: drivers/scsi/mesh.c:2017:
+static struct of_device_id mesh_match[] = $

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#393: FILE: drivers/scsi/mesh.c:2017:
+static struct of_device_id mesh_match[] = 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#407: FILE: drivers/scsi/mesh.c:2028:
+MODULE_DEVICE_TABLE (of, mesh_match);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: drivers/serial/pmac_zilog.c:1829:
+static struct of_device_id pmz_match[] = $

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#428: FILE: drivers/serial/pmac_zilog.c:1829:
+static struct of_device_id pmz_match[] = 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#442: FILE: drivers/serial/pmac_zilog.c:1839:
+MODULE_DEVICE_TABLE (of, pmz_match);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#454: FILE: drivers/video/platinumfb.c:526:
+static int __devinit platinumfb_probe(struct of_device* odev, const struct of_device_id *match)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#454: FILE: drivers/video/platinumfb.c:526:
+static int __devinit platinumfb_probe(struct of_device* odev, const struct of_device_id *match)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#463: FILE: drivers/video/platinumfb.c:650:
+static struct of_device_id platinumfb_match[] = $

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#463: FILE: drivers/video/platinumfb.c:650:
+static struct of_device_id platinumfb_match[] = 

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#488: FILE: include/asm-ppc/macio.h:124:
+	struct of_device_id	*match_table;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#492: FILE: include/asm-ppc/macio.h:127:
+	int	(*probe)(struct macio_dev* dev, const struct of_device_id *match);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#517: FILE: include/asm-ppc/of_device.h:27:
+extern const struct of_device_id *of_match_device(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#517: FILE: include/asm-ppc/of_device.h:27:
+extern const struct of_device_id *of_match_device(

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#527: FILE: include/asm-ppc/of_device.h:40:
+	struct of_device_id	*match_table;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#531: FILE: include/asm-ppc/of_device.h:43:
+	int	(*probe)(struct of_device* dev, const struct of_device_id *match);

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#545: FILE: include/linux/mod_devicetable.h:170:
+struct of_device_id

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#546: FILE: include/linux/mod_devicetable.h:171:
+struct of_device_id
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#562: FILE: scripts/mod/file2alias.c:202:
+static int do_macio_entry (const char *filename, struct of_device_id *of, char *alias)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: scripts/mod/file2alias.c:204:
+    sprintf (alias, "macio:N%sT%sC%s",$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#564: FILE: scripts/mod/file2alias.c:204:
+    sprintf (alias, "macio:N%sT%sC%s",

ERROR:CODE_INDENT: code indent should use tabs where possible
#565: FILE: scripts/mod/file2alias.c:205:
+                    of->name[0] ? of->name : "*",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#565: FILE: scripts/mod/file2alias.c:205:
+    sprintf (alias, "macio:N%sT%sC%s",
+                    of->name[0] ? of->name : "*",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: scripts/mod/file2alias.c:205:
+                    of->name[0] ? of->name : "*",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#566: FILE: scripts/mod/file2alias.c:206:
+                    of->type[0] ? of->type : "*",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: scripts/mod/file2alias.c:206:
+                    of->type[0] ? of->type : "*",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#567: FILE: scripts/mod/file2alias.c:207:
+                    of->compatible[0] ? of->compatible : "*");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: scripts/mod/file2alias.c:207:
+                    of->compatible[0] ? of->compatible : "*");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: scripts/mod/file2alias.c:208:
+    return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#578: FILE: scripts/mod/file2alias.c:283:
+        else if (sym_is(symname, "__mod_macio_device_table"))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: scripts/mod/file2alias.c:283:
+        else if (sym_is(symname, "__mod_macio_device_table"))$

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#579: FILE: scripts/mod/file2alias.c:284:
+		do_table(symval, sym->st_size, sizeof(struct of_device_id),

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000203635.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 33 warnings, 4 checks, 457 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000203635.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
