WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#46: FILE: drivers/usb/storage/sddr09.c:62:
+#define DPRINTK(fmt, args...) pr_debug(PFX "%s(): ", fmt, __FUNCTION__, ## args)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: drivers/usb/storage/sddr09.c:378:
+		DPRINTK("result for send_control in sddr09_read2%d %d\n",
 			  x, result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: drivers/usb/storage/sddr09.c:387:
+		DPRINTK("result for bulk_transfer in sddr09_read2%d %d\n",
 			  x, result);

CHECK:CAMELCASE: Avoid CamelCase: <Eaddress>
#120: FILE: drivers/usb/storage/sddr09.c:491:
+	DPRINTK("erase address %lu\n", Eaddress);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sddr09_erase', this function's name, in a string
#129: FILE: drivers/usb/storage/sddr09.c:504:
+		DPRINTK("result for send_control in sddr09_erase %d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: drivers/usb/storage/sddr09.c:505:
+		DPRINTK("result for send_control in sddr09_erase %d\n",
 			  result);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sddr09_writeX', this function's name, in a string
#138: FILE: drivers/usb/storage/sddr09.c:562:
+		DPRINTK("result for send_control in sddr09_writeX %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: drivers/usb/storage/sddr09.c:563:
+		DPRINTK("result for send_control in sddr09_writeX %d\n",
 			  result);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sddr09_writeX', this function's name, in a string
#147: FILE: drivers/usb/storage/sddr09.c:571:
+		DPRINTK("result for bulk_transfer in sddr09_writeX %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: drivers/usb/storage/sddr09.c:572:
+		DPRINTK("result for bulk_transfer in sddr09_writeX %d\n",
 			  result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: drivers/usb/storage/sddr09.c:641:
+		DPRINTK("result for send_control in sddr09_read_sg %d\n",
 			  result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: drivers/usb/storage/sddr09.c:654:
+		DPRINTK("result for bulk_transfer in sddr09_read_sg %d\n",
 			  result);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#183: FILE: drivers/usb/storage/sddr09.c:716:
+		printk(KERN_ERR PFX "%s(): out of memory\n", __FUNCTION__);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#183: FILE: drivers/usb/storage/sddr09.c:716:
 	if (buffer == NULL) {
+		printk(KERN_ERR PFX "%s(): out of memory\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#183: FILE: drivers/usb/storage/sddr09.c:716:
+		printk(KERN_ERR PFX "%s(): out of memory\n", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: drivers/usb/storage/sddr09.c:751:
+			DPRINTK("read %d zero pages (LBA %d) page %d\n",
 				  pages, lba, page);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#219: FILE: drivers/usb/storage/sddr09.c:835:
+			printk(KERN_ERR PFX "%s(): out of unused blocks\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#219: FILE: drivers/usb/storage/sddr09.c:835:
+			printk(KERN_ERR PFX "%s(): out of unused blocks\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#228: FILE: drivers/usb/storage/sddr09.c:846:
+		printk(KERN_NOTICE PFX "avoid writing to pba 1\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#238: FILE: drivers/usb/storage/sddr09.c:866:
+			DPRINTK("warning: bad ecc in page %d- of pba %d\n",
 				  i, pba);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: drivers/usb/storage/sddr09.c:872:
+			DPRINTK("warning: bad ecc in page %d+ of pba %d\n",
 				  i, pba);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: drivers/usb/storage/sddr09.c:907:
+			DPRINTK("sddr09_write_inplace: status after write: 0x%x\n",
 				  status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#279: FILE: drivers/usb/storage/sddr09.c:943:
+		printk(KERN_ERR PFX "%s(): out of memory\n", __FUNCTION__);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#279: FILE: drivers/usb/storage/sddr09.c:943:
 	if (!blockbuffer) {
+		printk(KERN_ERR PFX "%s(): out of memory\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#279: FILE: drivers/usb/storage/sddr09.c:943:
+		printk(KERN_ERR PFX "%s(): out of memory\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#288: FILE: drivers/usb/storage/sddr09.c:954:
+		printk(KERN_ERR PFX "%s(): out of memory\n", __FUNCTION__);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#288: FILE: drivers/usb/storage/sddr09.c:954:
 	if (buffer == NULL) {
+		printk(KERN_ERR PFX "%s(): out of memory\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#288: FILE: drivers/usb/storage/sddr09.c:954:
+		printk(KERN_ERR PFX "%s(): out of memory\n", __FUNCTION__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#315: FILE: drivers/usb/storage/sddr09.c:1055:
+		printk(" WP");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#319: FILE: drivers/usb/storage/sddr09.c:1058:
+		printk(" Ready");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#322: FILE: drivers/usb/storage/sddr09.c:1060:
+		printk(" Suspended");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#326: FILE: drivers/usb/storage/sddr09.c:1062:
+		printk(" Error");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#327: FILE: drivers/usb/storage/sddr09.c:1063:
+	printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#345: FILE: drivers/usb/storage/sddr09.c:1099:
+		printk(KERN_ERR PFX "could not read card info\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#368: FILE: drivers/usb/storage/sddr09.c:1171:
+		printk(KERN_ERR PFX "%s(): out of memory\n", __FUNCTION__);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#368: FILE: drivers/usb/storage/sddr09.c:1171:
 	if (buffer == NULL) {
+		printk(KERN_ERR PFX "%s(): out of memory\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#368: FILE: drivers/usb/storage/sddr09.c:1171:
+		printk(KERN_ERR PFX "%s(): out of memory\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#377: FILE: drivers/usb/storage/sddr09.c:1185:
+		printk(KERN_ERR PFX "%s(): out of memory\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#377: FILE: drivers/usb/storage/sddr09.c:1185:
+		printk(KERN_ERR PFX "%s(): out of memory\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#386: FILE: drivers/usb/storage/sddr09.c:1225:
+		printk(KERN_WARNING PFX "PBA %d has no logical mapping\n", i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#395: FILE: drivers/usb/storage/sddr09.c:1238:
+			printk(KERN_WARNING PFX "PBA %d has no logical mapping: "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#404: FILE: drivers/usb/storage/sddr09.c:1248:
+			printk(KERN_WARNING PFX "PBA %d has invalid address field "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#413: FILE: drivers/usb/storage/sddr09.c:1257:
+			printk(KERN_WARNING PFX "bad parity in LBA for block %d"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#422: FILE: drivers/usb/storage/sddr09.c:1276:
+			printk(KERN_WARNING PFX "bad low LBA %d for block %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#432: FILE: drivers/usb/storage/sddr09.c:1285:
+			pr_info(PFX "LBA %d seen for PBA %d and %d\n",
 			       lba, info->lba_to_pba[lba], i);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#500: FILE: drivers/usb/storage/sddr09.c:1544:
+		DPRINTK("READ_10: read page %d pagect %d\n",
 			  page, pages);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: drivers/usb/storage/sddr09.c:1557:
+		DPRINTK("WRITE_10: write page %d pagect %d\n",
 			  page, pages);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000194030.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 32 warnings, 15 checks, 467 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000194030.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
