WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#92: FILE: drivers/efi/efi_console.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#106: FILE: drivers/efi/efi_console.c:15:
+#define VERB_PRINTK(x...) printk(x)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#112: FILE: drivers/efi/efi_console.c:21:
+#define DBG_PRINTK(x...) printk(x)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: drivers/efi/efi_console.c:30:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#121: FILE: drivers/efi/efi_console.c:30:
+{
+	

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#133: FILE: drivers/efi/efi_console.c:42:
+		printk("%s(%d|%d)", EFI_DEV_PCI_NAME,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#137: FILE: drivers/efi/efi_console.c:46:
+	printk("Unknown hardware path");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: drivers/efi/efi_console.c:52:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#143: FILE: drivers/efi/efi_console.c:52:
+{
+	

CHECK:SPACING: No space is necessary after a cast
#156: FILE: drivers/efi/efi_console.c:65:
+		hid_str[0] = (char) ('@' + ((acpi_path.hid >> 10) & 0x1f));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#157: FILE: drivers/efi/efi_console.c:66:
+		hid_str[1] = (char) ('@' + ((acpi_path.hid >> 5)  & 0x1f));

CHECK:SPACING: No space is necessary after a cast
#158: FILE: drivers/efi/efi_console.c:67:
+		hid_str[2] = (char) ('@' + ((acpi_path.hid >> 0)  & 0x1f));

CHECK:SPACING: No space is necessary after a cast
#159: FILE: drivers/efi/efi_console.c:68:
+		hid_str[3] = (char) ('0' + ((acpi_path.hid >> 28) & 0xf));

CHECK:SPACING: No space is necessary after a cast
#160: FILE: drivers/efi/efi_console.c:69:
+		hid_str[4] = (char) ('0' + ((acpi_path.hid >> 24) & 0xf));

CHECK:SPACING: No space is necessary after a cast
#161: FILE: drivers/efi/efi_console.c:70:
+		hid_str[5] = (char) ('0' + ((acpi_path.hid >> 20) & 0xf));

CHECK:SPACING: No space is necessary after a cast
#162: FILE: drivers/efi/efi_console.c:71:
+		hid_str[6] = (char) ('0' + ((acpi_path.hid >> 16) & 0xf));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#165: FILE: drivers/efi/efi_console.c:74:
+		printk("%s(%s,%x)", EFI_DEV_ACPI_NAME, hid_str, acpi_path.uid);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#168: FILE: drivers/efi/efi_console.c:77:
+	printk("Unknown ACPI path");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: drivers/efi/efi_console.c:83:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#174: FILE: drivers/efi/efi_console.c:83:
+{
+	

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#187: FILE: drivers/efi/efi_console.c:96:
+		switch (uart_path.parity) {
+			case EFI_NO_PARITY:
[...]
+			case EFI_EVEN_PARITY:
[...]
+			case EFI_ODD_PARITY:
[...]
+			default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#201: FILE: drivers/efi/efi_console.c:110:
+		printk("%s(%ld %c%d%d)", EFI_DEV_UART_NAME, uart_path.baud,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#215: FILE: drivers/efi/efi_console.c:124:
+			printk("(PcAnsi)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#217: FILE: drivers/efi/efi_console.c:126:
+			printk("(Vt100)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#219: FILE: drivers/efi/efi_console.c:128:
+			printk("(Vt100+)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#221: FILE: drivers/efi/efi_console.c:130:
+			printk("(VtUtf8)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#223: FILE: drivers/efi/efi_console.c:132:
+			printk("(VenMsg)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#226: FILE: drivers/efi/efi_console.c:135:
+	printk("Unknown message path");

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#231: FILE: drivers/efi/efi_console.c:140:
+#define verb_print_separator()	\
+	if (first) {		\
+		first = 0;	\
+	} else {		\
+		printk("/");	\
+	}

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#235: FILE: drivers/efi/efi_console.c:144:
+		printk("/");	\

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#246: FILE: drivers/efi/efi_console.c:155:
+	unsigned char varname[sizeof(variable_name)/sizeof(efi_char16_t) + 1];
 	                                           ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#252: FILE: drivers/efi/efi_console.c:161:
+	DBG_PRINTK("Entering %s()\n", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: drivers/efi/efi_console.c:165:
+^I^I                               &vendor_guid);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#265: FILE: drivers/efi/efi_console.c:174:
+		for (i = 0; i < (name_size/sizeof(efi_char16_t)); i++)
 		                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: drivers/efi/efi_console.c:186:
+^I^I                          &attributes, &data_size, efi_data);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#286: FILE: drivers/efi/efi_console.c:195:
+			printk("%02x", efi_data[i++]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#289: FILE: drivers/efi/efi_console.c:198:
+				printk(" ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#291: FILE: drivers/efi/efi_console.c:200:
+				printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#293: FILE: drivers/efi/efi_console.c:202:
+		printk("\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#296: FILE: drivers/efi/efi_console.c:205:
+		found_end = found_vga = found_uart = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#302: FILE: drivers/efi/efi_console.c:211:
+			switch (hdr->type) {
+				case EFI_DEV_TYPE_HW_PATH:
[...]
+				case EFI_DEV_TYPE_ACPI_PATH:
[...]
+				case EFI_DEV_TYPE_MSG_PATH:
[...]
+				case EFI_DEV_TYPE_END_PATH:
+				case EFI_DEV_TYPE_END_PATH2:
[...]
+				default:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: drivers/efi/efi_console.c:246:
+^I^I^I^I^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#345: FILE: drivers/efi/efi_console.c:254:
+			hdr = (efi_generic_dev_path_t *)((u8*)hdr + hdr->length);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#354: FILE: drivers/efi/efi_console.c:263:
+	DBG_PRINTK("Leaving %s()\n", __FUNCTION__);

WARNING:MISPLACED_INIT: __initdata should be placed after hcdp_fake_cmdline[32]
#373: FILE: drivers/serial/8250_hcdp.c:33:
+static unsigned char __initdata hcdp_fake_cmdline[32];

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#379: FILE: drivers/serial/8250_hcdp.c:39:
+	extern struct obs_kernel_param __setup_start, __setup_end;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TABSTOP: Statements should start on a tabstop
#385: FILE: drivers/serial/8250_hcdp.c:45:
+	 do {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 17)
#385: FILE: drivers/serial/8250_hcdp.c:45:
+	 do {
+		 int n = strlen(p->str);

WARNING:TABSTOP: Statements should start on a tabstop
#386: FILE: drivers/serial/8250_hcdp.c:46:
+		 int n = strlen(p->str);

WARNING:TABSTOP: Statements should start on a tabstop
#387: FILE: drivers/serial/8250_hcdp.c:47:
+		 if (!strncmp(param,p->str,n)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#387: FILE: drivers/serial/8250_hcdp.c:47:
+		 int n = strlen(p->str);
+		 if (!strncmp(param,p->str,n)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 25)
#387: FILE: drivers/serial/8250_hcdp.c:47:
+		 if (!strncmp(param,p->str,n)) {
+			 if (p->setup_func(param+n))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#387: FILE: drivers/serial/8250_hcdp.c:47:
+		 if (!strncmp(param,p->str,n)) {
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#387: FILE: drivers/serial/8250_hcdp.c:47:
+		 if (!strncmp(param,p->str,n)) {
 		                          ^

WARNING:TABSTOP: Statements should start on a tabstop
#388: FILE: drivers/serial/8250_hcdp.c:48:
+			 if (p->setup_func(param+n))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (25, 33)
#388: FILE: drivers/serial/8250_hcdp.c:48:
+			 if (p->setup_func(param+n))
+				 return 0;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#388: FILE: drivers/serial/8250_hcdp.c:48:
+			 if (p->setup_func(param+n))
 			                        ^

WARNING:TABSTOP: Statements should start on a tabstop
#389: FILE: drivers/serial/8250_hcdp.c:49:
+				 return 0;

WARNING:TABSTOP: Statements should start on a tabstop
#390: FILE: drivers/serial/8250_hcdp.c:50:
+		 }

WARNING:TABSTOP: Statements should start on a tabstop
#392: FILE: drivers/serial/8250_hcdp.c:52:
+	 } while (p < &__setup_end);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#402: FILE: drivers/serial/8250_hcdp.c:62:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#440: FILE: drivers/serial/8250_hcdp.c:100:
+				for (i = 0; i < VGACOLS; i++) {
+					writew(readw(vgabase + 2*(VGACOLS*k + i)), vgabase + 2*(VGACOLS*j + i));
+				}

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#441: FILE: drivers/serial/8250_hcdp.c:101:
+					writew(readw(vgabase + 2*(VGACOLS*k + i)), vgabase + 2*(VGACOLS*j + i));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#441: FILE: drivers/serial/8250_hcdp.c:101:
+					writew(readw(vgabase + 2*(VGACOLS*k + i)), vgabase + 2*(VGACOLS*j + i));
 					                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#441: FILE: drivers/serial/8250_hcdp.c:101:
+					writew(readw(vgabase + 2*(VGACOLS*k + i)), vgabase + 2*(VGACOLS*j + i));
 					                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#441: FILE: drivers/serial/8250_hcdp.c:101:
+					writew(readw(vgabase + 2*(VGACOLS*k + i)), vgabase + 2*(VGACOLS*j + i));
 					                                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#441: FILE: drivers/serial/8250_hcdp.c:101:
+					writew(readw(vgabase + 2*(VGACOLS*k + i)), vgabase + 2*(VGACOLS*j + i));
 					                                                               ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#444: FILE: drivers/serial/8250_hcdp.c:104:
+			for (i = 0; i < VGACOLS; i++) {
+				writew(0x720, vgabase + 2*(VGACOLS*j + i));
+			}

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#445: FILE: drivers/serial/8250_hcdp.c:105:
+				writew(0x720, vgabase + 2*(VGACOLS*j + i));
 				                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#445: FILE: drivers/serial/8250_hcdp.c:105:
+				writew(0x720, vgabase + 2*(VGACOLS*j + i));
 				                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#447: FILE: drivers/serial/8250_hcdp.c:107:
+			current_ypos = VGALINES-1;
 			                       ^

CHECK:SPACING: No space is necessary after a cast
#453: FILE: drivers/serial/8250_hcdp.c:113:
+			writew(((0x7 << 8) | (unsigned short) c),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: drivers/serial/8250_hcdp.c:114:
+			writew(((0x7 << 8) | (unsigned short) c),
+					vgabase + 2*(VGACOLS*current_ypos + current_xpos++));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#454: FILE: drivers/serial/8250_hcdp.c:114:
+					vgabase + 2*(VGACOLS*current_ypos + current_xpos++));
 					           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#454: FILE: drivers/serial/8250_hcdp.c:114:
+					vgabase + 2*(VGACOLS*current_ypos + current_xpos++));
 					                    ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#469: FILE: drivers/serial/8250_hcdp.c:129:
+	extern char saved_command_line[];

WARNING:TABSTOP: Statements should start on a tabstop
#477: FILE: drivers/serial/8250_hcdp.c:137:
+		 else if (memcmp(cp, "console=tty", 11) == 0)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#487: FILE: drivers/serial/8250_hcdp.c:147:
+		extern struct kernel_param __start___param[], __stop___param[];

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: drivers/serial/8250_hcdp.c:150:
+^I^I        hcdp->baud, ((hcdp->parity == 0x01) ?$

ERROR:CODE_INDENT: code indent should use tabs where possible
#491: FILE: drivers/serial/8250_hcdp.c:151:
+^I^I        'n': ((hcdp->parity == 0x02) ? 'e':$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#491: FILE: drivers/serial/8250_hcdp.c:151:
+		        'n': ((hcdp->parity == 0x02) ? 'e':
 		           ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#491: FILE: drivers/serial/8250_hcdp.c:151:
+		        'n': ((hcdp->parity == 0x02) ? 'e':
 		                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#492: FILE: drivers/serial/8250_hcdp.c:152:
+^I^I        ((hcdp->parity == 0x03) ? 'o':'n'))), $

ERROR:CODE_INDENT: code indent should use tabs where possible
#492: FILE: drivers/serial/8250_hcdp.c:152:
+^I^I        ((hcdp->parity == 0x03) ? 'o':'n'))), $

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#492: FILE: drivers/serial/8250_hcdp.c:152:
+		        ((hcdp->parity == 0x03) ? 'o':'n'))), 
 		                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#493: FILE: drivers/serial/8250_hcdp.c:153:
+^I^I        hcdp->bits);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: drivers/serial/8250_hcdp.c:163:
+^I^I           __start___param, __stop___param -$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#507: FILE: drivers/serial/8250_hcdp.c:167:
+	} else if (has_vga && !has_ttyS_cmdline) {
+

CHECK:SPACING: No space is necessary after a cast
#511: FILE: drivers/serial/8250_hcdp.c:171:
+			iobase = ((u64) hcdp->base_addr.addrhi << 32) |

ERROR:CODE_INDENT: code indent should use tabs where possible
#512: FILE: drivers/serial/8250_hcdp.c:172:
+^I^I^I         hcdp->base_addr.addrlo;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#515: FILE: drivers/serial/8250_hcdp.c:175:
+^I^I^I                     27, iobase);$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#519: FILE: drivers/serial/8250_hcdp.c:179:
+	} else if (has_vga && has_ttyS_cmdline && !has_tty_cmdline) {
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#582: FILE: include/linux/efi.h:182:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#588: FILE: include/linux/efi.h:188:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#594: FILE: include/linux/efi.h:194:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#600: FILE: include/linux/efi.h:200:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#609: FILE: include/linux/efi.h:209:
+typedef struct {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: include/linux/efi.h:255:
+    EFI_GUID(  0xe0c14753, 0xf9be, 0x11d2, 0x9a, 0x0c, 0x00, 0x90, 0x27, 0x3f, 0xc1, 0x4d )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#622: FILE: include/linux/efi.h:255:
+    EFI_GUID(  0xe0c14753, 0xf9be, 0x11d2, 0x9a, 0x0c, 0x00, 0x90, 0x27, 0x3f, 0xc1, 0x4d )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#622: FILE: include/linux/efi.h:255:
+    EFI_GUID(  0xe0c14753, 0xf9be, 0x11d2, 0x9a, 0x0c, 0x00, 0x90, 0x27, 0x3f, 0xc1, 0x4d )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: include/linux/efi.h:258:
+    EFI_GUID(  0xdfa66065, 0xb419, 0x11d3, 0x9a, 0x2d, 0x00, 0x90, 0x27, 0x3f, 0xc1, 0x4d )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#625: FILE: include/linux/efi.h:258:
+    EFI_GUID(  0xdfa66065, 0xb419, 0x11d3, 0x9a, 0x2d, 0x00, 0x90, 0x27, 0x3f, 0xc1, 0x4d )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#625: FILE: include/linux/efi.h:258:
+    EFI_GUID(  0xdfa66065, 0xb419, 0x11d3, 0x9a, 0x2d, 0x00, 0x90, 0x27, 0x3f, 0xc1, 0x4d )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: include/linux/efi.h:261:
+    EFI_GUID(  0x7baec70b, 0x57e0, 0x4c76, 0x8e, 0x87, 0x2f, 0x9e, 0x28, 0x08, 0x83, 0x43 )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#628: FILE: include/linux/efi.h:261:
+    EFI_GUID(  0x7baec70b, 0x57e0, 0x4c76, 0x8e, 0x87, 0x2f, 0x9e, 0x28, 0x08, 0x83, 0x43 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#628: FILE: include/linux/efi.h:261:
+    EFI_GUID(  0x7baec70b, 0x57e0, 0x4c76, 0x8e, 0x87, 0x2f, 0x9e, 0x28, 0x08, 0x83, 0x43 )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: include/linux/efi.h:264:
+    EFI_GUID(  0xad15a0d6, 0x8bec, 0x4acf, 0xa0, 0x73, 0xd0, 0x1d, 0xe7, 0x7e, 0x2d, 0x88 )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#631: FILE: include/linux/efi.h:264:
+    EFI_GUID(  0xad15a0d6, 0x8bec, 0x4acf, 0xa0, 0x73, 0xd0, 0x1d, 0xe7, 0x7e, 0x2d, 0x88 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#631: FILE: include/linux/efi.h:264:
+    EFI_GUID(  0xad15a0d6, 0x8bec, 0x4acf, 0xa0, 0x73, 0xd0, 0x1d, 0xe7, 0x7e, 0x2d, 0x88 )

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#640: FILE: include/linux/efi.h:338:
+extern int efi_conout_has_vga(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000342271.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 31 errors, 49 warnings, 30 checks, 546 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000342271.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
