WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
--- ../linux-2.6.13-rc6/drivers/pci/quirks.c    2005-08-08 11:46:05.000000000 +0200

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#54: FILE: pci/quirks.c:411:
+static void __devinit quirk_via_vt8237_bypass_apic_deassert(struct pci_dev *dev)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: pci/quirks.c:413:
+       u8 misc_control2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: pci/quirks.c:416:
+       pci_read_config_byte(dev, 0x5B, &misc_control2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: pci/quirks.c:417:
+       if (!(misc_control2 & BYPASS_APIC_DEASSERT)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#60: FILE: pci/quirks.c:417:
+       if (!(misc_control2 & BYPASS_APIC_DEASSERT)) {
+               printk(KERN_INFO "PCI: Bypassing VIA 8237 APIC De-Assert Message\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: pci/quirks.c:418:
+               printk(KERN_INFO "PCI: Bypassing VIA 8237 APIC De-Assert Message\n");$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: pci/quirks.c:418:
+               printk(KERN_INFO "PCI: Bypassing VIA 8237 APIC De-Assert Message\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#61: FILE: pci/quirks.c:418:
+               printk(KERN_INFO "PCI: Bypassing VIA 8237 APIC De-Assert Message\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: pci/quirks.c:419:
+               pci_write_config_byte(dev, 0x5B, misc_control2|BYPASS_APIC_DEASSERT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: pci/quirks.c:419:
+               pci_write_config_byte(dev, 0x5B, misc_control2|BYPASS_APIC_DEASSERT);$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#62: FILE: pci/quirks.c:419:
+               pci_write_config_byte(dev, 0x5B, misc_control2|BYPASS_APIC_DEASSERT);
                                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: pci/quirks.c:420:
+       }$

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#65: FILE: pci/quirks.c:422:
+DECLARE_PCI_FIXUP_FINAL(PCI_VENDOR_ID_VIA,     PCI_DEVICE_ID_VIA_8237,         quirk_via_vt8237_bypass_apic_deassert);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: pci/quirks.c:519:
+       PCI_DEVFN(15, 0),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: pci/quirks.c:520:
+       PCI_DEVFN(15, 1),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: pci/quirks.c:521:
+       PCI_DEVFN(16, 0),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: pci/quirks.c:522:
+       PCI_DEVFN(16, 1),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: pci/quirks.c:523:
+       PCI_DEVFN(16, 2),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: pci/quirks.c:524:
+       PCI_DEVFN(16, 3),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: pci/quirks.c:525:
+       PCI_DEVFN(16, 4),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: pci/quirks.c:526:
+       PCI_DEVFN(16, 5),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: pci/quirks.c:527:
+       PCI_DEVFN(17, 5),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: pci/quirks.c:528:
+       PCI_DEVFN(17, 6),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: pci/quirks.c:529:
+       PCI_DEVFN(18, 0)$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#96: FILE: pci/quirks.c:531:
+};
+static struct pci_dev *quirk_via_irq_not[ARRAY_SIZE(vt8237_devfn)];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: pci/quirks.c:535:
+       if (quirk_via_irq_not[0] != NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#100: FILE: pci/quirks.c:535:
+       if (quirk_via_irq_not[0] != NULL)
+               return;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "quirk_via_irq_not[0]"
#100: FILE: pci/quirks.c:535:
+       if (quirk_via_irq_not[0] != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: pci/quirks.c:536:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: pci/quirks.c:536:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: pci/quirks.c:538:
+       if (dev->devfn == PCI_DEVFN(0x11, 0)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#103: FILE: pci/quirks.c:538:
+       if (dev->devfn == PCI_DEVFN(0x11, 0)) {
+               int i, j;

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: pci/quirks.c:539:
+               int i, j;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: pci/quirks.c:539:
+               int i, j;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: pci/quirks.c:540:
+               for (i = 0, j = 0; i < ARRAY_SIZE(vt8237_devfn); i++) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#105: FILE: pci/quirks.c:540:
+               int i, j;
+               for (i = 0, j = 0; i < ARRAY_SIZE(vt8237_devfn); i++) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: pci/quirks.c:540:
+               for (i = 0, j = 0; i < ARRAY_SIZE(vt8237_devfn); i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#105: FILE: pci/quirks.c:540:
+               for (i = 0, j = 0; i < ARRAY_SIZE(vt8237_devfn); i++) {
+                       struct pci_dev * d;

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: pci/quirks.c:541:
+                       struct pci_dev * d;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: pci/quirks.c:541:
+                       struct pci_dev * d;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#106: FILE: pci/quirks.c:541:
+                       struct pci_dev * d;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: pci/quirks.c:542:
+                       d = pci_find_slot(dev->bus->number, vt8237_devfn[i]);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#107: FILE: pci/quirks.c:542:
+                       struct pci_dev * d;
+                       d = pci_find_slot(dev->bus->number, vt8237_devfn[i]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: pci/quirks.c:542:
+                       d = pci_find_slot(dev->bus->number, vt8237_devfn[i]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: pci/quirks.c:543:
+                       if (d != NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: pci/quirks.c:543:
+                       if (d != NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#108: FILE: pci/quirks.c:543:
+                       if (d != NULL)
+                               quirk_via_irq_not[j++] = d;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "d"
#108: FILE: pci/quirks.c:543:
+                       if (d != NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: pci/quirks.c:544:
+                               quirk_via_irq_not[j++] = d;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: pci/quirks.c:544:
+                               quirk_via_irq_not[j++] = d;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: pci/quirks.c:545:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: pci/quirks.c:545:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: pci/quirks.c:546:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: pci/quirks.c:562:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: pci/quirks.c:565:
+       for (i = 0; i < ARRAY_SIZE(vt8237_devfn); i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#126: FILE: pci/quirks.c:565:
+       for (i = 0; i < ARRAY_SIZE(vt8237_devfn); i++)
+               if (quirk_via_irq_not[i] == dev)

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: pci/quirks.c:566:
+               if (quirk_via_irq_not[i] == dev)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: pci/quirks.c:566:
+               if (quirk_via_irq_not[i] == dev)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#127: FILE: pci/quirks.c:566:
+               if (quirk_via_irq_not[i] == dev)
+                       return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: pci/quirks.c:567:
+                       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: pci/quirks.c:567:
+                       return;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#130: FILE: pci/quirks.c:569:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000159921.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 46 warnings, 5 checks, 86 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000159921.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
