WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
low-level driver signals it wants the vt layer to maintain scrollback through 

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#112: FILE: drivers/char/vt.c:200:
+char vt_scrollback_ready = 0;		/* global scrollback enable */

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: drivers/char/vt.c:201:
+static unsigned int scrback_gfpmask = GFP_KERNEL | __GFP_NORETRY $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: drivers/char/vt.c:255:
+int vt_set_scrollback(struct vt_scrollparms *sc) $

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#132: FILE: drivers/char/vt.c:264:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: drivers/char/vt.c:270:
+^Iif ((sc->vp_size < vc->vc_maxscrollback) && $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sc->vp_size < vc->vc_maxscrollback'
#138: FILE: drivers/char/vt.c:270:
+	if ((sc->vp_size < vc->vc_maxscrollback) && 
+		(vc->vc_scrollbacksz > sc->vp_size))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vc->vc_scrollbacksz > sc->vp_size'
#138: FILE: drivers/char/vt.c:270:
+	if ((sc->vp_size < vc->vc_maxscrollback) && 
+		(vc->vc_scrollbacksz > sc->vp_size))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: drivers/char/vt.c:271:
+	if ((sc->vp_size < vc->vc_maxscrollback) && 
+		(vc->vc_scrollbacksz > sc->vp_size))

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#143: FILE: drivers/char/vt.c:275:
+	return(0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: drivers/char/vt.c:279:
+unsigned int vt_get_scrollback(unsigned char **rb, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: drivers/char/vt.c:280:
+^I^I^I^Istruct vc_data *vc, unsigned int needlines) $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: drivers/char/vt.c:280:
+unsigned int vt_get_scrollback(unsigned char **rb, 
+				struct vc_data *vc, unsigned int needlines) 

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#150: FILE: drivers/char/vt.c:282:
+	static char *retbuf = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#156: FILE: drivers/char/vt.c:288:
+	orig_bytes_needed = bytes_needed = needlines * vc->vc_size_row;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: drivers/char/vt.c:289:
+^I$

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#160: FILE: drivers/char/vt.c:292:
+		if (retbuf)
+			kfree(retbuf);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: drivers/char/vt.c:299:
+^I^Iskip = vc->vc_scrollbacksz - $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: drivers/char/vt.c:330:
+static void evict_scrollback(struct vc_data *vc, unsigned int count) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: drivers/char/vt.c:348:
+void vt_clear_scrollback(struct vc_data *vc) $

ERROR:SPACING: space required before the open parenthesis '('
#220: FILE: drivers/char/vt.c:352:
+	if(vc->vc_scrollbacksz)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: drivers/char/vt.c:357:
+int vt_update_cumdelta(struct vc_data *c, int delta) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: drivers/char/vt.c:365:
+^I^Ic->vc_cumdelta = min(c->vc_cumdelta, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: drivers/char/vt.c:366:
+		c->vc_cumdelta = min(c->vc_cumdelta, 
+			c->vc_scrollbacksz / c->vc_size_row);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: drivers/char/vt.c:375:
+static void save_scrollback(struct vc_data *vc, unsigned short *p, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: drivers/char/vt.c:376:
+^I^I^I^Iunsigned int count) $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: drivers/char/vt.c:376:
+static void save_scrollback(struct vc_data *vc, unsigned short *p, 
+				unsigned int count) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: drivers/char/vt.c:387:
+^Iif ((vc->vc_scrollbacksz + count) > vc->vc_maxscrollback) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: drivers/char/vt.c:388:
+^I^Ievict_scrollback(vc, count - $

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sc)...) over kmalloc(sizeof(struct vc_scrback)...)
#260: FILE: drivers/char/vt.c:392:
+		sc = kmalloc(sizeof(struct vc_scrback), scrback_gfpmask);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: drivers/char/vt.c:393:
+^I^Iif (!sc) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: drivers/char/vt.c:395:
+^I^Isc->vsc_bufleft = sc->vsc_bufsize = $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#263: FILE: drivers/char/vt.c:395:
+		sc->vsc_bufleft = sc->vsc_bufsize = 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: drivers/char/vt.c:397:
+^I^Isc->vsc_buf = sc->vsc_bufptr = $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#265: FILE: drivers/char/vt.c:397:
+		sc->vsc_buf = sc->vsc_bufptr = 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: drivers/char/vt.c:405:
+^I^I/* if list is empty this just initializes sc, if list is not $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#274: FILE: drivers/char/vt.c:406:
+		 * empty it points sc to the last entry */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: drivers/char/vt.c:408:
+		sc = list_entry(vc->vc_scrollback.prev, struct vc_scrback,
+			vsc_list);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: drivers/char/vt.c:414:
+^I^I^Isc = kmalloc(sizeof(struct vc_scrback), $

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sc)...) over kmalloc(sizeof(struct vc_scrback)...)
#282: FILE: drivers/char/vt.c:414:
+			sc = kmalloc(sizeof(struct vc_scrback), 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: drivers/char/vt.c:415:
+			sc = kmalloc(sizeof(struct vc_scrback), 
+				scrback_gfpmask);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: drivers/char/vt.c:416:
+^I^I^Iif (!sc) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: drivers/char/vt.c:418:
+^I^I^Isc->vsc_bufleft = sc->vsc_bufsize = $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#286: FILE: drivers/char/vt.c:418:
+			sc->vsc_bufleft = sc->vsc_bufsize = 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: drivers/char/vt.c:419:
+^I^I^I^Imin(vc->vc_screenbuf_size, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: drivers/char/vt.c:420:
+				min(vc->vc_screenbuf_size, 
+				vc->vc_maxscrollback - vc->vc_scrollbacksz);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: drivers/char/vt.c:421:
+^I^I^Isc->vsc_buf = sc->vsc_bufptr = $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#289: FILE: drivers/char/vt.c:421:
+			sc->vsc_buf = sc->vsc_bufptr = 

ERROR:SPACING: space required before the open parenthesis '('
#315: FILE: drivers/char/vt.c:448:
+		if(!t)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: drivers/char/vt.c:449:
+^I^I^Isave_scrollback(vc, (unsigned short *)vc->vc_origin, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#317: FILE: drivers/char/vt.c:450:
+			save_scrollback(vc, (unsigned short *)vc->vc_origin, 
+				nr * vc->vc_size_row);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: drivers/char/vt.c:927:
+static inline int resize_screen(struct vc_data *vc, unsigned int width, $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#409: FILE: drivers/char/vt_ioctl.c:40:
+extern char vt_scrollback_ready;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#433: FILE: drivers/char/vt_ioctl.c:670:
+			return -ENOSYS;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#439: FILE: drivers/char/vt_ioctl.c:676:
+		return(ret);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#447: FILE: drivers/char/vt_ioctl.c:684:
+			return -ENOSYS;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#452: FILE: drivers/char/vt_ioctl.c:689:
+^I^Iif (sp.vp_con > MAX_NR_CONSOLES || !vc_cons[sp.vp_con].d || $

ERROR:CODE_INDENT: code indent should use tabs where possible
#453: FILE: drivers/char/vt_ioctl.c:690:
+^I^I  ^I !vc_cons[sp.vp_con].d->vc_support_scrollback) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#453: FILE: drivers/char/vt_ioctl.c:690:
+^I^I  ^I !vc_cons[sp.vp_con].d->vc_support_scrollback) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#453: FILE: drivers/char/vt_ioctl.c:690:
+		if (sp.vp_con > MAX_NR_CONSOLES || !vc_cons[sp.vp_con].d || 
+		  	 !vc_cons[sp.vp_con].d->vc_support_scrollback) {

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#476: FILE: drivers/video/console/vgacon.c:60:
+extern int vt_max_scrollback_dfl;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#523: FILE: drivers/video/console/vgacon.c:977:
+^Iif (!c->vc_scrollbacksz) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: drivers/video/console/vgacon.c:979:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#530: FILE: drivers/video/console/vgacon.c:984:
+^I^Iscr_memcpyw((void *) c->vc_origin, (void *) c->vc_screenbuf, $

CHECK:SPACING: No space is necessary after a cast
#530: FILE: drivers/video/console/vgacon.c:984:
+		scr_memcpyw((void *) c->vc_origin, (void *) c->vc_screenbuf, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#531: FILE: drivers/video/console/vgacon.c:985:
+		scr_memcpyw((void *) c->vc_origin, (void *) c->vc_screenbuf, 
+				c->vc_screenbuf_size);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#539: FILE: drivers/video/console/vgacon.c:993:
+^I^Iif (!gotback) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#541: FILE: drivers/video/console/vgacon.c:995:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#543: FILE: drivers/video/console/vgacon.c:997:
+^I^I^Iscr_memcpyw((void *)c->vc_screenbuf, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#544: FILE: drivers/video/console/vgacon.c:998:
+			scr_memcpyw((void *)c->vc_screenbuf, 
+				(void *)c->vc_origin, c->vc_screenbuf_size);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#557: FILE: drivers/video/console/vgacon.c:1001:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#558: FILE: drivers/video/console/vgacon.c:1002:
+^I^Iif (gotback < c->vc_rows) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#560: FILE: drivers/video/console/vgacon.c:1004:
+^I^I^I^I(void *) c->vc_screenbuf, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#560: FILE: drivers/video/console/vgacon.c:1004:
+			scr_memcpyw((void *)(sp + c->vc_size_row * gotback),
+				(void *) c->vc_screenbuf, 

CHECK:SPACING: No space is necessary after a cast
#560: FILE: drivers/video/console/vgacon.c:1004:
+				(void *) c->vc_screenbuf, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#563: FILE: drivers/video/console/vgacon.c:1007:
+^I^Iscr_memcpyw((void *)c->vc_origin, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#564: FILE: drivers/video/console/vgacon.c:1008:
+		scr_memcpyw((void *)c->vc_origin, 
+			(void *)sp, c->vc_screenbuf_size);

ERROR:SPACING: space required before the open parenthesis '('
#576: FILE: drivers/video/console/vgacon.c:1042:
+		if(c->vc_cumdelta)

ERROR:CODE_INDENT: code indent should use tabs where possible
#598: FILE: drivers/video/console/vgacon.c:1077:
+^I^I ^I    delta);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#598: FILE: drivers/video/console/vgacon.c:1077:
+^I^I ^I    delta);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#606: FILE: drivers/video/console/vgacon.c:1099:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#608: FILE: drivers/video/console/vgacon.c:1101:
+ * that's stored at the wrong resolution $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#610: FILE: drivers/video/console/vgacon.c:1103:
+static int vgacon_resize(struct vc_data *c, unsigned int width, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#611: FILE: drivers/video/console/vgacon.c:1104:
+^I^I^I^Iunsigned int height) $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#611: FILE: drivers/video/console/vgacon.c:1104:
+static int vgacon_resize(struct vc_data *c, unsigned int width, 
+				unsigned int height) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#664: FILE: include/linux/console_struct.h:42:
+^Ishort^I^Ivc_scrollback_needsave;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#694: FILE: include/linux/vt_kern.h:51:
+unsigned int vt_get_scrollback(unsigned char **rb, struct vc_data *vc, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#695: FILE: include/linux/vt_kern.h:52:
+unsigned int vt_get_scrollback(unsigned char **rb, struct vc_data *vc, 
+				unsigned int needlines);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000168452.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 52 errors, 10 warnings, 26 checks, 576 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000168452.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
