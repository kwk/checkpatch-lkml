CHECK:SPACING: No space is necessary after a cast
#122: FILE: arch/alpha/kernel/core_lca.c:400:
+	       vector, get_irq_regs()->pc, (unsigned int) el.c->code);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#289: FILE: arch/alpha/kernel/err_impl.h:63:
+extern void ev7_machine_check(u64, u64);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#289: FILE: arch/alpha/kernel/err_impl.h:63:
+extern void ev7_machine_check(u64, u64);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#289: FILE: arch/alpha/kernel/err_impl.h:63:
+extern void ev7_machine_check(u64, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#297: FILE: arch/alpha/kernel/err_impl.h:70:
+extern void ev6_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#297: FILE: arch/alpha/kernel/err_impl.h:70:
+extern void ev6_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#297: FILE: arch/alpha/kernel/err_impl.h:70:
+extern void ev6_machine_check(u64, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#303: FILE: arch/alpha/kernel/err_impl.h:75:
+extern void marvel_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#303: FILE: arch/alpha/kernel/err_impl.h:75:
+extern void marvel_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#303: FILE: arch/alpha/kernel/err_impl.h:75:
+extern void marvel_machine_check(u64, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#311: FILE: arch/alpha/kernel/err_impl.h:82:
+extern void titan_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#311: FILE: arch/alpha/kernel/err_impl.h:82:
+extern void titan_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#311: FILE: arch/alpha/kernel/err_impl.h:82:
+extern void titan_machine_check(u64, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#315: FILE: arch/alpha/kernel/err_impl.h:85:
+extern void privateer_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#315: FILE: arch/alpha/kernel/err_impl.h:85:
+extern void privateer_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#315: FILE: arch/alpha/kernel/err_impl.h:85:
+extern void privateer_machine_check(u64, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#457: FILE: arch/alpha/kernel/proto.h:23:
+extern void apecs_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#457: FILE: arch/alpha/kernel/proto.h:23:
+extern void apecs_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#457: FILE: arch/alpha/kernel/proto.h:23:
+extern void apecs_machine_check(u64, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#466: FILE: arch/alpha/kernel/proto.h:32:
+extern void cia_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#466: FILE: arch/alpha/kernel/proto.h:32:
+extern void cia_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#466: FILE: arch/alpha/kernel/proto.h:32:
+extern void cia_machine_check(u64, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#475: FILE: arch/alpha/kernel/proto.h:45:
+extern void lca_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#475: FILE: arch/alpha/kernel/proto.h:45:
+extern void lca_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#475: FILE: arch/alpha/kernel/proto.h:45:
+extern void lca_machine_check(u64, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#483: FILE: arch/alpha/kernel/proto.h:52:
+extern void marvel_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#483: FILE: arch/alpha/kernel/proto.h:52:
+extern void marvel_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#483: FILE: arch/alpha/kernel/proto.h:52:
+extern void marvel_machine_check(u64, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#492: FILE: arch/alpha/kernel/proto.h:67:
+extern void mcpcia_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#492: FILE: arch/alpha/kernel/proto.h:67:
+extern void mcpcia_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#492: FILE: arch/alpha/kernel/proto.h:67:
+extern void mcpcia_machine_check(u64, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#501: FILE: arch/alpha/kernel/proto.h:75:
+extern void polaris_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#501: FILE: arch/alpha/kernel/proto.h:75:
+extern void polaris_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#501: FILE: arch/alpha/kernel/proto.h:75:
+extern void polaris_machine_check(u64, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#509: FILE: arch/alpha/kernel/proto.h:82:
+extern void t2_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#509: FILE: arch/alpha/kernel/proto.h:82:
+extern void t2_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#509: FILE: arch/alpha/kernel/proto.h:82:
+extern void t2_machine_check(u64, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#517: FILE: arch/alpha/kernel/proto.h:89:
+extern void titan_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#517: FILE: arch/alpha/kernel/proto.h:89:
+extern void titan_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#517: FILE: arch/alpha/kernel/proto.h:89:
+extern void titan_machine_check(u64, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#526: FILE: arch/alpha/kernel/proto.h:97:
+extern void tsunami_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#526: FILE: arch/alpha/kernel/proto.h:97:
+extern void tsunami_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#526: FILE: arch/alpha/kernel/proto.h:97:
+extern void tsunami_machine_check(u64, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#534: FILE: arch/alpha/kernel/proto.h:104:
+extern void wildfire_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#534: FILE: arch/alpha/kernel/proto.h:104:
+extern void wildfire_machine_check(u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#534: FILE: arch/alpha/kernel/proto.h:104:
+extern void wildfire_machine_check(u64, u64);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#554: FILE: arch/alpha/kernel/sys_jensen.c:247:
+jensen_machine_check (u64 vector, u64 la)

ERROR:CODE_INDENT: code indent should use tabs where possible
#632: FILE: arch/alpha/kernel/sys_noritake.c:286:
+        process_mcheck_info(vector, la_ptr, "NORITAKE APECS",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: arch/alpha/kernel/sys_noritake.c:286:
+        process_mcheck_info(vector, la_ptr, "NORITAKE APECS",$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000030341.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 32 warnings, 16 checks, 474 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000030341.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
