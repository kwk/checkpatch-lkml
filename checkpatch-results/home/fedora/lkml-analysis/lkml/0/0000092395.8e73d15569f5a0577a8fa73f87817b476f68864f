CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#231: FILE: scripts/genksyms/genksyms.c:151:
+		if (map_to_ns(sym->type) == map_to_ns(ns)
+		    && strcmp(name, sym->name) == 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#258: FILE: scripts/genksyms/genksyms.c:165:
+		if (map_to_ns(sym->type) == map_to_ns(type)
+		    && strcmp(name, sym->name) == 0) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#332: FILE: scripts/genksyms/genksyms.c:206:
+		struct string_list *next = s->next;
+		free_node(s);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#371: FILE: scripts/genksyms/genksyms.c:229:
+	p = h = copy_node(s);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#373: FILE: scripts/genksyms/genksyms.c:231:
+		p = p->next = copy_node(s);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#404: FILE: scripts/genksyms/genksyms.c:249:
+static inline void print_node(FILE * f, struct string_list *list)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#440: FILE: scripts/genksyms/genksyms.c:265:
+	      printit:

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#450: FILE: scripts/genksyms/genksyms.c:273:
+void print_list(FILE * f, struct string_list *list)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!list"
#477: FILE: scripts/genksyms/genksyms.c:279:
+	if (list == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#726: FILE: scripts/genksyms/genksyms.c:412:
+	if (!sym)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#728: FILE: scripts/genksyms/genksyms.c:414:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#752: FILE: scripts/genksyms/genksyms.c:427:
+			struct symbol *n = sym->expansion_trail;
+			sym->expansion_trail = 0;

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#831: FILE: scripts/genksyms/genksyms.c:474:
+	fputs("Usage:\n" "genksyms [-dDwqhV] > /path/to/.tmp_obj.ver\n" "\n"

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#975: FILE: scripts/genksyms/genksyms.c:543:
+		extern int yydebug;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#976: FILE: scripts/genksyms/genksyms.c:544:
+		extern int yy_flex_debug;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092395.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 6 warnings, 7 checks, 952 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092395.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
