WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#60: 
--- linux-2.6.7/arch/ia64/mm/discontig.c	2004-07-14 16:01:25.779107830 -0700

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: arch/ia64/mm/discontig.c:187:
+static int build_node_maps(unsigned long start, unsigned long len, int $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#82: FILE: arch/ia64/mm/discontig.c:187:
node)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#134: FILE: arch/ia64/mm/discontig.c:371:
+	pages = bdp->node_low_pfn - (bdp->node_boot_start>>PAGE_SHIFT);
 	                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#193: FILE: arch/ia64/mm/discontig.c:711:
+	max_dma = virt_to_phys((void *) MAX_DMA_ADDRESS) >> PAGE_SHIFT;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#226: FILE: arch/ia64/mm/discontig.c:744:
+	printk("%s: start = %016lx, end = %016lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: arch/ia64/mm/discontig.c:745:
+	printk("%s: start = %016lx, end = %016lx\n",
+		__FUNCTION__, *start, *end);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#227: FILE: arch/ia64/mm/discontig.c:745:
+		__FUNCTION__, *start, *end);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#261: FILE: arch/ia64/mm/discontig.c:778:
+		printk("space for the new node %d could not be allocated!",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: arch/ia64/mm/discontig.c:779:
+		printk("space for the new node %d could not be allocated!",
+			nid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#269: FILE: arch/ia64/mm/discontig.c:786:
+	init_bootmem_node(mem_data[nid].pgdat,
+			map>>PAGE_SHIFT,

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#269: FILE: arch/ia64/mm/discontig.c:786:
+			map>>PAGE_SHIFT,
 			   ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#270: FILE: arch/ia64/mm/discontig.c:787:
+			bdp->node_boot_start>>PAGE_SHIFT,
 			                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: arch/ia64/mm/discontig.c:790:
+^I        free_node_bootmem(start, end - start, nid);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#278: FILE: arch/ia64/mm/discontig.c:795:
+	for(cpu = 0; cpu < NR_CPUS; cpu++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#278: FILE: arch/ia64/mm/discontig.c:795:
+	for(cpu = 0; cpu < NR_CPUS; cpu++) {

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#280: FILE: arch/ia64/mm/discontig.c:797:
+		per_cpu(cpu_info, cpu).node_data->pg_data_ptrs[nid]
+			= mem_data[nid].pgdat;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

ERROR:SPACING: space required before the open parenthesis '('
#289: FILE: arch/ia64/mm/discontig.c:806:
+	for(pgdat = &pgdat_list; *pgdat; pgdat = &(*pgdat)->pgdat_next)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pgdat"
#296: FILE: arch/ia64/mm/discontig.c:813:
+	if (*pgdat == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#300: FILE: arch/ia64/mm/discontig.c:817:
+		int lim=0;
 		       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#301: FILE: arch/ia64/mm/discontig.c:818:
+		int lim=0;
+		printk("%s: zone = ", __FUNCTION__);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#301: FILE: arch/ia64/mm/discontig.c:818:
+		printk("%s: zone = ", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#301: FILE: arch/ia64/mm/discontig.c:818:
+		printk("%s: zone = ", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#302: FILE: arch/ia64/mm/discontig.c:819:
+		for_each_zone (z) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#303: FILE: arch/ia64/mm/discontig.c:820:
+			printk("%p ", z);

ERROR:SPACING: space required before the open parenthesis '('
#304: FILE: arch/ia64/mm/discontig.c:821:
+			if(lim++ > 10)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#307: FILE: arch/ia64/mm/discontig.c:824:
+		printk("\n");

ERROR:SPACING: space required before the open parenthesis '('
#339: FILE: arch/ia64/mm/init.c:450:
+		if(system_state == SYSTEM_RUNNING) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#341: FILE: arch/ia64/mm/init.c:452:
+			unsigned long pstart, pend;
+			get_new_node_memory_info(nid, &pstart, &pend);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#345: FILE: arch/ia64/mm/init.c:456:
+		} else
[...]
  		efi_memmap_walk(virtual_memmap_init, &args);

CHECK:BRACES: Unbalanced braces around else statement
#345: FILE: arch/ia64/mm/init.c:456:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#362: FILE: include/linux/bootmem.h:42:
+extern unsigned long bootmem_bootmap_pages (unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#362: FILE: include/linux/bootmem.h:42:
+extern unsigned long bootmem_bootmap_pages (unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#384: FILE: include/linux/bootmem.h:66:
+extern unsigned long init_bootmem_node (pg_data_t *pgdat, unsigned long $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#384: FILE: include/linux/bootmem.h:66:
+extern unsigned long init_bootmem_node (pg_data_t *pgdat, unsigned long 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#386: FILE: include/linux/bootmem.h:67:
+extern void reserve_bootmem_node (pg_data_t *pgdat, unsigned long $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#386: FILE: include/linux/bootmem.h:67:
+extern void reserve_bootmem_node (pg_data_t *pgdat, unsigned long 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: include/linux/bootmem.h:68:
+extern void free_bootmem_node (pg_data_t *pgdat, unsigned long addr, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#388: FILE: include/linux/bootmem.h:68:
+extern void free_bootmem_node (pg_data_t *pgdat, unsigned long addr, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: include/linux/bootmem.h:69:
+extern void * __alloc_bootmem_node (pg_data_t *pgdat, unsigned long $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#390: FILE: include/linux/bootmem.h:69:
+extern void free_bootmem_node (pg_data_t *pgdat, unsigned long addr, 
+extern void * __alloc_bootmem_node (pg_data_t *pgdat, unsigned long 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#390: FILE: include/linux/bootmem.h:69:
+extern void * __alloc_bootmem_node (pg_data_t *pgdat, unsigned long 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#390: FILE: include/linux/bootmem.h:69:
+extern void * __alloc_bootmem_node (pg_data_t *pgdat, unsigned long 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#391: FILE: include/linux/bootmem.h:69:
+extern void free_bootmem_node (pg_data_t *pgdat, unsigned long addr, 
size, unsigned long align, unsigned long goal);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#393: FILE: include/linux/bootmem.h:71:
+extern unsigned long __init free_all_bootmem_node (pg_data_t *pgdat);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#419: FILE: mm/bootmem.c:50:
+static unsigned long init_bootmem_core (pg_data_t *pgdat,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#420: FILE: mm/bootmem.c:51:
+static unsigned long init_bootmem_core (pg_data_t *pgdat,
+	unsigned long mapstart, unsigned long start, unsigned long end)

CHECK:BRACES: Unbalanced braces around else statement
#437: FILE: mm/bootmem.c:66:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#448: FILE: mm/bootmem.c:90:
+static void reserve_bootmem_core(bootmem_data_t *bdata, unsigned long $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#462: FILE: mm/bootmem.c:119:
+static void free_bootmem_core(bootmem_data_t *bdata, unsigned long $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#488: FILE: mm/bootmem.c:331:
+unsigned long init_bootmem_node (pg_data_t *pgdat, unsigned long $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#499: FILE: mm/bootmem.c:340:
+void reserve_bootmem_node (pg_data_t *pgdat, unsigned long physaddr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#501: FILE: mm/bootmem.c:341:
+void reserve_bootmem_node (pg_data_t *pgdat, unsigned long physaddr, 
+#else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#510: FILE: mm/bootmem.c:349:
+void free_bootmem_node (pg_data_t *pgdat, unsigned long physaddr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#512: FILE: mm/bootmem.c:350:
+void free_bootmem_node (pg_data_t *pgdat, unsigned long physaddr, 
+#else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#524: FILE: mm/bootmem.c:407:
+void * __alloc_bootmem_node (pg_data_t *pgdat, unsigned long size, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#524: FILE: mm/bootmem.c:407:
+void * __alloc_bootmem_node (pg_data_t *pgdat, unsigned long size, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#526: FILE: mm/bootmem.c:408:
+void * __alloc_bootmem_node (pg_data_t *pgdat, unsigned long size, 
+#else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#542: FILE: mm/page_alloc.c:995:
+static unsigned long get_boot_pages(unsigned int gfp_mask, unsigned int $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000266725.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 15 warnings, 23 checks, 453 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000266725.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
