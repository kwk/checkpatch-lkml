WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#71: 
diff -urP -I \$Id:.*Exp \$ -X /usr/src/patch.exclude linux-2.5.43-bk1-kb/arch/i386/kernel/entry.S linux/arch/i386/kernel/entry.S

WARNING:TABSTOP: Statements should start on a tabstop
#150: FILE: include/asm-generic/siginfo.h:240:
+		 int _tid;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#169: FILE: include/asm-i386/posix_types.h:25:
+typedef int		__kernel_timer_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#170: FILE: include/asm-i386/posix_types.h:26:
+typedef int		__kernel_clockid_t;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: include/asm-i386/signal.h:224:
+ * The issue is that these functions need the *regs pointer which is $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: include/asm-i386/signal.h:232:
+ * could be undefined, resulting in not needing to stack all the $

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#192: FILE: include/asm-i386/signal.h:233:
+ * parms over again, i.e. better (faster AND smaller) code.
    ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: include/asm-i386/signal.h:236:
+ * on the way to do_signal().  It (i.e. do_signal()) saves the regs on $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: include/asm-i386/signal.h:239:
+ * set in the register PRIOR to calling do_signal().  See our answer $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#203: FILE: include/asm-i386/signal.h:244:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: include/asm-i386/signal.h:246:
+extern long do_clock_nanosleep(struct pt_regs *regs, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#205: FILE: include/asm-i386/signal.h:246:
+extern long do_clock_nanosleep(struct pt_regs *regs, 

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: include/asm-i386/signal.h:247:
+^I^I^Iclockid_t which_clock, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: include/asm-i386/signal.h:247:
+extern long do_clock_nanosleep(struct pt_regs *regs, 
+			clockid_t which_clock, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: include/asm-i386/signal.h:248:
+^I^I^Iint flags, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: include/asm-i386/signal.h:249:
+^I^I^Iconst struct timespec *rqtp, $

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#211: FILE: include/asm-i386/signal.h:252:
+#define NANOSLEEP_ENTRY(a) \
+  asmlinkage long sys_nanosleep( struct timespec* rqtp, \
+                                 struct timespec * rmtp) \
+{       struct pt_regs *regs = (struct pt_regs *)&rqtp; \
+        return do_clock_nanosleep(regs, CLOCK_REALTIME, 0, rqtp, rmtp); \
+} 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: include/asm-i386/signal.h:253:
+  asmlinkage long sys_nanosleep( struct timespec* rqtp, \$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#212: FILE: include/asm-i386/signal.h:253:
+  asmlinkage long sys_nanosleep( struct timespec* rqtp, \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#212: FILE: include/asm-i386/signal.h:253:
+  asmlinkage long sys_nanosleep( struct timespec* rqtp, \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: include/asm-i386/signal.h:254:
+                                 struct timespec * rmtp) \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: include/asm-i386/signal.h:254:
+                                 struct timespec * rmtp) \$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#213: FILE: include/asm-i386/signal.h:254:
+                                 struct timespec * rmtp) \

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: include/asm-i386/signal.h:256:
+        return do_clock_nanosleep(regs, CLOCK_REALTIME, 0, rqtp, rmtp); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: include/asm-i386/signal.h:256:
+        return do_clock_nanosleep(regs, CLOCK_REALTIME, 0, rqtp, rmtp); \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: include/asm-i386/signal.h:257:
+} $

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#218: FILE: include/asm-i386/signal.h:259:
+#define CLOCK_NANOSLEEP_ENTRY(a) asmlinkage long sys_clock_nanosleep( \
+                               clockid_t which_clock,      \
+                               int flags,                  \
+                               const struct timespec *rqtp, \
+                               struct timespec *rmtp)       \
+{       struct pt_regs *regs = (struct pt_regs *)&which_clock; \
+        return do_clock_nanosleep(regs, which_clock, flags, rqtp, rmtp); \
+} \
+long do_clock_nanosleep(struct pt_regs *regs, \
+                    clockid_t which_clock,      \
+                    int flags,                  \
+                    const struct timespec *rqtp, \
+                    struct timespec *rmtp)       \
+{        a

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: include/asm-i386/signal.h:260:
+                               clockid_t which_clock,      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: include/asm-i386/signal.h:260:
+                               clockid_t which_clock,      \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: include/asm-i386/signal.h:261:
+                               int flags,                  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: include/asm-i386/signal.h:261:
+                               int flags,                  \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: include/asm-i386/signal.h:262:
+                               const struct timespec *rqtp, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: include/asm-i386/signal.h:262:
+                               const struct timespec *rqtp, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: include/asm-i386/signal.h:263:
+                               struct timespec *rmtp)       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: include/asm-i386/signal.h:263:
+                               struct timespec *rmtp)       \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: include/asm-i386/signal.h:265:
+        return do_clock_nanosleep(regs, which_clock, flags, rqtp, rmtp); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: include/asm-i386/signal.h:265:
+        return do_clock_nanosleep(regs, which_clock, flags, rqtp, rmtp); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: include/asm-i386/signal.h:268:
+                    clockid_t which_clock,      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: include/asm-i386/signal.h:268:
+                    clockid_t which_clock,      \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: include/asm-i386/signal.h:269:
+                    int flags,                  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: include/asm-i386/signal.h:269:
+                    int flags,                  \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: include/asm-i386/signal.h:270:
+                    const struct timespec *rqtp, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: include/asm-i386/signal.h:270:
+                    const struct timespec *rqtp, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: include/asm-i386/signal.h:271:
+                    struct timespec *rmtp)       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: include/asm-i386/signal.h:271:
+                    struct timespec *rmtp)       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: include/asm-i386/signal.h:276:
+      asmlinkage long sys_nanosleep( struct timespec* rqtp, \$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#235: FILE: include/asm-i386/signal.h:276:
+      asmlinkage long sys_nanosleep( struct timespec* rqtp, \

ERROR:SPACING: space prohibited after that open parenthesis '('
#235: FILE: include/asm-i386/signal.h:276:
+      asmlinkage long sys_nanosleep( struct timespec* rqtp, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: include/asm-i386/signal.h:277:
+                                     struct timespec * rmtp) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: include/asm-i386/signal.h:277:
+                                     struct timespec * rmtp) \$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#236: FILE: include/asm-i386/signal.h:277:
+                                     struct timespec * rmtp) \

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: include/asm-i386/signal.h:279:
+        a$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: include/asm-i386/signal.h:279:
+        a$

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: include/asm-i386/signal.h:281:
+                               clockid_t which_clock,      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: include/asm-i386/signal.h:281:
+                               clockid_t which_clock,      \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: include/asm-i386/signal.h:282:
+                               int flags,                  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: include/asm-i386/signal.h:282:
+                               int flags,                  \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: include/asm-i386/signal.h:283:
+                               const struct timespec *rqtp, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: include/asm-i386/signal.h:283:
+                               const struct timespec *rqtp, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: include/asm-i386/signal.h:284:
+                               struct timespec *rmtp)       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: include/asm-i386/signal.h:284:
+                               struct timespec *rmtp)       \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: include/asm-i386/signal.h:286:
+        a$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: include/asm-i386/signal.h:286:
+        a$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#259: FILE: include/asm-i386/unistd.h:262:
+#define __NR_timer_settime	(__NR_timer_create+1)
                           	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#260: FILE: include/asm-i386/unistd.h:263:
+#define __NR_timer_gettime	(__NR_timer_create+2)
                           	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#261: FILE: include/asm-i386/unistd.h:264:
+#define __NR_timer_getoverrun	(__NR_timer_create+3)
                              	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#262: FILE: include/asm-i386/unistd.h:265:
+#define __NR_timer_delete	(__NR_timer_create+4)
                          	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#263: FILE: include/asm-i386/unistd.h:266:
+#define __NR_clock_settime	(__NR_timer_create+5)
                           	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#264: FILE: include/asm-i386/unistd.h:267:
+#define __NR_clock_gettime	(__NR_timer_create+6)
                           	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#265: FILE: include/asm-i386/unistd.h:268:
+#define __NR_clock_getres	(__NR_timer_create+7)
                          	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#266: FILE: include/asm-i386/unistd.h:269:
+#define __NR_clock_nanosleep	(__NR_timer_create+8)
                             	                  ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#285: FILE: include/linux/posix-timers.h:1:
+#ifndef _linux_POSIX_TIMERS_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TABSTOP: Statements should start on a tabstop
#289: FILE: include/linux/posix-timers.h:5:
+	 int  res;		    /* in nano seconds */

WARNING:SPACING: Unnecessary space after function pointer open parenthesis
#290: FILE: include/linux/posix-timers.h:6:
+	 int ( *clock_set)(struct timespec *tp);

ERROR:SPACING: space prohibited after that open parenthesis '('
#290: FILE: include/linux/posix-timers.h:6:
+	 int ( *clock_set)(struct timespec *tp);

WARNING:SPACING: Unnecessary space after function pointer open parenthesis
#291: FILE: include/linux/posix-timers.h:7:
+	 int ( *clock_get)(struct timespec *tp);

ERROR:SPACING: space prohibited after that open parenthesis '('
#291: FILE: include/linux/posix-timers.h:7:
+	 int ( *clock_get)(struct timespec *tp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: include/linux/posix-timers.h:8:
+^I int ( *nsleep)(   int flags, $

WARNING:SPACING: Unnecessary space after function pointer open parenthesis
#292: FILE: include/linux/posix-timers.h:8:
+	 int ( *nsleep)(   int flags, 

ERROR:SPACING: space prohibited after that open parenthesis '('
#292: FILE: include/linux/posix-timers.h:8:
+	 int ( *nsleep)(   int flags, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: include/linux/posix-timers.h:9:
+	 int ( *nsleep)(   int flags, 
+			   struct timespec*new_setting,

ERROR:POINTER_LOCATION: "foo*bar" should be "foo *bar"
#293: FILE: include/linux/posix-timers.h:9:
+			   struct timespec*new_setting,

WARNING:SPACING: Unnecessary space after function pointer open parenthesis
#295: FILE: include/linux/posix-timers.h:11:
+	 int ( *timer_set)(struct k_itimer *timr, int flags,

ERROR:SPACING: space prohibited after that open parenthesis '('
#295: FILE: include/linux/posix-timers.h:11:
+	 int ( *timer_set)(struct k_itimer *timr, int flags,

WARNING:SPACING: Unnecessary space after function pointer open parenthesis
#298: FILE: include/linux/posix-timers.h:14:
+	 int  ( *timer_del)(struct k_itimer *timr);

ERROR:SPACING: space prohibited after that open parenthesis '('
#298: FILE: include/linux/posix-timers.h:14:
+	 int  ( *timer_del)(struct k_itimer *timr);

WARNING:SPACING: Unnecessary space after function pointer open parenthesis
#299: FILE: include/linux/posix-timers.h:15:
+	 void ( *timer_get)(struct k_itimer *timr,

ERROR:SPACING: space prohibited after that open parenthesis '('
#299: FILE: include/linux/posix-timers.h:15:
+	 void ( *timer_get)(struct k_itimer *timr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: include/linux/posix-timers.h:16:
+	 void ( *timer_get)(struct k_itimer *timr,
+			   struct itimerspec *cur_setting);

WARNING:TABSTOP: Statements should start on a tabstop
#324: FILE: include/linux/sched.h:295:
+	 int it_sub_incr;		 /* sub jiffie part of interval */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#330: FILE: include/linux/sched.h:301:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#332: FILE: include/linux/sched.h:303:
+extern void itimer_delete(struct k_itimer *timers);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#349: FILE: include/linux/sched.h:675:
+extern void exit_itimers(struct task_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#349: FILE: include/linux/sched.h:675:
+extern void exit_itimers(struct task_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#368: FILE: include/linux/signal.h:235:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#368: FILE: include/linux/signal.h:235:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#368: FILE: include/linux/signal.h:235:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#368: FILE: include/linux/signal.h:235:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
                                                    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#368: FILE: include/linux/signal.h:235:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
+type name(p1_type p1,p2_type p2)\
+{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#369: FILE: include/linux/signal.h:236:
+type name(p1_type p1,p2_type p2)\
                     ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#376: FILE: include/linux/signal.h:243:
+#define NANOSLEEP_ENTRY(a) asmlinkage long sys_nanosleep( struct timespec* rqtp, \

ERROR:SPACING: space prohibited after that open parenthesis '('
#376: FILE: include/linux/signal.h:243:
+#define NANOSLEEP_ENTRY(a) asmlinkage long sys_nanosleep( struct timespec* rqtp, \

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#377: FILE: include/linux/signal.h:244:
+							  struct timespec * rmtp) \

ERROR:TRAILING_WHITESPACE: trailing whitespace
#387: FILE: include/linux/signal.h:254:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: include/linux/signal.h:254:
+ $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#432: FILE: include/linux/time.h:140:
+extern int do_sys_settimeofday(struct timeval *tv, struct timezone *tz);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#433: FILE: include/linux/time.h:141:
+extern void clock_was_set(void); // call when ever the clock is set

CHECK:LINE_SPACING: Please don't use multiple blank lines
#442: FILE: include/linux/time.h:168:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#470: FILE: include/linux/types.h:26:
+typedef __kernel_timer_t	timer_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#471: FILE: include/linux/types.h:27:
+typedef __kernel_clockid_t	clockid_t;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#524: FILE: kernel/exit.c:417:
+	while (tsk->posix_timers.next != &tsk->posix_timers){
+		 tmr = list_entry(tsk->posix_timers.next,struct k_itimer,list);

ERROR:SPACING: space required before the open brace '{'
#524: FILE: kernel/exit.c:417:
+	while (tsk->posix_timers.next != &tsk->posix_timers){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#525: FILE: kernel/exit.c:418:
+		 tmr = list_entry(tsk->posix_timers.next,struct k_itimer,list);
 		                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#525: FILE: kernel/exit.c:418:
+		 tmr = list_entry(tsk->posix_timers.next,struct k_itimer,list);
 		                                                        ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#561: FILE: kernel/posix-timers.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: kernel/posix-timers.c:4:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#569: FILE: kernel/posix-timers.c:9:
+/* These are all the functions necessary to implement $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#579: FILE: kernel/posix-timers.c:19:
+#include <asm/uaccess.h>

ERROR:SPACING: space required after that ',' (ctx:VxV)
#590: FILE: kernel/posix-timers.c:30:
+#define div_long_long_rem(dividend,divisor,remainder) ({ \
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#590: FILE: kernel/posix-timers.c:30:
+#define div_long_long_rem(dividend,divisor,remainder) ({ \
                                           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'remainder' may be better as '(remainder)' to avoid precedence issues
#590: FILE: kernel/posix-timers.c:30:
+#define div_long_long_rem(dividend,divisor,remainder) ({ \
+		       u64 result = dividend;		\
+		       *remainder = do_div(result,divisor); \
+		       result; })

WARNING:TABSTOP: Statements should start on a tabstop
#591: FILE: kernel/posix-timers.c:31:
+		       u64 result = dividend;		\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#592: FILE: kernel/posix-timers.c:32:
+		       *remainder = do_div(result,divisor); \
 		                                 ^

WARNING:TYPO_SPELLING: 'CHUNCK' may be misspelled - perhaps 'CHUNK'?
#599: FILE: kernel/posix-timers.c:39:
+ * is allocated a CHUNCK at a time.  Pointers to the CHUNCKS are kept in
                   ^^^^^^

WARNING:TYPO_SPELLING: 'CHUNCKS' may be misspelled - perhaps 'CHUNKS'?
#599: FILE: kernel/posix-timers.c:39:
+ * is allocated a CHUNCK at a time.  Pointers to the CHUNCKS are kept in
                                                      ^^^^^^^

WARNING:TYPO_SPELLING: 'CHUNCKS' may be misspelled - perhaps 'CHUNKS'?
#600: FILE: kernel/posix-timers.c:40:
+ * an array of pointers.  A bit map is kept of CHUNCKS that have free
                                                ^^^^^^^

WARNING:TYPO_SPELLING: 'CHUNCK' may be misspelled - perhaps 'CHUNK'?
#601: FILE: kernel/posix-timers.c:41:
+ * timers.  Allocation is always made from the first CHUNCK that has a
                                                      ^^^^^^

WARNING:TYPO_SPELLING: 'CHUNCKS' may be misspelled - perhaps 'CHUNKS'?
#602: FILE: kernel/posix-timers.c:42:
+ * free timer.	 Timers in CHUNCKS are kept in a free list, which is
               	           ^^^^^^^

WARNING:TYPO_SPELLING: 'CHUNCK' may be misspelled - perhaps 'CHUNK'?
#603: FILE: kernel/posix-timers.c:43:
+ * unordered.	A count of free timers in a CHUNCK is kept and when all
              	                            ^^^^^^

WARNING:TYPO_SPELLING: 'CHUNCK' may be misspelled - perhaps 'CHUNK'?
#604: FILE: kernel/posix-timers.c:44:
+ * timers in a CHUNCK are free, the CHUNCK memory is returned and the
                ^^^^^^

WARNING:TYPO_SPELLING: 'CHUNCK' may be misspelled - perhaps 'CHUNK'?
#604: FILE: kernel/posix-timers.c:44:
+ * timers in a CHUNCK are free, the CHUNCK memory is returned and the
                                     ^^^^^^

WARNING:TYPO_SPELLING: 'CHUNCK' may be misspelled - perhaps 'CHUNK'?
#605: FILE: kernel/posix-timers.c:45:
+ * CHUNCK is marked empty in the bit map.  The free slot in the CHUNCK
    ^^^^^^

WARNING:TYPO_SPELLING: 'CHUNCK' may be misspelled - perhaps 'CHUNK'?
#605: FILE: kernel/posix-timers.c:45:
+ * CHUNCK is marked empty in the bit map.  The free slot in the CHUNCK
                                                                 ^^^^^^

WARNING:TYPO_SPELLING: 'CHUNCK' may be misspelled - perhaps 'CHUNK'?
#606: FILE: kernel/posix-timers.c:46:
+ * array is linked into the free list for CHUNCK pointers. 
                                           ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#606: FILE: kernel/posix-timers.c:46:
+ * array is linked into the free list for CHUNCK pointers. $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#611: FILE: kernel/posix-timers.c:51:
+#define get_timer_chunck()(struct posix_timer_chunck *)__get_free_page(GFP_KERNEL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#620: FILE: kernel/posix-timers.c:60:
+ * some such but that is recursive... $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#622: FILE: kernel/posix-timers.c:62:
+#define CHUNCK_OVERHEAD (sizeof(struct list_head) + sizeof(int)^I + sizeof(int)) $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxW)
#624: FILE: kernel/posix-timers.c:64:
+	  ((POSIX_TIMERS_CHUNCK_SIZE - CHUNCK_OVERHEAD)/ sizeof(struct k_itimer))
 	                                               ^

WARNING:TABSTOP: Statements should start on a tabstop
#627: FILE: kernel/posix-timers.c:67:
+	 struct list_head free_list;

WARNING:TABSTOP: Statements should start on a tabstop
#628: FILE: kernel/posix-timers.c:68:
+	 int used_count;

WARNING:TABSTOP: Statements should start on a tabstop
#629: FILE: kernel/posix-timers.c:69:
+	 int index;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#635: FILE: kernel/posix-timers.c:75:
+#define MAX_POSIX_TIMERS NUM_CHUNCKS_POSIX_TIMERS * NUM_POSIX_TIMERS_PER_CHUNCK

CHECK:LINE_SPACING: Please don't use multiple blank lines
#639: FILE: kernel/posix-timers.c:79:
+
+

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tmr' may be better as '(tmr)' to avoid precedence issues
#647: FILE: kernel/posix-timers.c:87:
+#define timer_active(tmr) (tmr->it_timer.entry.prev != (void *)TIMER_INACTIVE)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tmr' may be better as '(tmr)' to avoid precedence issues
#648: FILE: kernel/posix-timers.c:88:
+#define set_timer_inactive(tmr) tmr->it_timer.entry.prev = (void *)TIMER_INACTIVE

WARNING:TYPO_SPELLING: 'chuncks' may be misspelled - perhaps 'chunks'?
#661: FILE: kernel/posix-timers.c:101:
+ * The <free_list> is an array index into the <chuncks> array.	 If a
                                                ^^^^^^^

WARNING:TYPO_SPELLING: 'chunck' may be misspelled - perhaps 'chunk'?
#662: FILE: kernel/posix-timers.c:102:
+ * <chunck> is populated, the array element will point to a struct
     ^^^^^^

WARNING:TYPO_SPELLING: 'chunck' may be misspelled - perhaps 'chunk'?
#664: FILE: kernel/posix-timers.c:104:
+ * <chunck> is not populated it will contain an array index to the next
     ^^^^^^

WARNING:TYPO_SPELLING: 'chunck' may be misspelled - perhaps 'chunk'?
#665: FILE: kernel/posix-timers.c:105:
+ * free <chunck>, or if there are no more it will be
          ^^^^^^

WARNING:TYPO_SPELLING: 'chunck' may be misspelled - perhaps 'chunk'?
#667: FILE: kernel/posix-timers.c:107:
+ * (this fact is used to verify that a <chunck> is populated and that we
                                         ^^^^^^

WARNING:TYPO_SPELLING: 'chuncks' may be misspelled - perhaps 'chunks'?
#668: FILE: kernel/posix-timers.c:108:
+ * have reached the end of free <chuncks>.
                                  ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#671: FILE: kernel/posix-timers.c:111:
+ *^I   this time and so, these next two entries are not defined. $

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#674: FILE: kernel/posix-timers.c:114:
+#if 0	 // We are not doing this at this time (ever?).

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#676: FILE: kernel/posix-timers.c:116:
+ /*
+ * The <abs_list> is a list of all active (some fudging on this, see the

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#680: FILE: kernel/posix-timers.c:120:
+ * day clock is set or adjusted.
+  *

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#681: FILE: kernel/posix-timers.c:121:
+  *
+ * The <abs_list_lock> is used to protect entries and exits from the <abs_list>.

WARNING:TYPO_SPELLING: 'chuncks' may be misspelled - perhaps 'chunks'?
#687: FILE: kernel/posix-timers.c:127:
+ * The <chuncks> array is described above.  The timer ID is composed of
         ^^^^^^^

WARNING:TYPO_SPELLING: 'chuncks' may be misspelled - perhaps 'chunks'?
#688: FILE: kernel/posix-timers.c:128:
+ * the <chuncks> index and the array index of <timers> in that chunck.
         ^^^^^^^

WARNING:TYPO_SPELLING: 'chunck' may be misspelled - perhaps 'chunk'?
#688: FILE: kernel/posix-timers.c:128:
+ * the <chuncks> index and the array index of <timers> in that chunck.
                                                                ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#690: FILE: kernel/posix-timers.c:130:
+ * $

WARNING:TYPO_SPELLING: 'chunck' may be misspelled - perhaps 'chunk'?
#691: FILE: kernel/posix-timers.c:131:
+ * a) checking that the chunck index is < NUM_CHUNCKS_POSIX_TIMERS and 
                         ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#691: FILE: kernel/posix-timers.c:131:
+ * a) checking that the chunck index is < NUM_CHUNCKS_POSIX_TIMERS and $

WARNING:TYPO_SPELLING: 'chunck' may be misspelled - perhaps 'chunk'?
#692: FILE: kernel/posix-timers.c:132:
+ * b) that that chunck is allocated (i.e. the <chuncks> array entry 
                 ^^^^^^

WARNING:TYPO_SPELLING: 'chuncks' may be misspelled - perhaps 'chunks'?
#692: FILE: kernel/posix-timers.c:132:
+ * b) that that chunck is allocated (i.e. the <chuncks> array entry 
                                                ^^^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'that'
#692: FILE: kernel/posix-timers.c:132:
+ * b) that that chunck is allocated (i.e. the <chuncks> array entry 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#692: FILE: kernel/posix-timers.c:132:
+ * b) that that chunck is allocated (i.e. the <chuncks> array entry $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#693: FILE: kernel/posix-timers.c:133:
+ *    is > NUM_CHUNCKS_POSIX_TIMERS) and $

WARNING:TABSTOP: Statements should start on a tabstop
#699: FILE: kernel/posix-timers.c:139:
+	 struct	 semaphore	      list_lock;

WARNING:TABSTOP: Statements should start on a tabstop
#700: FILE: kernel/posix-timers.c:140:
+	 int			      free_list;

WARNING:LINE_SPACING: Missing a blank line after declarations
#701: FILE: kernel/posix-timers.c:141:
+	 int			      free_list;
+	 IF_ABS_TIME_ADJ(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#701: FILE: kernel/posix-timers.c:141:
+	 IF_ABS_TIME_ADJ(

WARNING:TABSTOP: Statements should start on a tabstop
#702: FILE: kernel/posix-timers.c:142:
+			 struct list_head	      abs_list;

WARNING:TABSTOP: Statements should start on a tabstop
#703: FILE: kernel/posix-timers.c:143:
+			 spinlock_t		      abs_list_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#703: FILE: kernel/posix-timers.c:143:
+			 spinlock_t		      abs_list_lock;

WARNING:LINE_SPACING: Missing a blank line after declarations
#704: FILE: kernel/posix-timers.c:144:
+			 spinlock_t		      abs_list_lock;
+			 )

WARNING:TYPO_SPELLING: 'chunck' may be misspelled - perhaps 'chunk'?
#706: FILE: kernel/posix-timers.c:146:
+		 struct	 posix_timer_chunck * chunck[NUM_CHUNCKS_POSIX_TIMERS];
 		       	                      ^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#706: FILE: kernel/posix-timers.c:146:
+		 struct	 posix_timer_chunck * chunck[NUM_CHUNCKS_POSIX_TIMERS];

ERROR:SPACING: space prohibited after that open parenthesis '('
#709: FILE: kernel/posix-timers.c:149:
+} posix_timers = { list_lock:	   __MUTEX_INITIALIZER( posix_timers.list_lock)

WARNING:TYPO_SPELLING: 'chuncks' may be misspelled - perhaps 'chunks'?
#711: FILE: kernel/posix-timers.c:151:
+#define chuncks chunck_free.chunck
         ^^^^^^^

WARNING:TYPO_SPELLING: 'chunck' may be misspelled - perhaps 'chunk'?
#711: FILE: kernel/posix-timers.c:151:
+#define chuncks chunck_free.chunck
                             ^^^^^^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#712: FILE: kernel/posix-timers.c:152:
+#define free	 chunck_free. \
+		      free_ent

ERROR:SPACING: space required after that ',' (ctx:ExV)
#715: FILE: kernel/posix-timers.c:155:
+		    ,abs_list:	    LIST_HEAD_INIT(posix_timers.abs_list)
 		    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#715: FILE: kernel/posix-timers.c:155:
+		    ,abs_list:	    LIST_HEAD_INIT(posix_timers.abs_list)
 		             ^

ERROR:SPACING: space required after that ',' (ctx:ExV)
#716: FILE: kernel/posix-timers.c:156:
+		    ,abs_list_lock: SPIN_LOCK_UNLOCKED
 		    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#716: FILE: kernel/posix-timers.c:156:
+		    ,abs_list_lock: SPIN_LOCK_UNLOCKED
 		                  ^

WARNING:TYPO_SPELLING: 'chunck' may be misspelled - perhaps 'chunk'?
#722: FILE: kernel/posix-timers.c:162:
+ * entry in <posix_timers.chunck[]>.  A set bit indicates that the
                           ^^^^^^

WARNING:TYPO_SPELLING: 'chunck' may be misspelled - perhaps 'chunk'?
#723: FILE: kernel/posix-timers.c:163:
+ * chunck has one or more free timers.	 This makes it easy to quickly
    ^^^^^^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#727: FILE: kernel/posix-timers.c:167:
+	 unsigned long tmr_bit_ary[((NUM_CHUNCKS_POSIX_TIMERS)/32) +1];
 	                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#727: FILE: kernel/posix-timers.c:167:
+	 unsigned long tmr_bit_ary[((NUM_CHUNCKS_POSIX_TIMERS)/32) +1];
 	                                                           ^

WARNING:TABSTOP: Statements should start on a tabstop
#728: FILE: kernel/posix-timers.c:168:
+	 unsigned long guard;

ERROR:SPACING: space required after that close brace '}'
#729: FILE: kernel/posix-timers.c:169:
+}tmr_bits = {guard: -1};

ERROR:TRAILING_WHITESPACE: trailing whitespace
#730: FILE: kernel/posix-timers.c:170:
+#define tmr_bit_map tmr_bits.tmr_bit_ary   $

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#732: FILE: kernel/posix-timers.c:172:
+#define	  set_tmr_bit(bit)    set_bit(((bit)&0x1f),&tmr_bit_map[(bit) >> 5])
        	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#732: FILE: kernel/posix-timers.c:172:
+#define	  set_tmr_bit(bit)    set_bit(((bit)&0x1f),&tmr_bit_map[(bit) >> 5])
        	                                          ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#732: FILE: kernel/posix-timers.c:172:
+#define	  set_tmr_bit(bit)    set_bit(((bit)&0x1f),&tmr_bit_map[(bit) >> 5])
        	                                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bit' - possible side-effects?
#732: FILE: kernel/posix-timers.c:172:
+#define	  set_tmr_bit(bit)    set_bit(((bit)&0x1f),&tmr_bit_map[(bit) >> 5])

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#733: FILE: kernel/posix-timers.c:173:
+#define clear_tmr_bit(bit)  clear_bit(((bit)&0x1f),&tmr_bit_map[(bit) >> 5])
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#733: FILE: kernel/posix-timers.c:173:
+#define clear_tmr_bit(bit)  clear_bit(((bit)&0x1f),&tmr_bit_map[(bit) >> 5])
                                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#733: FILE: kernel/posix-timers.c:173:
+#define clear_tmr_bit(bit)  clear_bit(((bit)&0x1f),&tmr_bit_map[(bit) >> 5])
                                                    ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bit' - possible side-effects?
#733: FILE: kernel/posix-timers.c:173:
+#define clear_tmr_bit(bit)  clear_bit(((bit)&0x1f),&tmr_bit_map[(bit) >> 5])

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#740: FILE: kernel/posix-timers.c:180:
+extern rwlock_t xtime_lock;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#742: FILE: kernel/posix-timers.c:182:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#758: FILE: kernel/posix-timers.c:198:
+ $

WARNING:TYPO_SPELLING: 'underlaying' may be misspelled - perhaps 'underlying'?
#762: FILE: kernel/posix-timers.c:202:
+ *	    resolution may depend on the underlaying clock hardware and
   	                                 ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#776: FILE: kernel/posix-timers.c:216:
+ *^I    fields are not modified by timer code. $

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#788: FILE: kernel/posix-timers.c:228:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                        ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#788: FILE: kernel/posix-timers.c:228:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                              	                       ^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#788: FILE: kernel/posix-timers.c:228:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                       ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#788: FILE: kernel/posix-timers.c:228:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                              	 ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#788: FILE: kernel/posix-timers.c:228:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                              	             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#788: FILE: kernel/posix-timers.c:228:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
+							      clock_fun parms

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'clock_fun' - possible side-effects?
#788: FILE: kernel/posix-timers.c:228:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
+							      clock_fun parms

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'clock_fun' may be better as '(clock_fun)' to avoid precedence issues
#788: FILE: kernel/posix-timers.c:228:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
+							      clock_fun parms

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'parms' - possible side-effects?
#788: FILE: kernel/posix-timers.c:228:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
+							      clock_fun parms

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#789: FILE: kernel/posix-timers.c:229:
+							      clock_fun parms
 							                ^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#791: FILE: kernel/posix-timers.c:231:
+#define p_timer_get( clock,a,b) if_clock_do((clock)->timer_get, \
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#791: FILE: kernel/posix-timers.c:231:
+#define p_timer_get( clock,a,b) if_clock_do((clock)->timer_get, \
                             ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#791: FILE: kernel/posix-timers.c:231:
+#define p_timer_get( clock,a,b) if_clock_do((clock)->timer_get, \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#793: FILE: kernel/posix-timers.c:233:
+					     (a,b))
 					       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#795: FILE: kernel/posix-timers.c:235:
+#define p_nsleep( clock,a,b,c) if_clock_do((clock)->nsleep,   \
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#795: FILE: kernel/posix-timers.c:235:
+#define p_nsleep( clock,a,b,c) if_clock_do((clock)->nsleep,   \
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#795: FILE: kernel/posix-timers.c:235:
+#define p_nsleep( clock,a,b,c) if_clock_do((clock)->nsleep,   \
                            ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#795: FILE: kernel/posix-timers.c:235:
+#define p_nsleep( clock,a,b,c) if_clock_do((clock)->nsleep,   \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#797: FILE: kernel/posix-timers.c:237:
+					    (a,b,c))
 					      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#797: FILE: kernel/posix-timers.c:237:
+					    (a,b,c))
 					        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#799: FILE: kernel/posix-timers.c:239:
+#define p_timer_del( clock,a) if_clock_do((clock)->timer_del, \
                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#799: FILE: kernel/posix-timers.c:239:
+#define p_timer_del( clock,a) if_clock_do((clock)->timer_del, \

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#803: FILE: kernel/posix-timers.c:243:
+void register_posix_clock(int clock_id, struct k_clock * new_clock);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#803: FILE: kernel/posix-timers.c:243:
+void register_posix_clock(int clock_id, struct k_clock * new_clock);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#807: FILE: kernel/posix-timers.c:247:
+int do_posix_clock_monotonic_gettime(struct timespec *tp);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#809: FILE: kernel/posix-timers.c:249:
+int do_posix_clock_monotonic_settime(struct timespec *tp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#811: FILE: kernel/posix-timers.c:251:
+/* $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#818: FILE: kernel/posix-timers.c:258:
+	struct k_clock clock_realtime = {res: NSEC_PER_SEC/HZ};
 	                                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#819: FILE: kernel/posix-timers.c:259:
+^Istruct k_clock clock_monotonic = $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#820: FILE: kernel/posix-timers.c:260:
+	struct k_clock clock_monotonic = 
+	{res: NSEC_PER_SEC/HZ,

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#820: FILE: kernel/posix-timers.c:260:
+	{res: NSEC_PER_SEC/HZ,
 	                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#821: FILE: kernel/posix-timers.c:261:
+^I clock_get:  do_posix_clock_monotonic_gettime, $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#821: FILE: kernel/posix-timers.c:261:
+	 clock_get:  do_posix_clock_monotonic_gettime, 
 	          ^

WARNING:INDENTED_LABEL: labels should not be indented
#821: FILE: kernel/posix-timers.c:261:
+	 clock_get:  do_posix_clock_monotonic_gettime, 

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#822: FILE: kernel/posix-timers.c:262:
+	 clock_set: do_posix_clock_monotonic_settime};
 	          ^

WARNING:INDENTED_LABEL: labels should not be indented
#822: FILE: kernel/posix-timers.c:262:
+	 clock_set: do_posix_clock_monotonic_settime};

ERROR:SPACING: space prohibited after that open parenthesis '('
#824: FILE: kernel/posix-timers.c:264:
+	for ( i = 0; i < NUM_CHUNCKS_POSIX_TIMERS;) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#824: FILE: kernel/posix-timers.c:264:
+	for ( i = 0; i < NUM_CHUNCKS_POSIX_TIMERS;) {
+		posix_timers.free[i] = ++i; 
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#825: FILE: kernel/posix-timers.c:265:
+^I^Iposix_timers.free[i] = ++i; $

ERROR:SPACING: space required after that ',' (ctx:VxO)
#827: FILE: kernel/posix-timers.c:267:
+	register_posix_clock(CLOCK_REALTIME,&clock_realtime);
 	                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#827: FILE: kernel/posix-timers.c:267:
+	register_posix_clock(CLOCK_REALTIME,&clock_realtime);
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#828: FILE: kernel/posix-timers.c:268:
+	register_posix_clock(CLOCK_MONOTONIC,&clock_monotonic);
 	                                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#828: FILE: kernel/posix-timers.c:268:
+	register_posix_clock(CLOCK_MONOTONIC,&clock_monotonic);
 	                                     ^

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#832: FILE: kernel/posix-timers.c:272:
+__initcall(init_posix_timers);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#834: FILE: kernel/posix-timers.c:274:
+static inline int tstojiffie(struct timespec *tp, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#849: FILE: kernel/posix-timers.c:289:
+^I * bits.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#853: FILE: kernel/posix-timers.c:293:
+^I * Do the res thing. (Don't forget the add in the declaration of nsec) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#861: FILE: kernel/posix-timers.c:301:
+^I * We trust that the optimizer will use the remainder from the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#862: FILE: kernel/posix-timers.c:302:
+^I * above div in the following operation as long as they are close. $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#866: FILE: kernel/posix-timers.c:306:
+}
+static void tstotimer(struct itimerspec * time, struct k_itimer * timer)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#866: FILE: kernel/posix-timers.c:306:
+static void tstotimer(struct itimerspec * time, struct k_itimer * timer)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#866: FILE: kernel/posix-timers.c:306:
+static void tstotimer(struct itimerspec * time, struct k_itimer * timer)

WARNING:LINE_SPACING: Missing a blank line after declarations
#869: FILE: kernel/posix-timers.c:309:
+	int res = posix_clocks[timer->it_clock].res;
+	tstojiffie(&time->it_value,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#876: FILE: kernel/posix-timers.c:316:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#876: FILE: kernel/posix-timers.c:316:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#877: FILE: kernel/posix-timers.c:317:
+ 
+

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#888: FILE: kernel/posix-timers.c:328:
+	if (! (timr->it_sigev_notify & SIGEV_NONE)) {
 	    ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#889: FILE: kernel/posix-timers.c:329:
+	if (! (timr->it_sigev_notify & SIGEV_NONE)) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#909: FILE: kernel/posix-timers.c:349:
+			printk(KERN_WARNING "sending signal failed: %d\n", ret);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#915: FILE: kernel/posix-timers.c:355:
+/* $

ERROR:SPACING: space required before the open brace '{'
#926: FILE: kernel/posix-timers.c:366:
+	if ((interval = timr->it_incr) == 0){

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#926: FILE: kernel/posix-timers.c:366:
+	if ((interval = timr->it_incr) == 0){

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#932: FILE: kernel/posix-timers.c:372:
+	if (interval > (unsigned long) LONG_MAX)

WARNING:TYPO_SPELLING: 'interrutps' may be misspelled - perhaps 'interrupts'?
#941: FILE: kernel/posix-timers.c:381:
+ * The run_timer_list code ALWAYS calls with interrutps on.
                                              ^^^^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#951: FILE: kernel/posix-timers.c:391:
+}
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#952: FILE: kernel/posix-timers.c:392:
+ * For some reason mips/mips64 define the SIGEV constants plus 128.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#953: FILE: kernel/posix-timers.c:393:
+ * Here we define a mask to get rid of the common bits.^I The $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#956: FILE: kernel/posix-timers.c:396:
+#if (ARCH == mips) || (ARCH == mips64)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#962: FILE: kernel/posix-timers.c:402:
+#define MIPS_SIGEV (int)-1

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#965: FILE: kernel/posix-timers.c:405:
+static inline struct task_struct * good_sigevent(sigevent_t *event)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#967: FILE: kernel/posix-timers.c:407:
+	struct task_struct * rtn = current;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#969: FILE: kernel/posix-timers.c:409:
+	if (event->sigev_notify & SIGEV_THREAD_ID & MIPS_SIGEV ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#970: FILE: kernel/posix-timers.c:410:
+^I^Iif ( !(rtn = $

ERROR:SPACING: space prohibited after that open parenthesis '('
#970: FILE: kernel/posix-timers.c:410:
+		if ( !(rtn = 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#970: FILE: kernel/posix-timers.c:410:
+		if ( !(rtn = 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#977: FILE: kernel/posix-timers.c:417:
+		if ((unsigned)(event->sigev_signo > SIGRTMAX))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#980: FILE: kernel/posix-timers.c:420:
+	if (event->sigev_notify & ~(SIGEV_SIGNAL | SIGEV_THREAD_ID )) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#980: FILE: kernel/posix-timers.c:420:
+	if (event->sigev_notify & ~(SIGEV_SIGNAL | SIGEV_THREAD_ID )) {
+		return NULL;
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#986: FILE: kernel/posix-timers.c:426:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#987: FILE: kernel/posix-timers.c:427:
+void register_posix_clock(int clock_id,struct k_clock * new_clock)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#987: FILE: kernel/posix-timers.c:427:
+void register_posix_clock(int clock_id,struct k_clock * new_clock)
                                       ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#989: FILE: kernel/posix-timers.c:429:
+	if ( (unsigned)clock_id >= MAX_CLOCKS){

ERROR:SPACING: space required before the open brace '{'
#989: FILE: kernel/posix-timers.c:429:
+	if ( (unsigned)clock_id >= MAX_CLOCKS){

ERROR:SPACING: space prohibited after that open parenthesis '('
#989: FILE: kernel/posix-timers.c:429:
+	if ( (unsigned)clock_id >= MAX_CLOCKS){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#990: FILE: kernel/posix-timers.c:430:
+		printk("POSIX clock register failed for clock_id %d\n",clock_id);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#990: FILE: kernel/posix-timers.c:430:
+		printk("POSIX clock register failed for clock_id %d\n",clock_id);
 		                                                      ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#996: FILE: kernel/posix-timers.c:436:
+static struct k_itimer * alloc_posix_timer(void)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#998: FILE: kernel/posix-timers.c:438:
+	struct k_itimer * tmr;

WARNING:TYPO_SPELLING: 'chunck' may be misspelled - perhaps 'chunk'?
#999: FILE: kernel/posix-timers.c:439:
+	struct posix_timer_chunck *chunck, **chunck_ptr;
 	                           ^^^^^^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1007: FILE: kernel/posix-timers.c:447:
+	for (ip = &tmr_bit_map[0], open = 0; (*ip == 0); open +=32,ip++);
 	                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1007: FILE: kernel/posix-timers.c:447:
+	for (ip = &tmr_bit_map[0], open = 0; (*ip == 0); open +=32,ip++);
 	                                                          ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1007: FILE: kernel/posix-timers.c:447:
+	for (ip = &tmr_bit_map[0], open = 0; (*ip == 0); open +=32,ip++);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open brace '{'
#1009: FILE: kernel/posix-timers.c:449:
+	if (open > NUM_CHUNCKS_POSIX_TIMERS){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1010: FILE: kernel/posix-timers.c:450:
+^I^I/* $

ERROR:SPACING: space required before the open brace '{'
#1013: FILE: kernel/posix-timers.c:453:
+		if (posix_timers.free_list != NUM_CHUNCKS_POSIX_TIMERS){

WARNING:TYPO_SPELLING: 'chunck' may be misspelled - perhaps 'chunk'?
#1014: FILE: kernel/posix-timers.c:454:
+			chunck = get_timer_chunck();
 			^^^^^^

WARNING:TYPO_SPELLING: 'chunck' may be misspelled - perhaps 'chunk'?
#1015: FILE: kernel/posix-timers.c:455:
+			if ( ! chunck ){
 			       ^^^^^^

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#1015: FILE: kernel/posix-timers.c:455:
+			if ( ! chunck ){
 			     ^

ERROR:SPACING: space required before the open brace '{'
#1015: FILE: kernel/posix-timers.c:455:
+			if ( ! chunck ){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1015: FILE: kernel/posix-timers.c:455:
+			if ( ! chunck ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1015: FILE: kernel/posix-timers.c:455:
+			if ( ! chunck ){

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1018: FILE: kernel/posix-timers.c:458:
+				return NULL;
+			} else {

WARNING:TYPO_SPELLING: 'chuncks' may be misspelled - perhaps 'chunks'?
#1020: FILE: kernel/posix-timers.c:460:
+					chuncks[posix_timers.free_list];
 					^^^^^^^

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'posix_timers.chuncks[posix_timers.free_list]'
#1020: FILE: kernel/posix-timers.c:460:
+				chunck_ptr = &posix_timers.
+					chuncks[posix_timers.free_list];

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'posix_timers.free[posix_timers.free_list]'
#1022: FILE: kernel/posix-timers.c:462:
+				posix_timers.free_list = posix_timers.
+					free[posix_timers.free_list];

WARNING:TYPO_SPELLING: 'chunck' may be misspelled - perhaps 'chunk'?
#1023: FILE: kernel/posix-timers.c:463:
+				*chunck_ptr = chunck;
 				              ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1024: FILE: kernel/posix-timers.c:464:
+^I^I^I^Ichunck->index = chunck_ptr - $

WARNING:TYPO_SPELLING: 'chuncks' may be misspelled - perhaps 'chunks'?
#1025: FILE: kernel/posix-timers.c:465:
+					&posix_timers.chuncks[0];
 					              ^^^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1028: FILE: kernel/posix-timers.c:468:
+				for ( i = 0,tmr = &chunck->timers[0];
 				           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1028: FILE: kernel/posix-timers.c:468:
+				for ( i = 0,tmr = &chunck->timers[0];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1031: FILE: kernel/posix-timers.c:471:
+^I^I^I^I^Ilist_add(&tmr->list, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1033: FILE: kernel/posix-timers.c:473:
+^I^I^I^I^Itmr->it_id = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1034: FILE: kernel/posix-timers.c:474:
+^I^I^I^I^I^I(timer_t)( $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1034: FILE: kernel/posix-timers.c:474:
+						(timer_t)( 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1035: FILE: kernel/posix-timers.c:475:
+^I^I^I^I^I^I^I(chunck->index << $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1041: FILE: kernel/posix-timers.c:481:
+				set_tmr_bit( chunck->index);

WARNING:TYPO_SPELLING: 'partically' may be misspelled - perhaps 'partially'?
#1054: FILE: kernel/posix-timers.c:494:
+		 * we have a partically allocated chunck
 		             ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'chunck' may be misspelled - perhaps 'chunk'?
#1054: FILE: kernel/posix-timers.c:494:
+		 * we have a partically allocated chunck
 		                                  ^^^^^^

WARNING:TYPO_SPELLING: 'chunck' may be misspelled - perhaps 'chunk'?
#1056: FILE: kernel/posix-timers.c:496:
+		chunck = posix_timers.chuncks[open];
 		^^^^^^

WARNING:TYPO_SPELLING: 'chuncks' may be misspelled - perhaps 'chunks'?
#1056: FILE: kernel/posix-timers.c:496:
+		chunck = posix_timers.chuncks[open];
 		                      ^^^^^^^

ERROR:SPACING: space required before the open brace '{'
#1058: FILE: kernel/posix-timers.c:498:
+		if (chunck->used_count == NUM_POSIX_TIMERS_PER_CHUNCK){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1058: FILE: kernel/posix-timers.c:498:
+		if (chunck->used_count == NUM_POSIX_TIMERS_PER_CHUNCK){
+			clear_tmr_bit(open);
+		}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1061: FILE: kernel/posix-timers.c:501:
+		tmr = list_entry(chunck->free_list.next,struct k_itimer,list);
 		                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1061: FILE: kernel/posix-timers.c:501:
+		tmr = list_entry(chunck->free_list.next,struct k_itimer,list);
 		                                                       ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1068: FILE: kernel/posix-timers.c:508:
+static void release_posix_timer(struct k_itimer * tmr)

WARNING:TYPO_SPELLING: 'chunck' may be misspelled - perhaps 'chunk'?
#1071: FILE: kernel/posix-timers.c:511:
+	struct posix_timer_chunck *chunck = posix_timers.chuncks[index];
 	                           ^^^^^^

WARNING:TYPO_SPELLING: 'chuncks' may be misspelled - perhaps 'chunks'?
#1071: FILE: kernel/posix-timers.c:511:
+	struct posix_timer_chunck *chunck = posix_timers.chuncks[index];
 	                                                 ^^^^^^^

ERROR:SPACING: space required before the open brace '{'
#1076: FILE: kernel/posix-timers.c:516:
+	if ( --chunck->used_count == 0){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1076: FILE: kernel/posix-timers.c:516:
+	if ( --chunck->used_count == 0){

WARNING:LINE_SPACING: Missing a blank line after declarations
#1078: FILE: kernel/posix-timers.c:518:
+		int i;
+		for ( i = 0; i < NUM_POSIX_TIMERS_PER_CHUNCK; i++) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#1078: FILE: kernel/posix-timers.c:518:
+		for ( i = 0; i < NUM_POSIX_TIMERS_PER_CHUNCK; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1078: FILE: kernel/posix-timers.c:518:
+		for ( i = 0; i < NUM_POSIX_TIMERS_PER_CHUNCK; i++) {
+			list_del(&chunck->timers[i].list);
+		}

WARNING:TYPO_SPELLING: 'chunck' may be misspelled - perhaps 'chunk'?
#1081: FILE: kernel/posix-timers.c:521:
+		free_timer_chunck(chunck);
 		                  ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1087: FILE: kernel/posix-timers.c:527:
+}^I  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1088: FILE: kernel/posix-timers.c:528:
+^I^I^I $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1098: FILE: kernel/posix-timers.c:538:
+	struct task_struct * process = current;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1102: FILE: kernel/posix-timers.c:542:
+^Iif ((unsigned)which_clock >= MAX_CLOCKS || $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1102: FILE: kernel/posix-timers.c:542:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1102: FILE: kernel/posix-timers.c:542:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 
+	    ! posix_clocks[which_clock].res) return -EINVAL;

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#1103: FILE: kernel/posix-timers.c:543:
+	    ! posix_clocks[which_clock].res) return -EINVAL;
 	    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1106: FILE: kernel/posix-timers.c:546:
+	if (new_timer == NULL) return -EAGAIN;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_timer"
#1106: FILE: kernel/posix-timers.c:546:
+	if (new_timer == NULL) return -EAGAIN;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1116: FILE: kernel/posix-timers.c:556:
+		if ((process = good_sigevent(&event)) == NULL) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1124: FILE: kernel/posix-timers.c:564:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1124: FILE: kernel/posix-timers.c:564:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1133: FILE: kernel/posix-timers.c:573:
+	init_timer (&new_timer->it_timer);

CHECK:SPACING: No space is necessary after a cast
#1135: FILE: kernel/posix-timers.c:575:
+	new_timer->it_timer.data = (unsigned long) new_timer;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1141: FILE: kernel/posix-timers.c:581:
+^Iif (copy_to_user(created_timer_id, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1142: FILE: kernel/posix-timers.c:582:
+^I^I^I &new_timer_id, $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1157: FILE: kernel/posix-timers.c:597:
+	if (error) {
+		release_posix_timer(new_timer);
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1163: FILE: kernel/posix-timers.c:603:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1179: FILE: kernel/posix-timers.c:619:
+^Iif ((ts == NULL) || $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ts == NULL'
#1179: FILE: kernel/posix-timers.c:619:
+	if ((ts == NULL) || 
+	    (ts->tv_sec < 0) ||
+	    ((unsigned)ts->tv_nsec >= NSEC_PER_SEC))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ts->tv_sec < 0'
#1179: FILE: kernel/posix-timers.c:619:
+	if ((ts == NULL) || 
+	    (ts->tv_sec < 0) ||
+	    ((unsigned)ts->tv_nsec >= NSEC_PER_SEC))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ts"
#1179: FILE: kernel/posix-timers.c:619:
+	if ((ts == NULL) || 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1181: FILE: kernel/posix-timers.c:621:
+	    ((unsigned)ts->tv_nsec >= NSEC_PER_SEC))

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1191: FILE: kernel/posix-timers.c:631:
+static struct k_itimer* lock_timer( timer_t timer_id)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1191: FILE: kernel/posix-timers.c:631:
+static struct k_itimer* lock_timer( timer_t timer_id)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1194: FILE: kernel/posix-timers.c:634:
+	int chunck_index = (int)((unsigned)timer_id >> CHUNCK_SHIFT);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1199: FILE: kernel/posix-timers.c:639:
+^Iif ( chunck_index >= NUM_CHUNCKS_POSIX_TIMERS || $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1199: FILE: kernel/posix-timers.c:639:
+	if ( chunck_index >= NUM_CHUNCKS_POSIX_TIMERS || 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1200: FILE: kernel/posix-timers.c:640:
+	if ( chunck_index >= NUM_CHUNCKS_POSIX_TIMERS || 
+	     chunck_offset >=	NUM_POSIX_TIMERS_PER_CHUNCK ||

WARNING:TYPO_SPELLING: 'chuncks' may be misspelled - perhaps 'chunks'?
#1205: FILE: kernel/posix-timers.c:645:
+	timr = &(posix_timers.chuncks[chunck_index]->timers[chunck_offset]);
 	                      ^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around posix_timers.chuncks[chunck_index]->timers[chunck_offset]
#1205: FILE: kernel/posix-timers.c:645:
+	timr = &(posix_timers.chuncks[chunck_index]->timers[chunck_offset]);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1213: FILE: kernel/posix-timers.c:653:
+	if (timr->it_id != timer_id) {
+		BUG();
+	}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1214: FILE: kernel/posix-timers.c:654:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1216: FILE: kernel/posix-timers.c:656:
+^Iif ( ! (owner = timr->it_process) || owner->tgid != current->tgid){ $

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#1216: FILE: kernel/posix-timers.c:656:
+	if ( ! (owner = timr->it_process) || owner->tgid != current->tgid){ 
 	     ^

ERROR:SPACING: space required before the open brace '{'
#1216: FILE: kernel/posix-timers.c:656:
+	if ( ! (owner = timr->it_process) || owner->tgid != current->tgid){ 

ERROR:SPACING: space prohibited after that open parenthesis '('
#1216: FILE: kernel/posix-timers.c:656:
+	if ( ! (owner = timr->it_process) || owner->tgid != current->tgid){ 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1216: FILE: kernel/posix-timers.c:656:
+	if ( ! (owner = timr->it_process) || owner->tgid != current->tgid){ 

ERROR:SPACING: space required before the open brace '{'
#1218: FILE: kernel/posix-timers.c:658:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#1218: FILE: kernel/posix-timers.c:658:
+	}else{

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1219: FILE: kernel/posix-timers.c:659:
+	}else{
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1233: FILE: kernel/posix-timers.c:673:
+/* $

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#1238: FILE: kernel/posix-timers.c:678:
+void inline do_timer_gettime(struct k_itimer *timr,

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1245: FILE: kernel/posix-timers.c:685:
+^I^Iexpires = timr->it_timer.expires;  $

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1246: FILE: kernel/posix-timers.c:686:
+	} while ((volatile long)(timr->it_timer.expires) != expires);

ERROR:SPACING: space required before the open brace '{'
#1248: FILE: kernel/posix-timers.c:688:
+	if (expires && timer_pending(&timr->it_timer)){

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1248: FILE: kernel/posix-timers.c:688:
+	if (expires && timer_pending(&timr->it_timer)){
[...]
+	}else{
[...]

ERROR:SPACING: space required before the open brace '{'
#1250: FILE: kernel/posix-timers.c:690:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#1250: FILE: kernel/posix-timers.c:690:
+	}else{

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1251: FILE: kernel/posix-timers.c:691:
+		sub_expires = expires = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required before the open brace '{'
#1257: FILE: kernel/posix-timers.c:697:
+	if (cur_setting->it_value.tv_sec < 0){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1260: FILE: kernel/posix-timers.c:700:
+^I}^I^I^I^I $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1262: FILE: kernel/posix-timers.c:702:
+}
+/* Get the time remaining on a POSIX.1b interval timer. */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1269: FILE: kernel/posix-timers.c:709:
+	if (!timr) return -EINVAL;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1271: FILE: kernel/posix-timers.c:711:
+	p_timer_get(&posix_clocks[timr->it_clock],timr, &cur_setting);
 	                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1274: FILE: kernel/posix-timers.c:714:
+^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1280: FILE: kernel/posix-timers.c:720:
+}
+/*

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1296: FILE: kernel/posix-timers.c:736:
+	struct task_struct * t;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1298: FILE: kernel/posix-timers.c:738:
+	timr = lock_timer( timer_id);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1299: FILE: kernel/posix-timers.c:739:
+	if (!timr) return -EINVAL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1304: FILE: kernel/posix-timers.c:744:
+^Ifor (sig_queue = &t->sig->shared_pending, i = 2; i; $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'q->info.si_code == SI_TIMER'
#1307: FILE: kernel/posix-timers.c:747:
+			if ((q->info.si_code == SI_TIMER) &&
+			    (q->info.si_tid == timr->it_id)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'q->info.si_tid == timr->it_id'
#1307: FILE: kernel/posix-timers.c:747:
+			if ((q->info.si_code == SI_TIMER) &&
+			    (q->info.si_tid == timr->it_id)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1309: FILE: kernel/posix-timers.c:749:
+			    (q->info.si_tid == timr->it_id)) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1317: FILE: kernel/posix-timers.c:757:
+^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1322: FILE: kernel/posix-timers.c:762:
+}
+/* Adjust for absolute time */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1331: FILE: kernel/posix-timers.c:771:
+static int  adjust_abs_time(struct k_clock *clock,struct timespec *tp, int abs)
                                                  ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1335: FILE: kernel/posix-timers.c:775:
+	struct timespec oc;
+	do_posix_clock_monotonic_gettime(&now);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1337: FILE: kernel/posix-timers.c:777:
+	if ( abs &&

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'posix_clocks[CLOCK_MONOTONIC].clock_get == clock->clock_get'
#1337: FILE: kernel/posix-timers.c:777:
+	if ( abs &&
+	     (posix_clocks[CLOCK_MONOTONIC].clock_get == clock->clock_get)){ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1338: FILE: kernel/posix-timers.c:778:
+^I     (posix_clocks[CLOCK_MONOTONIC].clock_get == clock->clock_get)){ $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1338: FILE: kernel/posix-timers.c:778:
+	if ( abs &&
+	     (posix_clocks[CLOCK_MONOTONIC].clock_get == clock->clock_get)){ 

ERROR:SPACING: space required before the open brace '{'
#1338: FILE: kernel/posix-timers.c:778:
+	     (posix_clocks[CLOCK_MONOTONIC].clock_get == clock->clock_get)){ 

ERROR:SPACING: space required before the open brace '{'
#1339: FILE: kernel/posix-timers.c:779:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#1339: FILE: kernel/posix-timers.c:779:
+	}else{

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1340: FILE: kernel/posix-timers.c:780:
+	}else{
+

ERROR:SPACING: space required before the open brace '{'
#1341: FILE: kernel/posix-timers.c:781:
+		if (abs){

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1341: FILE: kernel/posix-timers.c:781:
+		if (abs){
[...]
+		}else{
[...]

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1342: FILE: kernel/posix-timers.c:782:
+			do_posix_gettime(clock,&oc);
 			                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1342: FILE: kernel/posix-timers.c:782:
+			do_posix_gettime(clock,&oc);
 			                       ^

ERROR:SPACING: space required before the open brace '{'
#1343: FILE: kernel/posix-timers.c:783:
+		}else{

ERROR:SPACING: space required after that close brace '}'
#1343: FILE: kernel/posix-timers.c:783:
+		}else{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1344: FILE: kernel/posix-timers.c:784:
+			oc.tv_nsec = oc.tv_sec =0;
 			                       ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1344: FILE: kernel/posix-timers.c:784:
+			oc.tv_nsec = oc.tv_sec =0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1349: FILE: kernel/posix-timers.c:789:
+^I^I/* $

ERROR:SPACING: space required before the open brace '{'
#1352: FILE: kernel/posix-timers.c:792:
+		if (( tp->tv_nsec - NSEC_PER_SEC) >= 0){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1352: FILE: kernel/posix-timers.c:792:
+		if (( tp->tv_nsec - NSEC_PER_SEC) >= 0){

ERROR:SPACING: space required before the open brace '{'
#1356: FILE: kernel/posix-timers.c:796:
+		if (( tp->tv_nsec ) < 0){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1356: FILE: kernel/posix-timers.c:796:
+		if (( tp->tv_nsec ) < 0){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1356: FILE: kernel/posix-timers.c:796:
+		if (( tp->tv_nsec ) < 0){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tp->tv_nsec '
#1356: FILE: kernel/posix-timers.c:796:
+		if (( tp->tv_nsec ) < 0){

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1368: FILE: kernel/posix-timers.c:808:
+	if ((unsigned)(tp->tv_sec - now.tv_sec) > (MAX_JIFFY_OFFSET / HZ)){

ERROR:SPACING: space required before the open brace '{'
#1368: FILE: kernel/posix-timers.c:808:
+	if ((unsigned)(tp->tv_sec - now.tv_sec) > (MAX_JIFFY_OFFSET / HZ)){

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1369: FILE: kernel/posix-timers.c:809:
+		if ( (unsigned)tp->tv_sec < now.tv_sec){

ERROR:SPACING: space required before the open brace '{'
#1369: FILE: kernel/posix-timers.c:809:
+		if ( (unsigned)tp->tv_sec < now.tv_sec){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1369: FILE: kernel/posix-timers.c:809:
+		if ( (unsigned)tp->tv_sec < now.tv_sec){

ERROR:SPACING: space required before the open brace '{'
#1372: FILE: kernel/posix-timers.c:812:
+		}else{

ERROR:SPACING: space required after that close brace '}'
#1372: FILE: kernel/posix-timers.c:812:
+		}else{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1377: FILE: kernel/posix-timers.c:817:
+^I^I^I * possible overflows).  We assume such a large $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1381: FILE: kernel/posix-timers.c:821:
+^I^I^I */ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1394: FILE: kernel/posix-timers.c:834:
+	struct k_clock * clock = &posix_clocks[timr->it_clock];

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1396: FILE: kernel/posix-timers.c:836:
+	if (old_setting) {
+		do_timer_gettime(timr, old_setting);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1402: FILE: kernel/posix-timers.c:842:
+^I/* $

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#1407: FILE: kernel/posix-timers.c:847:
+	if ( timer_active(timr) && ! del_timer(&timr->it_timer)){
 	                           ^

ERROR:SPACING: space required before the open brace '{'
#1407: FILE: kernel/posix-timers.c:847:
+	if ( timer_active(timr) && ! del_timer(&timr->it_timer)){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1407: FILE: kernel/posix-timers.c:847:
+	if ( timer_active(timr) && ! del_timer(&timr->it_timer)){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1412: FILE: kernel/posix-timers.c:852:
+^I^I * we do that anything could happen, including the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1413: FILE: kernel/posix-timers.c:853:
+^I^I * complete melt down of the timer.  So return with $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_setting->it_value.tv_sec == 0'
#1423: FILE: kernel/posix-timers.c:863:
+	if ((new_setting->it_value.tv_sec == 0) &&
+	    (new_setting->it_value.tv_nsec == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_setting->it_value.tv_nsec == 0'
#1423: FILE: kernel/posix-timers.c:863:
+	if ((new_setting->it_value.tv_sec == 0) &&
+	    (new_setting->it_value.tv_nsec == 0)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1429: FILE: kernel/posix-timers.c:869:
+^Iif ((flags & TIMER_ABSTIME) && $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'clock->clock_get != do_posix_clock_monotonic_gettime'
#1429: FILE: kernel/posix-timers.c:869:
+	if ((flags & TIMER_ABSTIME) && 
+	    (clock->clock_get != do_posix_clock_monotonic_gettime)) {

ERROR:SPACING: space required before the open brace '{'
#1432: FILE: kernel/posix-timers.c:872:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#1432: FILE: kernel/posix-timers.c:872:
+	}else{

ERROR:SPACING: space prohibited after that open parenthesis '('
#1435: FILE: kernel/posix-timers.c:875:
+	if( adjust_abs_time(clock,

ERROR:SPACING: space required before the open parenthesis '('
#1435: FILE: kernel/posix-timers.c:875:
+	if( adjust_abs_time(clock,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1440: FILE: kernel/posix-timers.c:880:
+	tstotimer(new_setting,timr);
 	                     ^

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#1446: FILE: kernel/posix-timers.c:886:
+	if (timr->it_timer.expires == jiffies) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1450: FILE: kernel/posix-timers.c:890:
+^Itimr->it_overrun_deferred = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1451: FILE: kernel/posix-timers.c:891:
+^I^Itimr->it_overrun_last = $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1457: FILE: kernel/posix-timers.c:897:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1468: FILE: kernel/posix-timers.c:908:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1469: FILE: kernel/posix-timers.c:909:
+	if (new_setting == NULL) {
+		return -EINVAL;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_setting"
#1469: FILE: kernel/posix-timers.c:909:
+	if (new_setting == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1473: FILE: kernel/posix-timers.c:913:
+	if (copy_from_user(&new_spec, new_setting, sizeof(new_spec))) {
+		return -EFAULT;
+	}

ERROR:SPACING: space prohibited after that open parenthesis '('
#1482: FILE: kernel/posix-timers.c:922:
+	timr = lock_timer( timer_id);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1483: FILE: kernel/posix-timers.c:923:
+	if (!timr) return -EINVAL;

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1485: FILE: kernel/posix-timers.c:925:
+	if (! posix_clocks[timr->it_clock].timer_set) {
 	    ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1486: FILE: kernel/posix-timers.c:926:
+		error = do_timer_settime(timr, flags, &new_spec, rtn );

ERROR:SPACING: space required before the open brace '{'
#1487: FILE: kernel/posix-timers.c:927:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#1487: FILE: kernel/posix-timers.c:927:
+	}else{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1488: FILE: kernel/posix-timers.c:928:
+^I^Ierror = posix_clocks[timr->it_clock].timer_set(timr, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1489: FILE: kernel/posix-timers.c:929:
+^I^I^I^I^I^I^I       flags, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1490: FILE: kernel/posix-timers.c:930:
+^I^I^I^I^I^I^I       &new_spec, $

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1491: FILE: kernel/posix-timers.c:931:
+							       rtn );

ERROR:SPACING: space required before the open brace '{'
#1494: FILE: kernel/posix-timers.c:934:
+	if ( error == TIMER_RETRY){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1494: FILE: kernel/posix-timers.c:934:
+	if ( error == TIMER_RETRY){

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#1499: FILE: kernel/posix-timers.c:939:
+	if (old_setting && ! error) {
 	                   ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1500: FILE: kernel/posix-timers.c:940:
+		if (copy_to_user(old_setting, &old_spec, sizeof(old_spec))) {
+			error = -EFAULT;
+		}

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#1512: FILE: kernel/posix-timers.c:952:
+	if ( timer_active(timer) && ! del_timer(&timer->it_timer)){
 	                            ^

ERROR:SPACING: space required before the open brace '{'
#1512: FILE: kernel/posix-timers.c:952:
+	if ( timer_active(timer) && ! del_timer(&timer->it_timer)){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1512: FILE: kernel/posix-timers.c:952:
+	if ( timer_active(timer) && ! del_timer(&timer->it_timer)){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1517: FILE: kernel/posix-timers.c:957:
+^I^I * we do that anything could happen, including the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1518: FILE: kernel/posix-timers.c:958:
+^I^I * complete melt down of the timer.  So return with $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1539: FILE: kernel/posix-timers.c:979:
+	timer = lock_timer( timer_id);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1540: FILE: kernel/posix-timers.c:980:
+	if (!timer) return -EINVAL;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1543: FILE: kernel/posix-timers.c:983:
+	error =	 p_timer_del(&posix_clocks[timer->it_clock],timer);
 	       	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1550: FILE: kernel/posix-timers.c:990:
+	p_timer_del(&posix_clocks[timer->it_clock],timer);
 	                                          ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1559: FILE: kernel/posix-timers.c:999:
+	IF_ABS_TIME_ADJ(

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1562: FILE: kernel/posix-timers.c:1002:
+		if (! list_empty(&timer->abs_list)){
 		    ^

ERROR:SPACING: space required before the open brace '{'
#1562: FILE: kernel/posix-timers.c:1002:
+		if (! list_empty(&timer->abs_list)){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1562: FILE: kernel/posix-timers.c:1002:
+		if (! list_empty(&timer->abs_list)){
+
+			list_del(&timer->abs_list);
+		}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1563: FILE: kernel/posix-timers.c:1003:
+		if (! list_empty(&timer->abs_list)){
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1566: FILE: kernel/posix-timers.c:1006:
+^I^Ispin_unlock( &abs_list_lock); $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1566: FILE: kernel/posix-timers.c:1006:
+		spin_unlock( &abs_list_lock); 

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1577: FILE: kernel/posix-timers.c:1017:
+}
+/*

ERROR:SPACING: space required before the open brace '{'
#1582: FILE: kernel/posix-timers.c:1022:
+	if (sys_timer_delete(timer->it_id)){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1582: FILE: kernel/posix-timers.c:1022:
+	if (sys_timer_delete(timer->it_id)){
+		BUG();
+	}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1583: FILE: kernel/posix-timers.c:1023:
+		BUG();

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1586: FILE: kernel/posix-timers.c:1026:
+}
+/*

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1595: FILE: kernel/posix-timers.c:1035:
+{
+

ERROR:SPACING: space required before the open brace '{'
#1596: FILE: kernel/posix-timers.c:1036:
+	if (clock->clock_get){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1596: FILE: kernel/posix-timers.c:1036:
+	if (clock->clock_get){
+		return clock->clock_get(tp);
+	}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1600: FILE: kernel/posix-timers.c:1040:
+	do_gettimeofday((struct timeval*)tp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1617: FILE: kernel/posix-timers.c:1057:
+#if (BITS_PER_LONG > 32) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1628: FILE: kernel/posix-timers.c:1068:
+		unsigned long flags;
+		read_lock_irqsave(&xtime_lock, flags);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1631: FILE: kernel/posix-timers.c:1071:
+
+

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#1634: FILE: kernel/posix-timers.c:1074:
+#elif ! defined(CONFIG_SMP) && (BITS_PER_LONG < 64)
       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1636: FILE: kernel/posix-timers.c:1076:
+	unsigned long jiffies_f;
+	do {

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#1640: FILE: kernel/posix-timers.c:1080:
+	} while (unlikely(jiffies_f != jiffies));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1642: FILE: kernel/posix-timers.c:1082:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1644: FILE: kernel/posix-timers.c:1084:
+	tp->tv_sec = div_long_long_rem(jiffies_64_f,HZ,&sub_sec);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1644: FILE: kernel/posix-timers.c:1084:
+	tp->tv_sec = div_long_long_rem(jiffies_64_f,HZ,&sub_sec);
 	                                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1644: FILE: kernel/posix-timers.c:1084:
+	tp->tv_sec = div_long_long_rem(jiffies_64_f,HZ,&sub_sec);
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1655: FILE: kernel/posix-timers.c:1095:
+asmlinkage int sys_clock_settime(clockid_t which_clock,const struct timespec *tp)
                                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1659: FILE: kernel/posix-timers.c:1099:
+^Iif ((unsigned)which_clock >= MAX_CLOCKS || $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1659: FILE: kernel/posix-timers.c:1099:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1659: FILE: kernel/posix-timers.c:1099:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 
+	    ! posix_clocks[which_clock].res) return -EINVAL;

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#1660: FILE: kernel/posix-timers.c:1100:
+	    ! posix_clocks[which_clock].res) return -EINVAL;
 	    ^

ERROR:SPACING: space required before the open brace '{'
#1663: FILE: kernel/posix-timers.c:1103:
+	if ( posix_clocks[which_clock].clock_set){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1663: FILE: kernel/posix-timers.c:1103:
+	if ( posix_clocks[which_clock].clock_set){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1663: FILE: kernel/posix-timers.c:1103:
+	if ( posix_clocks[which_clock].clock_set){
+		return posix_clocks[which_clock].clock_set(&new_tp);
+	}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1667: FILE: kernel/posix-timers.c:1107:
+	return do_sys_settimeofday((struct timeval*)&new_tp,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1667: FILE: kernel/posix-timers.c:1107:
+	return do_sys_settimeofday((struct timeval*)&new_tp,NULL);
 	                                                   ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1669: FILE: kernel/posix-timers.c:1109:
+}
+asmlinkage int sys_clock_gettime(clockid_t which_clock, struct timespec *tp)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1673: FILE: kernel/posix-timers.c:1113:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1674: FILE: kernel/posix-timers.c:1114:
+^Iif ((unsigned)which_clock >= MAX_CLOCKS || $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1674: FILE: kernel/posix-timers.c:1114:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1674: FILE: kernel/posix-timers.c:1114:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 
+	    ! posix_clocks[which_clock].res) return -EINVAL;

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#1675: FILE: kernel/posix-timers.c:1115:
+	    ! posix_clocks[which_clock].res) return -EINVAL;
 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1677: FILE: kernel/posix-timers.c:1117:
+	error = do_posix_gettime(&posix_clocks[which_clock],&rtn_tp);
 	                                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1677: FILE: kernel/posix-timers.c:1117:
+	error = do_posix_gettime(&posix_clocks[which_clock],&rtn_tp);
 	                                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1678: FILE: kernel/posix-timers.c:1118:
+^I $

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#1679: FILE: kernel/posix-timers.c:1119:
+	if ( ! error) {
 	     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1679: FILE: kernel/posix-timers.c:1119:
+	if ( ! error) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1680: FILE: kernel/posix-timers.c:1120:
+		if (copy_to_user(tp, &rtn_tp, sizeof(rtn_tp))) {
+			error = -EFAULT;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1685: FILE: kernel/posix-timers.c:1125:
+^I^I $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1686: FILE: kernel/posix-timers.c:1126:
+		 
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1687: FILE: kernel/posix-timers.c:1127:
+}
+asmlinkage int	 sys_clock_getres(clockid_t which_clock, struct timespec *tp)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1691: FILE: kernel/posix-timers.c:1131:
+^Iif ((unsigned)which_clock >= MAX_CLOCKS || $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1691: FILE: kernel/posix-timers.c:1131:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1691: FILE: kernel/posix-timers.c:1131:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 
+	    ! posix_clocks[which_clock].res) return -EINVAL;

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#1692: FILE: kernel/posix-timers.c:1132:
+	    ! posix_clocks[which_clock].res) return -EINVAL;
 	    ^

ERROR:SPACING: space required before the open brace '{'
#1696: FILE: kernel/posix-timers.c:1136:
+	if ( tp){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1696: FILE: kernel/posix-timers.c:1136:
+	if ( tp){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1697: FILE: kernel/posix-timers.c:1137:
+		if (copy_to_user(tp, &rtn_tp, sizeof(rtn_tp))) {
+			return -EFAULT;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1702: FILE: kernel/posix-timers.c:1142:
+^I $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1703: FILE: kernel/posix-timers.c:1143:
+	 
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1704: FILE: kernel/posix-timers.c:1144:
+}
+static void nanosleep_wake_up(unsigned long __data)

CHECK:SPACING: No space is necessary after a cast
#1706: FILE: kernel/posix-timers.c:1146:
+	struct task_struct * p = (struct task_struct *) __data;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1706: FILE: kernel/posix-timers.c:1146:
+	struct task_struct * p = (struct task_struct *) __data;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1710: FILE: kernel/posix-timers.c:1150:
+}
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1713: FILE: kernel/posix-timers.c:1153:
+ * For each nanosleep call that needs it (only absolute and not on $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1719: FILE: kernel/posix-timers.c:1159:
+ * On locking, clock_was_set() is called from update_wall_clock which $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1720: FILE: kernel/posix-timers.c:1160:
+ * holds (or has held for it) a write_lock_irq( xtime_lock) and is $

ERROR:SPACING: space required before the open brace '{'
#1738: FILE: kernel/posix-timers.c:1178:
+	list_for_each(pos, &nanosleep_abs_list){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1739: FILE: kernel/posix-timers.c:1179:
+		wake_up_process(list_entry(pos,struct abs_struct,list)->t);
 		                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1739: FILE: kernel/posix-timers.c:1179:
+		wake_up_process(list_entry(pos,struct abs_struct,list)->t);
 		                                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1743: FILE: kernel/posix-timers.c:1183:
+^I^I $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1744: FILE: kernel/posix-timers.c:1184:
+#if 0^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1744: FILE: kernel/posix-timers.c:1184:
+#if 0	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1747: FILE: kernel/posix-timers.c:1187:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1747: FILE: kernel/posix-timers.c:1187:
+  $

WARNING:TYPO_SPELLING: 'paramerts' may be misspelled - perhaps 'parameters'?
#1751: FILE: kernel/posix-timers.c:1191:
+// Some systems may find these paramerts in other ways than as entry parms, 
                                ^^^^^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#1751: FILE: kernel/posix-timers.c:1191:
+// Some systems may find these paramerts in other ways than as entry parms, 
                                                                      ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1751: FILE: kernel/posix-timers.c:1191:
+// Some systems may find these paramerts in other ways than as entry parms, $

WARNING:TYPO_SPELLING: 'paramerters' may be misspelled - perhaps 'parameters'?
#1753: FILE: kernel/posix-timers.c:1193:
+// first parameter, where as other archs pass it as one of the paramerters.
                                                                ^^^^^^^^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1758: FILE: kernel/posix-timers.c:1198:
+	CLOCK_NANOSLEEP_ENTRY(	struct timespec t;

ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#1761: FILE: kernel/posix-timers.c:1201:
+				struct abs_struct abs_struct = {list: {next :0}};
 				                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1762: FILE: kernel/posix-timers.c:1202:
+^I^I^I^Iint abs; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1766: FILE: kernel/posix-timers.c:1206:
+^I^I//asmlinkage int  sys_clock_nanosleep(clockid_t which_clock, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1771: FILE: kernel/posix-timers.c:1211:
+^I^Iif ((unsigned)which_clock >= MAX_CLOCKS || $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1771: FILE: kernel/posix-timers.c:1211:
+		if ((unsigned)which_clock >= MAX_CLOCKS || 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1771: FILE: kernel/posix-timers.c:1211:
+		if ((unsigned)which_clock >= MAX_CLOCKS || 
+		    ! posix_clocks[which_clock].res) return -EINVAL;

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#1772: FILE: kernel/posix-timers.c:1212:
+		    ! posix_clocks[which_clock].res) return -EINVAL;
 		    ^

ERROR:SPACING: space required before the open parenthesis '('
#1774: FILE: kernel/posix-timers.c:1214:
+	if(copy_from_user(&tsave, rqtp, sizeof(struct timespec)))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1777: FILE: kernel/posix-timers.c:1217:
+	if ((unsigned)tsave.tv_nsec >= NSEC_PER_SEC || tsave.tv_sec < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1779: FILE: kernel/posix-timers.c:1219:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1786: FILE: kernel/posix-timers.c:1226:
+^Iif ( abs && (posix_clocks[which_clock].clock_get != $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1786: FILE: kernel/posix-timers.c:1226:
+	if ( abs && (posix_clocks[which_clock].clock_get != 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'posix_clocks[which_clock].clock_get != 
 		     posix_clocks[CLOCK_MONOTONIC].clock_get'
#1786: FILE: kernel/posix-timers.c:1226:
+	if ( abs && (posix_clocks[which_clock].clock_get != 
+		     posix_clocks[CLOCK_MONOTONIC].clock_get) ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1787: FILE: kernel/posix-timers.c:1227:
+		     posix_clocks[CLOCK_MONOTONIC].clock_get) ){

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1795: FILE: kernel/posix-timers.c:1235:
+		if ( (abs || !new_timer.expires) &&
[...]
+				tstojiffie(&t,

ERROR:SPACING: space prohibited after that open parenthesis '('
#1795: FILE: kernel/posix-timers.c:1235:
+		if ( (abs || !new_timer.expires) &&

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1795: FILE: kernel/posix-timers.c:1235:
+		if ( (abs || !new_timer.expires) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1796: FILE: kernel/posix-timers.c:1236:
+		if ( (abs || !new_timer.expires) &&
+		     !(rtn = adjust_abs_time(&posix_clocks[which_clock],

ERROR:SPACING: space required before the open brace '{'
#1810: FILE: kernel/posix-timers.c:1250:
+		if (new_timer.expires ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1810: FILE: kernel/posix-timers.c:1250:
+		if (new_timer.expires ){

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#1817: FILE: kernel/posix-timers.c:1257:
+	while((active = del_timer_sync(&new_timer)) && !_do_signal());
+	 

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: space required before the open parenthesis '('
#1817: FILE: kernel/posix-timers.c:1257:
+	while((active = del_timer_sync(&new_timer)) && !_do_signal());

ERROR:WHILE_AFTER_BRACE: while should follow close brace '}'
#1817: FILE: kernel/posix-timers.c:1257:
+	}
+	while((active = del_timer_sync(&new_timer)) && !_do_signal());

while should follow the closing bracket on the same line::

  do {
          ...
  } while(something);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1818: FILE: kernel/posix-timers.c:1258:
+^I $

ERROR:SPACING: space required before the open brace '{'
#1819: FILE: kernel/posix-timers.c:1259:
+	if ( abs_struct.list.next ){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1819: FILE: kernel/posix-timers.c:1259:
+	if ( abs_struct.list.next ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1819: FILE: kernel/posix-timers.c:1259:
+	if ( abs_struct.list.next ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1824: FILE: kernel/posix-timers.c:1264:
+	if (active && rmtp ) {

ERROR:SPACING: space required before the open brace '{'
#1829: FILE: kernel/posix-timers.c:1269:
+		while (t.tv_nsec < 0){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1832: FILE: kernel/posix-timers.c:1272:
+^I^I} $

ERROR:SPACING: space required before the open brace '{'
#1833: FILE: kernel/posix-timers.c:1273:
+		if (t.tv_sec < 0){

ERROR:SPACING: space required before the open brace '{'
#1837: FILE: kernel/posix-timers.c:1277:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#1837: FILE: kernel/posix-timers.c:1277:
+	}else{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1841: FILE: kernel/posix-timers.c:1281:
+^Iif (!rtn && !abs && rmtp && $

ERROR:SPACING: space required before the open brace '{'
#1842: FILE: kernel/posix-timers.c:1282:
+	    copy_to_user(rmtp, &t, sizeof(struct timespec))){

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1845: FILE: kernel/posix-timers.c:1285:
+	if (active) return -EINTR;

WARNING:TABSTOP: Statements should start on a tabstop
#1865: FILE: kernel/signal.c:693:
+	 struct sigpending *sig_queue;

WARNING:TABSTOP: Statements should start on a tabstop
#1883: FILE: kernel/signal.c:736:
+	 if (LEGACY_QUEUE(sig_queue, sig))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 17)
#1883: FILE: kernel/signal.c:736:
+	 if (LEGACY_QUEUE(sig_queue, sig))
+		 goto out;

WARNING:TABSTOP: Statements should start on a tabstop
#1884: FILE: kernel/signal.c:737:
+		 goto out;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1886: FILE: kernel/signal.c:739:
+^I  * In case of a POSIX timer generated signal you must check $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1887: FILE: kernel/signal.c:740:
+	  * In case of a POSIX timer generated signal you must check 
+	 * if a signal from this timer is already in the queue.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1890: FILE: kernel/signal.c:743:
+	 * itimer.c:posix_timer_fn().
+	  */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->si_code == SI_TIMER'
#1892: FILE: kernel/signal.c:745:
+	if (((unsigned long)info > 1) && (info->si_code == SI_TIMER)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1894: FILE: kernel/signal.c:747:
+		struct sigqueue *q;
+		for (q = sig_queue->head; q; q = q->next) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 33)
#1895: FILE: kernel/signal.c:748:
+			if ((q->info.si_code == SI_TIMER) &&
[...]
+				 q->info.si_overrun += info->si_overrun + 1;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'q->info.si_code == SI_TIMER'
#1895: FILE: kernel/signal.c:748:
+			if ((q->info.si_code == SI_TIMER) &&
+			    (q->info.si_tid == info->si_tid)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'q->info.si_tid == info->si_tid'
#1895: FILE: kernel/signal.c:748:
+			if ((q->info.si_code == SI_TIMER) &&
+			    (q->info.si_tid == info->si_tid)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1898: FILE: kernel/signal.c:751:
+^I^I^I^I/* $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1899: FILE: kernel/signal.c:752:
+				/* 
+				  * this special ret value (1) is recognized

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2049: FILE: kernel/timer.c:972:
+#if 0  $

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2049: FILE: kernel/timer.c:972:
+#if 0  

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2051: FILE: kernel/timer.c:974:
+// correct below.  $

WARNING:TYPO_SPELLING: 'paramerts' may be misspelled - perhaps 'parameters'?
#2055: FILE: kernel/timer.c:978:
+// Some systems may find these paramerts in other ways than as entry parms, 
                                ^^^^^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#2055: FILE: kernel/timer.c:978:
+// Some systems may find these paramerts in other ways than as entry parms, 
                                                                      ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2055: FILE: kernel/timer.c:978:
+// Some systems may find these paramerts in other ways than as entry parms, $

WARNING:TYPO_SPELLING: 'paramerters' may be misspelled - perhaps 'parameters'?
#2057: FILE: kernel/timer.c:980:
+// first parameter, where as other archs pass it as one of the paramerters.
                                                                ^^^^^^^^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#2063: FILE: kernel/timer.c:984:
+	NANOSLEEP_ENTRY(	struct timespec t;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2067: FILE: kernel/timer.c:988:
+^I^I// The following code expects rqtp, rmtp to be available $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2068: FILE: kernel/timer.c:989:
+^I^I// as a result of the above macro.  Also any regs needed $

WARNING:TYPO_SPELLING: 'shoule' may be misspelled - perhaps 'should'?
#2069: FILE: kernel/timer.c:990:
+		// for the _do_signal() macro shoule be set up here.
 		                              ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2071: FILE: kernel/timer.c:992:
+^I^I//asmlinkage long sys_nanosleep(struct timespec *rqtp, $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422247.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 356 errors, 182 warnings, 91 checks, 1905 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422247.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
