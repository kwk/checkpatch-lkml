WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
Content-Disposition: attachment; filename="missing-ide-otherarch-stuff-2.4.21.patch"

ERROR:SPACING: space required before the open parenthesis '('
#51: FILE: include/asm-alpha/system.h:312:
+#define __save_and_sti(flags)	do { (flags) = swpipl(IPL_MIN); barrier(); } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#112: FILE: include/asm-cris/system.h:72:
+#define local_irq_set(x) __asm__ __volatile__ ("move $ccr,%0\n\tei" : "=rm" (x) : : "memory");

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#112: FILE: include/asm-cris/system.h:72:
+#define local_irq_set(x) __asm__ __volatile__ ("move $ccr,%0\n\tei" : "=rm" (x) : : "memory");

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: space required before the open parenthesis '('
#121: FILE: include/asm-cris/system.h:84:
+#define save_and_cli(x) do { save_flags(x); cli(); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#122: FILE: include/asm-cris/system.h:85:
+#define save_and_sti(x) do { save_flags(x); sti(); } while(0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#141: FILE: include/asm-ia64/system.h:182:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#152: FILE: include/asm-s390/system.h:209:
+#define __save_and_cli(x)	do { __save_flags(x); __cli(); } while(0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#152: FILE: include/asm-s390/system.h:209:
+#define __save_and_cli(x)	do { __save_flags(x); __cli(); } while(0);

do {} while(0) macros should not have a trailing semicolon.

ERROR:SPACING: space required before the open parenthesis '('
#153: FILE: include/asm-s390/system.h:210:
+#define __save_and_sti(x)	do { __save_flags(x); __sti(); } while(0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#153: FILE: include/asm-s390/system.h:210:
+#define __save_and_sti(x)	do { __save_flags(x); __sti(); } while(0);

ERROR:SPACING: space required before the open parenthesis '('
#165: FILE: include/asm-s390/system.h:230:
+#define save_and_cli(x) do { save_flags(x); cli(); } while(0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#165: FILE: include/asm-s390/system.h:230:
+#define save_and_cli(x) do { save_flags(x); cli(); } while(0);

ERROR:SPACING: space required before the open parenthesis '('
#166: FILE: include/asm-s390/system.h:231:
+#define save_and_sti(x) do { save_flags(x); sti(); } while(0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#166: FILE: include/asm-s390/system.h:231:
+#define save_and_sti(x) do { save_flags(x); sti(); } while(0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#186: FILE: include/asm-s390x/system.h:219:
 
+

ERROR:SPACING: space required before the open parenthesis '('
#187: FILE: include/asm-s390x/system.h:220:
+#define __save_and_cli(x)       do { __save_flags(x); __cli(); } while(0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#187: FILE: include/asm-s390x/system.h:220:
+#define __save_and_cli(x)       do { __save_flags(x); __cli(); } while(0);

ERROR:SPACING: space required before the open parenthesis '('
#188: FILE: include/asm-s390x/system.h:221:
+#define __save_and_sti(x)       do { __save_flags(x); __sti(); } while(0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#188: FILE: include/asm-s390x/system.h:221:
+#define __save_and_sti(x)       do { __save_flags(x); __sti(); } while(0);

ERROR:SPACING: space required before the open parenthesis '('
#200: FILE: include/asm-s390x/system.h:241:
+#define save_and_cli(x) do { save_flags(x); cli(); } while(0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#200: FILE: include/asm-s390x/system.h:241:
+#define save_and_cli(x) do { save_flags(x); cli(); } while(0);

ERROR:SPACING: space required before the open parenthesis '('
#201: FILE: include/asm-s390x/system.h:242:
+#define save_and_sti(x) do { save_flags(x); sti(); } while(0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#201: FILE: include/asm-s390x/system.h:242:
+#define save_and_sti(x) do { save_flags(x); sti(); } while(0);

ERROR:SPACING: space required before the open parenthesis '('
#221: FILE: include/asm-sparc/system.h:244:
+#define __save_and_sti(flags)	do { __save_flags(flags); __sti(); } while(0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#221: FILE: include/asm-sparc/system.h:244:
+#define __save_and_sti(flags)	do { __save_flags(flags); __sti(); } while(0);

ERROR:SPACING: space required before the open parenthesis '('
#245: FILE: include/asm-sparc/system.h:267:
+#define save_and_sti(flags)	do { save_flags(flags); sti(); } while(0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#245: FILE: include/asm-sparc/system.h:267:
+#define save_and_sti(flags)	do { save_flags(flags); sti(); } while(0);

ERROR:SPACING: space required before the open parenthesis '('
#286: FILE: include/asm-sparc64/system.h:98:
+#define save_and_sti(flags)	do { save_flags(flags); sti(); } while(0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000408164.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 12 warnings, 2 checks, 201 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000408164.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
