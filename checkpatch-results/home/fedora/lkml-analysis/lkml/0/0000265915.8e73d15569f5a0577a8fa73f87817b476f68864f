WARNING:TYPO_SPELLING: 'isnt' may be misspelled - perhaps 'isn't'?
#41: 
> might depend on the latency of a task on another CPU - which CPU isnt
                                                                   ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
I did exactly that in the 2.4 ll patch.  It works, but doesn't seem very nice.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lock' - possible side-effects?
#122: FILE: include/linux/sched.h:1047:
+#define cond_resched_lock(lock, counter, limit)		\
+	do {						\
+		if (++(counter) >= limit) {		\
+			spin_unlock(lock);		\
+			cpu_relax();			\
+			spin_lock(lock);		\
+		}					\
+		(counter) = 0;				\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'counter' - possible side-effects?
#122: FILE: include/linux/sched.h:1047:
+#define cond_resched_lock(lock, counter, limit)		\
+	do {						\
+		if (++(counter) >= limit) {		\
+			spin_unlock(lock);		\
+			cpu_relax();			\
+			spin_lock(lock);		\
+		}					\
+		(counter) = 0;				\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'limit' may be better as '(limit)' to avoid precedence issues
#122: FILE: include/linux/sched.h:1047:
+#define cond_resched_lock(lock, counter, limit)		\
+	do {						\
+		if (++(counter) >= limit) {		\
+			spin_unlock(lock);		\
+			cpu_relax();			\
+			spin_lock(lock);		\
+		}					\
+		(counter) = 0;				\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lock' - possible side-effects?
#132: FILE: include/linux/sched.h:1057:
+#define cond_resched_lock(lock, counter, limit)		\
+	do {						\
+		if (need_resched()) {			\
+			_raw_spin_unlock(lock);		\
+			preempt_enable_no_resched();	\
+			__cond_resched();		\
+			spin_lock(lock);		\
+		}					\
+	} while (0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: fs/reiserfs/journal.c:799:
+    int resched_counter = 0;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: mm/memory.c:346:
+			cond_resched_lock(&dst->page_table_lock,
+						resched_counter, 256);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: mm/memory.c:577:
+				cond_resched_lock(&mm->page_table_lock,
+						resched_counter, 1);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000265915.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 3 warnings, 6 checks, 141 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000265915.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
