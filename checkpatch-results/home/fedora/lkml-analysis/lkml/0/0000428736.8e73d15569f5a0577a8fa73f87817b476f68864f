ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#59: 
--- a/include/sound/core.h	Sun Sep 29 20:21:38 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#117: FILE: include/sound/pcm_sgbuf.h:1:
+#ifndef __SOUND_PCM_SGBUF_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#136: FILE: include/sound/pcm_sgbuf.h:20:
+ *   along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#137: FILE: include/sound/pcm_sgbuf.h:21:
+ *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#154: FILE: include/sound/pcm_sgbuf.h:38:
+typedef struct snd_sg_buf snd_pcm_sgbuf_t; /* for magic cast */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#164: FILE: include/sound/pcm_sgbuf.h:48:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 142 exceeds 100 columns
#170: FILE: include/sound/pcm_sgbuf.h:54:
+int snd_pcm_sgbuf_ops_copy_playback(snd_pcm_substream_t *substream, int channel, snd_pcm_uframes_t hwoff, void *buf, snd_pcm_uframes_t count);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 141 exceeds 100 columns
#171: FILE: include/sound/pcm_sgbuf.h:55:
+int snd_pcm_sgbuf_ops_copy_capture(snd_pcm_substream_t *substream, int channel, snd_pcm_uframes_t hwoff, void *buf, snd_pcm_uframes_t count);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#172: FILE: include/sound/pcm_sgbuf.h:56:
+int snd_pcm_sgbuf_ops_silence(snd_pcm_substream_t *substream, int channel, snd_pcm_uframes_t hwoff, snd_pcm_uframes_t count);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#175: FILE: include/sound/pcm_sgbuf.h:59:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#239: FILE: sound/core/pcm_lib.c:966:
+		1<<0, 1<<1, 1<<2, 1<<3, 1<<4, 1<<5, 1<<6, 1<<7,
 		 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#239: FILE: sound/core/pcm_lib.c:966:
+		1<<0, 1<<1, 1<<2, 1<<3, 1<<4, 1<<5, 1<<6, 1<<7,
 		       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#239: FILE: sound/core/pcm_lib.c:966:
+		1<<0, 1<<1, 1<<2, 1<<3, 1<<4, 1<<5, 1<<6, 1<<7,
 		             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#239: FILE: sound/core/pcm_lib.c:966:
+		1<<0, 1<<1, 1<<2, 1<<3, 1<<4, 1<<5, 1<<6, 1<<7,
 		                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#239: FILE: sound/core/pcm_lib.c:966:
+		1<<0, 1<<1, 1<<2, 1<<3, 1<<4, 1<<5, 1<<6, 1<<7,
 		                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#239: FILE: sound/core/pcm_lib.c:966:
+		1<<0, 1<<1, 1<<2, 1<<3, 1<<4, 1<<5, 1<<6, 1<<7,
 		                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#239: FILE: sound/core/pcm_lib.c:966:
+		1<<0, 1<<1, 1<<2, 1<<3, 1<<4, 1<<5, 1<<6, 1<<7,
 		                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#239: FILE: sound/core/pcm_lib.c:966:
+		1<<0, 1<<1, 1<<2, 1<<3, 1<<4, 1<<5, 1<<6, 1<<7,
 		                                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#240: FILE: sound/core/pcm_lib.c:967:
+		1<<8, 1<<9, 1<<10, 1<<11, 1<<12, 1<<13, 1<<14, 1<<15,
 		 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#240: FILE: sound/core/pcm_lib.c:967:
+		1<<8, 1<<9, 1<<10, 1<<11, 1<<12, 1<<13, 1<<14, 1<<15,
 		       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#240: FILE: sound/core/pcm_lib.c:967:
+		1<<8, 1<<9, 1<<10, 1<<11, 1<<12, 1<<13, 1<<14, 1<<15,
 		             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#240: FILE: sound/core/pcm_lib.c:967:
+		1<<8, 1<<9, 1<<10, 1<<11, 1<<12, 1<<13, 1<<14, 1<<15,
 		                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#240: FILE: sound/core/pcm_lib.c:967:
+		1<<8, 1<<9, 1<<10, 1<<11, 1<<12, 1<<13, 1<<14, 1<<15,
 		                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#240: FILE: sound/core/pcm_lib.c:967:
+		1<<8, 1<<9, 1<<10, 1<<11, 1<<12, 1<<13, 1<<14, 1<<15,
 		                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#240: FILE: sound/core/pcm_lib.c:967:
+		1<<8, 1<<9, 1<<10, 1<<11, 1<<12, 1<<13, 1<<14, 1<<15,
 		                                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#240: FILE: sound/core/pcm_lib.c:967:
+		1<<8, 1<<9, 1<<10, 1<<11, 1<<12, 1<<13, 1<<14, 1<<15,
 		                                                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#241: FILE: sound/core/pcm_lib.c:968:
+		1<<16, 1<<17, 1<<18, 1<<19, 1<<20, 1<<21, 1<<22, 1<<23,
 		 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#241: FILE: sound/core/pcm_lib.c:968:
+		1<<16, 1<<17, 1<<18, 1<<19, 1<<20, 1<<21, 1<<22, 1<<23,
 		        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#241: FILE: sound/core/pcm_lib.c:968:
+		1<<16, 1<<17, 1<<18, 1<<19, 1<<20, 1<<21, 1<<22, 1<<23,
 		               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#241: FILE: sound/core/pcm_lib.c:968:
+		1<<16, 1<<17, 1<<18, 1<<19, 1<<20, 1<<21, 1<<22, 1<<23,
 		                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#241: FILE: sound/core/pcm_lib.c:968:
+		1<<16, 1<<17, 1<<18, 1<<19, 1<<20, 1<<21, 1<<22, 1<<23,
 		                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#241: FILE: sound/core/pcm_lib.c:968:
+		1<<16, 1<<17, 1<<18, 1<<19, 1<<20, 1<<21, 1<<22, 1<<23,
 		                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#241: FILE: sound/core/pcm_lib.c:968:
+		1<<16, 1<<17, 1<<18, 1<<19, 1<<20, 1<<21, 1<<22, 1<<23,
 		                                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#241: FILE: sound/core/pcm_lib.c:968:
+		1<<16, 1<<17, 1<<18, 1<<19, 1<<20, 1<<21, 1<<22, 1<<23,
 		                                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#242: FILE: sound/core/pcm_lib.c:969:
+		1<<24, 1<<25, 1<<26, 1<<27, 1<<28, 1<<29, 1<<30
 		 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#242: FILE: sound/core/pcm_lib.c:969:
+		1<<24, 1<<25, 1<<26, 1<<27, 1<<28, 1<<29, 1<<30
 		        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#242: FILE: sound/core/pcm_lib.c:969:
+		1<<24, 1<<25, 1<<26, 1<<27, 1<<28, 1<<29, 1<<30
 		               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#242: FILE: sound/core/pcm_lib.c:969:
+		1<<24, 1<<25, 1<<26, 1<<27, 1<<28, 1<<29, 1<<30
 		                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#242: FILE: sound/core/pcm_lib.c:969:
+		1<<24, 1<<25, 1<<26, 1<<27, 1<<28, 1<<29, 1<<30
 		                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#242: FILE: sound/core/pcm_lib.c:969:
+		1<<24, 1<<25, 1<<26, 1<<27, 1<<28, 1<<29, 1<<30
 		                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#242: FILE: sound/core/pcm_lib.c:969:
+		1<<24, 1<<25, 1<<26, 1<<27, 1<<28, 1<<29, 1<<30
 		                                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#245: FILE: sound/core/pcm_lib.c:972:
+				 sizeof(pow2_sizes)/sizeof(int), pow2_sizes, 0);
 				                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: sound/core/pcm_lib.c:973:
+}^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#252: FILE: sound/core/pcm_lib.c:979:
+^Ireturn snd_pcm_hw_rule_add(runtime, cond, var, $

CHECK:BRACES: braces {} should be used on all arms of this statement
#283: FILE: sound/core/pcm_native.c:2650:
+	if (substream->ops->page) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#285: FILE: sound/core/pcm_native.c:2652:
+		if (! vaddr)
 		    ^

CHECK:BRACES: Unbalanced braces around else statement
#287: FILE: sound/core/pcm_native.c:2654:
+	} else

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#297: FILE: sound/core/pcm_sgbuf.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#313: FILE: sound/core/pcm_sgbuf.c:17:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#314: FILE: sound/core/pcm_sgbuf.c:18:
+ *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#325: FILE: sound/core/pcm_sgbuf.c:29:
+
+

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#328: FILE: sound/core/pcm_sgbuf.c:32:
+#define sgbuf_align_table(tbl)	((((tbl) + SGBUF_TBL_ALIGN - 1) / SGBUF_TBL_ALIGN) * SGBUF_TBL_ALIGN)

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#337: FILE: sound/core/pcm_sgbuf.c:41:
+	if (! sgbuf->table)
 	    ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#358: FILE: sound/core/pcm_sgbuf.c:62:
+	if (! sgbuf)
 	    ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sgbuf->table)...) over kmalloc(sizeof(struct snd_sg_page)...)
#364: FILE: sound/core/pcm_sgbuf.c:68:
+	sgbuf->table = kmalloc(sizeof(struct snd_sg_page) * tblsize, GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#364: FILE: sound/core/pcm_sgbuf.c:68:
+	sgbuf->table = kmalloc(sizeof(struct snd_sg_page) * tblsize, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#365: FILE: sound/core/pcm_sgbuf.c:69:
+	if (! sgbuf->table) {
 	    ^

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#383: FILE: sound/core/pcm_sgbuf.c:87:
+	if (sgbuf->table)
+		kfree(sgbuf->table);

WARNING:TYPO_SPELLING: 'unsed' may be misspelled - perhaps 'unused'?
#405: FILE: sound/core/pcm_sgbuf.c:109:
+		/* release unsed pages */
 		           ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#412: FILE: sound/core/pcm_sgbuf.c:116:
+		struct snd_sg_page *table;
+		table = kmalloc(sizeof(*table) * tblsize, GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#412: FILE: sound/core/pcm_sgbuf.c:116:
+		table = kmalloc(sizeof(*table) * tblsize, GFP_KERNEL);

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#413: FILE: sound/core/pcm_sgbuf.c:117:
+		if (! table)
 		    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#424: FILE: sound/core/pcm_sgbuf.c:128:
+		dma_addr_t addr;
+		ptr = snd_malloc_pci_pages(sgbuf->pci, PAGE_SIZE, &addr);

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#425: FILE: sound/core/pcm_sgbuf.c:129:
+		if (! ptr)
 		    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#476: FILE: sound/core/pcm_sgbuf.c:180:
+	size_t p = (hwoff >> PAGE_SHIFT) << PAGE_SHIFT;
+	hwoff -= p;

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#480: FILE: sound/core/pcm_sgbuf.c:184:
+		if (! addr)
 		    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#506: FILE: sound/core/pcm_sgbuf.c:210:
+	size_t p = (hwoff >> PAGE_SHIFT) << PAGE_SHIFT;
+	hwoff -= p;

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#510: FILE: sound/core/pcm_sgbuf.c:214:
+		if (! addr)
 		    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#537: FILE: sound/core/pcm_sgbuf.c:241:
+	size_t p = (hwoff >> PAGE_SHIFT) << PAGE_SHIFT;
+	hwoff -= p;

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#542: FILE: sound/core/pcm_sgbuf.c:246:
+		if (! addr)
 		    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#564: FILE: sound/core/pcm_sgbuf.c:268:
+	snd_pcm_runtime_t *runtime = substream->runtime;
+	if (channel < 0) {

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#565: FILE: sound/core/pcm_sgbuf.c:269:
+		return copy_from_user_sg_buf(substream, buf, frames_to_bytes(runtime, hwoff), frames_to_bytes(runtime, count));

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#566: FILE: sound/core/pcm_sgbuf.c:270:
+		return copy_from_user_sg_buf(substream, buf, frames_to_bytes(runtime, hwoff), frames_to_bytes(runtime, count));
+	} else {

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#569: FILE: sound/core/pcm_sgbuf.c:273:
+		return copy_from_user_sg_buf(substream, buf, c_ofs, samples_to_bytes(runtime, count));

WARNING:LINE_SPACING: Missing a blank line after declarations
#569: FILE: sound/core/pcm_sgbuf.c:273:
+		size_t c_ofs = (channel * dma_csize) + samples_to_bytes(runtime, hwoff);
+		return copy_from_user_sg_buf(substream, buf, c_ofs, samples_to_bytes(runtime, count));

WARNING:LINE_SPACING: Missing a blank line after declarations
#580: FILE: sound/core/pcm_sgbuf.c:284:
+	snd_pcm_runtime_t *runtime = substream->runtime;
+	if (channel < 0) {

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#581: FILE: sound/core/pcm_sgbuf.c:285:
+		return copy_to_user_sg_buf(substream, buf, frames_to_bytes(runtime, hwoff), frames_to_bytes(runtime, count));

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#582: FILE: sound/core/pcm_sgbuf.c:286:
+		return copy_to_user_sg_buf(substream, buf, frames_to_bytes(runtime, hwoff), frames_to_bytes(runtime, count));
+	} else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#585: FILE: sound/core/pcm_sgbuf.c:289:
+		size_t c_ofs = (channel * dma_csize) + samples_to_bytes(runtime, hwoff);
+		return copy_to_user_sg_buf(substream, buf, c_ofs, samples_to_bytes(runtime, count));

WARNING:LINE_SPACING: Missing a blank line after declarations
#596: FILE: sound/core/pcm_sgbuf.c:300:
+	snd_pcm_runtime_t *runtime = substream->runtime;
+	if (channel < 0) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#602: FILE: sound/core/pcm_sgbuf.c:306:
+		size_t c_ofs = (channel * dma_csize) + samples_to_bytes(runtime, hwoff);
+		return set_silence_sg_buf(substream, c_ofs, samples_to_bytes(runtime, count));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#606: FILE: sound/core/pcm_sgbuf.c:310:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#611: FILE: sound/core/pcm_sgbuf.c:315:
+EXPORT_SYMBOL(snd_pcm_sgbuf_delete);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#612: FILE: sound/core/pcm_sgbuf.c:316:
+EXPORT_SYMBOL(snd_pcm_sgbuf_alloc);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#613: FILE: sound/core/pcm_sgbuf.c:317:
+EXPORT_SYMBOL(snd_pcm_sgbuf_free);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#614: FILE: sound/core/pcm_sgbuf.c:318:
+EXPORT_SYMBOL(snd_pcm_sgbuf_ops_copy_playback);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#615: FILE: sound/core/pcm_sgbuf.c:319:
+EXPORT_SYMBOL(snd_pcm_sgbuf_ops_copy_capture);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#616: FILE: sound/core/pcm_sgbuf.c:320:
+EXPORT_SYMBOL(snd_pcm_sgbuf_ops_silence);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#617: FILE: sound/core/pcm_sgbuf.c:321:
+EXPORT_SYMBOL(snd_pcm_sgbuf_ops_page);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#637: FILE: sound/core/sound.c:505:
+EXPORT_SYMBOL(snd_wrapper_vfree);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#649: FILE: sound/isa/cs423x/cs4236.c:231:
+	ISAPNP_CS4232('C','S','C',0x4625,0x0100,0x0110,0x0103),
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#649: FILE: sound/isa/cs423x/cs4236.c:231:
+	ISAPNP_CS4232('C','S','C',0x4625,0x0100,0x0110,0x0103),
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#649: FILE: sound/isa/cs423x/cs4236.c:231:
+	ISAPNP_CS4232('C','S','C',0x4625,0x0100,0x0110,0x0103),
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#649: FILE: sound/isa/cs423x/cs4236.c:231:
+	ISAPNP_CS4232('C','S','C',0x4625,0x0100,0x0110,0x0103),
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#649: FILE: sound/isa/cs423x/cs4236.c:231:
+	ISAPNP_CS4232('C','S','C',0x4625,0x0100,0x0110,0x0103),
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#649: FILE: sound/isa/cs423x/cs4236.c:231:
+	ISAPNP_CS4232('C','S','C',0x4625,0x0100,0x0110,0x0103),
 	                                              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#695: FILE: sound/pci/emu10k1/emupcm.c:362:
+	if ((err = snd_pcm_sgbuf_alloc(substream, params_buffer_bytes(hw_params))) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#719: FILE: sound/pci/emu10k1/emupcm.c:782:
+	if ((err = snd_pcm_sgbuf_init(substream, emu->pci, 32)) < 0) {

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#738: FILE: sound/pci/emu10k1/emupcm.c:951:
+	copy:			snd_pcm_sgbuf_ops_copy_playback,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#738: FILE: sound/pci/emu10k1/emupcm.c:951:
+	copy:			snd_pcm_sgbuf_ops_copy_playback,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#739: FILE: sound/pci/emu10k1/emupcm.c:952:
+	silence:		snd_pcm_sgbuf_ops_silence,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#739: FILE: sound/pci/emu10k1/emupcm.c:952:
+	silence:		snd_pcm_sgbuf_ops_silence,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#740: FILE: sound/pci/emu10k1/emupcm.c:953:
+	page:			snd_pcm_sgbuf_ops_page,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#740: FILE: sound/pci/emu10k1/emupcm.c:953:
+	page:			snd_pcm_sgbuf_ops_page,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#751: FILE: sound/pci/emu10k1/emupcm.c:973:
 int __devinit snd_emu10k1_pcm(emu10k1_t * emu, int device, snd_pcm_t ** rpcm)

WARNING:LINE_SPACING: Missing a blank line after declarations
#799: FILE: sound/pci/emu10k1/memory.c:315:
+		dma_addr_t addr = sgbuf->table[idx].addr;
+		if (! is_valid_page(addr)) {

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#799: FILE: sound/pci/emu10k1/memory.c:315:
+		if (! is_valid_page(addr)) {
 		    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#846: FILE: sound/pci/rme9652/hdsp.c:960:
+			del_timer (&hmidi->timer);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#855: FILE: sound/pci/rme9652/hdsp.c:2555:
+	rates:			(SNDRV_PCM_RATE_32000 |
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#855: FILE: sound/pci/rme9652/hdsp.c:2555:
+	rates:			(SNDRV_PCM_RATE_32000 |

CHECK:LINE_SPACING: Please don't use multiple blank lines
#934: FILE: sound/pci/via686.c:164:
 
+

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#939: FILE: sound/pci/via686.c:169:
+	struct snd_sg_buf *sgbuf = snd_magic_cast(snd_pcm_sgbuf_t, substream->dma_private, return -EINVAL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#961: FILE: sound/pci/via686.c:191:
+	dev->table = (u32*)snd_malloc_pci_pages(pci, pages << PAGE_SHIFT, &dev->table_addr);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#962: FILE: sound/pci/via686.c:192:
+	if (! dev->table)
 	    ^

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#967: FILE: sound/pci/via686.c:197:
+			dev->table[i << 1] = cpu_to_le32((u32)sgbuf->table[0].addr + dev->fragsize * i);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#982: FILE: sound/pci/via686.c:212:
+
+

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#987: FILE: sound/pci/via686.c:217:
+		snd_free_pci_pages(pci, snd_pcm_sgbuf_pages(dev->tbl_entries * 8) << PAGE_SHIFT, dev->table, dev->table_addr);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#992: FILE: sound/pci/via686.c:222:
+
+

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1017: FILE: sound/pci/via686.c:258:
 static struct pci_device_id snd_via686a_ids[] __devinitdata = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1043: FILE: sound/pci/via686.c:424:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1045: FILE: sound/pci/via686.c:426:
+static int snd_via686a_setup_periods(via686a_t *chip, viadev_t *viadev,
 				      snd_pcm_substream_t *substream)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1140: FILE: sound/pci/via686.c:500:
+	/*if (inb(VIAREG(chip, FM_STATUS)) & (VIA_REG_STAT_EOL|VIA_REG_STAT_FLAG))
+	  snd_via686a_update(chip, &chip->playback_fm);*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1140: FILE: sound/pci/via686.c:500:
+	  snd_via686a_update(chip, &chip->playback_fm);*/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1224: FILE: sound/pci/via686.c:637:
+	if ((err = snd_pcm_sgbuf_init(substream, chip->pci, 32)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1228: FILE: sound/pci/via686.c:641:
+	if ((err = snd_pcm_hw_constraint_pow2(runtime, 0, SNDRV_PCM_HW_PARAM_PERIOD_BYTES)) < 0)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1230: FILE: sound/pci/via686.c:643:
+#if 0

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1245: FILE: sound/pci/via686.c:663:
+	if ((err = snd_pcm_sgbuf_init(substream, chip->pci, 32)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1249: FILE: sound/pci/via686.c:667:
+	if ((err = snd_pcm_hw_constraint_pow2(runtime, 0, SNDRV_PCM_HW_PARAM_PERIOD_BYTES)) < 0)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1251: FILE: sound/pci/via686.c:669:
+#if 0

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1280: FILE: sound/pci/via686.c:709:
+	copy:           snd_pcm_sgbuf_ops_copy_playback,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1280: FILE: sound/pci/via686.c:709:
+	copy:           snd_pcm_sgbuf_ops_copy_playback,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1281: FILE: sound/pci/via686.c:710:
+	silence:        snd_pcm_sgbuf_ops_silence,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#1281: FILE: sound/pci/via686.c:710:
+	silence:        snd_pcm_sgbuf_ops_silence,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1282: FILE: sound/pci/via686.c:711:
+	page:           snd_pcm_sgbuf_ops_page,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1282: FILE: sound/pci/via686.c:711:
+	page:           snd_pcm_sgbuf_ops_page,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1290: FILE: sound/pci/via686.c:723:
+	copy:           snd_pcm_sgbuf_ops_copy_capture,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1290: FILE: sound/pci/via686.c:723:
+	copy:           snd_pcm_sgbuf_ops_copy_capture,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1291: FILE: sound/pci/via686.c:724:
+	silence:        snd_pcm_sgbuf_ops_silence,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#1291: FILE: sound/pci/via686.c:724:
+	silence:        snd_pcm_sgbuf_ops_silence,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1292: FILE: sound/pci/via686.c:725:
+	page:           snd_pcm_sgbuf_ops_page,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1292: FILE: sound/pci/via686.c:725:
+	page:           snd_pcm_sgbuf_ops_page,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1302: FILE: sound/pci/via686.c:734:
 static int __devinit snd_via686a_pcm(via686a_t *chip, int device, snd_pcm_t ** rpcm)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428736.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 41 errors, 57 warnings, 44 checks, 1320 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428736.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
