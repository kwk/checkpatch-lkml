WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
Note that in CONFIG_VIRTUAL_PIDS=n case these macros expand to default code.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: fs/proc/array.c:177:
+^I       ^Iget_task_tgid(p),$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#182: FILE: fs/proc/array.c:177:
+^I       ^Iget_task_tgid(p),$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: fs/proc/array.c:375:
+			tty_pgrp = pid_type_to_vpid(PIDTYPE_PGID,
+					task->signal->tty->pgrp);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#307: FILE: ipc/sem.c:1138:
+	error = try_atomic_semop (sma, sops, nsops, un, virt_tgid(current));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: kernel/capability.c:70:
+     if (pid && pid != virt_pid(current)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 13)
#365: FILE: kernel/capability.c:70:
+     if (pid && pid != virt_pid(current)) {
 	     target = find_task_by_pid(pid);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: kernel/capability.c:206:
+     if (pid > 0 && pid != virt_pid(current)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 10)
#385: FILE: kernel/capability.c:206:
+     if (pid > 0 && pid != virt_pid(current)) {
           target = find_task_by_pid(pid);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#410: FILE: kernel/exit.c:178:
 				|| p->exit_state
+				|| virt_pid(p->real_parent) == 1)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#521: FILE: kernel/signal.c:1163:
+	 * tasklist_lock. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:LINE_SPACING: Missing a blank line after declarations
#672: FILE: kernel/sys.c:1172:
+			task_t *t;
+			for (t = next_thread(p); t != p; t = next_thread(t)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#672: FILE: kernel/sys.c:1172:
+			for (t = next_thread(p); t != p; t = next_thread(t)) {
+				set_virt_pgid(t, _pgid);
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#802: FILE: net/unix/af_unix.c:1110:
+	ska->sk_peercred.pid = skb->sk_peercred.pid = virt_tgid(current);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000108820.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 30 warnings, 3 checks, 644 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000108820.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
