WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
Hi, heres a patch against the Nvidia Nforce 1.0-0248 source to get onboard ethernet working under 2.5. 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#67: FILE: nvnet/Makefile:95:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#69: FILE: nvnet/Makefile:97:
+^I$(KERNSRC)/scripts/modpost nvnet.o^I     $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: nvnet/Makefile:136:
+^Irm -f $(TARGET) nvnet.o *.mod.c *.mod.o $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#93: FILE: nvnet/nvnet.c:30:
+char* aPhyAddrAndId[256];

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <aPhyAddrAndId>
#93: FILE: nvnet/nvnet.c:30:
+char* aPhyAddrAndId[256];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: nvnet/nvnet.c:679:
+    try_module_get(THIS_MODULE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: nvnet/nvnet.c:694:
+        module_put(THIS_MODULE);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: nvnet/nvnet.c:694:
+        module_put(THIS_MODULE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: nvnet/nvnet.c:710:
+        module_put(THIS_MODULE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: nvnet/nvnet.c:710:
+        module_put(THIS_MODULE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: nvnet/nvnet.c:740:
+        return IRQ_NONE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: nvnet/nvnet.c:740:
+        return IRQ_NONE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: nvnet/nvnet.c:750:
+    return IRQ_HANDLED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: nvnet/nvnet.c:773:
+    module_put(THIS_MODULE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: nvnet/nvnet.c:1081:
+    SET_NETDEV_DEV(dev, &(pdev->dev));$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#164: FILE: nvnet/nvnet.c:1081:
+    SET_NETDEV_DEV(dev, &(pdev->dev));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#177: FILE: nvnet/nvnet.c:1173:
 static void __devexit

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: nvnet/nvnet.c:1176:
+    struct net_device *dev = pci_get_drvdata(pdev);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: nvnet/nvnet.h:106:
+static irqreturn_t nvnet_interrupt(int irq, void *dev_instance, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: nvnet/nvnet.h:107:
+static irqreturn_t nvnet_interrupt(int irq, void *dev_instance, 
                              struct pt_regs *regs);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000357273.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 10 warnings, 3 checks, 148 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000357273.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
