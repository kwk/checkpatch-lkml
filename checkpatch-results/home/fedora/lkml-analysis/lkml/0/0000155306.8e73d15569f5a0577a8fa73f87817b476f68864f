ERROR:TRAILING_WHITESPACE: trailing whitespace
#55: FILE: Documentation/amd76x_pm.txt:12:
+      P_LVL2 for the first time causes the system to sleep instead of $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: Documentation/amd76x_pm.txt:25:
+systems should be easy if desired.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: Documentation/amd76x_pm.txt:37:
+  for an outer loop with interrupts enabled that guarantees low latencies. $

WARNING:TYPO_SPELLING: 'immediatly' may be misspelled - perhaps 'immediately'?
#87: FILE: Documentation/amd76x_pm.txt:44:
+  immediatly if there is something waiting to be scheduled.  The default
   ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'interrups' may be misspelled - perhaps 'interrupts'?
#100: FILE: Documentation/amd76x_pm.txt:57:
+interrups or by NMIs.  This causes a high interrupt latency for other
 ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: Documentation/amd76x_pm.txt:66:
+  at which interrupt rate C2 mode shall be disabled.  The syntax for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: Documentation/amd76x_pm.txt:72:
+  $

WARNING:TYPO_SPELLING: 'mininum' may be misspelled - perhaps 'minimum'?
#121: FILE: Documentation/amd76x_pm.txt:78:
+- min_C1 defines the mininum number of check intervals with low
                      ^^^^^^^

WARNING:TYPO_SPELLING: 'noticable' may be misspelled - perhaps 'noticeable'?
#136: FILE: Documentation/amd76x_pm.txt:93:
+noticable.  This is caused by two changes:
 ^^^^^^^^^

WARNING:TYPO_SPELLING: 'propably' may be misspelled - perhaps 'probably'?
#139: FILE: Documentation/amd76x_pm.txt:96:
+  amd76x_smp_idle() and this propably caused lower latencies.
                              ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: Documentation/amd76x_pm.txt:97:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: Documentation/amd76x_pm.txt:105:
+until you see a significant increase in core temperature or C2 rate. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: Documentation/amd76x_pm.txt:117:
+This software is licensed under GNU General Public License Version 2 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: Documentation/amd76x_pm.txt:118:
+as specified in file COPYING in the Linux kernel source tree main $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: Documentation/amd76x_pm.txt:136:
+  ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: Documentation/amd76x_pm.txt:139:
+  ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#226: FILE: Documentation/amd76x_pm.txt:183:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: Documentation/amd76x_pm.txt:322:
+^I$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#377: FILE: drivers/acpi/Kconfig:368:
+config AMD76X_PM
+        tristate "AMD76x Native Power Management support"
+        default n
+        depends on X86 && PCI
+        ---help---
+          This driver enables Power Management on AMD760MP & AMD760MPX chipsets.          This is about same as ACPI C2, except that ACPI folks don't do SMP ATM.
+          See Documentation/amd76x_pm.txt for further details.
+
+          To compile this driver as a module ( = code which can be inserted in
+          and removed from the running kernel whenever you want), say M
+          here.  The module will be called amd76x_pm.
+
+          If unsure, say N.
+
 endmenu

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#408: FILE: drivers/acpi/amd76x_pm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#413: FILE: drivers/acpi/amd76x_pm.c:6:
+ * ^I^I^I^ITony Lindgren <tony@atomide.com>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#414: FILE: drivers/acpi/amd76x_pm.c:7:
+ * ^I^I^I^IJoerg Sommrey <jo@sommrey.de>$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#417: FILE: drivers/acpi/amd76x_pm.c:10:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: drivers/acpi/amd76x_pm.c:15:
+ *^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#424: FILE: drivers/acpi/amd76x_pm.c:17:
+ *   ^II adapted Tony's code for the AMD-765/766 southbridge and adapted it$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#425: FILE: drivers/acpi/amd76x_pm.c:18:
+ *   ^Iaccording to the AMD-768 data sheet to provide the same capability for$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#426: FILE: drivers/acpi/amd76x_pm.c:19:
+ *   ^ISMP AMD-760MPX systems. Posted to acpi-devel list.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#427: FILE: drivers/acpi/amd76x_pm.c:20:
+ *   ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#427: FILE: drivers/acpi/amd76x_pm.c:20:
+ *   ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#429: FILE: drivers/acpi/amd76x_pm.c:22:
+ *   ^IReplaces non-functional amd76x_pm code in -ac tree.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#430: FILE: drivers/acpi/amd76x_pm.c:23:
+ *   ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#430: FILE: drivers/acpi/amd76x_pm.c:23:
+ *   ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#432: FILE: drivers/acpi/amd76x_pm.c:25:
+ *   ^IAdded ability to do normal throttling (the non-thermal kind), C3 idling$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#433: FILE: drivers/acpi/amd76x_pm.c:26:
+ *   ^Iand Power On Suspend (S1 sleep). It would be very easy to tie swsusp$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#434: FILE: drivers/acpi/amd76x_pm.c:27:
+ *   ^Iinto activate_amd76x_SLP(). C3 idling doesn't happen yet; see my note$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#435: FILE: drivers/acpi/amd76x_pm.c:28:
+ *   ^Iin amd76x_smp_idle(). I've noticed that when NTH and idling are both$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#436: FILE: drivers/acpi/amd76x_pm.c:29:
+ *   ^Ienabled, my hardware locks and requires a hard reset, so I have$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#437: FILE: drivers/acpi/amd76x_pm.c:30:
+ *   ^I#ifndefed around the idle loop setting to prevent this. POS locks it up$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#438: FILE: drivers/acpi/amd76x_pm.c:31:
+ *   ^Itoo, both ought to be fixable. I've also noticed that idling and NTH$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#439: FILE: drivers/acpi/amd76x_pm.c:32:
+ *   ^Imake some interference that is picked up by the onboard sound chip on$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#440: FILE: drivers/acpi/amd76x_pm.c:33:
+ *   ^Imy ASUS A7M266-D motherboard.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#483: FILE: drivers/acpi/amd76x_pm.c:76:
+ * ^I /proc interface for normal throttling level.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#484: FILE: drivers/acpi/amd76x_pm.c:77:
+ * ^I /proc interface for POS.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#502: FILE: drivers/acpi/amd76x_pm.c:95:
+ *       P_LVL2 for the first time causes the system to sleep instead of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#510: FILE: drivers/acpi/amd76x_pm.c:103:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#515: FILE: drivers/acpi/amd76x_pm.c:108:
+ * This software is licensed under GNU General Public License Version 2 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#516: FILE: drivers/acpi/amd76x_pm.c:109:
+ * as specified in file COPYING in the Linux kernel source tree main $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#518: FILE: drivers/acpi/amd76x_pm.c:111:
+ * $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#522: FILE: drivers/acpi/amd76x_pm.c:115:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#532: FILE: drivers/acpi/amd76x_pm.c:125:
+#include <asm/atomic.h>

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#544: FILE: drivers/acpi/amd76x_pm.c:137:
+extern void default_idle(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#548: FILE: drivers/acpi/amd76x_pm.c:141:
+static unsigned long lazy_idle = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#549: FILE: drivers/acpi/amd76x_pm.c:142:
+static unsigned long spin_idle = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#550: FILE: drivers/acpi/amd76x_pm.c:143:
+static unsigned long watch_int = 0;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#556: FILE: drivers/acpi/amd76x_pm.c:149:
+module_param(lazy_idle, long, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#559: FILE: drivers/acpi/amd76x_pm.c:152:
+MODULE_PARM_DESC(lazy_idle,
+		"\tnumber of idle cycles before entering power saving mode");

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#561: FILE: drivers/acpi/amd76x_pm.c:154:
+module_param(spin_idle, long, S_IRUGO | S_IWUSR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: drivers/acpi/amd76x_pm.c:156:
+MODULE_PARM_DESC(spin_idle,
+		"\tnumber of spin cycles to wait for other CPUs to become idle");

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#565: FILE: drivers/acpi/amd76x_pm.c:158:
+module_param(watch_int, long, S_IRUGO | S_IWUSR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#567: FILE: drivers/acpi/amd76x_pm.c:160:
+MODULE_PARM_DESC(watch_int,
+		"\twatch interval (in milliseconds) for interrupts");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#570: FILE: drivers/acpi/amd76x_pm.c:163:
+module_param_call(watch_irqs, set_watch_irqs, show_watch_irqs,
+	NULL, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#570: FILE: drivers/acpi/amd76x_pm.c:163:
+	NULL, S_IRUGO | S_IWUSR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#572: FILE: drivers/acpi/amd76x_pm.c:165:
+MODULE_PARM_DESC(watch_irqs,
+		"\tlist of irqs (and optional their limit per second) that "

WARNING:SPLIT_STRING: quoted string split across lines
#573: FILE: drivers/acpi/amd76x_pm.c:166:
+		"\tlist of irqs (and optional their limit per second) that "
+		"cause fallback to C1 mode. "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#574: FILE: drivers/acpi/amd76x_pm.c:167:
+		"cause fallback to C1 mode. "
+		"Syntax: irq0[:limit0],irq1[:limit1],...");

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#576: FILE: drivers/acpi/amd76x_pm.c:169:
+module_param(min_C1, long, S_IRUGO | S_IWUSR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#578: FILE: drivers/acpi/amd76x_pm.c:171:
+MODULE_PARM_DESC(min_C1,
+		"\tminimum irq rate watch intervals spent in C1 mode");

WARNING:SPLIT_STRING: quoted string split across lines
#582: FILE: drivers/acpi/amd76x_pm.c:175:
+MODULE_DESCRIPTION("ACPI style power management for SMP AMD-760MP(X) "
+		"based systems, version " VERSION);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#584: FILE: drivers/acpi/amd76x_pm.c:177:
+
+

WARNING:SPACING: Unnecessary space before function pointer arguments
#593: FILE: drivers/acpi/amd76x_pm.c:186:
+	void (*orig_idle) (void);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#594: FILE: drivers/acpi/amd76x_pm.c:187:
+	void (*curr_idle) (void);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#638: FILE: drivers/acpi/amd76x_pm.c:231:
+static struct pci_device_id  __devinitdata amd_nb_tbl[] = {

WARNING:MISPLACED_INIT: __devinitdata should be placed after amd_nb_tbl[]
#638: FILE: drivers/acpi/amd76x_pm.c:231:
+static struct pci_device_id  __devinitdata amd_nb_tbl[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#644: FILE: drivers/acpi/amd76x_pm.c:237:
+static struct pci_device_id  __devinitdata amd_sb_tbl[] = {

WARNING:MISPLACED_INIT: __devinitdata should be placed after amd_sb_tbl[]
#644: FILE: drivers/acpi/amd76x_pm.c:237:
+static struct pci_device_id  __devinitdata amd_sb_tbl[] = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#683: FILE: drivers/acpi/amd76x_pm.c:276:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#701: FILE: drivers/acpi/amd76x_pm.c:294:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#712: FILE: drivers/acpi/amd76x_pm.c:305:
+	 * AMD-768: DevB:3x41C; page 94 in AMD-768 doc */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required before the open parenthesis '('
#714: FILE: drivers/acpi/amd76x_pm.c:307:
+	if(enable) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#714: FILE: drivers/acpi/amd76x_pm.c:307:
+	if(enable) {
+		regbyte |= ((is_766 << 1) | (1 << 7));
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#731: FILE: drivers/acpi/amd76x_pm.c:324:
+	if(enable) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#731: FILE: drivers/acpi/amd76x_pm.c:324:
+	if(enable) {
[...]
+	else
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#738: FILE: drivers/acpi/amd76x_pm.c:331:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#756: FILE: drivers/acpi/amd76x_pm.c:349:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#767: FILE: drivers/acpi/amd76x_pm.c:360:
+	if(enable)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#797: FILE: drivers/acpi/amd76x_pm.c:390:
+^I * we really shouldn't end up here anyway. $

WARNING:MEMORY_BARRIER: memory barrier without comment
#844: FILE: drivers/acpi/amd76x_pm.c:437:
+		smp_mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#850: FILE: drivers/acpi/amd76x_pm.c:443:
+			smp_mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#858: FILE: drivers/acpi/amd76x_pm.c:451:
+	smp_mb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#872: FILE: drivers/acpi/amd76x_pm.c:465:
+	ssize_t ret = 0;
+	for (i = 0; i < AMD76X_WATCH_MAX && irqwatch.item[i].irq != -1 ; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#889: FILE: drivers/acpi/amd76x_pm.c:482:
+^I$

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#891: FILE: drivers/acpi/amd76x_pm.c:484:
+		irq = simple_strtol(s, &e, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:BRACES: braces {} should be used on all arms of this statement
#894: FILE: drivers/acpi/amd76x_pm.c:487:
+		if (*e == ':') {
[...]
+		} else
[...]

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#896: FILE: drivers/acpi/amd76x_pm.c:489:
+			limit = simple_strtol(s, &e, 0);

CHECK:BRACES: Unbalanced braces around else statement
#897: FILE: drivers/acpi/amd76x_pm.c:490:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#899: FILE: drivers/acpi/amd76x_pm.c:492:
+		if (irq >= 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#901: FILE: drivers/acpi/amd76x_pm.c:494:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#914: FILE: drivers/acpi/amd76x_pm.c:507:
+	if (irqwatch.item[0].irq != -1) {
[...]
+	} else
[...]

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#916: FILE: drivers/acpi/amd76x_pm.c:509:
+		printk(KERN_INFO "amd76x_pm: irq rate watcher parms:\n");
 		                                              ^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#916: FILE: drivers/acpi/amd76x_pm.c:509:
+		printk(KERN_INFO "amd76x_pm: irq rate watcher parms:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#918: FILE: drivers/acpi/amd76x_pm.c:511:
+			printk(KERN_INFO

CHECK:BRACES: Unbalanced braces around else statement
#922: FILE: drivers/acpi/amd76x_pm.c:515:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#923: FILE: drivers/acpi/amd76x_pm.c:516:
+		printk(KERN_INFO "amd76x_pm: irq rate watcher disabled.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#928: FILE: drivers/acpi/amd76x_pm.c:521:
+static ssize_t $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#929: FILE: drivers/acpi/amd76x_pm.c:522:
+show_C2_cnt (struct device *dev, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#930: FILE: drivers/acpi/amd76x_pm.c:523:
+show_C2_cnt (struct device *dev, struct device_attribute *attr,
+		char *buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#937: FILE: drivers/acpi/amd76x_pm.c:530:
+^Ireturn sprintf(buf,"%u\n", C2_cnt);  $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#937: FILE: drivers/acpi/amd76x_pm.c:530:
+	return sprintf(buf,"%u\n", C2_cnt);  
 	                  ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_C2_cnt' to 'C2_cnt_show'
#938: FILE: drivers/acpi/amd76x_pm.c:531:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#940: FILE: drivers/acpi/amd76x_pm.c:533:
+static DEVICE_ATTR(C2_cnt, S_IRUGO,

CHECK:BRACES: braces {} should be used on all arms of this statement
#948: FILE: drivers/acpi/amd76x_pm.c:541:
+	if (irqwatch.item[0].irq != -1 && watch_int) {
[...]
+	} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#950: FILE: drivers/acpi/amd76x_pm.c:543:
+		printk(KERN_INFO "amd76x_pm: irq rate watcher started. "

WARNING:SPLIT_STRING: quoted string split across lines
#951: FILE: drivers/acpi/amd76x_pm.c:544:
+		printk(KERN_INFO "amd76x_pm: irq rate watcher started. "
+				"watch_int = %lu ms, min_C1 = %lu\n",

CHECK:BRACES: Unbalanced braces around else statement
#953: FILE: drivers/acpi/amd76x_pm.c:546:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#954: FILE: drivers/acpi/amd76x_pm.c:547:
+		printk(KERN_INFO "amd76x_pm: irq rate watcher disabled.\n");

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#958: FILE: drivers/acpi/amd76x_pm.c:551:
+watch_irq(void *parm)
                 ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#974: FILE: drivers/acpi/amd76x_pm.c:567:
+        if (force_C1 && !irqwatch.force_C1)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#974: FILE: drivers/acpi/amd76x_pm.c:567:
+        if (force_C1 && !irqwatch.force_C1)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#975: FILE: drivers/acpi/amd76x_pm.c:568:
+                printk(KERN_INFO "amd76x_pm: C1 on\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#975: FILE: drivers/acpi/amd76x_pm.c:568:
+                printk(KERN_INFO "amd76x_pm: C1 on\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#975: FILE: drivers/acpi/amd76x_pm.c:568:
+                printk(KERN_INFO "amd76x_pm: C1 on\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#976: FILE: drivers/acpi/amd76x_pm.c:569:
+        if (!force_C1 && irqwatch.force_C1 == 1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#976: FILE: drivers/acpi/amd76x_pm.c:569:
+        if (!force_C1 && irqwatch.force_C1 == 1)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#977: FILE: drivers/acpi/amd76x_pm.c:570:
+                printk(KERN_INFO "amd76x_pm: C1 off\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#977: FILE: drivers/acpi/amd76x_pm.c:570:
+                printk(KERN_INFO "amd76x_pm: C1 off\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#977: FILE: drivers/acpi/amd76x_pm.c:570:
+                printk(KERN_INFO "amd76x_pm: C1 off\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#987: FILE: drivers/acpi/amd76x_pm.c:580:
+		schedule_delayed_work(&work,
+			msecs_to_jiffies(watch_int));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#989: FILE: drivers/acpi/amd76x_pm.c:582:
+		printk(KERN_INFO "amd76x_pm: irq rate watcher stopped.\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#992: FILE: drivers/acpi/amd76x_pm.c:585:
+
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1002: FILE: drivers/acpi/amd76x_pm.c:595:
+	if(lazy_idle == 0)
+	    lazy_idle = AMD76X_LAZY_IDLE;

ERROR:SPACING: space required before the open parenthesis '('
#1002: FILE: drivers/acpi/amd76x_pm.c:595:
+	if(lazy_idle == 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1004: FILE: drivers/acpi/amd76x_pm.c:597:
+	printk(KERN_INFO "amd76x_pm: lazy_idle = %lu\n", lazy_idle);

ERROR:SPACING: space required before the open parenthesis '('
#1005: FILE: drivers/acpi/amd76x_pm.c:598:
+	if(spin_idle == 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1007: FILE: drivers/acpi/amd76x_pm.c:600:
+	printk(KERN_INFO "amd76x_pm: spin_idle = %lu\n", spin_idle);

ERROR:SPACING: space required before the open parenthesis '('
#1011: FILE: drivers/acpi/amd76x_pm.c:604:
+	while((pdev_sb = pci_find_device(PCI_ANY_ID, PCI_ANY_ID, pdev_sb)) != NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#1012: FILE: drivers/acpi/amd76x_pm.c:605:
+		if(pci_match_id(amd_sb_tbl, pdev_sb) != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pci_match_id"
#1012: FILE: drivers/acpi/amd76x_pm.c:605:
+		if(pci_match_id(amd_sb_tbl, pdev_sb) != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1015: FILE: drivers/acpi/amd76x_pm.c:608:
+	printk(KERN_ERR "amd76x_pm: Could not find southbridge\n");

ERROR:SPACING: space required before the open parenthesis '('
#1022: FILE: drivers/acpi/amd76x_pm.c:615:
+	while((pdev_nb = pci_find_device(PCI_ANY_ID, PCI_ANY_ID, pdev_nb)) != NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#1023: FILE: drivers/acpi/amd76x_pm.c:616:
+		if(pci_match_id(amd_nb_tbl, pdev_nb) != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pci_match_id"
#1023: FILE: drivers/acpi/amd76x_pm.c:616:
+		if(pci_match_id(amd_nb_tbl, pdev_nb) != NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1026: FILE: drivers/acpi/amd76x_pm.c:619:
+	printk(KERN_ERR "amd76x_pm: Could not find northbridge\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1029: FILE: drivers/acpi/amd76x_pm.c:622:
+ found_nb:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1030: FILE: drivers/acpi/amd76x_pm.c:623:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1040: FILE: drivers/acpi/amd76x_pm.c:633:
+^I^Iprintk(KERN_ERR "amd76x_pm: No southbridge to initialize\n");^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1040: FILE: drivers/acpi/amd76x_pm.c:633:
+		printk(KERN_ERR "amd76x_pm: No southbridge to initialize\n");		

ERROR:SPACING: space required before the open parenthesis '('
#1045: FILE: drivers/acpi/amd76x_pm.c:638:
+	if(!pdev_nb) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1046: FILE: drivers/acpi/amd76x_pm.c:639:
+		printk("amd76x_pm: No northbridge found.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1055: FILE: drivers/acpi/amd76x_pm.c:648:
+		printk(KERN_ERR "amd76x_pm: No northbridge to initialize\n");

ERROR:SPACING: space required before the open parenthesis '('
#1059: FILE: drivers/acpi/amd76x_pm.c:652:
+	if(num_online_cpus() == 1) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1061: FILE: drivers/acpi/amd76x_pm.c:654:
+		printk(KERN_ERR "amd76x_pm: UP machine detected. ACPI is your friend.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1064: FILE: drivers/acpi/amd76x_pm.c:657:
+		printk(KERN_ERR "amd76x_pm: Idle function not changed\n");

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1068: FILE: drivers/acpi/amd76x_pm.c:661:
+	for (i = 0; i < NR_CPUS; i++) {

WARNING:MEMORY_BARRIER: memory barrier without comment
#1076: FILE: drivers/acpi/amd76x_pm.c:669:
+	wmb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1077: FILE: drivers/acpi/amd76x_pm.c:670:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1086: FILE: drivers/acpi/amd76x_pm.c:679:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1090: FILE: drivers/acpi/amd76x_pm.c:683:
+	printk(KERN_INFO "amd76x_pm: Version %s loaded.\n", VERSION);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1094: FILE: drivers/acpi/amd76x_pm.c:687:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1100: FILE: drivers/acpi/amd76x_pm.c:693:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1105: FILE: drivers/acpi/amd76x_pm.c:698:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1110: FILE: drivers/acpi/amd76x_pm.c:703:
+	printk(KERN_INFO "amd76x_pm: %u C2 calls\n", C2_cnt);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1111: FILE: drivers/acpi/amd76x_pm.c:704:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1116: FILE: drivers/acpi/amd76x_pm.c:709:
+        flush_scheduled_work();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1116: FILE: drivers/acpi/amd76x_pm.c:709:
+        flush_scheduled_work();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1117: FILE: drivers/acpi/amd76x_pm.c:710:
+        cancel_delayed_work(&work);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1117: FILE: drivers/acpi/amd76x_pm.c:710:
+        cancel_delayed_work(&work);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1118: FILE: drivers/acpi/amd76x_pm.c:711:
+        flush_scheduled_work();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1118: FILE: drivers/acpi/amd76x_pm.c:711:
+        flush_scheduled_work();$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1121: FILE: drivers/acpi/amd76x_pm.c:714:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1129: FILE: include/linux/amd76x_pm.h:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1129: FILE: include/linux/amd76x_pm.h:1:
+/* 

CHECK:BIT_MACRO: Prefer using the BIT macro
#1134: FILE: include/linux/amd76x_pm.h:6:
+#define DCSTOP_EN	(1 << 1)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1135: FILE: include/linux/amd76x_pm.h:7:
+#define STPCLK_EN	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1136: FILE: include/linux/amd76x_pm.h:8:
+#define CPUSTP_EN	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1137: FILE: include/linux/amd76x_pm.h:9:
+#define PCISTP_EN	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1138: FILE: include/linux/amd76x_pm.h:10:
+#define CPUSLP_EN	(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1139: FILE: include/linux/amd76x_pm.h:11:
+#define SUSPND_EN	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1140: FILE: include/linux/amd76x_pm.h:12:
+#define CPURST_EN	(1 << 7)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1144: FILE: include/linux/amd76x_pm.h:16:
+#define POS_REGS^I16^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1149: FILE: include/linux/amd76x_pm.h:21:
+
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#1155: FILE: include/linux/amd76x_pm.h:27:
+#define C3EN		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1156: FILE: include/linux/amd76x_pm.h:28:
+#define ZZ_C3EN		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1157: FILE: include/linux/amd76x_pm.h:29:
+#define CSLP_C3EN	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1158: FILE: include/linux/amd76x_pm.h:30:
+#define CSTP_C3EN	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1162: FILE: include/linux/amd76x_pm.h:34:
+#define CSTP	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1163: FILE: include/linux/amd76x_pm.h:35:
+#define PSTP	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1164: FILE: include/linux/amd76x_pm.h:36:
+#define ASTP	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1165: FILE: include/linux/amd76x_pm.h:37:
+#define DCSTP	(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1166: FILE: include/linux/amd76x_pm.h:38:
+#define CSLP	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1167: FILE: include/linux/amd76x_pm.h:39:
+#define SUSP	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1168: FILE: include/linux/amd76x_pm.h:40:
+#define MSRSM	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1169: FILE: include/linux/amd76x_pm.h:41:
+#define PITRSM	(1 << 15)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1172: FILE: include/linux/amd76x_pm.h:44:
+#define NTPER(x) (x << 3)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1173: FILE: include/linux/amd76x_pm.h:45:
+#define THMINEN(x) (x << 4)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1180: FILE: include/linux/amd76x_pm.h:52:
+#define NTH_RATIO(x) (x << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1181: FILE: include/linux/amd76x_pm.h:53:
+#define NTH_EN (1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1184: FILE: include/linux/amd76x_pm.h:56:
+#define SLP_EN (1 << 13)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1185: FILE: include/linux/amd76x_pm.h:57:
+#define SLP_TYP(x) (x << 10)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155306.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 57 errors, 86 warnings, 55 checks, 1132 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155306.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
