WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
--- linux.orig/drivers/input/serio/i8042.c	2003-11-24 11:30:30.000000000 +0100

WARNING:LINE_SPACING: Missing a blank line after declarations
#75: FILE: drivers/input/serio/i8042.c:787:
+	struct serio_dev *dev = port->dev;
+	if (dev && dev->resume)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#82: FILE: drivers/input/serio/i8042.c:794:
+		printk(KERN_ERR "i8042: resume failed\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#107: FILE: drivers/input/serio/i8042.c:848:
+		int error = sysdev_class_register(&kbc_sysclass);
+		if (!error)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#110: FILE: drivers/input/serio/i8042.c:851:
+			printk(KERN_CRIT "Unable to register i8042 to driver model\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#156: FILE: drivers/input/keyboard/atkbd.c:305:
+	while (!atomic_read(&atkbd->ack) && timeout--) udelay(10);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#156: FILE: drivers/input/keyboard/atkbd.c:305:
+	while (!atomic_read(&atkbd->ack) && timeout--) udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:BRACES: braces {} are not necessary for single statement blocks
#170: FILE: drivers/input/keyboard/atkbd.c:588:
+		if (atkbd_probe(atkbd)) {
+			return -EIO;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: drivers/input/keyboard/atkbd.c:591:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#183: FILE: drivers/input/keyboard/atkbd.c:601:
+		atkbd->dev.ledbit[0] |= BIT(LED_COMPOSE) | BIT(LED_SUSPEND) | BIT(LED_SLEEP) | BIT(LED_MUTE) | BIT(LED_MISC);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:BRACES: Unbalanced braces around else statement
#185: FILE: drivers/input/keyboard/atkbd.c:603:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#194: FILE: drivers/input/keyboard/atkbd.c:612:
+	struct atkbd *atkbd = serio->private;
+	if (atkbd_hwinit(atkbd))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#195: FILE: drivers/input/keyboard/atkbd.c:613:
+		printk(KERN_ERR "Ouch, keyboard no longer there after resume?\n");

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct serio *' should also have an identifier name
#256: FILE: include/linux/serio.h:53:
+	void (*resume)(struct serio *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: drivers/input/power.c:84:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#291: FILE: drivers/acpi/thermal.c:470:
+	printk(KERN_EMERG "Critical temperature reached (%d C), shutting down.\n", tz->temperature);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#303: FILE: arch/i386/kernel/cpu/mtrr/main.c:591:
+#if 0

WARNING:LINE_SPACING: Missing a blank line after declarations
#363: FILE: arch/x86_64/kernel/time.c:650:
+	int error = sysdev_class_register(&rtc_sysclass);
+	if (!error)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#389: FILE: include/linux/suspend.h:49:
+extern int software_suspend(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#407: FILE: include/linux/suspend.h:60:
 }
+#define software_resume()		do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#407: FILE: include/linux/suspend.h:60:
+#define software_resume()		do { } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#413: FILE: include/linux/suspend.h:66:
+extern int freeze_processes(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#414: FILE: include/linux/suspend.h:67:
+extern void thaw_processes(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#416: FILE: include/linux/suspend.h:69:
+extern int pm_prepare_console(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#417: FILE: include/linux/suspend.h:70:
+extern void pm_restore_console(void);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#424: FILE: include/linux/suspend.h:77:
 }
+static inline int freeze_processes(void)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#428: FILE: include/linux/suspend.h:81:
+}
+static inline void thaw_processes(void)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#430: FILE: include/linux/suspend.h:83:
+{
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#431: FILE: include/linux/suspend.h:84:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#569: FILE: kernel/power/swsusp.c:685:
+	int res;
+	if (!software_suspend_enabled)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#587: FILE: kernel/power/swsusp.c:711:
+		if ((res = device_suspend(4))==0)
 		                             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#587: FILE: kernel/power/swsusp.c:711:
+		if ((res = device_suspend(4))==0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: Unbalanced braces around else statement
#596: FILE: kernel/power/swsusp.c:723:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#668: FILE: Documentation/power/swsusp.txt:21:
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ $

WARNING:REPEATED_WORD: Possible repeated word: 'is'
#723: FILE: Documentation/power/swsusp.txt:58:
+You have two ways to use this code. The first one is is with a patched

WARNING:TYPO_SPELLING: 'carefull' may be misspelled - perhaps 'careful'?
#854: FILE: Documentation/power/video.txt:30:
+bios, you'll get hard crash during resume. Be carefull.
                                               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#919: FILE: arch/i386/kernel/time.c:305:
+^Ixtime.tv_nsec = 0; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#988: FILE: drivers/input/keyboard/98kbd.c:228:
+	while (!atomic_read(&kbd98->ack) && timeout--) udelay(10);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#988: FILE: drivers/input/keyboard/98kbd.c:228:
+	while (!atomic_read(&kbd98->ack) && timeout--) udelay(10);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1042: FILE: drivers/input/mouse/psmouse-base.c:209:
+	while (!atomic_read(&psmouse->ack) && timeout--) udelay(10);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1042: FILE: drivers/input/mouse/psmouse-base.c:209:
+	while (!atomic_read(&psmouse->ack) && timeout--) udelay(10);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1055: FILE: drivers/input/mouse/psmouse-base.c:443:
+	else	param[0] = 0;

WARNING:LONG_LINE_COMMENT: line length of 126 exceeds 100 columns
#1093: FILE: drivers/input/mouse/psmouse.h:40:
+	atomic_t ack;	/* This is being accessed without locking, at least make sure we do not run into alignment problems */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1126: FILE: drivers/input/serio/serio.c:128:
+	if ((event = kmalloc(sizeof(struct serio_event), GFP_ATOMIC))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*event)...) over kmalloc(sizeof(struct serio_event)...)
#1126: FILE: drivers/input/serio/serio.c:128:
+	if ((event = kmalloc(sizeof(struct serio_event), GFP_ATOMIC))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000323109.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 17 warnings, 16 checks, 999 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000323109.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
