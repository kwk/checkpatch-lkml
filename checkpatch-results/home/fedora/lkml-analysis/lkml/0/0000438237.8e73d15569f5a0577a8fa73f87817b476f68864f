WARNING:BAD_SIGN_OFF: Use a single space after To:
#31: 
To:      linux-kernel@vger.kernel.org 

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: include/linux/kthread.h:1:
+#ifndef _LINUX_KTHREAD_H $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#84: FILE: include/linux/kthread.h:1:
+#ifndef _LINUX_KTHREAD_H 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: include/linux/kthread.h:2:
+#define _LINUX_KTHREAD_H $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: include/linux/kthread.h:3:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: include/linux/kthread.h:3:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: include/linux/kthread.h:4:
+struct task_struct; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: include/linux/kthread.h:5:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: include/linux/kthread.h:5:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: include/linux/kthread.h:6:
+struct kthread { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: include/linux/kthread.h:7:
+       const char *name; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: include/linux/kthread.h:7:
+       const char *name; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: include/linux/kthread.h:8:
+       struct task_struct *task; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: include/linux/kthread.h:8:
+       struct task_struct *task; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#92: FILE: include/linux/kthread.h:9:
+       struct completion done; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: include/linux/kthread.h:9:
+       struct completion done; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: include/linux/kthread.h:10:
+#define KTH_RUNNING    1 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: include/linux/kthread.h:11:
+#define KTH_SHUTDOWN   2 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: include/linux/kthread.h:12:
+       long state; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: include/linux/kthread.h:12:
+       long state; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: include/linux/kthread.h:13:
+       int (*init)(struct kthread *, void *); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: include/linux/kthread.h:13:
+       int (*init)(struct kthread *, void *); $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kthread *' should also have an identifier name
#96: FILE: include/linux/kthread.h:13:
+       int (*init)(struct kthread *, void *); 

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#96: FILE: include/linux/kthread.h:13:
+       int (*init)(struct kthread *, void *); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: include/linux/kthread.h:14:
+       void (*cleanup)(struct kthread *, void *); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: include/linux/kthread.h:14:
+       void (*cleanup)(struct kthread *, void *); $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kthread *' should also have an identifier name
#97: FILE: include/linux/kthread.h:14:
+       void (*cleanup)(struct kthread *, void *); 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#97: FILE: include/linux/kthread.h:14:
+       void (*cleanup)(struct kthread *, void *); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: include/linux/kthread.h:15:
+       int (*main)(struct kthread *, void *); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: include/linux/kthread.h:15:
+       int (*main)(struct kthread *, void *); $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kthread *' should also have an identifier name
#98: FILE: include/linux/kthread.h:15:
+       int (*main)(struct kthread *, void *); 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#98: FILE: include/linux/kthread.h:15:
+       int (*main)(struct kthread *, void *); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: include/linux/kthread.h:16:
+}; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: include/linux/kthread.h:17:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: include/linux/kthread.h:17:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: include/linux/kthread.h:18:
+extern int kthread_start(struct kthread *, void *); $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#101: FILE: include/linux/kthread.h:18:
+extern int kthread_start(struct kthread *, void *); 

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kthread *' should also have an identifier name
#101: FILE: include/linux/kthread.h:18:
+extern int kthread_start(struct kthread *, void *); 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#101: FILE: include/linux/kthread.h:18:
+extern int kthread_start(struct kthread *, void *); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: include/linux/kthread.h:19:
+extern void kthread_stop(struct kthread *); $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#102: FILE: include/linux/kthread.h:19:
+extern void kthread_stop(struct kthread *); 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kthread *' should also have an identifier name
#102: FILE: include/linux/kthread.h:19:
+extern void kthread_stop(struct kthread *); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: include/linux/kthread.h:20:
+extern int kthread_running(struct kthread *); $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: include/linux/kthread.h:20:
+extern int kthread_running(struct kthread *); 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kthread *' should also have an identifier name
#103: FILE: include/linux/kthread.h:20:
+extern int kthread_running(struct kthread *); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: include/linux/kthread.h:21:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: include/linux/kthread.h:21:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: include/linux/kthread.h:22:
+#endif /* _LINUX_KTHREAD_H */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: kernel/Makefile:13:
+               printk.o kthread.o $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: kernel/Makefile:18:
+           signal.o sys.o kmod.o context.o kthread.o $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: kernel/kthread.c:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#130: FILE: kernel/kthread.c:1:
+/* 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: kernel/kthread.c:2:
+ * Copyright (c) 2002 Christoph Hellwig. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: kernel/kthread.c:3:
+ * All rights resered. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: kernel/kthread.c:4:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: kernel/kthread.c:5:
+ * This program is free software; you can redistribute it and/or modify $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: kernel/kthread.c:6:
+ * it under the terms of the GNU General Public License as published by $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: kernel/kthread.c:7:
+ * the Free Software Foundation; either version 2 of the License, or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#137: FILE: kernel/kthread.c:8:
+ * (at your option) any later version. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: kernel/kthread.c:9:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: kernel/kthread.c:10:
+ * This program is distributed in the hope that it will be useful, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: kernel/kthread.c:11:
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: kernel/kthread.c:12:
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: kernel/kthread.c:13:
+ * GNU General Public License for more details. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: kernel/kthread.c:14:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: kernel/kthread.c:15:
+ * You should have received a copy of the GNU General Public License $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: kernel/kthread.c:16:
+ * along with this program; if not, write to the Free Software $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#145: FILE: kernel/kthread.c:16:
+ * along with this program; if not, write to the Free Software $

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: kernel/kthread.c:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#146: FILE: kernel/kthread.c:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: kernel/kthread.c:18:
+ */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: kernel/kthread.c:19:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: kernel/kthread.c:19:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: kernel/kthread.c:20:
+#include <linux/completion.h> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: kernel/kthread.c:21:
+#include <linux/kernel.h> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: kernel/kthread.c:22:
+#include <linux/kthread.h> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: kernel/kthread.c:23:
+#include <linux/module.h> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: kernel/kthread.c:24:
+#include <linux/types.h> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: kernel/kthread.c:25:
+#include <linux/sched.h> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: kernel/kthread.c:26:
+#include <linux/signal.h> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: kernel/kthread.c:27:
+#include <linux/smp_lock.h> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: kernel/kthread.c:28:
+#include <linux/spinlock.h> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: kernel/kthread.c:29:
+#include <asm/bitops.h> $

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#158: FILE: kernel/kthread.c:29:
+#include <asm/bitops.h> 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: kernel/kthread.c:30:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: kernel/kthread.c:30:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: kernel/kthread.c:31:
+#define KTHREAD_FLAGS \ $

WARNING:WHITESPACE_AFTER_LINE_CONTINUATION: Whitespace after \ makes next lines useless
#160: FILE: kernel/kthread.c:31:
+#define KTHREAD_FLAGS \ 

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#160: FILE: kernel/kthread.c:31:
+#define KTHREAD_FLAGS \ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: kernel/kthread.c:32:
+       (CLONE_FS|CLONE_FILES|CLONE_SIGHAND) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: kernel/kthread.c:32:
+       (CLONE_FS|CLONE_FILES|CLONE_SIGHAND) $

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#161: FILE: kernel/kthread.c:32:
+       (CLONE_FS|CLONE_FILES|CLONE_SIGHAND) 
                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#161: FILE: kernel/kthread.c:32:
+       (CLONE_FS|CLONE_FILES|CLONE_SIGHAND) 
                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: kernel/kthread.c:33:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: kernel/kthread.c:33:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: kernel/kthread.c:34:
+struct kthread_args { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: kernel/kthread.c:35:
+       struct kthread *kth; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: kernel/kthread.c:35:
+       struct kthread *kth; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: kernel/kthread.c:36:
+       void *data; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: kernel/kthread.c:36:
+       void *data; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: kernel/kthread.c:37:
+}; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: kernel/kthread.c:38:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: kernel/kthread.c:38:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: kernel/kthread.c:39:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#168: FILE: kernel/kthread.c:39:
+ 
+ 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: kernel/kthread.c:39:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: kernel/kthread.c:40:
+static int kthread_stopped(struct kthread *kth) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: kernel/kthread.c:41:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: kernel/kthread.c:42:
+       struct task_struct *task = kth->task; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: kernel/kthread.c:42:
+       struct task_struct *task = kth->task; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: kernel/kthread.c:43:
+       unsigned long signr; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: kernel/kthread.c:43:
+       unsigned long signr; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: kernel/kthread.c:44:
+       siginfo_t info; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: kernel/kthread.c:44:
+       siginfo_t info; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: kernel/kthread.c:45:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: kernel/kthread.c:45:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: kernel/kthread.c:46:
+       spin_lock_irq(&task->sigmask_lock); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: kernel/kthread.c:46:
+       spin_lock_irq(&task->sigmask_lock); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: kernel/kthread.c:47:
+       signr = dequeue_signal(&task->blocked, &info); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: kernel/kthread.c:47:
+       signr = dequeue_signal(&task->blocked, &info); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: kernel/kthread.c:48:
+       spin_unlock_irq(&task->sigmask_lock); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: kernel/kthread.c:48:
+       spin_unlock_irq(&task->sigmask_lock); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: kernel/kthread.c:49:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: kernel/kthread.c:49:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: kernel/kthread.c:50:
+       if (signr == SIGKILL && test_bit(KTH_SHUTDOWN, &kth->state)) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: kernel/kthread.c:50:
+       if (signr == SIGKILL && test_bit(KTH_SHUTDOWN, &kth->state)) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#179: FILE: kernel/kthread.c:50:
+       if (signr == SIGKILL && test_bit(KTH_SHUTDOWN, &kth->state)) 
+               return 1; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: kernel/kthread.c:51:
+               return 1; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: kernel/kthread.c:51:
+               return 1; $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: kernel/kthread.c:51:
+               return 1; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: kernel/kthread.c:52:
+       return 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: kernel/kthread.c:52:
+       return 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: kernel/kthread.c:53:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: kernel/kthread.c:54:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: kernel/kthread.c:54:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: kernel/kthread.c:55:
+static int kthread_main(void *p) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: kernel/kthread.c:56:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: kernel/kthread.c:57:
+       struct kthread_args *args = p; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: kernel/kthread.c:57:
+       struct kthread_args *args = p; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: kernel/kthread.c:58:
+       struct kthread *kth = args->kth; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: kernel/kthread.c:58:
+       struct kthread *kth = args->kth; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: kernel/kthread.c:59:
+       void *data = args->data; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: kernel/kthread.c:59:
+       void *data = args->data; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: kernel/kthread.c:60:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: kernel/kthread.c:60:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: kernel/kthread.c:61:
+       lock_kernel(); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: kernel/kthread.c:61:
+       lock_kernel(); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: kernel/kthread.c:62:
+       daemonize(); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: kernel/kthread.c:62:
+       daemonize(); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: kernel/kthread.c:63:
+       reparent_to_init(); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: kernel/kthread.c:63:
+       reparent_to_init(); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: kernel/kthread.c:64:
+       strcpy(current->comm, kth->name); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: kernel/kthread.c:64:
+       strcpy(current->comm, kth->name); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: kernel/kthread.c:65:
+       unlock_kernel(); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: kernel/kthread.c:65:
+       unlock_kernel(); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: kernel/kthread.c:66:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: kernel/kthread.c:66:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: kernel/kthread.c:67:
+       kth->task = current; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: kernel/kthread.c:67:
+       kth->task = current; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: kernel/kthread.c:68:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: kernel/kthread.c:68:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: kernel/kthread.c:69:
+       spin_lock_irq(&current->sigmask_lock); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: kernel/kthread.c:69:
+       spin_lock_irq(&current->sigmask_lock); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: kernel/kthread.c:70:
+       siginitsetinv(&current->blocked, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: kernel/kthread.c:70:
+       siginitsetinv(&current->blocked, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: kernel/kthread.c:71:
+                       sigmask(SIGHUP) | sigmask(SIGKILL) | $

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: kernel/kthread.c:71:
+                       sigmask(SIGHUP) | sigmask(SIGKILL) | $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: kernel/kthread.c:71:
+       siginitsetinv(&current->blocked, 
+                       sigmask(SIGHUP) | sigmask(SIGKILL) | 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: kernel/kthread.c:71:
+                       sigmask(SIGHUP) | sigmask(SIGKILL) | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: kernel/kthread.c:72:
+                       sigmask(SIGSTOP) | sigmask(SIGCONT)); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: kernel/kthread.c:72:
+                       sigmask(SIGSTOP) | sigmask(SIGCONT)); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: kernel/kthread.c:72:
+                       sigmask(SIGSTOP) | sigmask(SIGCONT)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: kernel/kthread.c:73:
+       spin_unlock_irq(&current->sigmask_lock); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: kernel/kthread.c:73:
+       spin_unlock_irq(&current->sigmask_lock); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: kernel/kthread.c:74:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: kernel/kthread.c:74:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: kernel/kthread.c:75:
+       if (kth->init) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: kernel/kthread.c:75:
+       if (kth->init) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#204: FILE: kernel/kthread.c:75:
+       if (kth->init) 
+               kth->init(kth, data); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: kernel/kthread.c:76:
+               kth->init(kth, data); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: kernel/kthread.c:76:
+               kth->init(kth, data); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: kernel/kthread.c:76:
+               kth->init(kth, data); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: kernel/kthread.c:77:
+       complete(&kth->done); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: kernel/kthread.c:77:
+       complete(&kth->done); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: kernel/kthread.c:78:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: kernel/kthread.c:78:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: kernel/kthread.c:79:
+       do { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: kernel/kthread.c:79:
+       do { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#208: FILE: kernel/kthread.c:79:
+       do { 
+               if (kth->main(kth, data) < 0) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: kernel/kthread.c:80:
+               if (kth->main(kth, data) < 0) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: kernel/kthread.c:80:
+               if (kth->main(kth, data) < 0) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: kernel/kthread.c:80:
+               if (kth->main(kth, data) < 0) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#209: FILE: kernel/kthread.c:80:
+               if (kth->main(kth, data) < 0) 
+                       break; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: kernel/kthread.c:81:
+                       break; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: kernel/kthread.c:81:
+                       break; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: kernel/kthread.c:81:
+                       break; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: kernel/kthread.c:82:
+       } while (!kthread_stopped(kth)); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: kernel/kthread.c:82:
+       } while (!kthread_stopped(kth)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: kernel/kthread.c:83:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: kernel/kthread.c:83:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: kernel/kthread.c:84:
+       if (kth->cleanup) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: kernel/kthread.c:84:
+       if (kth->cleanup) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#213: FILE: kernel/kthread.c:84:
+       if (kth->cleanup) 
+               kth->cleanup(kth, data); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#214: FILE: kernel/kthread.c:85:
+               kth->cleanup(kth, data); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: kernel/kthread.c:85:
+               kth->cleanup(kth, data); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: kernel/kthread.c:85:
+               kth->cleanup(kth, data); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: kernel/kthread.c:86:
+       clear_bit(KTH_RUNNING, &kth->state); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: kernel/kthread.c:86:
+       clear_bit(KTH_RUNNING, &kth->state); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: kernel/kthread.c:87:
+       complete(&kth->done); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: kernel/kthread.c:87:
+       complete(&kth->done); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: kernel/kthread.c:88:
+       return 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: kernel/kthread.c:88:
+       return 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: kernel/kthread.c:89:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#219: FILE: kernel/kthread.c:90:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: kernel/kthread.c:90:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: kernel/kthread.c:91:
+/** $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: kernel/kthread.c:92:
+ *     kthread_start    -    start a new kernel thread $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: kernel/kthread.c:93:
+ *     @kth:           kernel thread description $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: kernel/kthread.c:94:
+ *     @data:          opaque data for use with the methods $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: kernel/kthread.c:95:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: kernel/kthread.c:96:
+ *     For off a new kernel thread as described by @kth. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#226: FILE: kernel/kthread.c:97:
+ */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: kernel/kthread.c:98:
+int kthread_start(struct kthread *kth, void *data) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: kernel/kthread.c:99:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: kernel/kthread.c:100:
+       struct kthread_args args; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: kernel/kthread.c:100:
+       struct kthread_args args; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: kernel/kthread.c:101:
+       pid_t pid; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: kernel/kthread.c:101:
+       pid_t pid; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: kernel/kthread.c:102:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: kernel/kthread.c:102:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: kernel/kthread.c:103:
+       if (!kth->name || !kth->main) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: kernel/kthread.c:103:
+       if (!kth->name || !kth->main) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#232: FILE: kernel/kthread.c:103:
+       if (!kth->name || !kth->main) 
+               return -EINVAL; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: kernel/kthread.c:104:
+               return -EINVAL; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: kernel/kthread.c:104:
+               return -EINVAL; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: kernel/kthread.c:104:
+               return -EINVAL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: kernel/kthread.c:105:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: kernel/kthread.c:105:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: kernel/kthread.c:106:
+       args.kth = kth; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: kernel/kthread.c:106:
+       args.kth = kth; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: kernel/kthread.c:107:
+       args.data = data; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: kernel/kthread.c:107:
+       args.data = data; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: kernel/kthread.c:108:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: kernel/kthread.c:108:
+       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: kernel/kthread.c:109:
+       init_completion(&kth->done); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: kernel/kthread.c:109:
+       init_completion(&kth->done); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: kernel/kthread.c:110:
+       if ((pid = kernel_thread(kthread_main, &args, KTHREAD_FLAGS)) < 0) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: kernel/kthread.c:110:
+       if ((pid = kernel_thread(kthread_main, &args, KTHREAD_FLAGS)) < 0) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#239: FILE: kernel/kthread.c:110:
+       if ((pid = kernel_thread(kthread_main, &args, KTHREAD_FLAGS)) < 0) 
+               return pid; 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#239: FILE: kernel/kthread.c:110:
+       if ((pid = kernel_thread(kthread_main, &args, KTHREAD_FLAGS)) < 0) 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: kernel/kthread.c:111:
+               return pid; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: kernel/kthread.c:111:
+               return pid; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: kernel/kthread.c:111:
+               return pid; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: kernel/kthread.c:112:
+       set_bit(KTH_RUNNING, &kth->state); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: kernel/kthread.c:112:
+       set_bit(KTH_RUNNING, &kth->state); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: kernel/kthread.c:113:
+       wait_for_completion(&kth->done); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: kernel/kthread.c:113:
+       wait_for_completion(&kth->done); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: kernel/kthread.c:114:
+       return 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: kernel/kthread.c:114:
+       return 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: kernel/kthread.c:115:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: kernel/kthread.c:116:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: kernel/kthread.c:116:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: kernel/kthread.c:117:
+/** $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: kernel/kthread.c:118:
+ *     kthread_stop    -    stop a kernel thread $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: kernel/kthread.c:119:
+ *     @kth:           kernel thread description $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#249: FILE: kernel/kthread.c:120:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: kernel/kthread.c:121:
+ *     Stop the kernel thread described by @kth. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: kernel/kthread.c:122:
+ */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#252: FILE: kernel/kthread.c:123:
+void kthread_stop(struct kthread *kth) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: kernel/kthread.c:124:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: kernel/kthread.c:125:
+       if (kth->task) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: kernel/kthread.c:125:
+       if (kth->task) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#254: FILE: kernel/kthread.c:125:
+       if (kth->task) { 
+               init_completion(&kth->done); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: kernel/kthread.c:126:
+               init_completion(&kth->done); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: kernel/kthread.c:126:
+               init_completion(&kth->done); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: kernel/kthread.c:126:
+               init_completion(&kth->done); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: kernel/kthread.c:127:
+               set_bit(KTH_SHUTDOWN, &kth->state); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: kernel/kthread.c:127:
+               set_bit(KTH_SHUTDOWN, &kth->state); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: kernel/kthread.c:127:
+               set_bit(KTH_SHUTDOWN, &kth->state); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: kernel/kthread.c:128:
+               send_sig(SIGKILL, kth->task, 1); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: kernel/kthread.c:128:
+               send_sig(SIGKILL, kth->task, 1); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: kernel/kthread.c:128:
+               send_sig(SIGKILL, kth->task, 1); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: kernel/kthread.c:129:
+               wait_for_completion(&kth->done); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: kernel/kthread.c:129:
+               wait_for_completion(&kth->done); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: kernel/kthread.c:129:
+               wait_for_completion(&kth->done); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: kernel/kthread.c:130:
+               kth->task = NULL; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: kernel/kthread.c:130:
+               kth->task = NULL; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: kernel/kthread.c:130:
+               kth->task = NULL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#260: FILE: kernel/kthread.c:131:
+               clear_bit(KTH_SHUTDOWN, &kth->state); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: kernel/kthread.c:131:
+               clear_bit(KTH_SHUTDOWN, &kth->state); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: kernel/kthread.c:131:
+               clear_bit(KTH_SHUTDOWN, &kth->state); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: kernel/kthread.c:132:
+       } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: kernel/kthread.c:132:
+       } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#262: FILE: kernel/kthread.c:133:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: kernel/kthread.c:134:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: kernel/kthread.c:134:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#264: FILE: kernel/kthread.c:135:
+/** $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: kernel/kthread.c:136:
+ *     kthread_running    -    check whether a kernel thread is running $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: kernel/kthread.c:137:
+ *     @kth:           kernel thread description $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: kernel/kthread.c:138:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: kernel/kthread.c:139:
+ *     Checks whether the kernel thread described by @kth is running. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: kernel/kthread.c:140:
+ */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: kernel/kthread.c:141:
+int kthread_running(struct kthread *kth) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: kernel/kthread.c:142:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: kernel/kthread.c:143:
+       return test_bit(KTH_RUNNING, &kth->state); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: kernel/kthread.c:143:
+       return test_bit(KTH_RUNNING, &kth->state); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: kernel/kthread.c:144:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: kernel/kthread.c:145:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: kernel/kthread.c:145:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: kernel/kthread.c:146:
+EXPORT_SYMBOL(kthread_start); $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#275: FILE: kernel/kthread.c:146:
+EXPORT_SYMBOL(kthread_start); 

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: kernel/kthread.c:147:
+EXPORT_SYMBOL(kthread_stop); $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#276: FILE: kernel/kthread.c:147:
+EXPORT_SYMBOL(kthread_stop); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: kernel/kthread.c:148:
+EXPORT_SYMBOL(kthread_running); $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#277: FILE: kernel/kthread.c:148:
+EXPORT_SYMBOL(kthread_running); 

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000438237.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 191 errors, 117 warnings, 7 checks, 184 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000438237.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
