WARNING:TYPO_SPELLING: 'wierd' may be misspelled - perhaps 'weird'?
#40: 
I'll get some wierd effect for a few seconds, either static, or the track
              ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'attatch' may be misspelled - perhaps 'attach'?
#44: 
I cut the core-looking ALSA changes out of test3, and attatch them here.
                                                      ^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#83: 
Received: from source ([67.72.78.212]) by exprod5mx38.postini.com ([12.158.34.245]) with SMTP;

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#133: 
# This patch includes the following deltas:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#134: 
#	           ChangeSet	1.1595.3.1 -> 1.1595.3.2

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#135: 
#	sound/pci/emu10k1/emu10k1.c	1.11    -> 1.12   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#136: 
#	Documentation/sound/alsa/ALSA-Configuration.txt	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#137: 
#	sound/core/seq/seq_clientmgr.c	1.18    -> 1.19   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#138: 
#	sound/core/rawmidi.c	1.26    -> 1.27   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#139: 
#	include/sound/emu10k1.h	1.16    -> 1.17   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#140: 
#	sound/core/oss/pcm_plugin.c	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#141: 
#	sound/core/oss/plugin_ops.h	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#142: 
#	sound/core/pcm_native.c	1.36    -> 1.37   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#143: 
#	include/sound/version.h	1.61    -> 1.62   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#144: 
#	sound/core/pcm_lib.c	1.22    -> 1.23   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#145: 
#	sound/core/oss/rate.c	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#146: 
#	sound/pci/emu10k1/emufx.c	1.23    -> 1.24   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#147: 
#	include/sound/asequencer.h	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#148: 
#	sound/pci/maestro3.c	1.23    -> 1.24   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#149: 
#	sound/pci/intel8x0.c	1.36    -> 1.37   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#150: 
#	  sound/core/timer.c	1.19    -> 1.20   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#151: 
#	include/sound/asound.h	1.15    -> 1.16   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#152: 
#	  sound/core/sound.c	1.30    -> 1.31   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#153: 
#	sound/core/pcm_memory.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#154: 
#	sound/core/seq/seq_ports.h	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#155: 
#	sound/core/seq/seq_ports.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#156: 
#	include/sound/pcm_oss.h	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#157: 
#	sound/pci/emu10k1/irq.c	1.7     -> 1.8    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#158: 
#	sound/usb/usbaudio.c	1.40    -> 1.41   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#159: 
#	sound/synth/emux/soundfont.c	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#160: 
#	sound/core/oss/pcm_plugin.h	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#161: 
#	 sound/isa/sb/sb16.c	1.18    -> 1.19   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#162: 
#	sound/core/rtctimer.c	1.14    -> 1.15   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#163: 
#	 sound/pci/via82xx.c	1.33    -> 1.34   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#164: 
#	sound/pci/emu10k1/emumixer.c	1.8     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#165: 
#	sound/core/oss/pcm_oss.c	1.25    -> 1.26   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#166: 
#	sound/drivers/dummy.c	1.17    -> 1.18   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#167: 
#	sound/pci/ac97/ac97_patch.c	1.15    -> 1.16   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#168: 
#	sound/core/oss/route.c	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#169: 
#	sound/pci/emu10k1/emu10k1_main.c	1.13    -> 1.14   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#170: 
#	sound/core/memalloc.c	1.9     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#171: 
#	include/sound/soundfont.h	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#172: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#215: 
--- a/Documentation/sound/alsa/ALSA-Configuration.txt	Thu Jul 31 23:16:39 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#235: FILE: include/sound/asequencer.h:32:
+#define SNDRV_SEQ_VERSION SNDRV_PROTOCOL_VERSION (1, 0, 1)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#235: FILE: include/sound/asequencer.h:32:
+#define SNDRV_SEQ_VERSION SNDRV_PROTOCOL_VERSION (1, 0, 1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#243: FILE: include/sound/asequencer.h:607:
+#define SNDRV_SEQ_PORT_FLG_TIMESTAMP	(1<<1)
                                     	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#243: FILE: include/sound/asequencer.h:607:
+#define SNDRV_SEQ_PORT_FLG_TIMESTAMP	(1<<1)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#244: FILE: include/sound/asequencer.h:608:
+#define SNDRV_SEQ_PORT_FLG_TIME_REAL	(1<<1)
                                     	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#244: FILE: include/sound/asequencer.h:608:
+#define SNDRV_SEQ_PORT_FLG_TIME_REAL	(1<<1)

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#331: FILE: sound/core/memalloc.c:955:
+	static unsigned __initdata nr_dev = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:MISPLACED_INIT: __initdata should be placed after nr_dev
#331: FILE: sound/core/memalloc.c:955:
+	static unsigned __initdata nr_dev = 0;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:SPACING: space required after that ',' (ctx:VxO)
#335: FILE: sound/core/memalloc.c:959:
+	(void)(get_option(&str,&enable[nr_dev]) == 2);
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#335: FILE: sound/core/memalloc.c:959:
+	(void)(get_option(&str,&enable[nr_dev]) == 2);
 	                       ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#340: FILE: sound/core/memalloc.c:964:
+__setup("snd-page-alloc=", snd_mem_setup);

WARNING:LINE_SPACING: Missing a blank line after declarations
#362: FILE: sound/core/oss/pcm_oss.c:463:
+		snd_pcm_uframes_t frames;
+		frames = runtime->period_size + 16;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!substream->oss.setup"
#386: FILE: sound/core/oss/pcm_oss.c:815:
+			if (substream->oss.setup == NULL || !substream->oss.setup->wholefrag ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#388: FILE: sound/core/oss/pcm_oss.c:817:
+				tmp = snd_pcm_oss_write2(substream, runtime->oss.buffer, runtime->oss.buffer_used, 1);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#433: FILE: sound/core/oss/pcm_oss.c:2399:
+	static unsigned __initdata nr_dev = 0;

WARNING:MISPLACED_INIT: __initdata should be placed after nr_dev
#433: FILE: sound/core/oss/pcm_oss.c:2399:
+	static unsigned __initdata nr_dev = 0;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#437: FILE: sound/core/oss/pcm_oss.c:2403:
+	(void)(get_option(&str,&dsp_map[nr_dev]) == 2 &&
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#437: FILE: sound/core/oss/pcm_oss.c:2403:
+	(void)(get_option(&str,&dsp_map[nr_dev]) == 2 &&
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#438: FILE: sound/core/oss/pcm_oss.c:2404:
+	       get_option(&str,&adsp_map[nr_dev]) == 2);
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#438: FILE: sound/core/oss/pcm_oss.c:2404:
+	       get_option(&str,&adsp_map[nr_dev]) == 2);
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#439: FILE: sound/core/oss/pcm_oss.c:2405:
+	(void)(get_option(&str,&nonblock_open) == 2);
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#439: FILE: sound/core/oss/pcm_oss.c:2405:
+	(void)(get_option(&str,&nonblock_open) == 2);
 	                       ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#444: FILE: sound/core/oss/pcm_oss.c:2410:
+__setup("snd-pcm-oss=", alsa_pcm_oss_setup);

WARNING:LINE_SPACING: Missing a blank line after declarations
#462: FILE: sound/core/oss/pcm_plugin.c:67:
+	unsigned int high = (src_rate * 105) / 100;
+	return dst_rate >= low && dst_rate <= high;

WARNING:INDENTED_LABEL: labels should not be indented
#582: FILE: sound/core/oss/rate.c:116:
+				after_get:

CHECK:SPACING: No space is necessary after a cast
#617: FILE: sound/core/pcm_lib.c:63:
+		if (noise_dist >= (snd_pcm_sframes_t) runtime->silence_threshold)

ERROR:SPACING: space required after that ',' (ctx:VxO)
#662: FILE: sound/core/pcm_memory.c:579:
+	(void)(get_option(&str,&preallocate_dma) == 2 &&
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#662: FILE: sound/core/pcm_memory.c:579:
+	(void)(get_option(&str,&preallocate_dma) == 2 &&
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#663: FILE: sound/core/pcm_memory.c:580:
+	       get_option(&str,&maximum_substreams) == 2);
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#663: FILE: sound/core/pcm_memory.c:580:
+	       get_option(&str,&maximum_substreams) == 2);
 	                       ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#667: FILE: sound/core/pcm_memory.c:584:
+__setup("snd-pcm=", alsa_pcm_setup);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#705: FILE: sound/core/rawmidi.c:1639:
+	static unsigned __initdata nr_dev = 0;

WARNING:MISPLACED_INIT: __initdata should be placed after nr_dev
#705: FILE: sound/core/rawmidi.c:1639:
+	static unsigned __initdata nr_dev = 0;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#709: FILE: sound/core/rawmidi.c:1643:
+	(void)(get_option(&str,&midi_map[nr_dev]) == 2 &&
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#709: FILE: sound/core/rawmidi.c:1643:
+	(void)(get_option(&str,&midi_map[nr_dev]) == 2 &&
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#710: FILE: sound/core/rawmidi.c:1644:
+	       get_option(&str,&amidi_map[nr_dev]) == 2);
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#710: FILE: sound/core/rawmidi.c:1644:
+	       get_option(&str,&amidi_map[nr_dev]) == 2);
 	                       ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#715: FILE: sound/core/rawmidi.c:1649:
+__setup("snd-rawmidi=", alsa_rawmidi_setup);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#744: FILE: sound/core/rtctimer.c:190:
+	(void)(get_option(&str,&rtctimer_freq) == 2);
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#744: FILE: sound/core/rtctimer.c:190:
+	(void)(get_option(&str,&rtctimer_freq) == 2);
 	                       ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#748: FILE: sound/core/rtctimer.c:194:
+__setup("snd-rtctimer=", rtctimer_setup);

WARNING:TYPO_SPELLING: 'curren' may be misspelled - perhaps 'current'?
#759: FILE: sound/core/seq/seq_clientmgr.c:524:
+ * rewrite the time-stamp of the event record with the curren time
                                                        ^^^^^^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#768: FILE: sound/core/seq/seq_clientmgr.c:533:
+	if (! q)
 	    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#783: FILE: sound/core/seq/seq_clientmgr.c:548:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxO)
#896: FILE: sound/core/sound.c:398:
+	(void)(get_option(&str,&major) == 2 &&
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#896: FILE: sound/core/sound.c:398:
+	(void)(get_option(&str,&major) == 2 &&
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#897: FILE: sound/core/sound.c:399:
+	       get_option(&str,&cards_limit) == 2);
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#897: FILE: sound/core/sound.c:399:
+	       get_option(&str,&cards_limit) == 2);
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#899: FILE: sound/core/sound.c:401:
+	(void)(get_option(&str,&device_mode) == 2);
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#899: FILE: sound/core/sound.c:401:
+	(void)(get_option(&str,&device_mode) == 2);
 	                       ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#904: FILE: sound/core/sound.c:406:
+__setup("snd=", alsa_sound_setup);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#933: FILE: sound/core/timer.c:1814:
+	(void)(get_option(&str,&timer_limit) == 2);
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#933: FILE: sound/core/timer.c:1814:
+	(void)(get_option(&str,&timer_limit) == 2);
 	                       ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#937: FILE: sound/core/timer.c:1818:
+__setup("snd-timer=", alsa_timer_setup);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#949: FILE: sound/drivers/dummy.c:72:
+#if 0 /* simple AC97 bridge (intel8x0) with 48kHz AC97 only codec */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#966: FILE: sound/drivers/dummy.c:90:
+#define USE_RATE		SNDRV_PCM_RATE_CONTINUOUS | SNDRV_PCM_RATE_8000_48000

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1009: FILE: sound/isa/sb/sb16.c:356:
+        $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#1009: FILE: sound/isa/sb/sb16.c:356:
+        $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1009: FILE: sound/isa/sb/sb16.c:356:
+        $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!acard"
#1010: FILE: sound/isa/sb/sb16.c:357:
+	if (acard == NULL)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1053: FILE: sound/pci/ac97/ac97_patch.c:660:
+static int patch_ad1885_specific(ac97_t * ac97)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#1057: FILE: sound/pci/ac97/ac97_patch.c:664:
+	if ((err = patch_build_controls(ac97, snd_ac97_controls_ad1885, ARRAY_SIZE(snd_ac97_controls_ad1885))) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1057: FILE: sound/pci/ac97/ac97_patch.c:664:
+	if ((err = patch_build_controls(ac97, snd_ac97_controls_ad1885, ARRAY_SIZE(snd_ac97_controls_ad1885))) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:CONST_STRUCT: struct snd_ac97_build_ops should normally be const
#1062: FILE: sound/pci/ac97/ac97_patch.c:669:
+static struct snd_ac97_build_ops patch_ad1885_build_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1090: FILE: sound/pci/emu10k1/emu10k1.c:138:
+	if ((err = snd_emu10k1_mixer(emu)) < 0) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1105: FILE: sound/pci/emu10k1/emu10k1_main.c:679:
+	}
+	else if (emu->revision == 4 && emu->serial == 0x10051102) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1119: FILE: sound/pci/emu10k1/emufx.c:1239:
 static int __devinit _snd_emu10k1_audigy_init_efx(emu10k1_t *emu)

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#1124: FILE: sound/pci/emu10k1/emufx.c:1243:
+	const int capture = playback + (SND_EMU10K1_PLAYBACK_CHANNELS * 2); /* we reserve 10 voices */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 165 exceeds 100 columns
#1157: FILE: sound/pci/emu10k1/emufx.c:1501:
+		A_OP(icode, &ptr, iMAC0, A_GPR(playback+0+SND_EMU10K1_PLAYBACK_CHANNELS), A_C_00000000, A_GPR(gpr), A_GPR(playback+0+SND_EMU10K1_PLAYBACK_CHANNELS));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1157: FILE: sound/pci/emu10k1/emufx.c:1501:
+		A_OP(icode, &ptr, iMAC0, A_GPR(playback+0+SND_EMU10K1_PLAYBACK_CHANNELS), A_C_00000000, A_GPR(gpr), A_GPR(playback+0+SND_EMU10K1_PLAYBACK_CHANNELS));
 		                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1157: FILE: sound/pci/emu10k1/emufx.c:1501:
+		A_OP(icode, &ptr, iMAC0, A_GPR(playback+0+SND_EMU10K1_PLAYBACK_CHANNELS), A_C_00000000, A_GPR(gpr), A_GPR(playback+0+SND_EMU10K1_PLAYBACK_CHANNELS));
 		                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1157: FILE: sound/pci/emu10k1/emufx.c:1501:
+		A_OP(icode, &ptr, iMAC0, A_GPR(playback+0+SND_EMU10K1_PLAYBACK_CHANNELS), A_C_00000000, A_GPR(gpr), A_GPR(playback+0+SND_EMU10K1_PLAYBACK_CHANNELS));
 		                                                                                                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1157: FILE: sound/pci/emu10k1/emufx.c:1501:
+		A_OP(icode, &ptr, iMAC0, A_GPR(playback+0+SND_EMU10K1_PLAYBACK_CHANNELS), A_C_00000000, A_GPR(gpr), A_GPR(playback+0+SND_EMU10K1_PLAYBACK_CHANNELS));
 		                                                                                                                    ^

CHECK:CAMELCASE: Avoid CamelCase: <iMAC0>
#1157: FILE: sound/pci/emu10k1/emufx.c:1501:
+		A_OP(icode, &ptr, iMAC0, A_GPR(playback+0+SND_EMU10K1_PLAYBACK_CHANNELS), A_C_00000000, A_GPR(gpr), A_GPR(playback+0+SND_EMU10K1_PLAYBACK_CHANNELS));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LONG_LINE: line length of 167 exceeds 100 columns
#1158: FILE: sound/pci/emu10k1/emufx.c:1502:
+		A_OP(icode, &ptr, iMAC0, A_GPR(playback+1+SND_EMU10K1_PLAYBACK_CHANNELS), A_C_00000000, A_GPR(gpr+1), A_GPR(playback+1+SND_EMU10K1_PLAYBACK_CHANNELS));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1158: FILE: sound/pci/emu10k1/emufx.c:1502:
+		A_OP(icode, &ptr, iMAC0, A_GPR(playback+1+SND_EMU10K1_PLAYBACK_CHANNELS), A_C_00000000, A_GPR(gpr+1), A_GPR(playback+1+SND_EMU10K1_PLAYBACK_CHANNELS));
 		                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1158: FILE: sound/pci/emu10k1/emufx.c:1502:
+		A_OP(icode, &ptr, iMAC0, A_GPR(playback+1+SND_EMU10K1_PLAYBACK_CHANNELS), A_C_00000000, A_GPR(gpr+1), A_GPR(playback+1+SND_EMU10K1_PLAYBACK_CHANNELS));
 		                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1158: FILE: sound/pci/emu10k1/emufx.c:1502:
+		A_OP(icode, &ptr, iMAC0, A_GPR(playback+1+SND_EMU10K1_PLAYBACK_CHANNELS), A_C_00000000, A_GPR(gpr+1), A_GPR(playback+1+SND_EMU10K1_PLAYBACK_CHANNELS));
 		                                                                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1158: FILE: sound/pci/emu10k1/emufx.c:1502:
+		A_OP(icode, &ptr, iMAC0, A_GPR(playback+1+SND_EMU10K1_PLAYBACK_CHANNELS), A_C_00000000, A_GPR(gpr+1), A_GPR(playback+1+SND_EMU10K1_PLAYBACK_CHANNELS));
 		                                                                                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1158: FILE: sound/pci/emu10k1/emufx.c:1502:
+		A_OP(icode, &ptr, iMAC0, A_GPR(playback+1+SND_EMU10K1_PLAYBACK_CHANNELS), A_C_00000000, A_GPR(gpr+1), A_GPR(playback+1+SND_EMU10K1_PLAYBACK_CHANNELS));
 		                                                                                                                      ^

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1159: FILE: sound/pci/emu10k1/emufx.c:1503:
+		snd_emu10k1_init_stereo_control(&controls[nctl++], "Wave Master Playback Volume", gpr, 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1187: FILE: sound/pci/emu10k1/emumixer.c:431:
+	snd_ctl_elem_id_t id;
+	memset(&id, 0, sizeof(id));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1196: FILE: sound/pci/emu10k1/emumixer.c:440:
+	snd_ctl_elem_id_t sid;
+	memset(&sid, 0, sizeof(sid));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1205: FILE: sound/pci/emu10k1/emumixer.c:449:
+	snd_kcontrol_t *kctl = ctl_find(card, src);
+	if (kctl) {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1212: FILE: sound/pci/emu10k1/emumixer.c:456:
 int __devinit snd_emu10k1_mixer(emu10k1_t *emu)

WARNING:TYPO_SPELLING: 'intiailize' may be misspelled - perhaps 'initialize'?
#1263: FILE: sound/pci/emu10k1/emumixer.c:513:
+	/* intiailize the routing and volume table for each pcm playback stream */
 	   ^^^^^^^^^^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1279: FILE: sound/pci/emu10k1/emumixer.c:533:
+	if (! emu->APS) { /* FIXME: APS has these controls? */
 	    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1281: FILE: sound/pci/emu10k1/emumixer.c:535:
+		if ((kctl = snd_ctl_new1(&snd_emu10k1_spdif_mask_control, emu)) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1283: FILE: sound/pci/emu10k1/emumixer.c:537:
+		if ((err = snd_ctl_add(card, kctl)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1285: FILE: sound/pci/emu10k1/emumixer.c:539:
+		if ((kctl = snd_ctl_new1(&snd_emu10k1_spdif_control, emu)) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1287: FILE: sound/pci/emu10k1/emumixer.c:541:
+		if ((err = snd_ctl_add(card, kctl)))

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1297: FILE: sound/pci/emu10k1/emumixer.c:550:
+	} else if (! emu->APS) {
 	           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1352: FILE: sound/pci/emu10k1/irq.c:137:
+			unsigned int bits;
+			snd_printk(KERN_ERR "emu10k1: unhandled interrupt: 0x%08x\n", status);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1461: FILE: sound/synth/emux/soundfont.c:69:
+	if (nonblock) {
[...]
+	} else 
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1464: FILE: sound/synth/emux/soundfont.c:72:
+^I} else $

CHECK:BRACES: Unbalanced braces around else statement
#1464: FILE: sound/synth/emux/soundfont.c:72:
+	} else 

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#1503: FILE: sound/usb/usbaudio.c:2302:
+		if (dev->descriptor.idVendor == 0x0763 &&

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#1504: FILE: sound/usb/usbaudio.c:2303:
+		    dev->descriptor.idProduct == 0x2003) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000316328.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 46 errors, 67 warnings, 29 checks, 1107 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000316328.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
