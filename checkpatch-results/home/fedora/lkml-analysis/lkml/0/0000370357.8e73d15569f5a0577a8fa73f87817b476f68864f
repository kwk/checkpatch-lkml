WARNING:TYPO_SPELLING: 'couldnt' may be misspelled - perhaps 'couldn't'?
#40: 
>life in peace ? There is certainly no reason we couldnt make it more
                                                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#101: FILE: drivers/isa/isa-bus.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: drivers/isa/isa-bus.c:5:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#116: FILE: drivers/isa/isa-bus.c:16:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#118: FILE: drivers/isa/isa-bus.c:18:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#129: FILE: drivers/isa/isa-bus.c:29:
+	const struct isa_device_id *iids = idrv->id_table;
+	while (strlen (iids->id)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#129: FILE: drivers/isa/isa-bus.c:29:
+	while (strlen (iids->id)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#130: FILE: drivers/isa/isa-bus.c:30:
+		if (!strcmp(iids->id, idev->id.id)) {
+			return 1;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: drivers/isa/isa-bus.c:46:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#148: FILE: drivers/isa/isa-bus.c:48:
+	if ((r = driver_register(&idrv->driver)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#162: FILE: drivers/isa/isa-bus.c:62:
+	struct isa_device *idev;
+	if (!(idev = kmalloc(sizeof (*idev), GFP_KERNEL)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#162: FILE: drivers/isa/isa-bus.c:62:
+	if (!(idev = kmalloc(sizeof (*idev), GFP_KERNEL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#162: FILE: drivers/isa/isa-bus.c:62:
+	if (!(idev = kmalloc(sizeof (*idev), GFP_KERNEL)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: drivers/isa/isa-bus.c:64:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#165: FILE: drivers/isa/isa-bus.c:65:
+	memset(idev, 0, sizeof (*idev));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: drivers/isa/isa-bus.c:66:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: drivers/isa/isa-bus.c:69:
+^I$

ERROR:SPACING: space required before the open brace '{'
#177: FILE: drivers/isa/isa-bus.c:77:
+	if (device_register(&idev->dev)){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#177: FILE: drivers/isa/isa-bus.c:77:
+	if (device_register(&idev->dev)){
+		return -1;
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#186: FILE: drivers/isa/isa-bus.c:86:
+	int r;
+	if ((r = device_register(&isa_root_dev)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#186: FILE: drivers/isa/isa-bus.c:86:
+	if ((r = device_register(&isa_root_dev)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#188: FILE: drivers/isa/isa-bus.c:88:
+	if ((r = bus_register(&isa_bus_type)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#190: FILE: drivers/isa/isa-bus.c:90:
+	printk(KERN_INFO "ISA bus registered\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#194: FILE: drivers/isa/isa-bus.c:94:
+postcore_initcall (isa_init);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#196: FILE: drivers/isa/isa-bus.c:96:
+EXPORT_SYMBOL (isa_bus_type);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#196: FILE: drivers/isa/isa-bus.c:96:
+EXPORT_SYMBOL (isa_bus_type);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#197: FILE: drivers/isa/isa-bus.c:97:
+EXPORT_SYMBOL (isa_device_register);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#197: FILE: drivers/isa/isa-bus.c:97:
+EXPORT_SYMBOL (isa_device_register);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#198: FILE: drivers/isa/isa-bus.c:98:
+EXPORT_SYMBOL (isa_driver_register);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#198: FILE: drivers/isa/isa-bus.c:98:
+EXPORT_SYMBOL (isa_driver_register);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#199: FILE: drivers/isa/isa-bus.c:99:
+EXPORT_SYMBOL (isa_driver_unregister);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#199: FILE: drivers/isa/isa-bus.c:99:
+EXPORT_SYMBOL (isa_driver_unregister);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: drivers/net/ne.c:33:
+    Jeff Muizelaar^I: changed init code to act more probe like $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#302: FILE: drivers/net/ne.c:144:
+^I.id_table ^I= ne_pnp_table,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#322: FILE: drivers/net/ne.c:164:
+static int ne_create(struct net_device **ndev, unsigned long base_addr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: drivers/net/ne.c:165:
+static int ne_create(struct net_device **ndev, unsigned long base_addr, 
+		unsigned long irq, int bad);

WARNING:LINE_SPACING: Missing a blank line after declarations
#354: FILE: drivers/net/ne.c:206:
+	int i;
+	for (i = 0; netcard_portlist[i] != 0; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#370: FILE: drivers/net/ne.c:219:
+	int err;
+	printk(KERN_INFO "ne.c: PnP reports %s at i/o %#lx, irq %ld\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#370: FILE: drivers/net/ne.c:219:
+	printk(KERN_INFO "ne.c: PnP reports %s at i/o %#lx, irq %ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: drivers/net/ne.c:220:
+	printk(KERN_INFO "ne.c: PnP reports %s at i/o %#lx, irq %ld\n",
+			pdev->dev.name, pnp_port_start(idev, 0), pnp_irq(pdev, 0));

ERROR:SPACING: space required before the open parenthesis '('
#373: FILE: drivers/net/ne.c:222:
+	if(ndev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: drivers/net/ne.c:229:
+^Istruct net_device *dev = pnp_get_drvdata(pdev);^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#383: FILE: drivers/net/ne.c:230:
+	struct net_device *dev = pnp_get_drvdata(pdev);	
+	ne_remove(dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#425: FILE: drivers/net/ne.c:239:
+	int err;
+	idev = to_isa_device(dev);

ERROR:SPACING: space required before the open brace '{'
#427: FILE: drivers/net/ne.c:241:
+	if(!err){

ERROR:SPACING: space required before the open parenthesis '('
#427: FILE: drivers/net/ne.c:241:
+	if(!err){

WARNING:LINE_SPACING: Missing a blank line after declarations
#440: FILE: drivers/net/ne.c:253:
+	struct net_device *ndev;
+	idev = to_isa_device(dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#456: FILE: drivers/net/ne.c:261:
+^I$

ERROR:SPACING: space required before the open brace '{'
#457: FILE: drivers/net/ne.c:262:
+	if (!(*ndev = alloc_etherdev(0)) ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#457: FILE: drivers/net/ne.c:262:
+	if (!(*ndev = alloc_etherdev(0)) ){

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#457: FILE: drivers/net/ne.c:262:
+	if (!(*ndev = alloc_etherdev(0)) ){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#461: FILE: drivers/net/ne.c:266:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#465: FILE: drivers/net/ne.c:270:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#467: FILE: drivers/net/ne.c:272:
+		printk(KERN_ERR "ne.c: Probe at %#lx failed\n", (*ndev)->base_addr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: drivers/net/ne.c:276:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#472: FILE: drivers/net/ne.c:277:
+	if ( (err = register_netdev(*ndev)) != 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#472: FILE: drivers/net/ne.c:277:
+	if ( (err = register_netdev(*ndev)) != 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#474: FILE: drivers/net/ne.c:279:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#476: FILE: drivers/net/ne.c:281:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#497: FILE: drivers/net/ne.c:302:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#500: FILE: drivers/net/ne.c:305:
+	int reg0, ret=0;
 	             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#513: FILE: drivers/net/ne.c:334:
+		printk(KERN_INFO "%s", version);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#524: FILE: drivers/net/ne.c:340:
+^I   without having to recompile. Specifying a bad card will cause $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#525: FILE: drivers/net/ne.c:341:
+	   the driver to skip these parts of the probe. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#534: FILE: drivers/net/ne.c:354:
+				printk(" (warning: no reset ack)\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#542: FILE: drivers/net/ne.c:362:
+			printk("\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#544: FILE: drivers/net/ne.c:364:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#549: FILE: drivers/net/ne.c:369:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#549: FILE: drivers/net/ne.c:369:
 
+	

CHECK:CAMELCASE: Avoid CamelCase: <neX000>
#562: FILE: drivers/net/ne.c:382:
+	int neX000, ctron, copam;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_SPACING: Missing a blank line after declarations
#564: FILE: drivers/net/ne.c:384:
+	int ret;
+	if(ne_detect(ioaddr, dev->irq, bad_card))

ERROR:SPACING: space required before the open parenthesis '('
#564: FILE: drivers/net/ne.c:384:
+	if(ne_detect(ioaddr, dev->irq, bad_card))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#610: FILE: drivers/net/ne.c:835:
+#ifdef CONFIG_PNP^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#612: FILE: drivers/net/ne.c:837:
+	if (err < 0) {
+		goto pnp_fail;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#622: FILE: drivers/net/ne.c:847:
+^I^I^Ielse $

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#623: FILE: drivers/net/ne.c:848:
+				printk(KERN_WARNING "ne.c: No NE*000 card found at i/o = %#x\n", io[i]);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#623: FILE: drivers/net/ne.c:848:
+				printk(KERN_WARNING "ne.c: No NE*000 card found at i/o = %#x\n", io[i]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#624: FILE: drivers/net/ne.c:849:
+^I^I^I^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#634: FILE: drivers/net/ne.c:854:
+	if (err < 0) {
+		goto isa_fail;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#637: FILE: drivers/net/ne.c:857:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#640: FILE: drivers/net/ne.c:860:
+	printk(KERN_NOTICE "ne.c: You must supply \"io=0xNNN\" value(s) for ISA cards.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#666: FILE: drivers/net/ne.c:870:
+#ifdef CONFIG_PNP^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#682: FILE: include/linux/isa.h:1:
+#ifndef _LINUX_ISA_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#685: FILE: include/linux/isa.h:4:
+#define ISA_ID_LEN 9 $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#707: FILE: include/linux/isa.h:26:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#718: FILE: include/linux/isa.h:37:
+        return idev->dev.driver_data;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: include/linux/isa.h:37:
+        return idev->dev.driver_data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#723: FILE: include/linux/isa.h:42:
+        idev->dev.driver_data = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#723: FILE: include/linux/isa.h:42:
+        idev->dev.driver_data = data;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000370357.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 40 errors, 42 warnings, 7 checks, 603 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000370357.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
