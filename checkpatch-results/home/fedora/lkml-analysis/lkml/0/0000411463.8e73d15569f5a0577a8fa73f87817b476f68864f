WARNING:TYPO_SPELLING: 'Ethe' may be misspelled - perhaps 'The'?
#65: 
00000000fe1c0000-00000000fe1dffff : Intel Corp. 82546EB Gigabit Ethe
                                                                ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Ethe' may be misspelled - perhaps 'The'?
#67: 
00000000fe1e0000-00000000fe1fffff : Intel Corp. 82546EB Gigabit Ethe
                                                                ^^^^

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#86: 
--- a/arch/alpha/kernel/pci.c	Fri Nov 22 14:32:09 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#112: FILE: arch/arm/kernel/bios32.c:271:
+		printk("PCI: Assigning %3s %016Lx to %s\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#112: FILE: arch/arm/kernel/bios32.c:271:
+		printk("PCI: Assigning %3s %016Lx to %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: arch/arm/kernel/bios32.c:272:
+		printk("PCI: Assigning %3s %016Lx to %s\n",
 			res->flags & IORESOURCE_IO ? "IO" : "MEM",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#137: FILE: arch/i386/kernel/setup.c:801:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: arch/i386/kernel/setup.c:804:
+^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#147: FILE: arch/i386/kernel/setup.c:807:
+		case E820_RAM:	res->name = "System RAM e820"; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#148: FILE: arch/i386/kernel/setup.c:808:
+		case E820_ACPI:	res->name = "ACPI Tables e820"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#149: FILE: arch/i386/kernel/setup.c:809:
+		case E820_NVS:	res->name = "ACPI Non-volatile Storage e820"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#150: FILE: arch/i386/kernel/setup.c:810:
+		default:	res->name = "reserved e820";

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#177: FILE: arch/i386/pci/i386.c:170:
+				DBG("PCI: Resource %016Lx-%016Lx (f=%Lx, d=%d, p=%d)\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: arch/ia64/pci/pci.c:233:
+^I^I        u64 size, u64 align)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#358: FILE: arch/parisc/kernel/pci.c:393:
 void __devinit

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#367: FILE: arch/parisc/kernel/pci.c:399:
+	DBG_RES("pcibios_align_resource(%s, (%p) [%Lx,%Lx]/%Lx, 0x%Lx, 0x%Lx)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#379: FILE: arch/ppc/kernel/pci.c:131:
+	printk(KERN_INFO "PCI: moved device %s resource %d (%Lx) to %x\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#379: FILE: arch/ppc/kernel/pci.c:131:
+	printk(KERN_INFO "PCI: moved device %s resource %d (%Lx) to %x\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#388: FILE: arch/ppc/kernel/pci.c:152:
+			DBG("PCI:%s Resource %d [%016Lx-%016Lx] is unassigned\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#397: FILE: arch/ppc/kernel/pci.c:170:
+			printk("Fixup res %d (%Lx) of dev %s: %Lx -> %Lx\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#397: FILE: arch/ppc/kernel/pci.c:170:
+			printk("Fixup res %d (%Lx) of dev %s: %Lx -> %Lx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#419: FILE: arch/ppc/kernel/pci.c:242:
+			printk(KERN_ERR "PCI: I/O Region %s/%Ld too large"

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#419: FILE: arch/ppc/kernel/pci.c:242:
+			printk(KERN_ERR "PCI: I/O Region %s/%Ld too large"

WARNING:SPLIT_STRING: quoted string split across lines
#420: FILE: arch/ppc/kernel/pci.c:243:
+			printk(KERN_ERR "PCI: I/O Region %s/%Ld too large"
+			       " (%Ld bytes)\n", dev->slot_name,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#420: FILE: arch/ppc/kernel/pci.c:243:
+			       " (%Ld bytes)\n", dev->slot_name,

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#429: FILE: arch/ppc/kernel/pci.c:317:
+			DBG("PCI: bridge rsrc %Lx..%Lx (%Lx), parent %p\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#438: FILE: arch/ppc/kernel/pci.c:422:
+		DBG(KERN_ERR "PCI: huh? couldn't move to %Lx..%Lx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#444: FILE: arch/ppc/kernel/pci.c:427:
+	printk(KERN_INFO "PCI: bridge %d resource %d moved to %Lx..%Lx\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#444: FILE: arch/ppc/kernel/pci.c:427:
+	printk(KERN_INFO "PCI: bridge %d resource %d moved to %Lx..%Lx\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#463: FILE: arch/ppc/kernel/pci.c:534:
+		DBG(KERN_ERR "PCI: ugh, bridge %s res %d has flags=%Lx\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#472: FILE: arch/ppc/kernel/pci.c:544:
+	DBG("PCI:%s: Resource %d: %016Lx-%016Lx (f=%Lx)\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#480: FILE: arch/ppc/kernel/pci.c:551:
+			DBG("PCI:  parent is %p: %016Lx-%016Lx (f=%Lx)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#502: FILE: arch/ppc64/kernel/pci.c:189:
+			printk(KERN_ERR "PCI: Can not align I/O Region %s %s because size %Ld is too large.\n",

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#502: FILE: arch/ppc64/kernel/pci.c:189:
+			printk(KERN_ERR "PCI: Can not align I/O Region %s %s because size %Ld is too large.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#503: FILE: arch/ppc64/kernel/pci.c:190:
+			printk(KERN_ERR "PCI: Can not align I/O Region %s %s because size %Ld is too large.\n",
                                         dev->slot_name, res->name, size);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#554: FILE: arch/sparc64/kernel/pci_common.c:273:
+		prom_printf("PCI: RES[%016lx-->%016lx:(%Lx)]\n",

WARNING:SPLIT_STRING: quoted string split across lines
#563: FILE: arch/sparc64/kernel/pci_common.c:406:
 				printk(KERN_ERR "PCI: OBP assigns out of range MEM address "
+				       "%016Lx for region %ld on device %s\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#563: FILE: arch/sparc64/kernel/pci_common.c:406:
+				       "%016Lx for region %ld on device %s\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#600: FILE: arch/x86_64/pci/x86-64.c:170:
+				DBG("PCI: Resource %016Lx-%016Lx (f=%Lx, d=%d, p=%d)\n",

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#612: FILE: drivers/ide/pci/aec62xx.c:416:
+		printk("%s: ROM enabled at 0x%016Lx\n", name, dev->resource[PCI_ROM_RESOURCE].start);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#612: FILE: drivers/ide/pci/aec62xx.c:416:
+		printk("%s: ROM enabled at 0x%016Lx\n", name, dev->resource[PCI_ROM_RESOURCE].start);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#612: FILE: drivers/ide/pci/aec62xx.c:416:
+		printk("%s: ROM enabled at 0x%016Lx\n", name, dev->resource[PCI_ROM_RESOURCE].start);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#624: FILE: drivers/ide/pci/cmd64x.c:609:
+		printk("%s: ROM enabled at 0x%016Lx\n", name, dev->resource[PCI_ROM_RESOURCE].start);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#624: FILE: drivers/ide/pci/cmd64x.c:609:
+		printk("%s: ROM enabled at 0x%016Lx\n", name, dev->resource[PCI_ROM_RESOURCE].start);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#624: FILE: drivers/ide/pci/cmd64x.c:609:
+		printk("%s: ROM enabled at 0x%016Lx\n", name, dev->resource[PCI_ROM_RESOURCE].start);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#636: FILE: drivers/ide/pci/hpt34x.c:252:
+			printk(KERN_INFO "HPT345: ROM enabled at 0x%016Lx\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#636: FILE: drivers/ide/pci/hpt34x.c:252:
+			printk(KERN_INFO "HPT345: ROM enabled at 0x%016Lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#637: FILE: drivers/ide/pci/hpt34x.c:253:
+			printk(KERN_INFO "HPT345: ROM enabled at 0x%016Lx\n",
 				dev->resource[PCI_ROM_RESOURCE].start);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#648: FILE: drivers/ide/pci/pdc202xx_new.c:541:
+		printk("%s: ROM enabled at 0x%016Lx\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#648: FILE: drivers/ide/pci/pdc202xx_new.c:541:
+		printk("%s: ROM enabled at 0x%016Lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#649: FILE: drivers/ide/pci/pdc202xx_new.c:542:
+		printk("%s: ROM enabled at 0x%016Lx\n",
 			name, dev->resource[PCI_ROM_RESOURCE].start);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#660: FILE: drivers/ide/pci/pdc202xx_old.c:721:
+		printk("%s: ROM enabled at 0x%016Lx\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#660: FILE: drivers/ide/pci/pdc202xx_old.c:721:
+		printk("%s: ROM enabled at 0x%016Lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#661: FILE: drivers/ide/pci/pdc202xx_old.c:722:
+		printk("%s: ROM enabled at 0x%016Lx\n",
 			name, dev->resource[PCI_ROM_RESOURCE].start);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#672: FILE: drivers/net/e100/e100_main.c:2989:
+		printk(KERN_ERR "e100: %s: Failed to map PCI address 0x%LX\n",

WARNING:PRINTF_L: %LX is non-standard C, use %llX
#672: FILE: drivers/net/e100/e100_main.c:2989:
+		printk(KERN_ERR "e100: %s: Failed to map PCI address 0x%LX\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#684: FILE: drivers/net/eepro100.c:624:
+		printk (KERN_ERR "eepro100: cannot remap MMIO region %Lx @ %Lx\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#684: FILE: drivers/net/eepro100.c:624:
+		printk (KERN_ERR "eepro100: cannot remap MMIO region %Lx @ %Lx\n",

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#684: FILE: drivers/net/eepro100.c:624:
+		printk (KERN_ERR "eepro100: cannot remap MMIO region %Lx @ %Lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#685: FILE: drivers/net/eepro100.c:625:
+		printk (KERN_ERR "eepro100: cannot remap MMIO region %Lx @ %Lx\n",
 				pci_resource_len(pdev, 0), pci_resource_start(pdev, 0));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#690: FILE: drivers/net/eepro100.c:629:
+		printk("Found Intel i82557 PCI Speedo, MMIO at %#Lx, IRQ %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#691: FILE: drivers/net/eepro100.c:630:
+		printk("Found Intel i82557 PCI Speedo, MMIO at %#Lx, IRQ %d.\n",
 			   pci_resource_start(pdev, 0), irq);

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#702: FILE: drivers/net/tc35815.c:502:
+	        printk(KERN_INFO "    pci_memaddr=%#016Lx  resource_flags=%#016Lx\n", pci_memaddr, pci_resource_flags (pdev, 0));

ERROR:CODE_INDENT: code indent should use tabs where possible
#702: FILE: drivers/net/tc35815.c:502:
+^I        printk(KERN_INFO "    pci_memaddr=%#016Lx  resource_flags=%#016Lx\n", pci_memaddr, pci_resource_flags (pdev, 0));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#702: FILE: drivers/net/tc35815.c:502:
+	        printk(KERN_INFO "    pci_memaddr=%#016Lx  resource_flags=%#016Lx\n", pci_memaddr, pci_resource_flags (pdev, 0));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#702: FILE: drivers/net/tc35815.c:502:
+	        printk(KERN_INFO "    pci_memaddr=%#016Lx  resource_flags=%#016Lx\n", pci_memaddr, pci_resource_flags (pdev, 0));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#714: FILE: drivers/net/tulip/tulip_core.c:1364:
+		printk (KERN_ERR PFX "%s: I/O region (0x%Lx@0x%Lx) too small, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#714: FILE: drivers/net/tulip/tulip_core.c:1364:
+		printk (KERN_ERR PFX "%s: I/O region (0x%Lx@0x%Lx) too small, "

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#714: FILE: drivers/net/tulip/tulip_core.c:1364:
+		printk (KERN_ERR PFX "%s: I/O region (0x%Lx@0x%Lx) too small, "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#726: FILE: drivers/parisc/ccio-dma.c:1441:
+^I^Iprintk(KERN_ERR "%s: failed to claim CCIO bus address space (%016Lx,%016Lx)\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#726: FILE: drivers/parisc/ccio-dma.c:1441:
+		printk(KERN_ERR "%s: failed to claim CCIO bus address space (%016Lx,%016Lx)\n", 

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#726: FILE: drivers/parisc/ccio-dma.c:1441:
+		printk(KERN_ERR "%s: failed to claim CCIO bus address space (%016Lx,%016Lx)\n", 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#738: FILE: drivers/pci/pci.c:503:
+	printk (KERN_WARNING "PCI: Unable to reserve %s region #%d:%Lx@%Lx for device %s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#738: FILE: drivers/pci/pci.c:503:
+	printk (KERN_WARNING "PCI: Unable to reserve %s region #%d:%Lx@%Lx for device %s\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#738: FILE: drivers/pci/pci.c:503:
+	printk (KERN_WARNING "PCI: Unable to reserve %s region #%d:%Lx@%Lx for device %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#747: FILE: drivers/pci/pci.c:552:
+	printk (KERN_WARNING "PCI: Unable to reserve %s region #%d:%Lx@%Lx for device %s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#747: FILE: drivers/pci/pci.c:552:
+	printk (KERN_WARNING "PCI: Unable to reserve %s region #%d:%Lx@%Lx for device %s\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#747: FILE: drivers/pci/pci.c:552:
+	printk (KERN_WARNING "PCI: Unable to reserve %s region #%d:%Lx@%Lx for device %s\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#763: FILE: drivers/pci/proc.c:302:
+#define LONG_FORMAT "\t%016Lx"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#775: FILE: drivers/pci/setup-res.c:49:
+		printk(KERN_ERR "PCI: %s region %d of %s %s [%Lx:%Lx]\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#775: FILE: drivers/pci/setup-res.c:49:
+		printk(KERN_ERR "PCI: %s region %d of %s %s [%Lx:%Lx]\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#801: FILE: drivers/pci/setup-res.c:126:
+			printk(KERN_ERR "PCI: Failed to allocate resource %d(%Lx-%Lx) for %s\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#801: FILE: drivers/pci/setup-res.c:126:
+			printk(KERN_ERR "PCI: Failed to allocate resource %d(%Lx-%Lx) for %s\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#808: FILE: drivers/pci/setup-res.c:132:
+	DBGC((KERN_ERR "  got res[%Lx:%Lx] for resource %d of %s\n", res->start,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#809: FILE: drivers/pci/setup-res.c:133:
+	DBGC((KERN_ERR "  got res[%Lx:%Lx] for resource %d of %s\n", res->start,
 						res->end, i, dev->dev.name));

WARNING:SPLIT_STRING: quoted string split across lines
#817: FILE: drivers/pci/setup-res.c:156:
 			printk(KERN_WARNING "PCI: Ignore bogus resource %d "
+					    "[%Lx:%Lx] of %s\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#817: FILE: drivers/pci/setup-res.c:156:
+					    "[%Lx:%Lx] of %s\n",

CHECK:SPACING: No space is necessary after a cast
#829: FILE: drivers/video/clgenfb.c:2693:
+		printk (" REG at $%Lx\n", (unsigned long) z2->resource.start);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#829: FILE: drivers/video/clgenfb.c:2693:
+		printk (" REG at $%Lx\n", (unsigned long) z2->resource.start);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#829: FILE: drivers/video/clgenfb.c:2693:
+		printk (" REG at $%Lx\n", (unsigned long) z2->resource.start);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#829: FILE: drivers/video/clgenfb.c:2693:
+		printk (" REG at $%Lx\n", (unsigned long) z2->resource.start);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#917: FILE: include/linux/ioport.h:105:
+extern struct resource * __request_region(struct resource *, u64 start, u64 n, const char *name);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#917: FILE: include/linux/ioport.h:105:
+extern struct resource * __request_region(struct resource *, u64 start, u64 n, const char *name);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct resource *' should also have an identifier name
#917: FILE: include/linux/ioport.h:105:
+extern struct resource * __request_region(struct resource *, u64 start, u64 n, const char *name);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#927: FILE: include/linux/ioport.h:113:
+extern int __check_region(struct resource *, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct resource *' should also have an identifier name
#927: FILE: include/linux/ioport.h:113:
+extern int __check_region(struct resource *, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#927: FILE: include/linux/ioport.h:113:
+extern int __check_region(struct resource *, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#927: FILE: include/linux/ioport.h:113:
+extern int __check_region(struct resource *, u64, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#928: FILE: include/linux/ioport.h:114:
+extern void __release_region(struct resource *, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct resource *' should also have an identifier name
#928: FILE: include/linux/ioport.h:114:
+extern void __release_region(struct resource *, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#928: FILE: include/linux/ioport.h:114:
+extern void __release_region(struct resource *, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#928: FILE: include/linux/ioport.h:114:
+extern void __release_region(struct resource *, u64, u64);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#952: FILE: kernel/resource.c:19:
+struct resource iomem_resource = { "PCI mem", 0x0000000000000000, 0xffffffffffffffff, IORESOURCE_MEM };

ERROR:TRAILING_WHITESPACE: trailing whitespace
#970: FILE: kernel/resource.c:42:
+^I^I$

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#979: FILE: kernel/resource.c:57:
+	fmt = "        %016Lx-%016Lx : %s\n";

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#982: FILE: kernel/resource.c:59:
+		fmt = "        %04Lx-%04Lx : %s\n";

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1034: FILE: kernel/resource.c:205:
+struct resource * __request_region(struct resource *parent, u64 start, u64 n, const char *name)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1065: FILE: kernel/resource.c:279:
+	printk(KERN_WARNING "Trying to free nonexistent resource <%016Lx-%016Lx>\n", start, end);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#1065: FILE: kernel/resource.c:279:
+	printk(KERN_WARNING "Trying to free nonexistent resource <%016Lx-%016Lx>\n", start, end);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000411463.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 84 warnings, 12 checks, 785 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000411463.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
