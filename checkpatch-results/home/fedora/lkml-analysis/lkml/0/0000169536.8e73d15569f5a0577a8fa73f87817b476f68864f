WARNING:TYPO_SPELLING: 'propogation' may be misspelled - perhaps 'propagation'?
#37: 
propogation wherever needed.
^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'propogation' may be misspelled - perhaps 'propagation'?
#48: 
propogation wherever needed.
^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#104: FILE: fs/namespace.c:130:
+		 * as the original if that was on one */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: fs/namespace.c:166:
+static struct vfsmount *do_attach_mnt(struct vfsmount *mnt,
+		struct dentry *dentry,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#138: FILE: fs/namespace.c:169:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#141: FILE: fs/namespace.c:172:
+	nd.mnt = mnt;
 	^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#142: FILE: fs/namespace.c:173:
+	nd.dentry = dentry;
 	^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#143: FILE: fs/namespace.c:174:
+	attach_mnt(child_mnt, &nd);
 	                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#149: FILE: fs/namespace.c:180:
+static void attach_prepare_mnt(struct vfsmount *mnt, struct nameidata *nd)
                                                                        ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#159: FILE: fs/namespace.c:190:
+	struct vfsmount *parent = mnt->mnt_parent;
+	BUG_ON(parent==mnt);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#159: FILE: fs/namespace.c:190:
+	BUG_ON(parent==mnt);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#159: FILE: fs/namespace.c:190:
+	BUG_ON(parent==mnt);
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#160: FILE: fs/namespace.c:191:
+	if(list_empty(&mnt->mnt_hash))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: fs/namespace.c:193:
+		list_add(&mnt->mnt_hash,
+			mount_hashtable+hash(parent, mnt->mnt_mountpoint));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#162: FILE: fs/namespace.c:193:
+			mount_hashtable+hash(parent, mnt->mnt_mountpoint));
 			               ^

ERROR:SPACING: space required before the open parenthesis '('
#163: FILE: fs/namespace.c:194:
+	if(list_empty(&mnt->mnt_child))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: fs/namespace.c:201:
+struct vfsmount *do_attach_prepare_mnt(struct vfsmount *mnt,
+		struct dentry *dentry,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#175: FILE: fs/namespace.c:206:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#182: FILE: fs/namespace.c:213:
+	nd.mnt = mnt;
 	^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#183: FILE: fs/namespace.c:214:
+	nd.dentry = dentry;
 	^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#185: FILE: fs/namespace.c:216:
+	attach_prepare_mnt(child_mnt, &nd);
 	                               ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#221: FILE: fs/namespace.c:240:
+	struct list_head *prev = p->mnt_mounts.prev;
+	while (prev != &p->mnt_mounts) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#317: FILE: fs/namespace.c:660:
+ /*
+ *  @source_mnt : mount tree to be attached

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#318: FILE: fs/namespace.c:661:
+ *  @nd		: place the mount tree @source_mnt is attached
      ^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#326: FILE: fs/namespace.c:669:
+ *  | source^I|^I^I |       ^I     |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#327: FILE: fs/namespace.c:670:
+ *  |   |   ^I|^I^I |       ^I     |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#328: FILE: fs/namespace.c:671:
+ *  |   v ^I|^I^I |       ^I     |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#330: FILE: fs/namespace.c:673:
+ *  |^I     ^I|^I^I |       ^I     |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#331: FILE: fs/namespace.c:674:
+ *  |  shared^I| shared (++) ^I |      shared (+)   | shared (+)   | shared (+)|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#332: FILE: fs/namespace.c:675:
+ *  |^I^I|^I^I |       ^I     |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#333: FILE: fs/namespace.c:676:
+ *  |^I^I|^I^I |       ^I     |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#334: FILE: fs/namespace.c:677:
+ *  | private^I| shared (+)^I |      private^I     | private ^I    | private  ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#335: FILE: fs/namespace.c:678:
+ *  |^I^I|^I^I |       ^I     |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#336: FILE: fs/namespace.c:679:
+ *  |^I^I|^I^I |       ^I     |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#337: FILE: fs/namespace.c:680:
+ *  | slave^I| shared (+)^I |      private      | private ^I    | private  ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#338: FILE: fs/namespace.c:681:
+ *  |^I^I|^I^I |       ^I     |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#339: FILE: fs/namespace.c:682:
+ *  |^I^I|^I^I |       ^I     |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#340: FILE: fs/namespace.c:683:
+ *  | unclonable|    -^I^I |       -^I     |   -^I    |   - ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#341: FILE: fs/namespace.c:684:
+ *  |^I^I|^I^I |       ^I     |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#342: FILE: fs/namespace.c:685:
+ *  |^I^I|^I^I |       ^I     |   ^I    |    ^I|$

WARNING:TYPO_SPELLING: 'propogated' may be misspelled - perhaps 'propagated'?
#345: FILE: fs/namespace.c:688:
+ * (++)  the mount will be propogated to all the vfsmounts in the pnode tree
                            ^^^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#346: FILE: fs/namespace.c:689:
+ *    ^I  of the destination vfsmount, and all the non-slave new mounts in$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#347: FILE: fs/namespace.c:690:
+ *    ^I  destination vfsmount will be added the source vfsmount's pnode.$

WARNING:TYPO_SPELLING: 'propogated' may be misspelled - perhaps 'propagated'?
#348: FILE: fs/namespace.c:691:
+ * (+)  the mount will be propogated to the destination vfsmount
                           ^^^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#349: FILE: fs/namespace.c:692:
+ *    ^I  and the new mount will be added to the source vfsmount's pnode.$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#357: FILE: fs/namespace.c:700:
+ *
+  */

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#359: FILE: fs/namespace.c:702:
+attach_recursive_mnt(struct vfsmount *source_mnt, struct nameidata *nd)
                                                                     ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#372: FILE: fs/namespace.c:715:
+		LIST_HEAD(head);
+		spin_lock(&vfsmount_lock);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#392: FILE: fs/namespace.c:735:
+		while (p && p != m->mnt_parent) {
+			p = p->mnt_parent;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#404: FILE: fs/namespace.c:747:
+		p=m;
 		 ^

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#407: FILE: fs/namespace.c:750:
+		src_pnode = (IS_MNT_SHARED(m))?
 		                              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#418: FILE: fs/namespace.c:761:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: fs/namespace.c:764:
+			pnode_prepare_mount(dest_pnode, tmp_pnode,
+					mntpt_dentry, m, mntpt_mnt);

CHECK:BRACES: Unbalanced braces around else statement
#422: FILE: fs/namespace.c:765:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#425: FILE: fs/namespace.c:768:
+				do_attach_prepare_mnt(mntpt_mnt,
+					mntpt_dentry, m, 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#448: FILE: fs/namespace.c:791:
+		struct vfspnode *master_pnode = tmp_pnode->pnode_master;
+		list_del_init(&tmp_pnode->pnode_peer_slave);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#457: FILE: fs/namespace.c:800:
+^I^I^I * ^I^Ia slave mnt.$

WARNING:RETURN_VOID: void function return statements are not generally useful
#467: FILE: fs/namespace.c:810:
+	return;
+}

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#493: FILE: fs/namespace.c:838:
+		attach_recursive_mnt(mnt, nd);
 		                          ^^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#505: FILE: fs/namespace.c:849:
+ /*
+ * create a new mount at the dentry, and move all child mounts

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#508: FILE: fs/namespace.c:852:
+ * parent mount.
+  */

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#532: FILE: fs/namespace.c:893:
+		do_attach_mnt(nd.mnt, nd.dentry, newmnt);
 		              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#532: FILE: fs/namespace.c:893:
+		do_attach_mnt(nd.mnt, nd.dentry, newmnt);
 		                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#543: FILE: fs/namespace.c:902:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#559: FILE: fs/namespace.c:918:
+		detach_mnt(child_mnt, &nd);
 		                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#560: FILE: fs/namespace.c:919:
+		nd.mnt = parent_mnt;
 		^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#561: FILE: fs/namespace.c:920:
+		attach_mnt(child_mnt, &nd);
 		                       ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#562: FILE: fs/namespace.c:921:
+ ^I}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#562: FILE: fs/namespace.c:921:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: fs/namespace.c:921:
+ ^I}$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#563: FILE: fs/namespace.c:922:
+	detach_mnt(mnt, &nd);
 	                 ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#564: FILE: fs/namespace.c:923:
+ ^Ispin_unlock(&vfsmount_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#564: FILE: fs/namespace.c:923:
+ ^Ispin_unlock(&vfsmount_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: fs/namespace.c:923:
+ ^Ispin_unlock(&vfsmount_lock);$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#568: FILE: fs/namespace.c:927:
+int make_mounted(struct nameidata *nd, struct vfsmount **mnt)
                                    ^^

WARNING:TYPO_SPELLING: 'propogate' may be misspelled - perhaps 'propagate'?
#581: FILE: fs/namespace.c:940:
+	 * Also propogate the mount if parent_mnt
 	        ^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#603: FILE: fs/namespace.c:969:
+ ^Ielse$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#603: FILE: fs/namespace.c:969:
+ ^Ielse$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: fs/namespace.c:969:
+ ^Ielse$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#617: FILE: fs/namespace.c:989:
+	if ((err = make_mounted(nd, &mnt)))
 	                        ^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#617: FILE: fs/namespace.c:989:
+	if ((err = make_mounted(nd, &mnt)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#637: FILE: fs/namespace.c:1061:
+	struct vfsmount *mnt = NULL, *overlay_mnt=NULL;
 	                                         ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#654: FILE: fs/namespace.c:1079:
 	if (check_mnt(nd->mnt) && (!recurse || check_mnt(old_nd.mnt))) {
+

ERROR:SPACING: space required before the open parenthesis '('
#662: FILE: fs/namespace.c:1087:
+		if(IS_MNT_SHARED(old_nd.mnt) &&

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#662: FILE: fs/namespace.c:1087:
+		if(IS_MNT_SHARED(old_nd.mnt) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#663: FILE: fs/namespace.c:1088:
+		if(IS_MNT_SHARED(old_nd.mnt) &&
+			(err = make_mounted(&old_nd, &overlay_mnt)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#686: FILE: fs/namespace.c:1106:
+ ^I^I^Ispin_lock(&vfsmount_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#686: FILE: fs/namespace.c:1106:
+ ^I^I^Ispin_lock(&vfsmount_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: fs/namespace.c:1106:
+ ^I^I^Ispin_lock(&vfsmount_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#687: FILE: fs/namespace.c:1107:
+ ^I^I^Iumount_tree(mnt);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#687: FILE: fs/namespace.c:1107:
+ ^I^I^Iumount_tree(mnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#687: FILE: fs/namespace.c:1107:
+ ^I^I^Iumount_tree(mnt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#688: FILE: fs/namespace.c:1108:
+ ^I^I^Ispin_unlock(&vfsmount_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#688: FILE: fs/namespace.c:1108:
+ ^I^I^Ispin_unlock(&vfsmount_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#688: FILE: fs/namespace.c:1108:
+ ^I^I^Ispin_unlock(&vfsmount_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#695: FILE: fs/namespace.c:1115:
+ ^I^I} else$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#695: FILE: fs/namespace.c:1115:
+ ^I^I} else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: fs/namespace.c:1115:
+ ^I^I} else$

CHECK:BRACES: Unbalanced braces around else statement
#695: FILE: fs/namespace.c:1115:
+ 		} else

ERROR:CODE_INDENT: code indent should use tabs where possible
#696: FILE: fs/namespace.c:1116:
+ ^I^I^Imntput(mnt);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#696: FILE: fs/namespace.c:1116:
+ ^I^I^Imntput(mnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: fs/namespace.c:1116:
+ ^I^I^Imntput(mnt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#697: FILE: fs/namespace.c:1117:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#697: FILE: fs/namespace.c:1117:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: fs/namespace.c:1117:
+ ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#703: FILE: fs/namespace.c:1123:
+ ^Ipath_release(&old_nd);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#703: FILE: fs/namespace.c:1123:
+ ^Ipath_release(&old_nd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: fs/namespace.c:1123:
+ ^Ipath_release(&old_nd);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#874: FILE: fs/pnode.c:296:
+	int i,count;
 	     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#878: FILE: fs/pnode.c:300:
+	list_for_each_entry_safe(slave_pnode,  pnext,
+			&pnode->pnode_slavepnode, pnode_peer_slave) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#881: FILE: fs/pnode.c:303:
+		list_move(&slave_pnode->pnode_peer_slave,
+				&peer_pnode->pnode_slavepnode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#885: FILE: fs/pnode.c:307:
+	list_for_each_entry_safe(slave_mnt,  next,
+			&pnode->pnode_slavevfs, mnt_pnode_mntlist) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#888: FILE: fs/pnode.c:310:
+		list_move(&slave_mnt->mnt_pnode_mntlist,
+				&peer_pnode->pnode_slavevfs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#892: FILE: fs/pnode.c:314:
+	list_for_each_entry_safe(mnt, next,
+			&pnode->pnode_vfs, mnt_pnode_mntlist) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#895: FILE: fs/pnode.c:317:
+		list_move(&mnt->mnt_pnode_mntlist,
+				&peer_pnode->pnode_vfs);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#909: FILE: fs/pnode.c:331:
+	for (i=0 ; i <count; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#909: FILE: fs/pnode.c:331:
+	for (i=0 ; i <count; i++)
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#926: FILE: fs/pnode.c:414:
+	int ret=0;
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#942: FILE: fs/pnode.c:430:
+	int ret=0,traversal;
 	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#942: FILE: fs/pnode.c:430:
+	int ret=0,traversal;
 	         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#943: FILE: fs/pnode.c:431:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#943: FILE: fs/pnode.c:431:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: fs/pnode.c:431:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

ERROR:SPACING: space required before the open parenthesis '('
#948: FILE: fs/pnode.c:436:
+	while(pnode_next(&context)) {

ERROR:SPACING: space required before the open parenthesis '('
#951: FILE: fs/pnode.c:439:
+		if(traversal == PNODE_UP) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#955: FILE: fs/pnode.c:443:
+			list_for_each_entry_safe(member_mnt,
+				t_m, &pnode->pnode_vfs, mnt_pnode_mntlist) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#957: FILE: fs/pnode.c:445:
+				if ((ret = vfs_make_unmounted(member_mnt)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#962: FILE: fs/pnode.c:450:
+			list_for_each_entry_safe(slave_mnt,
+				t_m, &pnode->pnode_slavevfs, mnt_pnode_mntlist) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#964: FILE: fs/pnode.c:452:
+				if ((ret = vfs_make_unmounted(slave_mnt)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#976: FILE: fs/pnode.c:464:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#979: FILE: fs/pnode.c:467:
+vfs_prepare_mount_func(struct vfsmount *mnt, int flag, struct vfspnode *pnode,
+		struct vfsmount *source_mnt,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p_mnt != mnt'
#986: FILE: fs/pnode.c:474:
+	if ((p_mnt != mnt) || (source_mnt == source_mnt->mnt_parent)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'source_mnt == source_mnt->mnt_parent'
#986: FILE: fs/pnode.c:474:
+	if ((p_mnt != mnt) || (source_mnt == source_mnt->mnt_parent)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#986: FILE: fs/pnode.c:474:
+	if ((p_mnt != mnt) || (source_mnt == source_mnt->mnt_parent)) {
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#988: FILE: fs/pnode.c:476:
+		child_mnt = do_attach_prepare_mnt(mnt, mountpoint_dentry,
+				source_mnt, (p_mnt != mnt));

CHECK:BRACES: Unbalanced braces around else statement
#991: FILE: fs/pnode.c:479:
+	} else

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#995: FILE: fs/pnode.c:483:
+	case PNODE_SLAVE_VFS :
 	                     ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#998: FILE: fs/pnode.c:486:
+	case PNODE_MEMBER_VFS :
 	                      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1006: FILE: fs/pnode.c:494:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1009: FILE: fs/pnode.c:497:
+pnode_prepare_mount(struct vfspnode *pnode,
+		struct vfspnode *master_child_pnode,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1014: FILE: fs/pnode.c:502:
+	int ret=0,traversal,level;
 	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1014: FILE: fs/pnode.c:502:
+	int ret=0,traversal,level;
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1014: FILE: fs/pnode.c:502:
+	int ret=0,traversal,level;
 	                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1015: FILE: fs/pnode.c:503:
+     ^Istruct vfspnode *slave_pnode, *master_pnode, *slave_child_pnode, *child_pnode;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1015: FILE: fs/pnode.c:503:
+     ^Istruct vfspnode *slave_pnode, *master_pnode, *slave_child_pnode, *child_pnode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1015: FILE: fs/pnode.c:503:
+     ^Istruct vfspnode *slave_pnode, *master_pnode, *slave_child_pnode, *child_pnode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1016: FILE: fs/pnode.c:504:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1016: FILE: fs/pnode.c:504:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1016: FILE: fs/pnode.c:504:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

ERROR:SPACING: space required before the open parenthesis '('
#1022: FILE: fs/pnode.c:510:
+	while(pnode_next(&context)) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1029: FILE: fs/pnode.c:517:
+		if (traversal == PNODE_DOWN ) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1030: FILE: fs/pnode.c:518:
+		if (traversal == PNODE_DOWN ) {
+

ERROR:SPACING: space required before the open parenthesis '('
#1040: FILE: fs/pnode.c:528:
+		} else if(traversal == PNODE_MID) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1041: FILE: fs/pnode.c:529:
+		} else if(traversal == PNODE_MID) {
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1043: FILE: fs/pnode.c:531:
+			slave_child_pnode = p_array[level+1].out_data;
 			                                 ^

ERROR:SPACING: space required before the open parenthesis '('
#1046: FILE: fs/pnode.c:534:
+		} else if(traversal == PNODE_UP) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1047: FILE: fs/pnode.c:535:
+		} else if(traversal == PNODE_UP) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1051: FILE: fs/pnode.c:539:
+			list_for_each_entry_safe(member_mnt,
+				t_m, &pnode->pnode_vfs, mnt_pnode_mntlist) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1053: FILE: fs/pnode.c:541:
+				if((ret=vfs_prepare_mount_func(member_mnt,
 				       ^

ERROR:SPACING: space required before the open parenthesis '('
#1053: FILE: fs/pnode.c:541:
+				if((ret=vfs_prepare_mount_func(member_mnt,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1053: FILE: fs/pnode.c:541:
+				if((ret=vfs_prepare_mount_func(member_mnt,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1054: FILE: fs/pnode.c:542:
+				if((ret=vfs_prepare_mount_func(member_mnt,
+					PNODE_MEMBER_VFS, child_pnode, source_mnt,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1060: FILE: fs/pnode.c:548:
+			list_for_each_entry_safe(slave_mnt,
+				t_m, &pnode->pnode_slavevfs, mnt_pnode_mntlist) {

ERROR:SPACING: space required before the open parenthesis '('
#1062: FILE: fs/pnode.c:550:
+				if((ret = vfs_prepare_mount_func(slave_mnt,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1062: FILE: fs/pnode.c:550:
+				if((ret = vfs_prepare_mount_func(slave_mnt,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1063: FILE: fs/pnode.c:551:
+				if((ret = vfs_prepare_mount_func(slave_mnt,
+					PNODE_SLAVE_VFS, child_pnode, source_mnt,

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1071: FILE: fs/pnode.c:559:
+
+		}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1078: FILE: fs/pnode.c:566:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1082: FILE: fs/pnode.c:570:
+	BUG_ON(mnt == mnt->mnt_parent);

WARNING:TYPO_SPELLING: 'propogation' may be misspelled - perhaps 'propagation'?
#1093: FILE: fs/pnode.c:581:
+ * @pnode: walk the propogation tree and complete the
                     ^^^^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1094: FILE: fs/pnode.c:582:
+ * ^Iattachments of the child mounts to the parents$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1095: FILE: fs/pnode.c:583:
+ * ^Icorrespondingly.$

WARNING:TYPO_SPELLING: 'propogation' may be misspelled - perhaps 'propagation'?
#1096: FILE: fs/pnode.c:584:
+ * @flag: if set destroy the propogation tree
                              ^^^^^^^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1101: FILE: fs/pnode.c:589:
+	int ret=0,traversal;
 	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1101: FILE: fs/pnode.c:589:
+	int ret=0,traversal;
 	         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1102: FILE: fs/pnode.c:590:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1102: FILE: fs/pnode.c:590:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1102: FILE: fs/pnode.c:590:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

ERROR:SPACING: space required before the open parenthesis '('
#1107: FILE: fs/pnode.c:595:
+	while(pnode_next(&context)) {

ERROR:SPACING: space required before the open parenthesis '('
#1110: FILE: fs/pnode.c:598:
+		if(traversal == PNODE_MID) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1112: FILE: fs/pnode.c:600:
+				BUG_ON(!list_empty(&pnode->pnode_vfs));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1113: FILE: fs/pnode.c:601:
+				BUG_ON(!list_empty(&pnode->pnode_slavevfs));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1114: FILE: fs/pnode.c:602:
+				BUG_ON(!list_empty(&pnode->pnode_slavepnode));

ERROR:SPACING: space required before the open parenthesis '('
#1118: FILE: fs/pnode.c:606:
+		} else if(traversal == PNODE_UP) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1122: FILE: fs/pnode.c:610:
+			list_for_each_entry_safe(member_mnt,
+				t_m, &pnode->pnode_vfs, mnt_pnode_mntlist) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1124: FILE: fs/pnode.c:612:
+				if ((ret = vfs_real_mount_func(member_mnt, flag)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1128: FILE: fs/pnode.c:616:
+			list_for_each_entry_safe(slave_mnt,
+				t_m, &pnode->pnode_slavevfs, mnt_pnode_mntlist) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1130: FILE: fs/pnode.c:618:
+				if ((ret = vfs_real_mount_func(slave_mnt, flag)))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1149: FILE: include/linux/fs.h:1219:
+extern struct vfsmount *do_attach_prepare_mnt(struct vfsmount *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#1149: FILE: include/linux/fs.h:1219:
+extern struct vfsmount *do_attach_prepare_mnt(struct vfsmount *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1149: FILE: include/linux/fs.h:1219:
+extern struct vfsmount *do_attach_prepare_mnt(struct vfsmount *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#1149: FILE: include/linux/fs.h:1219:
+extern struct vfsmount *do_attach_prepare_mnt(struct vfsmount *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1149: FILE: include/linux/fs.h:1219:
+extern struct vfsmount *do_attach_prepare_mnt(struct vfsmount *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1150: FILE: include/linux/fs.h:1220:
+extern struct vfsmount *do_attach_prepare_mnt(struct vfsmount *,
+		struct dentry *, struct vfsmount *, int );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1150: FILE: include/linux/fs.h:1220:
+		struct dentry *, struct vfsmount *, int );

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1151: FILE: include/linux/fs.h:1221:
+extern void do_attach_real_mnt(struct vfsmount *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#1151: FILE: include/linux/fs.h:1221:
+extern void do_attach_real_mnt(struct vfsmount *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1153: FILE: include/linux/fs.h:1223:
+extern int do_make_unmounted(struct vfsmount *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#1153: FILE: include/linux/fs.h:1223:
+extern int do_make_unmounted(struct vfsmount *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfspnode *' should also have an identifier name
#1165: FILE: include/linux/pnode.h:76:
+int pnode_merge_pnode(struct vfspnode *, struct vfspnode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfspnode *' should also have an identifier name
#1165: FILE: include/linux/pnode.h:76:
+int pnode_merge_pnode(struct vfspnode *, struct vfspnode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfspnode *' should also have an identifier name
#1167: FILE: include/linux/pnode.h:78:
+int  pnode_make_unmounted(struct vfspnode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfspnode *' should also have an identifier name
#1168: FILE: include/linux/pnode.h:79:
+int pnode_prepare_mount(struct vfspnode *, struct vfspnode *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfspnode *' should also have an identifier name
#1168: FILE: include/linux/pnode.h:79:
+int pnode_prepare_mount(struct vfspnode *, struct vfspnode *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1168: FILE: include/linux/pnode.h:79:
+int pnode_prepare_mount(struct vfspnode *, struct vfspnode *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#1168: FILE: include/linux/pnode.h:79:
+int pnode_prepare_mount(struct vfspnode *, struct vfspnode *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#1168: FILE: include/linux/pnode.h:79:
+int pnode_prepare_mount(struct vfspnode *, struct vfspnode *, struct dentry *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1169: FILE: include/linux/pnode.h:80:
+int pnode_prepare_mount(struct vfspnode *, struct vfspnode *, struct dentry *,
+		struct vfsmount *, struct vfsmount *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfspnode *' should also have an identifier name
#1170: FILE: include/linux/pnode.h:81:
+int pnode_real_mount(struct vfspnode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1170: FILE: include/linux/pnode.h:81:
+int pnode_real_mount(struct vfspnode *, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000169536.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 55 errors, 110 warnings, 45 checks, 1059 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000169536.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
