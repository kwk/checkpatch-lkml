WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
diff -urN linux-2.6.13-rc4.orig/drivers/usb/Makefile linux-2.6.13-rc4/drivers/usb/Makefile

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#50: FILE: drivers/usb/input/Kconfig:276:
+config USB_WSL
+	tristate "Wireless Security lock"
+	depends on USB && INPUT
+	---help---
+	  Say Y here if you want support for Wireless Security Locks (WSLs)
+	  based on the Cypress Ultra Mouse controller.
+
+	  See <http://www.schau.com/l/wsl/> for more information and
+ 	  "how to use it".

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#90: FILE: drivers/usb/input/wsl.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#106: FILE: drivers/usb/input/wsl.c:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#107: FILE: drivers/usb/input/wsl.c:18:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#136: FILE: drivers/usb/input/wsl.c:47:
+static struct usb_device_id wsl_table [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#141: FILE: drivers/usb/input/wsl.c:52:
+MODULE_DEVICE_TABLE (usb, wsl_table);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#155: FILE: drivers/usb/input/wsl.c:66:
+	struct usb_wsl *wsl=urb->context;
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#156: FILE: drivers/usb/input/wsl.c:67:
+	int id=0, retval;
 	      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: drivers/usb/input/wsl.c:68:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#163: FILE: drivers/usb/input/wsl.c:74:
+		dbg("%s - urb shutting down with status: %d", __FUNCTION__, urb->status);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#168: FILE: drivers/usb/input/wsl.c:79:
+		id=wsl->data[1]<<8;
 		  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#168: FILE: drivers/usb/input/wsl.c:79:
+		id=wsl->data[1]<<8;
 		               ^

ERROR:SPACING: spaces required around that '|=' (ctx:VxV)
#169: FILE: drivers/usb/input/wsl.c:80:
+		id|=wsl->data[2];
 		  ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#174: FILE: drivers/usb/input/wsl.c:85:
+		dbg("%s - nonzero urb status received: %d", __FUNCTION__, urb->status);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#178: FILE: drivers/usb/input/wsl.c:89:
+	if ((retval=usb_submit_urb(urb, GFP_ATOMIC)))
 	           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#178: FILE: drivers/usb/input/wsl.c:89:
+	if ((retval=usb_submit_urb(urb, GFP_ATOMIC)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#179: FILE: drivers/usb/input/wsl.c:90:
+		err("%s - usb_submit_urb failed with result %d", __FUNCTION__, retval);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#184: FILE: drivers/usb/input/wsl.c:95:
+	struct usb_wsl *wsl=dev->private;
 	                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: drivers/usb/input/wsl.c:96:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: drivers/usb/input/wsl.c:99:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#189: FILE: drivers/usb/input/wsl.c:100:
+	wsl->irq_in->dev=wsl->udev;
 	                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: drivers/usb/input/wsl.c:105:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#200: FILE: drivers/usb/input/wsl.c:111:
+	struct usb_wsl *wsl=dev->private;
 	                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: drivers/usb/input/wsl.c:112:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#208: FILE: drivers/usb/input/wsl.c:119:
+	struct usb_device *udev=interface_to_usbdev (intf);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#208: FILE: drivers/usb/input/wsl.c:119:
+	struct usb_device *udev=interface_to_usbdev (intf);
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#209: FILE: drivers/usb/input/wsl.c:120:
+	struct usb_wsl *wsl=NULL;
 	                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: drivers/usb/input/wsl.c:124:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#214: FILE: drivers/usb/input/wsl.c:125:
+	for (i=0; wsl_table[i].idVendor; i++) {
 	      ^

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#214: FILE: drivers/usb/input/wsl.c:125:
+	for (i=0; wsl_table[i].idVendor; i++) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#216: FILE: drivers/usb/input/wsl.c:127:
+		    (le16_to_cpu(udev->descriptor.idProduct) == wsl_table[i].idProduct))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: drivers/usb/input/wsl.c:133:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#223: FILE: drivers/usb/input/wsl.c:134:
+	if ((wsl=kmalloc(sizeof(struct usb_wsl), GFP_KERNEL))==NULL) {
 	        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#223: FILE: drivers/usb/input/wsl.c:134:
+	if ((wsl=kmalloc(sizeof(struct usb_wsl), GFP_KERNEL))==NULL) {
 	                                                     ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#223: FILE: drivers/usb/input/wsl.c:134:
+	if ((wsl=kmalloc(sizeof(struct usb_wsl), GFP_KERNEL))==NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*wsl)...) over kmalloc(sizeof(struct usb_wsl)...)
#223: FILE: drivers/usb/input/wsl.c:134:
+	if ((wsl=kmalloc(sizeof(struct usb_wsl), GFP_KERNEL))==NULL) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: drivers/usb/input/wsl.c:139:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#229: FILE: drivers/usb/input/wsl.c:140:
+	if ((wsl->data=usb_buffer_alloc(udev, WSL_PKT_LEN, SLAB_ATOMIC, &wsl->data_dma))==NULL) {
 	              ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#229: FILE: drivers/usb/input/wsl.c:140:
+	if ((wsl->data=usb_buffer_alloc(udev, WSL_PKT_LEN, SLAB_ATOMIC, &wsl->data_dma))==NULL) {
 	                                                                                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#229: FILE: drivers/usb/input/wsl.c:140:
+	if ((wsl->data=usb_buffer_alloc(udev, WSL_PKT_LEN, SLAB_ATOMIC, &wsl->data_dma))==NULL) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#234: FILE: drivers/usb/input/wsl.c:145:
+	if ((wsl->irq_in=usb_alloc_urb(0, GFP_KERNEL))==NULL) {
 	                ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#234: FILE: drivers/usb/input/wsl.c:145:
+	if ((wsl->irq_in=usb_alloc_urb(0, GFP_KERNEL))==NULL) {
 	                                              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#234: FILE: drivers/usb/input/wsl.c:145:
+	if ((wsl->irq_in=usb_alloc_urb(0, GFP_KERNEL))==NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: drivers/usb/input/wsl.c:148:
+                kfree(wsl);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: drivers/usb/input/wsl.c:148:
+                kfree(wsl);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: drivers/usb/input/wsl.c:150:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: drivers/usb/input/wsl.c:150:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: drivers/usb/input/wsl.c:151:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#241: FILE: drivers/usb/input/wsl.c:152:
+	ep_irq_in=&intf->cur_altsetting->endpoint[0].desc;
 	         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#241: FILE: drivers/usb/input/wsl.c:152:
+	ep_irq_in=&intf->cur_altsetting->endpoint[0].desc;
 	          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: drivers/usb/input/wsl.c:153:
+^I$

WARNING:LONG_LINE: line length of 158 exceeds 100 columns
#243: FILE: drivers/usb/input/wsl.c:154:
+	usb_fill_int_urb(wsl->irq_in, udev, usb_rcvintpipe(udev, ep_irq_in->bEndpointAddress), wsl->data, WSL_PKT_LEN, wsl_irq_in, wsl, ep_irq_in->bInterval);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#243: FILE: drivers/usb/input/wsl.c:154:
+	usb_fill_int_urb(wsl->irq_in, udev, usb_rcvintpipe(udev, ep_irq_in->bEndpointAddress), wsl->data, WSL_PKT_LEN, wsl_irq_in, wsl, ep_irq_in->bInterval);

CHECK:CAMELCASE: Avoid CamelCase: <bInterval>
#243: FILE: drivers/usb/input/wsl.c:154:
+	usb_fill_int_urb(wsl->irq_in, udev, usb_rcvintpipe(udev, ep_irq_in->bEndpointAddress), wsl->data, WSL_PKT_LEN, wsl_irq_in, wsl, ep_irq_in->bInterval);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#244: FILE: drivers/usb/input/wsl.c:155:
+	wsl->irq_in->transfer_dma=wsl->data_dma;
 	                         ^

ERROR:SPACING: spaces required around that '|=' (ctx:VxV)
#245: FILE: drivers/usb/input/wsl.c:156:
+	wsl->irq_in->transfer_flags|=URB_NO_TRANSFER_DMA_MAP;
 	                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: drivers/usb/input/wsl.c:157:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#247: FILE: drivers/usb/input/wsl.c:158:
+	wsl->udev=udev;
 	         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: drivers/usb/input/wsl.c:159:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#249: FILE: drivers/usb/input/wsl.c:160:
+	wsl->dev.id.bustype=BUS_USB;
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#250: FILE: drivers/usb/input/wsl.c:161:
+	wsl->dev.id.vendor=le16_to_cpu(udev->descriptor.idVendor);
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#251: FILE: drivers/usb/input/wsl.c:162:
+	wsl->dev.id.product=le16_to_cpu(udev->descriptor.idProduct);
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#252: FILE: drivers/usb/input/wsl.c:163:
+	wsl->dev.id.version=le16_to_cpu(udev->descriptor.bcdDevice);
 	                   ^

CHECK:CAMELCASE: Avoid CamelCase: <bcdDevice>
#252: FILE: drivers/usb/input/wsl.c:163:
+	wsl->dev.id.version=le16_to_cpu(udev->descriptor.bcdDevice);

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#253: FILE: drivers/usb/input/wsl.c:164:
+	wsl->dev.dev=&intf->dev;
 	            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#253: FILE: drivers/usb/input/wsl.c:164:
+	wsl->dev.dev=&intf->dev;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#254: FILE: drivers/usb/input/wsl.c:165:
+	wsl->dev.private=wsl;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#255: FILE: drivers/usb/input/wsl.c:166:
+	wsl->dev.name="Wireless Security Lock";
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#256: FILE: drivers/usb/input/wsl.c:167:
+	wsl->dev.phys=wsl->phys;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#257: FILE: drivers/usb/input/wsl.c:168:
+	wsl->dev.open=wsl_open;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#258: FILE: drivers/usb/input/wsl.c:169:
+	wsl->dev.close=wsl_close;
 	              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: drivers/usb/input/wsl.c:170:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#263: FILE: drivers/usb/input/wsl.c:174:
+	wsl->dev.evbit[0]=BIT(EV_MSC)|BIT(EV_REP);
 	                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#263: FILE: drivers/usb/input/wsl.c:174:
+	wsl->dev.evbit[0]=BIT(EV_MSC)|BIT(EV_REP);
 	                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: drivers/usb/input/wsl.c:177:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#273: FILE: drivers/usb/input/wsl.c:184:
+	struct usb_wsl *wsl=usb_get_intfdata (intf);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#273: FILE: drivers/usb/input/wsl.c:184:
+	struct usb_wsl *wsl=usb_get_intfdata (intf);
 	                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: drivers/usb/input/wsl.c:185:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#295: FILE: drivers/usb/input/wsl.c:206:
+	int result=usb_register(&wsl_driver);
 	          ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#297: FILE: drivers/usb/input/wsl.c:208:
+	if (result==0)
 	          ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000164025.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 61 errors, 12 warnings, 8 checks, 262 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000164025.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
