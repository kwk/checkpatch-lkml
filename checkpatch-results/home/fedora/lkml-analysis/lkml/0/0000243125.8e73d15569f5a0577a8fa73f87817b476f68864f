WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#95: FILE: drivers/s390/char/vmwatchdog.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:REPEATED_WORD: Possible repeated word: 'which'
#101: FILE: drivers/s390/char/vmwatchdog.c:7:
+ * "IPL", which which cause an immediate reboot.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#112: FILE: drivers/s390/char/vmwatchdog.c:18:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#113: FILE: drivers/s390/char/vmwatchdog.c:19:
+#include <asm/uaccess.h>

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#123: FILE: drivers/s390/char/vmwatchdog.c:29:
+static int vmwdt_nowayout = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:SPLIT_STRING: quoted string split across lines
#133: FILE: drivers/s390/char/vmwatchdog.c:39:
+MODULE_PARM_DESC(conceal, "Enable the CONCEAL CP option while the watchdog "
+		" is active");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#136: FILE: drivers/s390/char/vmwatchdog.c:42:
+MODULE_PARM_DESC(nowayout, "Watchdog cannot be stopped once started"
+		" (default=CONFIG_WATCHDOG_NOWAYOUT)");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: drivers/s390/char/vmwatchdog.c:59:
+static int __diag288(enum vmwdt_func func, unsigned int timeout,
+			    char *cmd, size_t len)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#166: FILE: drivers/s390/char/vmwatchdog.c:72:
+	asm volatile (

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#167: FILE: drivers/s390/char/vmwatchdog.c:73:
+#ifdef __s390x__

Architecture specific defines should be avoided wherever
possible.

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#169: FILE: drivers/s390/char/vmwatchdog.c:75:
+		"1:	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#180: FILE: drivers/s390/char/vmwatchdog.c:86:
+		"1:	\n"

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#205: FILE: drivers/s390/char/vmwatchdog.c:111:
+	 * storage in case of a modular build */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#215: FILE: drivers/s390/char/vmwatchdog.c:121:
+	len = strlcpy(ebc_cmd, vmwdt_cmd, MAX_CMDLEN);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#224: FILE: drivers/s390/char/vmwatchdog.c:130:
+		printk(KERN_WARNING "%s: problem setting interval %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#225: FILE: drivers/s390/char/vmwatchdog.c:131:
+		printk(KERN_WARNING "%s: problem setting interval %d, "
+			"cmd %s\n", __FUNCTION__, vmwdt_interval,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#225: FILE: drivers/s390/char/vmwatchdog.c:131:
+			"cmd %s\n", __FUNCTION__, vmwdt_interval,

WARNING:LINE_SPACING: Missing a blank line after declarations
#234: FILE: drivers/s390/char/vmwatchdog.c:140:
+	int ret = __diag288(wdt_cancel, 0, "", 0);
+	if (ret) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#235: FILE: drivers/s390/char/vmwatchdog.c:141:
+		printk(KERN_WARNING "%s: problem disabling watchdog\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#236: FILE: drivers/s390/char/vmwatchdog.c:142:
+		printk(KERN_WARNING "%s: problem disabling watchdog\n",
+			__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#236: FILE: drivers/s390/char/vmwatchdog.c:142:
+			__FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#246: FILE: drivers/s390/char/vmwatchdog.c:152:
+	 * fails for some reason */

WARNING:MISPLACED_INIT: __initdata should be placed after ebc_begin[]
#247: FILE: drivers/s390/char/vmwatchdog.c:153:
+	static char __initdata ebc_begin[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#251: FILE: drivers/s390/char/vmwatchdog.c:157:
+		printk(KERN_INFO "z/VM watchdog not available\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#260: FILE: drivers/s390/char/vmwatchdog.c:166:
+	int ret;
+	if (test_and_set_bit(0, &vmwdt_is_open))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: drivers/s390/char/vmwatchdog.c:190:
+static int vmwdt_ioctl(struct inode *i, struct file *f,
+			  unsigned int cmd, unsigned long arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: drivers/s390/char/vmwatchdog.c:195:
+		if (copy_to_user((void __user *)arg, &vmwdt_info,
+					sizeof(vmwdt_info)))

WARNING:LINE_SPACING: Missing a blank line after declarations
#300: FILE: drivers/s390/char/vmwatchdog.c:206:
+			int options, ret;
+			if (get_user(options, (int __user *)arg))

WARNING:BRACES: braces {} are not necessary for single statement blocks
#308: FILE: drivers/s390/char/vmwatchdog.c:214:
+			if (options & WDIOS_ENABLECARD) {
+				ret = vmwdt_keepalive();
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#318: FILE: drivers/s390/char/vmwatchdog.c:224:
+			int interval;
+			if (get_user(interval, (int __user *)arg))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: drivers/s390/char/vmwatchdog.c:239:
+static ssize_t vmwdt_write(struct file *f, const char __user *buf,
+				size_t count, loff_t *ppos)

ERROR:SPACING: space required before the open parenthesis '('
#336: FILE: drivers/s390/char/vmwatchdog.c:242:
+	if(ppos != &f->f_pos)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#339: FILE: drivers/s390/char/vmwatchdog.c:245:
+	if(count) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#344: FILE: drivers/s390/char/vmwatchdog.c:250:
+			 * five months ago... */

WARNING:LINE_SPACING: Missing a blank line after declarations
#349: FILE: drivers/s390/char/vmwatchdog.c:255:
+				char c;
+				if (get_user(c, buf+i))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#349: FILE: drivers/s390/char/vmwatchdog.c:255:
+				if (get_user(c, buf+i))
 				                   ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#361: FILE: drivers/s390/char/vmwatchdog.c:267:
+static struct file_operations vmwdt_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000243125.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 26 warnings, 8 checks, 343 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000243125.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
