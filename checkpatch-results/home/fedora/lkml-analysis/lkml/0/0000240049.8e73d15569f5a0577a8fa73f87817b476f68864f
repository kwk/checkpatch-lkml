WARNING:TYPO_SPELLING: 'embeded' may be misspelled - perhaps 'embedded'?
#38: 
> the embeded double quote), which isn't much better.
      ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#47: 
them now, and for __setup for that matter.  Hope noone relies on it.
                                                 ^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#77: FILE: init/main.c:291:
+		if (val == param+strlen(param)+1)
 		                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#77: FILE: init/main.c:291:
+		if (val == param+strlen(param)+1)
 		                              ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#77: FILE: init/main.c:291:
+		if (val == param+strlen(param)+1)
[...]
+		else if (val == param+strlen(param)+2) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#79: FILE: init/main.c:293:
+		else if (val == param+strlen(param)+2) {
 		                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#79: FILE: init/main.c:293:
+		else if (val == param+strlen(param)+2) {
 		                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#81: FILE: init/main.c:295:
+			memmove(val-1, val, strlen(val)+1);
 			           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#81: FILE: init/main.c:295:
+			memmove(val-1, val, strlen(val)+1);
 			                               ^

CHECK:BRACES: Unbalanced braces around else statement
#83: FILE: init/main.c:297:
+		} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#84: FILE: init/main.c:298:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240049.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 3 warnings, 8 checks, 17 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240049.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
