WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
Appended patch adds the support for Intel dual-core detection and displaying

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#94: FILE: arch/i386/kernel/cpu/common.c:437:
+^Iint ^Iindex_msb, tmp;$

ERROR:SPACING: spaces required around that '<<=' (ctx:WxV)
#132: FILE: arch/i386/kernel/cpu/common.c:473:
+			tmp <<=1 ;
 			    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited before semicolon
#132: FILE: arch/i386/kernel/cpu/common.c:473:
+			tmp <<=1 ;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#142: FILE: arch/i386/kernel/cpu/common.c:483:
+			printk(KERN_INFO  "CPU: Processor Core ID: %d\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#197: FILE: arch/i386/kernel/cpu/proc.c:135:
+	/* Put new fields at the end to lower the probability of
+	   breaking user space parsers. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#197: FILE: arch/i386/kernel/cpu/proc.c:135:
+	   breaking user space parsers. */

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#267: FILE: arch/i386/kernel/smpboot.c:1050:
+	for (cpu = 0; cpu < NR_CPUS; cpu++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#292: FILE: arch/i386/kernel/smpboot.c:1080:
+			for (i = 0; i < NR_CPUS; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#295: FILE: arch/i386/kernel/smpboot.c:1083:
+				if (phys_proc_id[cpu] == phys_proc_id[i]) {
+					cpu_set(i, cpu_core_map[cpu]);
+				}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#313: FILE: arch/x86_64/kernel/setup.c:777:
+^Iint ^Iindex_msb, tmp;$

ERROR:SPACING: spaces required around that '<<=' (ctx:WxV)
#351: FILE: arch/x86_64/kernel/setup.c:816:
+			tmp <<=1 ;
 			    ^

WARNING:SPACING: space prohibited before semicolon
#351: FILE: arch/x86_64/kernel/setup.c:816:
+			tmp <<=1 ;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#360: FILE: arch/x86_64/kernel/setup.c:825:
+			printk(KERN_INFO  "CPU: Processor Core ID: %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#399: FILE: arch/x86_64/kernel/setup.c:882:
+ ^Ic->x86_num_cores = intel_num_cpu_cores(c);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#399: FILE: arch/x86_64/kernel/setup.c:882:
+ ^Ic->x86_num_cores = intel_num_cpu_cores(c);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: arch/x86_64/kernel/setup.c:882:
+ ^Ic->x86_num_cores = intel_num_cpu_cores(c);$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#413: FILE: arch/x86_64/kernel/setup.c:1190:
+	seq_printf(m, "\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#417: FILE: arch/x86_64/kernel/setup.c:1194:
+	/* Put new fields at the end to lower the probability of
+	   breaking user space parsers. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#417: FILE: arch/x86_64/kernel/setup.c:1194:
+	   breaking user space parsers. */

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#421: FILE: arch/x86_64/kernel/setup.c:1198:
+	seq_printf(m, "\n");

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#433: FILE: arch/x86_64/kernel/smpboot.c:62:
+u8 cpu_core_id[NR_CPUS] = { [0 ... NR_CPUS-1] = BAD_APICID };
                                           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#476: FILE: arch/x86_64/kernel/smpboot.c:843:
+	for (cpu = 0; cpu < NR_CPUS; cpu++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: arch/x86_64/kernel/smpboot.c:849:
+  ^I^Istruct cpuinfo_x86 *c = cpu_data + cpu;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#482: FILE: arch/x86_64/kernel/smpboot.c:849:
+  ^I^Istruct cpuinfo_x86 *c = cpu_data + cpu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: arch/x86_64/kernel/smpboot.c:849:
+  ^I^Istruct cpuinfo_x86 *c = cpu_data + cpu;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#499: FILE: arch/x86_64/kernel/smpboot.c:875:
+ ^I^Iif (c->x86_num_cores > 1) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#499: FILE: arch/x86_64/kernel/smpboot.c:875:
+ ^I^Iif (c->x86_num_cores > 1) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: arch/x86_64/kernel/smpboot.c:875:
+ ^I^Iif (c->x86_num_cores > 1) {$

CHECK:BRACES: braces {} should be used on all arms of this statement
#499: FILE: arch/x86_64/kernel/smpboot.c:875:
+ 		if (c->x86_num_cores > 1) {
[...]
+ 		} else
[...]

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#500: FILE: arch/x86_64/kernel/smpboot.c:876:
+			for (i = 0; i < NR_CPUS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: arch/x86_64/kernel/smpboot.c:879:
+ ^I^I^I^Iif (phys_proc_id[cpu] == phys_proc_id[i]) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#503: FILE: arch/x86_64/kernel/smpboot.c:879:
+ ^I^I^I^Iif (phys_proc_id[cpu] == phys_proc_id[i]) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: arch/x86_64/kernel/smpboot.c:879:
+ ^I^I^I^Iif (phys_proc_id[cpu] == phys_proc_id[i]) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#503: FILE: arch/x86_64/kernel/smpboot.c:879:
+ 				if (phys_proc_id[cpu] == phys_proc_id[i]) {
+ 					cpu_set(i, cpu_core_map[cpu]);
+ 				}

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: arch/x86_64/kernel/smpboot.c:880:
+ ^I^I^I^I^Icpu_set(i, cpu_core_map[cpu]);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#504: FILE: arch/x86_64/kernel/smpboot.c:880:
+ ^I^I^I^I^Icpu_set(i, cpu_core_map[cpu]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: arch/x86_64/kernel/smpboot.c:880:
+ ^I^I^I^I^Icpu_set(i, cpu_core_map[cpu]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#505: FILE: arch/x86_64/kernel/smpboot.c:881:
+ ^I^I^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#505: FILE: arch/x86_64/kernel/smpboot.c:881:
+ ^I^I^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: arch/x86_64/kernel/smpboot.c:881:
+ ^I^I^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#506: FILE: arch/x86_64/kernel/smpboot.c:882:
+ ^I^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#506: FILE: arch/x86_64/kernel/smpboot.c:882:
+ ^I^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: arch/x86_64/kernel/smpboot.c:882:
+ ^I^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#507: FILE: arch/x86_64/kernel/smpboot.c:883:
+ ^I^I} else$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#507: FILE: arch/x86_64/kernel/smpboot.c:883:
+ ^I^I} else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: arch/x86_64/kernel/smpboot.c:883:
+ ^I^I} else$

CHECK:BRACES: Unbalanced braces around else statement
#507: FILE: arch/x86_64/kernel/smpboot.c:883:
+ 		} else

ERROR:CODE_INDENT: code indent should use tabs where possible
#508: FILE: arch/x86_64/kernel/smpboot.c:884:
+ ^I^I^Icpu_core_map[cpu] = cpu_sibling_map[cpu];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#508: FILE: arch/x86_64/kernel/smpboot.c:884:
+ ^I^I^Icpu_core_map[cpu] = cpu_sibling_map[cpu];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: arch/x86_64/kernel/smpboot.c:884:
+ ^I^I^Icpu_core_map[cpu] = cpu_sibling_map[cpu];$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000190619.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 37 warnings, 3 checks, 427 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000190619.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
