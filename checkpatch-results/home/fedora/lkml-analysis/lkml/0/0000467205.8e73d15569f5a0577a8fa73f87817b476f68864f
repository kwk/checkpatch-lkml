WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
diff -urN linux-2.5.7-pre2/drivers/ide/ide-disk.c linux/drivers/ide/ide-disk.c

CHECK:SPACING: No space is necessary after a cast
#177: FILE: drivers/ide/ide-disk.c:197:
+			(struct hd_drive_task_hdr *) &args.tfRegister,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <tfRegister>
#177: FILE: drivers/ide/ide-disk.c:197:
+			(struct hd_drive_task_hdr *) &args.tfRegister,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#178: FILE: drivers/ide/ide-disk.c:198:
+			(struct hd_drive_hob_hdr *) &args.hobRegister,

CHECK:CAMELCASE: Avoid CamelCase: <hobRegister>
#178: FILE: drivers/ide/ide-disk.c:198:
+			(struct hd_drive_hob_hdr *) &args.hobRegister,

CHECK:SPACING: No space is necessary after a cast
#209: FILE: drivers/ide/ide-disk.c:243:
+			(struct hd_drive_task_hdr *) &args.tfRegister,

CHECK:SPACING: No space is necessary after a cast
#210: FILE: drivers/ide/ide-disk.c:244:
+			(struct hd_drive_hob_hdr *) &args.hobRegister,

CHECK:SPACING: No space is necessary after a cast
#241: FILE: drivers/ide/ide-disk.c:306:
+			(struct hd_drive_task_hdr *) &args.tfRegister,

CHECK:SPACING: No space is necessary after a cast
#242: FILE: drivers/ide/ide-disk.c:307:
+			(struct hd_drive_hob_hdr *) &args.hobRegister,

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#253: FILE: drivers/ide/ide-disk.c:318:
+static ide_startstop_t idedisk_do_request(ide_drive_t *drive, struct request *rq, unsigned long block)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#260: FILE: drivers/ide/ide-disk.c:325:
+		yield();

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'idedisk_do_request', this function's name, in a string
#265: FILE: drivers/ide/ide-disk.c:330:
+		blk_dump_rq_flags(rq, "idedisk_do_request - bad command");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#271: FILE: drivers/ide/ide-disk.c:336:
+		extern ide_startstop_t promise_rw_disk(ide_drive_t *, struct request *, unsigned long);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#271: FILE: drivers/ide/ide-disk.c:336:
+		extern ide_startstop_t promise_rw_disk(ide_drive_t *, struct request *, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#271: FILE: drivers/ide/ide-disk.c:336:
+		extern ide_startstop_t promise_rw_disk(ide_drive_t *, struct request *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#271: FILE: drivers/ide/ide-disk.c:336:
+		extern ide_startstop_t promise_rw_disk(ide_drive_t *, struct request *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#271: FILE: drivers/ide/ide-disk.c:336:
+		extern ide_startstop_t promise_rw_disk(ide_drive_t *, struct request *, unsigned long);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drive->addressing'
#277: FILE: drivers/ide/ide-disk.c:342:
+	if ((drive->id->cfs_enable_2 & 0x0400) && (drive->addressing))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LONG_LINE: line length of 197 exceeds 100 columns
#351: FILE: drivers/ide/ide-pci.c:232:
+	{PCI_VENDOR_ID_PROMISE, PCI_DEVICE_ID_PROMISE_20276, pci_init_pdc202xx, ata66_pdc202xx,	ide_init_pdc202xx, NULL, {{0x00,0x00,0x00}, {0x00,0x00,0x00}}, OFF_BOARD, 0, ATA_F_IRQ | ATA_F_DMA },

ERROR:SPACING: space required after that ',' (ctx:VxV)
#351: FILE: drivers/ide/ide-pci.c:232:
+	{PCI_VENDOR_ID_PROMISE, PCI_DEVICE_ID_PROMISE_20276, pci_init_pdc202xx, ata66_pdc202xx,	ide_init_pdc202xx, NULL, {{0x00,0x00,0x00}, {0x00,0x00,0x00}}, OFF_BOARD, 0, ATA_F_IRQ | ATA_F_DMA },
 	                                                                                       	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#351: FILE: drivers/ide/ide-pci.c:232:
+	{PCI_VENDOR_ID_PROMISE, PCI_DEVICE_ID_PROMISE_20276, pci_init_pdc202xx, ata66_pdc202xx,	ide_init_pdc202xx, NULL, {{0x00,0x00,0x00}, {0x00,0x00,0x00}}, OFF_BOARD, 0, ATA_F_IRQ | ATA_F_DMA },
 	                                                                                       	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#351: FILE: drivers/ide/ide-pci.c:232:
+	{PCI_VENDOR_ID_PROMISE, PCI_DEVICE_ID_PROMISE_20276, pci_init_pdc202xx, ata66_pdc202xx,	ide_init_pdc202xx, NULL, {{0x00,0x00,0x00}, {0x00,0x00,0x00}}, OFF_BOARD, 0, ATA_F_IRQ | ATA_F_DMA },
 	                                                                                       	                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#351: FILE: drivers/ide/ide-pci.c:232:
+	{PCI_VENDOR_ID_PROMISE, PCI_DEVICE_ID_PROMISE_20276, pci_init_pdc202xx, ata66_pdc202xx,	ide_init_pdc202xx, NULL, {{0x00,0x00,0x00}, {0x00,0x00,0x00}}, OFF_BOARD, 0, ATA_F_IRQ | ATA_F_DMA },
 	                                                                                       	                                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#391: FILE: drivers/ide/ide-taskfile.c:363:
+ide_startstop_t ata_taskfile(ide_drive_t *drive,
+		struct hd_drive_task_hdr *taskfile,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "handler"
#416: FILE: drivers/ide/ide-taskfile.c:399:
+	if (handler != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "prehandler"
#427: FILE: drivers/ide/ide-taskfile.c:407:
+		if (prehandler != NULL)

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#499: FILE: drivers/ide/ide.c:981:
+int ide_wait_stat(ide_startstop_t *startstop, ide_drive_t *drive, byte good, byte bad, unsigned long timeout) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#499: FILE: drivers/ide/ide.c:981:
+int ide_wait_stat(ide_startstop_t *startstop, ide_drive_t *drive, byte good, byte bad, unsigned long timeout) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#620: FILE: drivers/ide/ide.c:1089:
+				ata_taskfile(drive,
+						(struct hd_drive_task_hdr *)&args->tfRegister,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'args->command_type == IDE_DRIVE_TASK_RAW_WRITE'
#624: FILE: drivers/ide/ide.c:1093:
+				if (((args->command_type == IDE_DRIVE_TASK_RAW_WRITE) ||
+							(args->command_type == IDE_DRIVE_TASK_OUT)) &&
+						args->prehandler && args->handler)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'args->command_type == IDE_DRIVE_TASK_OUT'
#624: FILE: drivers/ide/ide.c:1093:
+				if (((args->command_type == IDE_DRIVE_TASK_RAW_WRITE) ||
+							(args->command_type == IDE_DRIVE_TASK_OUT)) &&
+						args->prehandler && args->handler)

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#625: FILE: drivers/ide/ide.c:1094:
+							(args->command_type == IDE_DRIVE_TASK_OUT)) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#625: FILE: drivers/ide/ide.c:1094:
+				if (((args->command_type == IDE_DRIVE_TASK_RAW_WRITE) ||
+							(args->command_type == IDE_DRIVE_TASK_OUT)) &&

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#634: FILE: drivers/ide/ide.c:1103:
+				if (!(args)) goto args_error;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#636: FILE: drivers/ide/ide.c:1105:
+				printk("%s: DRIVE_TASK_CMD ", drive->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#637: FILE: drivers/ide/ide.c:1106:
+				printk("cmd=0x%02x ", args[0]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#638: FILE: drivers/ide/ide.c:1107:
+				printk("fr=0x%02x ", args[1]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#639: FILE: drivers/ide/ide.c:1108:
+				printk("ns=0x%02x ", args[2]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#640: FILE: drivers/ide/ide.c:1109:
+				printk("sc=0x%02x ", args[3]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#641: FILE: drivers/ide/ide.c:1110:
+				printk("lcyl=0x%02x ", args[4]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#642: FILE: drivers/ide/ide.c:1111:
+				printk("hcyl=0x%02x ", args[5]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#643: FILE: drivers/ide/ide.c:1112:
+				printk("sel=0x%02x\n", args[6]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#657: FILE: drivers/ide/ide.c:1126:
+				byte *args = rq->buffer;
+				if (!(args)) goto args_error;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#657: FILE: drivers/ide/ide.c:1126:
+				if (!(args)) goto args_error;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#659: FILE: drivers/ide/ide.c:1128:
+				printk("%s: DRIVE_CMD ", drive->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#660: FILE: drivers/ide/ide.c:1129:
+				printk("cmd=0x%02x ", args[0]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#661: FILE: drivers/ide/ide.c:1130:
+				printk("sc=0x%02x ", args[1]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#662: FILE: drivers/ide/ide.c:1131:
+				printk("fr=0x%02x ", args[2]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#663: FILE: drivers/ide/ide.c:1132:
+				printk("xx=0x%02x\n", args[3]);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#668: FILE: drivers/ide/ide.c:1137:
+					OUT_BYTE(args[2],IDE_FEATURE_REG);
 					                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#669: FILE: drivers/ide/ide.c:1138:
+					OUT_BYTE(args[1],IDE_SECTOR_REG);
 					                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#674: FILE: drivers/ide/ide.c:1143:
+				OUT_BYTE(args[2],IDE_FEATURE_REG);
 				                ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#685: FILE: drivers/ide/ide.c:1154:
+			printk("%s: DRIVE_CMD (null)\n", drive->name);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#771: FILE: drivers/ide/pdc202xx.c:240:
 	switch(bmide_dev->device) {
[...]
+		case PCI_DEVICE_ID_PROMISE_20276:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#779: FILE: drivers/ide/pdc202xx.c:737:
 	switch(dev->device) {
[...]
+		case PCI_DEVICE_ID_PROMISE_20276:

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#787: FILE: drivers/ide/pdc202xx.c:995:
 	switch (dev->device) {
[...]
+		case PCI_DEVICE_ID_PROMISE_20276:

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#795: FILE: drivers/ide/pdc202xx.c:1128:
 	switch (dev->device) {
[...]
+		case PCI_DEVICE_ID_PROMISE_20276:

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#803: FILE: drivers/ide/pdc202xx.c:1223:
         switch(hwif->pci_dev->device) {
[...]
+		case PCI_DEVICE_ID_PROMISE_20276:

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#811: FILE: drivers/ide/pdc202xx.c:1242:
         switch(hwif->pci_dev->device) {
[...]
+		case PCI_DEVICE_ID_PROMISE_20276:

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#871: FILE: include/linux/ide.h:774:
+extern int ide_do_drive_cmd(ide_drive_t *drive, struct request *rq, ide_action_t action);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#888: FILE: include/linux/ide.h:802:
+extern ide_startstop_t ata_taskfile(ide_drive_t *drive,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#889: FILE: include/linux/ide.h:803:
+extern ide_startstop_t ata_taskfile(ide_drive_t *drive,
+		struct hd_drive_task_hdr *taskfile,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#902: FILE: include/linux/ide.h:843:
+extern void idedisk_input_data(ide_drive_t *drive, void *buffer, unsigned int wcount);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000467205.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 27 warnings, 20 checks, 808 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000467205.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
