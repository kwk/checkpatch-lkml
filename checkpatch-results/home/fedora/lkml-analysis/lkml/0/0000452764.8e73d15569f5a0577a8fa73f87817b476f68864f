WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: kernel/cpufreq.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#79: FILE: kernel/cpufreq.c:2:
+ *  linux/kernel/cpufreq.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#83: FILE: kernel/cpufreq.c:6:
+ *  $Id: cpufreq.c,v 1.21 2002/04/30 20:09:57 db Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#115: FILE: kernel/cpufreq.c:38:
+#include <asm/uaccess.h>

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#167: FILE: kernel/cpufreq.c:90:
+	max = simple_strtoul(str, &str, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#170: FILE: kernel/cpufreq.c:93:
+		max = simple_strtoul(str + 1, NULL, 0);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#181: FILE: kernel/cpufreq.c:104:
+__setup("cpufreq=", cpufreq_setup);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#205: FILE: kernel/cpufreq.c:128:
+EXPORT_SYMBOL(cpufreq_register_notifier);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#227: FILE: kernel/cpufreq.c:150:
+EXPORT_SYMBOL(cpufreq_unregister_notifier);

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: kernel/cpufreq.c:160:
+^I    ^Iloops_per_jiffy = scale(cpufreq_ref_loops, cpufreq_ref_freq,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#237: FILE: kernel/cpufreq.c:160:
+^I    ^Iloops_per_jiffy = scale(cpufreq_ref_loops, cpufreq_ref_freq,$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpufreq_restore', this function's name, in a string
#255: FILE: kernel/cpufreq.c:178:
+		panic("cpufreq_restore() called before initialisation!");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpufreq_restore', this function's name, in a string
#257: FILE: kernel/cpufreq.c:180:
+		panic("cpufreq_restore() called from interrupt context!");

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#280: FILE: kernel/cpufreq.c:203:
+EXPORT_SYMBOL_GPL(cpufreq_restore);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpufreq_set', this function's name, in a string
#306: FILE: kernel/cpufreq.c:229:
+		panic("cpufreq_set() called before initialisation!");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpufreq_set', this function's name, in a string
#308: FILE: kernel/cpufreq.c:231:
+		panic("cpufreq_set() called from interrupt context!");

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#378: FILE: kernel/cpufreq.c:301:
+EXPORT_SYMBOL_GPL(cpufreq_set);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#390: FILE: kernel/cpufreq.c:313:
+EXPORT_SYMBOL_GPL(cpufreq_setmax);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpufreq_get', this function's name, in a string
#401: FILE: kernel/cpufreq.c:324:
+		panic("cpufreq_get() called before initialisation!");

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#405: FILE: kernel/cpufreq.c:328:
+EXPORT_SYMBOL(cpufreq_get);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#410: FILE: kernel/cpufreq.c:333:
+cpufreq_procctl(ctl_table *ctl, int write, struct file *filp,
                                                         ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#431: FILE: kernel/cpufreq.c:354:
+		freq = simple_strtoul(buf, &p, 0);

WARNING:INDENTED_LABEL: labels should not be indented
#488: FILE: kernel/cpufreq.c:411:
+		ctl_name:	CPU_NR_FREQ_MAX,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#489: FILE: kernel/cpufreq.c:412:
+		procname:	"speed-max",
 		        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#489: FILE: kernel/cpufreq.c:412:
+		procname:	"speed-max",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#490: FILE: kernel/cpufreq.c:413:
+		data:		&cpufreq_max(0),
 		    ^

WARNING:INDENTED_LABEL: labels should not be indented
#490: FILE: kernel/cpufreq.c:413:
+		data:		&cpufreq_max(0),

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#491: FILE: kernel/cpufreq.c:414:
+		maxlen:		sizeof(cpufreq_max(0)),
 		      ^

WARNING:INDENTED_LABEL: labels should not be indented
#491: FILE: kernel/cpufreq.c:414:
+		maxlen:		sizeof(cpufreq_max(0)),

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#493: FILE: kernel/cpufreq.c:416:
+		proc_handler:	proc_dointvec,
 		            ^

WARNING:INDENTED_LABEL: labels should not be indented
#493: FILE: kernel/cpufreq.c:416:
+		proc_handler:	proc_dointvec,

WARNING:INDENTED_LABEL: labels should not be indented
#496: FILE: kernel/cpufreq.c:419:
+		ctl_name:	CPU_NR_FREQ_MIN,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#497: FILE: kernel/cpufreq.c:420:
+		procname:	"speed-min",
 		        ^

WARNING:INDENTED_LABEL: labels should not be indented
#497: FILE: kernel/cpufreq.c:420:
+		procname:	"speed-min",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#498: FILE: kernel/cpufreq.c:421:
+		data:		&cpufreq_min(0),
 		    ^

WARNING:INDENTED_LABEL: labels should not be indented
#498: FILE: kernel/cpufreq.c:421:
+		data:		&cpufreq_min(0),

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#499: FILE: kernel/cpufreq.c:422:
+		maxlen:		sizeof(cpufreq_min(0)),
 		      ^

WARNING:INDENTED_LABEL: labels should not be indented
#499: FILE: kernel/cpufreq.c:422:
+		maxlen:		sizeof(cpufreq_min(0)),

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#501: FILE: kernel/cpufreq.c:424:
+		proc_handler:	proc_dointvec,
 		            ^

WARNING:INDENTED_LABEL: labels should not be indented
#501: FILE: kernel/cpufreq.c:424:
+		proc_handler:	proc_dointvec,

WARNING:INDENTED_LABEL: labels should not be indented
#504: FILE: kernel/cpufreq.c:427:
+		ctl_name:	CPU_NR_FREQ,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#505: FILE: kernel/cpufreq.c:428:
+		procname:	"speed",
 		        ^

WARNING:INDENTED_LABEL: labels should not be indented
#505: FILE: kernel/cpufreq.c:428:
+		procname:	"speed",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#507: FILE: kernel/cpufreq.c:430:
+		proc_handler:	cpufreq_procctl,
 		            ^

WARNING:INDENTED_LABEL: labels should not be indented
#507: FILE: kernel/cpufreq.c:430:
+		proc_handler:	cpufreq_procctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#508: FILE: kernel/cpufreq.c:431:
+		strategy:	cpufreq_sysctl,
 		        ^

WARNING:INDENTED_LABEL: labels should not be indented
#508: FILE: kernel/cpufreq.c:431:
+		strategy:	cpufreq_sysctl,

WARNING:INDENTED_LABEL: labels should not be indented
#521: FILE: kernel/cpufreq.c:444:
+		ctl_name:	CPU_NR,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#522: FILE: kernel/cpufreq.c:445:
+		procname:	"0",
 		        ^

WARNING:INDENTED_LABEL: labels should not be indented
#522: FILE: kernel/cpufreq.c:445:
+		procname:	"0",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#524: FILE: kernel/cpufreq.c:447:
+		child:		ctl_cpu_vars,
 		     ^

WARNING:INDENTED_LABEL: labels should not be indented
#524: FILE: kernel/cpufreq.c:447:
+		child:		ctl_cpu_vars,

WARNING:INDENTED_LABEL: labels should not be indented
#533: FILE: kernel/cpufreq.c:456:
+		ctl_name:	CTL_CPU,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#534: FILE: kernel/cpufreq.c:457:
+		procname:	"cpu",
 		        ^

WARNING:INDENTED_LABEL: labels should not be indented
#534: FILE: kernel/cpufreq.c:457:
+		procname:	"cpu",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#536: FILE: kernel/cpufreq.c:459:
+		child:		ctl_cpu_nr,
 		     ^

WARNING:INDENTED_LABEL: labels should not be indented
#536: FILE: kernel/cpufreq.c:459:
+		child:		ctl_cpu_nr,

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#567: FILE: kernel/cpufreq.c:490:
+EXPORT_SYMBOL_GPL(cpufreq_setfunctions);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#585: FILE: kernel/cpufreq.c:508:
+^I * or if it is invalid, use the values determined $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#598: FILE: kernel/cpufreq.c:521:
+	printk(KERN_INFO "CPU clock: %d.%03d MHz (%d.%03d-%d.%03d MHz)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#599: FILE: kernel/cpufreq.c:522:
+	printk(KERN_INFO "CPU clock: %d.%03d MHz (%d.%03d-%d.%03d MHz)\n",
+		freq / 1000, freq % 1000,

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#613: FILE: kernel/cpufreq.c:536:
+EXPORT_SYMBOL_GPL(cpufreq_init);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#618: FILE: include/linux/cpufreq.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#619: FILE: include/linux/cpufreq.h:2:
+ *  linux/include/linux/cpufreq.h

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#623: FILE: include/linux/cpufreq.h:6:
+ * $Id: cpufreq.h,v 1.6 2002/04/30 20:09:56 db Exp $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452764.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 46 warnings, 2 checks, 645 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452764.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
