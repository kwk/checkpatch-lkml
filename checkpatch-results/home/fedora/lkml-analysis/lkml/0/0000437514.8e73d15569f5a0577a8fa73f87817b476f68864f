WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#62: FILE: drivers/pcmcia/yenta.c:8:
+ * ^IDynamically adjust the size of the bridge resource$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: drivers/pcmcia/yenta.c:9:
+ * ^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#63: FILE: drivers/pcmcia/yenta.c:9:
+ * ^I$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#77: FILE: drivers/pcmcia/yenta.c:718:
+#define BRIDGE_SIZE_MAX	4*1024*1024
                        	 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#77: FILE: drivers/pcmcia/yenta.c:718:
+#define BRIDGE_SIZE_MAX	4*1024*1024
                        	      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#77: FILE: drivers/pcmcia/yenta.c:718:
+#define BRIDGE_SIZE_MAX	4*1024*1024

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#78: FILE: drivers/pcmcia/yenta.c:719:
+#define BRIDGE_SIZE_MIN	16*1024
                        	  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#78: FILE: drivers/pcmcia/yenta.c:719:
+#define BRIDGE_SIZE_MIN	16*1024

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#91: FILE: drivers/pcmcia/yenta.c:754:
+		printk(KERN_INFO "yenta %s: Preassigned resource %d busy, reconfiguring...\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: drivers/pcmcia/yenta.c:755:
+		printk(KERN_INFO "yenta %s: Preassigned resource %d busy, reconfiguring...\n",
+				socket->dev->slot_name, nr);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#93: FILE: drivers/pcmcia/yenta.c:756:
+		res->start = res->end = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LINE_SPACING: Missing a blank line after declarations
#106: FILE: drivers/pcmcia/yenta.c:767:
+		int i;
+		align = size = BRIDGE_SIZE_MAX;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#106: FILE: drivers/pcmcia/yenta.c:767:
+		align = size = BRIDGE_SIZE_MAX;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#107: FILE: drivers/pcmcia/yenta.c:768:
+		if (size > avail/8) {
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#108: FILE: drivers/pcmcia/yenta.c:769:
+			size=(avail+1)/8;
 			    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#108: FILE: drivers/pcmcia/yenta.c:769:
+			size=(avail+1)/8;
 			           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#108: FILE: drivers/pcmcia/yenta.c:769:
+			size=(avail+1)/8;
 			              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#123: FILE: drivers/pcmcia/yenta.c:783:
+		printk(KERN_INFO "yenta %s: no resource of type %x available, trying to continue...\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: drivers/pcmcia/yenta.c:784:
+		printk(KERN_INFO "yenta %s: no resource of type %x available, trying to continue...\n",
+				socket->dev->slot_name, type);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#125: FILE: drivers/pcmcia/yenta.c:785:
+		res->start = res->end = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#140: FILE: drivers/pcmcia/yenta.c:810:
+	int i;
+	for (i=0;i<4;i++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#140: FILE: drivers/pcmcia/yenta.c:810:
+	for (i=0;i<4;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#140: FILE: drivers/pcmcia/yenta.c:810:
+	for (i=0;i<4;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#140: FILE: drivers/pcmcia/yenta.c:810:
+	for (i=0;i<4;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#140: FILE: drivers/pcmcia/yenta.c:810:
+	for (i=0;i<4;i++) {
 	            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#142: FILE: drivers/pcmcia/yenta.c:812:
+		struct resource *res;
+		res = socket->dev->resource + PCI_BRIDGE_RESOURCES + i;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#145: FILE: drivers/pcmcia/yenta.c:815:
+		res->start = res->end = 0;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#148: FILE: drivers/pcmcia/yenta.c:818:
+}
+/*

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000437514.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 7 warnings, 13 checks, 100 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000437514.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
