WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Content-Disposition: attachment; filename=crashdump-parse-core-elf32-headers.patch

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Ehdr>
#69: FILE: fs/proc/vmcore.c:209:
+	Elf32_Ehdr *ehdr_ptr;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Phdr>
#70: FILE: fs/proc/vmcore.c:210:
+	Elf32_Phdr *phdr_ptr;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#73: FILE: fs/proc/vmcore.c:213:
+	phdr_ptr = (Elf32_Phdr*)(elfptr + sizeof(Elf32_Ehdr));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#91: FILE: fs/proc/vmcore.c:305:
+static int __init merge_note_headers_elf32(char *elfptr, size_t *elfsz,
+						struct list_head *vc_list)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#93: FILE: fs/proc/vmcore.c:307:
+	int i, nr_ptnote=0, rc=0;
 	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#93: FILE: fs/proc/vmcore.c:307:
+	int i, nr_ptnote=0, rc=0;
 	                      ^

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Nhdr>
#97: FILE: fs/proc/vmcore.c:311:
+	Elf32_Nhdr *nhdr_ptr;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#101: FILE: fs/proc/vmcore.c:315:
+	phdr_ptr = (Elf32_Phdr*)(elfptr + sizeof(Elf32_Ehdr));

WARNING:LINE_SPACING: Missing a blank line after declarations
#107: FILE: fs/proc/vmcore.c:321:
+		u64 offset, max_sz, sz, real_sz = 0;
+		if (phdr_ptr->p_type != PT_NOTE)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#128: FILE: fs/proc/vmcore.c:342:
+			nhdr_ptr = (Elf32_Nhdr*)((char*)nhdr_ptr + sz);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#128: FILE: fs/proc/vmcore.c:342:
+			nhdr_ptr = (Elf32_Nhdr*)((char*)nhdr_ptr + sz);

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#148: FILE: fs/proc/vmcore.c:362:
+			(ehdr_ptr->e_phnum - nr_ptnote +1) * sizeof(Elf32_Phdr);
 			                               ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#150: FILE: fs/proc/vmcore.c:364:
+	phdr.p_vaddr   = phdr.p_paddr = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#151: FILE: fs/proc/vmcore.c:365:
+	phdr.p_filesz  = phdr.p_memsz = phdr_sz;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#162: FILE: fs/proc/vmcore.c:376:
+	memmove(tmp, tmp+i, ((*elfsz)-sizeof(Elf32_Ehdr)-sizeof(Elf32_Phdr)));
 	                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#162: FILE: fs/proc/vmcore.c:376:
+	memmove(tmp, tmp+i, ((*elfsz)-sizeof(Elf32_Ehdr)-sizeof(Elf32_Phdr)));
 	                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#162: FILE: fs/proc/vmcore.c:376:
+	memmove(tmp, tmp+i, ((*elfsz)-sizeof(Elf32_Ehdr)-sizeof(Elf32_Phdr)));
 	                                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: fs/proc/vmcore.c:424:
+static int __init process_ptload_program_headers_elf32(char *elfptr,
+						size_t elfsz,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#188: FILE: fs/proc/vmcore.c:434:
+	phdr_ptr = (Elf32_Phdr*)(elfptr + sizeof(Elf32_Ehdr)); /* PT_NOTE hdr */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: fs/proc/vmcore.c:482:
+static void __init set_vmcore_list_offsets_elf32(char *elfptr,
+						struct list_head *vc_list)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#250: FILE: fs/proc/vmcore.c:558:
+	int rc=0;
 	      ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#257: FILE: fs/proc/vmcore.c:565:
+	rc = read_from_oldmem((char*)&ehdr, sizeof(Elf32_Ehdr), &addr, 0);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ehdr.e_type != ET_CORE'
#262: FILE: fs/proc/vmcore.c:570:
+	if (memcmp(ehdr.e_ident, ELFMAG, SELFMAG) != 0 ||
+		(ehdr.e_type != ET_CORE) ||
+		!elf_check_arch(&ehdr) ||
+		ehdr.e_ident[EI_CLASS] != ELFCLASS32||
+		ehdr.e_ident[EI_VERSION] != EV_CURRENT ||
+		ehdr.e_version != EV_CURRENT ||
+		ehdr.e_ehsize != sizeof(Elf32_Ehdr) ||
+		ehdr.e_phentsize != sizeof(Elf32_Phdr) ||
+		ehdr.e_phnum == 0) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: fs/proc/vmcore.c:571:
+	if (memcmp(ehdr.e_ident, ELFMAG, SELFMAG) != 0 ||
+		(ehdr.e_type != ET_CORE) ||

ERROR:SPACING: spaces required around that '||' (ctx:VxE)
#265: FILE: fs/proc/vmcore.c:573:
+		ehdr.e_ident[EI_CLASS] != ELFCLASS32||
 		                                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#271: FILE: fs/proc/vmcore.c:579:
+		printk(KERN_WARNING "Warning: Core image elf header is not"

WARNING:SPLIT_STRING: quoted string split across lines
#272: FILE: fs/proc/vmcore.c:580:
+		printk(KERN_WARNING "Warning: Core image elf header is not"
+					"sane\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#272: FILE: fs/proc/vmcore.c:580:
+		printk(KERN_WARNING "Warning: Core image elf header is not"
+					"sane\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: fs/proc/vmcore.c:603:
+	rc = process_ptload_program_headers_elf32(elfcorebuf, elfcorebuf_sz,
+								&vmcore_list);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000195296.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 5 warnings, 15 checks, 254 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000195296.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
