CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#47: FILE: include/linux/kmod.h:28:
+extern int request_module_fmt(const char *fmt, ...)

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#48: FILE: include/linux/kmod.h:29:
+     __attribute__ ((format (printf, 1, 2)));$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#48: FILE: include/linux/kmod.h:29:
+     __attribute__ ((format (printf, 1, 2)));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#52: FILE: include/linux/kmod.h:33:
+     __attribute__ ((format (printf, 1, 2))) { return -ENOSYS; }$

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#52: FILE: include/linux/kmod.h:33:
+     __attribute__ ((format (printf, 1, 2))) { return -ENOSYS; }

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#52: FILE: include/linux/kmod.h:33:
+     __attribute__ ((format (printf, 1, 2))) { return -ENOSYS; }

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#70: FILE: kernel/kmod.c:120:
+	name[sizeof(name)-1] = 0;
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#73: FILE: kernel/kmod.c:123:
+	ret = vsnprintf(name, sizeof(name)-1, fmt, args);
 	                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#76: FILE: kernel/kmod.c:126:
+	if (ret >= sizeof(name)-1) {
 	                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#77: FILE: kernel/kmod.c:127:
+		printk(KERN_WARNING "Module name \"%s\"... too long.\n",

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#84: FILE: kernel/kmod.c:134:
+EXPORT_SYMBOL(request_module);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#85: FILE: kernel/kmod.c:135:
+EXPORT_SYMBOL(request_module_fmt);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000369342.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 8 warnings, 4 checks, 49 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000369342.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
