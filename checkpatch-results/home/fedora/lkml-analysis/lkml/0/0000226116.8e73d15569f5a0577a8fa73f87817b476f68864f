WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#103: FILE: drivers/usb/host/ehci-q.c:89:
+	BUG_ON(qh->qh_state != QH_STATE_IDLE);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#113: FILE: drivers/usb/host/ehci-q.c:100:
+qh_refresh (struct ehci_hcd *ehci, struct ehci_qh *qh)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#117: FILE: drivers/usb/host/ehci-q.c:104:
+	if (list_empty (&qh->qtd_list))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&qh->qtd_list'
#117: FILE: drivers/usb/host/ehci-q.c:104:
+	if (list_empty (&qh->qtd_list))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: braces {} should be used on all arms of this statement
#117: FILE: drivers/usb/host/ehci-q.c:104:
+	if (list_empty (&qh->qtd_list))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#119: FILE: drivers/usb/host/ehci-q.c:106:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#120: FILE: drivers/usb/host/ehci-q.c:107:
+		qtd = list_entry (qh->qtd_list.next,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#121: FILE: drivers/usb/host/ehci-q.c:108:
+		qtd = list_entry (qh->qtd_list.next,
+				struct ehci_qtd, qtd_list);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'qtd->qtd_dma'
#123: FILE: drivers/usb/host/ehci-q.c:110:
+		if (cpu_to_le32 (qtd->qtd_dma) == qh->hw_current)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#127: FILE: drivers/usb/host/ehci-q.c:114:
+		qh_update (ehci, qh, qtd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#137: FILE: drivers/usb/host/ehci-q.c:247:
+static void start_unlink_async (struct ehci_hcd *ehci, struct ehci_qh *qh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#167: FILE: drivers/usb/host/ehci-q.c:401:
+			start_unlink_async (ehci, qh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#192: FILE: drivers/usb/host/ehci-q.c:981:
+		qh_refresh (ehci, qh);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000226116.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 8 warnings, 5 checks, 96 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000226116.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
