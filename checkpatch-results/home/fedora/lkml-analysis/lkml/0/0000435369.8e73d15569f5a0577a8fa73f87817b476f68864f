WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
# ls /proc/edd/

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
# cat /proc/edd/80

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# cat /proc/edd/81

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
Warning: Spec violation.  Device Path checksum invalid (0x4b should be 0x00).

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#97: 
#1 US Linux Server provider for 2001 and Q1-2/2002! (IDC Aug 2002)

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#123: 
--- a/Documentation/i386/zero-page.txt	Tue Sep  3 15:06:13 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: arch/i386/boot/setup.S:47:
+ *    $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: arch/i386/boot/setup.S:58:
+#include <asm/edd.h>    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: arch/i386/boot/setup.S:552:
+edd_start:  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: arch/i386/boot/setup.S:556:
+^I^I^I^I^I^I# kept just before that    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: arch/i386/boot/setup.S:573:
+        $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: arch/i386/boot/setup.S:574:
+edd_get_device_params:  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: arch/i386/boot/setup.S:588:
+    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: arch/i386/boot/setup.S:589:
+edd_done:   $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#268: FILE: arch/i386/kernel/edd.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#307: FILE: arch/i386/kernel/edd.c:40:
+/* Don't need to keep a pointer to edd_info here because
+   it will get passed in to edd_read for us.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#320: FILE: arch/i386/kernel/edd.c:53:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#326: FILE: arch/i386/kernel/edd.c:59:
+	if (len <= off+count) *eof = 1;
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#326: FILE: arch/i386/kernel/edd.c:59:
+	if (len <= off+count) *eof = 1;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#329: FILE: arch/i386/kernel/edd.c:62:
+	if (len>count) len = count;
 	       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#329: FILE: arch/i386/kernel/edd.c:62:
+	if (len>count) len = count;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#330: FILE: arch/i386/kernel/edd.c:63:
+	if (len<0) len = 0;
 	       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#330: FILE: arch/i386/kernel/edd.c:63:
+	if (len<0) len = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: arch/i386/kernel/edd.c:70:
+        char *orig_b = b;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: arch/i386/kernel/edd.c:70:
+        char *orig_b = b;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#340: FILE: arch/i386/kernel/edd.c:73:
+	unsigned long column=0;
 	                    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#343: FILE: arch/i386/kernel/edd.c:76:
+	const char maxcolumn = 16;
+	while (length_printed < length) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: arch/i386/kernel/edd.c:80:
+^I^I     column < maxcolumn && length_printed < length; $

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#348: FILE: arch/i386/kernel/edd.c:81:
+		     column ++) {
 		            ^

CHECK:SPACING: No space is necessary after a cast
#349: FILE: arch/i386/kernel/edd.c:82:
+			b1 += sprintf(b1, "%02x ",(unsigned char) *p);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#349: FILE: arch/i386/kernel/edd.c:82:
+			b1 += sprintf(b1, "%02x ",(unsigned char) *p);
 			                         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#350: FILE: arch/i386/kernel/edd.c:83:
+			if (*p < 32 || *p > 126) c = '.';

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#351: FILE: arch/i386/kernel/edd.c:84:
+			else c = *p;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#357: FILE: arch/i386/kernel/edd.c:90:
+		for (; column < maxcolumn; column++)
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: arch/i386/kernel/edd.c:98:
+        return (b - orig_b);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: arch/i386/kernel/edd.c:98:
+        return (b - orig_b);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#368: FILE: arch/i386/kernel/edd.c:101:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#378: FILE: arch/i386/kernel/edd.c:111:
+	struct edd_info *edd=(struct edd_info *)data;
 	                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: arch/i386/kernel/edd.c:112:
+        int i, warn_padding=0, nonzero_path=0, warn_key=0, warn_checksum=0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: arch/i386/kernel/edd.c:112:
+        int i, warn_padding=0, nonzero_path=0, warn_key=0, warn_checksum=0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#379: FILE: arch/i386/kernel/edd.c:112:
+        int i, warn_padding=0, nonzero_path=0, warn_key=0, warn_checksum=0;
                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#379: FILE: arch/i386/kernel/edd.c:112:
+        int i, warn_padding=0, nonzero_path=0, warn_key=0, warn_checksum=0;
                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#379: FILE: arch/i386/kernel/edd.c:112:
+        int i, warn_padding=0, nonzero_path=0, warn_key=0, warn_checksum=0;
                                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#379: FILE: arch/i386/kernel/edd.c:112:
+        int i, warn_padding=0, nonzero_path=0, warn_key=0, warn_checksum=0;
                                                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: arch/i386/kernel/edd.c:113:
+        uint8_t checksum=0, c=0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: arch/i386/kernel/edd.c:113:
+        uint8_t checksum=0, c=0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#380: FILE: arch/i386/kernel/edd.c:113:
+        uint8_t checksum=0, c=0;
                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#380: FILE: arch/i386/kernel/edd.c:113:
+        uint8_t checksum=0, c=0;
                              ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#380: FILE: arch/i386/kernel/edd.c:113:
+        uint8_t checksum=0, c=0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: arch/i386/kernel/edd.c:114:
+        char *p = page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: arch/i386/kernel/edd.c:114:
+        char *p = page;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: arch/i386/kernel/edd.c:115:
+        enum _bus_type {bus_type_unknown,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: arch/i386/kernel/edd.c:115:
+        enum _bus_type {bus_type_unknown,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: arch/i386/kernel/edd.c:116:
+                        isa, pci, pcix,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: arch/i386/kernel/edd.c:116:
+                        isa, pci, pcix,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: arch/i386/kernel/edd.c:118:
+        enum _interface_type {interface_type_unknown,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: arch/i386/kernel/edd.c:118:
+        enum _interface_type {interface_type_unknown,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: arch/i386/kernel/edd.c:119:
+                              ata, atapi, scsi, usb,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: arch/i386/kernel/edd.c:119:
+                              ata, atapi, scsi, usb,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#387: FILE: arch/i386/kernel/edd.c:120:
+                              i1394, fibre, i2o, raid, sata}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: arch/i386/kernel/edd.c:120:
+                              i1394, fibre, i2o, raid, sata}$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: arch/i386/kernel/edd.c:121:
+        interface_type = interface_type_unknown; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: arch/i386/kernel/edd.c:121:
+        interface_type = interface_type_unknown; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: arch/i386/kernel/edd.c:121:
+        interface_type = interface_type_unknown; $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#391: FILE: arch/i386/kernel/edd.c:124:
+		*eof=1;
 		    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#394: FILE: arch/i386/kernel/edd.c:127:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: arch/i386/kernel/edd.c:127:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: arch/i386/kernel/edd.c:127:
+        $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#399: FILE: arch/i386/kernel/edd.c:132:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#404: FILE: arch/i386/kernel/edd.c:137:
+^I^Icase 0x21: $

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: arch/i386/kernel/edd.c:143:
+                default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: arch/i386/kernel/edd.c:144:
+                        p += sprintf(p, "(unknown version %xh)\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: arch/i386/kernel/edd.c:144:
+                        p += sprintf(p, "(unknown version %xh)\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: arch/i386/kernel/edd.c:145:
+                                     edd->version);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: arch/i386/kernel/edd.c:145:
+                                     edd->version);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: arch/i386/kernel/edd.c:146:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: arch/i386/kernel/edd.c:146:
+                        break;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#415: FILE: arch/i386/kernel/edd.c:148:
+^I^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#417: FILE: arch/i386/kernel/edd.c:150:
+		if (edd->interface_support & EDD_EXT_FIXED_DISK_ACCESS) {
+			p += sprintf(p, "\tFixed disk access\n");
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#420: FILE: arch/i386/kernel/edd.c:153:
+		if (edd->interface_support & EDD_EXT_DEVICE_LOCKING_AND_EJECTING) {
+			p += sprintf(p, "\tDevice locking and ejecting\n");
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#423: FILE: arch/i386/kernel/edd.c:156:
+		if (edd->interface_support & EDD_EXT_ENHANCED_DISK_DRIVE_SUPPORT) {
+			p += sprintf(p, "\tEnhanced Disk Drive support\n");
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#426: FILE: arch/i386/kernel/edd.c:159:
+		if (edd->interface_support & EDD_EXT_64BIT_EXTENSIONS) {
+			p += sprintf(p, "\t64-bit extensions\n");
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#429: FILE: arch/i386/kernel/edd.c:162:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: arch/i386/kernel/edd.c:173:
+^I^I^Ip += sprintf(p, "\tmedia_change_notification\n"); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#447: FILE: arch/i386/kernel/edd.c:180:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: arch/i386/kernel/edd.c:189:
+        /* Spec violation here.  Adaptec AIC7899 returns 0xDDBE$

ERROR:CODE_INDENT: code indent should use tabs where possible
#457: FILE: arch/i386/kernel/edd.c:190:
+           here, when it should be (per spec) 0xBEDD.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#457: FILE: arch/i386/kernel/edd.c:190:
+        /* Spec violation here.  Adaptec AIC7899 returns 0xDDBE
+           here, when it should be (per spec) 0xBEDD.

ERROR:CODE_INDENT: code indent should use tabs where possible
#458: FILE: arch/i386/kernel/edd.c:191:
+        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#459: FILE: arch/i386/kernel/edd.c:192:
+        if (edd->params.key == 0xDDBE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: arch/i386/kernel/edd.c:192:
+        if (edd->params.key == 0xDDBE) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#459: FILE: arch/i386/kernel/edd.c:192:
+        if (edd->params.key == 0xDDBE) {
+		warn_key=1;
+        }

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#460: FILE: arch/i386/kernel/edd.c:193:
+		warn_key=1;
 		        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: arch/i386/kernel/edd.c:194:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: arch/i386/kernel/edd.c:194:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: arch/i386/kernel/edd.c:196:
+        if (! (edd->params.key == 0xBEDD || edd->params.key == 0xDDBE)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: arch/i386/kernel/edd.c:196:
+        if (! (edd->params.key == 0xBEDD || edd->params.key == 0xDDBE)) {$

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#463: FILE: arch/i386/kernel/edd.c:196:
+        if (! (edd->params.key == 0xBEDD || edd->params.key == 0xDDBE)) {
             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#468: FILE: arch/i386/kernel/edd.c:201:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#468: FILE: arch/i386/kernel/edd.c:201:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: arch/i386/kernel/edd.c:201:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#469: FILE: arch/i386/kernel/edd.c:202:
+        for (i=30; i<=73; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: arch/i386/kernel/edd.c:202:
+        for (i=30; i<=73; i++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#469: FILE: arch/i386/kernel/edd.c:202:
+        for (i=30; i<=73; i++) {
               ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#469: FILE: arch/i386/kernel/edd.c:202:
+        for (i=30; i<=73; i++) {
                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#470: FILE: arch/i386/kernel/edd.c:203:
+		c = *(((uint8_t *)edd)+i+4);
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#470: FILE: arch/i386/kernel/edd.c:203:
+		c = *(((uint8_t *)edd)+i+4);
 		                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#471: FILE: arch/i386/kernel/edd.c:204:
+		if (c) nonzero_path++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: arch/i386/kernel/edd.c:205:
+                checksum += c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: arch/i386/kernel/edd.c:205:
+                checksum += c;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#473: FILE: arch/i386/kernel/edd.c:206:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: arch/i386/kernel/edd.c:206:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#474: FILE: arch/i386/kernel/edd.c:207:
+        if (checksum) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: arch/i386/kernel/edd.c:207:
+        if (checksum) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#475: FILE: arch/i386/kernel/edd.c:208:
+		warn_checksum=1;
 		             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: arch/i386/kernel/edd.c:209:
+                if (!nonzero_path) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: arch/i386/kernel/edd.c:209:
+                if (!nonzero_path) {$

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#477: FILE: arch/i386/kernel/edd.c:210:
+			p += sprintf(p, "Warning: Spec violation.  Device Path checksum invalid (0x%02x should be 0x00).\n", checksum);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: arch/i386/kernel/edd.c:215:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: arch/i386/kernel/edd.c:215:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#483: FILE: arch/i386/kernel/edd.c:216:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: arch/i386/kernel/edd.c:216:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: arch/i386/kernel/edd.c:216:
+        $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#484: FILE: arch/i386/kernel/edd.c:217:
+        
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: arch/i386/kernel/edd.c:218:
+        /* Spec violation here.  Adaptec AIC7899 has 0x00 (NULL) bytes for $

ERROR:CODE_INDENT: code indent should use tabs where possible
#485: FILE: arch/i386/kernel/edd.c:218:
+        /* Spec violation here.  Adaptec AIC7899 has 0x00 (NULL) bytes for $

ERROR:CODE_INDENT: code indent should use tabs where possible
#486: FILE: arch/i386/kernel/edd.c:219:
+           padding instead of 0x20 (space) bytes. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#486: FILE: arch/i386/kernel/edd.c:219:
+        /* Spec violation here.  Adaptec AIC7899 has 0x00 (NULL) bytes for 
+           padding instead of 0x20 (space) bytes. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#486: FILE: arch/i386/kernel/edd.c:219:
+           padding instead of 0x20 (space) bytes. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#488: FILE: arch/i386/kernel/edd.c:221:
+        p += sprintf(p, "host_bus: ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: arch/i386/kernel/edd.c:221:
+        p += sprintf(p, "host_bus: ");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: arch/i386/kernel/edd.c:222:
+        for (i=0; i<4; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: arch/i386/kernel/edd.c:222:
+        for (i=0; i<4; i++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#489: FILE: arch/i386/kernel/edd.c:222:
+        for (i=0; i<4; i++) {
               ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#489: FILE: arch/i386/kernel/edd.c:222:
+        for (i=0; i<4; i++) {
                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: arch/i386/kernel/edd.c:223:
+                if (isprint(edd->params.host_bus_type[i])) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: arch/i386/kernel/edd.c:223:
+                if (isprint(edd->params.host_bus_type[i])) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#491: FILE: arch/i386/kernel/edd.c:224:
+                        p += sprintf(p, "%c", edd->params.host_bus_type[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: arch/i386/kernel/edd.c:224:
+                        p += sprintf(p, "%c", edd->params.host_bus_type[i]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#492: FILE: arch/i386/kernel/edd.c:225:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: arch/i386/kernel/edd.c:225:
+                } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#493: FILE: arch/i386/kernel/edd.c:226:
+                        p += sprintf(p, " ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: arch/i386/kernel/edd.c:226:
+                        p += sprintf(p, " ");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#494: FILE: arch/i386/kernel/edd.c:227:
+                        warn_padding++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: arch/i386/kernel/edd.c:227:
+                        warn_padding++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#495: FILE: arch/i386/kernel/edd.c:228:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: arch/i386/kernel/edd.c:228:
+                }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#497: FILE: arch/i386/kernel/edd.c:230:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: arch/i386/kernel/edd.c:230:
+                $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#497: FILE: arch/i386/kernel/edd.c:230:
+
+                

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: arch/i386/kernel/edd.c:230:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#498: FILE: arch/i386/kernel/edd.c:231:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: arch/i386/kernel/edd.c:231:
+        }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#498: FILE: arch/i386/kernel/edd.c:231:
+                
+        }

ERROR:CODE_INDENT: code indent should use tabs where possible
#500: FILE: arch/i386/kernel/edd.c:233:
+        /* Print interface path information */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#501: FILE: arch/i386/kernel/edd.c:234:
+        if (!strncmp(edd->params.host_bus_type, "ISA", 3)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: arch/i386/kernel/edd.c:234:
+        if (!strncmp(edd->params.host_bus_type, "ISA", 3)) {$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#501: FILE: arch/i386/kernel/edd.c:234:
+        if (!strncmp(edd->params.host_bus_type, "ISA", 3)) {
[...]
+        } else if (!strncmp(edd->params.host_bus_type, "PCIX", 4)) {
[...]
+        } else if (!strncmp(edd->params.host_bus_type, "PCI", 3)) {
[...]
+        } else if (!strncmp(edd->params.host_bus_type, "IBND", 4)) {
[...]
+        } else if (!strncmp(edd->params.host_bus_type, "XPRS", 4)) {
[...]
+        } else if (!strncmp(edd->params.host_bus_type, "HTPT", 4)) {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#502: FILE: arch/i386/kernel/edd.c:235:
+                bus_type = isa;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: arch/i386/kernel/edd.c:235:
+                bus_type = isa;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: arch/i386/kernel/edd.c:236:
+        } else if (!strncmp(edd->params.host_bus_type, "PCIX", 4)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: arch/i386/kernel/edd.c:236:
+        } else if (!strncmp(edd->params.host_bus_type, "PCIX", 4)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: arch/i386/kernel/edd.c:237:
+                bus_type = pcix;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: arch/i386/kernel/edd.c:237:
+                bus_type = pcix;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#505: FILE: arch/i386/kernel/edd.c:238:
+        } else if (!strncmp(edd->params.host_bus_type, "PCI", 3)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: arch/i386/kernel/edd.c:238:
+        } else if (!strncmp(edd->params.host_bus_type, "PCI", 3)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#506: FILE: arch/i386/kernel/edd.c:239:
+                bus_type = pci;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: arch/i386/kernel/edd.c:239:
+                bus_type = pci;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#507: FILE: arch/i386/kernel/edd.c:240:
+        } else if (!strncmp(edd->params.host_bus_type, "IBND", 4)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: arch/i386/kernel/edd.c:240:
+        } else if (!strncmp(edd->params.host_bus_type, "IBND", 4)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#508: FILE: arch/i386/kernel/edd.c:241:
+                bus_type = ibnd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: arch/i386/kernel/edd.c:241:
+                bus_type = ibnd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#509: FILE: arch/i386/kernel/edd.c:242:
+        } else if (!strncmp(edd->params.host_bus_type, "XPRS", 4)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: arch/i386/kernel/edd.c:242:
+        } else if (!strncmp(edd->params.host_bus_type, "XPRS", 4)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#510: FILE: arch/i386/kernel/edd.c:243:
+                bus_type = xprs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: arch/i386/kernel/edd.c:243:
+                bus_type = xprs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#511: FILE: arch/i386/kernel/edd.c:244:
+        } else if (!strncmp(edd->params.host_bus_type, "HTPT", 4)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: arch/i386/kernel/edd.c:244:
+        } else if (!strncmp(edd->params.host_bus_type, "HTPT", 4)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#512: FILE: arch/i386/kernel/edd.c:245:
+                bus_type = htpt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: arch/i386/kernel/edd.c:245:
+                bus_type = htpt;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#513: FILE: arch/i386/kernel/edd.c:246:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: arch/i386/kernel/edd.c:246:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#514: FILE: arch/i386/kernel/edd.c:247:
+        switch (bus_type) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: arch/i386/kernel/edd.c:247:
+        switch (bus_type) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#515: FILE: arch/i386/kernel/edd.c:248:
+        case isa:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: arch/i386/kernel/edd.c:248:
+        case isa:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#516: FILE: arch/i386/kernel/edd.c:249:
+                p += sprintf(p, "\tbase_address: %x\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: arch/i386/kernel/edd.c:249:
+                p += sprintf(p, "\tbase_address: %x\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#517: FILE: arch/i386/kernel/edd.c:250:
+                             edd->params.interface_path.isa.base_address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: arch/i386/kernel/edd.c:250:
+                             edd->params.interface_path.isa.base_address);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#518: FILE: arch/i386/kernel/edd.c:251:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: arch/i386/kernel/edd.c:251:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#519: FILE: arch/i386/kernel/edd.c:252:
+        case pci:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: arch/i386/kernel/edd.c:252:
+        case pci:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#521: FILE: arch/i386/kernel/edd.c:254:
+                p += sprintf(p,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: arch/i386/kernel/edd.c:254:
+                p += sprintf(p,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#522: FILE: arch/i386/kernel/edd.c:255:
+                             "\t%02x:%02x.%01x  channel: %x\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: arch/i386/kernel/edd.c:255:
+                             "\t%02x:%02x.%01x  channel: %x\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#523: FILE: arch/i386/kernel/edd.c:256:
+                             edd->params.interface_path.pci.bus,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: arch/i386/kernel/edd.c:256:
+                             edd->params.interface_path.pci.bus,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#524: FILE: arch/i386/kernel/edd.c:257:
+                             edd->params.interface_path.pci.slot,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: arch/i386/kernel/edd.c:257:
+                             edd->params.interface_path.pci.slot,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#525: FILE: arch/i386/kernel/edd.c:258:
+                             edd->params.interface_path.pci.function,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: arch/i386/kernel/edd.c:258:
+                             edd->params.interface_path.pci.function,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#526: FILE: arch/i386/kernel/edd.c:259:
+                             edd->params.interface_path.pci.channel);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: arch/i386/kernel/edd.c:259:
+                             edd->params.interface_path.pci.channel);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#527: FILE: arch/i386/kernel/edd.c:260:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: arch/i386/kernel/edd.c:260:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#531: FILE: arch/i386/kernel/edd.c:264:
+                p += sprintf(p,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: arch/i386/kernel/edd.c:264:
+                p += sprintf(p,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#532: FILE: arch/i386/kernel/edd.c:265:
+                             "\tTBD: %llx\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: arch/i386/kernel/edd.c:265:
+                             "\tTBD: %llx\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#533: FILE: arch/i386/kernel/edd.c:266:
+                             edd->params.interface_path.ibnd.reserved);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: arch/i386/kernel/edd.c:266:
+                             edd->params.interface_path.ibnd.reserved);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#534: FILE: arch/i386/kernel/edd.c:267:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: arch/i386/kernel/edd.c:267:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#535: FILE: arch/i386/kernel/edd.c:268:
+        default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#536: FILE: arch/i386/kernel/edd.c:269:
+                p += sprintf(p, "\tunknown: %llx\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: arch/i386/kernel/edd.c:269:
+                p += sprintf(p, "\tunknown: %llx\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#537: FILE: arch/i386/kernel/edd.c:270:
+                             edd->params.interface_path.unknown.reserved);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: arch/i386/kernel/edd.c:270:
+                             edd->params.interface_path.unknown.reserved);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#538: FILE: arch/i386/kernel/edd.c:271:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: arch/i386/kernel/edd.c:271:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#539: FILE: arch/i386/kernel/edd.c:272:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: arch/i386/kernel/edd.c:272:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#541: FILE: arch/i386/kernel/edd.c:274:
+        /* Spec violation here.  Adaptec AIC7899 has 0x00 (NULL) bytes for $

ERROR:CODE_INDENT: code indent should use tabs where possible
#541: FILE: arch/i386/kernel/edd.c:274:
+        /* Spec violation here.  Adaptec AIC7899 has 0x00 (NULL) bytes for $

ERROR:CODE_INDENT: code indent should use tabs where possible
#542: FILE: arch/i386/kernel/edd.c:275:
+           padding instead of 0x20 (space) bytes. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#542: FILE: arch/i386/kernel/edd.c:275:
+        /* Spec violation here.  Adaptec AIC7899 has 0x00 (NULL) bytes for 
+           padding instead of 0x20 (space) bytes. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#542: FILE: arch/i386/kernel/edd.c:275:
+           padding instead of 0x20 (space) bytes. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#543: FILE: arch/i386/kernel/edd.c:276:
+        /* Print device path information */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#544: FILE: arch/i386/kernel/edd.c:277:
+        p += sprintf(p, "interface: ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: arch/i386/kernel/edd.c:277:
+        p += sprintf(p, "interface: ");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#545: FILE: arch/i386/kernel/edd.c:278:
+        for (i=0; i<8; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: arch/i386/kernel/edd.c:278:
+        for (i=0; i<8; i++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#545: FILE: arch/i386/kernel/edd.c:278:
+        for (i=0; i<8; i++) {
               ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#545: FILE: arch/i386/kernel/edd.c:278:
+        for (i=0; i<8; i++) {
                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#546: FILE: arch/i386/kernel/edd.c:279:
+                if (isprint(edd->params.interface_type[i])) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: arch/i386/kernel/edd.c:279:
+                if (isprint(edd->params.interface_type[i])) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#547: FILE: arch/i386/kernel/edd.c:280:
+                        p += sprintf(p, "%c", edd->params.interface_type[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: arch/i386/kernel/edd.c:280:
+                        p += sprintf(p, "%c", edd->params.interface_type[i]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#548: FILE: arch/i386/kernel/edd.c:281:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: arch/i386/kernel/edd.c:281:
+                } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#549: FILE: arch/i386/kernel/edd.c:282:
+                        p += sprintf(p, " ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: arch/i386/kernel/edd.c:282:
+                        p += sprintf(p, " ");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#550: FILE: arch/i386/kernel/edd.c:283:
+                        warn_padding++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: arch/i386/kernel/edd.c:283:
+                        warn_padding++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#551: FILE: arch/i386/kernel/edd.c:284:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: arch/i386/kernel/edd.c:284:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#552: FILE: arch/i386/kernel/edd.c:285:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: arch/i386/kernel/edd.c:285:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#553: FILE: arch/i386/kernel/edd.c:286:
+        if (!strncmp(edd->params.interface_type, "ATAPI", 5)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: arch/i386/kernel/edd.c:286:
+        if (!strncmp(edd->params.interface_type, "ATAPI", 5)) {$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#553: FILE: arch/i386/kernel/edd.c:286:
+        if (!strncmp(edd->params.interface_type, "ATAPI", 5)) {
[...]
+        } else if (!strncmp(edd->params.interface_type, "ATA", 3)) {
[...]
+        } else if (!strncmp(edd->params.interface_type, "SCSI", 4)) {
[...]
+        } else if (!strncmp(edd->params.interface_type, "USB", 3)) {
[...]
+        } else if (!strncmp(edd->params.interface_type, "1394", 4)) {
[...]
+        } else if (!strncmp(edd->params.interface_type, "FIBRE", 5)) {
[...]
+        } else if (!strncmp(edd->params.interface_type, "I2O", 3)) {
[...]
+        } else if (!strncmp(edd->params.interface_type, "RAID", 4)) {
[...]
+        } else if (!strncmp(edd->params.interface_type, "SATA", 4)) {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#554: FILE: arch/i386/kernel/edd.c:287:
+                interface_type = atapi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: arch/i386/kernel/edd.c:287:
+                interface_type = atapi;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#555: FILE: arch/i386/kernel/edd.c:288:
+        } else if (!strncmp(edd->params.interface_type, "ATA", 3)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: arch/i386/kernel/edd.c:288:
+        } else if (!strncmp(edd->params.interface_type, "ATA", 3)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#556: FILE: arch/i386/kernel/edd.c:289:
+                interface_type = ata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: arch/i386/kernel/edd.c:289:
+                interface_type = ata;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: arch/i386/kernel/edd.c:290:
+        } else if (!strncmp(edd->params.interface_type, "SCSI", 4)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: arch/i386/kernel/edd.c:290:
+        } else if (!strncmp(edd->params.interface_type, "SCSI", 4)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#558: FILE: arch/i386/kernel/edd.c:291:
+                interface_type = scsi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: arch/i386/kernel/edd.c:291:
+                interface_type = scsi;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: arch/i386/kernel/edd.c:292:
+        } else if (!strncmp(edd->params.interface_type, "USB", 3)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: arch/i386/kernel/edd.c:292:
+        } else if (!strncmp(edd->params.interface_type, "USB", 3)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#560: FILE: arch/i386/kernel/edd.c:293:
+                interface_type = usb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: arch/i386/kernel/edd.c:293:
+                interface_type = usb;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#561: FILE: arch/i386/kernel/edd.c:294:
+        } else if (!strncmp(edd->params.interface_type, "1394", 4)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: arch/i386/kernel/edd.c:294:
+        } else if (!strncmp(edd->params.interface_type, "1394", 4)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#562: FILE: arch/i386/kernel/edd.c:295:
+                interface_type = i1394;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: arch/i386/kernel/edd.c:295:
+                interface_type = i1394;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#563: FILE: arch/i386/kernel/edd.c:296:
+        } else if (!strncmp(edd->params.interface_type, "FIBRE", 5)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: arch/i386/kernel/edd.c:296:
+        } else if (!strncmp(edd->params.interface_type, "FIBRE", 5)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#564: FILE: arch/i386/kernel/edd.c:297:
+                interface_type = fibre;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: arch/i386/kernel/edd.c:297:
+                interface_type = fibre;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#565: FILE: arch/i386/kernel/edd.c:298:
+        } else if (!strncmp(edd->params.interface_type, "I2O", 3)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: arch/i386/kernel/edd.c:298:
+        } else if (!strncmp(edd->params.interface_type, "I2O", 3)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#566: FILE: arch/i386/kernel/edd.c:299:
+                interface_type = i2o;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: arch/i386/kernel/edd.c:299:
+                interface_type = i2o;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#567: FILE: arch/i386/kernel/edd.c:300:
+        } else if (!strncmp(edd->params.interface_type, "RAID", 4)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: arch/i386/kernel/edd.c:300:
+        } else if (!strncmp(edd->params.interface_type, "RAID", 4)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: arch/i386/kernel/edd.c:301:
+                interface_type = raid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: arch/i386/kernel/edd.c:301:
+                interface_type = raid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#569: FILE: arch/i386/kernel/edd.c:302:
+        } else if (!strncmp(edd->params.interface_type, "SATA", 4)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: arch/i386/kernel/edd.c:302:
+        } else if (!strncmp(edd->params.interface_type, "SATA", 4)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#570: FILE: arch/i386/kernel/edd.c:303:
+                interface_type = sata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: arch/i386/kernel/edd.c:303:
+                interface_type = sata;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#571: FILE: arch/i386/kernel/edd.c:304:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: arch/i386/kernel/edd.c:304:
+        }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#573: FILE: arch/i386/kernel/edd.c:306:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#574: FILE: arch/i386/kernel/edd.c:307:
+        switch (interface_type) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: arch/i386/kernel/edd.c:307:
+        switch (interface_type) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#575: FILE: arch/i386/kernel/edd.c:308:
+        case ata:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: arch/i386/kernel/edd.c:308:
+        case ata:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#576: FILE: arch/i386/kernel/edd.c:309:
+                p += sprintf(p, "\tdevice: %x\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#576: FILE: arch/i386/kernel/edd.c:309:
+                p += sprintf(p, "\tdevice: %x\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#577: FILE: arch/i386/kernel/edd.c:310:
+                             edd->params.device_path.ata.device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: arch/i386/kernel/edd.c:310:
+                             edd->params.device_path.ata.device);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#578: FILE: arch/i386/kernel/edd.c:311:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: arch/i386/kernel/edd.c:311:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#579: FILE: arch/i386/kernel/edd.c:312:
+        case atapi:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: arch/i386/kernel/edd.c:312:
+        case atapi:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#580: FILE: arch/i386/kernel/edd.c:313:
+                p += sprintf(p, "\tdevice: %x  lun: %x\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: arch/i386/kernel/edd.c:313:
+                p += sprintf(p, "\tdevice: %x  lun: %x\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#581: FILE: arch/i386/kernel/edd.c:314:
+                             edd->params.device_path.atapi.device,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: arch/i386/kernel/edd.c:314:
+                             edd->params.device_path.atapi.device,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#582: FILE: arch/i386/kernel/edd.c:315:
+                             edd->params.device_path.atapi.lun);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: arch/i386/kernel/edd.c:315:
+                             edd->params.device_path.atapi.lun);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#583: FILE: arch/i386/kernel/edd.c:316:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: arch/i386/kernel/edd.c:316:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#584: FILE: arch/i386/kernel/edd.c:317:
+        case scsi:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: arch/i386/kernel/edd.c:317:
+        case scsi:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#585: FILE: arch/i386/kernel/edd.c:318:
+                p += sprintf(p, "\tid: %x  lun: %llx\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: arch/i386/kernel/edd.c:318:
+                p += sprintf(p, "\tid: %x  lun: %llx\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#586: FILE: arch/i386/kernel/edd.c:319:
+                             edd->params.device_path.scsi.id,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: arch/i386/kernel/edd.c:319:
+                             edd->params.device_path.scsi.id,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#587: FILE: arch/i386/kernel/edd.c:320:
+                             edd->params.device_path.scsi.lun);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: arch/i386/kernel/edd.c:320:
+                             edd->params.device_path.scsi.lun);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#588: FILE: arch/i386/kernel/edd.c:321:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: arch/i386/kernel/edd.c:321:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#589: FILE: arch/i386/kernel/edd.c:322:
+        case usb:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: arch/i386/kernel/edd.c:322:
+        case usb:$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#590: FILE: arch/i386/kernel/edd.c:323:
+                p += sprintf(p, "\tserial_number: %llx\n", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#590: FILE: arch/i386/kernel/edd.c:323:
+                p += sprintf(p, "\tserial_number: %llx\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: arch/i386/kernel/edd.c:323:
+                p += sprintf(p, "\tserial_number: %llx\n", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#591: FILE: arch/i386/kernel/edd.c:324:
+                             edd->params.device_path.usb.serial_number);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: arch/i386/kernel/edd.c:324:
+                             edd->params.device_path.usb.serial_number);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#592: FILE: arch/i386/kernel/edd.c:325:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: arch/i386/kernel/edd.c:325:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#593: FILE: arch/i386/kernel/edd.c:326:
+        case i1394:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: arch/i386/kernel/edd.c:326:
+        case i1394:$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#594: FILE: arch/i386/kernel/edd.c:327:
+                p += sprintf(p, "\teui: %llx\n", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#594: FILE: arch/i386/kernel/edd.c:327:
+                p += sprintf(p, "\teui: %llx\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: arch/i386/kernel/edd.c:327:
+                p += sprintf(p, "\teui: %llx\n", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#595: FILE: arch/i386/kernel/edd.c:328:
+                             edd->params.device_path.i1394.eui);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: arch/i386/kernel/edd.c:328:
+                             edd->params.device_path.i1394.eui);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#596: FILE: arch/i386/kernel/edd.c:329:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: arch/i386/kernel/edd.c:329:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#597: FILE: arch/i386/kernel/edd.c:330:
+        case fibre:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: arch/i386/kernel/edd.c:330:
+        case fibre:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#598: FILE: arch/i386/kernel/edd.c:331:
+                p += sprintf(p, "\twwid: %llx lun: %llx\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: arch/i386/kernel/edd.c:331:
+                p += sprintf(p, "\twwid: %llx lun: %llx\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#599: FILE: arch/i386/kernel/edd.c:332:
+                             edd->params.device_path.fibre.wwid,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: arch/i386/kernel/edd.c:332:
+                             edd->params.device_path.fibre.wwid,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#600: FILE: arch/i386/kernel/edd.c:333:
+                             edd->params.device_path.fibre.lun);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: arch/i386/kernel/edd.c:333:
+                             edd->params.device_path.fibre.lun);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#601: FILE: arch/i386/kernel/edd.c:334:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: arch/i386/kernel/edd.c:334:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#602: FILE: arch/i386/kernel/edd.c:335:
+        case i2o:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: arch/i386/kernel/edd.c:335:
+        case i2o:$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: arch/i386/kernel/edd.c:336:
+                p += sprintf(p, "\tidentity_tag: %llx\n", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#603: FILE: arch/i386/kernel/edd.c:336:
+                p += sprintf(p, "\tidentity_tag: %llx\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: arch/i386/kernel/edd.c:336:
+                p += sprintf(p, "\tidentity_tag: %llx\n", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#604: FILE: arch/i386/kernel/edd.c:337:
+                             edd->params.device_path.i2o.identity_tag);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: arch/i386/kernel/edd.c:337:
+                             edd->params.device_path.i2o.identity_tag);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#605: FILE: arch/i386/kernel/edd.c:338:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: arch/i386/kernel/edd.c:338:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#606: FILE: arch/i386/kernel/edd.c:339:
+        case raid:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: arch/i386/kernel/edd.c:339:
+        case raid:$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#607: FILE: arch/i386/kernel/edd.c:340:
+                p += sprintf(p, "\tidentity_tag: %x\n", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#607: FILE: arch/i386/kernel/edd.c:340:
+                p += sprintf(p, "\tidentity_tag: %x\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: arch/i386/kernel/edd.c:340:
+                p += sprintf(p, "\tidentity_tag: %x\n", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#608: FILE: arch/i386/kernel/edd.c:341:
+                             edd->params.device_path.raid.array_number);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: arch/i386/kernel/edd.c:341:
+                             edd->params.device_path.raid.array_number);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#609: FILE: arch/i386/kernel/edd.c:342:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: arch/i386/kernel/edd.c:342:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#610: FILE: arch/i386/kernel/edd.c:343:
+        case sata:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: arch/i386/kernel/edd.c:343:
+        case sata:$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#611: FILE: arch/i386/kernel/edd.c:344:
+                p += sprintf(p, "\tdevice: %x\n", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#611: FILE: arch/i386/kernel/edd.c:344:
+                p += sprintf(p, "\tdevice: %x\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: arch/i386/kernel/edd.c:344:
+                p += sprintf(p, "\tdevice: %x\n", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#612: FILE: arch/i386/kernel/edd.c:345:
+                             edd->params.device_path.sata.device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: arch/i386/kernel/edd.c:345:
+                             edd->params.device_path.sata.device);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#613: FILE: arch/i386/kernel/edd.c:346:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: arch/i386/kernel/edd.c:346:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#614: FILE: arch/i386/kernel/edd.c:347:
+        default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#615: FILE: arch/i386/kernel/edd.c:348:
+                p += sprintf(p, "\tunknown: %llx %llx\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: arch/i386/kernel/edd.c:348:
+                p += sprintf(p, "\tunknown: %llx %llx\n",$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#618: FILE: arch/i386/kernel/edd.c:351:
+                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#618: FILE: arch/i386/kernel/edd.c:351:
+                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: arch/i386/kernel/edd.c:351:
+                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#619: FILE: arch/i386/kernel/edd.c:352:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: arch/i386/kernel/edd.c:352:
+        }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#619: FILE: arch/i386/kernel/edd.c:352:
+                             
+        }

WARNING:BRACES: braces {} are not necessary for single statement blocks
#622: FILE: arch/i386/kernel/edd.c:355:
+	if (warn_key) {
+                p += sprintf(p, "Warning: Spec violation.  Key should be 0xBEDD, is 0xDDBE\n");
+	}

ERROR:CODE_INDENT: code indent should use tabs where possible
#623: FILE: arch/i386/kernel/edd.c:356:
+                p += sprintf(p, "Warning: Spec violation.  Key should be 0xBEDD, is 0xDDBE\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: arch/i386/kernel/edd.c:356:
+                p += sprintf(p, "Warning: Spec violation.  Key should be 0xBEDD, is 0xDDBE\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#625: FILE: arch/i386/kernel/edd.c:358:
+        if (warn_padding) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: arch/i386/kernel/edd.c:358:
+        if (warn_padding) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#625: FILE: arch/i386/kernel/edd.c:358:
+        if (warn_padding) {
+                p += sprintf(p, "Warning: Spec violation.  Padding should be 0x20, is 0x00\n");
+        }

ERROR:CODE_INDENT: code indent should use tabs where possible
#626: FILE: arch/i386/kernel/edd.c:359:
+                p += sprintf(p, "Warning: Spec violation.  Padding should be 0x20, is 0x00\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: arch/i386/kernel/edd.c:359:
+                p += sprintf(p, "Warning: Spec violation.  Padding should be 0x20, is 0x00\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#627: FILE: arch/i386/kernel/edd.c:360:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: arch/i386/kernel/edd.c:360:
+        }$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#628: FILE: arch/i386/kernel/edd.c:361:
+	if (warn_checksum) {
+                p += sprintf(p, "Warning: Spec violation.  Device Path checksum invalid (0x%02x should be 0x00).\n", checksum);
+	}

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#629: FILE: arch/i386/kernel/edd.c:362:
+                p += sprintf(p, "Warning: Spec violation.  Device Path checksum invalid (0x%02x should be 0x00).\n", checksum);

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: arch/i386/kernel/edd.c:362:
+                p += sprintf(p, "Warning: Spec violation.  Device Path checksum invalid (0x%02x should be 0x00).\n", checksum);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: arch/i386/kernel/edd.c:362:
+                p += sprintf(p, "Warning: Spec violation.  Device Path checksum invalid (0x%02x should be 0x00).\n", checksum);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#632: FILE: arch/i386/kernel/edd.c:365:
+        len = (p + 1 - page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: arch/i386/kernel/edd.c:365:
+        len = (p + 1 - page);$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#647: FILE: arch/i386/kernel/edd.c:380:
+{
+

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#651: FILE: arch/i386/kernel/edd.c:384:
+	if (!info || !info->device) return 1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#655: FILE: arch/i386/kernel/edd.c:388:
+	if (!new_proc_info) return 1;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#673: FILE: arch/i386/kernel/edd.c:406:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#684: FILE: arch/i386/kernel/edd.c:417:
+{
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#687: FILE: arch/i386/kernel/edd.c:420:
+	printk(KERN_INFO "BIOS EDD facility v%s, %d devices found\n", EDD_VERSION, eddnr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#688: FILE: arch/i386/kernel/edd.c:421:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#690: FILE: arch/i386/kernel/edd.c:423:
+		printk(KERN_INFO "EDD information not available.\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#695: FILE: arch/i386/kernel/edd.c:428:
+	if (!edd_dir) return 1;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#697: FILE: arch/i386/kernel/edd.c:430:
+	for (i=0; i<eddnr && i<EDDMAXNR; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#697: FILE: arch/i386/kernel/edd.c:430:
+	for (i=0; i<eddnr && i<EDDMAXNR; i++) {
 	           ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#697: FILE: arch/i386/kernel/edd.c:430:
+	for (i=0; i<eddnr && i<EDDMAXNR; i++) {
 	                      ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#697: FILE: arch/i386/kernel/edd.c:430:
+	for (i=0; i<eddnr && i<EDDMAXNR; i++) {
+		edd_create_proc_entry(&edd[i]);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#700: FILE: arch/i386/kernel/edd.c:433:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#741: FILE: arch/i386/kernel/i386_ksyms.c:179:
+EXPORT_SYMBOL(eddnr);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:SPACING: No space is necessary after a cast
#758: FILE: arch/i386/kernel/setup.c:110:
+#define EDD_NR     (*(unsigned char *) (PARAM+EDDNR))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#758: FILE: arch/i386/kernel/setup.c:110:
+#define EDD_NR     (*(unsigned char *) (PARAM+EDDNR))
                                              ^

CHECK:SPACING: No space is necessary after a cast
#759: FILE: arch/i386/kernel/setup.c:111:
+#define EDD_BUF     ((struct edd_info *) (PARAM+EDDBUF))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#759: FILE: arch/i386/kernel/setup.c:111:
+#define EDD_BUF     ((struct edd_info *) (PARAM+EDDBUF))
                                                ^

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#767: FILE: arch/i386/kernel/setup.c:492:
+#if defined(CONFIG_EDD) || defined(CONFIG_EDD_MODULE)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#776: FILE: arch/i386/kernel/setup.c:501:
+     eddnr = EDD_NR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#777: FILE: arch/i386/kernel/setup.c:502:
+     memcpy(edd, EDD_BUF, sizeof(edd));$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#785: FILE: arch/i386/kernel/setup.c:510:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#801: FILE: include/asm-i386/edd.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#802: FILE: include/asm-i386/edd.h:2:
+ * linux/include/asm-i386/edd.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#825: FILE: include/asm-i386/edd.h:25:
+#define EDDNR 0x1e9	/* addr of number of edd_info structs at EDDBUF
+			   in empty_zero_block - treat this as 1 byte  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#825: FILE: include/asm-i386/edd.h:25:
+			   in empty_zero_block - treat this as 1 byte  */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#828: FILE: include/asm-i386/edd.h:28:
+#define EDDEXTSIZE 4    /* change these if you muck with the structures */   $

CHECK:BIT_MACRO: Prefer using the BIT macro
#831: FILE: include/asm-i386/edd.h:31:
+#define EDD_EXT_FIXED_DISK_ACCESS           (1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#832: FILE: include/asm-i386/edd.h:32:
+#define EDD_EXT_DEVICE_LOCKING_AND_EJECTING (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#833: FILE: include/asm-i386/edd.h:33:
+#define EDD_EXT_ENHANCED_DISK_DRIVE_SUPPORT (1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#834: FILE: include/asm-i386/edd.h:34:
+#define EDD_EXT_64BIT_EXTENSIONS            (1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#836: FILE: include/asm-i386/edd.h:36:
+#define EDD_INFO_DMA_BOUNDRY_ERROR_TRANSPARENT (1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#837: FILE: include/asm-i386/edd.h:37:
+#define EDD_INFO_GEOMETRY_VALID                (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#838: FILE: include/asm-i386/edd.h:38:
+#define EDD_INFO_REMOVABLE                     (1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#839: FILE: include/asm-i386/edd.h:39:
+#define EDD_INFO_WRITE_VERIFY                  (1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#840: FILE: include/asm-i386/edd.h:40:
+#define EDD_INFO_MEDIA_CHANGE_NOTIFICATION     (1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#841: FILE: include/asm-i386/edd.h:41:
+#define EDD_INFO_LOCKABLE                      (1 << 5)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#842: FILE: include/asm-i386/edd.h:42:
+#define EDD_INFO_NO_MEDIA_PRESENT              (1 << 6) $

CHECK:BIT_MACRO: Prefer using the BIT macro
#842: FILE: include/asm-i386/edd.h:42:
+#define EDD_INFO_NO_MEDIA_PRESENT              (1 << 6) 

CHECK:BIT_MACRO: Prefer using the BIT macro
#843: FILE: include/asm-i386/edd.h:43:
+#define EDD_INFO_USE_INT13_FN50                (1 << 7)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#845: FILE: include/asm-i386/edd.h:45:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#851: FILE: include/asm-i386/edd.h:51:
+        u16 info_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#851: FILE: include/asm-i386/edd.h:51:
+        u16 info_flags;$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#869: FILE: include/asm-i386/edd.h:69:
+		} __attribute__((packed)) isa;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#876: FILE: include/asm-i386/edd.h:76:
+		} __attribute__((packed)) pci;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#880: FILE: include/asm-i386/edd.h:80:
+		} __attribute__((packed)) ibnd;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#883: FILE: include/asm-i386/edd.h:83:
+		} __attribute__((packed)) xprs;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#886: FILE: include/asm-i386/edd.h:86:
+		} __attribute__((packed)) htpt;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#889: FILE: include/asm-i386/edd.h:89:
+		} __attribute__((packed)) unknown;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#898: FILE: include/asm-i386/edd.h:98:
+		} __attribute__((packed)) ata;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#906: FILE: include/asm-i386/edd.h:106:
+		} __attribute__((packed)) atapi;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#912: FILE: include/asm-i386/edd.h:112:
+		} __attribute__((packed)) scsi;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#916: FILE: include/asm-i386/edd.h:116:
+		} __attribute__((packed)) usb;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#920: FILE: include/asm-i386/edd.h:120:
+		} __attribute__((packed)) i1394;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#924: FILE: include/asm-i386/edd.h:124:
+		} __attribute__((packed)) fibre;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#928: FILE: include/asm-i386/edd.h:128:
+		} __attribute__((packed)) i2o;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#940: FILE: include/asm-i386/edd.h:140:
+		} __attribute__((packed)) sata;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#944: FILE: include/asm-i386/edd.h:144:
+		} __attribute__((packed)) unknown;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#948: FILE: include/asm-i386/edd.h:148:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#955: FILE: include/asm-i386/edd.h:155:
+} __attribute__((packed));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000435369.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 228 errors, 201 warnings, 33 checks, 794 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000435369.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
