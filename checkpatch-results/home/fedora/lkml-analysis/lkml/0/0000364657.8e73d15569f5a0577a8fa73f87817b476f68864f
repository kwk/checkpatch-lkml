WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
diff -Nur linux-2.5.70/include/linux/sem.h linux-2.5.70patched/include/linux/sem.h

ERROR:SPACING: space required after that ',' (ctx:VxV)
#63: FILE: ipc/sem.c:99:
+int sem_ctls[6] = {SEMMSL, SEMMNS, SEMOPM, SEMMNI,SEMMNU, SEMUME};
                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: ipc/sem.c:490:
+               seminfo.semmnu = sc_semmnu;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: ipc/sem.c:490:
+               seminfo.semmnu = sc_semmnu;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: ipc/sem.c:492:
+               seminfo.semume = sc_semume;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: ipc/sem.c:492:
+               seminfo.semume = sc_semume;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: ipc/sem.c:907:
+                       spin_lock(&sem_undo_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: ipc/sem.c:907:
+                       spin_lock(&sem_undo_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: ipc/sem.c:908:
+                       sem_undo_count--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: ipc/sem.c:908:
+                       sem_undo_count--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: ipc/sem.c:909:
+                       current->sysvsem.undo_list->add_count--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: ipc/sem.c:909:
+                       current->sysvsem.undo_list->add_count--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: ipc/sem.c:910:
+                       spin_unlock(&sem_undo_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: ipc/sem.c:910:
+                       spin_unlock(&sem_undo_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: ipc/sem.c:971:
+       spin_lock(&sem_undo_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: ipc/sem.c:972:
+       if(sem_undo_count >= sc_semmnu)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#107: FILE: ipc/sem.c:972:
+       if(sem_undo_count >= sc_semmnu)
+       {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#107: FILE: ipc/sem.c:972:
+       if(sem_undo_count >= sc_semmnu)
+       {

ERROR:SPACING: space required before the open parenthesis '('
#107: FILE: ipc/sem.c:972:
+       if(sem_undo_count >= sc_semmnu)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: ipc/sem.c:973:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: ipc/sem.c:974:
+               unlock_semundo();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: ipc/sem.c:974:
+               unlock_semundo();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: ipc/sem.c:975:
+               kfree(un);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: ipc/sem.c:975:
+               kfree(un);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: ipc/sem.c:976:
+               spin_unlock(&sem_undo_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: ipc/sem.c:976:
+               spin_unlock(&sem_undo_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: ipc/sem.c:977:
+               return -ENOSPC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: ipc/sem.c:977:
+               return -ENOSPC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: ipc/sem.c:978:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: ipc/sem.c:979:
+       if(current->sysvsem.undo_list->add_count >= sc_semume)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#114: FILE: ipc/sem.c:979:
+       if(current->sysvsem.undo_list->add_count >= sc_semume)
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 16)
#114: FILE: ipc/sem.c:979:
+       if(current->sysvsem.undo_list->add_count >= sc_semume)
+       {

ERROR:SPACING: space required before the open parenthesis '('
#114: FILE: ipc/sem.c:979:
+       if(current->sysvsem.undo_list->add_count >= sc_semume)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: ipc/sem.c:980:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: ipc/sem.c:981:
+                unlock_semundo();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: ipc/sem.c:981:
+                unlock_semundo();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: ipc/sem.c:982:
+                kfree(un);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: ipc/sem.c:982:
+                kfree(un);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: ipc/sem.c:983:
+                spin_unlock(&sem_undo_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: ipc/sem.c:983:
+                spin_unlock(&sem_undo_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: ipc/sem.c:984:
+                return -EAGAIN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: ipc/sem.c:984:
+                return -EAGAIN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: ipc/sem.c:985:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: ipc/sem.c:1002:
+               spin_unlock(&sem_undo_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: ipc/sem.c:1002:
+               spin_unlock(&sem_undo_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: ipc/sem.c:1007:
+               sem_undo_count++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: ipc/sem.c:1007:
+               sem_undo_count++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: ipc/sem.c:1008:
+               spin_unlock(&sem_undo_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: ipc/sem.c:1008:
+               spin_unlock(&sem_undo_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: ipc/sem.c:1281:
+               spin_lock(&sem_undo_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: ipc/sem.c:1281:
+               spin_lock(&sem_undo_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: ipc/sem.c:1282:
+               sem_undo_count--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: ipc/sem.c:1282:
+               sem_undo_count--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: ipc/sem.c:1283:
+               current->sysvsem.undo_list->add_count--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: ipc/sem.c:1283:
+               current->sysvsem.undo_list->add_count--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: ipc/sem.c:1284:
+               spin_unlock(&sem_undo_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: ipc/sem.c:1284:
+               spin_unlock(&sem_undo_lock);$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#156: FILE: kernel/sysctl.c:64:
+static int zero = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#157: FILE: kernel/sysctl.c:65:
+static int sem_zero_array[]={0,0,0,0,0,0};
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#157: FILE: kernel/sysctl.c:65:
+static int sem_zero_array[]={0,0,0,0,0,0};
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#157: FILE: kernel/sysctl.c:65:
+static int sem_zero_array[]={0,0,0,0,0,0};
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#157: FILE: kernel/sysctl.c:65:
+static int sem_zero_array[]={0,0,0,0,0,0};
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#157: FILE: kernel/sysctl.c:65:
+static int sem_zero_array[]={0,0,0,0,0,0};
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#157: FILE: kernel/sysctl.c:65:
+static int sem_zero_array[]={0,0,0,0,0,0};
                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#158: FILE: kernel/sysctl.c:66:
+static int sem_maxint_array[]={0x7fffffff,0x7fffffff,0x7fffffff,0x7fffffff,0x7fffffff,0x7fffffff};
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#158: FILE: kernel/sysctl.c:66:
+static int sem_maxint_array[]={0x7fffffff,0x7fffffff,0x7fffffff,0x7fffffff,0x7fffffff,0x7fffffff};
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#158: FILE: kernel/sysctl.c:66:
+static int sem_maxint_array[]={0x7fffffff,0x7fffffff,0x7fffffff,0x7fffffff,0x7fffffff,0x7fffffff};
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#158: FILE: kernel/sysctl.c:66:
+static int sem_maxint_array[]={0x7fffffff,0x7fffffff,0x7fffffff,0x7fffffff,0x7fffffff,0x7fffffff};
                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#158: FILE: kernel/sysctl.c:66:
+static int sem_maxint_array[]={0x7fffffff,0x7fffffff,0x7fffffff,0x7fffffff,0x7fffffff,0x7fffffff};
                                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#158: FILE: kernel/sysctl.c:66:
+static int sem_maxint_array[]={0x7fffffff,0x7fffffff,0x7fffffff,0x7fffffff,0x7fffffff,0x7fffffff};
                                                                                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: kernel/sysctl.c:243:
+       {KERN_SEM, "sem", &sem_ctls, 6*sizeof (int),$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#170: FILE: kernel/sysctl.c:243:
+       {KERN_SEM, "sem", &sem_ctls, 6*sizeof (int),

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#170: FILE: kernel/sysctl.c:243:
+       {KERN_SEM, "sem", &sem_ctls, 6*sizeof (int),
                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: kernel/sysctl.c:244:
+        0644, NULL, &proc_dointvec_minmax, NULL, NULL, sem_zero_array, sem_maxint_array},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: kernel/sysctl.c:244:
+        0644, NULL, &proc_dointvec_minmax, NULL, NULL, sem_zero_array, sem_maxint_array},$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364657.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 40 errors, 34 warnings, 1 checks, 127 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364657.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
