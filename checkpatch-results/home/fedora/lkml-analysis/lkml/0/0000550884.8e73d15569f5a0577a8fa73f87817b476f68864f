WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
diff -urpN linux-2.4.1-patch/net/irda/irlap.c linux-2.4.1-irda-patch/net/irda/irlap.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: net/irda/irlap.c:1069:
+void irlap_apply_connection_parameters(struct irlap_cb *self, int now) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'negociated' may be misspelled - perhaps 'negotiated'?
#86: FILE: net/irda/irlap.c:1076:
+	/* Set the negociated xbofs value */
 	           ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required before the open parenthesis '('
#88: FILE: net/irda/irlap.c:1078:
+	if(now)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'negociated' may be misspelled - perhaps 'negotiated'?
#91: FILE: net/irda/irlap.c:1081:
+	/* Set the negociated link speed (may need the new xbofs value) */
 	           ^^^^^^^^^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#127: FILE: net/irda/irlap_event.c:699:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#166: FILE: net/irda/irlap_event.c:841:
+		 * Jean II */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#247: FILE: net/irda/irttp.c:144:
+	 * JeanII */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'stsap_sel != LSAP_ANY'
#248: FILE: net/irda/irttp.c:145:
+	if((stsap_sel != LSAP_ANY) &&
+	   ((stsap_sel < 0x01) || (stsap_sel >= 0x70))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'stsap_sel < 0x01'
#248: FILE: net/irda/irttp.c:145:
+	if((stsap_sel != LSAP_ANY) &&
+	   ((stsap_sel < 0x01) || (stsap_sel >= 0x70))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'stsap_sel >= 0x70'
#248: FILE: net/irda/irttp.c:145:
+	if((stsap_sel != LSAP_ANY) &&
+	   ((stsap_sel < 0x01) || (stsap_sel >= 0x70))) {

ERROR:SPACING: space required before the open parenthesis '('
#248: FILE: net/irda/irttp.c:145:
+	if((stsap_sel != LSAP_ANY) &&

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#250: FILE: net/irda/irttp.c:147:
+		IRDA_DEBUG(0, __FUNCTION__ "(), invalid tsap!\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#262: FILE: net/irda/irttp.c:1576:
+		len += sprintf(buf+len, "  tx packets: %ld, ",
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#265: FILE: net/irda/irttp.c:1578:
+		len += sprintf(buf+len, "rx packets: %ld, ",
 		                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'skb' - possible side-effects?
#300: FILE: include/net/irda/irda_device.h:227:
+#define irda_get_next_speed(skb) (	                                        \
 	(((struct irda_skb_cb*) skb->cb)->magic == LAP_MAGIC) ? 	\
+                  ((struct irda_skb_cb *)(skb->cb))->next_speed : -1 	\
 )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'skb' may be better as '(skb)' to avoid precedence issues
#300: FILE: include/net/irda/irda_device.h:227:
+#define irda_get_next_speed(skb) (	                                        \
 	(((struct irda_skb_cb*) skb->cb)->magic == LAP_MAGIC) ? 	\
+                  ((struct irda_skb_cb *)(skb->cb))->next_speed : -1 	\
 )

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: include/net/irda/irda_device.h:229:
+                  ((struct irda_skb_cb *)(skb->cb))->next_speed : -1 ^I\$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#303: FILE: include/net/irda/irda_device.h:229:
+                  ((struct irda_skb_cb *)(skb->cb))->next_speed : -1 ^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: include/net/irda/irda_device.h:229:
+                  ((struct irda_skb_cb *)(skb->cb))->next_speed : -1 ^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'skb' - possible side-effects?
#330: FILE: include/net/irda/irda_device.h:253:
+#define irda_get_xbofs(skb) (	                                        \
+	(((struct irda_skb_cb*) skb->cb)->magic == LAP_MAGIC) ? 	\
+                  ((struct irda_skb_cb *)(skb->cb))->xbofs : 10 	\
+)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'skb' may be better as '(skb)' to avoid precedence issues
#330: FILE: include/net/irda/irda_device.h:253:
+#define irda_get_xbofs(skb) (	                                        \
+	(((struct irda_skb_cb*) skb->cb)->magic == LAP_MAGIC) ? 	\
+                  ((struct irda_skb_cb *)(skb->cb))->xbofs : 10 	\
+)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#331: FILE: include/net/irda/irda_device.h:254:
+^I(((struct irda_skb_cb*) skb->cb)->magic == LAP_MAGIC) ? ^I\$

CHECK:SPACING: No space is necessary after a cast
#331: FILE: include/net/irda/irda_device.h:254:
+	(((struct irda_skb_cb*) skb->cb)->magic == LAP_MAGIC) ? 	\

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#331: FILE: include/net/irda/irda_device.h:254:
+	(((struct irda_skb_cb*) skb->cb)->magic == LAP_MAGIC) ? 	\

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: include/net/irda/irda_device.h:255:
+                  ((struct irda_skb_cb *)(skb->cb))->xbofs : 10 ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#332: FILE: include/net/irda/irda_device.h:255:
+                  ((struct irda_skb_cb *)(skb->cb))->xbofs : 10 ^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: include/net/irda/irda_device.h:255:
+                  ((struct irda_skb_cb *)(skb->cb))->xbofs : 10 ^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'skb' - possible side-effects?
#342: FILE: include/net/irda/irda_device.h:265:
+#define irda_get_next_xbofs(skb) (	                                        \
+	(((struct irda_skb_cb*) skb->cb)->magic == LAP_MAGIC) ? 	\
+                  ((struct irda_skb_cb *)(skb->cb))->next_xbofs : -1 	\
+)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'skb' may be better as '(skb)' to avoid precedence issues
#342: FILE: include/net/irda/irda_device.h:265:
+#define irda_get_next_xbofs(skb) (	                                        \
+	(((struct irda_skb_cb*) skb->cb)->magic == LAP_MAGIC) ? 	\
+                  ((struct irda_skb_cb *)(skb->cb))->next_xbofs : -1 	\
+)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#343: FILE: include/net/irda/irda_device.h:266:
+^I(((struct irda_skb_cb*) skb->cb)->magic == LAP_MAGIC) ? ^I\$

CHECK:SPACING: No space is necessary after a cast
#343: FILE: include/net/irda/irda_device.h:266:
+	(((struct irda_skb_cb*) skb->cb)->magic == LAP_MAGIC) ? 	\

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#343: FILE: include/net/irda/irda_device.h:266:
+	(((struct irda_skb_cb*) skb->cb)->magic == LAP_MAGIC) ? 	\

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: include/net/irda/irda_device.h:267:
+                  ((struct irda_skb_cb *)(skb->cb))->next_xbofs : -1 ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#344: FILE: include/net/irda/irda_device.h:267:
+                  ((struct irda_skb_cb *)(skb->cb))->next_xbofs : -1 ^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: include/net/irda/irda_device.h:267:
+                  ((struct irda_skb_cb *)(skb->cb))->next_xbofs : -1 ^I\$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'speed != self->io.speed'
#407: FILE: drivers/net/irda/irport.c:632:
+	if ((speed != self->io.speed) && (speed != -1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'speed != self->io.speed'
#435: FILE: drivers/net/irda/irtty.c:642:
+	if ((speed != self->io.speed) && (speed != -1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'speed != self->io.speed'
#463: FILE: drivers/net/irda/nsc-ircc.c:1080:
+	if ((speed != self->io.speed) && (speed != -1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'speed != self->io.speed'
#486: FILE: drivers/net/irda/nsc-ircc.c:1132:
+	if ((speed != self->io.speed) && (speed != -1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'speed != self->io.speed'
#512: FILE: drivers/net/irda/smc-ircc.c:623:
+	if ((speed != self->io.speed) && (speed != -1)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: drivers/net/irda/toshoboe.c:266:
+  __s32 speed;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: drivers/net/irda/toshoboe.c:275:
+  speed = irda_get_next_speed(skb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: drivers/net/irda/toshoboe.c:276:
+  if ((speed != self->io.speed) && (speed != -1)) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'speed != self->io.speed'
#538: FILE: drivers/net/irda/toshoboe.c:276:
+  if ((speed != self->io.speed) && (speed != -1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'speed != self->io.speed'
#564: FILE: drivers/net/irda/w83977af_ir.c:517:
+	if ((speed != self->io.speed) && (speed != -1)) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000550884.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 18 warnings, 20 checks, 465 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000550884.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
