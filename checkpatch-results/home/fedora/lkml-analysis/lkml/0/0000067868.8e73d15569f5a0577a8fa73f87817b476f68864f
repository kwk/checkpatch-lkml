WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
This patch is now based on the cryptodev tree. The last patches where against

WARNING:TYPO_SPELLING: 'formating' may be misspelled - perhaps 'formatting'?
#33: 
I also did the formating changes and the header fix you asked for.
               ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#61: FILE: crypto/Kconfig:147:
+^Itristate^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: crypto/Kconfig:150:
+^I  Common parts of the Twofish cipher algorithm shared by the $

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#800: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#805: FILE: crypto/twofish_common.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#817: FILE: crypto/twofish_common.c:13:
+ * code and thus put it in the public domain. The subsequent authors $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#829: FILE: crypto/twofish_common.c:25:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#831: FILE: crypto/twofish_common.c:27:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#832: FILE: crypto/twofish_common.c:28:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#855: FILE: crypto/twofish_common.c:51:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#862: FILE: crypto/twofish_common.c:58:
+ * the Twofish paper. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#925: FILE: crypto/twofish_common.c:121:
+ * conversion issues. */

WARNING:REPEATED_WORD: Possible repeated word: 'that'
#1119: FILE: crypto/twofish_common.c:315:
+ * some n in 0..254.  Note that that caret is exponentiation in GF(2^8),

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1140: FILE: crypto/twofish_common.c:336:
+ * statements so that each if covers four group multiplications. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1211: FILE: crypto/twofish_common.c:407:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1213: FILE: crypto/twofish_common.c:409:
+ * S-box entries, preprocessed through q0 and q1. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1284: FILE: crypto/twofish_common.c:480:
+ * the RS matrix, preprocessed through the poly_to_exp table. */

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1286: FILE: crypto/twofish_common.c:482:
+#define CALC_S(a, b, c, d, i, w, x, y, z) \
+   if (key[i]) { \
+      tmp = poly_to_exp[key[i] - 1]; \
+      (a) ^= exp_to_poly[tmp + (w)]; \
+      (b) ^= exp_to_poly[tmp + (x)]; \
+      (c) ^= exp_to_poly[tmp + (y)]; \
+      (d) ^= exp_to_poly[tmp + (z)]; \
+   }

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#1286: FILE: crypto/twofish_common.c:482:
+#define CALC_S(a, b, c, d, i, w, x, y, z) \
+   if (key[i]) { \
+      tmp = poly_to_exp[key[i] - 1]; \
+      (a) ^= exp_to_poly[tmp + (w)]; \
+      (b) ^= exp_to_poly[tmp + (x)]; \
+      (c) ^= exp_to_poly[tmp + (y)]; \
+      (d) ^= exp_to_poly[tmp + (z)]; \
+   }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1287: FILE: crypto/twofish_common.c:483:
+   if (key[i]) { \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#1287: FILE: crypto/twofish_common.c:483:
+   if (key[i]) { \
+      tmp = poly_to_exp[key[i] - 1]; \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1288: FILE: crypto/twofish_common.c:484:
+      tmp = poly_to_exp[key[i] - 1]; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1289: FILE: crypto/twofish_common.c:485:
+      (a) ^= exp_to_poly[tmp + (w)]; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1290: FILE: crypto/twofish_common.c:486:
+      (b) ^= exp_to_poly[tmp + (x)]; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1291: FILE: crypto/twofish_common.c:487:
+      (c) ^= exp_to_poly[tmp + (y)]; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1292: FILE: crypto/twofish_common.c:488:
+      (d) ^= exp_to_poly[tmp + (z)]; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1293: FILE: crypto/twofish_common.c:489:
+   }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1299: FILE: crypto/twofish_common.c:495:
+ * respectively. */

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1301: FILE: crypto/twofish_common.c:497:
+#define CALC_SB_2(i, a, b) \
+   ctx->s[0][i] = mds[0][q0[(a) ^ sa] ^ se]; \
+   ctx->s[1][i] = mds[1][q0[(b) ^ sb] ^ sf]; \
+   ctx->s[2][i] = mds[2][q1[(a) ^ sc] ^ sg]; \
+   ctx->s[3][i] = mds[3][q1[(b) ^ sd] ^ sh]

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#1301: FILE: crypto/twofish_common.c:497:
+#define CALC_SB_2(i, a, b) \
+   ctx->s[0][i] = mds[0][q0[(a) ^ sa] ^ se]; \
+   ctx->s[1][i] = mds[1][q0[(b) ^ sb] ^ sf]; \
+   ctx->s[2][i] = mds[2][q1[(a) ^ sc] ^ sg]; \
+   ctx->s[3][i] = mds[3][q1[(b) ^ sd] ^ sh]

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#1301: FILE: crypto/twofish_common.c:497:
+#define CALC_SB_2(i, a, b) \
+   ctx->s[0][i] = mds[0][q0[(a) ^ sa] ^ se]; \
+   ctx->s[1][i] = mds[1][q0[(b) ^ sb] ^ sf]; \
+   ctx->s[2][i] = mds[2][q1[(a) ^ sc] ^ sg]; \
+   ctx->s[3][i] = mds[3][q1[(b) ^ sd] ^ sh]

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#1301: FILE: crypto/twofish_common.c:497:
+#define CALC_SB_2(i, a, b) \
+   ctx->s[0][i] = mds[0][q0[(a) ^ sa] ^ se]; \
+   ctx->s[1][i] = mds[1][q0[(b) ^ sb] ^ sf]; \
+   ctx->s[2][i] = mds[2][q1[(a) ^ sc] ^ sg]; \
+   ctx->s[3][i] = mds[3][q1[(b) ^ sd] ^ sh]

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1302: FILE: crypto/twofish_common.c:498:
+   ctx->s[0][i] = mds[0][q0[(a) ^ sa] ^ se]; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1303: FILE: crypto/twofish_common.c:499:
+   ctx->s[1][i] = mds[1][q0[(b) ^ sb] ^ sf]; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1304: FILE: crypto/twofish_common.c:500:
+   ctx->s[2][i] = mds[2][q1[(a) ^ sc] ^ sg]; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1305: FILE: crypto/twofish_common.c:501:
+   ctx->s[3][i] = mds[3][q1[(b) ^ sd] ^ sh]$

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1309: FILE: crypto/twofish_common.c:505:
+#define CALC_SB192_2(i, a, b) \
+   ctx->s[0][i] = mds[0][q0[q0[(b) ^ sa] ^ se] ^ si]; \
+   ctx->s[1][i] = mds[1][q0[q1[(b) ^ sb] ^ sf] ^ sj]; \
+   ctx->s[2][i] = mds[2][q1[q0[(a) ^ sc] ^ sg] ^ sk]; \
+   ctx->s[3][i] = mds[3][q1[q1[(a) ^ sd] ^ sh] ^ sl];

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#1309: FILE: crypto/twofish_common.c:505:
+#define CALC_SB192_2(i, a, b) \
+   ctx->s[0][i] = mds[0][q0[q0[(b) ^ sa] ^ se] ^ si]; \
+   ctx->s[1][i] = mds[1][q0[q1[(b) ^ sb] ^ sf] ^ sj]; \
+   ctx->s[2][i] = mds[2][q1[q0[(a) ^ sc] ^ sg] ^ sk]; \
+   ctx->s[3][i] = mds[3][q1[q1[(a) ^ sd] ^ sh] ^ sl];

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#1309: FILE: crypto/twofish_common.c:505:
+#define CALC_SB192_2(i, a, b) \
+   ctx->s[0][i] = mds[0][q0[q0[(b) ^ sa] ^ se] ^ si]; \
+   ctx->s[1][i] = mds[1][q0[q1[(b) ^ sb] ^ sf] ^ sj]; \
+   ctx->s[2][i] = mds[2][q1[q0[(a) ^ sc] ^ sg] ^ sk]; \
+   ctx->s[3][i] = mds[3][q1[q1[(a) ^ sd] ^ sh] ^ sl];

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#1309: FILE: crypto/twofish_common.c:505:
+#define CALC_SB192_2(i, a, b) \
+   ctx->s[0][i] = mds[0][q0[q0[(b) ^ sa] ^ se] ^ si]; \
+   ctx->s[1][i] = mds[1][q0[q1[(b) ^ sb] ^ sf] ^ sj]; \
+   ctx->s[2][i] = mds[2][q1[q0[(a) ^ sc] ^ sg] ^ sk]; \
+   ctx->s[3][i] = mds[3][q1[q1[(a) ^ sd] ^ sh] ^ sl];

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1309: FILE: crypto/twofish_common.c:505:
+#define CALC_SB192_2(i, a, b) \
+   ctx->s[0][i] = mds[0][q0[q0[(b) ^ sa] ^ se] ^ si]; \
+   ctx->s[1][i] = mds[1][q0[q1[(b) ^ sb] ^ sf] ^ sj]; \
+   ctx->s[2][i] = mds[2][q1[q0[(a) ^ sc] ^ sg] ^ sk]; \
+   ctx->s[3][i] = mds[3][q1[q1[(a) ^ sd] ^ sh] ^ sl];

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1310: FILE: crypto/twofish_common.c:506:
+   ctx->s[0][i] = mds[0][q0[q0[(b) ^ sa] ^ se] ^ si]; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1311: FILE: crypto/twofish_common.c:507:
+   ctx->s[1][i] = mds[1][q0[q1[(b) ^ sb] ^ sf] ^ sj]; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1312: FILE: crypto/twofish_common.c:508:
+   ctx->s[2][i] = mds[2][q1[q0[(a) ^ sc] ^ sg] ^ sk]; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1313: FILE: crypto/twofish_common.c:509:
+   ctx->s[3][i] = mds[3][q1[q1[(a) ^ sd] ^ sh] ^ sl];$

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1317: FILE: crypto/twofish_common.c:513:
+#define CALC_SB256_2(i, a, b) \
+   ctx->s[0][i] = mds[0][q0[q0[q1[(b) ^ sa] ^ se] ^ si] ^ sm]; \
+   ctx->s[1][i] = mds[1][q0[q1[q1[(a) ^ sb] ^ sf] ^ sj] ^ sn]; \
+   ctx->s[2][i] = mds[2][q1[q0[q0[(a) ^ sc] ^ sg] ^ sk] ^ so]; \
+   ctx->s[3][i] = mds[3][q1[q1[q0[(b) ^ sd] ^ sh] ^ sl] ^ sp];

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#1317: FILE: crypto/twofish_common.c:513:
+#define CALC_SB256_2(i, a, b) \
+   ctx->s[0][i] = mds[0][q0[q0[q1[(b) ^ sa] ^ se] ^ si] ^ sm]; \
+   ctx->s[1][i] = mds[1][q0[q1[q1[(a) ^ sb] ^ sf] ^ sj] ^ sn]; \
+   ctx->s[2][i] = mds[2][q1[q0[q0[(a) ^ sc] ^ sg] ^ sk] ^ so]; \
+   ctx->s[3][i] = mds[3][q1[q1[q0[(b) ^ sd] ^ sh] ^ sl] ^ sp];

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#1317: FILE: crypto/twofish_common.c:513:
+#define CALC_SB256_2(i, a, b) \
+   ctx->s[0][i] = mds[0][q0[q0[q1[(b) ^ sa] ^ se] ^ si] ^ sm]; \
+   ctx->s[1][i] = mds[1][q0[q1[q1[(a) ^ sb] ^ sf] ^ sj] ^ sn]; \
+   ctx->s[2][i] = mds[2][q1[q0[q0[(a) ^ sc] ^ sg] ^ sk] ^ so]; \
+   ctx->s[3][i] = mds[3][q1[q1[q0[(b) ^ sd] ^ sh] ^ sl] ^ sp];

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#1317: FILE: crypto/twofish_common.c:513:
+#define CALC_SB256_2(i, a, b) \
+   ctx->s[0][i] = mds[0][q0[q0[q1[(b) ^ sa] ^ se] ^ si] ^ sm]; \
+   ctx->s[1][i] = mds[1][q0[q1[q1[(a) ^ sb] ^ sf] ^ sj] ^ sn]; \
+   ctx->s[2][i] = mds[2][q1[q0[q0[(a) ^ sc] ^ sg] ^ sk] ^ so]; \
+   ctx->s[3][i] = mds[3][q1[q1[q0[(b) ^ sd] ^ sh] ^ sl] ^ sp];

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1317: FILE: crypto/twofish_common.c:513:
+#define CALC_SB256_2(i, a, b) \
+   ctx->s[0][i] = mds[0][q0[q0[q1[(b) ^ sa] ^ se] ^ si] ^ sm]; \
+   ctx->s[1][i] = mds[1][q0[q1[q1[(a) ^ sb] ^ sf] ^ sj] ^ sn]; \
+   ctx->s[2][i] = mds[2][q1[q0[q0[(a) ^ sc] ^ sg] ^ sk] ^ so]; \
+   ctx->s[3][i] = mds[3][q1[q1[q0[(b) ^ sd] ^ sh] ^ sl] ^ sp];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1318: FILE: crypto/twofish_common.c:514:
+   ctx->s[0][i] = mds[0][q0[q0[q1[(b) ^ sa] ^ se] ^ si] ^ sm]; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1319: FILE: crypto/twofish_common.c:515:
+   ctx->s[1][i] = mds[1][q0[q1[q1[(a) ^ sb] ^ sf] ^ sj] ^ sn]; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1320: FILE: crypto/twofish_common.c:516:
+   ctx->s[2][i] = mds[2][q1[q0[q0[(a) ^ sc] ^ sg] ^ sk] ^ so]; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1321: FILE: crypto/twofish_common.c:517:
+   ctx->s[3][i] = mds[3][q1[q1[q0[(b) ^ sd] ^ sh] ^ sl] ^ sp];$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1345: FILE: crypto/twofish_common.c:541:
+ * CALC_K256_2 macro instead of CALC_K_2. */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1347: FILE: crypto/twofish_common.c:543:
+#define CALC_K_2(a, b, c, d, j) \
+     mds[0][q0[a ^ key[(j) + 8]] ^ key[j]] \
+   ^ mds[1][q0[b ^ key[(j) + 9]] ^ key[(j) + 1]] \
+   ^ mds[2][q1[c ^ key[(j) + 10]] ^ key[(j) + 2]] \
+   ^ mds[3][q1[d ^ key[(j) + 11]] ^ key[(j) + 3]]

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#1347: FILE: crypto/twofish_common.c:543:
+#define CALC_K_2(a, b, c, d, j) \
+     mds[0][q0[a ^ key[(j) + 8]] ^ key[j]] \
+   ^ mds[1][q0[b ^ key[(j) + 9]] ^ key[(j) + 1]] \
+   ^ mds[2][q1[c ^ key[(j) + 10]] ^ key[(j) + 2]] \
+   ^ mds[3][q1[d ^ key[(j) + 11]] ^ key[(j) + 3]]

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#1347: FILE: crypto/twofish_common.c:543:
+#define CALC_K_2(a, b, c, d, j) \
+     mds[0][q0[a ^ key[(j) + 8]] ^ key[j]] \
+   ^ mds[1][q0[b ^ key[(j) + 9]] ^ key[(j) + 1]] \
+   ^ mds[2][q1[c ^ key[(j) + 10]] ^ key[(j) + 2]] \
+   ^ mds[3][q1[d ^ key[(j) + 11]] ^ key[(j) + 3]]

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#1347: FILE: crypto/twofish_common.c:543:
+#define CALC_K_2(a, b, c, d, j) \
+     mds[0][q0[a ^ key[(j) + 8]] ^ key[j]] \
+   ^ mds[1][q0[b ^ key[(j) + 9]] ^ key[(j) + 1]] \
+   ^ mds[2][q1[c ^ key[(j) + 10]] ^ key[(j) + 2]] \
+   ^ mds[3][q1[d ^ key[(j) + 11]] ^ key[(j) + 3]]

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'd' may be better as '(d)' to avoid precedence issues
#1347: FILE: crypto/twofish_common.c:543:
+#define CALC_K_2(a, b, c, d, j) \
+     mds[0][q0[a ^ key[(j) + 8]] ^ key[j]] \
+   ^ mds[1][q0[b ^ key[(j) + 9]] ^ key[(j) + 1]] \
+   ^ mds[2][q1[c ^ key[(j) + 10]] ^ key[(j) + 2]] \
+   ^ mds[3][q1[d ^ key[(j) + 11]] ^ key[(j) + 3]]

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'j' - possible side-effects?
#1347: FILE: crypto/twofish_common.c:543:
+#define CALC_K_2(a, b, c, d, j) \
+     mds[0][q0[a ^ key[(j) + 8]] ^ key[j]] \
+   ^ mds[1][q0[b ^ key[(j) + 9]] ^ key[(j) + 1]] \
+   ^ mds[2][q1[c ^ key[(j) + 10]] ^ key[(j) + 2]] \
+   ^ mds[3][q1[d ^ key[(j) + 11]] ^ key[(j) + 3]]

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1348: FILE: crypto/twofish_common.c:544:
+     mds[0][q0[a ^ key[(j) + 8]] ^ key[j]] \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1349: FILE: crypto/twofish_common.c:545:
+   ^ mds[1][q0[b ^ key[(j) + 9]] ^ key[(j) + 1]] \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1350: FILE: crypto/twofish_common.c:546:
+   ^ mds[2][q1[c ^ key[(j) + 10]] ^ key[(j) + 2]] \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1351: FILE: crypto/twofish_common.c:547:
+   ^ mds[3][q1[d ^ key[(j) + 11]] ^ key[(j) + 3]]$

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1353: FILE: crypto/twofish_common.c:549:
+#define CALC_K(a, j, k, l, m, n) \
+   x = CALC_K_2 (k, l, k, l, 0); \
+   y = CALC_K_2 (m, n, m, n, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#1353: FILE: crypto/twofish_common.c:549:
+#define CALC_K(a, j, k, l, m, n) \
+   x = CALC_K_2 (k, l, k, l, 0); \
+   y = CALC_K_2 (m, n, m, n, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#1353: FILE: crypto/twofish_common.c:549:
+#define CALC_K(a, j, k, l, m, n) \
+   x = CALC_K_2 (k, l, k, l, 0); \
+   y = CALC_K_2 (m, n, m, n, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'j' - possible side-effects?
#1353: FILE: crypto/twofish_common.c:549:
+#define CALC_K(a, j, k, l, m, n) \
+   x = CALC_K_2 (k, l, k, l, 0); \
+   y = CALC_K_2 (m, n, m, n, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'k' - possible side-effects?
#1353: FILE: crypto/twofish_common.c:549:
+#define CALC_K(a, j, k, l, m, n) \
+   x = CALC_K_2 (k, l, k, l, 0); \
+   y = CALC_K_2 (m, n, m, n, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'l' - possible side-effects?
#1353: FILE: crypto/twofish_common.c:549:
+#define CALC_K(a, j, k, l, m, n) \
+   x = CALC_K_2 (k, l, k, l, 0); \
+   y = CALC_K_2 (m, n, m, n, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm' - possible side-effects?
#1353: FILE: crypto/twofish_common.c:549:
+#define CALC_K(a, j, k, l, m, n) \
+   x = CALC_K_2 (k, l, k, l, 0); \
+   y = CALC_K_2 (m, n, m, n, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#1353: FILE: crypto/twofish_common.c:549:
+#define CALC_K(a, j, k, l, m, n) \
+   x = CALC_K_2 (k, l, k, l, 0); \
+   y = CALC_K_2 (m, n, m, n, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1354: FILE: crypto/twofish_common.c:550:
+   x = CALC_K_2 (k, l, k, l, 0); \$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1354: FILE: crypto/twofish_common.c:550:
+   x = CALC_K_2 (k, l, k, l, 0); \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1355: FILE: crypto/twofish_common.c:551:
+   y = CALC_K_2 (m, n, m, n, 4); \$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1355: FILE: crypto/twofish_common.c:551:
+   y = CALC_K_2 (m, n, m, n, 4); \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1356: FILE: crypto/twofish_common.c:552:
+   y = rol32(y, 8); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1357: FILE: crypto/twofish_common.c:553:
+   x += y; y += x; ctx->a[j] = x; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1358: FILE: crypto/twofish_common.c:554:
+   ctx->a[(j) + 1] = rol32(y, 9)$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1360: FILE: crypto/twofish_common.c:556:
+#define CALC_K192_2(a, b, c, d, j) \
+   CALC_K_2 (q0[a ^ key[(j) + 16]], \
+	     q1[b ^ key[(j) + 17]], \
+	     q0[c ^ key[(j) + 18]], \
+	     q1[d ^ key[(j) + 19]], j)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#1360: FILE: crypto/twofish_common.c:556:
+#define CALC_K192_2(a, b, c, d, j) \
+   CALC_K_2 (q0[a ^ key[(j) + 16]], \
+	     q1[b ^ key[(j) + 17]], \
+	     q0[c ^ key[(j) + 18]], \
+	     q1[d ^ key[(j) + 19]], j)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#1360: FILE: crypto/twofish_common.c:556:
+#define CALC_K192_2(a, b, c, d, j) \
+   CALC_K_2 (q0[a ^ key[(j) + 16]], \
+	     q1[b ^ key[(j) + 17]], \
+	     q0[c ^ key[(j) + 18]], \
+	     q1[d ^ key[(j) + 19]], j)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#1360: FILE: crypto/twofish_common.c:556:
+#define CALC_K192_2(a, b, c, d, j) \
+   CALC_K_2 (q0[a ^ key[(j) + 16]], \
+	     q1[b ^ key[(j) + 17]], \
+	     q0[c ^ key[(j) + 18]], \
+	     q1[d ^ key[(j) + 19]], j)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'd' may be better as '(d)' to avoid precedence issues
#1360: FILE: crypto/twofish_common.c:556:
+#define CALC_K192_2(a, b, c, d, j) \
+   CALC_K_2 (q0[a ^ key[(j) + 16]], \
+	     q1[b ^ key[(j) + 17]], \
+	     q0[c ^ key[(j) + 18]], \
+	     q1[d ^ key[(j) + 19]], j)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'j' - possible side-effects?
#1360: FILE: crypto/twofish_common.c:556:
+#define CALC_K192_2(a, b, c, d, j) \
+   CALC_K_2 (q0[a ^ key[(j) + 16]], \
+	     q1[b ^ key[(j) + 17]], \
+	     q0[c ^ key[(j) + 18]], \
+	     q1[d ^ key[(j) + 19]], j)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1361: FILE: crypto/twofish_common.c:557:
+   CALC_K_2 (q0[a ^ key[(j) + 16]], \$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1361: FILE: crypto/twofish_common.c:557:
+   CALC_K_2 (q0[a ^ key[(j) + 16]], \

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1366: FILE: crypto/twofish_common.c:562:
+#define CALC_K192(a, j, k, l, m, n) \
+   x = CALC_K192_2 (l, l, k, k, 0); \
+   y = CALC_K192_2 (n, n, m, m, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#1366: FILE: crypto/twofish_common.c:562:
+#define CALC_K192(a, j, k, l, m, n) \
+   x = CALC_K192_2 (l, l, k, k, 0); \
+   y = CALC_K192_2 (n, n, m, m, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#1366: FILE: crypto/twofish_common.c:562:
+#define CALC_K192(a, j, k, l, m, n) \
+   x = CALC_K192_2 (l, l, k, k, 0); \
+   y = CALC_K192_2 (n, n, m, m, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'j' - possible side-effects?
#1366: FILE: crypto/twofish_common.c:562:
+#define CALC_K192(a, j, k, l, m, n) \
+   x = CALC_K192_2 (l, l, k, k, 0); \
+   y = CALC_K192_2 (n, n, m, m, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'k' - possible side-effects?
#1366: FILE: crypto/twofish_common.c:562:
+#define CALC_K192(a, j, k, l, m, n) \
+   x = CALC_K192_2 (l, l, k, k, 0); \
+   y = CALC_K192_2 (n, n, m, m, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'l' - possible side-effects?
#1366: FILE: crypto/twofish_common.c:562:
+#define CALC_K192(a, j, k, l, m, n) \
+   x = CALC_K192_2 (l, l, k, k, 0); \
+   y = CALC_K192_2 (n, n, m, m, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm' - possible side-effects?
#1366: FILE: crypto/twofish_common.c:562:
+#define CALC_K192(a, j, k, l, m, n) \
+   x = CALC_K192_2 (l, l, k, k, 0); \
+   y = CALC_K192_2 (n, n, m, m, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#1366: FILE: crypto/twofish_common.c:562:
+#define CALC_K192(a, j, k, l, m, n) \
+   x = CALC_K192_2 (l, l, k, k, 0); \
+   y = CALC_K192_2 (n, n, m, m, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1367: FILE: crypto/twofish_common.c:563:
+   x = CALC_K192_2 (l, l, k, k, 0); \$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1367: FILE: crypto/twofish_common.c:563:
+   x = CALC_K192_2 (l, l, k, k, 0); \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1368: FILE: crypto/twofish_common.c:564:
+   y = CALC_K192_2 (n, n, m, m, 4); \$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1368: FILE: crypto/twofish_common.c:564:
+   y = CALC_K192_2 (n, n, m, m, 4); \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1369: FILE: crypto/twofish_common.c:565:
+   y = rol32(y, 8); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1370: FILE: crypto/twofish_common.c:566:
+   x += y; y += x; ctx->a[j] = x; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1371: FILE: crypto/twofish_common.c:567:
+   ctx->a[(j) + 1] = rol32(y, 9)$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1373: FILE: crypto/twofish_common.c:569:
+#define CALC_K256_2(a, b, j) \
+   CALC_K192_2 (q1[b ^ key[(j) + 24]], \
+	        q1[a ^ key[(j) + 25]], \
+	        q0[a ^ key[(j) + 26]], \
+	        q0[b ^ key[(j) + 27]], j)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#1373: FILE: crypto/twofish_common.c:569:
+#define CALC_K256_2(a, b, j) \
+   CALC_K192_2 (q1[b ^ key[(j) + 24]], \
+	        q1[a ^ key[(j) + 25]], \
+	        q0[a ^ key[(j) + 26]], \
+	        q0[b ^ key[(j) + 27]], j)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#1373: FILE: crypto/twofish_common.c:569:
+#define CALC_K256_2(a, b, j) \
+   CALC_K192_2 (q1[b ^ key[(j) + 24]], \
+	        q1[a ^ key[(j) + 25]], \
+	        q0[a ^ key[(j) + 26]], \
+	        q0[b ^ key[(j) + 27]], j)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#1373: FILE: crypto/twofish_common.c:569:
+#define CALC_K256_2(a, b, j) \
+   CALC_K192_2 (q1[b ^ key[(j) + 24]], \
+	        q1[a ^ key[(j) + 25]], \
+	        q0[a ^ key[(j) + 26]], \
+	        q0[b ^ key[(j) + 27]], j)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#1373: FILE: crypto/twofish_common.c:569:
+#define CALC_K256_2(a, b, j) \
+   CALC_K192_2 (q1[b ^ key[(j) + 24]], \
+	        q1[a ^ key[(j) + 25]], \
+	        q0[a ^ key[(j) + 26]], \
+	        q0[b ^ key[(j) + 27]], j)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'j' - possible side-effects?
#1373: FILE: crypto/twofish_common.c:569:
+#define CALC_K256_2(a, b, j) \
+   CALC_K192_2 (q1[b ^ key[(j) + 24]], \
+	        q1[a ^ key[(j) + 25]], \
+	        q0[a ^ key[(j) + 26]], \
+	        q0[b ^ key[(j) + 27]], j)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1374: FILE: crypto/twofish_common.c:570:
+   CALC_K192_2 (q1[b ^ key[(j) + 24]], \$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1374: FILE: crypto/twofish_common.c:570:
+   CALC_K192_2 (q1[b ^ key[(j) + 24]], \

ERROR:CODE_INDENT: code indent should use tabs where possible
#1375: FILE: crypto/twofish_common.c:571:
+^I        q1[a ^ key[(j) + 25]], \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#1376: FILE: crypto/twofish_common.c:572:
+^I        q0[a ^ key[(j) + 26]], \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1377: FILE: crypto/twofish_common.c:573:
+^I        q0[b ^ key[(j) + 27]], j)$

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1379: FILE: crypto/twofish_common.c:575:
+#define CALC_K256(a, j, k, l, m, n) \
+   x = CALC_K256_2 (k, l, 0); \
+   y = CALC_K256_2 (m, n, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#1379: FILE: crypto/twofish_common.c:575:
+#define CALC_K256(a, j, k, l, m, n) \
+   x = CALC_K256_2 (k, l, 0); \
+   y = CALC_K256_2 (m, n, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#1379: FILE: crypto/twofish_common.c:575:
+#define CALC_K256(a, j, k, l, m, n) \
+   x = CALC_K256_2 (k, l, 0); \
+   y = CALC_K256_2 (m, n, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'j' - possible side-effects?
#1379: FILE: crypto/twofish_common.c:575:
+#define CALC_K256(a, j, k, l, m, n) \
+   x = CALC_K256_2 (k, l, 0); \
+   y = CALC_K256_2 (m, n, 4); \
+   y = rol32(y, 8); \
+   x += y; y += x; ctx->a[j] = x; \
+   ctx->a[(j) + 1] = rol32(y, 9)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1380: FILE: crypto/twofish_common.c:576:
+   x = CALC_K256_2 (k, l, 0); \$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1380: FILE: crypto/twofish_common.c:576:
+   x = CALC_K256_2 (k, l, 0); \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1381: FILE: crypto/twofish_common.c:577:
+   y = CALC_K256_2 (m, n, 4); \$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1381: FILE: crypto/twofish_common.c:577:
+   y = CALC_K256_2 (m, n, 4); \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1382: FILE: crypto/twofish_common.c:578:
+   y = rol32(y, 8); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1383: FILE: crypto/twofish_common.c:579:
+   x += y; y += x; ctx->a[j] = x; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1384: FILE: crypto/twofish_common.c:580:
+   ctx->a[(j) + 1] = rol32(y, 9)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1388: FILE: crypto/twofish_common.c:584:
+int twofish_setkey(struct crypto_tfm *tfm, const u8 *key,
+			unsigned int key_len, u32 *flags)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1390: FILE: crypto/twofish_common.c:586:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1390: FILE: crypto/twofish_common.c:586:
+{
+	

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1399: FILE: crypto/twofish_common.c:595:
+	 * 128-bit keys use only sa through sh; 256-bit use all of them. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1407: FILE: crypto/twofish_common.c:603:
+	if (key_len != 16 && key_len != 24 && key_len != 32)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1416: FILE: crypto/twofish_common.c:612:
+	 * entries. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1417: FILE: crypto/twofish_common.c:613:
+	CALC_S (sa, sb, sc, sd, 0, 0x00, 0x2D, 0x01, 0x2D); /* 01 A4 02 A4 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1418: FILE: crypto/twofish_common.c:614:
+	CALC_S (sa, sb, sc, sd, 1, 0x2D, 0xA4, 0x44, 0x8A); /* A4 56 A1 55 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1419: FILE: crypto/twofish_common.c:615:
+	CALC_S (sa, sb, sc, sd, 2, 0x8A, 0xD5, 0xBF, 0xD1); /* 55 82 FC 87 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1420: FILE: crypto/twofish_common.c:616:
+	CALC_S (sa, sb, sc, sd, 3, 0xD1, 0x7F, 0x3D, 0x99); /* 87 F3 C1 5A */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1421: FILE: crypto/twofish_common.c:617:
+	CALC_S (sa, sb, sc, sd, 4, 0x99, 0x46, 0x66, 0x96); /* 5A 1E 47 58 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1422: FILE: crypto/twofish_common.c:618:
+	CALC_S (sa, sb, sc, sd, 5, 0x96, 0x3C, 0x5B, 0xED); /* 58 C6 AE DB */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1423: FILE: crypto/twofish_common.c:619:
+	CALC_S (sa, sb, sc, sd, 6, 0xED, 0x37, 0x4F, 0xE0); /* DB 68 3D 9E */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1424: FILE: crypto/twofish_common.c:620:
+	CALC_S (sa, sb, sc, sd, 7, 0xE0, 0xD0, 0x8C, 0x17); /* 9E E5 19 03 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1425: FILE: crypto/twofish_common.c:621:
+	CALC_S (se, sf, sg, sh, 8, 0x00, 0x2D, 0x01, 0x2D); /* 01 A4 02 A4 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1426: FILE: crypto/twofish_common.c:622:
+	CALC_S (se, sf, sg, sh, 9, 0x2D, 0xA4, 0x44, 0x8A); /* A4 56 A1 55 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1427: FILE: crypto/twofish_common.c:623:
+	CALC_S (se, sf, sg, sh, 10, 0x8A, 0xD5, 0xBF, 0xD1); /* 55 82 FC 87 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1428: FILE: crypto/twofish_common.c:624:
+	CALC_S (se, sf, sg, sh, 11, 0xD1, 0x7F, 0x3D, 0x99); /* 87 F3 C1 5A */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1429: FILE: crypto/twofish_common.c:625:
+	CALC_S (se, sf, sg, sh, 12, 0x99, 0x46, 0x66, 0x96); /* 5A 1E 47 58 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1430: FILE: crypto/twofish_common.c:626:
+	CALC_S (se, sf, sg, sh, 13, 0x96, 0x3C, 0x5B, 0xED); /* 58 C6 AE DB */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1431: FILE: crypto/twofish_common.c:627:
+	CALC_S (se, sf, sg, sh, 14, 0xED, 0x37, 0x4F, 0xE0); /* DB 68 3D 9E */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1432: FILE: crypto/twofish_common.c:628:
+	CALC_S (se, sf, sg, sh, 15, 0xE0, 0xD0, 0x8C, 0x17); /* 9E E5 19 03 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1436: FILE: crypto/twofish_common.c:632:
+		CALC_S (si, sj, sk, sl, 16, 0x00, 0x2D, 0x01, 0x2D); /* 01 A4 02 A4 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1437: FILE: crypto/twofish_common.c:633:
+		CALC_S (si, sj, sk, sl, 17, 0x2D, 0xA4, 0x44, 0x8A); /* A4 56 A1 55 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1438: FILE: crypto/twofish_common.c:634:
+		CALC_S (si, sj, sk, sl, 18, 0x8A, 0xD5, 0xBF, 0xD1); /* 55 82 FC 87 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1439: FILE: crypto/twofish_common.c:635:
+		CALC_S (si, sj, sk, sl, 19, 0xD1, 0x7F, 0x3D, 0x99); /* 87 F3 C1 5A */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1440: FILE: crypto/twofish_common.c:636:
+		CALC_S (si, sj, sk, sl, 20, 0x99, 0x46, 0x66, 0x96); /* 5A 1E 47 58 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1441: FILE: crypto/twofish_common.c:637:
+		CALC_S (si, sj, sk, sl, 21, 0x96, 0x3C, 0x5B, 0xED); /* 58 C6 AE DB */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1442: FILE: crypto/twofish_common.c:638:
+		CALC_S (si, sj, sk, sl, 22, 0xED, 0x37, 0x4F, 0xE0); /* DB 68 3D 9E */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1443: FILE: crypto/twofish_common.c:639:
+		CALC_S (si, sj, sk, sl, 23, 0xE0, 0xD0, 0x8C, 0x17); /* 9E E5 19 03 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1448: FILE: crypto/twofish_common.c:644:
+		CALC_S (sm, sn, so, sp, 24, 0x00, 0x2D, 0x01, 0x2D); /* 01 A4 02 A4 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1449: FILE: crypto/twofish_common.c:645:
+		CALC_S (sm, sn, so, sp, 25, 0x2D, 0xA4, 0x44, 0x8A); /* A4 56 A1 55 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1450: FILE: crypto/twofish_common.c:646:
+		CALC_S (sm, sn, so, sp, 26, 0x8A, 0xD5, 0xBF, 0xD1); /* 55 82 FC 87 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1451: FILE: crypto/twofish_common.c:647:
+		CALC_S (sm, sn, so, sp, 27, 0xD1, 0x7F, 0x3D, 0x99); /* 87 F3 C1 5A */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1452: FILE: crypto/twofish_common.c:648:
+		CALC_S (sm, sn, so, sp, 28, 0x99, 0x46, 0x66, 0x96); /* 5A 1E 47 58 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1453: FILE: crypto/twofish_common.c:649:
+		CALC_S (sm, sn, so, sp, 29, 0x96, 0x3C, 0x5B, 0xED); /* 58 C6 AE DB */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1454: FILE: crypto/twofish_common.c:650:
+		CALC_S (sm, sn, so, sp, 30, 0xED, 0x37, 0x4F, 0xE0); /* DB 68 3D 9E */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1455: FILE: crypto/twofish_common.c:651:
+		CALC_S (sm, sn, so, sp, 31, 0xE0, 0xD0, 0x8C, 0x17); /* 9E E5 19 03 */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1458: FILE: crypto/twofish_common.c:654:
+		for ( i = j = 0, k = 1; i < 256; i++, j += 2, k += 2 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1458: FILE: crypto/twofish_common.c:654:
+		for ( i = j = 0, k = 1; i < 256; i++, j += 2, k += 2 ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1458: FILE: crypto/twofish_common.c:654:
+		for ( i = j = 0, k = 1; i < 256; i++, j += 2, k += 2 ) {
+			CALC_SB256_2( i, calc_sb_tbl[j], calc_sb_tbl[k] );
+		}

ERROR:SPACING: space prohibited after that open parenthesis '('
#1459: FILE: crypto/twofish_common.c:655:
+			CALC_SB256_2( i, calc_sb_tbl[j], calc_sb_tbl[k] );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1459: FILE: crypto/twofish_common.c:655:
+			CALC_SB256_2( i, calc_sb_tbl[j], calc_sb_tbl[k] );

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1463: FILE: crypto/twofish_common.c:659:
+		 * indices of subkeys, preprocessed through q0 and q1. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1464: FILE: crypto/twofish_common.c:660:
+		CALC_K256 (w, 0, 0xA9, 0x75, 0x67, 0xF3);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1465: FILE: crypto/twofish_common.c:661:
+		CALC_K256 (w, 2, 0xB3, 0xC6, 0xE8, 0xF4);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1466: FILE: crypto/twofish_common.c:662:
+		CALC_K256 (w, 4, 0x04, 0xDB, 0xFD, 0x7B);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1467: FILE: crypto/twofish_common.c:663:
+		CALC_K256 (w, 6, 0xA3, 0xFB, 0x76, 0xC8);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1468: FILE: crypto/twofish_common.c:664:
+		CALC_K256 (k, 0, 0x9A, 0x4A, 0x92, 0xD3);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1469: FILE: crypto/twofish_common.c:665:
+		CALC_K256 (k, 2, 0x80, 0xE6, 0x78, 0x6B);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1470: FILE: crypto/twofish_common.c:666:
+		CALC_K256 (k, 4, 0xE4, 0x45, 0xDD, 0x7D);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1471: FILE: crypto/twofish_common.c:667:
+		CALC_K256 (k, 6, 0xD1, 0xE8, 0x38, 0x4B);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1472: FILE: crypto/twofish_common.c:668:
+		CALC_K256 (k, 8, 0x0D, 0xD6, 0xC6, 0x32);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1473: FILE: crypto/twofish_common.c:669:
+		CALC_K256 (k, 10, 0x35, 0xD8, 0x98, 0xFD);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1474: FILE: crypto/twofish_common.c:670:
+		CALC_K256 (k, 12, 0x18, 0x37, 0xF7, 0x71);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1475: FILE: crypto/twofish_common.c:671:
+		CALC_K256 (k, 14, 0xEC, 0xF1, 0x6C, 0xE1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1476: FILE: crypto/twofish_common.c:672:
+		CALC_K256 (k, 16, 0x43, 0x30, 0x75, 0x0F);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1477: FILE: crypto/twofish_common.c:673:
+		CALC_K256 (k, 18, 0x37, 0xF8, 0x26, 0x1B);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1478: FILE: crypto/twofish_common.c:674:
+		CALC_K256 (k, 20, 0xFA, 0x87, 0x13, 0xFA);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1479: FILE: crypto/twofish_common.c:675:
+		CALC_K256 (k, 22, 0x94, 0x06, 0x48, 0x3F);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1480: FILE: crypto/twofish_common.c:676:
+		CALC_K256 (k, 24, 0xF2, 0x5E, 0xD0, 0xBA);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1481: FILE: crypto/twofish_common.c:677:
+		CALC_K256 (k, 26, 0x8B, 0xAE, 0x30, 0x5B);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1482: FILE: crypto/twofish_common.c:678:
+		CALC_K256 (k, 28, 0x84, 0x8A, 0x54, 0x00);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1483: FILE: crypto/twofish_common.c:679:
+		CALC_K256 (k, 30, 0xDF, 0xBC, 0x23, 0x9D);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1486: FILE: crypto/twofish_common.c:682:
+		for ( i = j = 0, k = 1; i < 256; i++, j += 2, k += 2 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1486: FILE: crypto/twofish_common.c:682:
+		for ( i = j = 0, k = 1; i < 256; i++, j += 2, k += 2 ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1486: FILE: crypto/twofish_common.c:682:
+		for ( i = j = 0, k = 1; i < 256; i++, j += 2, k += 2 ) {
+		        CALC_SB192_2( i, calc_sb_tbl[j], calc_sb_tbl[k] );
+		}

ERROR:CODE_INDENT: code indent should use tabs where possible
#1487: FILE: crypto/twofish_common.c:683:
+^I^I        CALC_SB192_2( i, calc_sb_tbl[j], calc_sb_tbl[k] );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1487: FILE: crypto/twofish_common.c:683:
+		        CALC_SB192_2( i, calc_sb_tbl[j], calc_sb_tbl[k] );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1487: FILE: crypto/twofish_common.c:683:
+		        CALC_SB192_2( i, calc_sb_tbl[j], calc_sb_tbl[k] );

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1491: FILE: crypto/twofish_common.c:687:
+		 * indices of subkeys, preprocessed through q0 and q1. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1492: FILE: crypto/twofish_common.c:688:
+		CALC_K192 (w, 0, 0xA9, 0x75, 0x67, 0xF3);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1493: FILE: crypto/twofish_common.c:689:
+		CALC_K192 (w, 2, 0xB3, 0xC6, 0xE8, 0xF4);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1494: FILE: crypto/twofish_common.c:690:
+		CALC_K192 (w, 4, 0x04, 0xDB, 0xFD, 0x7B);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1495: FILE: crypto/twofish_common.c:691:
+		CALC_K192 (w, 6, 0xA3, 0xFB, 0x76, 0xC8);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1496: FILE: crypto/twofish_common.c:692:
+		CALC_K192 (k, 0, 0x9A, 0x4A, 0x92, 0xD3);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1497: FILE: crypto/twofish_common.c:693:
+		CALC_K192 (k, 2, 0x80, 0xE6, 0x78, 0x6B);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1498: FILE: crypto/twofish_common.c:694:
+		CALC_K192 (k, 4, 0xE4, 0x45, 0xDD, 0x7D);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1499: FILE: crypto/twofish_common.c:695:
+		CALC_K192 (k, 6, 0xD1, 0xE8, 0x38, 0x4B);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1500: FILE: crypto/twofish_common.c:696:
+		CALC_K192 (k, 8, 0x0D, 0xD6, 0xC6, 0x32);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1501: FILE: crypto/twofish_common.c:697:
+		CALC_K192 (k, 10, 0x35, 0xD8, 0x98, 0xFD);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1502: FILE: crypto/twofish_common.c:698:
+		CALC_K192 (k, 12, 0x18, 0x37, 0xF7, 0x71);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1503: FILE: crypto/twofish_common.c:699:
+		CALC_K192 (k, 14, 0xEC, 0xF1, 0x6C, 0xE1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1504: FILE: crypto/twofish_common.c:700:
+		CALC_K192 (k, 16, 0x43, 0x30, 0x75, 0x0F);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1505: FILE: crypto/twofish_common.c:701:
+		CALC_K192 (k, 18, 0x37, 0xF8, 0x26, 0x1B);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1506: FILE: crypto/twofish_common.c:702:
+		CALC_K192 (k, 20, 0xFA, 0x87, 0x13, 0xFA);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1507: FILE: crypto/twofish_common.c:703:
+		CALC_K192 (k, 22, 0x94, 0x06, 0x48, 0x3F);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1508: FILE: crypto/twofish_common.c:704:
+		CALC_K192 (k, 24, 0xF2, 0x5E, 0xD0, 0xBA);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1509: FILE: crypto/twofish_common.c:705:
+		CALC_K192 (k, 26, 0x8B, 0xAE, 0x30, 0x5B);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1510: FILE: crypto/twofish_common.c:706:
+		CALC_K192 (k, 28, 0x84, 0x8A, 0x54, 0x00);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1511: FILE: crypto/twofish_common.c:707:
+		CALC_K192 (k, 30, 0xDF, 0xBC, 0x23, 0x9D);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1514: FILE: crypto/twofish_common.c:710:
+		for ( i = j = 0, k = 1; i < 256; i++, j += 2, k += 2 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1514: FILE: crypto/twofish_common.c:710:
+		for ( i = j = 0, k = 1; i < 256; i++, j += 2, k += 2 ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1514: FILE: crypto/twofish_common.c:710:
+		for ( i = j = 0, k = 1; i < 256; i++, j += 2, k += 2 ) {
+			CALC_SB_2( i, calc_sb_tbl[j], calc_sb_tbl[k] );
+		}

ERROR:SPACING: space prohibited after that open parenthesis '('
#1515: FILE: crypto/twofish_common.c:711:
+			CALC_SB_2( i, calc_sb_tbl[j], calc_sb_tbl[k] );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1515: FILE: crypto/twofish_common.c:711:
+			CALC_SB_2( i, calc_sb_tbl[j], calc_sb_tbl[k] );

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1519: FILE: crypto/twofish_common.c:715:
+		 * indices of subkeys, preprocessed through q0 and q1. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1520: FILE: crypto/twofish_common.c:716:
+		CALC_K (w, 0, 0xA9, 0x75, 0x67, 0xF3);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1521: FILE: crypto/twofish_common.c:717:
+		CALC_K (w, 2, 0xB3, 0xC6, 0xE8, 0xF4);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1522: FILE: crypto/twofish_common.c:718:
+		CALC_K (w, 4, 0x04, 0xDB, 0xFD, 0x7B);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1523: FILE: crypto/twofish_common.c:719:
+		CALC_K (w, 6, 0xA3, 0xFB, 0x76, 0xC8);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1524: FILE: crypto/twofish_common.c:720:
+		CALC_K (k, 0, 0x9A, 0x4A, 0x92, 0xD3);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1525: FILE: crypto/twofish_common.c:721:
+		CALC_K (k, 2, 0x80, 0xE6, 0x78, 0x6B);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1526: FILE: crypto/twofish_common.c:722:
+		CALC_K (k, 4, 0xE4, 0x45, 0xDD, 0x7D);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1527: FILE: crypto/twofish_common.c:723:
+		CALC_K (k, 6, 0xD1, 0xE8, 0x38, 0x4B);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1528: FILE: crypto/twofish_common.c:724:
+		CALC_K (k, 8, 0x0D, 0xD6, 0xC6, 0x32);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1529: FILE: crypto/twofish_common.c:725:
+		CALC_K (k, 10, 0x35, 0xD8, 0x98, 0xFD);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1530: FILE: crypto/twofish_common.c:726:
+		CALC_K (k, 12, 0x18, 0x37, 0xF7, 0x71);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1531: FILE: crypto/twofish_common.c:727:
+		CALC_K (k, 14, 0xEC, 0xF1, 0x6C, 0xE1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1532: FILE: crypto/twofish_common.c:728:
+		CALC_K (k, 16, 0x43, 0x30, 0x75, 0x0F);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1533: FILE: crypto/twofish_common.c:729:
+		CALC_K (k, 18, 0x37, 0xF8, 0x26, 0x1B);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1534: FILE: crypto/twofish_common.c:730:
+		CALC_K (k, 20, 0xFA, 0x87, 0x13, 0xFA);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1535: FILE: crypto/twofish_common.c:731:
+		CALC_K (k, 22, 0x94, 0x06, 0x48, 0x3F);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1536: FILE: crypto/twofish_common.c:732:
+		CALC_K (k, 24, 0xF2, 0x5E, 0xD0, 0xBA);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1537: FILE: crypto/twofish_common.c:733:
+		CALC_K (k, 26, 0x8B, 0xAE, 0x30, 0x5B);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1538: FILE: crypto/twofish_common.c:734:
+		CALC_K (k, 28, 0x84, 0x8A, 0x54, 0x00);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1539: FILE: crypto/twofish_common.c:735:
+		CALC_K (k, 30, 0xDF, 0xBC, 0x23, 0x9D);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1545: FILE: crypto/twofish_common.c:741:
+EXPORT_SYMBOL(twofish_setkey);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1553: FILE: include/crypto/twofish.h:1:
+#ifndef _CRYPTO_TWOFISH_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1563: FILE: include/crypto/twofish.h:11:
+ * that k[i] corresponds to what the Twofish paper calls K[i+8]. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1565: FILE: include/crypto/twofish.h:13:
+   u32 s[4][256], w[8], k[32];$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000067868.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 34 errors, 167 warnings, 46 checks, 1498 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000067868.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
