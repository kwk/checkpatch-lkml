WARNING:PATCH_PREFIX: patch prefix 'lib' exists, appears to be a -p0 patch

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#60: FILE: inflate.c:224:
+#define NEXTBYTE()  ({ int v = get_byte(); if (v < 0) goto underrun; (uch)v; })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: inflate.c:625:
+  return 4;^I^I^I/* Input underrun */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: inflate.c:684:
+  return 4;^I^I^I/* Input underrun */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: inflate.c:919:
+  return 4;^I^I^I/* Input underrun */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: inflate.c:970:
+  return 4;^I^I^I/* Input underrun */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: inflate.c:1094:
+    magic[0] = NEXTBYTE();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: inflate.c:1095:
+    magic[1] = NEXTBYTE();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: inflate.c:1096:
+    method   = NEXTBYTE();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: inflate.c:1123:
+    (ulg)NEXTBYTE();^I/* Get timestamp */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: inflate.c:1124:
+    ((ulg)NEXTBYTE()) << 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: inflate.c:1125:
+    ((ulg)NEXTBYTE()) << 16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: inflate.c:1126:
+    ((ulg)NEXTBYTE()) << 24;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: inflate.c:1128:
+    (void)NEXTBYTE();  /* Ignore extra flags for the moment */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: inflate.c:1129:
+    (void)NEXTBYTE();  /* Ignore OS type for the moment */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#135: FILE: inflate.c:1131:
     if ((flags & EXTRA_FIELD) != 0) {
+	    unsigned len = (unsigned)NEXTBYTE();

WARNING:TABSTOP: Statements should start on a tabstop
#139: FILE: inflate.c:1132:
+	    unsigned len = (unsigned)NEXTBYTE();

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#139: FILE: inflate.c:1132:
+	    unsigned len = (unsigned)NEXTBYTE();

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#139: FILE: inflate.c:1132:
+	    unsigned len = (unsigned)NEXTBYTE();

WARNING:LINE_SPACING: Missing a blank line after declarations
#140: FILE: inflate.c:1133:
+	    unsigned len = (unsigned)NEXTBYTE();
+	    len |= ((unsigned)NEXTBYTE())<<8;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#140: FILE: inflate.c:1133:
+	    len |= ((unsigned)NEXTBYTE())<<8;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#140: FILE: inflate.c:1133:
+	    len |= ((unsigned)NEXTBYTE())<<8;
 	                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TABSTOP: Statements should start on a tabstop
#141: FILE: inflate.c:1134:
+	    while (len--) (void)NEXTBYTE();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#141: FILE: inflate.c:1134:
+	    while (len--) (void)NEXTBYTE();

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#145: FILE: inflate.c:1138:
     if ((flags & ORIG_NAME) != 0) {
[...]
+	    while (NEXTBYTE() != 0) /* null */ ;

WARNING:TABSTOP: Statements should start on a tabstop
#148: FILE: inflate.c:1140:
+	    while (NEXTBYTE() != 0) /* null */ ;

WARNING:SPACING: space prohibited before semicolon
#148: FILE: inflate.c:1140:
+	    while (NEXTBYTE() != 0) /* null */ ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#148: FILE: inflate.c:1140:
+	    while (NEXTBYTE() != 0) /* null */ ;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#152: FILE: inflate.c:1144:
     if ((flags & COMMENT) != 0) {
+	    while (NEXTBYTE() != 0) /* null */ ;

WARNING:TABSTOP: Statements should start on a tabstop
#154: FILE: inflate.c:1145:
+	    while (NEXTBYTE() != 0) /* null */ ;

WARNING:SPACING: space prohibited before semicolon
#154: FILE: inflate.c:1145:
+	    while (NEXTBYTE() != 0) /* null */ ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#154: FILE: inflate.c:1145:
+	    while (NEXTBYTE() != 0) /* null */ ;

WARNING:TABSTOP: Statements should start on a tabstop
#162: FILE: inflate.c:1162:
+	    case 4:

WARNING:TABSTOP: Statements should start on a tabstop
#164: FILE: inflate.c:1164:
+		    break;

CHECK:SPACING: No space is necessary after a cast
#176: FILE: inflate.c:1175:
+    orig_crc = (ulg) NEXTBYTE();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: inflate.c:1175:
+    orig_crc = (ulg) NEXTBYTE();$

CHECK:SPACING: No space is necessary after a cast
#177: FILE: inflate.c:1176:
+    orig_crc |= (ulg) NEXTBYTE() << 8;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: inflate.c:1176:
+    orig_crc |= (ulg) NEXTBYTE() << 8;$

CHECK:SPACING: No space is necessary after a cast
#178: FILE: inflate.c:1177:
+    orig_crc |= (ulg) NEXTBYTE() << 16;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: inflate.c:1177:
+    orig_crc |= (ulg) NEXTBYTE() << 16;$

CHECK:SPACING: No space is necessary after a cast
#179: FILE: inflate.c:1178:
+    orig_crc |= (ulg) NEXTBYTE() << 24;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: inflate.c:1178:
+    orig_crc |= (ulg) NEXTBYTE() << 24;$

CHECK:SPACING: No space is necessary after a cast
#185: FILE: inflate.c:1180:
+    orig_len = (ulg) NEXTBYTE();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: inflate.c:1180:
+    orig_len = (ulg) NEXTBYTE();$

CHECK:SPACING: No space is necessary after a cast
#186: FILE: inflate.c:1181:
+    orig_len |= (ulg) NEXTBYTE() << 8;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: inflate.c:1181:
+    orig_len |= (ulg) NEXTBYTE() << 8;$

CHECK:SPACING: No space is necessary after a cast
#187: FILE: inflate.c:1182:
+    orig_len |= (ulg) NEXTBYTE() << 16;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: inflate.c:1182:
+    orig_len |= (ulg) NEXTBYTE() << 16;$

CHECK:SPACING: No space is necessary after a cast
#188: FILE: inflate.c:1183:
+    orig_len |= (ulg) NEXTBYTE() << 24;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: inflate.c:1183:
+    orig_len |= (ulg) NEXTBYTE() << 24;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: inflate.c:1197:
+    error("out of input data");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: inflate.c:1198:
+    return -1;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000317310.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 40 warnings, 9 checks, 138 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000317310.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
