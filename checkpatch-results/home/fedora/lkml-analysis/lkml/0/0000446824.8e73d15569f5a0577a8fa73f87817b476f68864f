ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#49: FILE: include/linux/mm.h:161:
+		struct pte_chain * chain;	/* Reverse pte mapping pointer.

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo		 * bar" should be "foo		 *bar"
#51: FILE: include/linux/mm.h:163:
+		pte_t		 * direct;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#91: FILE: mm/page_alloc.c:95:
+	BUG_ON(page->pte.chain != NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page->pte.chain"
#91: FILE: mm/page_alloc.c:95:
+	BUG_ON(page->pte.chain != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#137: FILE: mm/rmap.c:122:
+					BUG();

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#209: FILE: mm/rmap.c:201:
+		printk("%p ", page->pte.direct);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#212: FILE: mm/rmap.c:204:
+			printk("%p ", pc->ptep);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: mm/rmap.c:321:
+^I} else {^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#246: FILE: mm/rmap.c:324:
+			switch (try_to_unmap_one(page, pc->ptep)) {
+				case SWAP_SUCCESS:
[...]
+				case SWAP_AGAIN:
[...]
+				case SWAP_FAIL:
[...]
+				case SWAP_ERROR:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000446824.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 4 warnings, 1 checks, 258 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000446824.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
