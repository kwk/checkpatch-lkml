WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#42: FILE: drivers/pcmcia/cistpl.c:104:
 	if (s->cis_virt)
+	    iounmap(s->cis_virt);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#60: FILE: drivers/pcmcia/cistpl.c:131:
+	writeb(flags, sys+CISREG_ICTRL0);
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#61: FILE: drivers/pcmcia/cistpl.c:132:
+	writeb(addr & 0xff, sys+CISREG_IADDR0);
 	                       ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#62: FILE: drivers/pcmcia/cistpl.c:133:
+	writeb((addr>>8) & 0xff, sys+CISREG_IADDR1);
 	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#62: FILE: drivers/pcmcia/cistpl.c:133:
+	writeb((addr>>8) & 0xff, sys+CISREG_IADDR1);
 	                            ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#63: FILE: drivers/pcmcia/cistpl.c:134:
+	writeb((addr>>16) & 0xff, sys+CISREG_IADDR2);
 	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#63: FILE: drivers/pcmcia/cistpl.c:134:
+	writeb((addr>>16) & 0xff, sys+CISREG_IADDR2);
 	                             ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#64: FILE: drivers/pcmcia/cistpl.c:135:
+	writeb((addr>>24) & 0xff, sys+CISREG_IADDR3);
 	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#64: FILE: drivers/pcmcia/cistpl.c:135:
+	writeb((addr>>24) & 0xff, sys+CISREG_IADDR3);
 	                             ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#65: FILE: drivers/pcmcia/cistpl.c:136:
 	for ( ; len > 0; len--, buf++)
+	    *buf = readb(sys+CISREG_IDATA0);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#67: FILE: drivers/pcmcia/cistpl.c:137:
+	    *buf = readb(sys+CISREG_IDATA0);
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#89: FILE: drivers/pcmcia/cistpl.c:178:
+	writeb(flags, sys+CISREG_ICTRL0);
 	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#90: FILE: drivers/pcmcia/cistpl.c:179:
+	writeb(addr & 0xff, sys+CISREG_IADDR0);
 	                       ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#91: FILE: drivers/pcmcia/cistpl.c:180:
+	writeb((addr>>8) & 0xff, sys+CISREG_IADDR1);
 	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#91: FILE: drivers/pcmcia/cistpl.c:180:
+	writeb((addr>>8) & 0xff, sys+CISREG_IADDR1);
 	                            ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#92: FILE: drivers/pcmcia/cistpl.c:181:
+	writeb((addr>>16) & 0xff, sys+CISREG_IADDR2);
 	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#92: FILE: drivers/pcmcia/cistpl.c:181:
+	writeb((addr>>16) & 0xff, sys+CISREG_IADDR2);
 	                             ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#93: FILE: drivers/pcmcia/cistpl.c:182:
+	writeb((addr>>24) & 0xff, sys+CISREG_IADDR3);
 	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#93: FILE: drivers/pcmcia/cistpl.c:182:
+	writeb((addr>>24) & 0xff, sys+CISREG_IADDR3);
 	                             ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#94: FILE: drivers/pcmcia/cistpl.c:183:
 	for ( ; len > 0; len--, buf++)
+	    writeb(*buf, sys+CISREG_IDATA0);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#96: FILE: drivers/pcmcia/cistpl.c:184:
+	    writeb(*buf, sys+CISREG_IDATA0);
 	                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: drivers/pcmcia/cistpl.c:219:
+    vs->cis_virt = ioremap(base, vs->cap.map_size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: drivers/pcmcia/cistpl.c:222:
+    iounmap(vs->cis_virt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: drivers/pcmcia/cistpl.c:223:
+    vs->cis_used = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: drivers/pcmcia/cistpl.c:228:
+    vs->cis_virt = ioremap(base+vs->cap.map_size, vs->cap.map_size);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#126: FILE: drivers/pcmcia/cistpl.c:228:
+    vs->cis_virt = ioremap(base+vs->cap.map_size, vs->cap.map_size);
                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: drivers/pcmcia/cistpl.c:230:
+    iounmap(vs->cis_virt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: drivers/pcmcia/cistpl.c:231:
+    vs->cis_used = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: drivers/pcmcia/cistpl.c:241:
+    vs->cis_virt = ioremap(base, vs->cap.map_size);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#147: FILE: drivers/pcmcia/cistpl.c:248:
+	d = readl(vs->cis_virt+i);
 	                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: drivers/pcmcia/cistpl.c:251:
+    iounmap(vs->cis_virt);$

CHECK:CAMELCASE: Avoid CamelCase: <AssignedIRQ>
#198: FILE: drivers/pcmcia/cs.c:1619:
+	free_irq(req->AssignedIRQ, req->Instance);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Instance>
#198: FILE: drivers/pcmcia/cs.c:1619:
+	free_irq(req->AssignedIRQ, req->Instance);

CHECK:CAMELCASE: Avoid CamelCase: <Handler>
#207: FILE: drivers/pcmcia/cs.c:1914:
+	if (request_irq(irq, req->Handler,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: drivers/pcmcia/cs.c:1915:
+	if (request_irq(irq, req->Handler,
 			    ((req->Attributes & IRQ_TYPE_DYNAMIC_SHARING) || 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#389: FILE: include/pcmcia/bus_ops.h:1:
+/* now empty */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000386338.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 12 warnings, 24 checks, 345 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000386338.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
