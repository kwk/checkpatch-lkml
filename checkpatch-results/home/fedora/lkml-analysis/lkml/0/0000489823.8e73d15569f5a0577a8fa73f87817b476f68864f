WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
filesystem source so that it will no longer be necessary for the headers of 

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#149: FILE: fs/ext2/ialloc.c:388:
not the fs block size */

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:LINE_SPACING: Missing a blank line after declarations
#192: FILE: fs/ext2/inode.c:84:
+		unsigned long block = ei->i_prealloc_block;
+		ei->i_prealloc_count = 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#248: FILE: fs/ext2/inode.c:252:
+	add_chain (chain, NULL, ei->i_data + *offsets);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#259: FILE: fs/ext2/inode.c:295:
+	u32 *start = ind->bh? (u32*) ind->bh->b_data: ei->i_data;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#259: FILE: fs/ext2/inode.c:295:
+	u32 *start = ind->bh? (u32*) ind->bh->b_data: ei->i_data;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#259: FILE: fs/ext2/inode.c:295:
+	u32 *start = ind->bh? (u32*) ind->bh->b_data: ei->i_data;
 	                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#259: FILE: fs/ext2/inode.c:295:
+	u32 *start = ind->bh? (u32*) ind->bh->b_data: ei->i_data;
 	                                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#323: FILE: fs/ext2/inode.c:469:
+	ei->i_next_alloc_goal = le32_to_cpu(where[num-1].key);
 	                                             ^

ERROR:SPACING: space required before the open parenthesis '('
#451: FILE: fs/ext2/inode.c:1091:
+		if(!ei->i_dtime) {

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#529: FILE: fs/ext2/namei.c:137:
+	if (l > sizeof (ext2_i(inode)->i_data)) {

CHECK:SPACING: No space is necessary after a cast
#538: FILE: fs/ext2/namei.c:147:
+		memcpy((char *) &ext2_i(inode)->i_data, symname, l);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:LINE_SPACING: Missing a blank line after declarations
#551: FILE: fs/ext2/symlink.c:26:
+	struct ext2_inode_info *ei = ext2_i(dentry->d_inode);
+	return vfs_readlink(dentry, buffer, buflen, ei->i_data);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#559: FILE: fs/ext2/symlink.c:32:
+	return vfs_follow_link(nd, ei->i_data);
 	                       ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#559: FILE: fs/ext2/symlink.c:32:
+	struct ext2_inode_info *ei = ext2_i(dentry->d_inode);
+	return vfs_follow_link(nd, ei->i_data);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#569: FILE: include/linux/ext2_fs.h:548:
+static inline struct ext2_inode_info *ext2_i (struct inode *inode)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around inode->u.ext2_inode_info
#571: FILE: include/linux/ext2_fs.h:550:
+	return &(inode->u.ext2_inode_info);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000489823.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 16 warnings, 4 checks, 444 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000489823.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
