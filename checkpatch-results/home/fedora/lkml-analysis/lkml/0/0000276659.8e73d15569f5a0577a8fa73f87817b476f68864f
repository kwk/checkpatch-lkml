ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#42: 
--- a/drivers/input/mousedev.c	2004-06-07 13:10:38 +02:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#107: FILE: drivers/input/mousedev.c:98:
+		switch (code) {
+			case ABS_X:
[...]
+			case ABS_Y:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#111: FILE: drivers/input/mousedev.c:102:
+					mousedev->packet.dx = ((fx(0) - fx(1)) / 2 + (fx(1) - fx(2)) / 2) / 8;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#120: FILE: drivers/input/mousedev.c:108:
+					mousedev->packet.dy = -((fy(0) - fy(1)) / 2 + (fy(1) - fy(2)) / 2) / 8;

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#127: FILE: drivers/input/mousedev.c:114:
+static void mousedev_abs_event(struct input_dev *dev, struct mousedev *mousedev, unsigned int code, int value)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#146: FILE: drivers/input/mousedev.c:121:
+			if (size == 0) size = xres;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#165: FILE: drivers/input/mousedev.c:128:
+			if (size == 0) size = yres;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#175: FILE: drivers/input/mousedev.c:137:
+	switch (code) {
+		case REL_X:	mousedev->packet.dx += value; break;
+		case REL_Y:	mousedev->packet.dy -= value; break;
+		case REL_WHEEL:	mousedev->packet.dz -= value; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#176: FILE: drivers/input/mousedev.c:138:
+		case REL_X:	mousedev->packet.dx += value; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#177: FILE: drivers/input/mousedev.c:139:
+		case REL_Y:	mousedev->packet.dy -= value; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#178: FILE: drivers/input/mousedev.c:140:
+		case REL_WHEEL:	mousedev->packet.dz -= value; break;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#186: FILE: drivers/input/mousedev.c:148:
+	switch (code) {
+		case BTN_TOUCH:
+		case BTN_0:
+		case BTN_FORWARD:
+		case BTN_LEFT:		index = 0; break;
+		case BTN_STYLUS:
+		case BTN_1:
+		case BTN_RIGHT:		index = 1; break;
+		case BTN_2:
+		case BTN_STYLUS2:
+		case BTN_MIDDLE:	index = 2; break;
+		case BTN_3:
+		case BTN_BACK:
+		case BTN_SIDE:		index = 3; break;
+		case BTN_4:
+		case BTN_EXTRA:		index = 4; break;
+		default: 		return;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#190: FILE: drivers/input/mousedev.c:152:
+		case BTN_LEFT:		index = 0; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#193: FILE: drivers/input/mousedev.c:155:
+		case BTN_RIGHT:		index = 1; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#196: FILE: drivers/input/mousedev.c:158:
+		case BTN_MIDDLE:	index = 2; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#199: FILE: drivers/input/mousedev.c:161:
+		case BTN_SIDE:		index = 3; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#201: FILE: drivers/input/mousedev.c:163:
+		case BTN_EXTRA:		index = 4; break;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#202: FILE: drivers/input/mousedev.c:164:
+^I^Idefault: ^I^Ireturn;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#202: FILE: drivers/input/mousedev.c:164:
+		default: 		return;

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#234: FILE: drivers/input/mousedev.c:192:
+static void mousedev_event(struct input_handle *handle, unsigned int type, unsigned int code, int value)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#238: FILE: drivers/input/mousedev.c:196:
+	switch (type) {
+		case EV_ABS:
[...]
+		case EV_REL:
[...]
+		case EV_KEY:
[...]
+		case EV_SYN:

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#324: FILE: drivers/input/mousedev.c:215:
+				if (code == BTN_TOUCH && test_bit(BTN_TOOL_FINGER, handle->dev->keybit)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#324: FILE: drivers/input/mousedev.c:215:
+				if (code == BTN_TOUCH && test_bit(BTN_TOOL_FINGER, handle->dev->keybit)) {
[...]
+				else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#330: FILE: drivers/input/mousedev.c:221:
+				}
+				else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#339: FILE: drivers/input/mousedev.c:230:
+					/* Input system eats duplicate events, but we need all of them

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: drivers/input/mousedev.c:232:
+^I^I^I ^I^I */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#341: FILE: drivers/input/mousedev.c:232:
+^I^I^I ^I^I */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#371: FILE: drivers/input/mousedev.c:587:
 };
+static int psaux_registered;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#380: FILE: drivers/input/mousedev.c:607:
+	if (!(psaux_registered = !misc_register(&psaux_mouse)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276659.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 8 warnings, 2 checks, 341 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276659.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
