ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#35: 
--- a/include/linux/ac97_codec.h 2005-01-22 01:46:59.000000000 +0000

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#80: FILE: sound/oss/ac97_codec.c:74:
+static int wolfson_init13(struct ac97_codec * codec);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: sound/oss/ac97_codec.c:819:
+^I/* wait for codec-ready state */^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: sound/oss/ac97_codec.c:824:
+^I$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#160: FILE: sound/oss/ac97_codec.c:847:
+			udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: sound/oss/ac97_codec.c:850:
+^I/* probing AC97 codec, AC97 2.0 says that bit 15 of register 0x00 (reset) should $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: sound/oss/ac97_codec.c:853:
+^I * FIXME: is the following comment outdated?  -jgarzik $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#169: FILE: sound/oss/ac97_codec.c:856:
+	if ((audio = codec->codec_read(codec, AC97_RESET)) & 0x8000) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#170: FILE: sound/oss/ac97_codec.c:857:
+		printk(KERN_ERR "ac97_codec: %s ac97 codec not present\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: sound/oss/ac97_codec.c:858:
+^I^I       (codec->id & 0x2) ? (codec->id&1 ? "4th" : "Tertiary") $

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#171: FILE: sound/oss/ac97_codec.c:858:
+		       (codec->id & 0x2) ? (codec->id&1 ? "4th" : "Tertiary") 
 		                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#172: FILE: sound/oss/ac97_codec.c:859:
+		       : (codec->id&1 ? "Secondary":  "Primary"));
 		                   ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#172: FILE: sound/oss/ac97_codec.c:859:
+		       : (codec->id&1 ? "Secondary":  "Primary"));
 		                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: sound/oss/ac97_codec.c:862:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: sound/oss/ac97_codec.c:865:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'codec->codec_ops == &null_ops'
#182: FILE: sound/oss/ac97_codec.c:868:
+	if((codec->codec_ops == &null_ops) && (f & 4))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#182: FILE: sound/oss/ac97_codec.c:868:
+	if((codec->codec_ops == &null_ops) && (f & 4))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: sound/oss/ac97_codec.c:946:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#204: FILE: sound/oss/ac97_codec.c:948:
+	if (codec->codec_ops->init != NULL) {
+		codec->codec_ops->init(codec);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "codec->codec_ops->init"
#204: FILE: sound/oss/ac97_codec.c:948:
+	if (codec->codec_ops->init != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#215: FILE: sound/oss/ac97_codec.c:1108:
+static int wolfson_init13(struct ac97_codec * codec)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: sound/oss/ac97_codec.c:1110:
+^Icodec->codec_write(codec, AC97_RECORD_GAIN, 0x00a0);^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000211949.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 2 warnings, 5 checks, 152 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000211949.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
