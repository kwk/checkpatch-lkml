WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
diff -urpN -X dontdiff linux-2.6.0-test1/fs/relayfs/relay_locking.c linux-2.6.0-test1-relayfs-printk/fs/relayfs/relay_locking.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#29: FILE: fs/relayfs/relay_locking.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#73: FILE: fs/relayfs/relay_locking.c:45:
+^Iif (rchan->resize_max && !rchan->mapped && bytes_ready > $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: fs/relayfs/relay_locking.c:48:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: fs/relayfs/relay_locking.c:57:
+ *^IIf a minute has passed since the last resize, and it's no $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: fs/relayfs/relay_locking.c:84:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: fs/relayfs/relay_locking.c:86:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: fs/relayfs/relay_locking.c:88:
+	if (!rchan->resize_min || rchan->mapped ||
+	   rchan->resize_min >= rchan->n_bufs * rchan->buf_size)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: fs/relayfs/relay_locking.c:95:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: fs/relayfs/relay_locking.c:103:
+			if ((n * rchan->n_bufs >= rchan->resize_min) &&
+			   (n * rchan->n_bufs <= rchan->resize_max) &&

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: fs/relayfs/relay_locking.c:110:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: fs/relayfs/relay_locking.c:122:
+ *^I@finalizing: if true, don't start a new buffer $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: fs/relayfs/relay_locking.c:126:
+static void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: fs/relayfs/relay_locking.c:136:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: fs/relayfs/relay_locking.c:141:
+^I^Irchan->unused_bytes[rchan->buf_id % rchan->n_bufs] = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: fs/relayfs/relay_locking.c:151:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#179: FILE: fs/relayfs/relay_locking.c:151:
+
+	

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 148 exceeds 100 columns
#200: FILE: fs/relayfs/relay_locking.c:172:
+		bytes_written = rchan->callbacks->buffer_start(rchan->id, cur_write_pos(rchan), rchan->buf_id, cur_time, cur_tsc, using_tsc(rchan));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: fs/relayfs/relay_locking.c:184:
+ *^I@interrupting: if this write is interrupting another, set to non-zero $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: fs/relayfs/relay_locking.c:188:
+ *^IThe err value contains the result flags and is an ORed combination $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: fs/relayfs/relay_locking.c:217:
+^I^Iget_timestamp(&rchan->buf_start_time, $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#248: FILE: fs/relayfs/relay_locking.c:220:
+		bytes_written = rchan->callbacks->buffer_start(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#249: FILE: fs/relayfs/relay_locking.c:221:
+^I^I^Irchan->id, cur_write_pos(rchan), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: fs/relayfs/relay_locking.c:222:
+^I^I^Irchan->buf_id, rchan->buf_start_time, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: fs/relayfs/relay_locking.c:233:
+^I^Icur_write_pos(rchan) = in_progress_event_pos(rchan) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#262: FILE: fs/relayfs/relay_locking.c:234:
+^I^I^I+ in_progress_event_size(rchan) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#300: FILE: fs/relayfs/relay_locking.c:272:
+inline void $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#306: FILE: fs/relayfs/relay_locking.c:278:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#320: FILE: fs/relayfs/relay_locking.c:292:
+^I       u32 len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: fs/relayfs/relay_locking.c:293:
+^I       int deliver, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: fs/relayfs/relay_locking.c:297:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#327: FILE: fs/relayfs/relay_locking.c:299:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: fs/relayfs/relay_locking.c:326:
+inline void $

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#357: FILE: fs/relayfs/relay_locking.c:329:
+	unsigned long int flags;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: fs/relayfs/relay_locking.c:346:
+u32 $

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#393: FILE: fs/relayfs/relay_locking.c:365:
+copy_split(struct rchan *rchan, int newsize, int oldsize, char * oldbuf, u32 old_cur_idx, u32 old_buf_size)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#393: FILE: fs/relayfs/relay_locking.c:365:
+copy_split(struct rchan *rchan, int newsize, int oldsize, char * oldbuf, u32 old_cur_idx, u32 old_buf_size)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#402: FILE: fs/relayfs/relay_locking.c:374:
+^I^Imemcpy(rchan->buf + old_buf_size - rchan->unused_bytes[0], $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: fs/relayfs/relay_locking.c:381:
+^I^I^I$

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#456: FILE: fs/relayfs/relay_locking.c:428:
+copy_expand(struct rchan *rchan, int newsize, int oldsize, char * oldbuf, u32 old_cur_idx, u32 old_buf_size)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#456: FILE: fs/relayfs/relay_locking.c:428:
+copy_expand(struct rchan *rchan, int newsize, int oldsize, char * oldbuf, u32 old_cur_idx, u32 old_buf_size)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: fs/relayfs/relay_locking.c:432:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#470: FILE: fs/relayfs/relay_locking.c:442:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: fs/relayfs/relay_locking.c:449:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#482: FILE: fs/relayfs/relay_locking.c:454:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#513: FILE: fs/relayfs/relay_locking.c:485:
+		if (copy_bytes > newsize) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#515: FILE: fs/relayfs/relay_locking.c:487:
+^I^I^Idelta = -(old_buf_size - (newsize + $

CHECK:BRACES: Unbalanced braces around else statement
#517: FILE: fs/relayfs/relay_locking.c:489:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#526: FILE: fs/relayfs/relay_locking.c:498:
+^I^I$

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#540: FILE: fs/relayfs/relay_locking.c:512:
+copy_from_otherbuf(struct rchan *rchan, u32 old_cur_idx, u32 old_buf_size, int oldsize, int newsize, char *copy_to, u32 copied_bytes, char *oldbuf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#578: FILE: fs/relayfs/relay_locking.c:550:
+void $

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#579: FILE: fs/relayfs/relay_locking.c:551:
+copy_shrink(struct rchan *rchan, int newsize, int oldsize, char *oldbuf, u32 old_cur_idx, u32 old_buf_size)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: fs/relayfs/relay_locking.c:556:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#595: FILE: fs/relayfs/relay_locking.c:567:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#599: FILE: fs/relayfs/relay_locking.c:571:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#605: FILE: fs/relayfs/relay_locking.c:577:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#608: FILE: fs/relayfs/relay_locking.c:580:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#613: FILE: fs/relayfs/relay_locking.c:585:
+^I$

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#632: FILE: fs/relayfs/relay_locking.c:604:
+locking_copy_contents(struct rchan *rchan, int newsize, int oldsize, char * oldbuf, u32 old_cur_idx, u32 old_buf_size, u32 old_n_bufs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#632: FILE: fs/relayfs/relay_locking.c:604:
+locking_copy_contents(struct rchan *rchan, int newsize, int oldsize, char * oldbuf, u32 old_cur_idx, u32 old_buf_size, u32 old_n_bufs)

WARNING:LINE_SPACING: Missing a blank line after declarations
#635: FILE: fs/relayfs/relay_locking.c:607:
+	u32 old_cur_bufno;
+	old_cur_bufno = old_cur_idx / old_buf_size;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#654: FILE: fs/relayfs/relay_locking.c:626:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#656: FILE: fs/relayfs/relay_locking.c:628:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#658: FILE: fs/relayfs/relay_locking.c:630:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#660: FILE: fs/relayfs/relay_locking.c:632:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#665: FILE: fs/relayfs/relay_locking.h:1:
+#ifndef _RELAY_LOCKING_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#668: FILE: fs/relayfs/relay_locking.h:4:
+#define RESIZE_THRESHOLD_LOCKING 1 / 3

ERROR:TRAILING_WHITESPACE: trailing whitespace
#672: FILE: fs/relayfs/relay_locking.h:8:
+^I^Iu32 slot_len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#678: FILE: fs/relayfs/relay_locking.h:14:
+extern void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#681: FILE: fs/relayfs/relay_locking.h:17:
+^I       u32 len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#682: FILE: fs/relayfs/relay_locking.h:18:
+^I       int deliver, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#685: FILE: fs/relayfs/relay_locking.h:21:
+extern void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#688: FILE: fs/relayfs/relay_locking.h:24:
+extern void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#691: FILE: fs/relayfs/relay_locking.h:27:
+extern u32 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#694: FILE: fs/relayfs/relay_locking.h:30:
+extern void $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#698: FILE: fs/relayfs/relay_locking.h:34:
+		      char * oldbuf,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#708: FILE: fs/relayfs/relay_lockless.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#727: FILE: fs/relayfs/relay_lockless.c:20:
+inline int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#728: FILE: fs/relayfs/relay_lockless.c:21:
+compare_and_store_volatile(volatile u32 *ptr, $

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#728: FILE: fs/relayfs/relay_lockless.c:21:
+compare_and_store_volatile(volatile u32 *ptr, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#746: FILE: fs/relayfs/relay_lockless.c:39:
+inline void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#760: FILE: fs/relayfs/relay_lockless.c:53:
+inline void $

WARNING:TYPO_SPELLING: 'substract' may be misspelled - perhaps 'subtract'?
#769: FILE: fs/relayfs/relay_lockless.c:62:
+ *	atomic_sub_volatile - atomically substract val from the value at ptr.
   	                                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#773: FILE: fs/relayfs/relay_lockless.c:66:
+inline void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#795: FILE: fs/relayfs/relay_lockless.c:88:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#797: FILE: fs/relayfs/relay_lockless.c:90:
+	if (rchan->resize_max && !rchan->mapped &&
+	   active_bufs == (rchan->n_bufs * RESIZE_THRESHOLD_LOCKLESS)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#823: FILE: fs/relayfs/relay_lockless.c:116:
+	if (rchan->resize_min == 0 || rchan->mapped ||
+	   rchan->resize_min >= rchan->n_bufs * rchan->buf_size)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#825: FILE: fs/relayfs/relay_lockless.c:118:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#830: FILE: fs/relayfs/relay_lockless.c:123:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#837: FILE: fs/relayfs/relay_lockless.c:130:
+			if ((n * rchan->buf_size >= rchan->resize_min) &&
+			   (n * rchan->buf_size <= rchan->resize_max) &&

ERROR:TRAILING_WHITESPACE: trailing whitespace
#844: FILE: fs/relayfs/relay_lockless.c:137:
+^I^I$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#877: FILE: fs/relayfs/relay_lockless.c:170:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#877: FILE: fs/relayfs/relay_lockless.c:170:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#882: FILE: fs/relayfs/relay_lockless.c:175:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#886: FILE: fs/relayfs/relay_lockless.c:179:
+^I^I^I^I^I       rchan->buf_size, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#900: FILE: fs/relayfs/relay_lockless.c:193:
+inline void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#903: FILE: fs/relayfs/relay_lockless.c:196:
+^I^Iu32 len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#904: FILE: fs/relayfs/relay_lockless.c:197:
+^I^Iint deliver, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#908: FILE: fs/relayfs/relay_lockless.c:201:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#923: FILE: fs/relayfs/relay_lockless.c:216:
+ *^Iget_buffer_end - get the address of the end of buffer $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#927: FILE: fs/relayfs/relay_lockless.c:220:
+static inline char * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#945: FILE: fs/relayfs/relay_lockless.c:238:
+static inline void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#947: FILE: fs/relayfs/relay_lockless.c:240:
+^I^Iu32 size_lost, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#949: FILE: fs/relayfs/relay_lockless.c:242:
+^I^Iu32 *tsc, $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#952: FILE: fs/relayfs/relay_lockless.c:245:
+	char* cur_write_pos;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#953: FILE: fs/relayfs/relay_lockless.c:246:
+	char* write_buf_end;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#960: FILE: fs/relayfs/relay_lockless.c:253:
+^Ibytes_written = rchan->callbacks->buffer_end(rchan->id, cur_write_pos, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#963: FILE: fs/relayfs/relay_lockless.c:256:
+^I   point the unused_bytes value will be needed. */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#963: FILE: fs/relayfs/relay_lockless.c:256:
+	/* We assume that since the client didn't write anything, at some
+	   point the unused_bytes value will be needed. */ 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#963: FILE: fs/relayfs/relay_lockless.c:256:
+	   point the unused_bytes value will be needed. */ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#966: FILE: fs/relayfs/relay_lockless.c:259:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#967: FILE: fs/relayfs/relay_lockless.c:260:
+        bufno = RELAY_BUFNO_GET(end_idx, offset_bits(rchan));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#967: FILE: fs/relayfs/relay_lockless.c:260:
+        bufno = RELAY_BUFNO_GET(end_idx, offset_bits(rchan));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#968: FILE: fs/relayfs/relay_lockless.c:261:
+        atomic_add_volatile(&fill_count(rchan, bufno), size_lost);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#968: FILE: fs/relayfs/relay_lockless.c:261:
+        atomic_add_volatile(&fill_count(rchan, bufno), size_lost);$

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#981: FILE: fs/relayfs/relay_lockless.c:274:
+	unsigned long int flags;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#990: FILE: fs/relayfs/relay_lockless.c:283:
+^Ifinalize_buffer(idx(rchan) & idx_mask(rchan), size_lost, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1003: FILE: fs/relayfs/relay_lockless.c:296:
+ *^IThe return value contains the result flags and is an ORed combination $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1014: FILE: fs/relayfs/relay_lockless.c:307:
+^I      u32 write_len, $

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#1023: FILE: fs/relayfs/relay_lockless.c:316:
+	unsigned long int flags;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1034: FILE: fs/relayfs/relay_lockless.c:327:
+^I^Irchan->events_lost++;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1045: FILE: fs/relayfs/relay_lockless.c:338:
+^I^I^Ifinalize_buffer(old_idx & idx_mask, size_lost, $

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#1085: FILE: fs/relayfs/relay_lockless.c:378:
+	unsigned long int flags;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1091: FILE: fs/relayfs/relay_lockless.c:384:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1098: FILE: fs/relayfs/relay_lockless.c:391:
+^Ifinalize_buffer(old_idx & idx_mask, size_lost, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1111: FILE: fs/relayfs/relay_lockless.c:404:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1112: FILE: fs/relayfs/relay_lockless.c:405:
+^Irchan->callbacks->buffer_start(rchan->id, cur_write_pos, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1121: FILE: fs/relayfs/relay_lockless.c:414:
+^I^Iatomic_set_volatile(&fill_count(rchan, new_buf_no), $

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#1147: FILE: fs/relayfs/relay_lockless.c:440:
+	unsigned long int flags;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1167: FILE: fs/relayfs/relay_lockless.c:460:
+		rchan->initialized = initializing = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'offset < slot_len'
#1179: FILE: fs/relayfs/relay_lockless.c:472:
+		if ((offset < slot_len) && (offset > 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'offset > 0'
#1179: FILE: fs/relayfs/relay_lockless.c:472:
+		if ((offset < slot_len) && (offset > 0)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1179: FILE: fs/relayfs/relay_lockless.c:472:
+		if ((offset < slot_len) && (offset > 0)) {
[...]
+		} else if (offset < slot_len) {
[...]
+		} else
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1180: FILE: fs/relayfs/relay_lockless.c:473:
+^I^I^Ireserved_idx = RELAY_BUF_OFFSET_CLEAR(new_idx $

CHECK:BRACES: Unbalanced braces around else statement
#1187: FILE: fs/relayfs/relay_lockless.c:480:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1196: FILE: fs/relayfs/relay_lockless.c:489:
+^I^Icur_write_pos = rchan->buf $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1203: FILE: fs/relayfs/relay_lockless.c:496:
+^I^Irchan->callbacks->buffer_start(rchan->id, cur_write_pos, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1230: FILE: fs/relayfs/relay_lockless.c:523:
+ *^IThe err value contains the result flags and is an ORed combination $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1239: FILE: fs/relayfs/relay_lockless.c:532:
+inline char * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1254: FILE: fs/relayfs/relay_lockless.c:547:
+^I^Ioffset = RELAY_BUF_OFFSET_GET(new_idx + rchan->end_reserve, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1258: FILE: fs/relayfs/relay_lockless.c:551:
+^I^I^Ireturn lockless_reserve_slow(rchan, slot_len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1276: FILE: fs/relayfs/relay_lockless.c:569:
+inline void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1290: FILE: fs/relayfs/relay_lockless.c:583:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1293: FILE: fs/relayfs/relay_lockless.c:586:
+^Iatomic_set_volatile(&fill_count(rchan, freed_buf_no), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1296: FILE: fs/relayfs/relay_lockless.c:589:
+^Ilast_event_offset = RELAY_BUF_OFFSET_GET(last_event_index(rchan), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1298: FILE: fs/relayfs/relay_lockless.c:591:
+^Ilast_event_buf_no = RELAY_BUFNO_GET(last_event_index(rchan), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1300: FILE: fs/relayfs/relay_lockless.c:593:
+^Ilast_buffer_lost_size = RELAY_BUF_SIZE(offset_bits(rchan)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1306: FILE: fs/relayfs/relay_lockless.c:599:
+^I^Iatomic_sub_volatile(&fill_count(rchan, last_event_buf_no), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1311: FILE: fs/relayfs/relay_lockless.c:604:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1314: FILE: fs/relayfs/relay_lockless.c:607:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1322: FILE: fs/relayfs/relay_lockless.c:615:
+^I   point the unused_bytes value will be needed. */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1322: FILE: fs/relayfs/relay_lockless.c:615:
+	/* We assume that since the client didn't write anything, at some
+	   point the unused_bytes value will be needed. */ 

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1322: FILE: fs/relayfs/relay_lockless.c:615:
+	   point the unused_bytes value will be needed. */ 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1326: FILE: fs/relayfs/relay_lockless.c:619:
+        bufno = RELAY_BUFNO_GET(last_event_index(rchan), offset_bits(rchan));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1326: FILE: fs/relayfs/relay_lockless.c:619:
+        bufno = RELAY_BUFNO_GET(last_event_index(rchan), offset_bits(rchan));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1327: FILE: fs/relayfs/relay_lockless.c:620:
+        atomic_add_volatile(&fill_count(rchan, bufno), size_lost);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1327: FILE: fs/relayfs/relay_lockless.c:620:
+        atomic_add_volatile(&fill_count(rchan, bufno), size_lost);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1332: FILE: fs/relayfs/relay_lockless.c:625:
+^Inew_idx = RELAY_BUF_OFFSET_CLEAR(new_idx, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1333: FILE: fs/relayfs/relay_lockless.c:626:
+	new_idx = RELAY_BUF_OFFSET_CLEAR(new_idx, 
+				   offset_mask(rchan)) + rchan->start_reserve;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1341: FILE: fs/relayfs/relay_lockless.c:634:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1345: FILE: fs/relayfs/relay_lockless.c:638:
+^I^I^I^I       rchan->buf_start_time, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1349: FILE: fs/relayfs/relay_lockless.c:642:
+^Ibufno = RELAY_BUFNO_GET(new_idx & idx_mask(rchan), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1353: FILE: fs/relayfs/relay_lockless.c:646:
+	atomic_sub_volatile(&fill_count(rchan, bufno),
+		    RELAY_BUF_SIZE(offset_bits(rchan)) - rchan->start_reserve);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#1355: FILE: fs/relayfs/relay_lockless.c:648:
+	if (atomic_read(&fill_count(rchan, bufno)) < rchan->start_reserve)
+			atomic_set_volatile(&fill_count(rchan, bufno), 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1356: FILE: fs/relayfs/relay_lockless.c:649:
+^I^I^Iatomic_set_volatile(&fill_count(rchan, bufno), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1371: FILE: fs/relayfs/relay_lockless.c:664:
+u32 $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1373: FILE: fs/relayfs/relay_lockless.c:666:
+lockless_get_offset(struct rchan *rchan,
+			u32 *max_offset)

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#1396: FILE: fs/relayfs/relay_lockless.c:689:
+copy_expand(struct rchan *rchan, int newsize, int oldsize, char * oldbuf, u32 old_cur_idx, u32 old_buf_size, u32 old_n_bufs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1396: FILE: fs/relayfs/relay_lockless.c:689:
+copy_expand(struct rchan *rchan, int newsize, int oldsize, char * oldbuf, u32 old_cur_idx, u32 old_buf_size, u32 old_n_bufs)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1431: FILE: fs/relayfs/relay_lockless.c:724:
+^I$

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1453: FILE: fs/relayfs/relay_lockless.c:746:
+copy_to_bottom(struct rchan *rchan, char * oldbuf, u32 old_buf_size, int old_cur_bufno, int new_cur_bufno)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1453: FILE: fs/relayfs/relay_lockless.c:746:
+copy_to_bottom(struct rchan *rchan, char * oldbuf, u32 old_buf_size, int old_cur_bufno, int new_cur_bufno)

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#1478: FILE: fs/relayfs/relay_lockless.c:771:
+ *	Copies the the contents of the rest of the relay channel sub-buffers

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#1482: FILE: fs/relayfs/relay_lockless.c:775:
+copy_rest(struct rchan *rchan, char * oldbuf, u32 old_buf_size, u32 old_n_bufs, int old_cur_bufno, int new_cur_bufno, int copy_n_bufs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1482: FILE: fs/relayfs/relay_lockless.c:775:
+copy_rest(struct rchan *rchan, char * oldbuf, u32 old_buf_size, u32 old_n_bufs, int old_cur_bufno, int new_cur_bufno, int copy_n_bufs)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1489: FILE: fs/relayfs/relay_lockless.c:782:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1513: FILE: fs/relayfs/relay_lockless.c:806:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1516: FILE: fs/relayfs/relay_lockless.c:809:
+^I$

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#1537: FILE: fs/relayfs/relay_lockless.c:830:
+copy_shrink(struct rchan *rchan, int newsize, int oldsize, char * oldbuf, u32 old_cur_idx, u32 old_buf_size, u32 old_n_bufs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1537: FILE: fs/relayfs/relay_lockless.c:830:
+copy_shrink(struct rchan *rchan, int newsize, int oldsize, char * oldbuf, u32 old_cur_idx, u32 old_buf_size, u32 old_n_bufs)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1545: FILE: fs/relayfs/relay_lockless.c:838:
+^I$

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#1578: FILE: fs/relayfs/relay_lockless.c:871:
+lockless_copy_contents(struct rchan *rchan, int newsize, int oldsize, char * oldbuf, u32 old_cur_idx, u32 old_buf_size, u32 old_n_bufs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1578: FILE: fs/relayfs/relay_lockless.c:871:
+lockless_copy_contents(struct rchan *rchan, int newsize, int oldsize, char * oldbuf, u32 old_cur_idx, u32 old_buf_size, u32 old_n_bufs)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1601: FILE: fs/relayfs/relay_lockless.c:894:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1603: FILE: fs/relayfs/relay_lockless.c:896:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1605: FILE: fs/relayfs/relay_lockless.c:898:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1607: FILE: fs/relayfs/relay_lockless.c:900:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1609: FILE: fs/relayfs/relay_lockless.c:902:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1611: FILE: fs/relayfs/relay_lockless.c:904:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1617: FILE: fs/relayfs/relay_lockless.h:1:
+#ifndef _RELAY_LOCKLESS_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1620: FILE: fs/relayfs/relay_lockless.h:4:
+#define RESIZE_THRESHOLD_LOCKLESS 3 / 4

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1627: FILE: fs/relayfs/relay_lockless.h:11:
+		 int * interrupting,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1628: FILE: fs/relayfs/relay_lockless.h:12:
+		 int * errcode);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1630: FILE: fs/relayfs/relay_lockless.h:14:
+extern void $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1632: FILE: fs/relayfs/relay_lockless.h:16:
+		char * from,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1633: FILE: fs/relayfs/relay_lockless.h:17:
+^I^Iu32 len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1634: FILE: fs/relayfs/relay_lockless.h:18:
+^I^Iint deliver, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1637: FILE: fs/relayfs/relay_lockless.h:21:
+extern void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1640: FILE: fs/relayfs/relay_lockless.h:24:
+extern void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1643: FILE: fs/relayfs/relay_lockless.h:27:
+u32 $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1650: FILE: fs/relayfs/relay_lockless.h:34:
+		       char * oldbuf,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000354585.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 138 errors, 34 warnings, 29 checks, 1615 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000354585.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
