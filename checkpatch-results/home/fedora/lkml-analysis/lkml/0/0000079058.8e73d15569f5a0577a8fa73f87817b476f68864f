WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#32: 
will be using (this is mainly neccessary for the Pentium 4 chips as they
                              ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#38: 
Signed-off-by:  Don Zickus <dzickus@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#54: FILE: arch/x86_64/kernel/nmi.c:37:
+static DEFINE_PER_CPU(unsigned, perfctr_nmi_owner);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#55: FILE: arch/x86_64/kernel/nmi.c:38:
+static DEFINE_PER_CPU(unsigned, evntsel_nmi_owner[2]);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#98: FILE: arch/x86_64/kernel/nmi.c:137:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#109: FILE: arch/x86_64/kernel/nmi.c:148:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#119: FILE: arch/x86_64/kernel/nmi.c:158:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#131: FILE: arch/x86_64/kernel/nmi.c:170:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#141: FILE: arch/x86_64/kernel/nmi.c:180:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#153: FILE: arch/x86_64/kernel/nmi.c:192:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#275: FILE: arch/x86_64/kernel/nmi.c:683:
+EXPORT_SYMBOL(avail_to_resrv_perfctr_nmi_bit);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#276: FILE: arch/x86_64/kernel/nmi.c:684:
+EXPORT_SYMBOL(reserve_perfctr_nmi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#277: FILE: arch/x86_64/kernel/nmi.c:685:
+EXPORT_SYMBOL(release_perfctr_nmi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#278: FILE: arch/x86_64/kernel/nmi.c:686:
+EXPORT_SYMBOL(reserve_evntsel_nmi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#279: FILE: arch/x86_64/kernel/nmi.c:687:
+EXPORT_SYMBOL(release_evntsel_nmi);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#292: FILE: include/asm-x86_64/nmi.h:59:
+extern int avail_to_resrv_perfctr_nmi_bit(unsigned int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#292: FILE: include/asm-x86_64/nmi.h:59:
+extern int avail_to_resrv_perfctr_nmi_bit(unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#293: FILE: include/asm-x86_64/nmi.h:60:
+extern int avail_to_resrv_perfctr_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#293: FILE: include/asm-x86_64/nmi.h:60:
+extern int avail_to_resrv_perfctr_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#294: FILE: include/asm-x86_64/nmi.h:61:
+extern int reserve_perfctr_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#294: FILE: include/asm-x86_64/nmi.h:61:
+extern int reserve_perfctr_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#295: FILE: include/asm-x86_64/nmi.h:62:
+extern void release_perfctr_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#295: FILE: include/asm-x86_64/nmi.h:62:
+extern void release_perfctr_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#296: FILE: include/asm-x86_64/nmi.h:63:
+extern int reserve_evntsel_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#296: FILE: include/asm-x86_64/nmi.h:63:
+extern int reserve_evntsel_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#297: FILE: include/asm-x86_64/nmi.h:64:
+extern void release_evntsel_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#297: FILE: include/asm-x86_64/nmi.h:64:
+extern void release_evntsel_nmi(unsigned int);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#370: FILE: arch/i386/kernel/nmi.c:151:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#381: FILE: arch/i386/kernel/nmi.c:162:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#391: FILE: arch/i386/kernel/nmi.c:172:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#403: FILE: arch/i386/kernel/nmi.c:184:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#413: FILE: arch/i386/kernel/nmi.c:194:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#425: FILE: arch/i386/kernel/nmi.c:206:
+	BUG_ON(counter > NMI_MAX_COUNTER_BITS);

ERROR:SPACING: space required before the open parenthesis '('
#565: FILE: arch/i386/kernel/nmi.c:578:
+			if(!setup_p6_watchdog())

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#575: FILE: arch/i386/kernel/nmi.c:733:
+EXPORT_SYMBOL(avail_to_resrv_perfctr_nmi_bit);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#576: FILE: arch/i386/kernel/nmi.c:734:
+EXPORT_SYMBOL(reserve_perfctr_nmi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#577: FILE: arch/i386/kernel/nmi.c:735:
+EXPORT_SYMBOL(release_perfctr_nmi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#578: FILE: arch/i386/kernel/nmi.c:736:
+EXPORT_SYMBOL(reserve_evntsel_nmi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#579: FILE: arch/i386/kernel/nmi.c:737:
+EXPORT_SYMBOL(release_evntsel_nmi);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#591: FILE: include/asm-i386/nmi.h:28:
+extern int avail_to_resrv_perfctr_nmi_bit(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#591: FILE: include/asm-i386/nmi.h:28:
+extern int avail_to_resrv_perfctr_nmi_bit(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#592: FILE: include/asm-i386/nmi.h:29:
+extern int avail_to_resrv_perfctr_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#592: FILE: include/asm-i386/nmi.h:29:
+extern int avail_to_resrv_perfctr_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#593: FILE: include/asm-i386/nmi.h:30:
+extern int reserve_perfctr_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#593: FILE: include/asm-i386/nmi.h:30:
+extern int reserve_perfctr_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#594: FILE: include/asm-i386/nmi.h:31:
+extern void release_perfctr_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#594: FILE: include/asm-i386/nmi.h:31:
+extern void release_perfctr_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#595: FILE: include/asm-i386/nmi.h:32:
+extern int reserve_evntsel_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#595: FILE: include/asm-i386/nmi.h:32:
+extern int reserve_evntsel_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#596: FILE: include/asm-i386/nmi.h:33:
+extern void release_evntsel_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#596: FILE: include/asm-i386/nmi.h:33:
+extern void release_evntsel_nmi(unsigned int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000079058.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 38 warnings, 12 checks, 524 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000079058.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
