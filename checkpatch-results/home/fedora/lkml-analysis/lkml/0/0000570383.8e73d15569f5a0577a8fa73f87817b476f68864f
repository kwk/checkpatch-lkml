WARNING:TYPO_SPELLING: 'chosed' may be misspelled - perhaps 'chose'?
#22: 
> > I didn't consider these functions as speed critical, thus I chosed the
                                                                ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
> > alternative that generates more compact code. If you think they're critical

WARNING:TYPO_SPELLING: 'chosed' may be misspelled - perhaps 'chose'?
#38: 
want to hear general opinions from you and the list on the API I chosed.
                                                                 ^^^^^^

WARNING:TYPO_SPELLING: 'writen' may be misspelled - perhaps 'written'?
#59: 
	__u64	p_value;		/* value to be read/writen */	
	     	        		                    ^^^^^^

WARNING:TYPO_SPELLING: 'performace' may be misspelled - perhaps 'performance'?
#91: 
Control the performace counting for register reg.
            ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#98: 
PERF_OVERFLOW_OCCURED	Overflow occured. Only be set by the kernel.
                     	         ^^^^^^^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#143: FILE: arch/i386/kernel/ptrace.c:576:
+			for (i = 0; i < 17*sizeof(long); i += sizeof(long)) {
+			    ret = put_user(getreg(child, i),(unsigned long *) data);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#143: FILE: arch/i386/kernel/ptrace.c:576:
+			for (i = 0; i < 17*sizeof(long); i += sizeof(long)) {
 			                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#144: FILE: arch/i386/kernel/ptrace.c:577:
+			    ret = put_user(getreg(child, i),(unsigned long *) data);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#144: FILE: arch/i386/kernel/ptrace.c:577:
+			    ret = put_user(getreg(child, i),(unsigned long *) data);
 			                                   ^

WARNING:TABSTOP: Statements should start on a tabstop
#145: FILE: arch/i386/kernel/ptrace.c:578:
+			    if (ret) break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#145: FILE: arch/i386/kernel/ptrace.c:578:
+			    if (ret) break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#165: FILE: arch/i386/kernel/ptrace.c:586:
+			for (i = 0; i < 17*sizeof(long); i += sizeof(long)) {
+			    ret = get_user(tmp, (unsigned long *) data);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#165: FILE: arch/i386/kernel/ptrace.c:586:
+			for (i = 0; i < 17*sizeof(long); i += sizeof(long)) {
 			                  ^

CHECK:SPACING: No space is necessary after a cast
#166: FILE: arch/i386/kernel/ptrace.c:587:
+			    ret = get_user(tmp, (unsigned long *) data);

WARNING:TABSTOP: Statements should start on a tabstop
#167: FILE: arch/i386/kernel/ptrace.c:588:
+			    if (ret) break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#167: FILE: arch/i386/kernel/ptrace.c:588:
+			    if (ret) break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: arch/i386/kernel/ptrace.c:606:
+^I^I^I^Iret = copy_to_user((void *)data, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: arch/i386/kernel/ptrace.c:608:
+^I^I^I^I^I^I   sizeof(struct user_i387_struct)) $

WARNING:SPACING: space prohibited before semicolon
#204: FILE: arch/i386/kernel/ptrace.c:609:
+					? -EFAULT : 0 ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: arch/i386/kernel/ptrace.c:620:
+^I^I^Iret = 0; $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: arch/i386/kernel/ptrace.c:626:
+				ret = copy_from_user(&child->tss.i387.hard, (void *)data,
+					   sizeof(struct user_i387_struct))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000570383.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 11 warnings, 5 checks, 126 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000570383.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
