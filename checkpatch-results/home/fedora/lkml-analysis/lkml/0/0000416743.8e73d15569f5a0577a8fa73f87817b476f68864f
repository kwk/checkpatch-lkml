WARNING:TYPO_SPELLING: 'endianess' may be misspelled - perhaps 'endianness'?
#17: 
Subject: [PATCH] Cleanup bitfield endianess mess
                                  ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
diff -urN linux-2.5.45-bk1/drivers/atm/fore200e.h linux/drivers/atm/fore200e.h

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#85: FILE: drivers/ide/ide-cd.h:128:
+	BITFIELD(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#106: FILE: drivers/ide/ide-cd.h:157:
+	BITFIELD2(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#128: FILE: drivers/ide/ide-cd.h:180:
+	BITFIELD3(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#323: FILE: drivers/ide/ide-cd.h:188:
+	BITFIELD7(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#339: FILE: drivers/ide/ide-cd.h:204:
+	BITFIELD7(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#354: FILE: drivers/ide/ide-cd.h:219:
+	BITFIELD8(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#372: FILE: drivers/ide/ide-cd.h:237:
+	BITFIELD8(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#390: FILE: drivers/ide/ide-cd.h:255:
+	BITFIELD6(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#404: FILE: drivers/ide/ide-cd.h:269:
+	BITFIELD5(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#445: FILE: drivers/ide/ide-cd.h:295:
+	BITFIELD3(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#451: FILE: drivers/ide/ide-cd.h:301:
+	BITFIELD3(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#474: FILE: drivers/ide/ide-cd.h:314:
+	BITFIELD3(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#500: FILE: drivers/ide/ide-floppy.c:178:
+	BITFIELD3(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#525: FILE: drivers/ide/ide-floppy.c:184:
+	BITFIELD3(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#530: FILE: drivers/ide/ide-floppy.c:189:
+	BITFIELD4(

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#531: FILE: drivers/ide/ide-floppy.c:190:
+		unsigned	tlun		:3,	/* Total logical units supported by the device */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#554: FILE: drivers/ide/ide-floppy.c:202:
+	BITFIELD3(

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#557: FILE: drivers/ide/ide-floppy.c:205:
+		unsigned	ps		:1	/* The device is capable of saving the page */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#575: FILE: drivers/ide/ide-floppy.c:229:
+	BITFIELD2(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#605: FILE: drivers/ide/ide-floppy.c:368:
+	BITFIELD7(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#647: FILE: drivers/ide/ide-floppy.c:383:
+	BITFIELD2(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#651: FILE: drivers/ide/ide-floppy.c:387:
+	BITFIELD2(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#655: FILE: drivers/ide/ide-floppy.c:391:
+	BITFIELD3(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#660: FILE: drivers/ide/ide-floppy.c:396:
+	BITFIELD4(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#684: FILE: drivers/ide/ide-floppy.c:416:
+	BITFIELD2(

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#686: FILE: drivers/ide/ide-floppy.c:418:
+		unsigned	valid		:1	/* The information field conforms to SFF-8070i */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#696: FILE: drivers/ide/ide-floppy.c:421:
+	BITFIELD4(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#718: FILE: drivers/ide/ide-floppy.c:449:
+	BITFIELD2(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#753: FILE: include/linux/atapi.h:83:
+		BITFIELD8(

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#758: FILE: include/linux/atapi.h:88:
+			u8 dsc		: 1,	/* Media access command finished / Buffer availability */

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#760: FILE: include/linux/atapi.h:90:
+			u8 drdy		: 1,	/* Ignored for ATAPI commands (ready to accept ATA command) */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#785: FILE: include/linux/atapi.h:102:
+		BITFIELD5(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#812: FILE: include/linux/atapi.h:119:
+		BITFIELD4(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#834: FILE: include/linux/atapi.h:134:
+		BITFIELD2(

WARNING:LINE_SPACING: Missing a blank line after declarations
#836: FILE: include/linux/atapi.h:136:
+			u8 low,		/* LSB */
+			u8 high		/* MSB */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#856: FILE: include/linux/atapi.h:147:
+		BITFIELD3(

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#857: FILE: include/linux/atapi.h:148:
+			u8 cod		: 1,	/* Information transferred is command (1) or data (0) */

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#858: FILE: include/linux/atapi.h:149:
+			u8 io		: 1,	/* The device requests us to read (1) or write (0) */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#885: FILE: include/linux/atapi.h:162:
+		BITFIELD6(

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#888: FILE: include/linux/atapi.h:165:
+			u8 drv		:1,	/* The responding drive will be drive 0 (0) or drive 1 (1) */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#915: FILE: include/linux/atapi.h:180:
+		BITFIELD5(

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#917: FILE: include/linux/atapi.h:182:
+			u8 nien		: 1,	/* Device interrupt is disabled (1) or enabled (0) */

WARNING:LONG_LINE_COMMENT: line length of 118 exceeds 100 columns
#918: FILE: include/linux/atapi.h:183:
+			u8 srst		: 1,	/* ATA software reset. ATAPI devices should use the new ATAPI srst. */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#948: FILE: include/linux/atapi.h:195:
+	BITFIELD7(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#990: FILE: include/linux/atapi.h:210:
+	BITFIELD2(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#994: FILE: include/linux/atapi.h:214:
+	BITFIELD2(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#998: FILE: include/linux/atapi.h:218:
+	BITFIELD3(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1003: FILE: include/linux/atapi.h:223:
+	BITFIELD4(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1019: FILE: include/linux/atapi.h:243:
+	BITFIELD2(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1041: FILE: include/linux/atapi.h:248:
+	BITFIELD5(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1063: FILE: include/linux/atapi.h:261:
+	BITFIELD2(

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1078: FILE: include/linux/byteorder/big_endian.h:68:
+#define BITFIELD2(b1, b2)							b2; b1;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1078: FILE: include/linux/byteorder/big_endian.h:68:
+#define BITFIELD2(b1, b2)							b2; b1;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1079: FILE: include/linux/byteorder/big_endian.h:69:
+#define BITFIELD3(b1, b2, b3)						    b3; b2; b1;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1079: FILE: include/linux/byteorder/big_endian.h:69:
+#define BITFIELD3(b1, b2, b3)						    b3; b2; b1;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1080: FILE: include/linux/byteorder/big_endian.h:70:
+#define BITFIELD4(b1, b2, b3, b4)					b4; b3; b2; b1;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1080: FILE: include/linux/byteorder/big_endian.h:70:
+#define BITFIELD4(b1, b2, b3, b4)					b4; b3; b2; b1;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1081: FILE: include/linux/byteorder/big_endian.h:71:
+#define BITFIELD5(b1, b2, b3, b4, b5)				    b5; b4; b3; b2; b1;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1081: FILE: include/linux/byteorder/big_endian.h:71:
+#define BITFIELD5(b1, b2, b3, b4, b5)				    b5; b4; b3; b2; b1;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1082: FILE: include/linux/byteorder/big_endian.h:72:
+#define BITFIELD6(b1, b2, b3, b4, b5, b6)			b6; b5; b4; b3; b2; b1;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1082: FILE: include/linux/byteorder/big_endian.h:72:
+#define BITFIELD6(b1, b2, b3, b4, b5, b6)			b6; b5; b4; b3; b2; b1;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1083: FILE: include/linux/byteorder/big_endian.h:73:
+#define BITFIELD7(b1, b2, b3, b4, b5, b6, b7)		    b7; b6; b5; b4; b3; b2; b1;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1083: FILE: include/linux/byteorder/big_endian.h:73:
+#define BITFIELD7(b1, b2, b3, b4, b5, b6, b7)		    b7; b6; b5; b4; b3; b2; b1;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1084: FILE: include/linux/byteorder/big_endian.h:74:
+#define BITFIELD8(b1, b2, b3, b4, b5, b6, b7, b8)	b8; b7; b6; b5; b4; b3; b2; b1;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1084: FILE: include/linux/byteorder/big_endian.h:74:
+#define BITFIELD8(b1, b2, b3, b4, b5, b6, b7, b8)	b8; b7; b6; b5; b4; b3; b2; b1;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1094: FILE: include/linux/byteorder/little_endian.h:68:
+#define BITFIELD2(b1, b2)				b1; b2;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1094: FILE: include/linux/byteorder/little_endian.h:68:
+#define BITFIELD2(b1, b2)				b1; b2;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1095: FILE: include/linux/byteorder/little_endian.h:69:
+#define BITFIELD3(b1, b2, b3)				b1; b2; b3;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1095: FILE: include/linux/byteorder/little_endian.h:69:
+#define BITFIELD3(b1, b2, b3)				b1; b2; b3;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1096: FILE: include/linux/byteorder/little_endian.h:70:
+#define BITFIELD4(b1, b2, b3, b4)			b1; b2; b3; b4;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1096: FILE: include/linux/byteorder/little_endian.h:70:
+#define BITFIELD4(b1, b2, b3, b4)			b1; b2; b3; b4;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1097: FILE: include/linux/byteorder/little_endian.h:71:
+#define BITFIELD5(b1, b2, b3, b4, b5)			b1; b2; b3; b4; b5;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1097: FILE: include/linux/byteorder/little_endian.h:71:
+#define BITFIELD5(b1, b2, b3, b4, b5)			b1; b2; b3; b4; b5;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1098: FILE: include/linux/byteorder/little_endian.h:72:
+#define BITFIELD6(b1, b2, b3, b4, b5, b6)		b1; b2; b3; b4; b5; b6;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1098: FILE: include/linux/byteorder/little_endian.h:72:
+#define BITFIELD6(b1, b2, b3, b4, b5, b6)		b1; b2; b3; b4; b5; b6;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1099: FILE: include/linux/byteorder/little_endian.h:73:
+#define BITFIELD7(b1, b2, b3, b4, b5, b6, b7)		b1; b2; b3; b4; b5; b6; b7;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1099: FILE: include/linux/byteorder/little_endian.h:73:
+#define BITFIELD7(b1, b2, b3, b4, b5, b6, b7)		b1; b2; b3; b4; b5; b6; b7;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1100: FILE: include/linux/byteorder/little_endian.h:74:
+#define BITFIELD8(b1, b2, b3, b4, b5, b6, b7, b8)	b1; b2; b3; b4; b5; b6; b7; b8;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1100: FILE: include/linux/byteorder/little_endian.h:74:
+#define BITFIELD8(b1, b2, b3, b4, b5, b6, b7, b8)	b1; b2; b3; b4; b5; b6; b7; b8;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1117: FILE: include/linux/cdrom.h:688:
+	BITFIELD2(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1133: FILE: include/linux/cdrom.h:693:
+	BITFIELD4(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1159: FILE: include/linux/cdrom.h:798:
+	BITFIELD4(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1180: FILE: include/linux/cdrom.h:808:
+	BITFIELD4(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1220: FILE: include/linux/cdrom.h:831:
+	BITFIELD4(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1226: FILE: include/linux/cdrom.h:837:
+	BITFIELD5(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1233: FILE: include/linux/cdrom.h:844:
+	BITFIELD3(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1260: FILE: include/linux/cdrom.h:861:
+	BITFIELD3(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1265: FILE: include/linux/cdrom.h:866:
+	BITFIELD3(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1285: FILE: include/linux/cdrom.h:877:
+	BITFIELD3(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1301: FILE: include/linux/cdrom.h:908:
+	BITFIELD3(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1335: FILE: include/linux/cdrom.h:914:
+	BITFIELD5(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1342: FILE: include/linux/cdrom.h:921:
+	BITFIELD4(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1348: FILE: include/linux/cdrom.h:927:
+	BITFIELD2(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1361: FILE: include/linux/cdrom.h:933:
+	BITFIELD2(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1381: FILE: include/linux/cdrom.h:969:
+	BITFIELD3(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1413: FILE: include/linux/ide.h:383:
+		BITFIELD6(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1437: FILE: include/linux/ide.h:403:
+		BITFIELD2(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1469: FILE: include/linux/ide.h:425:
+		BITFIELD8(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1501: FILE: include/linux/ide.h:450:
+		BITFIELD5(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1536: FILE: include/linux/ide.h:480:
+		BITFIELD8(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1570: FILE: include/linux/ide.h:506:
+		BITFIELD6(

CHECK:CAMELCASE: Avoid CamelCase: <nIEN>
#1572: FILE: include/linux/ide.h:508:
+			unsigned nIEN		: 1,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1598: FILE: include/linux/ide.h:528:
+		BITFIELD4(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1622: FILE: include/linux/ide.h:547:
+		BITFIELD3(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1649: FILE: include/linux/ide.h:567:
+		BITFIELD5(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1680: FILE: include/linux/ide.h:590:
+		BITFIELD6(

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000416743.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 27 warnings, 67 checks, 1586 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000416743.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
