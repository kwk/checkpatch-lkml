WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
diff -urN /scratch/anton/export/drivers/net/e1000/e1000.h linux-congo/drivers/net/e1000/e1000.h

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#66: FILE: drivers/net/e1000/e1000.h:168:
+ * slowness of transferring unaligned frames over the PCI bus */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#77: FILE: drivers/net/e1000/e1000.h:179:
+ * lookups */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#88: FILE: drivers/net/e1000/e1000.h:190:
+#define E1000_REALIGN_BUFFER_OFFSET(i)	((i)*E1000_REALIGN_BUFFER_SIZE)
                                       	    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#89: FILE: drivers/net/e1000/e1000.h:191:
+#define E1000_REALIGN_BUFFER(a,i) ((a)->realign_ring.vaddr ? \
                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#89: FILE: drivers/net/e1000/e1000.h:191:
+#define E1000_REALIGN_BUFFER(a,i) ((a)->realign_ring.vaddr ? \
+	(a)->realign_ring.vaddr + E1000_REALIGN_BUFFER_OFFSET(i) : \
+	NULL)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#92: FILE: drivers/net/e1000/e1000.h:194:
+#define E1000_REALIGN_BUFFER_DMA(a,i) ((a)->realign_ring.dma_handle \
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#96: FILE: drivers/net/e1000/e1000.h:198:
+#define E1000_REALIGN_BUFFER(a,i)	NULL
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#97: FILE: drivers/net/e1000/e1000.h:199:
+#define E1000_REALIGN_BUFFER_DMA(a,i)	0
                                   ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#100: FILE: drivers/net/e1000/e1000.h:202:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#132: FILE: drivers/net/e1000/e1000_main.c:716:
+	if (! rr->vaddr)
 	    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#133: FILE: drivers/net/e1000/e1000_main.c:717:
+		printk(KERN_WARNING "%s: could not allocate realignment buffers.  Expect poor performance on Power4 hardware\n",

ERROR:SPACING: space required before the open parenthesis '('
#188: FILE: drivers/net/e1000/e1000_main.c:1027:
+			if(adapter->tx_ring.buffer_info[i].dma)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: drivers/net/e1000/e1000_main.c:1529:
+e1000_realign_data(struct e1000_adapter *adapter, unsigned char *data,
+		     int size, int i)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size <= E1000_REALIGN_BUFFER_SIZE'
#205: FILE: drivers/net/e1000/e1000_main.c:1533:
+	if(buf && (size <= E1000_REALIGN_BUFFER_SIZE)
+	   && ((unsigned long)(data) % E1000_REALIGN_TARGET_ALIGNMENT)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#205: FILE: drivers/net/e1000/e1000_main.c:1533:
+	if(buf && (size <= E1000_REALIGN_BUFFER_SIZE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#206: FILE: drivers/net/e1000/e1000_main.c:1534:
+	if(buf && (size <= E1000_REALIGN_BUFFER_SIZE)
+	   && ((unsigned long)(data) % E1000_REALIGN_TARGET_ALIGNMENT)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#207: FILE: drivers/net/e1000/e1000_main.c:1535:
+	   && ((unsigned long)(data) % E1000_REALIGN_TARGET_ALIGNMENT)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#227: FILE: drivers/net/e1000/e1000_main.c:1567:
+		if (e1000_realign_data(adapter, skb->data+offset, size, i))
 		                                         ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#243: FILE: drivers/net/e1000/e1000_main.c:1648:
+		if (E1000_REALIGN_DATA_HACK
+		    && !tx_ring->buffer_info[i].dma)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000363173.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 4 warnings, 9 checks, 179 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000363173.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
