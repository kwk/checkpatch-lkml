ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#66: 
--- a/include/linux/atalk.h	Mon Oct  7 03:28:22 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: include/linux/atalk.h:212:
+extern int atalk_proc_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#84: FILE: include/linux/atalk.h:213:
+extern void atalk_proc_exit(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#147: FILE: net/appletalk/atalk_proc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#148: FILE: net/appletalk/atalk_proc.c:2:
+ * ^Iatalk_proc.c - proc support for Appletalk$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#150: FILE: net/appletalk/atalk_proc.c:4:
+ * ^ICopyright(c) Arnaldo Carvalho de Melo <acme@conectiva.com.br>$

WARNING:INLINE: plain inline is preferred over __inline__
#165: FILE: net/appletalk/atalk_proc.c:19:
+static __inline__ struct atalk_iface *atalk_get_interface_idx(loff_t pos)

WARNING:SPLIT_STRING: quoted string split across lines
#211: FILE: net/appletalk/atalk_proc.c:65:
+		seq_puts(seq, "Interface	  Address   Networks   "
+			      "Status\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:INLINE: plain inline is preferred over __inline__
#224: FILE: net/appletalk/atalk_proc.c:78:
+static __inline__ struct atalk_route *atalk_get_route_idx(loff_t pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: net/appletalk/atalk_proc.c:130:
+		seq_printf(seq, "Default     %04X:%02X  %-4d  %s\n",
+			       ntohs(rt->gateway.s_net), rt->gateway.s_node,

WARNING:INLINE: plain inline is preferred over __inline__
#289: FILE: net/appletalk/atalk_proc.c:143:
+static __inline__ struct sock *atalk_get_socket_idx(loff_t pos)

WARNING:SPLIT_STRING: quoted string split across lines
#336: FILE: net/appletalk/atalk_proc.c:190:
+		seq_printf(seq, "Type Local_addr  Remote_addr Tx_queue "
+				"Rx_queue St UID\n");

WARNING:SPLIT_STRING: quoted string split across lines
#344: FILE: net/appletalk/atalk_proc.c:198:
+	seq_printf(seq, "%02X   %04X:%02X:%02X  %04X:%02X:%02X  %08X:%08X "
+			"%02X %d\n",

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#353: FILE: net/appletalk/atalk_proc.c:207:
+struct seq_operations atalk_seq_interface_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#360: FILE: net/appletalk/atalk_proc.c:214:
+struct seq_operations atalk_seq_route_ops = {

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#367: FILE: net/appletalk/atalk_proc.c:221:
+struct seq_operations atalk_seq_socket_ops = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#389: FILE: net/appletalk/atalk_proc.c:243:
+static struct file_operations atalk_seq_interface_fops = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#396: FILE: net/appletalk/atalk_proc.c:250:
+static struct file_operations atalk_seq_route_fops = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#403: FILE: net/appletalk/atalk_proc.c:257:
+static struct file_operations atalk_seq_socket_fops = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#421: FILE: net/appletalk/atalk_proc.c:275:
+	p = create_proc_entry("interface", S_IRUGO, atalk_proc_dir);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#426: FILE: net/appletalk/atalk_proc.c:280:
+	p = create_proc_entry("route", S_IRUGO, atalk_proc_dir);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#431: FILE: net/appletalk/atalk_proc.c:285:
+	p = create_proc_entry("socket", S_IRUGO, atalk_proc_dir);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#903: FILE: net/appletalk/ddp.c:1854:
+	printk(KERN_INFO "NET4: AppleTalk 0.20 for Linux NET4.0\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000426053.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 19 warnings, 3 checks, 844 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000426053.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
