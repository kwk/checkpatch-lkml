WARNING:TYPO_SPELLING: 'havn't' may be misspelled - perhaps 'haven't'?
#35: 
random.c?  My patch is attached, but I havn't tested that part yet.
                                       ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#94: FILE: drivers/char/random-fortuna.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#101: FILE: drivers/char/random-fortuna.c:8:
+ * ^I- Ported to 2.6.11.4$

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#115: FILE: drivers/char/random-fortuna.c:22:
+ *	- Added a seperate round-robin index for use inputs.  Avoids a
   	          ^^^^^^^^

WARNING:TYPO_SPELLING: 'writting' may be misspelled - perhaps 'writing'?
#121: FILE: drivers/char/random-fortuna.c:28:
+ *	- Ts'o's (I love writting that!) recomendation to force reseeds
   	                 ^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#122: FILE: drivers/char/random-fortuna.c:29:
+ * ^I  to be at least 0.1 ms apart (complies with Ferguson/Schnier's$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#125: FILE: drivers/char/random-fortuna.c:32:
+ * ^I- Re-worked to keep the blocking /dev/random.  Yes I finally gave$

WARNING:TYPO_SPELLING: 'Inital' may be misspelled - perhaps 'Initial'?
#133: FILE: drivers/char/random-fortuna.c:40:
+ *	- Inital version
   	  ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: drivers/char/random-fortuna.c:41:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: drivers/char/random-fortuna.c:58:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: drivers/char/random-fortuna.c:64:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: drivers/char/random-fortuna.c:81:
+ * (now, with legal B.S. out of the way.....) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: drivers/char/random-fortuna.c:82:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: drivers/char/random-fortuna.c:92:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: drivers/char/random-fortuna.c:103:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: drivers/char/random-fortuna.c:112:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: drivers/char/random-fortuna.c:119:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: drivers/char/random-fortuna.c:127:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: drivers/char/random-fortuna.c:130:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#227: FILE: drivers/char/random-fortuna.c:134:
+ * ^Ivoid get_random_bytes(void *buf, int nbytes);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: drivers/char/random-fortuna.c:138:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: drivers/char/random-fortuna.c:145:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: drivers/char/random-fortuna.c:154:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: drivers/char/random-fortuna.c:157:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#251: FILE: drivers/char/random-fortuna.c:158:
+ * ^Ivoid add_keyboard_randomness(unsigned char scancode);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#252: FILE: drivers/char/random-fortuna.c:159:
+ * ^Ivoid add_mouse_randomness(__u32 mouse_data);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#253: FILE: drivers/char/random-fortuna.c:160:
+ * ^Ivoid add_interrupt_randomness(int irq);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: drivers/char/random-fortuna.c:161:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: drivers/char/random-fortuna.c:164:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: drivers/char/random-fortuna.c:175:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: drivers/char/random-fortuna.c:182:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: drivers/char/random-fortuna.c:191:
+ * sequence: $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#303: FILE: drivers/char/random-fortuna.c:210:
+ * ^I# Fortuna resists using all of its pool matirial, so we need to$

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#304: FILE: drivers/char/random-fortuna.c:211:
+ *      # draw 8 seperate times (count=8) to ensure we get the entropy
                  ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: drivers/char/random-fortuna.c:223:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#334: FILE: drivers/char/random-fortuna.c:241:
+ * ^Imknod /dev/random c 1 8$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#335: FILE: drivers/char/random-fortuna.c:242:
+ * ^Imknod /dev/urandom c 1 9$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: drivers/char/random-fortuna.c:243:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: drivers/char/random-fortuna.c:253:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: drivers/char/random-fortuna.c:257:
+ * $

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#377: FILE: drivers/char/random-fortuna.c:284:
+#include <asm/processor.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#378: FILE: drivers/char/random-fortuna.c:285:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#380: FILE: drivers/char/random-fortuna.c:287:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#382: FILE: drivers/char/random-fortuna.c:289:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#388: FILE: drivers/char/random-fortuna.c:295:
+ * blocking of /dev/random */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'recomended' may be misspelled - perhaps 'recommended'?
#395: FILE: drivers/char/random-fortuna.c:302:
+ * Number of bytes you can extract at a time, 1MB is recomended in
                                                      ^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#398: FILE: drivers/char/random-fortuna.c:305:
+#define RANDOM_MAX_EXTRACT_SIZE  (1<<20)
                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#398: FILE: drivers/char/random-fortuna.c:305:
+#define RANDOM_MAX_EXTRACT_SIZE  (1<<20)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#406: FILE: drivers/char/random-fortuna.c:313:
+#define DEFAULT_POOL_SIZE ( (1<<DEFAULT_POOL_NUMBER) * 256)
                               ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#406: FILE: drivers/char/random-fortuna.c:313:
+#define DEFAULT_POOL_SIZE ( (1<<DEFAULT_POOL_NUMBER) * 256)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#418: FILE: drivers/char/random-fortuna.c:325:
+ * /dev/random.  We also wait for reseed_count>0 and we do a $

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#437: FILE: drivers/char/random-fortuna.c:344:
+static DEFINE_PER_CPU(int, trickle_count) = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#440: FILE: drivers/char/random-fortuna.c:347:
+	( (1<<random_state->pool_number) * random_state->digestsize )
 	    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#440: FILE: drivers/char/random-fortuna.c:347:
+	( (1<<random_state->pool_number) * random_state->digestsize )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#440: FILE: drivers/char/random-fortuna.c:347:
+	( (1<<random_state->pool_number) * random_state->digestsize )

ERROR:SPACING: space prohibited after that open parenthesis '('
#441: FILE: drivers/char/random-fortuna.c:348:
+#define POOLBITS	( POOLBYTES * 8 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#441: FILE: drivers/char/random-fortuna.c:348:
+#define POOLBITS	( POOLBYTES * 8 )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'WAIT' may be better as '(WAIT)' to avoid precedence issues
#450: FILE: drivers/char/random-fortuna.c:357:
+#define DECLARE_WAIT_QUEUE_HEAD(WAIT) struct wait_queue *WAIT

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: drivers/char/random-fortuna.c:378:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#476: FILE: drivers/char/random-fortuna.c:383:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#478: FILE: drivers/char/random-fortuna.c:385:
+ * logarithm.  $

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#483: FILE: drivers/char/random-fortuna.c:390:
+#if 0	/* Slow but clear version */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#487: FILE: drivers/char/random-fortuna.c:394:
+^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#511: FILE: drivers/char/random-fortuna.c:418:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#512: FILE: drivers/char/random-fortuna.c:419:
+	#define DEBUG_ENT(fmt, arg...) printk("random: " fmt, ## arg)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#516: FILE: drivers/char/random-fortuna.c:423:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#517: FILE: drivers/char/random-fortuna.c:424:
+	#define STATS_ENT(fmt, arg...) printk("random-stats: " fmt, ## arg)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#522: FILE: drivers/char/random-fortuna.c:429:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: drivers/char/random-fortuna.c:434:
+ * $

CHECK:CAMELCASE: Avoid CamelCase: <digestAlgo>
#531: FILE: drivers/char/random-fortuna.c:438:
+	const char *digestAlgo;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#533: FILE: drivers/char/random-fortuna.c:440:
+	struct crypto_tfm *pools[1<<DEFAULT_POOL_NUMBER];
 	                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#535: FILE: drivers/char/random-fortuna.c:442:
+	unsigned int pools_bytes[1<<DEFAULT_POOL_NUMBER];
 	                          ^

CHECK:CAMELCASE: Avoid CamelCase: <cipherAlgo>
#537: FILE: drivers/char/random-fortuna.c:444:
+	const char *cipherAlgo;

CHECK:CAMELCASE: Avoid CamelCase: <reseedHash>
#557: FILE: drivers/char/random-fortuna.c:464:
+	struct crypto_tfm *reseedHash;

CHECK:CAMELCASE: Avoid CamelCase: <networkCipher>
#559: FILE: drivers/char/random-fortuna.c:466:
+	struct crypto_tfm *networkCipher;

CHECK:CAMELCASE: Avoid CamelCase: <networkCipher_ready>
#561: FILE: drivers/char/random-fortuna.c:468:
+	char networkCipher_ready;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*r)...) over kmalloc(sizeof(struct entropy_store)...)
#585: FILE: drivers/char/random-fortuna.c:492:
+	r = kmalloc(sizeof(struct entropy_store), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:BRACES: braces {} are not necessary for single statement blocks
#586: FILE: drivers/char/random-fortuna.c:493:
+	if (!r) {
+		return -ENOMEM;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#590: FILE: drivers/char/random-fortuna.c:497:
+	memset (r, 0, sizeof(struct entropy_store));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'create_entropy_store', this function's name, in a string
#594: FILE: drivers/char/random-fortuna.c:501:
+	DEBUG_ENT("create_entropy_store() pools=%u index=%u\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: drivers/char/random-fortuna.c:502:
+	DEBUG_ENT("create_entropy_store() pools=%u index=%u\n",
+			1<<pool_number, r->pool_index);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#595: FILE: drivers/char/random-fortuna.c:502:
+			1<<pool_number, r->pool_index);
 			 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#596: FILE: drivers/char/random-fortuna.c:503:
+	for (i=0; i<(1<<pool_number); i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#596: FILE: drivers/char/random-fortuna.c:503:
+	for (i=0; i<(1<<pool_number); i++) {
 	           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#596: FILE: drivers/char/random-fortuna.c:503:
+	for (i=0; i<(1<<pool_number); i++) {
 	              ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'create_entropy_store', this function's name, in a string
#597: FILE: drivers/char/random-fortuna.c:504:
+		DEBUG_ENT("create_entropy_store() i=%i index=%u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#598: FILE: drivers/char/random-fortuna.c:505:
+		DEBUG_ENT("create_entropy_store() i=%i index=%u\n",
+				i, r->pool_index);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!r->pools[i]"
#600: FILE: drivers/char/random-fortuna.c:507:
+		if (r->pools[i] == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#601: FILE: drivers/char/random-fortuna.c:508:
+			for (j=0; j<i; j++) {
 			      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#601: FILE: drivers/char/random-fortuna.c:508:
+			for (j=0; j<i; j++) {
 			           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#602: FILE: drivers/char/random-fortuna.c:509:
+				if (r->pools[j] != NULL) {
+					kfree(r->pools[j]);
+				}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "r->pools[j]"
#602: FILE: drivers/char/random-fortuna.c:509:
+				if (r->pools[j] != NULL) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#609: FILE: drivers/char/random-fortuna.c:516:
+		crypto_digest_init( r->pools[i] );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#609: FILE: drivers/char/random-fortuna.c:516:
+		crypto_digest_init( r->pools[i] );

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#615: FILE: drivers/char/random-fortuna.c:522:
+	if ((r->cipher=crypto_alloc_tfm(r->cipherAlgo, 0)) == NULL) {
 	              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#615: FILE: drivers/char/random-fortuna.c:522:
+	if ((r->cipher=crypto_alloc_tfm(r->cipherAlgo, 0)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#615: FILE: drivers/char/random-fortuna.c:522:
+	if ((r->cipher=crypto_alloc_tfm(r->cipherAlgo, 0)) == NULL) {
+		return -ENOMEM;
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#620: FILE: drivers/char/random-fortuna.c:527:
+	 * to the cipher's keysize */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#628: FILE: drivers/char/random-fortuna.c:535:
+	if (crypto_cipher_setkey(r->cipher, r->key, r->keysize)) {
+		return -EINVAL;
+	}

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#633: FILE: drivers/char/random-fortuna.c:540:
+	if ((r->reseedHash=crypto_alloc_tfm(r->digestAlgo, 0)) == NULL) {
 	                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#633: FILE: drivers/char/random-fortuna.c:540:
+	if ((r->reseedHash=crypto_alloc_tfm(r->digestAlgo, 0)) == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#633: FILE: drivers/char/random-fortuna.c:540:
+	if ((r->reseedHash=crypto_alloc_tfm(r->digestAlgo, 0)) == NULL) {
+		return -ENOMEM;
+	}

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#637: FILE: drivers/char/random-fortuna.c:544:
+	if ((r->networkCipher=crypto_alloc_tfm(r->cipherAlgo, 0)) == NULL) {
 	                     ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#637: FILE: drivers/char/random-fortuna.c:544:
+	if ((r->networkCipher=crypto_alloc_tfm(r->cipherAlgo, 0)) == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#637: FILE: drivers/char/random-fortuna.c:544:
+	if ((r->networkCipher=crypto_alloc_tfm(r->cipherAlgo, 0)) == NULL) {
+		return -ENOMEM;
+	}

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#654: FILE: drivers/char/random-fortuna.c:561:
+	static unsigned int totalBytes=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#654: FILE: drivers/char/random-fortuna.c:561:
+	static unsigned int totalBytes=0;
 	                              ^

CHECK:CAMELCASE: Avoid CamelCase: <totalBytes>
#654: FILE: drivers/char/random-fortuna.c:561:
+	static unsigned int totalBytes=0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#655: FILE: drivers/char/random-fortuna.c:562:
+	static unsigned int keyidx = 0;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!r"
#657: FILE: drivers/char/random-fortuna.c:564:
+	if (r == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#666: FILE: drivers/char/random-fortuna.c:573:
+	sg[0].length = nwords*sizeof(__u32);
 	                     ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#671: FILE: drivers/char/random-fortuna.c:578:
+		if (r->pool_index == 0) {
+			r->pool0_len += nwords*sizeof(__u32);
+		}

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#672: FILE: drivers/char/random-fortuna.c:579:
+			r->pool0_len += nwords*sizeof(__u32);
 			                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#676: FILE: drivers/char/random-fortuna.c:583:
+					& ((1<<random_state->pool_number)-1);
 					     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#676: FILE: drivers/char/random-fortuna.c:583:
+					& ((1<<random_state->pool_number)-1);
 					                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#681: FILE: drivers/char/random-fortuna.c:588:
+		dst_pool &= (1<<random_state->pool_number) - 1;
 		              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#687: FILE: drivers/char/random-fortuna.c:594:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'add_entropy_words', this function's name, in a string
#689: FILE: drivers/char/random-fortuna.c:596:
+DEBUG_ENT("0 add_entropy_words() nwords=%u pool[i].bytes=%u total=%u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#690: FILE: drivers/char/random-fortuna.c:597:
+DEBUG_ENT("0 add_entropy_words() nwords=%u pool[i].bytes=%u total=%u\n",
+	nwords, r->pools_bytes[r->pool_index], totalBytes);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#743: FILE: drivers/char/random-fortuna.c:650:
+	batch_entropy_pool = kmalloc(size*sizeof(struct sample), GFP_KERNEL);
 	                                 ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#743: FILE: drivers/char/random-fortuna.c:650:
+	batch_entropy_pool = kmalloc(size*sizeof(struct sample), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#746: FILE: drivers/char/random-fortuna.c:653:
+	batch_entropy_copy = kmalloc(size*sizeof(struct sample), GFP_KERNEL);
 	                                 ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#746: FILE: drivers/char/random-fortuna.c:653:
+	batch_entropy_copy = kmalloc(size*sizeof(struct sample), GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#751: FILE: drivers/char/random-fortuna.c:658:
+	batch_head = batch_tail = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#777: FILE: drivers/char/random-fortuna.c:684:
+	if (((batch_head - batch_tail) & (batch_max-1)) >= (batch_max / 2)) {
 	                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#784: FILE: drivers/char/random-fortuna.c:691:
+	new = (batch_head+1) & (batch_max-1);
 	                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#784: FILE: drivers/char/random-fortuna.c:691:
+	new = (batch_head+1) & (batch_max-1);
 	                                 ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#785: FILE: drivers/char/random-fortuna.c:692:
+	if (new == batch_tail) {
[...]
+	} else {
[...]

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#794: FILE: drivers/char/random-fortuna.c:701:
+EXPORT_SYMBOL(batch_entropy_store);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#804: FILE: drivers/char/random-fortuna.c:711:
+	unsigned head, tail;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#814: FILE: drivers/char/random-fortuna.c:721:
+	       batch_max*sizeof(struct sample));
 	                ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#823: FILE: drivers/char/random-fortuna.c:730:
+		if (random_state->entropy_count >= max_entropy) {
+			max_entropy = POOLBITS;
+		}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#835: FILE: drivers/char/random-fortuna.c:742:
+			credit_entropy_store(random_state,
+				batch_entropy_copy[tail].credit);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#838: FILE: drivers/char/random-fortuna.c:745:
+		add_entropy_words(random_state,
+			batch_entropy_copy[tail].data, 2, -1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#841: FILE: drivers/char/random-fortuna.c:748:
+		tail = (tail+1) & (batch_max-1);
 		            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#841: FILE: drivers/char/random-fortuna.c:748:
+		tail = (tail+1) & (batch_max-1);
 		                            ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#844: FILE: drivers/char/random-fortuna.c:751:
+	if (random_state->entropy_count >= random_read_wakeup_thresh
+		&& random_state->reseed_count != 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#857: FILE: drivers/char/random-fortuna.c:764:
+	__s32		last_delta,last_delta2;
 	     		          ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#877: FILE: drivers/char/random-fortuna.c:784:
+static void add_timer_randomness(struct timer_rand_state *state, unsigned num)

ERROR:SPACING: space prohibited after that open parenthesis '('
#884: FILE: drivers/char/random-fortuna.c:791:
+	if ( random_state->entropy_count > trickle_thresh &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#885: FILE: drivers/char/random-fortuna.c:792:
+	if ( random_state->entropy_count > trickle_thresh &&
+	     (__get_cpu_var(trickle_count)++ & 0xfff))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#888: FILE: drivers/char/random-fortuna.c:795:
+#if defined (__i386__) || defined (__x86_64__)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#888: FILE: drivers/char/random-fortuna.c:795:
+#if defined (__i386__) || defined (__x86_64__)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#888: FILE: drivers/char/random-fortuna.c:795:
+#if defined (__i386__) || defined (__x86_64__)

Architecture specific defines should be avoided wherever
possible.

WARNING:LINE_SPACING: Missing a blank line after declarations
#891: FILE: drivers/char/random-fortuna.c:798:
+		__u32 high;
+		rdtsc(time, high);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#896: FILE: drivers/char/random-fortuna.c:803:
+#elif defined (__sparc_v9__)

CHECK:SPACING: No space is necessary after a cast
#899: FILE: drivers/char/random-fortuna.c:806:
+	time = (unsigned int) tick;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#945: FILE: drivers/char/random-fortuna.c:852:
+extern void add_input_randomness(unsigned int type, unsigned int code,
+			 unsigned int value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#956: FILE: drivers/char/random-fortuna.c:863:
+	add_timer_randomness(&input_timer_state,
+			(type << 4) ^ code ^ (code >> 4) ^ value);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#964: FILE: drivers/char/random-fortuna.c:871:
+	add_timer_randomness(irq_timer_state[irq], 0x100+irq);
 	                                                ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#967: FILE: drivers/char/random-fortuna.c:874:
+EXPORT_SYMBOL(add_interrupt_randomness);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#975: FILE: drivers/char/random-fortuna.c:882:
+	add_timer_randomness(disk->random,
+				0x100+MKDEV(disk->major, disk->first_minor));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#975: FILE: drivers/char/random-fortuna.c:882:
+				0x100+MKDEV(disk->major, disk->first_minor));
 				     ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#978: FILE: drivers/char/random-fortuna.c:885:
+EXPORT_SYMBOL(add_disk_randomness);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#989: FILE: drivers/char/random-fortuna.c:896:
+static ssize_t extract_entropy(struct entropy_store *r, void * buf,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#992: FILE: drivers/char/random-fortuna.c:899:
+static inline void increment_iv(unsigned char *iv, const unsigned int IVsize) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <IVsize>
#992: FILE: drivers/char/random-fortuna.c:899:
+static inline void increment_iv(unsigned char *iv, const unsigned int IVsize) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#995: FILE: drivers/char/random-fortuna.c:902:
+		if (++((u32*)iv)[0])

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#996: FILE: drivers/char/random-fortuna.c:903:
+			++((u32*)iv)[1];

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1000: FILE: drivers/char/random-fortuna.c:907:
+		if (++((u32*)iv)[0])

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1001: FILE: drivers/char/random-fortuna.c:908:
+			if (++((u32*)iv)[1])

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1002: FILE: drivers/char/random-fortuna.c:909:
+				if (++((u32*)iv)[2])

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1003: FILE: drivers/char/random-fortuna.c:910:
+					++((u32*)iv)[3];

WARNING:LINE_SPACING: Missing a blank line after declarations
#1009: FILE: drivers/char/random-fortuna.c:916:
+		int i;
+		for (i=0; i<IVsize; i++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1009: FILE: drivers/char/random-fortuna.c:916:
+		for (i=0; i<IVsize; i++)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1009: FILE: drivers/char/random-fortuna.c:916:
+		for (i=0; i<IVsize; i++)
 		           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1019: FILE: drivers/char/random-fortuna.c:926:
+ * $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1026: FILE: drivers/char/random-fortuna.c:933:
+static void random_reseed(struct entropy_store *r, size_t nbytes, int flags) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1031: FILE: drivers/char/random-fortuna.c:938:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1031: FILE: drivers/char/random-fortuna.c:938:
+ $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1044: FILE: drivers/char/random-fortuna.c:951:
+	if (flags & EXTRACT_ENTROPY_LIMIT && nbytes >= r->entropy_count / 8) {
+		nbytes = r->entropy_count / 8;
+	}

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1048: FILE: drivers/char/random-fortuna.c:955:
+	if (deduct*8 <= r->entropy_count) {
 	          ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1048: FILE: drivers/char/random-fortuna.c:955:
+	if (deduct*8 <= r->entropy_count) {
[...]
+	} else {
[...]

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1049: FILE: drivers/char/random-fortuna.c:956:
+		r->entropy_count -= deduct*8;
 		                          ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'random_reseed', this function's name, in a string
#1068: FILE: drivers/char/random-fortuna.c:975:
+	DEBUG_ENT("random_reseed count=%u\n", r->reseed_count);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1078: FILE: drivers/char/random-fortuna.c:985:
+  ( ((VAL) >> (N)) & 1 )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1078: FILE: drivers/char/random-fortuna.c:985:
+  ( ((VAL) >> (N)) & 1 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1078: FILE: drivers/char/random-fortuna.c:985:
+  ( ((VAL) >> (N)) & 1 )

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1079: FILE: drivers/char/random-fortuna.c:986:
+	for (i=0; i<(1<<r->pool_number); i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1079: FILE: drivers/char/random-fortuna.c:986:
+	for (i=0; i<(1<<r->pool_number); i++) {
 	           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1079: FILE: drivers/char/random-fortuna.c:986:
+	for (i=0; i<(1<<r->pool_number); i++) {
 	              ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1083: FILE: drivers/char/random-fortuna.c:990:
+		if ( (i==0)  ||  TESTBIT(r->reseed_count,i)==0 ) {
 		       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1083: FILE: drivers/char/random-fortuna.c:990:
+		if ( (i==0)  ||  TESTBIT(r->reseed_count,i)==0 ) {
 		                                        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1083: FILE: drivers/char/random-fortuna.c:990:
+		if ( (i==0)  ||  TESTBIT(r->reseed_count,i)==0 ) {
 		                                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1083: FILE: drivers/char/random-fortuna.c:990:
+		if ( (i==0)  ||  TESTBIT(r->reseed_count,i)==0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1083: FILE: drivers/char/random-fortuna.c:990:
+		if ( (i==0)  ||  TESTBIT(r->reseed_count,i)==0 ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i==0'
#1083: FILE: drivers/char/random-fortuna.c:990:
+		if ( (i==0)  ||  TESTBIT(r->reseed_count,i)==0 ) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1106: FILE: drivers/char/random-fortuna.c:1013:
+static inline time_t get_msectime(void) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1108: FILE: drivers/char/random-fortuna.c:1015:
+	struct timeval tv;
+	do_gettimeofday(&tv);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1119: FILE: drivers/char/random-fortuna.c:1026:
+static ssize_t extract_entropy(struct entropy_store *r, void * buf,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1123: FILE: drivers/char/random-fortuna.c:1030:
+	__u32 tmp[RANDOM_MAX_BLOCK_SIZE/sizeof(__u32)];
 	                               ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1135: FILE: drivers/char/random-fortuna.c:1042:
+	if (RANDOM_MAX_EXTRACT_SIZE < nbytes)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#1139: FILE: drivers/char/random-fortuna.c:1046:
+		/* if in blocking, only output upto the entropy estimate */
 		                               ^^^^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1140: FILE: drivers/char/random-fortuna.c:1047:
+		if (r->entropy_count/8 < nbytes)
 		                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1141: FILE: drivers/char/random-fortuna.c:1048:
+			nbytes = r->entropy_count/8;
 			                         ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1154: FILE: drivers/char/random-fortuna.c:1061:
+	if (! (flags & EXTRACT_ENTROPY_LIMIT) ) {
 	    ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1154: FILE: drivers/char/random-fortuna.c:1061:
+	if (! (flags & EXTRACT_ENTROPY_LIMIT) ) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1157: FILE: drivers/char/random-fortuna.c:1064:
+		if (r->pool0_len > 64
+		&& (nowtime - r->reseed_time) > RANDOM_RESEED_INTERVAL) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1194: FILE: drivers/char/random-fortuna.c:1101:
+			if (r->pool0_len > 64
+			&& (nowtime-r->reseed_time) > RANDOM_RESEED_INTERVAL) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1194: FILE: drivers/char/random-fortuna.c:1101:
+			&& (nowtime-r->reseed_time) > RANDOM_RESEED_INTERVAL) {
 			           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1219: FILE: drivers/char/random-fortuna.c:1126:
+^I^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1222: FILE: drivers/char/random-fortuna.c:1129:
+		if (flags & EXTRACT_ENTROPY_USER) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1228: FILE: drivers/char/random-fortuna.c:1135:
+		} else

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1237: FILE: drivers/char/random-fortuna.c:1144:
+	for (i=0; i+r->blocksize<=r->keysize; i+=r->blocksize) {
 	      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1237: FILE: drivers/char/random-fortuna.c:1144:
+	for (i=0; i+r->blocksize<=r->keysize; i+=r->blocksize) {
 	           ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#1237: FILE: drivers/char/random-fortuna.c:1144:
+	for (i=0; i+r->blocksize<=r->keysize; i+=r->blocksize) {
 	                        ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#1237: FILE: drivers/char/random-fortuna.c:1144:
+	for (i=0; i+r->blocksize<=r->keysize; i+=r->blocksize) {
 	                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1238: FILE: drivers/char/random-fortuna.c:1145:
+		memcpy(tmp, r->key+i, r->blocksize);
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1242: FILE: drivers/char/random-fortuna.c:1149:
+	memcpy(tmp, r->key+i, r->keysize-i);
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1242: FILE: drivers/char/random-fortuna.c:1149:
+	memcpy(tmp, r->key+i, r->keysize-i);
 	                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1243: FILE: drivers/char/random-fortuna.c:1150:
+	memset(tmp+r->keysize-i, 0, r->blocksize-(r->keysize-i));
 	          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1243: FILE: drivers/char/random-fortuna.c:1150:
+	memset(tmp+r->keysize-i, 0, r->blocksize-(r->keysize-i));
 	                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1243: FILE: drivers/char/random-fortuna.c:1150:
+	memset(tmp+r->keysize-i, 0, r->blocksize-(r->keysize-i));
 	                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1243: FILE: drivers/char/random-fortuna.c:1150:
+	memset(tmp+r->keysize-i, 0, r->blocksize-(r->keysize-i));
 	                                                    ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1247: FILE: drivers/char/random-fortuna.c:1154:
+	if (crypto_cipher_setkey(r->cipher, r->key, r->keysize)) {
+		return -EINVAL;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1253: FILE: drivers/char/random-fortuna.c:1160:
+^I$

CHECK:SPACING: No space is necessary after a cast
#1265: FILE: drivers/char/random-fortuna.c:1172:
+		extract_entropy(random_state, (char *) buf, nbytes, 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1267: FILE: drivers/char/random-fortuna.c:1174:
+		printk(KERN_NOTICE "get_random_bytes called before "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_random_bytes', this function's name, in a string
#1267: FILE: drivers/char/random-fortuna.c:1174:
+		printk(KERN_NOTICE "get_random_bytes called before "

WARNING:SPLIT_STRING: quoted string split across lines
#1268: FILE: drivers/char/random-fortuna.c:1175:
+		printk(KERN_NOTICE "get_random_bytes called before "
+				   "random driver initialization\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1271: FILE: drivers/char/random-fortuna.c:1178:
+EXPORT_SYMBOL(get_random_bytes);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1288: FILE: drivers/char/random-fortuna.c:1195:
+^Istruct timeval ^Itv;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1290: FILE: drivers/char/random-fortuna.c:1197:
+^Ichar ^I^I*p;$

CHECK:SPACING: No space is necessary after a cast
#1302: FILE: drivers/char/random-fortuna.c:1209:
+	p = (char *) &system_utsname;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1336: FILE: drivers/char/random-fortuna.c:1243:
+^I$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*state)...) over kmalloc(sizeof(struct timer_rand_state)...)
#1344: FILE: drivers/char/random-fortuna.c:1251:
+	state = kmalloc(sizeof(struct timer_rand_state), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1350: FILE: drivers/char/random-fortuna.c:1257:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1350: FILE: drivers/char/random-fortuna.c:1257:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1354: FILE: drivers/char/random-fortuna.c:1261:
+^I$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*state)...) over kmalloc(sizeof(struct timer_rand_state)...)
#1359: FILE: drivers/char/random-fortuna.c:1266:
+	state = kmalloc(sizeof(struct timer_rand_state), GFP_KERNEL);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1367: FILE: drivers/char/random-fortuna.c:1274:
+random_read(struct file * file, char __user * buf, size_t nbytes, loff_t *ppos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1367: FILE: drivers/char/random-fortuna.c:1274:
+random_read(struct file * file, char __user * buf, size_t nbytes, loff_t *ppos)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1371: FILE: drivers/char/random-fortuna.c:1278:
+^I$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1380: FILE: drivers/char/random-fortuna.c:1287:
+			  n*8, random_state->entropy_count,
 			   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1390: FILE: drivers/char/random-fortuna.c:1297:
+			  n*8, (nbytes-n)*8);
 			   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1390: FILE: drivers/char/random-fortuna.c:1297:
+			  n*8, (nbytes-n)*8);
 			              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1390: FILE: drivers/char/random-fortuna.c:1297:
+			  n*8, (nbytes-n)*8);
 			                 ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1409: FILE: drivers/char/random-fortuna.c:1316:
+			if (random_state->entropy_count / 8 == 0
+				||  random_state->reseed_count == 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1437: FILE: drivers/char/random-fortuna.c:1344:
+^I$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1438: FILE: drivers/char/random-fortuna.c:1345:
+	return (count ? count : retval);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1442: FILE: drivers/char/random-fortuna.c:1349:
+urandom_read(struct file * file, char __user * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1442: FILE: drivers/char/random-fortuna.c:1349:
+urandom_read(struct file * file, char __user * buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1443: FILE: drivers/char/random-fortuna.c:1350:
+urandom_read(struct file * file, char __user * buf,
+		      size_t nbytes, loff_t *ppos)

WARNING:TYPO_SPELLING: 'untill' may be misspelled - perhaps 'until'?
#1445: FILE: drivers/char/random-fortuna.c:1352:
+	/* Don't return anything untill we've reseeded at least once */
 	                         ^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1454: FILE: drivers/char/random-fortuna.c:1361:
+random_poll(struct file *file, poll_table * wait)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1469: FILE: drivers/char/random-fortuna.c:1376:
+random_write(struct file * file, const char __user * buffer,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1469: FILE: drivers/char/random-fortuna.c:1376:
+random_write(struct file * file, const char __user * buffer,

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1472: FILE: drivers/char/random-fortuna.c:1379:
+	static int	idx = 0;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1475: FILE: drivers/char/random-fortuna.c:1382:
+^I__u32 ^I^Ibuf[16];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1476: FILE: drivers/char/random-fortuna.c:1383:
+^Iconst char ^I__user *p = buffer;$

WARNING:TYPO_SPELLING: 'independantly' may be misspelled - perhaps 'independently'?
#1491: FILE: drivers/char/random-fortuna.c:1398:
+		 * Use input data rotates though the pools independantly of
 		                                           ^^^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1496: FILE: drivers/char/random-fortuna.c:1403:
+		idx = (idx + 1) & ((1<<random_state->pool_number)-1);
 		                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1496: FILE: drivers/char/random-fortuna.c:1403:
+		idx = (idx + 1) & ((1<<random_state->pool_number)-1);
 		                                                 ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1501: FILE: drivers/char/random-fortuna.c:1408:
+		return (ssize_t)ret;
+	} else {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1509: FILE: drivers/char/random-fortuna.c:1416:
+random_ioctl(struct inode * inode, struct file * file,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1509: FILE: drivers/char/random-fortuna.c:1416:
+random_ioctl(struct inode * inode, struct file * file,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1515: FILE: drivers/char/random-fortuna.c:1422:
+^I$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1533: FILE: drivers/char/random-fortuna.c:1440:
+		if (random_state->entropy_count >= random_read_wakeup_thresh
+			&&  random_state->reseed_count != 0)

CHECK:SPACING: No space is necessary after a cast
#1548: FILE: drivers/char/random-fortuna.c:1455:
+		retval = random_write(file, (const char __user *) p,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1558: FILE: drivers/char/random-fortuna.c:1465:
+		if (random_state->entropy_count >= random_read_wakeup_thresh
+			&&  random_state->reseed_count != 0)

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1572: FILE: drivers/char/random-fortuna.c:1479:
+struct file_operations random_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1579: FILE: drivers/char/random-fortuna.c:1486:
+struct file_operations urandom_fops = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1587: FILE: drivers/char/random-fortuna.c:1494:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1588: FILE: drivers/char/random-fortuna.c:1495:
+ * Used here for a Boot ID, but can be useful for other kernel $

WARNING:TYPO_SPELLING: 'truely' may be misspelled - perhaps 'truly'?
#1598: FILE: drivers/char/random-fortuna.c:1505:
+	/* Set UUID version to 4 --- truely random generation */
 	                             ^^^^^^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1604: FILE: drivers/char/random-fortuna.c:1511:
+EXPORT_SYMBOL(generate_random_uuid);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1621: FILE: drivers/char/random-fortuna.c:1528:
+static int proc_do_poolsize(ctl_table *table, int write, struct file *filp,
                                                                       ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1628: FILE: drivers/char/random-fortuna.c:1535:
+	ret = proc_dointvec(table, write, filp, buffer, lenp, ppos);
 	                                  ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sysctl_poolsize == POOLBITS'
#1629: FILE: drivers/char/random-fortuna.c:1536:
+	if (ret || !write ||
+	    (sysctl_poolsize == POOLBITS))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1641: FILE: drivers/char/random-fortuna.c:1548:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1664: FILE: drivers/char/random-fortuna.c:1571:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1666: FILE: drivers/char/random-fortuna.c:1573:
+ * as an ASCII string in the standard UUID format.  If accesses via the $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1669: FILE: drivers/char/random-fortuna.c:1576:
+static int proc_do_uuid(ctl_table *table, int write, struct file *filp,
                                                                   ^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1684: FILE: drivers/char/random-fortuna.c:1591:
+	sprintf(buf, "%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-"
+		"%02x%02x%02x%02x%02x%02x",

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1692: FILE: drivers/char/random-fortuna.c:1599:
+	return proc_dostring(&fake_table, write, filp, buffer, lenp, ppos);
 	                                         ^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1810: FILE: drivers/char/random-fortuna.c:1717:
+	max_read_thresh = max_write_thresh = POOLBITS;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1811: FILE: drivers/char/random-fortuna.c:1718:
+	for (i=0; random_table[i].ctl_name!=0; i++) {
 	      ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#1811: FILE: drivers/char/random-fortuna.c:1718:
+	for (i=0; random_table[i].ctl_name!=0; i++) {
 	                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1814: FILE: drivers/char/random-fortuna.c:1721:
+^I^I^I// If we don't want $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1824: FILE: drivers/char/random-fortuna.c:1731:
+			random_table[i].data = (void*)random_state->digestAlgo;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1828: FILE: drivers/char/random-fortuna.c:1735:
+			random_table[i].data = (void*)random_state->cipherAlgo;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1836: FILE: drivers/char/random-fortuna.c:1743:
+#endif ^I/* CONFIG_SYSCTL */$

WARNING:TYPO_SPELLING: 'funtions' may be misspelled - perhaps 'functions'?
#1840: FILE: drivers/char/random-fortuna.c:1747:
+ * Random funtions for networking
           ^^^^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1860: FILE: drivers/char/random-fortuna.c:1767:
+#define REKEY_INTERVAL	(300*HZ)
                       	    ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1870: FILE: drivers/char/random-fortuna.c:1777:
+ * ^Ito a (source,dest) tulple dependent forward jump of the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1871: FILE: drivers/char/random-fortuna.c:1778:
+ * ^Iclock by 0..2^(HASH_BITS+1)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1877: FILE: drivers/char/random-fortuna.c:1784:
+ * ^I^I^IManfred Spraul <manfred@colorfullife.com>$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1878: FILE: drivers/char/random-fortuna.c:1785:
+ * ^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1878: FILE: drivers/char/random-fortuna.c:1785:
+ * ^I^I$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1881: FILE: drivers/char/random-fortuna.c:1788:
+#define COUNT_MASK	( (1<<COUNT_BITS)-1)
                   	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1881: FILE: drivers/char/random-fortuna.c:1788:
+#define COUNT_MASK	( (1<<COUNT_BITS)-1)
                   	                 ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1881: FILE: drivers/char/random-fortuna.c:1788:
+#define COUNT_MASK	( (1<<COUNT_BITS)-1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1883: FILE: drivers/char/random-fortuna.c:1790:
+#define HASH_MASK	( (1<<HASH_BITS)-1 )
                  	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1883: FILE: drivers/char/random-fortuna.c:1790:
+#define HASH_MASK	( (1<<HASH_BITS)-1 )
                  	                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1883: FILE: drivers/char/random-fortuna.c:1790:
+#define HASH_MASK	( (1<<HASH_BITS)-1 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1883: FILE: drivers/char/random-fortuna.c:1790:
+#define HASH_MASK	( (1<<HASH_BITS)-1 )

WARNING:LINE_SPACING: Missing a blank line after declarations
#1891: FILE: drivers/char/random-fortuna.c:1798:
+	u8 tmp[RANDOM_MAX_KEY_SIZE];
+	spin_lock_bh(&ip_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1895: FILE: drivers/char/random-fortuna.c:1802:
+	crypto_cipher_setkey(random_state->networkCipher,
+					(const u8*)tmp,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1895: FILE: drivers/char/random-fortuna.c:1802:
+					(const u8*)tmp,

WARNING:MEMORY_BARRIER: memory barrier without comment
#1899: FILE: drivers/char/random-fortuna.c:1806:
+	mb();

WARNING:RETURN_VOID: void function return statements are not generally useful
#1904: FILE: drivers/char/random-fortuna.c:1811:
+	return;
+}

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1908: FILE: drivers/char/random-fortuna.c:1815:
+	static time_t rekey_time=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1908: FILE: drivers/char/random-fortuna.c:1815:
+	static time_t rekey_time=0;
 	                        ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#1910: FILE: drivers/char/random-fortuna.c:1817:
+	rmb();

WARNING:RETURN_VOID: void function return statements are not generally useful
#1917: FILE: drivers/char/random-fortuna.c:1824:
+	return;
+}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1923: FILE: drivers/char/random-fortuna.c:1830:
+^Istruct timeval ^Itv;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1947: FILE: drivers/char/random-fortuna.c:1854:
+^I */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1948: FILE: drivers/char/random-fortuna.c:1855:
+^I$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1952: FILE: drivers/char/random-fortuna.c:1859:
+	tmp[0] ^= (sport<<16) | dport;
 	                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1954: FILE: drivers/char/random-fortuna.c:1861:
+	crypto_cipher_encrypt(random_state->networkCipher, sgtmp, sgtmp,
+		random_state->blocksize);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1956: FILE: drivers/char/random-fortuna.c:1863:
+	random_state->networkCipher->crt_cipher.cit_xor_block((u8*)tmp,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1957: FILE: drivers/char/random-fortuna.c:1864:
+		(const u8*)saddr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1959: FILE: drivers/char/random-fortuna.c:1866:
+	crypto_cipher_encrypt(random_state->networkCipher, sgtmp, sgtmp,
+		random_state->blocksize);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1963: FILE: drivers/char/random-fortuna.c:1870:
+	seq += tv.tv_usec + tv.tv_sec*1000000;
 	                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1983: FILE: drivers/char/random-fortuna.c:1890:
+	crypto_cipher_encrypt(random_state->networkCipher, sgtmp, sgtmp,
+		random_state->blocksize);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1988: FILE: drivers/char/random-fortuna.c:1895:
+EXPORT_SYMBOL(secure_ipv6_id);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1991: FILE: drivers/char/random-fortuna.c:1898:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1995: FILE: drivers/char/random-fortuna.c:1902:
+^Istruct timeval ^Itv;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2009: FILE: drivers/char/random-fortuna.c:1916:
+^I *  Note that the words are placed into the starting vector, which is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2017: FILE: drivers/char/random-fortuna.c:1924:
+^I */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2018: FILE: drivers/char/random-fortuna.c:1925:
+^I$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2019: FILE: drivers/char/random-fortuna.c:1926:
+	tmp[0] = (sport<<16) | dport;
 	               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2027: FILE: drivers/char/random-fortuna.c:1934:
+	crypto_cipher_encrypt(random_state->networkCipher, sgtmp, sgtmp,
+		random_state->blocksize);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2039: FILE: drivers/char/random-fortuna.c:1946:
+	seq += tv.tv_usec + tv.tv_sec*1000000;
 	                             ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2041: FILE: drivers/char/random-fortuna.c:1948:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2042: FILE: drivers/char/random-fortuna.c:1949:
+	printk("init_seq(%lx, %lx, %d, %d) = %d\n",

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2048: FILE: drivers/char/random-fortuna.c:1955:
+EXPORT_SYMBOL(secure_tcp_sequence_number);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2074: FILE: drivers/char/random-fortuna.c:1981:
+	crypto_cipher_encrypt(random_state->networkCipher, sgtmp, sgtmp,
+		random_state->blocksize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2100: FILE: drivers/char/random-fortuna.c:2007:
+	crypto_cipher_encrypt(random_state->networkCipher, sgtmp, sgtmp,
+		random_state->blocksize);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2112: FILE: drivers/char/random-fortuna.c:2019:
+ * $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2121: FILE: drivers/char/random-fortuna.c:2028:
+__u32 secure_tcp_syn_cookie(__u32 saddr, __u32 daddr, __u16 sport,
+		__u16 dport, __u32 sseq, __u32 count, __u32 data)

WARNING:TYPO_SPELLING: 'hashs' may be misspelled - perhaps 'hashes'?
#2143: FILE: drivers/char/random-fortuna.c:2050:
+	 *   all these values anyways.  Not to mention the hashs differ only in
 	                                                   ^^^^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2159: FILE: drivers/char/random-fortuna.c:2066:
+	if (!random_state->networkCipher_ready) {
+		check_and_rekey(get_seconds());
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2164: FILE: drivers/char/random-fortuna.c:2071:
+	crypto_cipher_encrypt(random_state->networkCipher, sg, sg,
+		random_state->blocksize);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#2167: FILE: drivers/char/random-fortuna.c:2074:
+printk("random: secure_tcp_syn_cookie cook=%x", tmp[0] ^ ( (count << COOKIEBITS) | (data & COOKIEMASK) ) );

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2167: FILE: drivers/char/random-fortuna.c:2074:
+printk("random: secure_tcp_syn_cookie cook=%x", tmp[0] ^ ( (count << COOKIEBITS) | (data & COOKIEMASK) ) );

ERROR:SPACING: space prohibited after that open parenthesis '('
#2167: FILE: drivers/char/random-fortuna.c:2074:
+printk("random: secure_tcp_syn_cookie cook=%x", tmp[0] ^ ( (count << COOKIEBITS) | (data & COOKIEMASK) ) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2167: FILE: drivers/char/random-fortuna.c:2074:
+printk("random: secure_tcp_syn_cookie cook=%x", tmp[0] ^ ( (count << COOKIEBITS) | (data & COOKIEMASK) ) );

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'secure_tcp_syn_cookie', this function's name, in a string
#2167: FILE: drivers/char/random-fortuna.c:2074:
+printk("random: secure_tcp_syn_cookie cook=%x", tmp[0] ^ ( (count << COOKIEBITS) | (data & COOKIEMASK) ) );

ERROR:SPACING: space prohibited after that open parenthesis '('
#2168: FILE: drivers/char/random-fortuna.c:2075:
+	return tmp[0] ^ ( (count << COOKIEBITS) | (data & COOKIEMASK) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2168: FILE: drivers/char/random-fortuna.c:2075:
+	return tmp[0] ^ ( (count << COOKIEBITS) | (data & COOKIEMASK) );

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2181: FILE: drivers/char/random-fortuna.c:2088:
+__u32 check_tcp_syn_cookie(__u32 cookie, __u32 saddr, __u32 daddr, __u16 sport,
+		__u16 dport, __u32 sseq, __u32 count, __u32 maxdiff)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2186: FILE: drivers/char/random-fortuna.c:2093:
+printk("random: check_tcp_syn_cookie state=%p", random_state);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_tcp_syn_cookie', this function's name, in a string
#2186: FILE: drivers/char/random-fortuna.c:2093:
+printk("random: check_tcp_syn_cookie state=%p", random_state);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!random_state"
#2187: FILE: drivers/char/random-fortuna.c:2094:
+	if (random_state == NULL  ||  !random_state->networkCipher_ready)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2198: FILE: drivers/char/random-fortuna.c:2105:
+	crypto_cipher_encrypt(random_state->networkCipher, sg, sg,
+		random_state->blocksize);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2207: FILE: drivers/char/random-fortuna.c:2114:
+printk("random: check_tcp_syn_cookie diff=%x maxdiff=%x", diff, maxdiff);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_tcp_syn_cookie', this function's name, in a string
#2207: FILE: drivers/char/random-fortuna.c:2114:
+printk("random: check_tcp_syn_cookie diff=%x maxdiff=%x", diff, maxdiff);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2239: FILE: include/linux/sysctl.h:205:
+	RANDOM_UUID=6,
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2240: FILE: include/linux/sysctl.h:206:
+	RANDOM_DIGEST_ALGO=7,
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2241: FILE: include/linux/sysctl.h:207:
+	RANDOM_CIPHER_ALGO=8
 	                  ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000190135.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 133 errors, 108 warnings, 110 checks, 2165 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000190135.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
