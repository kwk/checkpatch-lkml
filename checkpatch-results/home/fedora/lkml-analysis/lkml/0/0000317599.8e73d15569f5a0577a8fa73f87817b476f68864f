ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#52: 
--- a/arch/i386/kernel/edd.c	Fri Dec 19 12:53:46 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#73: FILE: arch/i386/kernel/edd.c:651:
+#if defined(CONFIG_IDE) || defined(CONFIG_IDE_MODULE)

ERROR:POINTER_LOCATION: "foo	* bar" should be "foo	*bar"
#76: FILE: arch/i386/kernel/edd.c:654:
+	struct edd_device	* edev;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo	        * bar" should be "foo	        *bar"
#77: FILE: arch/i386/kernel/edd.c:655:
+	ide_drive_t	        * ide_drive;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#87: FILE: arch/i386/kernel/edd.c:665:
+static int edd_match_idedev(struct device * dev, void * d)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#87: FILE: arch/i386/kernel/edd.c:665:
+static int edd_match_idedev(struct device * dev, void * d)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#89: FILE: arch/i386/kernel/edd.c:667:
+	struct edd_ide_match_data * data = (struct edd_ide_match_data *)d;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#91: FILE: arch/i386/kernel/edd.c:669:
+	ide_drive_t * drive = container_of(dev,ide_drive_t,gendev);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#91: FILE: arch/i386/kernel/edd.c:669:
+	ide_drive_t * drive = container_of(dev,ide_drive_t,gendev);
 	                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#91: FILE: arch/i386/kernel/edd.c:669:
+	ide_drive_t * drive = container_of(dev,ide_drive_t,gendev);
 	                                                  ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#115: FILE: arch/i386/kernel/edd.c:693:
+	struct bus_type * ide_bus = find_bus("ide");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#117: FILE: arch/i386/kernel/edd.c:695:
+	if (!ide_bus) {
+		return NULL;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#124: FILE: arch/i386/kernel/edd.c:702:
+		if (bus_for_each_dev(ide_bus,NULL,&data,edd_match_idedev))
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#124: FILE: arch/i386/kernel/edd.c:702:
+		if (bus_for_each_dev(ide_bus,NULL,&data,edd_match_idedev))
 		                                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#124: FILE: arch/i386/kernel/edd.c:702:
+		if (bus_for_each_dev(ide_bus,NULL,&data,edd_match_idedev))
 		                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#124: FILE: arch/i386/kernel/edd.c:702:
+		if (bus_for_each_dev(ide_bus,NULL,&data,edd_match_idedev))
 		                                       ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#138: FILE: arch/i386/kernel/edd.c:716:
+		ide_drive_t * ide_drive = edd_find_matching_ide_device(edev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#139: FILE: arch/i386/kernel/edd.c:717:
+		ide_drive_t * ide_drive = edd_find_matching_ide_device(edev);
+		if (ide_drive && get_device(&ide_drive->gendev)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#153: FILE: arch/i386/kernel/edd.c:731:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000317599.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 4 warnings, 0 checks, 111 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000317599.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
