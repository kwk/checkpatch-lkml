WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
   Or maybe the program is just flawed, and the interesting 1/8 pattern comes 

WARNING:TYPO_SPELLING: 'entires' may be misspelled - perhaps 'entries'?
#48: 
the TLB can hold entires for more than the size of the L2 cache
                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'choosen' may be misspelled - perhaps 'chosen'?
#55: 
I've choosen 16MB for BUFFER_SIZE becuase this amounts to a:
     ^^^^^^^

WARNING:TYPO_SPELLING: 'becuase' may be misspelled - perhaps 'because'?
#55: 
I've choosen 16MB for BUFFER_SIZE becuase this amounts to a:
                                  ^^^^^^^

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#120: FILE: linus_lattlb.c:3:
+#if defined(__i386__)

Architecture specific defines should be avoided wherever
possible.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'low' - possible side-effects?
#127: FILE: linus_lattlb.c:9:
+#define rdtsc(low) \
+do {    __asm__ __volatile__("rd %%tick, %0" : "=r" (low)); \
+	low -= overhead; \
+} while (0)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#135: FILE: linus_lattlb.c:16:
+#define BUFSIZE (16*1024*1024)
                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#135: FILE: linus_lattlb.c:16:
+#define BUFSIZE (16*1024*1024)
                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#139: FILE: linus_lattlb.c:20:
+#define COMPUTE_INDEX(idx, i)	\
+do {	(idx) = (i) + ((((i)>>pageshift) & (cachelines - 1)) * CACHE_LINE_SIZE); \
+} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#139: FILE: linus_lattlb.c:20:
+#define COMPUTE_INDEX(idx, i)	\
+do {	(idx) = (i) + ((((i)>>pageshift) & (cachelines - 1)) * CACHE_LINE_SIZE); \
+} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#140: FILE: linus_lattlb.c:21:
+do {	(idx) = (i) + ((((i)>>pageshift) & (cachelines - 1)) * CACHE_LINE_SIZE); \
     	                    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#175: FILE: linus_lattlb.c:54:
+		unsigned long start, end;
+		rdtsc(start);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#196: FILE: linus_lattlb.c:74:
+		for (i = 0; i < BUFSIZE ; i+= pagesize) {
 		                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#213: FILE: linus_lattlb.c:91:
+		double percent = (double)count / (BUFSIZE/pagesize);
 		                                         ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000469003.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 6 warnings, 7 checks, 98 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000469003.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
