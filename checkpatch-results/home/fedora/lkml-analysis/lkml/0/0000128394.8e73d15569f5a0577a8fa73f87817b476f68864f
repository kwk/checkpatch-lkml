WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#77: FILE: arch/i386/kernel/tsc.c:350:
+		printk("BUG in read_tsc(): TSC went backward!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_tsc', this function's name, in a string
#77: FILE: arch/i386/kernel/tsc.c:350:
+		printk("BUG in read_tsc(): TSC went backward!\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#79: FILE: arch/i386/kernel/tsc.c:352:
+			printk("... Unsynced TSCs?\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#80: FILE: arch/i386/kernel/tsc.c:353:
+		printk("... [ from %016Lx to %016Lx ]\n", last_tsc, ret);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#80: FILE: arch/i386/kernel/tsc.c:353:
+		printk("... [ from %016Lx to %016Lx ]\n", last_tsc, ret);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#105: FILE: arch/i386/kernel/tsc.c:378:
+		printk("BUG in read_tsc_c3(): TSC went backward!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_tsc_c3', this function's name, in a string
#105: FILE: arch/i386/kernel/tsc.c:378:
+		printk("BUG in read_tsc_c3(): TSC went backward!\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#107: FILE: arch/i386/kernel/tsc.c:380:
+			printk("... Unsynced TSCs?\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#108: FILE: arch/i386/kernel/tsc.c:381:
+		printk("... [ from %016Lx to %016Lx ]\n", last_tsc, ret);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#108: FILE: arch/i386/kernel/tsc.c:381:
+		printk("... [ from %016Lx to %016Lx ]\n", last_tsc, ret);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#153: FILE: arch/x86_64/kernel/time.c:1074:
+		printk("read_tsc: ACK! TSC went backward! Unsynced TSCs?\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#172: FILE: arch/x86_64/kernel/time.c:1092:
+		printk("read_tsc_c3: ACK! TSC went backward! Unsynced TSCs?\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_tsc_c3', this function's name, in a string
#172: FILE: arch/x86_64/kernel/time.c:1092:
+		printk("read_tsc_c3: ACK! TSC went backward! Unsynced TSCs?\n");

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#192: FILE: arch/x86_64/kernel/time.c:1122:
+static cycle_t __vsyscall_fn vread_tsc(void* unused)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#212: FILE: include/asm-generic/bug.h:42:
+#define WARN_ON_ONCE(condition)		\
+do {					\
+	static int warn_once = 1;	\
+					\
+	if (condition) {		\
+		warn_once = 0;		\
+		WARN_ON(1);		\
+	}				\
+} while (0);

do {} while(0) macros should not have a trailing semicolon.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#231: FILE: kernel/time/timeofday.c:124:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#260: FILE: kernel/time/timeofday.c:153:
+			printk("check_monotonic_clock: monotonic inconsistency"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_monotonic_clock', this function's name, in a string
#260: FILE: kernel/time/timeofday.c:153:
+			printk("check_monotonic_clock: monotonic inconsistency"

WARNING:SPLIT_STRING: quoted string split across lines
#261: FILE: kernel/time/timeofday.c:154:
+			printk("check_monotonic_clock: monotonic inconsistency"
+					" detected!\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#262: FILE: kernel/time/timeofday.c:155:
+			printk("	from %16Lx (%llu) to %16Lx (%llu).\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#262: FILE: kernel/time/timeofday.c:155:
+			printk("	from %16Lx (%llu) to %16Lx (%llu).\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: kernel/time/timeofday.c:156:
+			printk("	from %16Lx (%llu) to %16Lx (%llu).\n",
+					ktime_to_ns(prev),

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#279: FILE: kernel/time/timeofday.c:172:
+/* Call holding atleast a readlock on system_time_lock */
                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '&' (ctx:VxW)
#298: FILE: kernel/time/timeofday.c:191:
+		delta = (now - last)& clock->mask;
 		                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#302: FILE: kernel/time/timeofday.c:195:
+		if (ns_offset > (nsec_t)2*PERIODIC_INTERVAL_MS *1000000) {
 		                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#302: FILE: kernel/time/timeofday.c:195:
+		if (ns_offset > (nsec_t)2*PERIODIC_INTERVAL_MS *1000000) {
 		                                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#304: FILE: kernel/time/timeofday.c:197:
+			static int warn_count = 10;
+			if (warn_count > 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#306: FILE: kernel/time/timeofday.c:199:
+				printk("check_periodic_interval: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_periodic_interval', this function's name, in a string
#306: FILE: kernel/time/timeofday.c:199:
+				printk("check_periodic_interval: "

WARNING:SPLIT_STRING: quoted string split across lines
#307: FILE: kernel/time/timeofday.c:200:
+				printk("check_periodic_interval: "
+					"Long interval! %llu.\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#309: FILE: kernel/time/timeofday.c:202:
+				printk("		Something may "

WARNING:SPLIT_STRING: quoted string split across lines
#310: FILE: kernel/time/timeofday.c:203:
+				printk("		Something may "
+					"be blocking interrupts.\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#313: FILE: kernel/time/timeofday.c:206:
+		if (ns_offset < (nsec_t)PERIODIC_INTERVAL_MS *1000000) {
 		                                             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#315: FILE: kernel/time/timeofday.c:208:
+			static int warn_count = 10;
+			if (warn_count > 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#317: FILE: kernel/time/timeofday.c:210:
+				printk("check_periodic_interval: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_periodic_interval', this function's name, in a string
#317: FILE: kernel/time/timeofday.c:210:
+				printk("check_periodic_interval: "

WARNING:SPLIT_STRING: quoted string split across lines
#318: FILE: kernel/time/timeofday.c:211:
+				printk("check_periodic_interval: "
+					"short interval! %llu.\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#320: FILE: kernel/time/timeofday.c:213:
+				printk("		bad calibration "

WARNING:SPLIT_STRING: quoted string split across lines
#321: FILE: kernel/time/timeofday.c:214:
+				printk("		bad calibration "
+					"or timers may be broken.\n");

CHECK:SPACING: No space is necessary after a cast
#330: FILE: kernel/time/timeofday.c:223:
+# define get_check_value(void)		ktime_set(0,0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#330: FILE: kernel/time/timeofday.c:223:
+# define get_check_value(void)		ktime_set(0,0)
                               		           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#331: FILE: kernel/time/timeofday.c:224:
+# define check_monotonic_clock(x,y)	do { } while (0)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#332: FILE: kernel/time/timeofday.c:225:
+# define check_monotonic_clock_ts(x,ts)	do { } while (0)
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#351: FILE: kernel/time/timeofday.c:302:
+	check_monotonic_clock(check,ret);
 	                           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#380: FILE: kernel/time/timeofday.c:482:
+	printk("do_settimeofday() was called!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_settimeofday', this function's name, in a string
#380: FILE: kernel/time/timeofday.c:482:
+	printk("do_settimeofday() was called!\n");

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#418: FILE: lib/Kconfig.debug:49:
+config PARANOID_GENERIC_TIME
+	default y
+	depends on GENERIC_TIME
+	bool "Paraniod Timekeeping Checks"
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000128394.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 35 warnings, 7 checks, 342 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000128394.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
