WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#31: 
The motivation for this is that the quirks framework doesnt scale
                                                     ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'arent' may be misspelled - perhaps 'aren't'?
#39: 
just the vendor and product id arent enough to decide if we patch it
                               ^^^^^

WARNING:TYPO_SPELLING: 'sugestion' may be misspelled - perhaps 'suggestion'?
#44: 
Thanks to Vojtech Pavlik for the sugestion.
                                 ^^^^^^^^^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#71: FILE: drivers/usb/input/hid-core.c:1612:
struct usb_device *dev)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#72: FILE: drivers/usb/input/hid-core.c:1613:
+static void hid_fixup_cymotion_descriptor(char *rdesc, int rsize,
+{

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#75: FILE: drivers/usb/input/hid-core.c:1616:
+		rdesc[11] = rdesc[16] = 0xff;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#76: FILE: drivers/usb/input/hid-core.c:1617:
+		rdesc[12] = rdesc[17] = 0x03;

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#81: FILE: drivers/usb/input/hid-core.c:1622:
+	__u16 idVendor;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#82: FILE: drivers/usb/input/hid-core.c:1623:
+	__u16 idProduct;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#85: FILE: drivers/usb/input/hid-core.c:1626:
+} hid_desc_fixup_list[] = {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#125: FILE: drivers/usb/input/hid-core.c:1723:
+		if ((hid_desc_fixup_list[n].idVendor ==
[...]
+				hid_desc_fixup_list[n].fixup(rdesc, rsize, dev);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hid_desc_fixup_list[n].idVendor ==
 e16_to_cpu(dev->descriptor.idVendor)'
#125: FILE: drivers/usb/input/hid-core.c:1723:
+		if ((hid_desc_fixup_list[n].idVendor ==
le16_to_cpu(dev->descriptor.idVendor)) &&
+			(hid_desc_fixup_list[n].idProduct ==
le16_to_cpu(dev->descriptor.idProduct)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hid_desc_fixup_list[n].idProduct ==
 e16_to_cpu(dev->descriptor.idProduct)'
#125: FILE: drivers/usb/input/hid-core.c:1723:
+		if ((hid_desc_fixup_list[n].idVendor ==
le16_to_cpu(dev->descriptor.idVendor)) &&
+			(hid_desc_fixup_list[n].idProduct ==
le16_to_cpu(dev->descriptor.idProduct)))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000077753.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 4 warnings, 8 checks, 81 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000077753.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
