ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#50: FILE: Documentation/kernel-parameters.txt:351:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#67: FILE: arch/i386/kernel/io_apic.c:208:
 }
+#if defined(CONFIG_SMP)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#68: FILE: arch/i386/kernel/io_apic.c:209:
+# include <asm/processor.h>	/* kernel_thread() */

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#72: FILE: arch/i386/kernel/io_apic.c:213:
+=20
 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#74: FILE: arch/i386/kernel/io_apic.c:215:
+#  define TDprintk(x...) do { printk("<%ld:%s:%d>: ", jiffies,

CHECK:CAMELCASE: Avoid CamelCase: <TDprintk>
#74: FILE: arch/i386/kernel/io_apic.c:215:
+#  define TDprintk(x...) do { printk("<%ld:%s:%d>: ", jiffies,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Dprintk>
#76: FILE: arch/i386/kernel/io_apic.c:216:
+#  define Dprintk(x...) do { TDprintk(x); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#76: FILE: arch/i386/kernel/io_apic.c:216:
+#  define Dprintk(x...) do { TDprintk(x); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#78: FILE: arch/i386/kernel/io_apic.c:218:
+#  define TDprintk(x...)=20
                         ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#78: FILE: arch/i386/kernel/io_apic.c:218:
+#  define TDprintk(x...)=20

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#79: FILE: arch/i386/kernel/io_apic.c:219:
+#  define Dprintk(x...)=20
                        ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#79: FILE: arch/i386/kernel/io_apic.c:219:
+#  define Dprintk(x...)=20

ERROR:SPACING: space required after that ',' (ctx:VxV)
#89: FILE: arch/i386/kernel/io_apic.c:221:
+# define MIN(a,b) (((a) < (b)) ? (a) : (b))
               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#89: FILE: arch/i386/kernel/io_apic.c:221:
+# define MIN(a,b) (((a) < (b)) ? (a) : (b))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#89: FILE: arch/i386/kernel/io_apic.c:221:
+# define MIN(a,b) (((a) < (b)) ? (a) : (b))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#90: FILE: arch/i386/kernel/io_apic.c:222:
+# define MAX(a,b) (((a) > (b)) ? (a) : (b))
               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#90: FILE: arch/i386/kernel/io_apic.c:222:
+# define MAX(a,b) (((a) > (b)) ? (a) : (b))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#90: FILE: arch/i386/kernel/io_apic.c:222:
+# define MAX(a,b) (((a) > (b)) ? (a) : (b))

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#95: FILE: arch/i386/kernel/io_apic.c:224:
+unsigned long __cacheline_aligned irq_balance_mask [NR_IRQS];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#96: FILE: arch/i386/kernel/io_apic.c:225:
+static int irqbalance_disabled __initdata =3D 0;
                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#97: FILE: arch/i386/kernel/io_apic.c:226:
+static int physical_balance =3D 0;
                             ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#100: FILE: arch/i386/kernel/io_apic.c:229:
+	unsigned long * last_irq;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#101: FILE: arch/i386/kernel/io_apic.c:230:
+	unsigned long * irq_delta;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#103: FILE: arch/i386/kernel/io_apic.c:232:
+} irq_cpu_data[NR_CPUS];

ERROR:SPACING: space required after that ',' (ctx:VxV)
#106: FILE: arch/i386/kernel/io_apic.c:235:
+#define LAST_CPU_IRQ(cpu,irq)   (irq_cpu_data[cpu].last_irq[irq])
                         ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#107: FILE: arch/i386/kernel/io_apic.c:236:
+#define IRQ_DELTA(cpu,irq) ^I(irq_cpu_data[cpu].irq_delta[irq])$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#107: FILE: arch/i386/kernel/io_apic.c:236:
+#define IRQ_DELTA(cpu,irq) 	(irq_cpu_data[cpu].irq_delta[irq])
                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#117: FILE: arch/i386/kernel/io_apic.c:246:
+#define CPU_TO_PACKAGEINDEX(i) \
+		((physical_balance && i > cpu_sibling_map[i]) ?

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#117: FILE: arch/i386/kernel/io_apic.c:246:
+#define CPU_TO_PACKAGEINDEX(i) \
+		((physical_balance && i > cpu_sibling_map[i]) ?

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'i' may be better as '(i)' to avoid precedence issues
#117: FILE: arch/i386/kernel/io_apic.c:246:
+#define CPU_TO_PACKAGEINDEX(i) \
+		((physical_balance && i > cpu_sibling_map[i]) ?

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#121: FILE: arch/i386/kernel/io_apic.c:249:
+#define MAX_BALANCED_IRQ_INTERVAL	(5*HZ)
                                  	  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#122: FILE: arch/i386/kernel/io_apic.c:250:
+#define MIN_BALANCED_IRQ_INTERVAL	(HZ/2)
                                  	   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#123: FILE: arch/i386/kernel/io_apic.c:251:
+#define BALANCED_IRQ_MORE_DELTA		(HZ/10)
                                		   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#126: FILE: arch/i386/kernel/io_apic.c:254:
+unsigned long balanced_irq_interval =3D MAX_BALANCED_IRQ_INTERVAL;
                                     ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#127: FILE: arch/i386/kernel/io_apic.c:255:
+unsigned long balanced_irq_interval =3D MAX_BALANCED_IRQ_INTERVAL;
+					=20

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#127: FILE: arch/i386/kernel/io_apic.c:255:
+					=20
 					^

WARNING:LINE_SPACING: Missing a blank line after declarations
#134: FILE: arch/i386/kernel/io_apic.c:261:
+	int i, j;
+	Dprintk("Rotating IRQs among CPUs.\n");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#135: FILE: arch/i386/kernel/io_apic.c:262:
+	for (i =3D 0; i < NR_CPUS; i++) {
 	       ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#135: FILE: arch/i386/kernel/io_apic.c:262:
+	for (i =3D 0; i < NR_CPUS; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#136: FILE: arch/i386/kernel/io_apic.c:263:
+		for (j =3D 0; cpu_online(i) && (j < NR_IRQS); j++) {
 		       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#140: FILE: arch/i386/kernel/io_apic.c:267:
+			if (IRQ_DELTA(CPU_TO_PACKAGEINDEX(i),j) <
 			                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#146: FILE: arch/i386/kernel/io_apic.c:272:
+	balanced_irq_interval =3D MAX(MIN_BALANCED_IRQ_INTERVAL,
 	                      ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#147: FILE: arch/i386/kernel/io_apic.c:273:
+		balanced_irq_interval - BALANCED_IRQ_LESS_DELTA);=09
 		                                                ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#147: FILE: arch/i386/kernel/io_apic.c:273:
+		balanced_irq_interval - BALANCED_IRQ_LESS_DELTA);=09
 		                                                 ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#149: FILE: arch/i386/kernel/io_apic.c:275:
+	return;
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#154: FILE: arch/i386/kernel/io_apic.c:280:
+	unsigned long max_cpu_irq =3D 0, min_cpu_irq =3D (~0);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#154: FILE: arch/i386/kernel/io_apic.c:280:
+	unsigned long max_cpu_irq =3D 0, min_cpu_irq =3D (~0);
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#154: FILE: arch/i386/kernel/io_apic.c:280:
+	unsigned long max_cpu_irq =3D 0, min_cpu_irq =3D (~0);
 	                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#155: FILE: arch/i386/kernel/io_apic.c:281:
+	unsigned long move_this_load =3D 0;
 	                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#156: FILE: arch/i386/kernel/io_apic.c:282:
+	int max_loaded =3D 0, min_loaded =3D 0;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#156: FILE: arch/i386/kernel/io_apic.c:282:
+	int max_loaded =3D 0, min_loaded =3D 0;
 	                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#157: FILE: arch/i386/kernel/io_apic.c:283:
+	unsigned long useful_load_threshold =3D balanced_irq_interval +
 	                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#160: FILE: arch/i386/kernel/io_apic.c:285:
+	int tmp_loaded, first_attempt =3D 1;
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#162: FILE: arch/i386/kernel/io_apic.c:287:
+	unsigned long imbalance =3D 0;
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#166: FILE: arch/i386/kernel/io_apic.c:291:
+	for (i =3D 0; i < NR_CPUS; i++) {
 	       ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#166: FILE: arch/i386/kernel/io_apic.c:291:
+	for (i =3D 0; i < NR_CPUS; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#168: FILE: arch/i386/kernel/io_apic.c:293:
+		int package_index;
+		CPU_IRQ(i) =3D 0;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#168: FILE: arch/i386/kernel/io_apic.c:293:
+		CPU_IRQ(i) =3D 0;
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#171: FILE: arch/i386/kernel/io_apic.c:296:
+		package_index =3D CPU_TO_PACKAGEINDEX(i);
 		              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#172: FILE: arch/i386/kernel/io_apic.c:297:
+		for (j =3D 0; j < NR_IRQS; j++) {
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#177: FILE: arch/i386/kernel/io_apic.c:302:
+			if (package_index =3D=3D i)
 			                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#177: FILE: arch/i386/kernel/io_apic.c:302:
+			if (package_index =3D=3D i)
 			                     ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#177: FILE: arch/i386/kernel/io_apic.c:302:
+			if (package_index =3D=3D i)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#178: FILE: arch/i386/kernel/io_apic.c:303:
+				IRQ_DELTA(package_index,j) =3D 0;
 				                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#178: FILE: arch/i386/kernel/io_apic.c:303:
+				IRQ_DELTA(package_index,j) =3D 0;
 				                           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#181: FILE: arch/i386/kernel/io_apic.c:305:
+			/* Determine the total count per processor per
+			value_now =3D (unsigned long)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#186: FILE: arch/i386/kernel/io_apic.c:308:
+			/* Determine the activity per processor per IRQ
+			delta =3D value_now - LAST_CPU_IRQ(i,j);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#189: FILE: arch/i386/kernel/io_apic.c:311:
+			LAST_CPU_IRQ(i,j) =3D value_now;
 			              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#189: FILE: arch/i386/kernel/io_apic.c:311:
+			LAST_CPU_IRQ(i,j) =3D value_now;
 			                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#193: FILE: arch/i386/kernel/io_apic.c:314:
+			/* Ignore IRQs whose rate is less than the clock
+			if (delta < useful_load_threshold)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#197: FILE: arch/i386/kernel/io_apic.c:317:
+			/* update the load for the processor or package
+			IRQ_DELTA(package_index,j) +=3D delta;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#201: FILE: arch/i386/kernel/io_apic.c:320:
+			/* Keep track of the higher numbered sibling as
+			if (i !=3D package_index)

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#210: FILE: arch/i386/kernel/io_apic.c:328:
+			CPU_IRQ(package_index) +=3D delta;
 			                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#214: FILE: arch/i386/kernel/io_apic.c:332:
+	for (i =3D 0; i < NR_CPUS; i++) {
 	       ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#214: FILE: arch/i386/kernel/io_apic.c:332:
+	for (i =3D 0; i < NR_CPUS; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#220: FILE: arch/i386/kernel/io_apic.c:338:
+			min_cpu_irq =3D CPU_IRQ(i);
 			            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#221: FILE: arch/i386/kernel/io_apic.c:339:
+			min_loaded =3D i;
 			           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#224: FILE: arch/i386/kernel/io_apic.c:342:
+	max_cpu_irq =3D ULONG_MAX;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#231: FILE: arch/i386/kernel/io_apic.c:349:
+	tmp_cpu_irq =3D 0;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#232: FILE: arch/i386/kernel/io_apic.c:350:
+	tmp_loaded =3D -1;
 	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#232: FILE: arch/i386/kernel/io_apic.c:350:
+	tmp_loaded =3D -1;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#233: FILE: arch/i386/kernel/io_apic.c:351:
+	for (i =3D 0; i < NR_CPUS; i++) {
 	       ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#233: FILE: arch/i386/kernel/io_apic.c:351:
+	for (i =3D 0; i < NR_CPUS; i++) {

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#238: FILE: arch/i386/kernel/io_apic.c:356:
+		if (max_cpu_irq <=3D CPU_IRQ(i))=20
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#238: FILE: arch/i386/kernel/io_apic.c:356:
+		if (max_cpu_irq <=3D CPU_IRQ(i))=20
 		                                ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#238: FILE: arch/i386/kernel/io_apic.c:356:
+		if (max_cpu_irq <=3D CPU_IRQ(i))=20

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#241: FILE: arch/i386/kernel/io_apic.c:359:
+			tmp_cpu_irq =3D CPU_IRQ(i);
 			            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#242: FILE: arch/i386/kernel/io_apic.c:360:
+			tmp_loaded =3D i;
 			           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#246: FILE: arch/i386/kernel/io_apic.c:364:
+	if (tmp_loaded =3D=3D -1) {
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#246: FILE: arch/i386/kernel/io_apic.c:364:
+	if (tmp_loaded =3D=3D -1) {
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#246: FILE: arch/i386/kernel/io_apic.c:364:
+	if (tmp_loaded =3D=3D -1) {
 	                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#246: FILE: arch/i386/kernel/io_apic.c:364:
+	if (tmp_loaded =3D=3D -1) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: arch/i386/kernel/io_apic.c:365:
+ ^I /* In the case of small number of heavy interrupt sources,=20$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#247: FILE: arch/i386/kernel/io_apic.c:365:
+ ^I /* In the case of small number of heavy interrupt sources,=20$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: arch/i386/kernel/io_apic.c:365:
+ ^I /* In the case of small number of heavy interrupt sources,=20$

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#251: FILE: arch/i386/kernel/io_apic.c:369:
+		if (!first_attempt && imbalance >=3D
 		                                ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#258: FILE: arch/i386/kernel/io_apic.c:375:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#259: FILE: arch/i386/kernel/io_apic.c:376:
+	first_attempt =3D 0;		/* heaviest search */
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#260: FILE: arch/i386/kernel/io_apic.c:377:
+	max_cpu_irq =3D tmp_cpu_irq;	/* load */
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#261: FILE: arch/i386/kernel/io_apic.c:378:
+	max_loaded =3D tmp_loaded;	/* processor */
 	           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#262: FILE: arch/i386/kernel/io_apic.c:379:
+	imbalance =3D (max_cpu_irq - min_cpu_irq) / 2;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#262: FILE: arch/i386/kernel/io_apic.c:379:
+	imbalance =3D (max_cpu_irq - min_cpu_irq) / 2;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#263: FILE: arch/i386/kernel/io_apic.c:380:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#282: FILE: arch/i386/kernel/io_apic.c:399:
+	move_this_load =3D 0;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#283: FILE: arch/i386/kernel/io_apic.c:400:
+	selected_irq =3D -1;
 	             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#283: FILE: arch/i386/kernel/io_apic.c:400:
+	selected_irq =3D -1;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#284: FILE: arch/i386/kernel/io_apic.c:401:
+	for (j =3D 0; j < NR_IRQS; j++) {
 	       ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#288: FILE: arch/i386/kernel/io_apic.c:405:
+		if (imbalance <=3D IRQ_DELTA(max_loaded,j))
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#288: FILE: arch/i386/kernel/io_apic.c:405:
+		if (imbalance <=3D IRQ_DELTA(max_loaded,j))
 		                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#293: FILE: arch/i386/kernel/io_apic.c:410:
+		if (move_this_load < IRQ_DELTA(max_loaded,j)) {
 		                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#294: FILE: arch/i386/kernel/io_apic.c:411:
+			move_this_load =3D IRQ_DELTA(max_loaded,j);
 			               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#294: FILE: arch/i386/kernel/io_apic.c:411:
+			move_this_load =3D IRQ_DELTA(max_loaded,j);
 			                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#295: FILE: arch/i386/kernel/io_apic.c:412:
+			selected_irq =3D j;
 			             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#298: FILE: arch/i386/kernel/io_apic.c:415:
+	if (selected_irq =3D=3D -1) {
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#298: FILE: arch/i386/kernel/io_apic.c:415:
+	if (selected_irq =3D=3D -1) {
 	                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#298: FILE: arch/i386/kernel/io_apic.c:415:
+	if (selected_irq =3D=3D -1) {
 	                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#298: FILE: arch/i386/kernel/io_apic.c:415:
+	if (selected_irq =3D=3D -1) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#298: FILE: arch/i386/kernel/io_apic.c:415:
+	if (selected_irq =3D=3D -1) {
+		goto tryanothercpu;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#303: FILE: arch/i386/kernel/io_apic.c:418:
+	imbalance =3D move_this_load;
 	          ^

WARNING:TYPO_SPELLING: 'accumlated' may be misspelled - perhaps 'accumulated'?
#305: FILE: arch/i386/kernel/io_apic.c:420:
+	/* For physical_balance case, we accumlated both load
 	                                 ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#320: FILE: arch/i386/kernel/io_apic.c:434:
+		min_loaded =3D cpu_sibling_map[min_loaded];
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#322: FILE: arch/i386/kernel/io_apic.c:436:
+	allowed_mask =3D cpu_online_map & irq_affinity[selected_irq];
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#323: FILE: arch/i386/kernel/io_apic.c:437:
+	target_cpu_mask =3D 1 << min_loaded;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#326: FILE: arch/i386/kernel/io_apic.c:440:
+		irq_desc_t *desc =3D irq_desc + selected_irq;
 		                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#327: FILE: arch/i386/kernel/io_apic.c:441:
+		irq_desc_t *desc =3D irq_desc + selected_irq;
+		Dprintk("irq =3D %d moved to cpu =3D %d\n", selected_irq,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: arch/i386/kernel/io_apic.c:442:
+		Dprintk("irq =3D %d moved to cpu =3D %d\n", selected_irq,
+		/* mark for change destination */

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#331: FILE: arch/i386/kernel/io_apic.c:444:
+		irq_balance_mask[selected_irq] =3D target_cpu_mask;
 		                               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#336: FILE: arch/i386/kernel/io_apic.c:449:
+		balanced_irq_interval =3D MAX(MIN_BALANCED_IRQ_INTERVAL,
 		                      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#346: FILE: arch/i386/kernel/io_apic.c:457:
+	/* if we did not find an IRQ to move, then adjust the time
+	balanced_irq_interval =3D MIN(MAX_BALANCED_IRQ_INTERVAL,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#361: FILE: arch/i386/kernel/io_apic.c:490:
 }
+static inline void balance_irq (int cpu, int irq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#361: FILE: arch/i386/kernel/io_apic.c:490:
+static inline void balance_irq (int cpu, int irq)

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#368: FILE: arch/i386/kernel/io_apic.c:495:
+	unsigned int new_cpu;
+	=09

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#368: FILE: arch/i386/kernel/io_apic.c:495:
+	=09
 	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#388: FILE: arch/i386/kernel/io_apic.c:498:
+	allowed_mask =3D cpu_online_map & irq_affinity[irq];
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#389: FILE: arch/i386/kernel/io_apic.c:499:
+	new_cpu =3D move(cpu, allowed_mask, now, 1);
 	        ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#390: FILE: arch/i386/kernel/io_apic.c:500:
+	if (cpu !=3D new_cpu) {
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#391: FILE: arch/i386/kernel/io_apic.c:501:
+		irq_desc_t *desc =3D irq_desc + irq;
 		                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#392: FILE: arch/i386/kernel/io_apic.c:502:
+		irq_desc_t *desc =3D irq_desc + irq;
+		spin_lock(&desc->lock);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#393: FILE: arch/i386/kernel/io_apic.c:503:
+		irq_balance_mask[irq] =3D 1 << new_cpu;
 		                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#401: FILE: arch/i386/kernel/io_apic.c:511:
+	unsigned long prev_balance_time =3D jiffies;
 	                                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#402: FILE: arch/i386/kernel/io_apic.c:512:
+	long time_remaining =3D balanced_irq_interval;
 	                    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#403: FILE: arch/i386/kernel/io_apic.c:513:
+	long time_remaining =3D balanced_irq_interval;
+	daemonize();

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#406: FILE: arch/i386/kernel/io_apic.c:516:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#408: FILE: arch/i386/kernel/io_apic.c:518:
+	for (i =3D 0 ; i < NR_IRQS ; i++)
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#409: FILE: arch/i386/kernel/io_apic.c:519:
+		irq_balance_mask[i] =3D 1 << 0;
 		                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#412: FILE: arch/i386/kernel/io_apic.c:522:
+		time_remaining =3D schedule_timeout(time_remaining);
 		               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: arch/i386/kernel/io_apic.c:524:
+		if (time_after(jiffies,
+			Dprintk("balanced_irq: calling do_irq_balance()

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#416: FILE: arch/i386/kernel/io_apic.c:524:
+		if (time_after(jiffies,
%lu\n", jiffies);

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: arch/i386/kernel/io_apic.c:529:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: arch/i386/kernel/io_apic.c:529:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: arch/i386/kernel/io_apic.c:536:
+        c =3D &boot_cpu_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: arch/i386/kernel/io_apic.c:536:
+        c =3D &boot_cpu_data;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#432: FILE: arch/i386/kernel/io_apic.c:540:
+	 * one physical processor package is present */

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#445: FILE: arch/i386/kernel/io_apic.c:550:
+			printk(KERN_ERR "balanced_irq_init: out of
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#449: FILE: arch/i386/kernel/io_apic.c:553:
+		memset(irq_cpu_data[i].irq_delta,0,sizeof(unsigned long)
 		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#449: FILE: arch/i386/kernel/io_apic.c:553:
+		memset(irq_cpu_data[i].irq_delta,0,sizeof(unsigned long)
 		                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#451: FILE: arch/i386/kernel/io_apic.c:554:
+		memset(irq_cpu_data[i].last_irq,0,sizeof(unsigned long)
 		                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#451: FILE: arch/i386/kernel/io_apic.c:554:
+		memset(irq_cpu_data[i].last_irq,0,sizeof(unsigned long)
 		                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#454: FILE: arch/i386/kernel/io_apic.c:556:
+=09
 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#455: FILE: arch/i386/kernel/io_apic.c:557:
+	printk(KERN_INFO "Starting balanced_irq\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'balanced_irq', this function's name, in a string
#455: FILE: arch/i386/kernel/io_apic.c:557:
+	printk(KERN_INFO "Starting balanced_irq\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#456: FILE: arch/i386/kernel/io_apic.c:558:
+	if (kernel_thread(balanced_irq, NULL, CLONE_KERNEL) >=3D 0)=20
 	                                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#456: FILE: arch/i386/kernel/io_apic.c:558:
+	if (kernel_thread(balanced_irq, NULL, CLONE_KERNEL) >=3D 0)=20
 	                                                           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#456: FILE: arch/i386/kernel/io_apic.c:558:
+	if (kernel_thread(balanced_irq, NULL, CLONE_KERNEL) >=3D 0)=20

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#458: FILE: arch/i386/kernel/io_apic.c:560:
+	else=20
 	    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#458: FILE: arch/i386/kernel/io_apic.c:560:
+	else=20

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#459: FILE: arch/i386/kernel/io_apic.c:561:
+		printk(KERN_ERR "balanced_irq_init: failed to spawn

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#480: FILE: arch/i386/kernel/io_apic.c:578:
+__setup("noirqbalance", irqbalance_disable);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000402067.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 111 errors, 33 warnings, 24 checks, 463 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000402067.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
