WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
return a value greater than 2^32 (where the filesystem is on a large partition).

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#29: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#30: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#31: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#32: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#33: 
#	           ChangeSet	1.514   -> 1.515  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
#	      fs/jfs/inode.c	1.12    -> 1.13   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
#	     fs/ext2/inode.c	1.41    -> 1.42   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
#	       fs/bfs/file.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
#	      fs/ufs/inode.c	1.13    -> 1.14   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
#	include/linux/blkdev.h	1.61    -> 1.62   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
#	fs/jfs/jfs_metapage.c	1.15    -> 1.16   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
#	  include/linux/fs.h	1.157   -> 1.158  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
#	       fs/fat/file.c	1.16    -> 1.17   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
#	     fs/sysv/itree.c	1.13    -> 1.14   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
#	fs/freevxfs/vxfs_subr.c	1.9     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
#	     fs/adfs/inode.c	1.14    -> 1.15   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#	     fs/qnx4/inode.c	1.21    -> 1.22   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
#	 fs/reiserfs/inode.c	1.63    -> 1.64   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#	fs/partitions/check.c	1.45    -> 1.46   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#	      fs/efs/inode.c	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#	      fs/hpfs/file.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#	      fs/fat/inode.c	1.42    -> 1.43   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#	    fs/minix/inode.c	1.26    -> 1.27   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#	         fs/buffer.c	1.138   -> 1.139  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#	include/linux/iso_fs.h	1.8     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#	     fs/ext3/inode.c	1.32    -> 1.33   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#	    fs/isofs/inode.c	1.24    -> 1.25   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#	          fs/inode.c	1.67    -> 1.68   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#	      fs/hfs/inode.c	1.8     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#	      fs/udf/inode.c	1.21    -> 1.22   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
# 02/08/23	peterc@numbat.chubb.wattle.id.au	1.515

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
# Change type of bmap() to allow more than 2^31 blocks in an address space, and to allow

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
# mode than 2^31 blocks on a file system.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
# Also fix read_dev_sector() to allow access outside the first 2^31 sectors.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#70: 
--- a/fs/adfs/inode.c	Fri Aug 23 15:27:33 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#140: FILE: fs/efs/inode.c:22:
 }
+static sector_t _efs_bmap(struct address_space *mapping, sector_t block)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#188: FILE: fs/fat/inode.c:990:
 }
+static sector_t _fat_bmap(struct address_space *mapping, sector_t block)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#223: FILE: fs/hfs/inode.c:245:
 }
+static sector_t hfs_bmap(struct address_space *mapping, sector_t block)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#235: FILE: fs/hpfs/file.c:114:
 }
+static sector_t _hpfs_bmap(struct address_space *mapping, sector_t block)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#247: FILE: fs/inode.c:920:
+sector_t bmap(struct inode * inode, sector_t block)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#310: FILE: fs/minix/inode.c:331:
 }
+static sector_t minix_bmap(struct address_space *mapping, sector_t block)

CHECK:CAMELCASE: Avoid CamelCase: <Sector>
#322: FILE: fs/partitions/check.c:452:
+unsigned char *read_dev_sector(struct block_device *bdev, sector_t n, Sector *p)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#329: FILE: fs/partitions/check.c:457:
+	page = read_cache_page(mapping, (pgoff_t)(n >> (PAGE_CACHE_SHIFT-9)),
 	                                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: fs/partitions/check.c:458:
+	page = read_cache_page(mapping, (pgoff_t)(n >> (PAGE_CACHE_SHIFT-9)),
 			(filler_t *)mapping->a_ops->readpage, NULL);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#338: FILE: fs/partitions/check.c:466:
+		return (unsigned char *)page_address(page) + ((n & (1 << (PAGE_CACHE_SHIFT - 9) - 1)) << 9);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#351: FILE: fs/qnx4/inode.c:447:
 }
+static sector_t qnx4_bmap(struct address_space *mapping, sector_t block)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#363: FILE: fs/reiserfs/inode.c:2048:
+static sector_t reiserfs_aop_bmap(struct address_space *as, sector_t block) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#375: FILE: fs/sysv/itree.c:462:
 }
+static sector_t sysv_bmap(struct address_space *mapping, sector_t block)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#399: FILE: fs/ufs/inode.c:460:
 }
+static sector_t ufs_bmap(struct address_space *mapping, sector_t block)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#420: FILE: include/linux/blkdev.h:400:
+unsigned char *read_dev_sector(struct block_device *, sector_t, Sector *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#420: FILE: include/linux/blkdev.h:400:
+unsigned char *read_dev_sector(struct block_device *, sector_t, Sector *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'Sector *' should also have an identifier name
#420: FILE: include/linux/blkdev.h:400:
+unsigned char *read_dev_sector(struct block_device *, sector_t, Sector *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#432: FILE: include/linux/fs.h:307:
+	sector_t (*bmap)(struct address_space *, sector_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#432: FILE: include/linux/fs.h:307:
+	sector_t (*bmap)(struct address_space *, sector_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#441: FILE: include/linux/fs.h:1141:
+extern sector_t bmap(struct inode *, sector_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#441: FILE: include/linux/fs.h:1141:
+extern sector_t bmap(struct inode *, sector_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#441: FILE: include/linux/fs.h:1141:
+extern sector_t bmap(struct inode *, sector_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#453: FILE: include/linux/iso_fs.h:233:
+extern struct buffer_head *isofs_bread(struct inode *, sector_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#453: FILE: include/linux/iso_fs.h:233:
+extern struct buffer_head *isofs_bread(struct inode *, sector_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#453: FILE: include/linux/iso_fs.h:233:
+extern struct buffer_head *isofs_bread(struct inode *, sector_t);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000437761.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 51 warnings, 13 checks, 280 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000437761.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
