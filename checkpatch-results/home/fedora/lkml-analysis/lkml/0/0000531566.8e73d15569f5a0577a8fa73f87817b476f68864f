WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
> -----------------------------------------------------------------------------

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#47: 
--- a/drivers/usb/bluetooth.c	Wed May 30 11:10:08 2001

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#85: FILE: drivers/usb/bluetooth.c:276:
+static int bluetooth_ctrl_msg (struct usb_bluetooth *bluetooth, int request, int value, const unsigned char *buf, int len)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#85: FILE: drivers/usb/bluetooth.c:276:
+static int bluetooth_ctrl_msg (struct usb_bluetooth *bluetooth, int request, int value, const unsigned char *buf, int len)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!urb->transfer_buffer"
#98: FILE: drivers/usb/bluetooth.c:299:
+	if (urb->transfer_buffer == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#99: FILE: drivers/usb/bluetooth.c:300:
+		urb->transfer_buffer = kmalloc (len, GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!urb->transfer_buffer"
#100: FILE: drivers/usb/bluetooth.c:301:
+		if (urb->transfer_buffer == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#101: FILE: drivers/usb/bluetooth.c:302:
+			err (__FUNCTION__" - out of memory");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#101: FILE: drivers/usb/bluetooth.c:302:
+			err (__FUNCTION__" - out of memory");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#101: FILE: drivers/usb/bluetooth.c:302:
+			err (__FUNCTION__" - out of memory");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#106: FILE: drivers/usb/bluetooth.c:307:
+		kfree (urb->transfer_buffer);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#107: FILE: drivers/usb/bluetooth.c:308:
+		urb->transfer_buffer = kmalloc (len, GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!urb->transfer_buffer"
#108: FILE: drivers/usb/bluetooth.c:309:
+		if (urb->transfer_buffer == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#109: FILE: drivers/usb/bluetooth.c:310:
+			err (__FUNCTION__" - out of memory");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#109: FILE: drivers/usb/bluetooth.c:310:
+			err (__FUNCTION__" - out of memory");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#109: FILE: drivers/usb/bluetooth.c:310:
+			err (__FUNCTION__" - out of memory");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#113: FILE: drivers/usb/bluetooth.c:314:
+	memcpy (urb->transfer_buffer, buf, len);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#122: FILE: drivers/usb/bluetooth.c:323:
+			  (unsigned char*)dr, urb->transfer_buffer, len, bluetooth_ctrl_callback, bluetooth);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#122: FILE: drivers/usb/bluetooth.c:323:
+			  (unsigned char*)dr, urb->transfer_buffer, len, bluetooth_ctrl_callback, bluetooth);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#156: FILE: drivers/usb/bluetooth.c:466:
+		temp_buffer = kmalloc (count, GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!temp_buffer"
#157: FILE: drivers/usb/bluetooth.c:467:
+		if (temp_buffer == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#158: FILE: drivers/usb/bluetooth.c:468:
+			err (__FUNCTION__ "- out of memory.");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#158: FILE: drivers/usb/bluetooth.c:468:
+			err (__FUNCTION__ "- out of memory.");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#162: FILE: drivers/usb/bluetooth.c:472:
+		copy_from_user (temp_buffer, buf, count);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#195: FILE: drivers/usb/bluetooth.c:489:
+			retval = bluetooth_ctrl_msg (bluetooth, 0x00, 0x00, &current_buffer[1], count-1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#195: FILE: drivers/usb/bluetooth.c:489:
+			retval = bluetooth_ctrl_msg (bluetooth, 0x00, 0x00, &current_buffer[1], count-1);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#195: FILE: drivers/usb/bluetooth.c:489:
+			retval = bluetooth_ctrl_msg (bluetooth, 0x00, 0x00, &current_buffer[1], count-1);
 			                                                                             ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#196: FILE: drivers/usb/bluetooth.c:490:
+			if (retval) {
+				goto exit;
 			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#238: FILE: drivers/usb/bluetooth.c:520:
+				memcpy (urb->transfer_buffer, current_position, buffer_size);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#243: FILE: drivers/usb/bluetooth.c:524:
+						urb->transfer_buffer, buffer_size, bluetooth_write_bulk_callback, bluetooth);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#252: FILE: drivers/usb/bluetooth.c:530:
+					dbg(__FUNCTION__ " - usb_submit_urb(write bulk) failed with error = %d", retval);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#252: FILE: drivers/usb/bluetooth.c:530:
+					dbg(__FUNCTION__ " - usb_submit_urb(write bulk) failed with error = %d", retval);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "temp_buffer"
#274: FILE: drivers/usb/bluetooth.c:555:
+	if (temp_buffer != NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#275: FILE: drivers/usb/bluetooth.c:556:
+		kfree (temp_buffer);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#286: FILE: drivers/usb/bluetooth.c:1142:
+		urb->transfer_buffer = kmalloc (bluetooth->bulk_out_buffer_size, GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!urb->transfer_buffer"
#287: FILE: drivers/usb/bluetooth.c:1143:
+		if (urb->transfer_buffer == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#301: FILE: drivers/usb/bluetooth.c:1190:
+				kfree (bluetooth->write_urb_pool[i]->transfer_buffer);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#301: FILE: drivers/usb/bluetooth.c:1190:
+			if (bluetooth->write_urb_pool[i]->transfer_buffer)
+				kfree (bluetooth->write_urb_pool[i]->transfer_buffer);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#308: FILE: drivers/usb/bluetooth.c:1196:
+				kfree (bluetooth->control_urb_pool[i]->transfer_buffer);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#308: FILE: drivers/usb/bluetooth.c:1196:
+			if (bluetooth->control_urb_pool[i]->transfer_buffer)
+				kfree (bluetooth->control_urb_pool[i]->transfer_buffer);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000531566.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 29 warnings, 9 checks, 254 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000531566.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
