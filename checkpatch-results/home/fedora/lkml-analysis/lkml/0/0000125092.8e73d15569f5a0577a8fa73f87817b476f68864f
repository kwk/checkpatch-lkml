CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#56: FILE: arch/x86_64/mm/fault.c:39:
+#define PF_PROT	(1<<0)		/* or no page found */
                	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#56: FILE: arch/x86_64/mm/fault.c:39:
+#define PF_PROT	(1<<0)		/* or no page found */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#57: FILE: arch/x86_64/mm/fault.c:40:
+#define PF_WRITE	(1<<1)
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#57: FILE: arch/x86_64/mm/fault.c:40:
+#define PF_WRITE	(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#58: FILE: arch/x86_64/mm/fault.c:41:
+#define PF_USER	(1<<2)
                	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#58: FILE: arch/x86_64/mm/fault.c:41:
+#define PF_USER	(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#59: FILE: arch/x86_64/mm/fault.c:42:
+#define PF_RSVD	(1<<3)
                	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#59: FILE: arch/x86_64/mm/fault.c:42:
+#define PF_RSVD	(1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#60: FILE: arch/x86_64/mm/fault.c:43:
+#define PF_INSTR	(1<<4)
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#60: FILE: arch/x86_64/mm/fault.c:43:
+#define PF_INSTR	(1<<4)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#93: FILE: arch/x86_64/mm/fault.c:353:
+		if (!(error_code & (PF_RSVD|PF_KERNEL|PF_PROT)) &&
 		                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#93: FILE: arch/x86_64/mm/fault.c:353:
+		if (!(error_code & (PF_RSVD|PF_KERNEL|PF_PROT)) &&
 		                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: arch/x86_64/mm/fault.c:354:
+		if (!(error_code & (PF_RSVD|PF_KERNEL|PF_PROT)) &&
 		      ((address >= VMALLOC_START && address < VMALLOC_END))) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#120: FILE: arch/x86_64/mm/fault.c:420:
+	switch (error_code & (PF_PROT|PF_READ) {
[...]
+		case PF_WRITE:		/* write, not present */
[...]
+		case PF_PROT:		/* read, present */
[...]
+		case 0:			/* read, not present */

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#120: FILE: arch/x86_64/mm/fault.c:420:
+	switch (error_code & (PF_PROT|PF_READ) {
 	                             ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000125092.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 0 warnings, 14 checks, 103 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000125092.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
