ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: Documentation/ABI/testing/sysfs-block-pktcdvd:31:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#297: FILE: Documentation/cdrom/packet-writing.txt:133:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: Documentation/cdrom/packet-writing.txt:146:
+#                                                                          $

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#311: FILE: Documentation/cdrom/packet-writing.txt:146:
#

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: Documentation/cdrom/packet-writing.txt:147:
+#   Linux pktcdvd Module Control Script                                    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: Documentation/cdrom/packet-writing.txt:148:
+#                                                                          $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: Documentation/cdrom/packet-writing.txt:149:
+#   Copyright (C) 2006 Thomas Maier <balagi@justmail.de>                   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: Documentation/cdrom/packet-writing.txt:150:
+#                                                                          $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#320: FILE: Documentation/cdrom/packet-writing.txt:151:
+#   May be copied or modified under the terms of the GNU General Public    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#322: FILE: Documentation/cdrom/packet-writing.txt:152:
+#   License.                                                               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: Documentation/cdrom/packet-writing.txt:153:
+#                                                                          $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: Documentation/cdrom/packet-writing.txt:154:
+#   This program is free software; you can redistribute it and/or modify   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: Documentation/cdrom/packet-writing.txt:155:
+#   it under the terms of the GNU General Public License as published by   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: Documentation/cdrom/packet-writing.txt:156:
+#   the Free Software Foundation;                                          $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#332: FILE: Documentation/cdrom/packet-writing.txt:157:
+#                                                                          $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: Documentation/cdrom/packet-writing.txt:158:
+#   This program is distributed in the hope that it will be useful,        $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: Documentation/cdrom/packet-writing.txt:159:
+#   but WITHOUT ANY WARRANTY; without even the implied warranty of         $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: Documentation/cdrom/packet-writing.txt:160:
+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: Documentation/cdrom/packet-writing.txt:161:
+#   GNU General Public License for more details.                           $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#420: FILE: Documentation/cdrom/packet-writing.txt:240:
+^Itypeset pktname="$(awk '$2=="'"$pktdevid"'" {print $1}'  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: Documentation/cdrom/packet-writing.txt:241:
+^I[ -z "$pktname" ] && exiterr "device $pktdev is not an active pktcdvd  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#450: FILE: Documentation/cdrom/packet-writing.txt:268:
+^Iblkdevid="$(dev_to_id "$blkdev")" || exiterr "not a block device:  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#456: FILE: Documentation/cdrom/packet-writing.txt:273:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#458: FILE: Documentation/cdrom/packet-writing.txt:275:
+^Iecho "$blkdevid" >"$PKTCDVD_DIR/add" || exiterr "unable to add new  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: Documentation/cdrom/packet-writing.txt:276:
+^Ipktdevid="$(awk '$3=="'"$blkdevid"'" {print $2}'  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#463: FILE: Documentation/cdrom/packet-writing.txt:278:
+^Ipktsysn="$(awk '$3=="'"$blkdevid"'" {print $1}'  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#465: FILE: Documentation/cdrom/packet-writing.txt:279:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: Documentation/cdrom/packet-writing.txt:285:
+^I^I|| exiterr "failed to make device node "$PKTDEV_DIR/$pktsysn" for  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#476: FILE: Documentation/cdrom/packet-writing.txt:289:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#479: FILE: Documentation/cdrom/packet-writing.txt:292:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: Documentation/cdrom/packet-writing.txt:298:
+^Ipktsysn="$(awk '$2=="'"$pktdevid"'" {print $1}'  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#487: FILE: Documentation/cdrom/packet-writing.txt:299:
+^I[ -z "$pktsysn" ] && exiterr "device $pktdev is not an active pktcdvd  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#494: FILE: Documentation/cdrom/packet-writing.txt:305:
+^I^I&& exiterr "unable to remove pktcdvd device $pktdev ($pktdevid) or  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#501: FILE: Documentation/cdrom/packet-writing.txt:311:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#509: FILE: Documentation/cdrom/packet-writing.txt:319:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#519: FILE: Documentation/cdrom/packet-writing.txt:329:
+^Iecho "off=$(cat "$sdir/write_congestion_off") on=$(cat  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#522: FILE: Documentation/cdrom/packet-writing.txt:331:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: Documentation/cdrom/packet-writing.txt:336:
+^Iecho "off=$(cat "$sdir/write_congestion_off") on=$(cat  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#530: FILE: Documentation/cdrom/packet-writing.txt:338:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#536: FILE: Documentation/cdrom/packet-writing.txt:344:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#545: FILE: Documentation/cdrom/packet-writing.txt:353:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#551: FILE: Documentation/cdrom/packet-writing.txt:359:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#601: FILE: drivers/block/Kconfig:446:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#616: FILE: drivers/block/Kconfig:473:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#618: FILE: drivers/block/Kconfig:475:
+^I$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#678: FILE: drivers/block/pktcdvd.c:91:
+static int pktdev_major = 0; /* default: dynamic major number */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#689: FILE: drivers/block/pktcdvd.c:100:
+static struct kobject	*kobj_blk_pktcdvd = NULL;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#691: FILE: drivers/block/pktcdvd.c:102:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#703: FILE: drivers/block/pktcdvd.c:114:
+static struct pktcdvd_device *pkt_find_dev(dev_t devid, int* pidx)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#706: FILE: drivers/block/pktcdvd.c:117:
+	int idx;
+	for (idx = 0; idx < MAX_WRITERS; idx++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#708: FILE: drivers/block/pktcdvd.c:119:
+		struct pktcdvd_device *pd = pkt_devs[idx];
+		if (pd && (pd->pkt_dev == devid)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pd->pkt_dev == devid'
#708: FILE: drivers/block/pktcdvd.c:119:
+		if (pd && (pd->pkt_dev == devid)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#719: FILE: drivers/block/pktcdvd.c:130:
+static struct pktcdvd_device *pkt_find_dev_bdev(dev_t bdevid, int* pidx)

WARNING:LINE_SPACING: Missing a blank line after declarations
#722: FILE: drivers/block/pktcdvd.c:133:
+	int idx;
+	for (idx = 0; idx < MAX_WRITERS; idx++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#724: FILE: drivers/block/pktcdvd.c:135:
+		struct pktcdvd_device *pd = pkt_devs[idx];
+		if (pd && pd->bdev && (pd->bdev->bd_dev == bdevid)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pd->bdev->bd_dev == bdevid'
#724: FILE: drivers/block/pktcdvd.c:135:
+		if (pd && pd->bdev && (pd->bdev->bd_dev == bdevid)) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#735: FILE: drivers/block/pktcdvd.c:146:
+static void init_congestion(int* lo, int* hi)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#735: FILE: drivers/block/pktcdvd.c:146:
+static void init_congestion(int* lo, int* hi)

CHECK:BRACES: braces {} should be used on all arms of this statement
#740: FILE: drivers/block/pktcdvd.c:151:
+		if (*lo <= 0)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#742: FILE: drivers/block/pktcdvd.c:153:
+		else {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#744: FILE: drivers/block/pktcdvd.c:155:
+			*lo = max(*lo, PKT_WRITE_CONGESTION_MIN/4);
 			                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#782: FILE: drivers/block/pktcdvd.c:193:
+#define PRINT	n += scnprintf

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#783: FILE: drivers/block/pktcdvd.c:194:
+#define BC	buf+n, blen-n
           	   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#783: FILE: drivers/block/pktcdvd.c:194:
+#define BC	buf+n, blen-n
           	           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#783: FILE: drivers/block/pktcdvd.c:194:
+#define BC	buf+n, blen-n

ERROR:CODE_INDENT: code indent should use tabs where possible
#785: FILE: drivers/block/pktcdvd.c:196:
+^I^I   ^I^Ibdevname(pd->bdev, bdev_buf));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#785: FILE: drivers/block/pktcdvd.c:196:
+^I^I   ^I^Ibdevname(pd->bdev, bdev_buf));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#785: FILE: drivers/block/pktcdvd.c:196:
+	PRINT(BC, "Writer %s mapped to %s:\n", pd->name,
+		   		bdevname(pd->bdev, bdev_buf));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#796: FILE: drivers/block/pktcdvd.c:207:
+^IPRINT(BC, "\tpacket type:\t\t%s\n", pd->settings.fp ? "Fixed" :  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#828: FILE: drivers/block/pktcdvd.c:238:
+^IPRINT(BC, "\tbios pending:\t\t%d\n",  $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#830: FILE: drivers/block/pktcdvd.c:239:
+	PRINT(BC, "\tbios pending:\t\t%d\n",  
+	PRINT(BC, "\tcurrent sector:\t\t0x%llx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#831: FILE: drivers/block/pktcdvd.c:240:
+	PRINT(BC, "\tcurrent sector:\t\t0x%llx\n",
+					(unsigned long long)pd->current_sector);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#836: FILE: drivers/block/pktcdvd.c:245:
+^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#838: FILE: drivers/block/pktcdvd.c:247:
+	PRINT(BC, "\twrite congestion marks:\toff=%d on=%d\n",
+			pd->write_congestion_off,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#842: FILE: drivers/block/pktcdvd.c:251:
+	buf[blen-1] = 0;
 	        ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#846: FILE: drivers/block/pktcdvd.c:255:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#857: FILE: drivers/block/pktcdvd.c:266:
+#define DEF_ATTR(_obj,_name,_mode) \
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#857: FILE: drivers/block/pktcdvd.c:266:
+#define DEF_ATTR(_obj,_name,_mode) \
                            ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#862: FILE: drivers/block/pktcdvd.c:271:
+static int pkt_setup_dev(dev_t dev, dev_t* pkt_dev);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#866: FILE: drivers/block/pktcdvd.c:275:
+/**********************************************************
+  /sys/block/pktcdvd/pktcdvd?/packet/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#867: FILE: drivers/block/pktcdvd.c:276:
+                     mapped_to (symlink)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#868: FILE: drivers/block/pktcdvd.c:277:
+                     statistic$

ERROR:CODE_INDENT: code indent should use tabs where possible
#869: FILE: drivers/block/pktcdvd.c:278:
+                     reset_statistic$

ERROR:CODE_INDENT: code indent should use tabs where possible
#870: FILE: drivers/block/pktcdvd.c:279:
+                     write_congestion_off$

ERROR:CODE_INDENT: code indent should use tabs where possible
#871: FILE: drivers/block/pktcdvd.c:280:
+                     write_congestion_on$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#884: FILE: drivers/block/pktcdvd.c:293:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#886: FILE: drivers/block/pktcdvd.c:295:
+static ssize_t kobj_pkt_show(struct kobject *kobj,
+			struct attribute *attr, char *data)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#894: FILE: drivers/block/pktcdvd.c:303:
+^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#900: FILE: drivers/block/pktcdvd.c:309:
+		n = sprintf(data, "%lu %lu %lu %lu %lu\n",
+			pd->stats.pkt_started,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#907: FILE: drivers/block/pktcdvd.c:316:
+		n = pkt_print_info(pd, data, PAGE_SIZE-32);
 		                                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#914: FILE: drivers/block/pktcdvd.c:323:
+^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#931: FILE: drivers/block/pktcdvd.c:340:
+static ssize_t kobj_pkt_store(struct kobject *kobj,
+			struct attribute *attr,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#943: FILE: drivers/block/pktcdvd.c:352:
+^I^Idlen = sizeof(dbuf)-1;^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#943: FILE: drivers/block/pktcdvd.c:352:
+		dlen = sizeof(dbuf)-1;	
 		                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#946: FILE: drivers/block/pktcdvd.c:355:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#955: FILE: drivers/block/pktcdvd.c:364:
+^I^I$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#957: FILE: drivers/block/pktcdvd.c:366:
+	} else if (strcmp(attr->name, "write_congestion_off") == 0
+		   && sscanf(dbuf, "%d", &val) == 1) {

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#957: FILE: drivers/block/pktcdvd.c:366:
+		   && sscanf(dbuf, "%d", &val) == 1) {
+		spin_lock(&pd->lock);
+		pd->write_congestion_off = val;
+		init_congestion(&pd->write_congestion_off, &pd->write_congestion_on);
+		spin_unlock(&pd->lock);
+	} else if (strcmp(attr->name, "write_congestion_on") == 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#963: FILE: drivers/block/pktcdvd.c:372:
+	} else if (strcmp(attr->name, "write_congestion_on") == 0
+		   && sscanf(dbuf, "%d", &val) == 1) {

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#963: FILE: drivers/block/pktcdvd.c:372:
+		   && sscanf(dbuf, "%d", &val) == 1) {
+		spin_lock(&pd->lock);
+		pd->write_congestion_on = val;
+		init_congestion(&pd->write_congestion_off, &pd->write_congestion_on);
+		spin_unlock(&pd->lock);
+	}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#982: FILE: drivers/block/pktcdvd.c:391:
+};
+static struct sysfs_ops kobj_pkt_ops = {

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#982: FILE: drivers/block/pktcdvd.c:391:
+static struct sysfs_ops kobj_pkt_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#986: FILE: drivers/block/pktcdvd.c:395:
+};
+static struct kobj_type kobj_pkt_type = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#992: FILE: drivers/block/pktcdvd.c:401:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#995: FILE: drivers/block/pktcdvd.c:404:
+/********************************************************************
+  /sys/block/pktcdvd/

ERROR:CODE_INDENT: code indent should use tabs where possible
#996: FILE: drivers/block/pktcdvd.c:405:
+                     add            map block device$

ERROR:CODE_INDENT: code indent should use tabs where possible
#997: FILE: drivers/block/pktcdvd.c:406:
+                     remove         unmap packet dev$

ERROR:CODE_INDENT: code indent should use tabs where possible
#998: FILE: drivers/block/pktcdvd.c:407:
+                     device_map     show mappings$

ERROR:CODE_INDENT: code indent should use tabs where possible
#999: FILE: drivers/block/pktcdvd.c:408:
+                     packet_buffers number of packet buffers per dev$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1013: FILE: drivers/block/pktcdvd.c:422:
+static ssize_t kobj_blk_pktcdvd_show(struct kobject *kobj,
+			struct attribute *attr, char *data)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1016: FILE: drivers/block/pktcdvd.c:425:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1022: FILE: drivers/block/pktcdvd.c:431:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1025: FILE: drivers/block/pktcdvd.c:434:
+		int idx;
+		mutex_lock_nested(&ctl_mutex, SINGLE_DEPTH_NESTING);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1028: FILE: drivers/block/pktcdvd.c:437:
+			struct pktcdvd_device *pd = pkt_devs[idx];
+			if (!pd)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1030: FILE: drivers/block/pktcdvd.c:439:
+			n += sprintf(data+n, "%s %u:%u %u:%u\n",
 			                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1037: FILE: drivers/block/pktcdvd.c:446:
+^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1045: FILE: drivers/block/pktcdvd.c:454:
+static ssize_t kobj_blk_pktcdvd_store(struct kobject *kobj,
+			struct attribute *attr,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1053: FILE: drivers/block/pktcdvd.c:462:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1058: FILE: drivers/block/pktcdvd.c:467:
+^I^Idlen = sizeof(dbuf)-1;^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1058: FILE: drivers/block/pktcdvd.c:467:
+		dlen = sizeof(dbuf)-1;	
 		                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1061: FILE: drivers/block/pktcdvd.c:470:
+^I$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1063: FILE: drivers/block/pktcdvd.c:472:
+	if (strcmp(attr->name, "add") == 0
+	    && sscanf(dbuf, "%u:%u", &blk_major, &blk_minor) == 2) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1065: FILE: drivers/block/pktcdvd.c:474:
+^I^I$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1067: FILE: drivers/block/pktcdvd.c:476:
+	} else if (strcmp(attr->name, "remove") == 0
+	    && sscanf(dbuf, "%u:%u", &pkt_major, &pkt_minor) == 2) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1069: FILE: drivers/block/pktcdvd.c:478:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1071: FILE: drivers/block/pktcdvd.c:480:
+^I    ^I^I^I&& sscanf(dbuf, "%d", &val) == 1) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1071: FILE: drivers/block/pktcdvd.c:480:
+^I    ^I^I^I&& sscanf(dbuf, "%d", &val) == 1) {$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1071: FILE: drivers/block/pktcdvd.c:480:
+	} else if (strcmp(attr->name, "packet_buffers") == 0
+	    			&& sscanf(dbuf, "%d", &val) == 1) {

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#1071: FILE: drivers/block/pktcdvd.c:480:
+	    			&& sscanf(dbuf, "%d", &val) == 1) {
+		mutex_lock_nested(&ctl_mutex, SINGLE_DEPTH_NESTING);
+		init_packet_buffers(&val);
+		packet_buffers = val;
+		mutex_unlock(&ctl_mutex);
+	}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1088: FILE: drivers/block/pktcdvd.c:497:
+};
+static struct sysfs_ops kobj_blk_pktcdvd_ops = {

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#1088: FILE: drivers/block/pktcdvd.c:497:
+static struct sysfs_ops kobj_blk_pktcdvd_ops = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1092: FILE: drivers/block/pktcdvd.c:501:
+};
+static struct kobj_type kobj_blk_pktcdvd_type = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1098: FILE: drivers/block/pktcdvd.c:507:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1108: FILE: drivers/block/pktcdvd.c:517:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1115: FILE: drivers/block/pktcdvd.c:524:
+^I$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1126: FILE: drivers/block/pktcdvd.c:535:
+static struct file_operations pkt_proc_fops = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1133: FILE: drivers/block/pktcdvd.c:542:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1139: FILE: drivers/block/pktcdvd.c:548:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1141: FILE: drivers/block/pktcdvd.c:550:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1151: FILE: drivers/block/pktcdvd.c:560:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1155: FILE: drivers/block/pktcdvd.c:564:
+static int pkt_ctl_ioctl(struct inode *inode, struct file *file, unsigned  $

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1193: FILE: drivers/block/pktcdvd.c:601:
+static struct file_operations pkt_ctl_fops = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1197: FILE: drivers/block/pktcdvd.c:605:
+};
+static struct miscdevice pkt_misc = {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1198: FILE: drivers/block/pktcdvd.c:606:
+^I.minor ^I^I= MISC_DYNAMIC_MINOR,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1199: FILE: drivers/block/pktcdvd.c:607:
+^I.name  ^I^I= "pktcdvd",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1200: FILE: drivers/block/pktcdvd.c:608:
+^I.fops  ^I^I= &pkt_ctl_fops$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1205: FILE: drivers/block/pktcdvd.c:613:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1224: FILE: drivers/block/pktcdvd.c:1497:
+	/* check write congestion marks, and if bio_queue_size is
+	   below, wake up any waiters */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1224: FILE: drivers/block/pktcdvd.c:1497:
+	   below, wake up any waiters */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1226: FILE: drivers/block/pktcdvd.c:1499:
+^I ^I^I&& pd->bio_queue_size <= pd->write_congestion_off$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1226: FILE: drivers/block/pktcdvd.c:1499:
+^I ^I^I&& pd->bio_queue_size <= pd->write_congestion_off$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1226: FILE: drivers/block/pktcdvd.c:1499:
+	wakeup = (pd->write_congestion_on > 0
+	 		&& pd->bio_queue_size <= pd->write_congestion_off

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1227: FILE: drivers/block/pktcdvd.c:1500:
+	 		&& pd->bio_queue_size <= pd->write_congestion_off
+			&& waitqueue_active(&pd->write_congestion_wqueue));

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#1227: FILE: drivers/block/pktcdvd.c:1500:
+			&& waitqueue_active(&pd->write_congestion_wqueue));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1265: FILE: drivers/block/pktcdvd.c:2433:
+static int pkt_end_io_read_cloned(struct bio *bio, unsigned int  $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1265: FILE: drivers/block/pktcdvd.c:2433:
+static int pkt_end_io_read_cloned(struct bio *bio, unsigned int  
bytes_done, int err)
  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1309: FILE: drivers/block/pktcdvd.c:2463:
+^I^Iprintk("pktcdvd: %s incorrect request queue\n", bdevname(bio->bi_bdev,  $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1309: FILE: drivers/block/pktcdvd.c:2463:
+		printk("pktcdvd: %s incorrect request queue\n", bdevname(bio->bi_bdev,  

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1311: FILE: drivers/block/pktcdvd.c:2464:
+		printk("pktcdvd: %s incorrect request queue\n", bdevname(bio->bi_bdev,  
+		goto end_io;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1332: FILE: drivers/block/pktcdvd.c:2485:
+		printk("pktcdvd: WRITE for ro device %s (%llu)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1333: FILE: drivers/block/pktcdvd.c:2486:
+		printk("pktcdvd: WRITE for ro device %s (%llu)\n",
+			pd->name, (unsigned long long)bio->bi_sector);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1338: FILE: drivers/block/pktcdvd.c:2491:
+		printk("pktcdvd: wrong bio size\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pkt_make_request', this function's name, in a string
#1345: FILE: drivers/block/pktcdvd.c:2498:
+	VPRINTK("pkt_make_request: start = %6llx stop = %6llx\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1357: FILE: drivers/block/pktcdvd.c:2510:
+			BUG_ON(last_zone != zone + pd->settings.size);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1360: FILE: drivers/block/pktcdvd.c:2513:
+			BUG_ON(!bp);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pkt->state == PACKET_WAITING_STATE'
#1377: FILE: drivers/block/pktcdvd.c:2530:
+			if ((pkt->state == PACKET_WAITING_STATE) ||
+			    (pkt->state == PACKET_READ_WAIT_STATE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pkt->state == PACKET_READ_WAIT_STATE'
#1377: FILE: drivers/block/pktcdvd.c:2530:
+			if ((pkt->state == PACKET_WAITING_STATE) ||
+			    (pkt->state == PACKET_READ_WAIT_STATE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pkt->write_size >= pkt->frames'
#1382: FILE: drivers/block/pktcdvd.c:2535:
+				if ((pkt->write_size >= pkt->frames) &&
+				    (pkt->state == PACKET_WAITING_STATE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pkt->state == PACKET_WAITING_STATE'
#1382: FILE: drivers/block/pktcdvd.c:2535:
+				if ((pkt->write_size >= pkt->frames) &&
+				    (pkt->state == PACKET_WAITING_STATE)) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1390: FILE: drivers/block/pktcdvd.c:2543:
+				return 0;
+			} else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1401: FILE: drivers/block/pktcdvd.c:2554:
+^I * If not, wait till the work queue size is below the congestion off  $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1409: FILE: drivers/block/pktcdvd.c:2561:
+	if (pd->write_congestion_on > 0
+	     && pd->bio_queue_size >= pd->write_congestion_on) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1415: FILE: drivers/block/pktcdvd.c:2567:
+			prepare_to_wait_exclusive(&pd->write_congestion_wqueue,
+					&wait, TASK_UNINTERRUPTIBLE);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1418: FILE: drivers/block/pktcdvd.c:2570:
+			/* if we are here, bio_queue_size should be below
+			   congestion_off, but be sure and do a test */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1418: FILE: drivers/block/pktcdvd.c:2570:
+			   congestion_off, but be sure and do a test */

ERROR:SPACING: space required before the open parenthesis '('
#1420: FILE: drivers/block/pktcdvd.c:2572:
+		} while(pd->bio_queue_size > pd->write_congestion_off);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1431: FILE: drivers/block/pktcdvd.c:2583:
+	BUG_ON(pd->bio_queue_size < 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1459: FILE: drivers/block/pktcdvd.c:2611:
+static int pkt_merge_bvec(request_queue_t *q, struct bio *bio, struct  $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1475: FILE: drivers/block/pktcdvd.c:2626:
+	BUG_ON(remaining < 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1479: FILE: drivers/block/pktcdvd.c:2630:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1496: FILE: drivers/block/pktcdvd.c:2647:
+	if ((ret = blkdev_get(pd->bdev, FMODE_READ, O_RDONLY)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1499: FILE: drivers/block/pktcdvd.c:2650:
+	if ((ret = bd_claim(pd->bdev, pd)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1524: FILE: drivers/block/pktcdvd.c:2720:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1555: FILE: drivers/block/pktcdvd.c:2787:
+static int pkt_ioctl(struct inode *inode, struct file *file, unsigned int  $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1555: FILE: drivers/block/pktcdvd.c:2787:
+static int pkt_ioctl(struct inode *inode, struct file *file, unsigned int  
cmd, unsigned long arg)
  {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1656: FILE: drivers/block/pktcdvd.c:2791:
+^IVPRINTK("pkt_ioctl: cmd %x, dev %d:%d\n", cmd, imajor(inode),  $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pkt_ioctl', this function's name, in a string
#1656: FILE: drivers/block/pktcdvd.c:2791:
+	VPRINTK("pkt_ioctl: cmd %x, dev %d:%d\n", cmd, imajor(inode),  

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1658: FILE: drivers/block/pktcdvd.c:2792:
+	VPRINTK("pkt_ioctl: cmd %x, dev %d:%d\n", cmd, imajor(inode),  


WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#1732: FILE: drivers/block/pktcdvd.c:2836:
+static struct block_device_operations pktcdvd_ops = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1760: FILE: drivers/block/pktcdvd.c:2854:
+ static void pkt_init_queue(struct pktcdvd_device *pd)$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1760: FILE: drivers/block/pktcdvd.c:2854:
+ static void pkt_init_queue(struct pktcdvd_device *pd)
  {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1860: FILE: drivers/block/pktcdvd.c:2898:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1865: FILE: drivers/block/pktcdvd.c:2903:
+	/* the block device must have a queue ! else many of the
+	   pktcdvd code breaks. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1865: FILE: drivers/block/pktcdvd.c:2903:
+	   pktcdvd code breaks. */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1867: FILE: drivers/block/pktcdvd.c:2905:
+		printk("pktcdvd: block device %s has no request queue, aborting\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1868: FILE: drivers/block/pktcdvd.c:2906:
+		printk("pktcdvd: block device %s has no request queue, aborting\n",
+			bdevname(bdev, b));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1887: FILE: drivers/block/pktcdvd.c:2927:
+		struct proc_dir_entry *proc = create_proc_entry(pd->name, 0, pkt_proc);
+		if (proc) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1965: FILE: drivers/block/pktcdvd.c:2947:
+static int pkt_setup_dev(dev_t dev, dev_t* pkt_dev)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1965: FILE: drivers/block/pktcdvd.c:2947:
+static int pkt_setup_dev(dev_t dev, dev_t* pkt_dev)
  {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1972: FILE: drivers/block/pktcdvd.c:2953:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1990: FILE: drivers/block/pktcdvd.c:2968:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2001: FILE: drivers/block/pktcdvd.c:2973:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2027: FILE: drivers/block/pktcdvd.c:3008:
+	/* move disk kobject to a child of the pktcdvd node
+	   in /sys/block, so that the disk is now available as

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2028: FILE: drivers/block/pktcdvd.c:3009:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2034: FILE: drivers/block/pktcdvd.c:3015:
+^I$

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#2039: FILE: drivers/block/pktcdvd.c:3020:
+	strlcpy(pd->kobj.name, "packet", KOBJ_NAME_LEN);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2043: FILE: drivers/block/pktcdvd.c:3024:
+		printk("pktcdvd: failed to register block pktcdvd "

WARNING:SPLIT_STRING: quoted string split across lines
#2044: FILE: drivers/block/pktcdvd.c:3025:
+		printk("pktcdvd: failed to register block pktcdvd "
+		       "kernel object\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2049: FILE: drivers/block/pktcdvd.c:3030:
+		sysfs_create_link(&pd->kobj, &pd->bdev->bd_disk->kobj,
+				"mapped_to");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2055: FILE: drivers/block/pktcdvd.c:3035:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2069: FILE: drivers/block/pktcdvd.c:3050:
+out_mutex:^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2071: FILE: drivers/block/pktcdvd.c:3052:
+	printk("pktcdvd: setup of pktcdvd device failed\n");

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#2079: FILE: drivers/block/pktcdvd.c:3059:
+static int pkt_remove_dev(dev_t pkt_dev)
  {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2085: FILE: drivers/block/pktcdvd.c:3064:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2116: FILE: drivers/block/pktcdvd.c:3084:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2118: FILE: drivers/block/pktcdvd.c:3086:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2130: FILE: drivers/block/pktcdvd.c:3098:
+^I$

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#2258: FILE: drivers/block/pktcdvd.c:3157:
+	strlcpy(kobj_blk_pktcdvd->name, "pktcdvd", KOBJ_NAME_LEN);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2263: FILE: drivers/block/pktcdvd.c:3162:
+		printk("pktcdvd: failed to register"

WARNING:SPLIT_STRING: quoted string split across lines
#2264: FILE: drivers/block/pktcdvd.c:3163:
+		printk("pktcdvd: failed to register"
+		       " pktcdvd kernel object\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2269: FILE: drivers/block/pktcdvd.c:3168:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2282: FILE: drivers/block/pktcdvd.c:3176:
+#endif^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2291: FILE: drivers/block/pktcdvd.c:3185:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2305: FILE: drivers/block/pktcdvd.c:3198:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2321: FILE: drivers/block/pktcdvd.c:3212:
+MODULE_AUTHOR("Jens Axboe <axboe@suse.de>,Peter Osterlund  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2381: FILE: include/linux/pktcdvd.h:42:
+#define PACKET_CTRL_CMD^I^I_IOWR(PACKET_IOCTL_MAGIC, 1, struct  $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2384: FILE: include/linux/pktcdvd.h:44:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2386: FILE: include/linux/pktcdvd.h:46:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2396: FILE: include/linux/pktcdvd.h:56:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2435: FILE: include/linux/pktcdvd.h:84:
+#define PKT_WRITE_CONGESTION_MAX (1024*1024)
                                       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2439: FILE: include/linux/pktcdvd.h:88:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2442: FILE: include/linux/pktcdvd.h:90:
+ * How long we should hold a non-full packet before starting data  $

WARNING:TYPO_SPELLING: 'sucessfully' may be misspelled - perhaps 'successfully'?
#2469: FILE: include/linux/pktcdvd.h:143:
+ * able to sucessfully recover with this option (drive will return good
            ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2501: FILE: include/linux/pktcdvd.h:314:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2509: FILE: include/linux/pktcdvd.h:322:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000040919.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 124 errors, 51 warnings, 60 checks, 2307 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000040919.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
