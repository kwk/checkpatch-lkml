ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#38: 
--- a/arch/sh/kernel/pci-dc.c	Wed Aug 21 17:55:02 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#45: FILE: arch/sh/kernel/pci-dc.c:34:
+#define BBA_SELECTED(bus,devfn) (bus->number==0 && devfn==0)
                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#45: FILE: arch/sh/kernel/pci-dc.c:34:
+#define BBA_SELECTED(bus,devfn) (bus->number==0 && devfn==0)
                                             ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#45: FILE: arch/sh/kernel/pci-dc.c:34:
+#define BBA_SELECTED(bus,devfn) (bus->number==0 && devfn==0)
                                                         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bus' may be better as '(bus)' to avoid precedence issues
#45: FILE: arch/sh/kernel/pci-dc.c:34:
+#define BBA_SELECTED(bus,devfn) (bus->number==0 && devfn==0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'devfn' may be better as '(devfn)' to avoid precedence issues
#45: FILE: arch/sh/kernel/pci-dc.c:34:
+#define BBA_SELECTED(bus,devfn) (bus->number==0 && devfn==0)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#49: FILE: arch/sh/kernel/pci-dc.c:36:
+static int gapspci_read(struct pci_bus *bus, unsigned int devfn, int where, int size, u32 * val)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#59: FILE: arch/sh/kernel/pci-dc.c:41:
+			*val = (u8)inb(GAPSPCI_BBA_CONFIG+where);
 			                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#65: FILE: arch/sh/kernel/pci-dc.c:47:
+			*val = (u16)inw(GAPSPCI_BBA_CONFIG+where);
 			                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#71: FILE: arch/sh/kernel/pci-dc.c:53:
+			*val = inl(GAPSPCI_BBA_CONFIG+where);
 			                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: arch/sh/kernel/pci-dc.c:57:
+^I}^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: arch/sh/kernel/pci-dc.c:62:
+static int gapspci_write(struct pci_bus *bus, unsigned int devfn,
+				    int where, u32 val)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#130: FILE: arch/sh/kernel/pci-dc.c:65:
+		switch (size) {
+	case 1:
[...]
+	case 2:
[...]
+	case 4:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#133: FILE: arch/sh/kernel/pci-dc.c:68:
+			outb((u8)val, GAPSPCI_BBA_CONFIG+where);
 			                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#137: FILE: arch/sh/kernel/pci-dc.c:72:
+			outw((u16)val, GAPSPCI_BBA_CONFIG+where);
 			                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#141: FILE: arch/sh/kernel/pci-dc.c:76:
+			outl(val, GAPSPCI_BBA_CONFIG+where);
 			                            ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#155: FILE: arch/sh/kernel/pci-dc.c:84:
+^I.read = ^Igapspci_read,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#156: FILE: arch/sh/kernel/pci-dc.c:85:
+^I.write = ^Igapspci_write,$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#165: FILE: arch/sh/kernel/pci-dc.c:128:
+		if (!BBA_SELECTED(bus, dev->devfn)) continue;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000437953.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 2 warnings, 9 checks, 127 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000437953.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
