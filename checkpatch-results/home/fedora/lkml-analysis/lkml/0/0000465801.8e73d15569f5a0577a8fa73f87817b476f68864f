WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#42: FILE: MAINTAINERS:1511:
+P:     Romain Lievin

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#43: FILE: MAINTAINERS:1512:
+M:     roms@lpg.ticalc.org

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#43: FILE: MAINTAINERS:1512:
+P:     Romain Lievin
+M:     roms@lpg.ticalc.org

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#44: FILE: MAINTAINERS:1513:
+S:     Maintained

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#102: FILE: drivers/char/tipar.c:1:
+/* Hey EMACS -*- linux-c -*-

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#155: FILE: drivers/char/tipar.c:54:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#157: FILE: drivers/char/tipar.c:56:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#158: FILE: drivers/char/tipar.c:57:
+#include <asm/bitops.h>

ERROR:MALFORMED_INCLUDE: malformed #include filename
#165: FILE: drivers/char/tipar.c:64:
+#include "ticable.h" //#include <linux/ticable.h>

The #include statement has a malformed path.  This has happened
because the author has included a double slash "//" in the pathname
accidentally.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#175: FILE: drivers/char/tipar.c:74:
+#define VERSION(ver,rel,seq) (((ver)<<16) | ((rel)<<8) | (seq))
                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#175: FILE: drivers/char/tipar.c:74:
+#define VERSION(ver,rel,seq) (((ver)<<16) | ((rel)<<8) | (seq))
                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#175: FILE: drivers/char/tipar.c:74:
+#define VERSION(ver,rel,seq) (((ver)<<16) | ((rel)<<8) | (seq))
                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#175: FILE: drivers/char/tipar.c:74:
+#define VERSION(ver,rel,seq) (((ver)<<16) | ((rel)<<8) | (seq))
                                                   ^

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#176: FILE: drivers/char/tipar.c:75:
+#if LINUX_VERSION_CODE < VERSION(2,5,0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#176: FILE: drivers/char/tipar.c:75:
+#if LINUX_VERSION_CODE < VERSION(2,5,0)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#176: FILE: drivers/char/tipar.c:75:
+#if LINUX_VERSION_CODE < VERSION(2,5,0)
                                     ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#176: FILE: drivers/char/tipar.c:75:
+#if LINUX_VERSION_CODE < VERSION(2,5,0)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: drivers/char/tipar.c:78:
+#endif $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#184: FILE: drivers/char/tipar.c:83:
+^Istruct pardevice *dev;      ^I^I/* Parport device entry */$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#201: FILE: drivers/char/tipar.c:100:
+#define w_ctr(x,y)      (parport_write_control(table[(x)].dev->port, (y)))
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#202: FILE: drivers/char/tipar.c:101:
+#define w_dtr(x,y)      (parport_write_data(table[(x)].dev->port, (y)))
                ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#213: FILE: drivers/char/tipar.c:112:
+	return (r_str(minor));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#223: FILE: drivers/char/tipar.c:122:
+#define START(x) { x=jiffies+HZ/(timeout/10); }
                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#223: FILE: drivers/char/tipar.c:122:
+#define START(x) { x=jiffies+HZ/(timeout/10); }
                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#223: FILE: drivers/char/tipar.c:122:
+#define START(x) { x=jiffies+HZ/(timeout/10); }
                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#223: FILE: drivers/char/tipar.c:122:
+#define START(x) { x=jiffies+HZ/(timeout/10); }
                                         ^

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#224: FILE: drivers/char/tipar.c:123:
+#define WAIT(x)  { \
+  if (time_before((x), jiffies)) return -1; \
+  if (need_resched()) schedule(); }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/char/tipar.c:124:
+  if (time_before((x), jiffies)) return -1; \$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#225: FILE: drivers/char/tipar.c:124:
+  if (time_before((x), jiffies)) return -1; \

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: drivers/char/tipar.c:125:
+  if (need_resched()) schedule(); }$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#226: FILE: drivers/char/tipar.c:125:
+  if (need_resched()) schedule(); }

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: drivers/char/tipar.c:130:
+                    1                 0                      0$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#231: FILE: drivers/char/tipar.c:130:
+/* D-bus protocol (45kbit/s max):
+                    1                 0                      0

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: drivers/char/tipar.c:142:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#244: FILE: drivers/char/tipar.c:143:
+	for (bit=0; bit<8; bit++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#244: FILE: drivers/char/tipar.c:143:
+	for (bit=0; bit<8; bit++) {
 	               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: drivers/char/tipar.c:146:
+^I^I^ISTART(max); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: drivers/char/tipar.c:150:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: drivers/char/tipar.c:172:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#274: FILE: drivers/char/tipar.c:173:
+		if(need_resched())

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: drivers/char/tipar.c:176:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#285: FILE: drivers/char/tipar.c:184:
+	unsigned char v, data=0;
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#288: FILE: drivers/char/tipar.c:187:
+	for (bit=0; bit<8; bit++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#288: FILE: drivers/char/tipar.c:187:
+	for (bit=0; bit<8; bit++) {
 	               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: drivers/char/tipar.c:188:
+^I^ISTART(max); $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#292: FILE: drivers/char/tipar.c:191:
+		} while ((v=inbyte(minor) & 0x30) == 0x30);
 		           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: drivers/char/tipar.c:192:
+      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: drivers/char/tipar.c:192:
+      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: drivers/char/tipar.c:193:
+^I^Iif (v == 0x10) { $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#295: FILE: drivers/char/tipar.c:194:
+			data=(data>>1) | 0x80;
 			    ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#295: FILE: drivers/char/tipar.c:194:
+			data=(data>>1) | 0x80;
 			          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#303: FILE: drivers/char/tipar.c:202:
+			data=data>>1;
 			    ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#303: FILE: drivers/char/tipar.c:202:
+			data=data>>1;
 			         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: drivers/char/tipar.c:211:
+^I^Iudelay(delay);^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#313: FILE: drivers/char/tipar.c:212:
+		if(need_resched())

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: drivers/char/tipar.c:213:
+                        schedule();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: drivers/char/tipar.c:213:
+                        schedule();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: drivers/char/tipar.c:215:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#324: FILE: drivers/char/tipar.c:223:
+	int seq[]={ 0x00, 0x20, 0x10, 0x30 };
 	         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: drivers/char/tipar.c:224:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#326: FILE: drivers/char/tipar.c:225:
+	for(i=3; i>=0; i--) {
 	     ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#326: FILE: drivers/char/tipar.c:225:
+	for(i=3; i>=0; i--) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#326: FILE: drivers/char/tipar.c:225:
+	for(i=3; i>=0; i--) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#331: FILE: drivers/char/tipar.c:230:
+		if ( (inbyte(minor) & 0x30) != seq[i]) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: drivers/char/tipar.c:234:
+^I} $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#346: FILE: drivers/char/tipar.c:245:
+	if (minor > tp_count-1)
 	                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: drivers/char/tipar.c:246:
+^I^Ireturn -ENXIO;  $

ERROR:SPACING: space required before the open parenthesis '('
#349: FILE: drivers/char/tipar.c:248:
+	if(test_and_set_bit(minor, &opened))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#352: FILE: drivers/char/tipar.c:251:
+	parport_claim_or_block (table[minor].dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#353: FILE: drivers/char/tipar.c:252:
+	init_ti_parallel (minor);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#354: FILE: drivers/char/tipar.c:253:
+	parport_release (table[minor].dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: drivers/char/tipar.c:254:
+^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#363: FILE: drivers/char/tipar.c:262:
+	if (minor > tp_count-1)
 	                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#367: FILE: drivers/char/tipar.c:266:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#374: FILE: drivers/char/tipar.c:273:
+	unsigned int minor=minor(file->f_dentry->d_inode->i_rdev)-TIPAR_MINOR;
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#374: FILE: drivers/char/tipar.c:273:
+	unsigned int minor=minor(file->f_dentry->d_inode->i_rdev)-TIPAR_MINOR;
 	                                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: drivers/char/tipar.c:275:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/char/tipar.c:275:
+  $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#377: FILE: drivers/char/tipar.c:276:
+	parport_claim_or_block (table[minor].dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#378: FILE: drivers/char/tipar.c:277:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#379: FILE: drivers/char/tipar.c:278:
+	for(n=0; n<count; n++) {
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#379: FILE: drivers/char/tipar.c:278:
+	for(n=0; n<count; n++) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#379: FILE: drivers/char/tipar.c:278:
+	for(n=0; n<count; n++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#381: FILE: drivers/char/tipar.c:280:
+^I^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#394: FILE: drivers/char/tipar.c:293:
+	parport_release (table[minor].dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: drivers/char/tipar.c:297:
+static ssize_t tipar_read(struct file *file, char *buf, $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#401: FILE: drivers/char/tipar.c:300:
+	int b=0;
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#402: FILE: drivers/char/tipar.c:301:
+	unsigned int minor=minor(file->f_dentry->d_inode->i_rdev)-TIPAR_MINOR;
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#402: FILE: drivers/char/tipar.c:301:
+	unsigned int minor=minor(file->f_dentry->d_inode->i_rdev)-TIPAR_MINOR;
 	                                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: drivers/char/tipar.c:312:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: drivers/char/tipar.c:312:
+  $

ERROR:SPACING: space required before the open parenthesis '('
#414: FILE: drivers/char/tipar.c:313:
+	while(n < count) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#421: FILE: drivers/char/tipar.c:320:
+		}
+		else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#421: FILE: drivers/char/tipar.c:320:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#422: FILE: drivers/char/tipar.c:321:
+			if(put_user(b, ((unsigned char *)buf)+n)) {
 			                                     ^

ERROR:SPACING: space required before the open parenthesis '('
#422: FILE: drivers/char/tipar.c:321:
+			if(put_user(b, ((unsigned char *)buf)+n)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#422: FILE: drivers/char/tipar.c:321:
+			if(put_user(b, ((unsigned char *)buf)+n)) {
[...]
+			} else retval = n;
[...]

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#425: FILE: drivers/char/tipar.c:324:
+			} else retval = n;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#427: FILE: drivers/char/tipar.c:326:
+      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: drivers/char/tipar.c:326:
+      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#433: FILE: drivers/char/tipar.c:332:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#441: FILE: drivers/char/tipar.c:340:
+		if(need_resched())

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: drivers/char/tipar.c:341:
+                        schedule();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: drivers/char/tipar.c:341:
+                        schedule();$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#472: FILE: drivers/char/tipar.c:371:
+static struct file_operations tipar_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#473: FILE: drivers/char/tipar.c:372:
+	owner:	 THIS_MODULE,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#474: FILE: drivers/char/tipar.c:373:
+	llseek:  no_llseek,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#474: FILE: drivers/char/tipar.c:373:
+	llseek:  no_llseek,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#475: FILE: drivers/char/tipar.c:374:
+	read:	 tipar_read,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#475: FILE: drivers/char/tipar.c:374:
+	read:	 tipar_read,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#476: FILE: drivers/char/tipar.c:375:
+	write:   tipar_write,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#476: FILE: drivers/char/tipar.c:375:
+	write:   tipar_write,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#477: FILE: drivers/char/tipar.c:376:
+	ioctl:	 tipar_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#477: FILE: drivers/char/tipar.c:376:
+	ioctl:	 tipar_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#478: FILE: drivers/char/tipar.c:377:
+	open:	 tipar_open,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#478: FILE: drivers/char/tipar.c:377:
+	open:	 tipar_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#479: FILE: drivers/char/tipar.c:378:
+	release: tipar_close,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#479: FILE: drivers/char/tipar.c:378:
+	release: tipar_close,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#486: FILE: drivers/char/tipar.c:385:
+ *      You can use 'tipar=timeout,delay' to set these now. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#487: FILE: drivers/char/tipar.c:386:
+static int __init tipar_setup (char *str)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#490: FILE: drivers/char/tipar.c:389:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#491: FILE: drivers/char/tipar.c:390:
+        str = get_options (str, ARRAY_SIZE(ints), ints);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: drivers/char/tipar.c:390:
+        str = get_options (str, ARRAY_SIZE(ints), ints);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#491: FILE: drivers/char/tipar.c:390:
+        str = get_options (str, ARRAY_SIZE(ints), ints);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#492: FILE: drivers/char/tipar.c:391:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#493: FILE: drivers/char/tipar.c:392:
+        if (ints[0] > 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: drivers/char/tipar.c:392:
+        if (ints[0] > 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#494: FILE: drivers/char/tipar.c:393:
+                timeout = ints[1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: drivers/char/tipar.c:393:
+                timeout = ints[1];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#495: FILE: drivers/char/tipar.c:394:
+                if (ints[0] > 1) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: drivers/char/tipar.c:394:
+                if (ints[0] > 1) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#495: FILE: drivers/char/tipar.c:394:
+                if (ints[0] > 1) {
+                        delay = ints[2];
+		}

ERROR:CODE_INDENT: code indent should use tabs where possible
#496: FILE: drivers/char/tipar.c:395:
+                        delay = ints[2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: drivers/char/tipar.c:395:
+                        delay = ints[2];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#498: FILE: drivers/char/tipar.c:397:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: drivers/char/tipar.c:397:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#500: FILE: drivers/char/tipar.c:399:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: drivers/char/tipar.c:399:
+        return 1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#513: FILE: drivers/char/tipar.c:412:
+^I$

CHECK:SPACING: No space is necessary after a cast
#517: FILE: drivers/char/tipar.c:416:
+						(void *) &table[nr]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#518: FILE: drivers/char/tipar.c:417:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!table[nr].dev"
#519: FILE: drivers/char/tipar.c:418:
+	if (table[nr].dev == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#521: FILE: drivers/char/tipar.c:420:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: drivers/char/tipar.c:420:
+ $

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#524: FILE: drivers/char/tipar.c:423:
+	printk("tipar: registering to devfs : major = %d, minor = %d, node = %s\n", TISER_MAJOR, (TIPAR_MINOR + nr), name);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#524: FILE: drivers/char/tipar.c:423:
+	printk("tipar: registering to devfs : major = %d, minor = %d, node = %s\n", TISER_MAJOR, (TIPAR_MINOR + nr), name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#526: FILE: drivers/char/tipar.c:425:
+	devfs_register(devfs_handle, name,
+			DEVFS_FL_DEFAULT, TIPAR_MAJOR, TIPAR_MINOR + nr,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#527: FILE: drivers/char/tipar.c:426:
+			S_IFCHR | S_IRUGO | S_IWUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#530: FILE: drivers/char/tipar.c:429:
+	/* Display informations */
 	           ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#531: FILE: drivers/char/tipar.c:430:
+	printk(KERN_INFO "tipar%d: using %s (%s).\n", nr, port->name,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#535: FILE: drivers/char/tipar.c:434:
+		printk("tipar%d: link cable found !\n", nr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#537: FILE: drivers/char/tipar.c:436:
+		printk("tipar%d: link cable not found.\n", nr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#542: FILE: drivers/char/tipar.c:441:
+static void tipar_attach (struct parport *port)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#545: FILE: drivers/char/tipar.c:444:
+^I^Iprintk("tipar: ignoring parallel port (max. %d)\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#545: FILE: drivers/char/tipar.c:444:
+		printk("tipar: ignoring parallel port (max. %d)\n", 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#554: FILE: drivers/char/tipar.c:453:
+static void tipar_detach (struct parport *port)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#568: FILE: drivers/char/tipar.c:467:
+	printk("tipar: parallel link cable driver, version %s\n", DRIVER_VERSION);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#569: FILE: drivers/char/tipar.c:468:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#570: FILE: drivers/char/tipar.c:469:
+	if (devfs_register_chrdev (TIPAR_MAJOR, "tipar", &tipar_fops)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#571: FILE: drivers/char/tipar.c:470:
+		printk("tipar: unable to get major %d\n", TIPAR_MAJOR);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#576: FILE: drivers/char/tipar.c:475:
+	devfs_handle = devfs_mk_dir (NULL, "ticables/par", NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#578: FILE: drivers/char/tipar.c:477:
+	if (parport_register_driver (&tipar_driver)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&tipar_driver'
#578: FILE: drivers/char/tipar.c:477:
+	if (parport_register_driver (&tipar_driver)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#579: FILE: drivers/char/tipar.c:478:
+		printk ("tipar: unable to register with parport\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#579: FILE: drivers/char/tipar.c:478:
+		printk ("tipar: unable to register with parport\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#591: FILE: drivers/char/tipar.c:490:
+	parport_unregister_driver (&tipar_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#593: FILE: drivers/char/tipar.c:492:
+	devfs_unregister (devfs_handle);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#594: FILE: drivers/char/tipar.c:493:
+^Idevfs_unregister_chrdev(TIPAR_MAJOR, "tipar");  $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!table[i].dev"
#597: FILE: drivers/char/tipar.c:496:
+		if (table[i].dev == NULL)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#602: FILE: drivers/char/tipar.c:501:
+	printk("tipar: module unloaded !\n");

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#607: FILE: drivers/char/tipar.c:506:
+__setup("tipar=", tipar_setup);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000465801.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 85 errors, 66 warnings, 20 checks, 571 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000465801.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
