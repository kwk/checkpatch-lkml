WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
> > > > These are actually incorrect definitions since the ioctl argument is

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dev' may be better as '(dev)' to avoid precedence issues
#89: FILE: pktsetup/pktsetup.c:42:
+#define MAJOR(dev)      ((dev & 0xfff00) >> 8)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dev' - possible side-effects?
#90: FILE: pktsetup/pktsetup.c:43:
+#define MINOR(dev)      ((dev & 0xff) | ((dev >> 12) & 0xfff00))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dev' may be better as '(dev)' to avoid precedence issues
#90: FILE: pktsetup/pktsetup.c:43:
+#define MINOR(dev)      ((dev & 0xff) | ((dev >> 12) & 0xfff00))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#91: FILE: pktsetup/pktsetup.c:44:
+#define MKDEV(ma,mi)    ((mi & 0xff) | (ma << 8) | ((mi & ~0xff) << 12))
                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ma' may be better as '(ma)' to avoid precedence issues
#91: FILE: pktsetup/pktsetup.c:44:
+#define MKDEV(ma,mi)    ((mi & 0xff) | (ma << 8) | ((mi & ~0xff) << 12))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mi' - possible side-effects?
#91: FILE: pktsetup/pktsetup.c:44:
+#define MKDEV(ma,mi)    ((mi & 0xff) | (ma << 8) | ((mi & ~0xff) << 12))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mi' may be better as '(mi)' to avoid precedence issues
#91: FILE: pktsetup/pktsetup.c:44:
+#define MKDEV(ma,mi)    ((mi & 0xff) | (ma << 8) | ((mi & ~0xff) << 12))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#154: FILE: pktsetup/pktsetup.c:140:
+	if ((f = fopen("/proc/misc", "r")) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#169: FILE: pktsetup/pktsetup.c:155:
+	static char buf[128];
+	snprintf(buf, sizeof(buf), "%s/%s", CTL_DIR, dev);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#179: FILE: pktsetup/pktsetup.c:165:
+	if ((misc_minor = get_misc_minor()) < 0) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'stat_buf.st_rdev == dev'
#189: FILE: pktsetup/pktsetup.c:175:
+	if ((stat(pkt_dev_name(CTL_DEV), &stat_buf) >= 0) &&
+	    S_ISCHR(stat_buf.st_mode) && (stat_buf.st_rdev == dev))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#235: FILE: pktsetup/pktsetup.c:221:
+	if ((ctl_fd = open(pkt_dev_name(CTL_DEV), O_RDONLY)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#241: FILE: pktsetup/pktsetup.c:227:
+		if ((dev_fd = open(device, O_RDONLY | O_NONBLOCK)) == -1) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#308: FILE: pktsetup/pktsetup.c:294:
+	if ((ctl_fd = open(pkt_dev_name(CTL_DEV), O_RDONLY)) < 0) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#344: FILE: pktsetup/pktsetup.c:329:
 		switch (c) {
[...]
+			case 's':

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000268058.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 2 warnings, 7 checks, 293 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000268058.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
