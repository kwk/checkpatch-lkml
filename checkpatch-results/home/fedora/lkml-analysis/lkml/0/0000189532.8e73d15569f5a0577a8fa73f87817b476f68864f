CHECK:CAMELCASE: Avoid CamelCase: <Byte_t>
#92: FILE: drivers/char/rocket.c:164:
+static Byte_t RData[RDATASIZE] = {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <RData>
#92: FILE: drivers/char/rocket.c:164:
+static Byte_t RData[RDATASIZE] = {

CHECK:CAMELCASE: Avoid CamelCase: <RRegData>
#113: FILE: drivers/char/rocket.c:185:
+static Byte_t RRegData[RREGDATASIZE] = {

CHECK:CAMELCASE: Avoid CamelCase: <sController>
#129: FILE: drivers/char/rocket.c:201:
+static CONTROLLER_T sController[CTL_SIZE] = {

CHECK:CAMELCASE: Avoid CamelCase: <sBitMapClrTbl>
#140: FILE: drivers/char/rocket.c:212:
+static Byte_t sBitMapClrTbl[8] = {

CHECK:CAMELCASE: Avoid CamelCase: <sBitMapSetTbl>
#144: FILE: drivers/char/rocket.c:216:
+static Byte_t sBitMapSetTbl[8] = {

CHECK:CAMELCASE: Avoid CamelCase: <sClockPrescale>
#148: FILE: drivers/char/rocket.c:220:
+static int sClockPrescale = 0x14;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#157: FILE: drivers/char/rocket.c:238:
+static int sInitChan(CONTROLLER_T * CtlP, CHANNEL_T * ChP, int AiopNum,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#157: FILE: drivers/char/rocket.c:238:
+static int sInitChan(CONTROLLER_T * CtlP, CHANNEL_T * ChP, int AiopNum,

CHECK:CAMELCASE: Avoid CamelCase: <sInitChan>
#157: FILE: drivers/char/rocket.c:238:
+static int sInitChan(CONTROLLER_T * CtlP, CHANNEL_T * ChP, int AiopNum,

CHECK:CAMELCASE: Avoid CamelCase: <CtlP>
#157: FILE: drivers/char/rocket.c:238:
+static int sInitChan(CONTROLLER_T * CtlP, CHANNEL_T * ChP, int AiopNum,

CHECK:CAMELCASE: Avoid CamelCase: <AiopNum>
#157: FILE: drivers/char/rocket.c:238:
+static int sInitChan(CONTROLLER_T * CtlP, CHANNEL_T * ChP, int AiopNum,

CHECK:CAMELCASE: Avoid CamelCase: <ChanNum>
#158: FILE: drivers/char/rocket.c:239:
+		     int ChanNum);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#159: FILE: drivers/char/rocket.c:240:
+static void sSetInterfaceMode(CHANNEL_T * ChP, Byte_t mode);

CHECK:CAMELCASE: Avoid CamelCase: <sSetInterfaceMode>
#159: FILE: drivers/char/rocket.c:240:
+static void sSetInterfaceMode(CHANNEL_T * ChP, Byte_t mode);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#160: FILE: drivers/char/rocket.c:241:
+static void sFlushRxFIFO(CHANNEL_T * ChP);

CHECK:CAMELCASE: Avoid CamelCase: <sFlushRxFIFO>
#160: FILE: drivers/char/rocket.c:241:
+static void sFlushRxFIFO(CHANNEL_T * ChP);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#161: FILE: drivers/char/rocket.c:242:
+static void sFlushTxFIFO(CHANNEL_T * ChP);

CHECK:CAMELCASE: Avoid CamelCase: <sFlushTxFIFO>
#161: FILE: drivers/char/rocket.c:242:
+static void sFlushTxFIFO(CHANNEL_T * ChP);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#162: FILE: drivers/char/rocket.c:243:
+static void sEnInterrupts(CHANNEL_T * ChP, Word_t Flags);

CHECK:CAMELCASE: Avoid CamelCase: <sEnInterrupts>
#162: FILE: drivers/char/rocket.c:243:
+static void sEnInterrupts(CHANNEL_T * ChP, Word_t Flags);

CHECK:CAMELCASE: Avoid CamelCase: <Word_t>
#162: FILE: drivers/char/rocket.c:243:
+static void sEnInterrupts(CHANNEL_T * ChP, Word_t Flags);

CHECK:CAMELCASE: Avoid CamelCase: <Flags>
#162: FILE: drivers/char/rocket.c:243:
+static void sEnInterrupts(CHANNEL_T * ChP, Word_t Flags);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#163: FILE: drivers/char/rocket.c:244:
+static void sDisInterrupts(CHANNEL_T * ChP, Word_t Flags);

CHECK:CAMELCASE: Avoid CamelCase: <sDisInterrupts>
#163: FILE: drivers/char/rocket.c:244:
+static void sDisInterrupts(CHANNEL_T * ChP, Word_t Flags);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#164: FILE: drivers/char/rocket.c:245:
+static void sModemReset(CONTROLLER_T * CtlP, int chan, int on);

CHECK:CAMELCASE: Avoid CamelCase: <sModemReset>
#164: FILE: drivers/char/rocket.c:245:
+static void sModemReset(CONTROLLER_T * CtlP, int chan, int on);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#165: FILE: drivers/char/rocket.c:246:
+static void sPCIModemReset(CONTROLLER_T * CtlP, int chan, int on);

CHECK:CAMELCASE: Avoid CamelCase: <sPCIModemReset>
#165: FILE: drivers/char/rocket.c:246:
+static void sPCIModemReset(CONTROLLER_T * CtlP, int chan, int on);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#166: FILE: drivers/char/rocket.c:247:
+static int sWriteTxPrioByte(CHANNEL_T * ChP, Byte_t Data);

CHECK:CAMELCASE: Avoid CamelCase: <sWriteTxPrioByte>
#166: FILE: drivers/char/rocket.c:247:
+static int sWriteTxPrioByte(CHANNEL_T * ChP, Byte_t Data);

CHECK:CAMELCASE: Avoid CamelCase: <Data>
#166: FILE: drivers/char/rocket.c:247:
+static int sWriteTxPrioByte(CHANNEL_T * ChP, Byte_t Data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#167: FILE: drivers/char/rocket.c:248:
+static int sPCIInitController(CONTROLLER_T * CtlP, int CtlNum,

CHECK:CAMELCASE: Avoid CamelCase: <sPCIInitController>
#167: FILE: drivers/char/rocket.c:248:
+static int sPCIInitController(CONTROLLER_T * CtlP, int CtlNum,

CHECK:CAMELCASE: Avoid CamelCase: <CtlNum>
#167: FILE: drivers/char/rocket.c:248:
+static int sPCIInitController(CONTROLLER_T * CtlP, int CtlNum,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#168: FILE: drivers/char/rocket.c:249:
+			      ByteIO_t * AiopIOList, int AiopIOListSize,

CHECK:CAMELCASE: Avoid CamelCase: <ByteIO_t>
#168: FILE: drivers/char/rocket.c:249:
+			      ByteIO_t * AiopIOList, int AiopIOListSize,

CHECK:CAMELCASE: Avoid CamelCase: <AiopIOList>
#168: FILE: drivers/char/rocket.c:249:
+			      ByteIO_t * AiopIOList, int AiopIOListSize,

CHECK:CAMELCASE: Avoid CamelCase: <AiopIOListSize>
#168: FILE: drivers/char/rocket.c:249:
+			      ByteIO_t * AiopIOList, int AiopIOListSize,

CHECK:CAMELCASE: Avoid CamelCase: <WordIO_t>
#169: FILE: drivers/char/rocket.c:250:
+			      WordIO_t ConfigIO, int IRQNum, Byte_t Frequency,

CHECK:CAMELCASE: Avoid CamelCase: <ConfigIO>
#169: FILE: drivers/char/rocket.c:250:
+			      WordIO_t ConfigIO, int IRQNum, Byte_t Frequency,

CHECK:CAMELCASE: Avoid CamelCase: <IRQNum>
#169: FILE: drivers/char/rocket.c:250:
+			      WordIO_t ConfigIO, int IRQNum, Byte_t Frequency,

CHECK:CAMELCASE: Avoid CamelCase: <Frequency>
#169: FILE: drivers/char/rocket.c:250:
+			      WordIO_t ConfigIO, int IRQNum, Byte_t Frequency,

CHECK:CAMELCASE: Avoid CamelCase: <PeriodicOnly>
#170: FILE: drivers/char/rocket.c:251:
+			      int PeriodicOnly, int altChanRingIndicator,

CHECK:CAMELCASE: Avoid CamelCase: <altChanRingIndicator>
#170: FILE: drivers/char/rocket.c:251:
+			      int PeriodicOnly, int altChanRingIndicator,

CHECK:CAMELCASE: Avoid CamelCase: <UPCIRingInd>
#171: FILE: drivers/char/rocket.c:252:
+			      int UPCIRingInd);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#172: FILE: drivers/char/rocket.c:253:
+static int sInitController(CONTROLLER_T * CtlP, int CtlNum, ByteIO_t MudbacIO,

CHECK:CAMELCASE: Avoid CamelCase: <sInitController>
#172: FILE: drivers/char/rocket.c:253:
+static int sInitController(CONTROLLER_T * CtlP, int CtlNum, ByteIO_t MudbacIO,

CHECK:CAMELCASE: Avoid CamelCase: <MudbacIO>
#172: FILE: drivers/char/rocket.c:253:
+static int sInitController(CONTROLLER_T * CtlP, int CtlNum, ByteIO_t MudbacIO,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#173: FILE: drivers/char/rocket.c:254:
+			   ByteIO_t * AiopIOList, int AiopIOListSize,

CHECK:CAMELCASE: Avoid CamelCase: <sReadAiopID>
#175: FILE: drivers/char/rocket.c:256:
+static int sReadAiopID(ByteIO_t io);

CHECK:CAMELCASE: Avoid CamelCase: <sReadAiopNumChan>
#176: FILE: drivers/char/rocket.c:257:
+static int sReadAiopNumChan(WordIO_t io);

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: drivers/char/rocket.c:2569:
+          int PeriodicOnly: 1 if all interrupts except the periodic$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: drivers/char/rocket.c:2569:
+          int PeriodicOnly: 1 if all interrupts except the periodic$

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: drivers/char/rocket.c:2571:
+                            0 is both the periodic interrupt and$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: drivers/char/rocket.c:2571:
+                            0 is both the periodic interrupt and$

WARNING:TYPO_SPELLING: 'overidden' may be misspelled - perhaps 'overridden'?
#274: FILE: drivers/char/rocket.c:2574:
+                               overidden, it is forced to a value of 0.
                                ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: drivers/char/rocket.c:2574:
+                               overidden, it is forced to a value of 0.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: drivers/char/rocket.c:2574:
+                               overidden, it is forced to a value of 0.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: drivers/char/rocket.c:2580:
+          are allowed, set Frequency to FREQ_DIS and PeriodicOnly to 0.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: drivers/char/rocket.c:2580:
+          are allowed, set Frequency to FREQ_DIS and PeriodicOnly to 0.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: drivers/char/rocket.c:2584:
+          Setting Frequency to FREQ_DIS and PeriodicOnly to 1 is an$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: drivers/char/rocket.c:2584:
+          Setting Frequency to FREQ_DIS and PeriodicOnly to 1 is an$

CHECK:CAMELCASE: Avoid CamelCase: <Setting>
#286: FILE: drivers/char/rocket.c:2584:
+          Setting Frequency to FREQ_DIS and PeriodicOnly to 1 is an

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#297: FILE: drivers/char/rocket.c:2604:
+static int sInitController(CONTROLLER_T * CtlP, int CtlNum, ByteIO_t MudbacIO,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#298: FILE: drivers/char/rocket.c:2605:
+			   ByteIO_t * AiopIOList, int AiopIOListSize,

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: drivers/char/rocket.c:2702:
+          int PeriodicOnly: 1 if all interrupts except the periodic$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: drivers/char/rocket.c:2702:
+          int PeriodicOnly: 1 if all interrupts except the periodic$

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: drivers/char/rocket.c:2704:
+                            0 is both the periodic interrupt and$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: drivers/char/rocket.c:2704:
+                            0 is both the periodic interrupt and$

WARNING:TYPO_SPELLING: 'overidden' may be misspelled - perhaps 'overridden'?
#315: FILE: drivers/char/rocket.c:2707:
+                               overidden, it is forced to a value of 0.
                                ^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#315: FILE: drivers/char/rocket.c:2707:
+                               overidden, it is forced to a value of 0.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: drivers/char/rocket.c:2707:
+                               overidden, it is forced to a value of 0.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: drivers/char/rocket.c:2713:
+          are allowed, set Frequency to FREQ_DIS and PeriodicOnly to 0.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: drivers/char/rocket.c:2713:
+          are allowed, set Frequency to FREQ_DIS and PeriodicOnly to 0.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#327: FILE: drivers/char/rocket.c:2717:
+          Setting Frequency to FREQ_DIS and PeriodicOnly to 1 is an$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: drivers/char/rocket.c:2717:
+          Setting Frequency to FREQ_DIS and PeriodicOnly to 1 is an$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#340: FILE: drivers/char/rocket.c:2737:
+static int sPCIInitController(CONTROLLER_T * CtlP, int CtlNum,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#341: FILE: drivers/char/rocket.c:2738:
+			      ByteIO_t * AiopIOList, int AiopIOListSize,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#380: FILE: drivers/char/rocket.c:2856:
+static int sInitChan(CONTROLLER_T * CtlP, CHANNEL_T * ChP, int AiopNum,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#380: FILE: drivers/char/rocket.c:2856:
+static int sInitChan(CONTROLLER_T * CtlP, CHANNEL_T * ChP, int AiopNum,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#408: FILE: drivers/char/rocket.c:3004:
+static void sStopRxProcessor(CHANNEL_T * ChP)

CHECK:CAMELCASE: Avoid CamelCase: <sStopRxProcessor>
#408: FILE: drivers/char/rocket.c:3004:
+static void sStopRxProcessor(CHANNEL_T * ChP)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#417: FILE: drivers/char/rocket.c:3029:
+static void sFlushRxFIFO(CHANNEL_T * ChP)

CHECK:CAMELCASE: Avoid CamelCase: <RxFIFOEnabled>
#422: FILE: drivers/char/rocket.c:3033:
+	int RxFIFOEnabled;	/* 1 if Rx FIFO enabled */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#440: FILE: drivers/char/rocket.c:3071:
+static void sFlushTxFIFO(CHANNEL_T * ChP)

CHECK:CAMELCASE: Avoid CamelCase: <TxEnabled>
#445: FILE: drivers/char/rocket.c:3075:
+	int TxEnabled;		/* 1 if transmitter enabled */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#463: FILE: drivers/char/rocket.c:3111:
+static int sWriteTxPrioByte(CHANNEL_T * ChP, Byte_t Data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#472: FILE: drivers/char/rocket.c:3173:
+static void sEnInterrupts(CHANNEL_T * ChP, Word_t Flags)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#481: FILE: drivers/char/rocket.c:3217:
+static void sDisInterrupts(CHANNEL_T * ChP, Word_t Flags)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#490: FILE: drivers/char/rocket.c:3233:
+static void sSetInterfaceMode(CHANNEL_T * ChP, Byte_t mode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#499: FILE: drivers/char/rocket.c:3242:
+static void sModemReset(CONTROLLER_T * CtlP, int chan, int on)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#508: FILE: drivers/char/rocket.c:3267:
+static void sPCIModemReset(CONTROLLER_T * CtlP, int chan, int on)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000189532.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 39 errors, 12 warnings, 42 checks, 448 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000189532.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
