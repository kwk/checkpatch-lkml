WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
diff -uNr linux-2.5.8.boot.clean_32bit_entries/arch/i386/boot/compressed/Makefile linux-2.5.8.boot.footprint/arch/i386/boot/compressed/Makefile

ERROR:TRAILING_WHITESPACE: trailing whitespace
#67: FILE: arch/i386/boot/compressed/Makefile:20:
+BZLINKFLAGS = -Ttext $(BZIMAGE_OFFSET) -T vmlinuz.lds $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: arch/i386/boot/compressed/head.S:46:
+1:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: arch/i386/boot/compressed/head.S:62:
+^I/* $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#176: FILE: arch/i386/boot/compressed/misc.c:82:
+extern unsigned long input_addr;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#177: FILE: arch/i386/boot/compressed/misc.c:83:
+extern unsigned long input_len;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#178: FILE: arch/i386/boot/compressed/misc.c:84:
+extern unsigned long output_overhang;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#179: FILE: arch/i386/boot/compressed/misc.c:85:
+extern unsigned long kernel_memsz;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#180: FILE: arch/i386/boot/compressed/misc.c:86:
+extern unsigned long kernel_filesz;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#183: FILE: arch/i386/boot/compressed/misc.c:89:
+extern unsigned char move_routine_end[], move_routine_start[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#184: FILE: arch/i386/boot/compressed/misc.c:90:
+extern unsigned char _end[];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#216: FILE: arch/i386/boot/compressed/misc.c:161:
+	memmove ( vidmem, vidmem + cols * 2, ( lines - 1 ) * cols * 2 );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#216: FILE: arch/i386/boot/compressed/misc.c:161:
+	memmove ( vidmem, vidmem + cols * 2, ( lines - 1 ) * cols * 2 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#216: FILE: arch/i386/boot/compressed/misc.c:161:
+	memmove ( vidmem, vidmem + cols * 2, ( lines - 1 ) * cols * 2 );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#279: FILE: arch/i386/boot/compressed/misc.c:302:
+^Iinsize = input_len; $

WARNING:TYPO_SPELLING: 'Ouput' may be misspelled - perhaps 'Output'?
#296: FILE: arch/i386/boot/compressed/misc.c:317:
+	/* Ouput buffers */
 	   ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space prohibited after that open parenthesis '('
#309: FILE: arch/i386/boot/compressed/misc.c:326:
+	if ( (HIGH_BASE + low_buffer_size) > ((ulg)high_buffer_start)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#309: FILE: arch/i386/boot/compressed/misc.c:326:
+	if ( (HIGH_BASE + low_buffer_size) > ((ulg)high_buffer_start)) {
[...]
 	else mv->hcount = -1;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#321: FILE: arch/i386/boot/compressed/misc.c:338:
+	high_compressed_start -=low_buffer_size;
 	                      ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#324: FILE: arch/i386/boot/compressed/misc.c:341:
+	if (high_compressed_start > input_addr) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#352: FILE: arch/i386/boot/compressed/misc.c:376:
+		if (high_addr > LOW_MAX) {
+			high_addr = LOW_MAX;
+		}

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#356: FILE: arch/i386/boot/compressed/misc.c:380:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#356: FILE: arch/i386/boot/compressed/misc.c:380:
+	else {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#365: FILE: arch/i386/boot/compressed/misc.c:389:
+	if (real_mode->cmd_line_ptr) {
[...]
+	else if (real_mode->screen.overlap.cl_magic == CL_MAGIC_VALUE) {
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#368: FILE: arch/i386/boot/compressed/misc.c:392:
+	}
+	else if (real_mode->screen.overlap.cl_magic == CL_MAGIC_VALUE) {

ERROR:SPACING: space required before the open parenthesis '('
#373: FILE: arch/i386/boot/compressed/misc.c:397:
+		while(cmdline_len < COMMAND_LINE_SIZE) {

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#375: FILE: arch/i386/boot/compressed/misc.c:399:
+			if (cmdline[cmdline_len -1] == '\0')
 			                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#379: FILE: arch/i386/boot/compressed/misc.c:403:
+		command_line[cmdline_len -1] = '\0';
 		                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: arch/i386/boot/compressed/misc.c:417:
+^Ireal_mode->heap_end_ptr = (new_real_mode + $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#396: FILE: arch/i386/boot/compressed/misc.c:420:
+	if (real_mode->cmd_line_ptr) {
+		real_mode->cmd_line_ptr = new_cmdline;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: arch/i386/boot/compressed/misc.c:424:
+^I^Ireal_mode->screen.overlap.cl_offset = $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#414: FILE: arch/i386/boot/compressed/misc.c:449:
+	if (real_mode) {
+		relocate_realmode();
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#417: FILE: arch/i386/boot/compressed/misc.c:452:
+	if ((mem_k << 10) < HIGH_BASE + kernel_memsz) {
+		error("Too little memory\n");
+	}

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#420: FILE: arch/i386/boot/compressed/misc.c:455:
+	if (free_mem_ptr < HIGH_BASE) setup_normal_buffers();

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#421: FILE: arch/i386/boot/compressed/misc.c:456:
+	else setup_buffers_if_we_run_high(mv);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: arch/i386/boot/compressed/vmlinuz.lds:13:
+^I.data : { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#442: FILE: arch/i386/boot/compressed/vmlinuz.lds:14:
+^I^I*(.data) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#443: FILE: arch/i386/boot/compressed/vmlinuz.lds:15:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#448: FILE: arch/i386/boot/compressed/vmlinuz.lds:20:
+^I.input _edata : { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: arch/i386/boot/compressed/vmlinuz.lds:29:
+}^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#495: FILE: arch/i386/boot/setup.S:314:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#561: FILE: arch/i386/boot/tools/build.c:71:
+#  define Assert(cond,msg)
                      ^

CHECK:CAMELCASE: Avoid CamelCase: <Assert>
#561: FILE: arch/i386/boot/tools/build.c:71:
+#  define Assert(cond,msg)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Trace>
#562: FILE: arch/i386/boot/tools/build.c:72:
+#  define Trace(x)

CHECK:CAMELCASE: Avoid CamelCase: <Tracev>
#563: FILE: arch/i386/boot/tools/build.c:73:
+#  define Tracev(x)

CHECK:CAMELCASE: Avoid CamelCase: <Tracevv>
#564: FILE: arch/i386/boot/tools/build.c:74:
+#  define Tracevv(x)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#565: FILE: arch/i386/boot/tools/build.c:75:
+#  define Tracec(c,x)
                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Tracec>
#565: FILE: arch/i386/boot/tools/build.c:75:
+#  define Tracec(c,x)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#566: FILE: arch/i386/boot/tools/build.c:76:
+#  define Tracecv(c,x)
                    ^

CHECK:CAMELCASE: Avoid CamelCase: <Tracecv>
#566: FILE: arch/i386/boot/tools/build.c:76:
+#  define Tracecv(c,x)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#567: FILE: arch/i386/boot/tools/build.c:77:
+#define memzero(s, n) memset ((s), 0, (n))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#567: FILE: arch/i386/boot/tools/build.c:77:
+#define memzero(s, n) memset ((s), 0, (n))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#569: FILE: arch/i386/boot/tools/build.c:79:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#570: FILE: arch/i386/boot/tools/build.c:80:
+typedef unsigned char  uch;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#571: FILE: arch/i386/boot/tools/build.c:81:
+typedef unsigned short ush;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#572: FILE: arch/i386/boot/tools/build.c:82:
+typedef unsigned long  ulg;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#579: FILE: arch/i386/boot/tools/build.c:89:
+static unsigned insize = 0;  /* valid bytes in inbuf */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#579: FILE: arch/i386/boot/tools/build.c:89:
+static unsigned insize = 0;  /* valid bytes in inbuf */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#580: FILE: arch/i386/boot/tools/build.c:90:
+static unsigned inptr = 0;   /* index of next byte to be processed in inbuf */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#580: FILE: arch/i386/boot/tools/build.c:90:
+static unsigned inptr = 0;   /* index of next byte to be processed in inbuf */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#581: FILE: arch/i386/boot/tools/build.c:91:
+static unsigned outcnt = 0;  /* bytes in output buffer */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#581: FILE: arch/i386/boot/tools/build.c:91:
+static unsigned outcnt = 0;  /* bytes in output buffer */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#583: FILE: arch/i386/boot/tools/build.c:93:
+static long bytes_out = 0;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#585: FILE: arch/i386/boot/tools/build.c:95:
+#define get_byte()  (inptr<insize?inbuf[inptr++]:(die("missing input data\n"),0))
                           ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#585: FILE: arch/i386/boot/tools/build.c:95:
+#define get_byte()  (inptr<insize?inbuf[inptr++]:(die("missing input data\n"),0))
                                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#585: FILE: arch/i386/boot/tools/build.c:95:
+#define get_byte()  (inptr<insize?inbuf[inptr++]:(die("missing input data\n"),0))
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#585: FILE: arch/i386/boot/tools/build.c:95:
+#define get_byte()  (inptr<insize?inbuf[inptr++]:(die("missing input data\n"),0))
                                                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#588: FILE: arch/i386/boot/tools/build.c:98:
+#define gzip_mark(x) $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#591: FILE: arch/i386/boot/tools/build.c:101:
+static void die(const char * str, ...);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#617: FILE: arch/i386/boot/tools/build.c:127:
+	unsigned i;

ERROR:SPACING: space required before the open parenthesis '('
#620: FILE: arch/i386/boot/tools/build.c:130:
+	for(i = 0; i < outcnt; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#622: FILE: arch/i386/boot/tools/build.c:132:
+		unsigned char ch;
+		ch = window[i];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#628: FILE: arch/i386/boot/tools/build.c:138:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#633: FILE: arch/i386/boot/tools/build.c:143:
+	if (input_bytes_left > output_bytes_left) {
+		overhang = input_bytes_left - output_bytes_left;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#636: FILE: arch/i386/boot/tools/build.c:146:
+	if (overhang > oh.overhang) {
+		oh.overhang = overhang;
+	}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#640: FILE: arch/i386/boot/tools/build.c:150:
+}
+static size_t compute_unzip_overhang(unsigned char *data, size_t data_size)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#645: FILE: arch/i386/boot/tools/build.c:155:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#646: FILE: arch/i386/boot/tools/build.c:156:
+	
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#654: FILE: arch/i386/boot/tools/build.c:164:
+		die("Compressed kernel sizes(%d,%d) do not match!\n",
+			insize, data_size - offset);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#661: FILE: arch/i386/boot/tools/build.c:171:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#664: FILE: arch/i386/boot/tools/build.c:174:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#671: FILE: arch/i386/boot/tools/build.c:181:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#692: FILE: arch/i386/boot/tools/build.c:303:
+		if ((n=read(fd, bigbuf +off, sz)) <= 0) {
 		      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#692: FILE: arch/i386/boot/tools/build.c:303:
+		if ((n=read(fd, bigbuf +off, sz)) <= 0) {
 		                       ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#692: FILE: arch/i386/boot/tools/build.c:303:
+		if ((n=read(fd, bigbuf +off, sz)) <= 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required before the open parenthesis '('
#706: FILE: arch/i386/boot/tools/build.c:314:
+	while(sz > 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#708: FILE: arch/i386/boot/tools/build.c:316:
+^I^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#710: FILE: arch/i386/boot/tools/build.c:318:
+		if ((n=write(1, bigbuf+off, sz)) <= 0) {
 		      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#710: FILE: arch/i386/boot/tools/build.c:318:
+		if ((n=write(1, bigbuf+off, sz)) <= 0) {
 		                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#710: FILE: arch/i386/boot/tools/build.c:318:
+		if ((n=write(1, bigbuf+off, sz)) <= 0) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000463788.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 44 errors, 27 warnings, 19 checks, 652 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000463788.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
