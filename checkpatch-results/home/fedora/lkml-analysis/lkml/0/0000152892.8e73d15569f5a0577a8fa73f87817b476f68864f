WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
got a completion we searched our command list from the top until we find it.

CHECK:CAMELCASE: Avoid CamelCase: <Header>
#80: FILE: drivers/block/cciss.c:2271:
+	c->Header.Tag.lower = (c->cmdindex << 3);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Tag>
#80: FILE: drivers/block/cciss.c:2271:
+	c->Header.Tag.lower = (c->cmdindex << 3);

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#101: FILE: drivers/block/cciss.c:2368:
+					printk(KERN_WARNING "cciss: controller cciss%d failed, stopping.\n", h->ctlr);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#101: FILE: drivers/block/cciss.c:2368:
+					printk(KERN_WARNING "cciss: controller cciss%d failed, stopping.\n", h->ctlr);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#109: FILE: drivers/block/cciss.c:2376:
+			} else {
 			a &= ~3;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: drivers/block/cciss.c:2378:
+^I^I^I^Iif ((c = h->cmpQ) == NULL) {  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#114: FILE: drivers/block/cciss.c:2378:
+				if ((c = h->cmpQ) == NULL) {  

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:CAMELCASE: Avoid CamelCase: <cmpQ>
#114: FILE: drivers/block/cciss.c:2378:
+				if ((c = h->cmpQ) == NULL) {  

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#115: FILE: drivers/block/cciss.c:2379:
+					printk(KERN_WARNING "cciss: Completion of %08x ignored\n", a1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#115: FILE: drivers/block/cciss.c:2379:
+					printk(KERN_WARNING "cciss: Completion of %08x ignored\n", a1);

CHECK:CAMELCASE: Avoid CamelCase: <CommandList_struct>
#135: FILE: drivers/block/cciss.c:3155:
+	CommandList_struct *c;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#138: FILE: drivers/block/cciss.c:3158:
+	printk(KERN_WARNING "cciss%d: controller not responding.\n", h->ctlr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: drivers/block/cciss.c:3159:
+^Ih->alive = 0;^I/* the controller apparently died... */ $

ERROR:SPACING: space prohibited after that open parenthesis '('
#146: FILE: drivers/block/cciss.c:3166:
+	while( (c = h->reqQ) != NULL ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#146: FILE: drivers/block/cciss.c:3166:
+	while( (c = h->reqQ) != NULL ) {

ERROR:SPACING: space required before the open parenthesis '('
#146: FILE: drivers/block/cciss.c:3166:
+	while( (c = h->reqQ) != NULL ) {

CHECK:CAMELCASE: Avoid CamelCase: <reqQ>
#146: FILE: drivers/block/cciss.c:3166:
+	while( (c = h->reqQ) != NULL ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->reqQ
#147: FILE: drivers/block/cciss.c:3167:
+		removeQ(&(h->reqQ), c);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <Qdepth>
#148: FILE: drivers/block/cciss.c:3168:
+		h->Qdepth--;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: drivers/block/cciss.c:3169:
+^I^IaddQ (&(h->cmpQ), c); $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#149: FILE: drivers/block/cciss.c:3169:
+		addQ (&(h->cmpQ), c); 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->cmpQ
#149: FILE: drivers/block/cciss.c:3169:
+		addQ (&(h->cmpQ), c); 

ERROR:SPACING: space prohibited after that open parenthesis '('
#153: FILE: drivers/block/cciss.c:3173:
+	while( (c = h->cmpQ) != NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#153: FILE: drivers/block/cciss.c:3173:
+	while( (c = h->cmpQ) != NULL ) {

ERROR:SPACING: space required before the open parenthesis '('
#153: FILE: drivers/block/cciss.c:3173:
+	while( (c = h->cmpQ) != NULL ) {

CHECK:CAMELCASE: Avoid CamelCase: <CommandStatus>
#155: FILE: drivers/block/cciss.c:3175:
+		c->err_info->CommandStatus = CMD_HARDWARE_ERR;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#156: FILE: drivers/block/cciss.c:3176:
+		if (c->cmd_type == CMD_RWREQ) {
[...]
+		} else if (c->cmd_type == CMD_IOCTL_PEND)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#167: FILE: drivers/block/cciss.c:3187:
+	return;
+}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/block/cciss_cmd.h:243:
+  long^I^I^I   cmdindex;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: drivers/block/cciss_cmd.h:250:
+  char   pad[PADSIZE];$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000152892.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 12 warnings, 9 checks, 158 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000152892.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
