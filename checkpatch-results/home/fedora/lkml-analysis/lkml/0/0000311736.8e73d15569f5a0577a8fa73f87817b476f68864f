WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
GCC never inline extern inline function redefined by new body (because it is

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'overwriten' may be misspelled - perhaps 'overwritten'?
#137: FILE: parport/parport_pc.c:1149:
+/* GCC is not inlining extern inline function later overwriten to non-inline,
                                                     ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#138: FILE: parport/parport_pc.c:1150:
+/* GCC is not inlining extern inline function later overwriten to non-inline,
+   so we use outlined_ variants here.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#138: FILE: parport/parport_pc.c:1150:
+   so we use outlined_ variants here.  */

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:INLINE: plain inline is preferred over __inline__
#149: FILE: linux/parport_pc.h:44:
+static __inline__ void parport_pc_write_data(struct parport *p, unsigned char d)

WARNING:INLINE: plain inline is preferred over __inline__
#158: FILE: linux/parport_pc.h:52:
+static __inline__ unsigned char parport_pc_read_data(struct parport *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#167: FILE: linux/parport_pc.h:127:
+static __inline__ void parport_pc_data_reverse (struct parport *p)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#167: FILE: linux/parport_pc.h:127:
+static __inline__ void parport_pc_data_reverse (struct parport *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#173: FILE: linux/parport_pc.h:132:
+static __inline__ void parport_pc_data_forward (struct parport *p)

WARNING:INLINE: plain inline is preferred over __inline__
#173: FILE: linux/parport_pc.h:132:
+static __inline__ void parport_pc_data_forward (struct parport *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#179: FILE: linux/parport_pc.h:137:
+static __inline__ void parport_pc_write_control (struct parport *p,

WARNING:INLINE: plain inline is preferred over __inline__
#179: FILE: linux/parport_pc.h:137:
+static __inline__ void parport_pc_write_control (struct parport *p,

WARNING:INLINE: plain inline is preferred over __inline__
#188: FILE: linux/parport_pc.h:155:
+static __inline__ unsigned char parport_pc_read_control(struct parport *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#197: FILE: linux/parport_pc.h:165:
+static __inline__ unsigned char parport_pc_frob_control (struct parport *p,

WARNING:INLINE: plain inline is preferred over __inline__
#197: FILE: linux/parport_pc.h:165:
+static __inline__ unsigned char parport_pc_frob_control (struct parport *p,

WARNING:INLINE: plain inline is preferred over __inline__
#206: FILE: linux/parport_pc.h:192:
+static __inline__ unsigned char parport_pc_read_status(struct parport *p)

WARNING:INLINE: plain inline is preferred over __inline__
#213: FILE: linux/parport_pc.h:198:
+static __inline__ void parport_pc_disable_irq(struct parport *p)

WARNING:INLINE: plain inline is preferred over __inline__
#219: FILE: linux/parport_pc.h:203:
+static __inline__ void parport_pc_enable_irq(struct parport *p)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000311736.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 20 warnings, 0 checks, 176 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000311736.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
