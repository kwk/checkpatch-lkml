WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#40: 
Signed-Off-By: Robert Love <rml@ximian.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#53: FILE: include/linux/kobject.h:61:
+extern int kobject_get_path_len(struct kset *, struct kobject *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kset *' should also have an identifier name
#53: FILE: include/linux/kobject.h:61:
+extern int kobject_get_path_len(struct kset *, struct kobject *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#53: FILE: include/linux/kobject.h:61:
+extern int kobject_get_path_len(struct kset *, struct kobject *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#54: FILE: include/linux/kobject.h:62:
+extern void kobject_fill_path(struct kset *, struct kobject *, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kset *' should also have an identifier name
#54: FILE: include/linux/kobject.h:62:
+extern void kobject_fill_path(struct kset *, struct kobject *, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#54: FILE: include/linux/kobject.h:62:
+extern void kobject_fill_path(struct kset *, struct kobject *, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#54: FILE: include/linux/kobject.h:62:
+extern void kobject_fill_path(struct kset *, struct kobject *, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#54: FILE: include/linux/kobject.h:62:
+extern void kobject_fill_path(struct kset *, struct kobject *, char *, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#86: FILE: lib/kobject.c:167:
+	kobj_path_length = kobject_get_path_len (kset, kobj);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#92: FILE: lib/kobject.c:172:
+	kobject_fill_path (kset, kobj, kobj_path, kobj_path_length);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#101: FILE: lib/kobject.c:630:
+EXPORT_SYMBOL(kobject_get_path_len);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000262674.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 10 warnings, 2 checks, 49 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000262674.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
