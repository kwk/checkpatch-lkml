WARNING:CONST_STRUCT: struct tty_operations should normally be const
#74: FILE: include/linux/tty_driver.h:186:
+	struct tty_operations *tty_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (tty->driver->tty_ops->hangup)
#118: FILE: drivers/char/tty_io.c:514:
+		(tty->driver->tty_ops->hangup)(tty);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (tty->driver->tty_ops->stop)
#129: FILE: drivers/char/tty_io.c:612:
+		(tty->driver->tty_ops->stop)(tty);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (tty->driver->tty_ops->start)
#140: FILE: drivers/char/tty_io.c:626:
+		(tty->driver->tty_ops->start)(tty);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#163: FILE: drivers/char/tty_io.c:1133:
+		tty->driver->tty_ops->close(tty, filp);
 		                                 ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#174: FILE: drivers/char/tty_io.c:1388:
+		retval = tty->driver->tty_ops->open(tty, filp);
 		                                         ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (tty->driver->tty_ops->ioctl)
#284: FILE: drivers/char/tty_io.c:1864:
+		int retval = (tty->driver->tty_ops->ioctl)(tty, file, cmd, arg);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#478: FILE: drivers/bluetooth/hci_ldisc.c:387:
+	if (test_and_clear_bit(TTY_THROTTLED,&tty->flags) &&
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#478: FILE: drivers/bluetooth/hci_ldisc.c:387:
+	if (test_and_clear_bit(TTY_THROTTLED,&tty->flags) &&
 	                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: drivers/char/cyclades.c:2845:
+    if (tty->driver->tty_ops && tty->driver->tty_ops->flush_buffer)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#494: FILE: drivers/char/cyclades.c:2846:
+        tty->driver->tty_ops->flush_buffer(tty);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: drivers/char/cyclades.c:2846:
+        tty->driver->tty_ops->flush_buffer(tty);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#576: FILE: drivers/char/ip2main.c:1709:
+^Iif (tty->driver->tty_ops && tty->driver->tty_ops->flush_buffer) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#619: FILE: drivers/char/n_hdlc.c:354:
+		tty->driver->tty_ops->flush_buffer (tty);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: drivers/char/n_r3964.c:421:
+   if(tty->driver->tty_ops && tty->driver->tty_ops->put_char)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#651: FILE: drivers/char/n_r3964.c:421:
+   if(tty->driver->tty_ops && tty->driver->tty_ops->put_char)
    {

ERROR:SPACING: space required before the open parenthesis '('
#651: FILE: drivers/char/n_r3964.c:421:
+   if(tty->driver->tty_ops && tty->driver->tty_ops->put_char)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#651: FILE: drivers/char/n_r3964.c:421:
+   if(tty->driver->tty_ops && tty->driver->tty_ops->put_char)
    {
+      tty->driver->tty_ops->put_char(tty, ch);
    }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#654: FILE: drivers/char/n_r3964.c:423:
+      tty->driver->tty_ops->put_char(tty, ch);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: drivers/char/n_r3964.c:435:
+   if(tty->driver->tty_ops && tty->driver->tty_ops->flush_chars)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#663: FILE: drivers/char/n_r3964.c:435:
+   if(tty->driver->tty_ops && tty->driver->tty_ops->flush_chars)
    {

ERROR:SPACING: space required before the open parenthesis '('
#663: FILE: drivers/char/n_r3964.c:435:
+   if(tty->driver->tty_ops && tty->driver->tty_ops->flush_chars)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#663: FILE: drivers/char/n_r3964.c:435:
+   if(tty->driver->tty_ops && tty->driver->tty_ops->flush_chars)
    {
+      tty->driver->tty_ops->flush_chars(tty);
    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#666: FILE: drivers/char/n_r3964.c:437:
+      tty->driver->tty_ops->flush_chars(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: drivers/char/n_r3964.c:510:
+   if(tty->driver->tty_ops && tty->driver->tty_ops->write_room)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#676: FILE: drivers/char/n_r3964.c:510:
+   if(tty->driver->tty_ops && tty->driver->tty_ops->write_room)
+      room=tty->driver->tty_ops->write_room(tty);

ERROR:SPACING: space required before the open parenthesis '('
#676: FILE: drivers/char/n_r3964.c:510:
+   if(tty->driver->tty_ops && tty->driver->tty_ops->write_room)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: drivers/char/n_r3964.c:511:
+      room=tty->driver->tty_ops->write_room(tty);$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#677: FILE: drivers/char/n_r3964.c:511:
+      room=tty->driver->tty_ops->write_room(tty);
           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#759: FILE: drivers/char/n_tty.c:303:
+^Ii = tty->driver->tty_ops->write(tty, 0, buf, i);^I$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 't' - possible side-effects?
#858: FILE: drivers/char/rocket_int.h:1299:
+#define TTY_DRIVER_FLUSH_BUFFER_EXISTS(t) (t->driver->tty_ops && t->driver->tty_ops->flush_buffer)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 't' may be better as '(t)' to avoid precedence issues
#858: FILE: drivers/char/rocket_int.h:1299:
+#define TTY_DRIVER_FLUSH_BUFFER_EXISTS(t) (t->driver->tty_ops && t->driver->tty_ops->flush_buffer)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 't' - possible side-effects?
#859: FILE: drivers/char/rocket_int.h:1300:
+#define TTY_DRIVER_FLUSH_BUFFER(t) t->driver->tty_ops->flush_buffer(t)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 't' may be better as '(t)' to avoid precedence issues
#859: FILE: drivers/char/rocket_int.h:1300:
+#define TTY_DRIVER_FLUSH_BUFFER(t) t->driver->tty_ops->flush_buffer(t)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#956: FILE: drivers/net/ppp_async.c:332:
 	if (test_and_clear_bit(TTY_THROTTLED, &tty->flags)
+	    && tty->driver->tty_ops && tty->driver->tty_ops->unthrottle)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#979: FILE: drivers/net/ppp_synctty.c:385:
 	if (test_and_clear_bit(TTY_THROTTLED, &tty->flags)
+	    && tty->driver->tty_ops && tty->driver->tty_ops->unthrottle)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1117: FILE: drivers/net/hamradio/6pack.c:929:
+			actual = sp->tty->driver->tty_ops->write(sp->tty, 0, sp->xbuff, sp->status2);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1146: FILE: drivers/net/hamradio/6pack.c:1009:
+					sp->tty->driver->tty_ops->write(sp->tty, 0, &sp->led_state, 1);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1173: FILE: drivers/net/hamradio/mkiss.c:403:
+		actual = ax->mkiss->tty->driver->tty_ops->write(ax->mkiss->tty, 0, ax->mkiss->xbuff, count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1248: FILE: drivers/net/irda/irtty-sir.c:205:
+	ASSERT(priv->tty->driver->tty_ops &&
+		priv->tty->driver->tty_ops->tiocmset, return -1;);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1263: FILE: drivers/net/irda/irtty-sir.c:238:
+	if (tty->driver->tty_ops->write_room) {
[...]
 	else
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1383: FILE: drivers/net/irda/irtty.c:683:
+^I^Iactual = self->tty->driver->tty_ops->write(self->tty, 0, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1392: FILE: drivers/net/irda/irtty.c:736:
+^I^Iactual = tty->driver->tty_ops->write(tty, 0, self->tx_buff.data, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1401: FILE: drivers/net/irda/irtty.c:821:
+^Iif (tty->driver->tty_ops->ioctl(tty, NULL, TIOCMSET, (unsigned long) &arg)) { $

CHECK:SPACING: No space is necessary after a cast
#1401: FILE: drivers/net/irda/irtty.c:821:
+	if (tty->driver->tty_ops->ioctl(tty, NULL, TIOCMSET, (unsigned long) &arg)) { 

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1401: FILE: drivers/net/irda/irtty.c:821:
+	if (tty->driver->tty_ops->ioctl(tty, NULL, TIOCMSET, (unsigned long) &arg)) { 
 		IRDA_DEBUG(2, "%s(), error doing ioctl!\n", __FUNCTION__);
 	}

WARNING:CONST_STRUCT: struct tty_operations should normally be const
#1432: FILE: drivers/net/wan/pc300_tty.c:182:
+static struct tty_operations cpc_ops = {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1476: FILE: drivers/net/wan/pc300_tty.c:225:
+			printk("%s-tty: Failed memory alloc serial driver! ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1477: FILE: drivers/net/wan/pc300_tty.c:226:
+			printk("%s-tty: Failed memory alloc serial driver! ",
+				((struct net_device*)(pc300dev->hdlc))->name);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1477: FILE: drivers/net/wan/pc300_tty.c:226:
+				((struct net_device*)(pc300dev->hdlc))->name);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1490: FILE: drivers/net/wan/pc300_tty.c:239:
+		serial_drv->init_termios.c_cflag = B9600|CS8|CREAD|HUPCL|CLOCAL;
 		                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1490: FILE: drivers/net/wan/pc300_tty.c:239:
+		serial_drv->init_termios.c_cflag = B9600|CS8|CREAD|HUPCL|CLOCAL;
 		                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1490: FILE: drivers/net/wan/pc300_tty.c:239:
+		serial_drv->init_termios.c_cflag = B9600|CS8|CREAD|HUPCL|CLOCAL;
 		                                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1490: FILE: drivers/net/wan/pc300_tty.c:239:
+		serial_drv->init_termios.c_cflag = B9600|CS8|CREAD|HUPCL|CLOCAL;
 		                                                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1497: FILE: drivers/net/wan/pc300_tty.c:245:
+^I^Iif (tty_register_driver(serial_drv)) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1510: FILE: drivers/net/wan/pc300_tty.c:418:
+^I^Iif ((res=tty_unregister_driver(serial_drv))) { $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1510: FILE: drivers/net/wan/pc300_tty.c:418:
+		if ((res=tty_unregister_driver(serial_drv))) { 
 		        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1510: FILE: drivers/net/wan/pc300_tty.c:418:
+		if ((res=tty_unregister_driver(serial_drv))) { 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1523: FILE: drivers/net/wan/pc300_tty.c:666:
+^I^Iif ((res=tty_unregister_driver(serial_drv))) { $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1523: FILE: drivers/net/wan/pc300_tty.c:666:
+		if ((res=tty_unregister_driver(serial_drv))) { 
 		        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1523: FILE: drivers/net/wan/pc300_tty.c:666:
+		if ((res=tty_unregister_driver(serial_drv))) { 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1542: FILE: drivers/net/wan/pc300_tty.c:1066:
+^I^I^Iif ((res=tty_unregister_driver(serial_drv))) { $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1542: FILE: drivers/net/wan/pc300_tty.c:1066:
+			if ((res=tty_unregister_driver(serial_drv))) { 
 			        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1542: FILE: drivers/net/wan/pc300_tty.c:1066:
+			if ((res=tty_unregister_driver(serial_drv))) { 

ERROR:SPACING: space prohibited after that open parenthesis '('
#1651: FILE: drivers/usb/serial/digi_acceleport.c:1583:
+	if( tty->driver->tty_ops && tty->driver->tty_ops->flush_buffer )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1651: FILE: drivers/usb/serial/digi_acceleport.c:1583:
+	if( tty->driver->tty_ops && tty->driver->tty_ops->flush_buffer )

ERROR:SPACING: space required before the open parenthesis '('
#1651: FILE: drivers/usb/serial/digi_acceleport.c:1583:
+	if( tty->driver->tty_ops && tty->driver->tty_ops->flush_buffer )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1652: FILE: drivers/usb/serial/digi_acceleport.c:1584:
+		tty->driver->tty_ops->flush_buffer( tty );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1652: FILE: drivers/usb/serial/digi_acceleport.c:1584:
+		tty->driver->tty_ops->flush_buffer( tty );

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000359545.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 28 errors, 23 warnings, 18 checks, 1473 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000359545.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
