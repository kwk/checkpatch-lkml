WARNING:TYPO_SPELLING: 'finishs' may be misspelled - perhaps 'finishes'?
#32: 
And this finishs the high res timers code.
         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#95: 
diff -urP -I \$Id:.*Exp \$ -X /usr/src/patch.exclude linux-2.5.52-bk4-i386/include/linux/posix-timers.h linux/include/linux/posix-timers.h

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#108: FILE: include/linux/posix-timers.h:24:
+};
+static inline void

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'timer' - possible side-effects?
#119: FILE: include/linux/posix-timers.h:35:
+#define posix_time_before(timer, now) \
+         ( {long diff = (long)(timer)->expires - (long)(now)->jiffies;  \
+           (diff < 0) ||                                      \
+	   ((diff == 0) && ((timer)->sub_expires < (now)->sub_jiffie)); })

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'now' - possible side-effects?
#119: FILE: include/linux/posix-timers.h:35:
+#define posix_time_before(timer, now) \
+         ( {long diff = (long)(timer)->expires - (long)(now)->jiffies;  \
+           (diff < 0) ||                                      \
+	   ((diff == 0) && ((timer)->sub_expires < (now)->sub_jiffie)); })

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: include/linux/posix-timers.h:36:
+         ( {long diff = (long)(timer)->expires - (long)(now)->jiffies;  \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: include/linux/posix-timers.h:36:
+         ( {long diff = (long)(timer)->expires - (long)(now)->jiffies;  \$

ERROR:SPACING: space prohibited after that open parenthesis '('
#120: FILE: include/linux/posix-timers.h:36:
+         ( {long diff = (long)(timer)->expires - (long)(now)->jiffies;  \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: include/linux/posix-timers.h:37:
+           (diff < 0) ||                                      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: include/linux/posix-timers.h:37:
+           (diff < 0) ||                                      \$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'timr' - possible side-effects?
#124: FILE: include/linux/posix-timers.h:40:
+#define posix_bump_timer(timr) do { \
+          (timr)->it_timer.expires += (timr)->it_incr; \
+          (timr)->it_timer.sub_expires += (timr)->it_sub_incr; \
+          if (((timr)->it_timer.sub_expires - cycles_per_jiffies) >= 0){ \
+		  (timr)->it_timer.sub_expires -= cycles_per_jiffies; \
+		  (timr)->it_timer.expires++; \
+	  }                                 \
+          (timr)->it_overrun++;               \
+        }while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: include/linux/posix-timers.h:41:
+          (timr)->it_timer.expires += (timr)->it_incr; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: include/linux/posix-timers.h:41:
+          (timr)->it_timer.expires += (timr)->it_incr; \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: include/linux/posix-timers.h:42:
+          (timr)->it_timer.sub_expires += (timr)->it_sub_incr; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: include/linux/posix-timers.h:42:
+          (timr)->it_timer.sub_expires += (timr)->it_sub_incr; \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: include/linux/posix-timers.h:43:
+          if (((timr)->it_timer.sub_expires - cycles_per_jiffies) >= 0){ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: include/linux/posix-timers.h:43:
+          if (((timr)->it_timer.sub_expires - cycles_per_jiffies) >= 0){ \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 18)
#127: FILE: include/linux/posix-timers.h:43:
+          if (((timr)->it_timer.sub_expires - cycles_per_jiffies) >= 0){ \
+		  (timr)->it_timer.sub_expires -= cycles_per_jiffies; \

ERROR:SPACING: space required before the open brace '{'
#127: FILE: include/linux/posix-timers.h:43:
+          if (((timr)->it_timer.sub_expires - cycles_per_jiffies) >= 0){ \

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: include/linux/posix-timers.h:47:
+          (timr)->it_overrun++;               \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: include/linux/posix-timers.h:47:
+          (timr)->it_overrun++;               \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: include/linux/posix-timers.h:48:
+        }while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: include/linux/posix-timers.h:48:
+        }while (0)$

ERROR:SPACING: space required after that close brace '}'
#132: FILE: include/linux/posix-timers.h:48:
+        }while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: include/linux/sched.h:293:
+        int it_sub_incr;                /* sub jiffie part of interval */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: include/linux/sched.h:293:
+        int it_sub_incr;                /* sub jiffie part of interval */$

ERROR:SPACING: exactly one space required after that #ifdef
#190: FILE: kernel/posix-timers.c:186:
+#ifdef	 final_clock_init

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#201: FILE: kernel/posix-timers.c:228:
+	return (nsec_to_arch_cycles(nsec % (NSEC_PER_SEC / HZ)));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#203: FILE: kernel/posix-timers.c:230:
 }
+#ifdef CONFIG_HIGH_RES_TIMERS

CHECK:SPACING: No space is necessary after a cast
#212: FILE: kernel/posix-timers.c:239:
+					res, (unsigned long *) &timer->it_incr);

CHECK:SPACING: No space is necessary after a cast
#213: FILE: kernel/posix-timers.c:240:
+	if ((unsigned long) timer->it_incr > MAX_JIFFY_OFFSET)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'timr->it_incr == 0'
#244: FILE: kernel/posix-timers.c:334:
+	if ((timr->it_incr == 0) IF_HIGH_RES(&&(timr->it_sub_incr == 0))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#261: FILE: kernel/posix-timers.c:656:
+			    timr->it_timer.expires = expires = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TABSTOP: Statements should start on a tabstop
#277: FILE: kernel/posix-timers.c:680:
+		    if (cur_setting->it_value.tv_nsec < 0) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 20)
#277: FILE: kernel/posix-timers.c:680:
+		    if (cur_setting->it_value.tv_nsec < 0) {
+		    cur_setting->it_value.tv_nsec += NSEC_PER_SEC;

ERROR:SPACING: space required after that ';' (ctx:OxV)
#279: FILE: kernel/posix-timers.c:682:
+		    cur_setting->it_value.tv_sec--;}
 		                                  ^

WARNING:TABSTOP: Statements should start on a tabstop
#280: FILE: kernel/posix-timers.c:683:
+		    if ((cur_setting->it_value.tv_nsec - NSEC_PER_SEC) >= 0) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 20)
#280: FILE: kernel/posix-timers.c:683:
+		    if ((cur_setting->it_value.tv_nsec - NSEC_PER_SEC) >= 0) {
+		    cur_setting->it_value.tv_nsec -= NSEC_PER_SEC;

ERROR:SPACING: space required after that ';' (ctx:OxV)
#282: FILE: kernel/posix-timers.c:685:
+		    cur_setting->it_value.tv_sec++;}
 		                                  ^

WARNING:TABSTOP: Statements should start on a tabstop
#285: FILE: kernel/posix-timers.c:688:
+		    if ((cur_setting->it_interval.tv_nsec - NSEC_PER_SEC) >= 0) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 20)
#285: FILE: kernel/posix-timers.c:688:
+		    if ((cur_setting->it_interval.tv_nsec - NSEC_PER_SEC) >= 0) {
+		    cur_setting->it_interval.tv_nsec -= NSEC_PER_SEC;

ERROR:SPACING: space required after that ';' (ctx:OxV)
#287: FILE: kernel/posix-timers.c:690:
+		    cur_setting->it_interval.tv_sec++;}
 		                                     ^

WARNING:SPACING: space prohibited before semicolon
#288: FILE: kernel/posix-timers.c:691:
+	) ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#317: FILE: kernel/posix-timers.c:874:
+^I * so the timer notify function is called directly. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: exactly one space required after that #ifndef
#322: FILE: kernel/posix-timers.c:879:
+#ifndef	 CONFIG_HIGH_RES_TIMERS

WARNING:LINE_SPACING: Missing a blank line after declarations
#346: FILE: kernel/posix-timers.c:1051:
+		unsigned long flags;
+		write_lock_irqsave(&xtime_lock, flags);

WARNING:TABSTOP: Statements should start on a tabstop
#400: FILE: kernel/posix-timers.c:1113:
+	    do {

ERROR:SPACING: space required after that ';' (ctx:OxV)
#413: FILE: kernel/posix-timers.c:1125:
+		    sub_jiff_offset -= cycles_per_jiffies; jiffies_64_f++;}
 		                                                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#435: FILE: kernel/posix-timers.c:1327:
+		if ((abs ||

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '|' (ctx:BxV)
#437: FILE: kernel/posix-timers.c:1329:
+		       IF_HIGH_RES(|new_timer.sub_expires))) &&
 		                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:BxV)
#456: FILE: kernel/posix-timers.c:1345:
+		    IF_HIGH_RES(|new_timer.sub_expires)) {
 		                ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000405615.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 20 warnings, 11 checks, 353 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000405615.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
