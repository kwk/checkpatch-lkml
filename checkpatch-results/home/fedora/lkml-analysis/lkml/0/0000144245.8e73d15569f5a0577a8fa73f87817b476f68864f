WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#111: FILE: include/linux/mm.h:731:
+void print_bad_pte(struct vm_area_struct *, pte_t, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pte_t' should also have an identifier name
#111: FILE: include/linux/mm.h:731:
+void print_bad_pte(struct vm_area_struct *, pte_t, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#111: FILE: include/linux/mm.h:731:
+void print_bad_pte(struct vm_area_struct *, pte_t, unsigned long);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#124: FILE: mm/madvise.c:126:
+	if (vma->vm_flags & (VM_LOCKED|VM_HUGETLB|VM_RESERVED))
 	                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#124: FILE: mm/madvise.c:126:
+	if (vma->vm_flags & (VM_LOCKED|VM_HUGETLB|VM_RESERVED))
 	                                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#144: FILE: mm/memory.c:354:
+	printk(KERN_ERR "Bad pte = %08llx, process = %s, "

WARNING:SPLIT_STRING: quoted string split across lines
#145: FILE: mm/memory.c:355:
+	printk(KERN_ERR "Bad pte = %08llx, process = %s, "
+			"vm_flags = %lx, vaddr = %lx\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#215: FILE: mm/memory.c:470:
+		anon = copy_one_pte(dst_mm, src_mm, dst_pte, src_pte, vma,addr);
 		                                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: mm/memory.c:565:
+static void zap_pte_range(struct mmu_gather *tlb,
+				struct vm_area_struct *vma, pmd_t *pmd,

WARNING:LINE_SPACING: Missing a blank line after declarations
#244: FILE: mm/memory.c:583:
+				unsigned long pfn = pte_pfn(ptent);
+				if (unlikely(!pfn_valid(pfn)))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: mm/memory.c:645:
+static inline void zap_pmd_range(struct mmu_gather *tlb,
+				struct vm_area_struct *vma, pud_t *pud,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: mm/memory.c:662:
+static inline void zap_pud_range(struct mmu_gather *tlb,
+				struct vm_area_struct *vma, pgd_t *pgd,

WARNING:LINE_SPACING: Missing a blank line after declarations
#347: FILE: mm/memory.c:1080:
+		pte_t zero_pte = pte_wrprotect(mk_pte(page, prot));
+		page_cache_get(page);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#367: FILE: mm/memory.c:1286:
+	BUG_ON(vma->vm_flags & VM_RESERVED);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space prohibited before that close parenthesis ')'
#471: FILE: mm/page_alloc.c:144:
+			1 << PG_reserved );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#489: FILE: mm/page_alloc.c:357:
+			1 << PG_reserved )))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#499: FILE: mm/page_alloc.c:486:
+			1 << PG_reserved )))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#581: FILE: mm/fremap.c:69:
+	BUG_ON(vma->vm_flags & VM_RESERVED);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#590: FILE: mm/fremap.c:128:
+	BUG_ON(vma->vm_flags & VM_RESERVED);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#649: FILE: mm/msync.c:109:
+	if (vma->vm_flags & (VM_HUGETLB|VM_RESERVED))
 	                               ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#672: FILE: mm/rmap.c:469:
+	BUG_ON(!pfn_valid(page_to_pfn(page)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#724: FILE: drivers/scsi/sg.c:1893:
+		BUG_ON(PageReserved(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#749: FILE: drivers/scsi/st.c:4530:
+		BUG_ON(PageReserved(page));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#804: FILE: mm/mmap.c:1089:
+			printk(KERN_WARNING "program %s is using MAP_PRIVATE, "

WARNING:SPLIT_STRING: quoted string split across lines
#805: FILE: mm/mmap.c:1090:
+			printk(KERN_WARNING "program %s is using MAP_PRIVATE, "
+				"PROT_WRITE mmap of VM_RESERVED memory, which "

WARNING:SPLIT_STRING: quoted string split across lines
#806: FILE: mm/mmap.c:1091:
+				"PROT_WRITE mmap of VM_RESERVED memory, which "
+				"is deprecated. Please report this to "

ERROR:SPACING: space required after that ',' (ctx:VxV)
#807: FILE: mm/mmap.c:1092:
+				"linux-kernel@vger.kernel.org\n",current->comm);
 				                                ^

WARNING:SPLIT_STRING: quoted string split across lines
#807: FILE: mm/mmap.c:1092:
+				"is deprecated. Please report this to "
+				"linux-kernel@vger.kernel.org\n",current->comm);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#825: FILE: mm/mprotect.c:129:
+			BUG_ON(oldflags & VM_WRITE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#826: FILE: mm/mprotect.c:130:
+			printk(KERN_WARNING "program %s is using MAP_PRIVATE, "

WARNING:SPLIT_STRING: quoted string split across lines
#827: FILE: mm/mprotect.c:131:
+			printk(KERN_WARNING "program %s is using MAP_PRIVATE, "
+				"PROT_WRITE mprotect of VM_RESERVED memory, "

WARNING:SPLIT_STRING: quoted string split across lines
#828: FILE: mm/mprotect.c:132:
+				"PROT_WRITE mprotect of VM_RESERVED memory, "
+				"which is deprecated. Please report this to "

ERROR:SPACING: space required after that ',' (ctx:VxV)
#829: FILE: mm/mprotect.c:133:
+				"linux-kernel@vger.kernel.org\n",current->comm);
 				                                ^

WARNING:SPLIT_STRING: quoted string split across lines
#829: FILE: mm/mprotect.c:133:
+				"which is deprecated. Please report this to "
+				"linux-kernel@vger.kernel.org\n",current->comm);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#857: FILE: mm/mempolicy.c:227:
+static int check_pte_range(struct vm_area_struct *vma, pmd_t *pmd,
 		unsigned long addr, unsigned long end, nodemask_t *nodes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#888: FILE: mm/mempolicy.c:255:
+static inline int check_pmd_range(struct vm_area_struct *vma, pud_t *pud,
 		unsigned long addr, unsigned long end, nodemask_t *nodes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#904: FILE: mm/mempolicy.c:272:
+static inline int check_pud_range(struct vm_area_struct *vma, pgd_t *pgd,
 		unsigned long addr, unsigned long end, nodemask_t *nodes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#920: FILE: mm/mempolicy.c:289:
+static inline int check_pgd_range(struct vm_area_struct *vma,
 		unsigned long addr, unsigned long end, nodemask_t *nodes)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000144245.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 22 warnings, 10 checks, 889 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000144245.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
