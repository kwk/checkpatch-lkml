ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#46: 
--- a/drivers/input/evdev.c	Tue Oct  8 15:26:21 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPACING: missing space after struct definition
#88: FILE: drivers/input/evdev.c:23:
+struct evdev{

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around evdev_table[i]->handle
#163: FILE: drivers/input/evdev.c:110:
+	if ((accept_err = input_accept_process(&(evdev_table[i]->handle), file)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#163: FILE: drivers/input/evdev.c:110:
+	if ((accept_err = input_accept_process(&(evdev_table[i]->handle), file)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: drivers/input/evdev.c:156:
+	retval = wait_event_interruptible(list->evdev->wait,
+		list->head != list->tail && list->evdev->exist);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#458: FILE: drivers/input/joydev.c:4:
+ * Copyright (c) 1999-2002 Vojtech Pavlik $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#459: FILE: drivers/input/joydev.c:5:
+ * Copyright (c) 1999 Colin Van Dyke $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#600: FILE: drivers/input/joydev.c:227:
+	if (list->startup == joydev->nabs + joydev->nkey
[...]
+			return -EAGAIN;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#601: FILE: drivers/input/joydev.c:228:
+	if (list->startup == joydev->nabs + joydev->nkey
+		&& list->head == list->tail && (file->f_flags & O_NONBLOCK))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#608: FILE: drivers/input/joydev.c:232:
+	retval = wait_event_interruptible(list->joydev->wait, list->joydev->exist
+		&& (list->startup < joydev->nabs + joydev->nkey || list->head != list->tail));

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#710: FILE: drivers/input/mousedev.c:83:
 	while (*mousedev) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#927: FILE: drivers/input/tsdev.c:148:
+	retval = wait_event_interruptible(list->tsdev->wait,
+		(list->head != list->tail) && list->tsdev->exist);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#941: FILE: drivers/input/tsdev.c:157:
+		if (copy_to_user (buffer + retval, list->event + list->tail, sizeof(TS_EVENT)))

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#977: FILE: drivers/input/tsdev.c:225:
+					list->oldx = ((value - handle->dev->absmin[ABS_X]) * xres / size);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#997: FILE: drivers/input/tsdev.c:234:
+					list->oldy = ((value - handle->dev->absmin[ABS_Y]) * yres / size);

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#1010: FILE: drivers/input/tsdev.c:239:
+				list->pendown = ((value > handle->dev-> absmin[ABS_PRESSURE])) ?
 				                                     ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425531.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 5 warnings, 6 checks, 947 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425531.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
