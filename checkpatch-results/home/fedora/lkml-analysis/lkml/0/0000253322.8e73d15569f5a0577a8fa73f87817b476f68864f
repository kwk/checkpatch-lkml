WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
Sorry about the white space, KMail apparently likes to butcher the text. These 

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#63: 
--- a/Documentation/00-INDEX	2004-09-03 17:41:06 -04:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#117: FILE: include/linux/watch64.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'inclue' may be misspelled - perhaps 'include'?
#118: FILE: include/linux/watch64.h:2:
+ *  inclue/linux/watch64.h
     ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#137: FILE: include/linux/watch64.h:21:
+#define WATCH64_INTERVAL	(HZ/10)
                         	   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#138: FILE: include/linux/watch64.h:22:
+#define WATCH64_MINIMUM		(HZ/20)
                        		   ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#152: FILE: include/linux/watch64.h:36:
+	u_int64_t total;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#167: FILE: include/linux/watch64.h:51:
+int watch64_register(unsigned long* ptr, unsigned int interval);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#168: FILE: include/linux/watch64.h:52:
+int watch64_unregister(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#168: FILE: include/linux/watch64.h:52:
+int watch64_unregister(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#169: FILE: include/linux/watch64.h:53:
+void watch64_rcufree(struct rcu_head* p);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#170: FILE: include/linux/watch64.h:54:
+struct watch64* watch64_find(unsigned long* ptr);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#170: FILE: include/linux/watch64.h:54:
+struct watch64* watch64_find(unsigned long* ptr);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#171: FILE: include/linux/watch64.h:55:
+inline struct watch64* __watch64_find(unsigned long* ptr);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#171: FILE: include/linux/watch64.h:55:
+inline struct watch64* __watch64_find(unsigned long* ptr);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#172: FILE: include/linux/watch64.h:56:
+int watch64_disable(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#172: FILE: include/linux/watch64.h:56:
+int watch64_disable(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#173: FILE: include/linux/watch64.h:57:
+inline int __watch64_disable(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#173: FILE: include/linux/watch64.h:57:
+inline int __watch64_disable(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#174: FILE: include/linux/watch64.h:58:
+int watch64_enable(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#174: FILE: include/linux/watch64.h:58:
+int watch64_enable(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#175: FILE: include/linux/watch64.h:59:
+inline int __watch64_enable(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#175: FILE: include/linux/watch64.h:59:
+inline int __watch64_enable(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#176: FILE: include/linux/watch64.h:60:
+int watch64_toggle(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#176: FILE: include/linux/watch64.h:60:
+int watch64_toggle(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#177: FILE: include/linux/watch64.h:61:
+inline u_int64_t watch64_getval(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#177: FILE: include/linux/watch64.h:61:
+inline u_int64_t watch64_getval(unsigned long* ptr, struct watch64* st);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#196: FILE: kernel/watch64.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#197: FILE: kernel/watch64.c:2:
+ *  kernel/watch64.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: kernel/watch64.c:11:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: kernel/watch64.c:11:
+ $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#239: FILE: kernel/watch64.c:44:
+int watch64_register(unsigned long* ptr, unsigned int interval)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#244: FILE: kernel/watch64.c:49:
+int watch64_unregister(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#244: FILE: kernel/watch64.c:49:
+int watch64_unregister(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#249: FILE: kernel/watch64.c:54:
+void watch64_rcufree(void* p)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#253: FILE: kernel/watch64.c:58:
+struct watch64* watch64_find(unsigned long* ptr)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#253: FILE: kernel/watch64.c:58:
+struct watch64* watch64_find(unsigned long* ptr)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#258: FILE: kernel/watch64.c:63:
+struct watch64* __watch64_find(unsigned long* ptr)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#258: FILE: kernel/watch64.c:63:
+struct watch64* __watch64_find(unsigned long* ptr)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#263: FILE: kernel/watch64.c:68:
+int watch64_disable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#263: FILE: kernel/watch64.c:68:
+int watch64_disable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#268: FILE: kernel/watch64.c:73:
+int __watch64_disable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#268: FILE: kernel/watch64.c:73:
+int __watch64_disable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#273: FILE: kernel/watch64.c:78:
+int watch64_enable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#273: FILE: kernel/watch64.c:78:
+int watch64_enable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#278: FILE: kernel/watch64.c:83:
+int __watch64_enable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#278: FILE: kernel/watch64.c:83:
+int __watch64_enable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#283: FILE: kernel/watch64.c:88:
+int watch64_toggle(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#283: FILE: kernel/watch64.c:88:
+int watch64_toggle(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#288: FILE: kernel/watch64.c:93:
+inline u_int64_t watch64_getval(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#288: FILE: kernel/watch64.c:93:
+inline u_int64_t watch64_getval(unsigned long* ptr, struct watch64* st)

CHECK:SPACING: No space is necessary after a cast
#290: FILE: kernel/watch64.c:95:
+	return (u_int64_t) *ptr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: kernel/watch64.c:107:
+^I$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#303: FILE: kernel/watch64.c:108:
+	if (watch64_setup==WATCH64_MAGIC) {
 	                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: kernel/watch64.c:112:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#308: FILE: kernel/watch64.c:113:
+	printk(KERN_WARNING "watch64: 2003/08/22 Josef 'Jeff' Sipek "

WARNING:SPLIT_STRING: quoted string split across lines
#309: FILE: kernel/watch64.c:114:
+	printk(KERN_WARNING "watch64: 2003/08/22 Josef 'Jeff' Sipek "
+					"<jeffpc@optonline.net>\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#310: FILE: kernel/watch64.c:115:
+	printk(KERN_WARNING "watch64: Enabling Watch64 extensions...");

CHECK:SPACING: No space is necessary after a cast
#314: FILE: kernel/watch64.c:119:
+	watch64_timer.data = (unsigned long) NULL;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#318: FILE: kernel/watch64.c:123:
+	printk("done.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: kernel/watch64.c:124:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: kernel/watch64.c:126:
+^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#331: FILE: kernel/watch64.c:136:
+	struct list_head* entry;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#332: FILE: kernel/watch64.c:137:
+	struct watch64* watch_struct;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: kernel/watch64.c:145:
+^I^I$

CHECK:SPACING: No space is necessary after a cast
#348: FILE: kernel/watch64.c:153:
+			watch_struct->total += ((u_int64_t) 1<<BITS_PER_LONG)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#348: FILE: kernel/watch64.c:153:
+			watch_struct->total += ((u_int64_t) 1<<BITS_PER_LONG)
 			                                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: kernel/watch64.c:160:
+^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#363: FILE: kernel/watch64.c:168:
+int watch64_register(unsigned long* ptr, unsigned int interval)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#365: FILE: kernel/watch64.c:170:
+	struct watch64* temp;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: kernel/watch64.c:171:
+^I$

CHECK:SPACING: No space is necessary after a cast
#367: FILE: kernel/watch64.c:172:
+	temp = (struct watch64*) kmalloc(sizeof(struct watch64),GFP_ATOMIC);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#367: FILE: kernel/watch64.c:172:
+	temp = (struct watch64*) kmalloc(sizeof(struct watch64),GFP_ATOMIC);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#367: FILE: kernel/watch64.c:172:
+	temp = (struct watch64*) kmalloc(sizeof(struct watch64),GFP_ATOMIC);
 	                                                       ^

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#367: FILE: kernel/watch64.c:172:
+	temp = (struct watch64*) kmalloc(sizeof(struct watch64),GFP_ATOMIC);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*temp)...) over kmalloc(sizeof(struct watch64)...)
#367: FILE: kernel/watch64.c:172:
+	temp = (struct watch64*) kmalloc(sizeof(struct watch64),GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#372: FILE: kernel/watch64.c:177:
+	if (watch64_setup!=WATCH64_MAGIC)
 	                 ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#378: FILE: kernel/watch64.c:183:
+	if (interval==0)
 	            ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#378: FILE: kernel/watch64.c:183:
+	if (interval==0)
[...]
+	else if (interval<WATCH64_MINIMUM) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#380: FILE: kernel/watch64.c:185:
+	else if (interval<WATCH64_MINIMUM) {
 	                 ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#382: FILE: kernel/watch64.c:187:
+		printk("watch64: attempted to add new watch with "

ERROR:SPACING: space required after that ',' (ctx:VxV)
#383: FILE: kernel/watch64.c:188:
+				"interval below %d jiffies",WATCH64_MINIMUM);
 				                           ^

WARNING:SPLIT_STRING: quoted string split across lines
#383: FILE: kernel/watch64.c:188:
+		printk("watch64: attempted to add new watch with "
+				"interval below %d jiffies",WATCH64_MINIMUM);

CHECK:BRACES: Unbalanced braces around else statement
#384: FILE: kernel/watch64.c:189:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: kernel/watch64.c:193:
+^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#400: FILE: kernel/watch64.c:205:
+int watch64_unregister(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#400: FILE: kernel/watch64.c:205:
+int watch64_unregister(unsigned long* ptr, struct watch64* st)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#404: FILE: kernel/watch64.c:209:
+^I^Ist = __watch64_find(ptr); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: kernel/watch64.c:216:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#421: FILE: kernel/watch64.c:226:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: kernel/watch64.c:226:
+ $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#422: FILE: kernel/watch64.c:227:
+void watch64_rcufree(struct rcu_head* p)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#431: FILE: kernel/watch64.c:236:
+struct watch64* watch64_find(unsigned long* ptr)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#431: FILE: kernel/watch64.c:236:
+struct watch64* watch64_find(unsigned long* ptr)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#433: FILE: kernel/watch64.c:238:
+	struct watch64* tmp;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#434: FILE: kernel/watch64.c:239:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#438: FILE: kernel/watch64.c:243:
+^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#446: FILE: kernel/watch64.c:251:
+inline struct watch64* __watch64_find(unsigned long* ptr)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#446: FILE: kernel/watch64.c:251:
+inline struct watch64* __watch64_find(unsigned long* ptr)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#448: FILE: kernel/watch64.c:253:
+	struct list_head* tmp;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#449: FILE: kernel/watch64.c:254:
+	struct watch64* watch64_struct;

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#453: FILE: kernel/watch64.c:258:
+		if (watch64_struct->ptr==ptr)
 		                       ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#464: FILE: kernel/watch64.c:269:
+int watch64_disable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#464: FILE: kernel/watch64.c:269:
+int watch64_disable(unsigned long* ptr, struct watch64* st)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#467: FILE: kernel/watch64.c:272:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#469: FILE: kernel/watch64.c:274:
+	tmp = __watch64_disable(ptr,st);
 	                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: kernel/watch64.c:276:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#474: FILE: kernel/watch64.c:279:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: kernel/watch64.c:279:
+ $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#479: FILE: kernel/watch64.c:284:
+inline int __watch64_disable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#479: FILE: kernel/watch64.c:284:
+inline int __watch64_disable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#496: FILE: kernel/watch64.c:301:
+int watch64_enable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#496: FILE: kernel/watch64.c:301:
+int watch64_enable(unsigned long* ptr, struct watch64* st)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#499: FILE: kernel/watch64.c:304:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#501: FILE: kernel/watch64.c:306:
+	tmp = __watch64_enable(ptr,st);
 	                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#503: FILE: kernel/watch64.c:308:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#506: FILE: kernel/watch64.c:311:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: kernel/watch64.c:311:
+ $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#511: FILE: kernel/watch64.c:316:
+inline int __watch64_enable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#511: FILE: kernel/watch64.c:316:
+inline int __watch64_enable(unsigned long* ptr, struct watch64* st)

CHECK:SPACING: No space is necessary after a cast
#521: FILE: kernel/watch64.c:326:
+	st->total  = (u_int64_t) st->oldval;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#532: FILE: kernel/watch64.c:337:
+int watch64_toggle(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#532: FILE: kernel/watch64.c:337:
+int watch64_toggle(unsigned long* ptr, struct watch64* st)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#544: FILE: kernel/watch64.c:349:
+		__watch64_disable(ptr,st);
 		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#546: FILE: kernel/watch64.c:351:
+		__watch64_enable(ptr,st);
 		                    ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#556: FILE: kernel/watch64.c:361:
+inline u_int64_t watch64_getval(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#556: FILE: kernel/watch64.c:361:
+inline u_int64_t watch64_getval(unsigned long* ptr, struct watch64* st)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#559: FILE: kernel/watch64.c:364:
+	u_int64_t total;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#575: FILE: kernel/watch64.c:380:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#585: FILE: kernel/watch64.c:390:
+EXPORT_SYMBOL(watch64_register);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#586: FILE: kernel/watch64.c:391:
+EXPORT_SYMBOL(watch64_unregister);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#587: FILE: kernel/watch64.c:392:
+EXPORT_SYMBOL(watch64_find);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#588: FILE: kernel/watch64.c:393:
+EXPORT_SYMBOL(watch64_disable);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#589: FILE: kernel/watch64.c:394:
+EXPORT_SYMBOL(watch64_enable);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#590: FILE: kernel/watch64.c:395:
+EXPORT_SYMBOL(watch64_toggle);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#591: FILE: kernel/watch64.c:396:
+EXPORT_SYMBOL(watch64_getval);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#617: FILE: include/linux/netdevice.h:953:
+inline void		net_register_stats64(struct net_device_stats* stats);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#618: FILE: include/linux/netdevice.h:954:
+inline void		net_unregister_stats64(struct net_device_stats* stats);

CHECK:BRACES: braces {} should be used on all arms of this statement
#655: FILE: net/core/dev.c:2118:
+	if (dev->get_stats) {
[...]
+	} else
[...]

WARNING:SPLIT_STRING: quoted string split across lines
#659: FILE: net/core/dev.c:2122:
+		seq_printf(seq, "%6s:%8llu %7llu %4llu %4llu %4llu %5llu %10llu %9llu "
+				"%8llu %7llu %4llu %4llu %4llu %5llu %7llu %10llu\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#660: FILE: net/core/dev.c:2123:
+			   dev->name, watch64_getval(&stats->rx_bytes,NULL),
 			                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#661: FILE: net/core/dev.c:2124:
+			   watch64_getval(&stats->rx_packets,NULL),
 			                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#662: FILE: net/core/dev.c:2125:
+			   watch64_getval(&stats->rx_errors,NULL),
 			                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#663: FILE: net/core/dev.c:2126:
+			   watch64_getval(&stats->rx_dropped,NULL) +
 			                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#664: FILE: net/core/dev.c:2127:
+			     watch64_getval(&stats->rx_missed_errors,NULL),
 			                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#665: FILE: net/core/dev.c:2128:
+			   watch64_getval(&stats->rx_fifo_errors,NULL),
 			                                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#666: FILE: net/core/dev.c:2129:
+^I^I^I   watch64_getval(&stats->rx_length_errors,NULL) + $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#666: FILE: net/core/dev.c:2129:
+			   watch64_getval(&stats->rx_length_errors,NULL) + 
 			                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#667: FILE: net/core/dev.c:2130:
+			     watch64_getval(&stats->rx_over_errors,NULL) +
 			                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#668: FILE: net/core/dev.c:2131:
+			     watch64_getval(&stats->rx_crc_errors,NULL) +
 			                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#669: FILE: net/core/dev.c:2132:
+			     watch64_getval(&stats->rx_frame_errors,NULL),
 			                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#670: FILE: net/core/dev.c:2133:
+			   watch64_getval(&stats->rx_compressed,NULL),
 			                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#671: FILE: net/core/dev.c:2134:
+			   watch64_getval(&stats->multicast,NULL),
 			                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#672: FILE: net/core/dev.c:2135:
+			   watch64_getval(&stats->tx_bytes,NULL),
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#673: FILE: net/core/dev.c:2136:
+			   watch64_getval(&stats->tx_packets,NULL),
 			                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#674: FILE: net/core/dev.c:2137:
+			   watch64_getval(&stats->tx_errors,NULL),
 			                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#675: FILE: net/core/dev.c:2138:
+			   watch64_getval(&stats->tx_dropped,NULL),
 			                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#676: FILE: net/core/dev.c:2139:
+			   watch64_getval(&stats->tx_fifo_errors,NULL),
 			                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#677: FILE: net/core/dev.c:2140:
+			   watch64_getval(&stats->collisions,NULL),
 			                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#678: FILE: net/core/dev.c:2141:
+			   watch64_getval(&stats->tx_carrier_errors,NULL) +
 			                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#679: FILE: net/core/dev.c:2142:
+			     watch64_getval(&stats->tx_aborted_errors,NULL) +
 			                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#680: FILE: net/core/dev.c:2143:
+			     watch64_getval(&stats->tx_window_errors,NULL) +
 			                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#681: FILE: net/core/dev.c:2144:
+			     watch64_getval(&stats->tx_heartbeat_errors,NULL),
 			                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#682: FILE: net/core/dev.c:2145:
+			   watch64_getval(&stats->tx_compressed,NULL));
 			                                       ^

CHECK:BRACES: Unbalanced braces around else statement
#683: FILE: net/core/dev.c:2146:
+	} else

WARNING:SPLIT_STRING: quoted string split across lines
#690: FILE: net/core/dev.c:2153:
+	seq_puts(seq, "Inter-|   Receive                            "
+		      "                    |  Transmit\n"

WARNING:SPLIT_STRING: quoted string split across lines
#692: FILE: net/core/dev.c:2155:
+		      " face |bytes    packets errs drop fifo frame "
+		      "compressed multicast|bytes    packets errs "

WARNING:SPLIT_STRING: quoted string split across lines
#693: FILE: net/core/dev.c:2156:
+		      "compressed multicast|bytes    packets errs "
+		      "drop fifo colls carrier compressed\n");

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#730: FILE: net/core/dev.c:2233:
+static struct seq_operations dev_seq_ops64 = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#754: FILE: net/core/dev.c:2258:
+static struct file_operations dev_seq_fops64 = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#770: FILE: net/core/dev.c:2298:
+	if (!proc_net_fops_create("dev64", S_IRUGO, &dev_seq_fops64))

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#772: FILE: net/core/dev.c:2300:
+	if (!proc_net_fops_create("softnet_stat", S_IRUGO, &softnet_seq_fops))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#792: FILE: net/core/dev.c:2990:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#801: FILE: net/core/dev.c:3003:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#809: FILE: net/core/dev.c:3226:
+^I^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#820: FILE: net/core/dev.c:3331:
+/*
+ *	Register all the members of the net_device_stats structure

ERROR:TRAILING_WHITESPACE: trailing whitespace
#823: FILE: net/core/dev.c:3334:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#823: FILE: net/core/dev.c:3334:
+ $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#824: FILE: net/core/dev.c:3335:
+inline void net_register_stats64(struct net_device_stats* stats)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#829: FILE: net/core/dev.c:3340:
+	watch64_register(&stats->tx_packets,0);
 	                                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#830: FILE: net/core/dev.c:3341:
+	watch64_enable  (&stats->tx_packets,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#830: FILE: net/core/dev.c:3341:
+	watch64_enable  (&stats->tx_packets,NULL);
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#831: FILE: net/core/dev.c:3342:
+	watch64_register(&stats->rx_packets,0);
 	                                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#832: FILE: net/core/dev.c:3343:
+	watch64_enable  (&stats->rx_packets,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#832: FILE: net/core/dev.c:3343:
+	watch64_enable  (&stats->rx_packets,NULL);
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#833: FILE: net/core/dev.c:3344:
+	watch64_register(&stats->tx_bytes,0);
 	                                 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#834: FILE: net/core/dev.c:3345:
+	watch64_enable  (&stats->tx_bytes,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#834: FILE: net/core/dev.c:3345:
+	watch64_enable  (&stats->tx_bytes,NULL);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#835: FILE: net/core/dev.c:3346:
+	watch64_register(&stats->rx_bytes,0);
 	                                 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#836: FILE: net/core/dev.c:3347:
+	watch64_enable  (&stats->rx_bytes,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#836: FILE: net/core/dev.c:3347:
+	watch64_enable  (&stats->rx_bytes,NULL);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#837: FILE: net/core/dev.c:3348:
+	watch64_register(&stats->tx_errors,0);
 	                                  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#838: FILE: net/core/dev.c:3349:
+	watch64_enable  (&stats->tx_errors,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#838: FILE: net/core/dev.c:3349:
+	watch64_enable  (&stats->tx_errors,NULL);
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#839: FILE: net/core/dev.c:3350:
+	watch64_register(&stats->rx_errors,0);
 	                                  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#840: FILE: net/core/dev.c:3351:
+	watch64_enable  (&stats->rx_errors,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#840: FILE: net/core/dev.c:3351:
+	watch64_enable  (&stats->rx_errors,NULL);
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#841: FILE: net/core/dev.c:3352:
+	watch64_register(&stats->tx_dropped,0);
 	                                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#842: FILE: net/core/dev.c:3353:
+	watch64_enable  (&stats->tx_dropped,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#842: FILE: net/core/dev.c:3353:
+	watch64_enable  (&stats->tx_dropped,NULL);
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#843: FILE: net/core/dev.c:3354:
+	watch64_register(&stats->rx_dropped,0);
 	                                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#844: FILE: net/core/dev.c:3355:
+	watch64_enable  (&stats->rx_dropped,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#844: FILE: net/core/dev.c:3355:
+	watch64_enable  (&stats->rx_dropped,NULL);
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#845: FILE: net/core/dev.c:3356:
+	watch64_register(&stats->multicast,0);
 	                                  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#846: FILE: net/core/dev.c:3357:
+	watch64_enable  (&stats->multicast,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#846: FILE: net/core/dev.c:3357:
+	watch64_enable  (&stats->multicast,NULL);
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#847: FILE: net/core/dev.c:3358:
+	watch64_register(&stats->collisions,0);
 	                                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#848: FILE: net/core/dev.c:3359:
+	watch64_enable  (&stats->collisions,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#848: FILE: net/core/dev.c:3359:
+	watch64_enable  (&stats->collisions,NULL);
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#849: FILE: net/core/dev.c:3360:
+	watch64_register(&stats->rx_length_errors,0);
 	                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#850: FILE: net/core/dev.c:3361:
+	watch64_enable  (&stats->rx_length_errors,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#850: FILE: net/core/dev.c:3361:
+	watch64_enable  (&stats->rx_length_errors,NULL);
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#851: FILE: net/core/dev.c:3362:
+	watch64_register(&stats->rx_over_errors,0);
 	                                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#852: FILE: net/core/dev.c:3363:
+	watch64_enable  (&stats->rx_over_errors,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#852: FILE: net/core/dev.c:3363:
+	watch64_enable  (&stats->rx_over_errors,NULL);
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#853: FILE: net/core/dev.c:3364:
+	watch64_register(&stats->rx_crc_errors,0);
 	                                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#854: FILE: net/core/dev.c:3365:
+	watch64_enable  (&stats->rx_crc_errors,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#854: FILE: net/core/dev.c:3365:
+	watch64_enable  (&stats->rx_crc_errors,NULL);
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#855: FILE: net/core/dev.c:3366:
+	watch64_register(&stats->rx_frame_errors,0);
 	                                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#856: FILE: net/core/dev.c:3367:
+	watch64_enable  (&stats->rx_frame_errors,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#856: FILE: net/core/dev.c:3367:
+	watch64_enable  (&stats->rx_frame_errors,NULL);
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#857: FILE: net/core/dev.c:3368:
+	watch64_register(&stats->rx_fifo_errors,0);
 	                                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#858: FILE: net/core/dev.c:3369:
+	watch64_enable  (&stats->rx_fifo_errors,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#858: FILE: net/core/dev.c:3369:
+	watch64_enable  (&stats->rx_fifo_errors,NULL);
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#859: FILE: net/core/dev.c:3370:
+	watch64_register(&stats->rx_missed_errors,0);
 	                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#860: FILE: net/core/dev.c:3371:
+	watch64_enable  (&stats->rx_missed_errors,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#860: FILE: net/core/dev.c:3371:
+	watch64_enable  (&stats->rx_missed_errors,NULL);
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#861: FILE: net/core/dev.c:3372:
+	watch64_register(&stats->tx_aborted_errors,0);
 	                                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#862: FILE: net/core/dev.c:3373:
+	watch64_enable  (&stats->tx_aborted_errors,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#862: FILE: net/core/dev.c:3373:
+	watch64_enable  (&stats->tx_aborted_errors,NULL);
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#863: FILE: net/core/dev.c:3374:
+	watch64_register(&stats->tx_carrier_errors,0);
 	                                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#864: FILE: net/core/dev.c:3375:
+	watch64_enable  (&stats->tx_carrier_errors,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#864: FILE: net/core/dev.c:3375:
+	watch64_enable  (&stats->tx_carrier_errors,NULL);
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#865: FILE: net/core/dev.c:3376:
+	watch64_register(&stats->tx_fifo_errors,0);
 	                                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#866: FILE: net/core/dev.c:3377:
+	watch64_enable  (&stats->tx_fifo_errors,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#866: FILE: net/core/dev.c:3377:
+	watch64_enable  (&stats->tx_fifo_errors,NULL);
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#867: FILE: net/core/dev.c:3378:
+	watch64_register(&stats->tx_heartbeat_errors,0);
 	                                            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#868: FILE: net/core/dev.c:3379:
+	watch64_enable  (&stats->tx_heartbeat_errors,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#868: FILE: net/core/dev.c:3379:
+	watch64_enable  (&stats->tx_heartbeat_errors,NULL);
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#869: FILE: net/core/dev.c:3380:
+	watch64_register(&stats->tx_window_errors,0);
 	                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#870: FILE: net/core/dev.c:3381:
+	watch64_enable  (&stats->tx_window_errors,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#870: FILE: net/core/dev.c:3381:
+	watch64_enable  (&stats->tx_window_errors,NULL);
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#871: FILE: net/core/dev.c:3382:
+	watch64_register(&stats->rx_compressed,0);
 	                                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#872: FILE: net/core/dev.c:3383:
+	watch64_enable  (&stats->rx_compressed,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#872: FILE: net/core/dev.c:3383:
+	watch64_enable  (&stats->rx_compressed,NULL);
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#873: FILE: net/core/dev.c:3384:
+	watch64_register(&stats->tx_compressed,0);
 	                                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#874: FILE: net/core/dev.c:3385:
+	watch64_enable  (&stats->tx_compressed,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#874: FILE: net/core/dev.c:3385:
+	watch64_enable  (&stats->tx_compressed,NULL);
 	                                      ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#878: FILE: net/core/dev.c:3389:
+/*
+ *	Unregister all the members of the net_device_stats structure

ERROR:TRAILING_WHITESPACE: trailing whitespace
#881: FILE: net/core/dev.c:3392:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#881: FILE: net/core/dev.c:3392:
+ $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#882: FILE: net/core/dev.c:3393:
+inline void net_unregister_stats64(struct net_device_stats* stats)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#887: FILE: net/core/dev.c:3398:
+	watch64_unregister(&stats->tx_packets,0);
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#888: FILE: net/core/dev.c:3399:
+	watch64_unregister(&stats->rx_packets,0);
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#889: FILE: net/core/dev.c:3400:
+	watch64_unregister(&stats->tx_bytes,0);
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#890: FILE: net/core/dev.c:3401:
+	watch64_unregister(&stats->rx_bytes,0);
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#891: FILE: net/core/dev.c:3402:
+	watch64_unregister(&stats->tx_errors,0);
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#892: FILE: net/core/dev.c:3403:
+	watch64_unregister(&stats->rx_errors,0);
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#893: FILE: net/core/dev.c:3404:
+	watch64_unregister(&stats->tx_dropped,0);
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#894: FILE: net/core/dev.c:3405:
+	watch64_unregister(&stats->rx_dropped,0);
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#895: FILE: net/core/dev.c:3406:
+	watch64_unregister(&stats->multicast,0);
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#896: FILE: net/core/dev.c:3407:
+	watch64_unregister(&stats->collisions,0);
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#897: FILE: net/core/dev.c:3408:
+	watch64_unregister(&stats->rx_length_errors,0);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#898: FILE: net/core/dev.c:3409:
+	watch64_unregister(&stats->rx_over_errors,0);
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#899: FILE: net/core/dev.c:3410:
+	watch64_unregister(&stats->rx_crc_errors,0);
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#900: FILE: net/core/dev.c:3411:
+	watch64_unregister(&stats->rx_frame_errors,0);
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#901: FILE: net/core/dev.c:3412:
+	watch64_unregister(&stats->rx_fifo_errors,0);
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#902: FILE: net/core/dev.c:3413:
+	watch64_unregister(&stats->rx_missed_errors,0);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#903: FILE: net/core/dev.c:3414:
+	watch64_unregister(&stats->tx_aborted_errors,0);
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#904: FILE: net/core/dev.c:3415:
+	watch64_unregister(&stats->tx_carrier_errors,0);
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#905: FILE: net/core/dev.c:3416:
+	watch64_unregister(&stats->tx_fifo_errors,0);
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#906: FILE: net/core/dev.c:3417:
+	watch64_unregister(&stats->tx_heartbeat_errors,0);
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#907: FILE: net/core/dev.c:3418:
+	watch64_unregister(&stats->tx_window_errors,0);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#908: FILE: net/core/dev.c:3419:
+	watch64_unregister(&stats->rx_compressed,0);
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#909: FILE: net/core/dev.c:3420:
+	watch64_unregister(&stats->tx_compressed,0);
 	                                        ^

CHECK:SPACING: No space is necessary after a cast
#940: FILE: net/core/net-sysfs.c:210:
+			      watch64_getval((unsigned long *)(((u8 *) stats) + offset),NULL));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#940: FILE: net/core/net-sysfs.c:210:
+			      watch64_getval((unsigned long *)(((u8 *) stats) + offset),NULL));
 			                                                               ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000253322.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 203 errors, 58 warnings, 16 checks, 827 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000253322.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
