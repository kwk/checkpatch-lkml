ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Ahmed Darwish'
#39: 
Signed-off-by: Ahmed Darwish

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:TRAILING_WHITESPACE: trailing whitespace
#51: FILE: arch/cris/arch-v32/mm/intmem.c:30:
+^I^Istruct intmem_allocation* alloc = kmalloc(sizeof *alloc, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#51: FILE: arch/cris/arch-v32/mm/intmem.c:30:
+		struct intmem_allocation* alloc = kmalloc(sizeof *alloc, 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof *alloc should be sizeof(*alloc)
#51: FILE: arch/cris/arch-v32/mm/intmem.c:30:
+		struct intmem_allocation* alloc = kmalloc(sizeof *alloc, 

WARNING:SIZEOF_PARENTHESIS: sizeof *tmp should be sizeof(*tmp)
#70: FILE: arch/cris/arch-v32/mm/intmem.c:67:
+					tmp = kmalloc(sizeof *tmp, GFP_ATOMIC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: drivers/block/DAC960.c:1882:
+      LogicalDeviceInfo = kmalloc(sizeof(DAC960_V2_LogicalDeviceInfo_T),$

CHECK:CAMELCASE: Avoid CamelCase: <LogicalDeviceInfo>
#84: FILE: drivers/block/DAC960.c:1882:
+      LogicalDeviceInfo = kmalloc(sizeof(DAC960_V2_LogicalDeviceInfo_T),

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V2_LogicalDeviceInfo_T>
#84: FILE: drivers/block/DAC960.c:1882:
+      LogicalDeviceInfo = kmalloc(sizeof(DAC960_V2_LogicalDeviceInfo_T),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: drivers/block/DAC960.c:1883:
+      LogicalDeviceInfo = kmalloc(sizeof(DAC960_V2_LogicalDeviceInfo_T),
+				   GFP_ATOMIC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: drivers/block/DAC960.c:2116:
+      PhysicalDeviceInfo = kmalloc(sizeof(DAC960_V2_PhysicalDeviceInfo_T),$

CHECK:CAMELCASE: Avoid CamelCase: <PhysicalDeviceInfo>
#95: FILE: drivers/block/DAC960.c:2116:
+      PhysicalDeviceInfo = kmalloc(sizeof(DAC960_V2_PhysicalDeviceInfo_T),

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V2_PhysicalDeviceInfo_T>
#95: FILE: drivers/block/DAC960.c:2116:
+      PhysicalDeviceInfo = kmalloc(sizeof(DAC960_V2_PhysicalDeviceInfo_T),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: drivers/block/DAC960.c:2117:
+      PhysicalDeviceInfo = kmalloc(sizeof(DAC960_V2_PhysicalDeviceInfo_T),
+				    GFP_ATOMIC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: drivers/block/DAC960.c:2125:
+      InquiryUnitSerialNumber = kmalloc($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#106: FILE: drivers/block/DAC960.c:2125:
+      InquiryUnitSerialNumber = kmalloc(

CHECK:CAMELCASE: Avoid CamelCase: <InquiryUnitSerialNumber>
#106: FILE: drivers/block/DAC960.c:2125:
+      InquiryUnitSerialNumber = kmalloc(

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_SCSI_Inquiry_UnitSerialNumber_T>
#107: FILE: drivers/block/DAC960.c:2126:
+	      sizeof(DAC960_SCSI_Inquiry_UnitSerialNumber_T), GFP_ATOMIC);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: drivers/block/DAC960.c:5712:
+      Controller->CombinedStatusBuffer = kmalloc(NewStatusBufferLength, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: drivers/block/DAC960.c:5712:
+      Controller->CombinedStatusBuffer = kmalloc(NewStatusBufferLength, $

CHECK:CAMELCASE: Avoid CamelCase: <Controller>
#128: FILE: drivers/block/DAC960.c:5712:
+      Controller->CombinedStatusBuffer = kmalloc(NewStatusBufferLength, 

CHECK:CAMELCASE: Avoid CamelCase: <CombinedStatusBuffer>
#128: FILE: drivers/block/DAC960.c:5712:
+      Controller->CombinedStatusBuffer = kmalloc(NewStatusBufferLength, 

CHECK:CAMELCASE: Avoid CamelCase: <NewStatusBufferLength>
#128: FILE: drivers/block/DAC960.c:5712:
+      Controller->CombinedStatusBuffer = kmalloc(NewStatusBufferLength, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: drivers/block/DAC960.c:5718:
+  NewStatusBuffer = kmalloc(2 * Controller->CombinedStatusBufferLength, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: drivers/block/DAC960.c:5718:
+  NewStatusBuffer = kmalloc(2 * Controller->CombinedStatusBufferLength, $

CHECK:CAMELCASE: Avoid CamelCase: <NewStatusBuffer>
#136: FILE: drivers/block/DAC960.c:5718:
+  NewStatusBuffer = kmalloc(2 * Controller->CombinedStatusBufferLength, 

CHECK:CAMELCASE: Avoid CamelCase: <CombinedStatusBufferLength>
#136: FILE: drivers/block/DAC960.c:5718:
+  NewStatusBuffer = kmalloc(2 * Controller->CombinedStatusBufferLength, 

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tp)...) over kmalloc(sizeof(struct ktermios)...)
#151: FILE: drivers/char/tty_io.c:1935:
+		tp = kmalloc(sizeof(struct ktermios),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ltp)...) over kmalloc(sizeof(struct ktermios)...)
#161: FILE: drivers/char/tty_io.c:1943:
+		ltp = kmalloc(sizeof(struct ktermios),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*o_tp)...) over kmalloc(sizeof(struct ktermios)...)
#172: FILE: drivers/char/tty_io.c:1968:
+			o_tp = kmalloc(sizeof(struct ktermios), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*o_ltp)...) over kmalloc(sizeof(struct ktermios)...)
#181: FILE: drivers/char/tty_io.c:1975:
+			o_ltp = kmalloc(sizeof(struct ktermios), GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#194: FILE: drivers/hid/hid-core.c:659:
+	if (!(device->rdesc = kmalloc(size, GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tmp)...) over kmalloc(sizeof(struct i2o_cfg_info)...)
#237: FILE: drivers/message/i2o/i2o_config.c:1042:
+	struct i2o_cfg_info *tmp = kmalloc(sizeof(struct i2o_cfg_info),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*map_banks[idx])...) over kmalloc(sizeof(struct map_info)...)
#265: FILE: drivers/mtd/maps/tqm834x.c:135:
+		map_banks[idx] = kmalloc(sizeof(struct map_info),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*map_banks[idx])...) over kmalloc(sizeof(struct map_info)...)
#286: FILE: drivers/mtd/maps/tqm8xxl.c:137:
+		map_banks[idx] = kmalloc(sizeof(struct map_info), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#309: FILE: drivers/net/ucc_geth.c:2867:
+				kmalloc((u32) (length + align), GFP_KERNEL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: drivers/net/ucc_geth.c:2868:
+^I^I^I^I^I $

CHECK:SPACING: No space is necessary after a cast
#319: FILE: drivers/net/ucc_geth.c:2903:
+				kmalloc((u32) (length + align), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#331: FILE: drivers/net/ucc_geth.c:2929:
+		ugeth->tx_skbuff[j] = kmalloc(sizeof(struct sk_buff *) *
+					      ugeth->ug_info->bdRingLenTx[j],
+					      GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:CAMELCASE: Avoid CamelCase: <bdRingLenTx>
#332: FILE: drivers/net/ucc_geth.c:2930:
+					      ugeth->ug_info->bdRingLenTx[j],

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#345: FILE: drivers/net/ucc_geth.c:2960:
+		ugeth->rx_skbuff[j] = kmalloc(sizeof(struct sk_buff *) *
+					      ugeth->ug_info->bdRingLenRx[j],
+					      GFP_KERNEL);

CHECK:CAMELCASE: Avoid CamelCase: <bdRingLenRx>
#346: FILE: drivers/net/ucc_geth.c:2961:
+					      ugeth->ug_info->bdRingLenRx[j],

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#374: FILE: drivers/net/wireless/ipw2100.c:3364:
+	priv->msg_buffers = kmalloc(IPW_COMMAND_POOL_SIZE *
+				    sizeof(struct ipw2100_tx_packet),
+				    GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#402: FILE: drivers/net/wireless/ipw2100.c:4547:
+^Ipriv->rx_buffers = kmalloc(RX_QUEUE_LENGTH * $

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#402: FILE: drivers/net/wireless/ipw2100.c:4547:
+	priv->rx_buffers = kmalloc(RX_QUEUE_LENGTH * 
+				   sizeof(struct ipw2100_rx_packet),
+				   GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#419: FILE: drivers/s390/net/ctcmain.c:1642:
+	if ((ch = kmalloc(sizeof (struct channel), GFP_KERNEL)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#419: FILE: drivers/s390/net/ctcmain.c:1642:
+	if ((ch = kmalloc(sizeof (struct channel), GFP_KERNEL)) == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ch)...) over kmalloc(sizeof (struct channel)...)
#419: FILE: drivers/s390/net/ctcmain.c:1642:
+	if ((ch = kmalloc(sizeof (struct channel), GFP_KERNEL)) == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: drivers/scsi/advansys.c:5259:
+                carrp = kmalloc(ADV_CARRIER_BUFSIZE, GFP_ATOMIC);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: drivers/scsi/advansys.c:5259:
+                carrp = kmalloc(ADV_CARRIER_BUFSIZE, GFP_ATOMIC);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#438: FILE: drivers/scsi/advansys.c:5272:
                 for (req_cnt = adv_dvc_varp->max_host_qng;
[...]
+                    reqp = kmalloc(sizeof(adv_req_t) * req_cnt, GFP_ATOMIC);

ERROR:CODE_INDENT: code indent should use tabs where possible
#443: FILE: drivers/scsi/advansys.c:5275:
+                    reqp = kmalloc(sizeof(adv_req_t) * req_cnt, GFP_ATOMIC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: drivers/scsi/advansys.c:5275:
+                    reqp = kmalloc(sizeof(adv_req_t) * req_cnt, GFP_ATOMIC);$

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#443: FILE: drivers/scsi/advansys.c:5275:
+                    reqp = kmalloc(sizeof(adv_req_t) * req_cnt, GFP_ATOMIC);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#449: FILE: drivers/scsi/advansys.c:5296:
                 for (sg_cnt = 0; sg_cnt < ADV_TOT_SG_BLOCK; sg_cnt++) {
[...]
+                    sgp = kmalloc(sizeof(adv_sgblk_t), GFP_ATOMIC);

ERROR:CODE_INDENT: code indent should use tabs where possible
#453: FILE: drivers/scsi/advansys.c:5298:
+                    sgp = kmalloc(sizeof(adv_sgblk_t), GFP_ATOMIC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: drivers/scsi/advansys.c:5298:
+                    sgp = kmalloc(sizeof(adv_sgblk_t), GFP_ATOMIC);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#512: FILE: fs/cifs/misc.c:74:
+	ret_buf = kzalloc(sizeof (struct cifsSesInfo), GFP_KERNEL);

CHECK:CAMELCASE: Avoid CamelCase: <cifsSesInfo>
#512: FILE: fs/cifs/misc.c:74:
+	ret_buf = kzalloc(sizeof (struct cifsSesInfo), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ret_buf)...) over kzalloc(sizeof (struct cifsSesInfo)...)
#512: FILE: fs/cifs/misc.c:74:
+	ret_buf = kzalloc(sizeof (struct cifsSesInfo), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#523: FILE: fs/cifs/misc.c:110:
+	ret_buf = kzalloc(sizeof (struct cifsTconInfo),

CHECK:CAMELCASE: Avoid CamelCase: <cifsTconInfo>
#523: FILE: fs/cifs/misc.c:110:
+	ret_buf = kzalloc(sizeof (struct cifsTconInfo),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ret_buf)...) over kzalloc(sizeof (struct cifsTconInfo)...)
#523: FILE: fs/cifs/misc.c:110:
+	ret_buf = kzalloc(sizeof (struct cifsTconInfo),

CHECK:CAMELCASE: Avoid CamelCase: <ciKey>
#539: FILE: fs/jfs/jfs_dtree.c:595:
+	ciKey.name = kmalloc((JFS_NAME_MAX + 1) * sizeof(wchar_t),

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000004245.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 20 warnings, 31 checks, 408 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000004245.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
