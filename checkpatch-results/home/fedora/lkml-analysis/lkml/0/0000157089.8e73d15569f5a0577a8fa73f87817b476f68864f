CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#32: 
> Nick Piggin a écrit :
                ^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
> (untrue), so my second patch just doesnt touch the path where nr_files was 

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#40: 
> (untrue), so my second patch just doesnt touch the path where nr_files was 
                                    ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#52: 
don't acquire the lock - atleast not for every filp open
                         ^^^^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#52: 
don't acquire the lock - atleast not for every filp open
                                               ^^^^

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#106: FILE: fs/file_table.c:23:
+#include <asm/atomic.h>

WARNING:LINE_SPACING: Missing a blank line after declarations
#136: FILE: fs/file_table.c:38:
+	struct file *f =  container_of(head, struct file, f_rcuhead);
+	kmem_cache_free(filp_cachep, f);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#171: FILE: fs/file_table.c:63:
+EXPORT_SYMBOL(get_nr_files);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#172: FILE: fs/file_table.c:64:
+EXPORT_SYMBOL(get_max_files);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#178: FILE: fs/file_table.c:70:
+int proc_nr_files(ctl_table *table, int write, struct file *filp,
                                                             ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: fs/file_table.c:71:
+                     void __user *buffer, size_t *lenp, loff_t *ppos)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: fs/file_table.c:71:
+int proc_nr_files(ctl_table *table, int write, struct file *filp,
+                     void __user *buffer, size_t *lenp, loff_t *ppos)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: fs/file_table.c:71:
+                     void __user *buffer, size_t *lenp, loff_t *ppos)$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#182: FILE: fs/file_table.c:74:
+	proc_dointvec(table, write, filp, buffer, lenp, ppos);
 	                            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#185: FILE: fs/file_table.c:77:
+int proc_nr_files(ctl_table *table, int write, struct file *filp,
                                                             ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: fs/file_table.c:78:
+                     void __user *buffer, size_t *lenp, loff_t *ppos)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: fs/file_table.c:78:
+int proc_nr_files(ctl_table *table, int write, struct file *filp,
+                     void __user *buffer, size_t *lenp, loff_t *ppos)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: fs/file_table.c:78:
+                     void __user *buffer, size_t *lenp, loff_t *ppos)$

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#188: FILE: fs/file_table.c:80:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: fs/file_table.c:97:
+	if (get_nr_files() >= files_stat.max_files &&
 				!capable(CAP_SYS_ADMIN))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#224: FILE: include/linux/fs.h:39:
+extern int get_nr_files(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#225: FILE: include/linux/fs.h:40:
+extern int get_max_files(void);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#257: FILE: net/unix/af_unix.c:550:
+	if (atomic_read(&unix_nr_socks) >= 2*get_max_files())
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#269: FILE: fs/dcache.c:1898:
+			SLAB_HWCACHE_ALIGN|SLAB_PANIC, NULL, NULL);
 			                  ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#292: FILE: kernel/sysctl.c:52:
+extern int proc_nr_files(ctl_table *table, int write, struct file *filp,
                                                                    ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: kernel/sysctl.c:53:
+                     void __user *buffer, size_t *lenp, loff_t *ppos);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: kernel/sysctl.c:53:
+extern int proc_nr_files(ctl_table *table, int write, struct file *filp,
+                     void __user *buffer, size_t *lenp, loff_t *ppos);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: kernel/sysctl.c:53:
+                     void __user *buffer, size_t *lenp, loff_t *ppos);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000157089.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 16 warnings, 9 checks, 184 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000157089.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
