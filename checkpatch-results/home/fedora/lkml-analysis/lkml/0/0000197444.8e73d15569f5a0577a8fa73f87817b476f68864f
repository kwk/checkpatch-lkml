WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
diff -urNp -X dontdiff linux-2.6.11.5/arch/i386/defconfig linux-2.6.11.5-nmi/arch/i386/defconfig

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#53: FILE: arch/i386/Kconfig:613:
+config NMI_EXTENDED
+	bool "Extended support for NMI handlers (EXPERIMENTAL)"
+	depends on EXPERIMENTAL
+	help
+	  This option provides a few things that facilitate writing kernel
+	  modules that handle NMIs (nonmaskable interrupts).
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#82: FILE: arch/x86_64/Kconfig:354:
+config NMI_EXTENDED
+	bool "Extended support for NMI handlers (EXPERIMENTAL)"
+	depends on EXPERIMENTAL
+	help
+	  This option provides a few things that facilitate writing kernel
+	  modules that handle NMIs (nonmaskable interrupts).
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#132: FILE: include/linux/nmi.h:44:
+typedef struct {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#137: FILE: include/linux/nmi.h:49:
+	volatile int has_items[2];

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#160: FILE: include/linux/nmi.h:72:
+static inline void * nmi_producer_start_put (nmi_producer_consumer_t *p)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#160: FILE: include/linux/nmi.h:72:
+static inline void * nmi_producer_start_put (nmi_producer_consumer_t *p)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#173: FILE: include/linux/nmi.h:85:
+static inline void * nmi_consumer_start_get (nmi_producer_consumer_t *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#173: FILE: include/linux/nmi.h:85:
+static inline void * nmi_consumer_start_get (nmi_producer_consumer_t *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#195: FILE: include/linux/nmi.h:107:
+static inline int nmi_consumer_check (const nmi_producer_consumer_t *p)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#210: FILE: include/linux/nmi.h:122:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#218: FILE: include/linux/nmi.h:130:
+typedef struct {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#220: FILE: include/linux/nmi.h:132:
+	unsigned nr_items;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#226: FILE: include/linux/nmi.h:138:
+typedef struct {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#237: FILE: include/linux/nmi.h:149:
+void nmi_msgqueue_init (nmi_msgqueue_t *q);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#238: FILE: include/linux/nmi.h:150:
+void nmi_msgqueue_send (nmi_msgqueue_t *q, nmi_msgbuf_t *msg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#239: FILE: include/linux/nmi.h:151:
+void nmi_msgqueue_receive (nmi_msgqueue_t *q, struct list_head *list);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#240: FILE: include/linux/nmi.h:152:
+nmi_msgbuf_t * nmi_msgqueue_getbuf (nmi_msgqueue_t *q);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#240: FILE: include/linux/nmi.h:152:
+nmi_msgbuf_t * nmi_msgqueue_getbuf (nmi_msgqueue_t *q);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#241: FILE: include/linux/nmi.h:153:
+void nmi_msgqueue_putbuf (nmi_msgqueue_t *q, nmi_msgbuf_t *buf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#247: FILE: include/linux/nmi.h:159:
+static inline int nmi_msgqueue_check (const nmi_msgqueue_t *q)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#266: FILE: include/linux/nmi.h:178:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#273: FILE: include/linux/nmi.h:185:
+typedef struct {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#279: FILE: include/linux/nmi.h:191:
+void init_nmi_defer_callback_list (nmi_defer_callback_list_t *list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#280: FILE: include/linux/nmi.h:192:
+void nmi_defer_callback_set (nmi_defer_callback_list_t *list,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: include/linux/nmi.h:193:
+void nmi_defer_callback_set (nmi_defer_callback_list_t *list,
+		nmi_defer_callback_t *callback);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#282: FILE: include/linux/nmi.h:194:
+void __do_nmi_defer_callbacks (nmi_defer_callback_list_t *list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#284: FILE: include/linux/nmi.h:196:
+static inline void init_nmi_defer_callback (nmi_defer_callback_t *callback,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: include/linux/nmi.h:197:
+static inline void init_nmi_defer_callback (nmi_defer_callback_t *callback,
+		nmi_defer_callback_fn_t fn, void *data)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#303: FILE: include/linux/nmi.h:215:
+static inline void do_nmi_defer_callbacks (nmi_defer_callback_list_t *list)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#327: FILE: kernel/nmi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#328: FILE: kernel/nmi.c:2:
+ * linux/kernel/nmi.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#393: FILE: kernel/nmi.c:67:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#394: FILE: kernel/nmi.c:68:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#404: FILE: kernel/nmi.c:78:
+void nmi_msgqueue_init (nmi_msgqueue_t *q)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#417: FILE: kernel/nmi.c:91:
+EXPORT_SYMBOL(nmi_msgqueue_init);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#422: FILE: kernel/nmi.c:96:
+void nmi_msgqueue_send (nmi_msgqueue_t *q, nmi_msgbuf_t *msg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#425: FILE: kernel/nmi.c:99:
+	list_add_tail(&msg->link,
+		(struct list_head *) nmi_producer_start_put(&q->queue));

CHECK:SPACING: No space is necessary after a cast
#425: FILE: kernel/nmi.c:99:
+		(struct list_head *) nmi_producer_start_put(&q->queue));

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#428: FILE: kernel/nmi.c:102:
+EXPORT_SYMBOL(nmi_msgqueue_send);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#435: FILE: kernel/nmi.c:109:
+void nmi_msgqueue_receive (nmi_msgqueue_t *q, struct list_head *list)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#437: FILE: kernel/nmi.c:111:
+	list_splice_init(

CHECK:SPACING: No space is necessary after a cast
#438: FILE: kernel/nmi.c:112:
+		(struct list_head *) nmi_consumer_start_get(&q->queue), list);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#441: FILE: kernel/nmi.c:115:
+EXPORT_SYMBOL(nmi_msgqueue_receive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#443: FILE: kernel/nmi.c:117:
+static nmi_msgbuf_t * freelist_getbuf (nmi_msgbuf_freelist_t *list)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#443: FILE: kernel/nmi.c:117:
+static nmi_msgbuf_t * freelist_getbuf (nmi_msgbuf_freelist_t *list)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#453: FILE: kernel/nmi.c:127:
+	BUG_ON(list->nr_items == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#460: FILE: kernel/nmi.c:134:
+static inline void freelist_putbuf (nmi_msgbuf_freelist_t *list,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#471: FILE: kernel/nmi.c:145:
+nmi_msgbuf_t * nmi_msgqueue_getbuf (nmi_msgqueue_t *q)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#471: FILE: kernel/nmi.c:145:
+nmi_msgbuf_t * nmi_msgqueue_getbuf (nmi_msgqueue_t *q)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#527: FILE: kernel/nmi.c:201:
+EXPORT_SYMBOL(nmi_msgqueue_getbuf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#537: FILE: kernel/nmi.c:211:
+void nmi_msgqueue_putbuf (nmi_msgqueue_t *q, nmi_msgbuf_t *buf)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#562: FILE: kernel/nmi.c:236:
+	BUG_ON(q->filling);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#581: FILE: kernel/nmi.c:255:
+EXPORT_SYMBOL(nmi_msgqueue_putbuf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#583: FILE: kernel/nmi.c:257:
+void init_nmi_defer_callback_list (nmi_defer_callback_list_t *list)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#588: FILE: kernel/nmi.c:262:
+	nmi_producer_consumer_init(&list->list, &list->listpair[0],
+			&list->listpair[1]);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#592: FILE: kernel/nmi.c:266:
+EXPORT_SYMBOL(init_nmi_defer_callback_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#599: FILE: kernel/nmi.c:273:
+void nmi_defer_callback_set (nmi_defer_callback_list_t *list,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#600: FILE: kernel/nmi.c:274:
+void nmi_defer_callback_set (nmi_defer_callback_list_t *list,
+		nmi_defer_callback_t *callback)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#607: FILE: kernel/nmi.c:281:
+	list_add_tail(&callback->link,
+		(struct list_head *) nmi_producer_start_put(&list->list));

CHECK:SPACING: No space is necessary after a cast
#607: FILE: kernel/nmi.c:281:
+		(struct list_head *) nmi_producer_start_put(&list->list));

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#611: FILE: kernel/nmi.c:285:
+EXPORT_SYMBOL(nmi_defer_callback_set);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#620: FILE: kernel/nmi.c:294:
+void __do_nmi_defer_callbacks (nmi_defer_callback_list_t *list)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#638: FILE: kernel/nmi.c:312:
+	list_splice_init(

CHECK:SPACING: No space is necessary after a cast
#639: FILE: kernel/nmi.c:313:
+		(struct list_head *) nmi_consumer_start_get(&list->list),

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#668: FILE: kernel/nmi.c:342:
+EXPORT_SYMBOL(__do_nmi_defer_callbacks);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000197444.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 47 warnings, 12 checks, 605 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000197444.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
