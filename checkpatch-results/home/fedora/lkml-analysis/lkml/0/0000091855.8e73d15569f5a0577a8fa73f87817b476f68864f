WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (13, 21)
#56: FILE: kernel/capability.c:56:
 	     if (put_user(_LINUX_CAPABILITY_VERSION, &header->version))
+		     return -EFAULT;

WARNING:TABSTOP: Statements should start on a tabstop
#58: FILE: kernel/capability.c:57:
+		     return -EFAULT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: kernel/capability.c:64:
+     if (pid < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 13)
#66: FILE: kernel/capability.c:64:
+     if (pid < 0)
              return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: kernel/capability.c:68:
+     read_lock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: kernel/capability.c:82:
+     read_unlock(&tasklist_lock);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 10)
#83: FILE: kernel/capability.c:85:
      if (!ret && copy_to_user(dataptr, &data, sizeof data))
+          return -EFAULT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: kernel/capability.c:86:
+          return -EFAULT;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: kernel/capability.c:86:
+          return -EFAULT;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 13)
#92: FILE: kernel/capability.c:179:
      if (get_user(version, &header->version))
+	     return -EFAULT;

WARNING:TABSTOP: Statements should start on a tabstop
#94: FILE: kernel/capability.c:180:
+	     return -EFAULT;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (13, 21)
#97: FILE: kernel/capability.c:183:
 	     if (put_user(_LINUX_CAPABILITY_VERSION, &header->version))
+		     return -EFAULT;

WARNING:TABSTOP: Statements should start on a tabstop
#99: FILE: kernel/capability.c:184:
+		     return -EFAULT;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 13)
#103: FILE: kernel/capability.c:188:
      if (get_user(pid, &header->pid))
+	     return -EFAULT;

WARNING:TABSTOP: Statements should start on a tabstop
#105: FILE: kernel/capability.c:189:
+	     return -EFAULT;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 13)
#110: FILE: kernel/capability.c:194:
      if (copy_from_user(&effective, &data->effective, sizeof(effective)) ||
[...]
+	     return -EFAULT;

WARNING:TABSTOP: Statements should start on a tabstop
#114: FILE: kernel/capability.c:197:
+	     return -EFAULT;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: kernel/fork.c:1361:
+	files_cachep = kmem_cache_create("files_cache",
 			sizeof(struct files_struct), 0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: kernel/fork.c:1364:
+	fs_cachep = kmem_cache_create("fs_cache",
 			sizeof(struct fs_struct), 0,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#446: FILE: kernel/timer.c:1323:
+static int __devinit timer_cpu_notify(struct notifier_block *self,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#447: FILE: kernel/timer.c:1324:
+static int __devinit timer_cpu_notify(struct notifier_block *self,
 				unsigned long action, void *hcpu)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091855.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 17 warnings, 3 checks, 360 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091855.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
