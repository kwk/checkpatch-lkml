WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
--- linux-2.6.13-rc4-mm1/arch/i386/kernel/apic.c	6 Aug 2005 18:46:41 -0000	1.1.1.1

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#202: FILE: arch/i386/kernel/io_apic.c:82:
+int vector_irq[NR_IRQ_NODES][NR_VECTORS] =
+	{ [0 ... NR_IRQ_NODES-1][0 ... NR_VECTORS - 1] = -1 };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#202: FILE: arch/i386/kernel/io_apic.c:82:
+	{ [0 ... NR_IRQ_NODES-1][0 ... NR_VECTORS - 1] = -1 };
 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vector' - possible side-effects?
#206: FILE: arch/i386/kernel/io_apic.c:84:
+#define vector_to_irq(node, vector)    \
+	(platform_legacy_irq(vector) ? vector : vector_irq[node][vector])

CHECK:LINE_SPACING: Please don't use multiple blank lines
#213: FILE: arch/i386/kernel/io_apic.c:90:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#227: FILE: arch/i386/kernel/io_apic.c:1129:
+	static u8 current_vector[NR_IRQ_NODES] = {[0 ... NR_IRQ_NODES-1] =
 	                                                             ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vector > 0'
#236: FILE: arch/i386/kernel/io_apic.c:1135:
+	if ((vector > 0) && (irq != AUTO_ASSIGN)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq != AUTO_ASSIGN'
#236: FILE: arch/i386/kernel/io_apic.c:1135:
+	if ((vector > 0) && (irq != AUTO_ASSIGN)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#252: FILE: arch/i386/kernel/io_apic.c:1143:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: arch/i386/kernel/io_apic.c:1156:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: arch/i386/kernel/io_apic.c:1197:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#429: FILE: arch/i386/kernel/io_apic.c:2064:
+				if ((tmp = vector_to_irq(0, tmp)) == -1) /* FIXME - zwane */

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#618: FILE: arch/i386/kernel/traps.c:1137:
+		_set_gate(idt_table+n,14,0,addr,__KERNEL_CS);
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#618: FILE: arch/i386/kernel/traps.c:1137:
+		_set_gate(idt_table+n,14,0,addr,__KERNEL_CS);
 		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#618: FILE: arch/i386/kernel/traps.c:1137:
+		_set_gate(idt_table+n,14,0,addr,__KERNEL_CS);
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#618: FILE: arch/i386/kernel/traps.c:1137:
+		_set_gate(idt_table+n,14,0,addr,__KERNEL_CS);
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#618: FILE: arch/i386/kernel/traps.c:1137:
+		_set_gate(idt_table+n,14,0,addr,__KERNEL_CS);
 		                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#630: FILE: arch/i386/kernel/traps.c:1148:
+		_set_gate(idt_table+n,14,0,addr,__KERNEL_CS);
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#630: FILE: arch/i386/kernel/traps.c:1148:
+		_set_gate(idt_table+n,14,0,addr,__KERNEL_CS);
 		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#630: FILE: arch/i386/kernel/traps.c:1148:
+		_set_gate(idt_table+n,14,0,addr,__KERNEL_CS);
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#630: FILE: arch/i386/kernel/traps.c:1148:
+		_set_gate(idt_table+n,14,0,addr,__KERNEL_CS);
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#630: FILE: arch/i386/kernel/traps.c:1148:
+		_set_gate(idt_table+n,14,0,addr,__KERNEL_CS);
 		                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#636: FILE: arch/i386/kernel/traps.c:1154:
+	_set_gate(&boot_idt_table[n],14,0,addr,__KERNEL_CS);
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#636: FILE: arch/i386/kernel/traps.c:1154:
+	_set_gate(&boot_idt_table[n],14,0,addr,__KERNEL_CS);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#636: FILE: arch/i386/kernel/traps.c:1154:
+	_set_gate(&boot_idt_table[n],14,0,addr,__KERNEL_CS);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#636: FILE: arch/i386/kernel/traps.c:1154:
+	_set_gate(&boot_idt_table[n],14,0,addr,__KERNEL_CS);
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#648: FILE: arch/i386/kernel/traps.c:1163:
+	_set_gate(&boot_idt_table[n],14, 3, addr, __KERNEL_CS);
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#654: FILE: arch/i386/kernel/traps.c:1168:
+	_set_gate(&boot_idt_table[n],15,0,addr,__KERNEL_CS);
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#654: FILE: arch/i386/kernel/traps.c:1168:
+	_set_gate(&boot_idt_table[n],15,0,addr,__KERNEL_CS);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#654: FILE: arch/i386/kernel/traps.c:1168:
+	_set_gate(&boot_idt_table[n],15,0,addr,__KERNEL_CS);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#654: FILE: arch/i386/kernel/traps.c:1168:
+	_set_gate(&boot_idt_table[n],15,0,addr,__KERNEL_CS);
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#660: FILE: arch/i386/kernel/traps.c:1173:
+	_set_gate(&boot_idt_table[n],15,3,addr,__KERNEL_CS);
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#660: FILE: arch/i386/kernel/traps.c:1173:
+	_set_gate(&boot_idt_table[n],15,3,addr,__KERNEL_CS);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#660: FILE: arch/i386/kernel/traps.c:1173:
+	_set_gate(&boot_idt_table[n],15,3,addr,__KERNEL_CS);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#660: FILE: arch/i386/kernel/traps.c:1173:
+	_set_gate(&boot_idt_table[n],15,3,addr,__KERNEL_CS);
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#666: FILE: arch/i386/kernel/traps.c:1178:
+	_set_gate(&boot_idt_table[n],5,0,0,(gdt_entry<<3));
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#666: FILE: arch/i386/kernel/traps.c:1178:
+	_set_gate(&boot_idt_table[n],5,0,0,(gdt_entry<<3));
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#666: FILE: arch/i386/kernel/traps.c:1178:
+	_set_gate(&boot_idt_table[n],5,0,0,(gdt_entry<<3));
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#666: FILE: arch/i386/kernel/traps.c:1178:
+	_set_gate(&boot_idt_table[n],5,0,0,(gdt_entry<<3));
 	                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#666: FILE: arch/i386/kernel/traps.c:1178:
+	_set_gate(&boot_idt_table[n],5,0,0,(gdt_entry<<3));
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#680: FILE: arch/i386/kernel/traps.c:1203:
+	boot_set_intr_gate(1,&debug);
 	                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#680: FILE: arch/i386/kernel/traps.c:1203:
+	boot_set_intr_gate(1,&debug);
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#681: FILE: arch/i386/kernel/traps.c:1204:
+	boot_set_intr_gate(2,&nmi);
 	                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#681: FILE: arch/i386/kernel/traps.c:1204:
+	boot_set_intr_gate(2,&nmi);
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#690: FILE: arch/i386/kernel/traps.c:1220:
+	boot_set_intr_gate(14,&page_fault);
 	                     ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#690: FILE: arch/i386/kernel/traps.c:1220:
+	boot_set_intr_gate(14,&page_fault);
 	                      ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#732: FILE: arch/i386/kernel/cpu/common.c:591:
 void __devinit cpu_init(void)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#755: FILE: arch/i386/kernel/cpu/common.c:647:
+	printk("CPU%d IDT at %lx\n", cpu, cpu_idt_descr[cpu].address);

WARNING:LINE_SPACING: Missing a blank line after declarations
#794: FILE: arch/i386/mm/fault.c:413:
+		unsigned long nr, node;
+		node = cpu_to_node(smp_processor_id());

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#860: FILE: drivers/pci/msi.c:346:
+	if ((vector = assign_msi_vector(node)) > 0)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1041: FILE: include/asm-i386/cpu.h:20:
+extern void __devinit setup_idts(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1041: FILE: include/asm-i386/cpu.h:20:
+extern void __devinit setup_idts(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:CAMELCASE: Avoid CamelCase: <Xgt_desc_struct>
#1075: FILE: include/asm-i386/desc.h:32:
+extern struct Xgt_desc_struct cpu_idt_descr[NR_CPUS], cpu_gdt_descr[NR_CPUS];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1084: FILE: include/asm-i386/desc.h:52:
+extern void set_intr_gate(unsigned int vector, void * addr);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1084: FILE: include/asm-i386/desc.h:52:
+extern void set_intr_gate(unsigned int vector, void * addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1085: FILE: include/asm-i386/desc.h:53:
+extern void __init boot_set_intr_gate(unsigned int vector, void *addr);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1086: FILE: include/asm-i386/desc.h:54:
+extern void node_set_intr_gate(unsigned int node, unsigned int vector, void * addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1086: FILE: include/asm-i386/desc.h:54:
+extern void node_set_intr_gate(unsigned int node, unsigned int vector, void * addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1118: FILE: include/asm-i386/io_apic.h:211:
+extern int assign_irq_vector(int irq, int node);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160366.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 39 errors, 5 warnings, 15 checks, 964 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160366.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
