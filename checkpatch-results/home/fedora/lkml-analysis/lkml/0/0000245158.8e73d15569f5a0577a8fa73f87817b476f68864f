WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#68: FILE: include/linux/pci.h:1010:
+	pci_fixup_early,	/* Called immediately after reading
+				   device/vendor IDs and class code */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#68: FILE: include/linux/pci.h:1010:
+				   device/vendor IDs and class code */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#70: FILE: include/linux/pci.h:1012:
+	pci_fixup_header,	/* Called after reading the entire
+				   configuration header (including BARs) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#70: FILE: include/linux/pci.h:1012:
+				   configuration header (including BARs) */

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#79: FILE: include/linux/pci.h:1017:
+#define DECLARE_PCI_FIXUP_SECTION(section, name, vendor, device, hook)	\
+	static struct pci_fixup __pci_fixup_##name __attribute_used__	\
+	__attribute__((__section__( #section ))) = { vendor, device, hook };

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: space prohibited after that open parenthesis '('
#81: FILE: include/linux/pci.h:1019:
+	__attribute__((__section__( #section ))) = { vendor, device, hook };

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#81: FILE: include/linux/pci.h:1019:
+	__attribute__((__section__( #section ))) = { vendor, device, hook };

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section( #section ) over __attribute__((__section__( #section )))
#81: FILE: include/linux/pci.h:1019:
+	__attribute__((__section__( #section ))) = { vendor, device, hook };

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#108: FILE: drivers/pci/quirks.c:1003:
+extern struct pci_fixup __end_pci_fixups_early[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000245158.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 7 warnings, 0 checks, 83 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000245158.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
