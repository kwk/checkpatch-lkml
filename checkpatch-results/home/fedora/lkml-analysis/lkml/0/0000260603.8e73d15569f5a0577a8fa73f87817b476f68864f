CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#55: FILE: arch/ppc/kernel/align.c:92:
+	{ 4, LD+M+HARD+SX },	/* 01 0 1000: lswx */
 	       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#55: FILE: arch/ppc/kernel/align.c:92:
+	{ 4, LD+M+HARD+SX },	/* 01 0 1000: lswx */
 	         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#55: FILE: arch/ppc/kernel/align.c:92:
+	{ 4, LD+M+HARD+SX },	/* 01 0 1000: lswx */
 	              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#56: FILE: arch/ppc/kernel/align.c:93:
+	{ 4, LD+M+HARD },	/* 01 0 1001: lswi */
 	       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#56: FILE: arch/ppc/kernel/align.c:93:
+	{ 4, LD+M+HARD },	/* 01 0 1001: lswi */
 	         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#57: FILE: arch/ppc/kernel/align.c:94:
+	{ 4, ST+M+HARD+SX },	/* 01 0 1010: stswx */
 	       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#57: FILE: arch/ppc/kernel/align.c:94:
+	{ 4, ST+M+HARD+SX },	/* 01 0 1010: stswx */
 	         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#57: FILE: arch/ppc/kernel/align.c:94:
+	{ 4, ST+M+HARD+SX },	/* 01 0 1010: stswx */
 	              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#58: FILE: arch/ppc/kernel/align.c:95:
+	{ 4, ST+M+HARD },	/* 01 0 1011: stswi */
 	       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#58: FILE: arch/ppc/kernel/align.c:95:
+	{ 4, ST+M+HARD },	/* 01 0 1011: stswi */
 	         ^

CHECK:SPACING: No space is necessary after a cast
#77: FILE: arch/ppc/kernel/align.c:212:
+	if (__get_user(instr, (unsigned int __user *) regs->nip))

CHECK:SPACING: No space is necessary after a cast
#96: FILE: arch/ppc/kernel/align.c:249:
+		p = (long __user *) (regs->dar & -L1_CACHE_BYTES);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#98: FILE: arch/ppc/kernel/align.c:251:
+		if (user_mode(regs)
+		    && verify_area(VERIFY_WRITE, p, L1_CACHE_BYTES))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#102: FILE: arch/ppc/kernel/align.c:254:
+			if (__put_user(0, p+i))
 			                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#108: FILE: arch/ppc/kernel/align.c:260:
+	if ((flags & (LD|ST)) == 0)
 	                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: arch/ppc/kernel/align.c:279:
+				if (__get_user(instr,
+					    (unsigned int __user *)regs->nip))

CHECK:SPACING: No space is necessary after a cast
#141: FILE: arch/ppc/kernel/align.c:293:
+		rptr = (unsigned char *) &regs->gpr[reg];

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#144: FILE: arch/ppc/kernel/align.c:296:
+				if (__get_user(rptr[i], addr+i))
 				                            ^

CHECK:SPACING: No space is necessary after a cast
#147: FILE: arch/ppc/kernel/align.c:299:
+				rptr = (unsigned char *) &regs->gpr[0];

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#150: FILE: arch/ppc/kernel/align.c:302:
+					if (__get_user(rptr[i], addr+i))
 					                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#157: FILE: arch/ppc/kernel/align.c:309:
+				if (__put_user(rptr[i], addr+i))
 				                            ^

CHECK:SPACING: No space is necessary after a cast
#160: FILE: arch/ppc/kernel/align.c:312:
+				rptr = (unsigned char *) &regs->gpr[0];

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#163: FILE: arch/ppc/kernel/align.c:315:
+					if (__put_user(rptr[i], addr+i))
 					                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#195: FILE: arch/ppc/kernel/align.c:345:
+			if (__get_user(data.v[offset+i], addr+i))
 			                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#195: FILE: arch/ppc/kernel/align.c:345:
+			if (__get_user(data.v[offset+i], addr+i))
 			                                     ^

WARNING:TYPO_SPELLING: 'fpr' may be misspelled - perhaps 'for'?
#203: FILE: arch/ppc/kernel/align.c:348:
+		data.d = current->thread.fpr[reg];
 		                         ^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#210: FILE: arch/ppc/kernel/align.c:354:
+	case LD+SE:	/* sign extend */
 	       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#230: FILE: arch/ppc/kernel/align.c:359:
+	case LD+S:	/* byte-swap */
 	       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#278: FILE: arch/ppc/kernel/align.c:386:
+			if (__put_user(data.v[offset+i], addr+i))
 			                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#278: FILE: arch/ppc/kernel/align.c:386:
+			if (__put_user(data.v[offset+i], addr+i))
 			                                     ^

WARNING:TYPO_SPELLING: 'fpr' may be misspelled - perhaps 'for'?
#286: FILE: arch/ppc/kernel/align.c:389:
+		current->thread.fpr[reg] = data.d;
 		                ^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000260603.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 2 warnings, 29 checks, 250 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000260603.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
