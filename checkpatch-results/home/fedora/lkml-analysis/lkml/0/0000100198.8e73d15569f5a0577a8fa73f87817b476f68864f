WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct v9fs_session_info *' should also have an identifier name
#200: FILE: fs/9p/fid.h:58:
+struct v9fs_fid *v9fs_fid_create(struct v9fs_session_info *, int fid);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#257: FILE: fs/9p/vfs_file.c:71:
+	if (fid < 0) {
 			eprintk(KERN_WARNING, "newfid fails!\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#268: FILE: fs/9p/vfs_file.c:77:
+	if (err < 0) {
 			dprintk(DEBUG_ERROR, "rewalk didn't work\n");

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*vfid)...) over kmalloc(sizeof(struct v9fs_fid)...)
#274: FILE: fs/9p/vfs_file.c:82:
+	vfid = kmalloc(sizeof(struct v9fs_fid), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vfid"
#275: FILE: fs/9p/vfs_file.c:83:
+	if (vfid == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#301: FILE: fs/9p/vfs_file.c:104:
+	vfid->filp = file;
 	      ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#370: FILE: fs/9p/vfs_inode.c:133:
+	switch (uflags&3) {
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: fs/9p/vfs_inode.c:258:
+v9fs_create(struct v9fs_session_info *v9ses, u32 pfid, char *name, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: fs/9p/vfs_inode.c:259:
+v9fs_create(struct v9fs_session_info *v9ses, u32 pfid, char *name, 
+	u32 perm, u8 mode, u32 *fidp, struct v9fs_qid *qid, u32 *iounit)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#567: FILE: fs/9p/vfs_inode.c:320:
+^Ierr = v9fs_t_walk(v9ses, fid, nfid, (char *) dentry->d_name.name, $

CHECK:SPACING: No space is necessary after a cast
#567: FILE: fs/9p/vfs_inode.c:320:
+	err = v9fs_t_walk(v9ses, fid, nfid, (char *) dentry->d_name.name, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#568: FILE: fs/9p/vfs_inode.c:321:
+	err = v9fs_t_walk(v9ses, fid, nfid, (char *) dentry->d_name.name, 
+		&fcall);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#616: FILE: fs/9p/vfs_inode.c:354:
+v9fs_inode_from_fid(struct v9fs_session_info *v9ses, u32 fid, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#617: FILE: fs/9p/vfs_inode.c:355:
+v9fs_inode_from_fid(struct v9fs_session_info *v9ses, u32 fid, 
+	struct super_block *sb)

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#657: FILE: fs/9p/vfs_inode.c:383:
+		iput(ret);
 		^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#707: FILE: fs/9p/vfs_inode.c:465:
+	struct file *filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#715: FILE: fs/9p/vfs_inode.c:473:
+	if (nd && nd->flags & LOOKUP_OPEN)
 	    ^^

CHECK:SPACING: No space is necessary after a cast
#720: FILE: fs/9p/vfs_inode.c:478:
+	err = v9fs_create(v9ses, dfid->fid, (char *) dentry->d_name.name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#721: FILE: fs/9p/vfs_inode.c:479:
+	err = v9fs_create(v9ses, dfid->fid, (char *) dentry->d_name.name,
+		perm, v9fs_uflags2omode(flags), &fid, &qid, &iounit);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#743: FILE: fs/9p/vfs_inode.c:501:
+	if (nd && nd->flags & LOOKUP_OPEN) {
 	    ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#748: FILE: fs/9p/vfs_inode.c:506:
+		filp = lookup_instantiate_filp(nd, dentry, v9fs_open_created);
 		^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#748: FILE: fs/9p/vfs_inode.c:506:
+		filp = lookup_instantiate_filp(nd, dentry, v9fs_open_created);
 		                               ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#749: FILE: fs/9p/vfs_inode.c:507:
+		if (IS_ERR(filp)) {
 		           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#751: FILE: fs/9p/vfs_inode.c:509:
+			return PTR_ERR(filp);
 			               ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#758: FILE: fs/9p/vfs_inode.c:516:
+		ffid->filp = filp;
 		      ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#758: FILE: fs/9p/vfs_inode.c:516:
+		ffid->filp = filp;
 		             ^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#769: FILE: fs/9p/vfs_inode.c:527:
+		iput(inode);
 		^^^^

CHECK:SPACING: No space is necessary after a cast
#795: FILE: fs/9p/vfs_inode.c:554:
+	err = v9fs_create(v9ses, dfid->fid, (char *) dentry->d_name.name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#796: FILE: fs/9p/vfs_inode.c:555:
+	err = v9fs_create(v9ses, dfid->fid, (char *) dentry->d_name.name,
+		perm, V9FS_OREAD, &fid, NULL, NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#842: FILE: fs/9p/vfs_inode.c:640:
+^Iresult = v9fs_t_walk(v9ses, dirfidnum, newfid, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#843: FILE: fs/9p/vfs_inode.c:641:
+	result = v9fs_t_walk(v9ses, dirfidnum, newfid, 
+		(char *)dentry->d_name.name, NULL);

CHECK:CAMELCASE: Avoid CamelCase: <FreeFcall>
#861: FILE: fs/9p/vfs_inode.c:683:
+		goto FreeFcall;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#919: FILE: fs/9p/vfs_inode.c:1130:
+	err = v9fs_create(v9ses, dfid->fid, (char *) dentry->d_name.name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#920: FILE: fs/9p/vfs_inode.c:1131:
+	err = v9fs_create(v9ses, dfid->fid, (char *) dentry->d_name.name,
+		perm, V9FS_OREAD, &fid, NULL, NULL);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#980: FILE: fs/9p/vfs_inode.c:1175:
+		iput(inode);
 		^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000100198.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 16 warnings, 15 checks, 918 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000100198.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
