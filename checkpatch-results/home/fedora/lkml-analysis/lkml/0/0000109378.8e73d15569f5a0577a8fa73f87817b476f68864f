WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
unsigned long find_next_zero_bit(const unsigned long *addr, unsigned long size,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#56: FILE: include/asm-generic/bitops/find.h:1:
+#ifndef _ASM_GENERIC_BITOPS_FIND_H_

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#70: FILE: include/asm-generic/bitops/find.h:15:
+static inline unsigned long find_next_bit(const unsigned long *addr,
+				unsigned long size, unsigned long offset)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#73: FILE: include/asm-generic/bitops/find.h:18:
+	unsigned long result = offset & ~(BITS_PER_LONG-1);
 	                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#90: FILE: include/asm-generic/bitops/find.h:35:
+	while (size & ~(BITS_PER_LONG-1)) {
 	                             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#91: FILE: include/asm-generic/bitops/find.h:36:
+		if ((tmp = *(p++)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: include/asm-generic/bitops/find.h:58:
+static inline unsigned long find_next_zero_bit(const unsigned long *addr,
+				unsigned long size, unsigned long offset)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#116: FILE: include/asm-generic/bitops/find.h:61:
+	unsigned long result = offset & ~(BITS_PER_LONG-1);
 	                                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#133: FILE: include/asm-generic/bitops/find.h:78:
+	while (size & ~(BITS_PER_LONG-1)) {
 	                             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#134: FILE: include/asm-generic/bitops/find.h:79:
+		if (~(tmp = *(p++)))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000109378.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 2 warnings, 6 checks, 99 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000109378.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
