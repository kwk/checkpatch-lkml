WARNING:INLINE: plain inline is preferred over __inline__
#505: FILE: include/asm-h8300/delay.h:30:
+extern __inline__ void __udelay(unsigned long usecs)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#522: FILE: include/asm-i386/delay.h:14:
+extern void __const_delay(unsigned long usecs);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#558: FILE: include/asm-m32r/delay.h:16:
+extern void __const_delay(unsigned long usecs);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#658: FILE: include/asm-mips/delay.h:84:
+#define __udelay(usecs) __arch_udelay((usecs),__udelay_val)
                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#679: FILE: include/asm-powerpc/delay.h:18:
+extern void __udelay(unsigned long usecs);

WARNING:INLINE: plain inline is preferred over __inline__
#694: FILE: include/asm-ppc/delay.h:35:
+extern __inline__ void __arch_udelay(unsigned int x)

WARNING:INLINE: plain inline is preferred over __inline__
#703: FILE: include/asm-ppc/delay.h:44:
+extern __inline__ void __arch_ndelay(unsigned int x)

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#722: FILE: include/asm-ppc/delay.h:58:
+	((n) > __MAX_NDELAY? __bad_ndelay(): __arch_ndelay((n) * HZ)) : \
 	                   ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#722: FILE: include/asm-ppc/delay.h:58:
+	((n) > __MAX_NDELAY? __bad_ndelay(): __arch_ndelay((n) * HZ)) : \
 	                                   ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#750: FILE: include/asm-sh/delay.h:14:
+extern void __const_delay(unsigned long usecs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#774: FILE: include/asm-sh64/delay.h:5:
+extern void __udelay(unsigned long usecs);

WARNING:REPEATED_WORD: Possible repeated word: 'ndelay'
#777: FILE: include/asm-sh64/delay.h:8:
+#define ndelay ndelay

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#800: FILE: include/asm-sparc64/delay.h:24:
+extern void __const_delay(unsigned long usecs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#838: FILE: include/asm-x86_64/delay.h:14:
+extern void __const_delay(unsigned long usecs);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#847: FILE: include/asm-x86_64/delay.h:18:
+       ((n) > 20000 ? __bad_ndelay() : __const_delay((n) * 5ul)) : \$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#859: FILE: include/asm-xtensa/delay.h:38:
+static __inline__ void __udelay (unsigned long usecs)

WARNING:INLINE: plain inline is preferred over __inline__
#859: FILE: include/asm-xtensa/delay.h:38:
+static __inline__ void __udelay (unsigned long usecs)

WARNING:LINE_SPACING: Missing a blank line after declarations
#921: FILE: kernel/timer.c:1891:
+	unsigned int k;
+	if (unlikely(usecs > 200*1000)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#921: FILE: kernel/timer.c:1891:
+	if (unlikely(usecs > 200*1000)) {
 	                        ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#922: FILE: kernel/timer.c:1892:
+		printk("BUG: delay too large: udelay(%u)\n", usecs);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'udelay', this function's name, in a string
#922: FILE: kernel/timer.c:1892:
+		printk("BUG: delay too large: udelay(%u)\n", usecs);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#924: FILE: kernel/timer.c:1894:
+		usecs = 200*1000;
 		           ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#935: FILE: kernel/timer.c:1905:
+EXPORT_SYMBOL(udelay);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#943: FILE: kernel/timer.c:1913:
+EXPORT_SYMBOL(mdelay);

ERROR:CODE_INDENT: code indent should use tabs where possible
#954: FILE: kernel/timer.c:1931:
+        msleep(secs * 1000);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: kernel/timer.c:1931:
+        msleep(secs * 1000);$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#957: FILE: kernel/timer.c:1934:
+EXPORT_SYMBOL(ssleep);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000036029.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 14 warnings, 9 checks, 670 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000036029.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
