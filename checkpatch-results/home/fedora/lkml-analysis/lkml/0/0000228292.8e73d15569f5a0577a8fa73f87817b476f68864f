WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: drivers/infiniband/core/agent.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#68: FILE: drivers/infiniband/core/agent.c:2:
+/*
+  This software is available to you under a choice of one of two

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:INCLUDE_LINUX: Use #include <linux/bug.h> instead of <asm/bug.h>
#94: FILE: drivers/infiniband/core/agent.c:28:
+#include <asm/bug.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#102: FILE: drivers/infiniband/core/agent.c:36:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#103: FILE: drivers/infiniband/core/agent.c:37:
+spinlock_t ib_agent_port_list_lock;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#106: FILE: drivers/infiniband/core/agent.c:40:
+extern kmem_cache_t *ib_mad_cache;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#108: FILE: drivers/infiniband/core/agent.c:42:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#118: FILE: drivers/infiniband/core/agent.c:52:
+	BUG_ON(!(!!device ^ !!mad_agent));  /* Exactly one MUST be (!NULL) */

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry->dr_smp_agent == mad_agent'
#128: FILE: drivers/infiniband/core/agent.c:62:
+			if ((entry->dr_smp_agent == mad_agent) ||
+			    (entry->lr_smp_agent == mad_agent) ||
+			    (entry->perf_mgmt_agent == mad_agent))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry->lr_smp_agent == mad_agent'
#128: FILE: drivers/infiniband/core/agent.c:62:
+			if ((entry->dr_smp_agent == mad_agent) ||
+			    (entry->lr_smp_agent == mad_agent) ||
+			    (entry->perf_mgmt_agent == mad_agent))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry->perf_mgmt_agent == mad_agent'
#128: FILE: drivers/infiniband/core/agent.c:62:
+			if ((entry->dr_smp_agent == mad_agent) ||
+			    (entry->lr_smp_agent == mad_agent) ||
+			    (entry->perf_mgmt_agent == mad_agent))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#161: FILE: drivers/infiniband/core/agent.c:95:
+		printk(KERN_DEBUG SPFX "smi_check_local_dr_smp %s port %d "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'smi_check_local_dr_smp', this function's name, in a string
#161: FILE: drivers/infiniband/core/agent.c:95:
+		printk(KERN_DEBUG SPFX "smi_check_local_dr_smp %s port %d "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#162: FILE: drivers/infiniband/core/agent.c:96:
+		printk(KERN_DEBUG SPFX "smi_check_local_dr_smp %s port %d "
+		       "not open\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#216: FILE: drivers/infiniband/core/agent.c:150:
+			ah_attr.grh.flow_label = be32_to_cpup(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#218: FILE: drivers/infiniband/core/agent.c:152:
+			ah_attr.grh.traffic_class = (be32_to_cpup(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#233: FILE: drivers/infiniband/core/agent.c:167:
+		printk(KERN_ERR SPFX "No memory for address handle\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#283: FILE: drivers/infiniband/core/agent.c:217:
+		printk(KERN_DEBUG SPFX "agent_send %s port %d not open\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'agent_send', this function's name, in a string
#283: FILE: drivers/infiniband/core/agent.c:217:
+		printk(KERN_DEBUG SPFX "agent_send %s port %d not open\n",

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#289: FILE: drivers/infiniband/core/agent.c:223:
+	switch (mad->mad.mad.mad_hdr.mgmt_class) {
+		case IB_MGMT_CLASS_SUBN_DIRECTED_ROUTE:
[...]
+		case IB_MGMT_CLASS_SUBN_LID_ROUTED:
[...]
+		case IB_MGMT_CLASS_PERF_MGMT:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#316: FILE: drivers/infiniband/core/agent.c:250:
+		printk(KERN_ERR SPFX "agent_send_handler: no matching MAD "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'agent_send_handler', this function's name, in a string
#316: FILE: drivers/infiniband/core/agent.c:250:
+		printk(KERN_ERR SPFX "agent_send_handler: no matching MAD "

WARNING:SPLIT_STRING: quoted string split across lines
#317: FILE: drivers/infiniband/core/agent.c:251:
+		printk(KERN_ERR SPFX "agent_send_handler: no matching MAD "
+		       "agent %p\n", mad_agent);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#350: FILE: drivers/infiniband/core/agent.c:284:
+		printk(KERN_DEBUG SPFX "%s port %d already open\n",

WARNING:SIZEOF_PARENTHESIS: sizeof *port_priv should be sizeof(*port_priv)
#356: FILE: drivers/infiniband/core/agent.c:290:
+	port_priv = kmalloc(sizeof *port_priv, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#358: FILE: drivers/infiniband/core/agent.c:292:
+		printk(KERN_ERR SPFX "No memory for ib_agent_port_private\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#358: FILE: drivers/infiniband/core/agent.c:292:
+	if (!port_priv) {
+		printk(KERN_ERR SPFX "No memory for ib_agent_port_private\n");

WARNING:SIZEOF_PARENTHESIS: sizeof *port_priv should be sizeof(*port_priv)
#363: FILE: drivers/infiniband/core/agent.c:297:
+	memset(port_priv, 0, sizeof *port_priv);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#410: FILE: drivers/infiniband/core/agent.c:344:
+		printk(KERN_ERR SPFX "Couldn't get DMA MR\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: drivers/infiniband/core/agent.c:347:
+^I} $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_priv"
#440: FILE: drivers/infiniband/core/agent.c:374:
+	if (port_priv == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#442: FILE: drivers/infiniband/core/agent.c:376:
+		printk(KERN_ERR SPFX "Port %d not found\n", port_num);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#460: FILE: drivers/infiniband/core/agent.h:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#461: FILE: drivers/infiniband/core/agent.h:2:
+/*
+  This software is available to you under a choice of one of two

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#490: FILE: drivers/infiniband/core/agent.h:31:
+extern int ib_agent_port_open(struct ib_device *device,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#493: FILE: drivers/infiniband/core/agent.h:34:
+extern int ib_agent_port_close(struct ib_device *device, int port_num);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#495: FILE: drivers/infiniband/core/agent.h:36:
+extern int agent_send(struct ib_mad_private *mad,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#505: FILE: drivers/infiniband/core/agent_priv.h:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#506: FILE: drivers/infiniband/core/agent_priv.h:2:
+/*
+  This software is available to you under a choice of one of two

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#547: FILE: drivers/infiniband/core/agent_priv.h:43:
+	spinlock_t send_list_lock;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#559: FILE: drivers/infiniband/core/mad.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: drivers/infiniband/core/mad.c:6:
+ * protocol stack for Linux Servers. $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#573: FILE: drivers/infiniband/core/mad.c:15:
+ *    Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA, or on the$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#600: FILE: drivers/infiniband/core/mad.c:42:
+ * Attention: Voltaire openSource maintainer, $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#623: FILE: drivers/infiniband/core/mad.c:65:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#629: FILE: drivers/infiniband/core/mad.c:71:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#632: FILE: drivers/infiniband/core/mad.c:74:
+static u32 ib_mad_client_id = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#637: FILE: drivers/infiniband/core/mad.c:79:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#643: FILE: drivers/infiniband/core/mad.c:85:
+static void remove_mad_reg_req(struct ib_mad_agent_private *priv); $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#694: FILE: drivers/infiniband/core/mad.c:136:
+	switch (qp_type)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#760: FILE: drivers/infiniband/core/mad.c:202:
+^I^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#761: FILE: drivers/infiniband/core/mad.c:203:
+^I^I^I * Class 0 is reserved in IBA and is used for $

WARNING:SIZEOF_PARENTHESIS: sizeof *mad_agent_priv should be sizeof(*mad_agent_priv)
#783: FILE: drivers/infiniband/core/mad.c:225:
+	mad_agent_priv = kmalloc(sizeof *mad_agent_priv, GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#784: FILE: drivers/infiniband/core/mad.c:226:
+^Iif (!mad_agent_priv) { $

WARNING:SIZEOF_PARENTHESIS: sizeof *reg_req should be sizeof(*reg_req)
#790: FILE: drivers/infiniband/core/mad.c:232:
+		reg_req = kmalloc(sizeof *reg_req, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *reg_req should be sizeof(*reg_req)
#796: FILE: drivers/infiniband/core/mad.c:238:
+		memcpy(reg_req, mad_reg_req, sizeof *reg_req);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#798: FILE: drivers/infiniband/core/mad.c:240:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: drivers/infiniband/core/mad.c:240:
+ $

WARNING:SIZEOF_PARENTHESIS: sizeof *mad_agent_priv should be sizeof(*mad_agent_priv)
#800: FILE: drivers/infiniband/core/mad.c:242:
+	memset(mad_agent_priv, 0, sizeof *mad_agent_priv);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#821: FILE: drivers/infiniband/core/mad.c:263:
+			mgmt_class = convert_mgmt_class(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#835: FILE: drivers/infiniband/core/mad.c:277:
+^I^Iret = ERR_PTR(ret2);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#836: FILE: drivers/infiniband/core/mad.c:278:
+^I^Igoto error3;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#858: FILE: drivers/infiniband/core/mad.c:300:
+^Ireturn ret;^I$

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#898: FILE: drivers/infiniband/core/mad.c:340:
+	if (mad_agent_priv->reg_req)
+		kfree(mad_agent_priv->reg_req);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#909: FILE: drivers/infiniband/core/mad.c:351:
+	BUG_ON(!mad_list->mad_queue);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#920: FILE: drivers/infiniband/core/mad.c:362:
+ * Return < 0 if error $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#932: FILE: drivers/infiniband/core/mad.c:374:
+		printk(KERN_ERR PFX "Invalid directed route\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#935: FILE: drivers/infiniband/core/mad.c:377:
+	if (smi_check_local_dr_smp(smp,
[...]
+	} else 
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:IN_ATOMIC: do not use in_atomic in drivers
#943: FILE: drivers/infiniband/core/mad.c:385:
+					    (in_atomic() || irqs_disabled()) ?

in_atomic() is not for driver use so any such use is reported as an ERROR.
Also in_atomic() is often used to determine if sleeping is permitted,
but it is not reliable in this use model.  Therefore its use is
strongly discouraged.

However, in_atomic() is ok for core kernel use.

See: https://lore.kernel.org/lkml/20080320201723.b87b3732.akpm@linux-foundation.org/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#947: FILE: drivers/infiniband/core/mad.c:389:
+			printk(KERN_ERR PFX "No memory for local "

WARNING:SPLIT_STRING: quoted string split across lines
#948: FILE: drivers/infiniband/core/mad.c:390:
+			printk(KERN_ERR PFX "No memory for local "
+			       "response MAD\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#957: FILE: drivers/infiniband/core/mad.c:399:
+			ret = mad_agent->device->process_mad(

CHECK:BRACES: braces {} should be used on all arms of this statement
#964: FILE: drivers/infiniband/core/mad.c:406:
+			if (ret & IB_MAD_RESULT_SUCCESS) {
[...]
+			} else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#969: FILE: drivers/infiniband/core/mad.c:411:
+				if (ret & IB_MAD_RESULT_REPLY) {
[...]
+				} else
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#974: FILE: drivers/infiniband/core/mad.c:416:
+^I^I^I^I^Iif (solicited_mad(&mad_priv->mad.mad) && $

CHECK:BRACES: braces {} should be used on all arms of this statement
#974: FILE: drivers/infiniband/core/mad.c:416:
+					if (solicited_mad(&mad_priv->mad.mad) && 
[...]
+					} else
[...]

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1003: FILE: drivers/infiniband/core/mad.c:445:
+						mad_agent_priv->agent.recv_handler(

CHECK:BRACES: Unbalanced braces around else statement
#1006: FILE: drivers/infiniband/core/mad.c:448:
+					} else

CHECK:BRACES: Unbalanced braces around else statement
#1008: FILE: drivers/infiniband/core/mad.c:450:
+				} else

CHECK:BRACES: Unbalanced braces around else statement
#1010: FILE: drivers/infiniband/core/mad.c:452:
+			} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1014: FILE: drivers/infiniband/core/mad.c:456:
+		if (mad_agent_priv->agent.send_handler) {
[...]
+		} else
[...]

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1019: FILE: drivers/infiniband/core/mad.c:461:
+			mad_agent_priv->agent.send_handler(

CHECK:BRACES: Unbalanced braces around else statement
#1023: FILE: drivers/infiniband/core/mad.c:465:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1025: FILE: drivers/infiniband/core/mad.c:467:
+^I} else $

CHECK:BRACES: Unbalanced braces around else statement
#1025: FILE: drivers/infiniband/core/mad.c:467:
+	} else 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1051: FILE: drivers/infiniband/core/mad.c:493:
+^I^Iret = ib_post_send(mad_agent_priv->agent.qp, $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1054: FILE: drivers/infiniband/core/mad.c:496:
+			printk(KERN_ERR PFX "ib_post_send failed: %d\n", ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1106: FILE: drivers/infiniband/core/mad.c:548:
+			printk(KERN_ERR PFX "MAD header must be supplied "

WARNING:SPLIT_STRING: quoted string split across lines
#1107: FILE: drivers/infiniband/core/mad.c:549:
+			printk(KERN_ERR PFX "MAD header must be supplied "
+			       "in WR %p\n", send_wr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1128: FILE: drivers/infiniband/core/mad.c:570:
+^I^Imad_send_wr = kmalloc(sizeof *mad_send_wr, $

WARNING:SIZEOF_PARENTHESIS: sizeof *mad_send_wr should be sizeof(*mad_send_wr)
#1128: FILE: drivers/infiniband/core/mad.c:570:
+		mad_send_wr = kmalloc(sizeof *mad_send_wr, 

ERROR:IN_ATOMIC: do not use in_atomic in drivers
#1129: FILE: drivers/infiniband/core/mad.c:571:
+				      (in_atomic() || irqs_disabled()) ?

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1132: FILE: drivers/infiniband/core/mad.c:574:
+			printk(KERN_ERR PFX "No memory for "

WARNING:SPLIT_STRING: quoted string split across lines
#1133: FILE: drivers/infiniband/core/mad.c:575:
+			printk(KERN_ERR PFX "No memory for "
+			       "ib_mad_send_wr_private\n");

WARNING:SIZEOF_PARENTHESIS: sizeof *send_wr->sg_list should be sizeof(*send_wr->sg_list)
#1141: FILE: drivers/infiniband/core/mad.c:583:
+		       sizeof *send_wr->sg_list * send_wr->num_sge);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'send_wr->wr.ud.timeout_ms'
#1147: FILE: drivers/infiniband/core/mad.c:589:
+		mad_send_wr->timeout = msecs_to_jiffies(send_wr->wr.
+							ud.timeout_ms);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1172: FILE: drivers/infiniband/core/mad.c:614:
+^Ireturn 0;^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1217: FILE: drivers/infiniband/core/mad.c:659:
+	printk(KERN_ERR PFX "ib_coalesce_recv_mad() not implemented yet\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ib_coalesce_recv_mad', this function's name, in a string
#1217: FILE: drivers/infiniband/core/mad.c:659:
+	printk(KERN_ERR PFX "ib_coalesce_recv_mad() not implemented yet\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1234: FILE: drivers/infiniband/core/mad.c:676:
+	printk(KERN_ERR PFX "ib_process_mad_wc() not implemented yet\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ib_process_mad_wc', this function's name, in a string
#1234: FILE: drivers/infiniband/core/mad.c:676:
+	printk(KERN_ERR PFX "ib_process_mad_wc() not implemented yet\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1247: FILE: drivers/infiniband/core/mad.c:689:
+			       1+i)) {
 			        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1249: FILE: drivers/infiniband/core/mad.c:691:
+			printk(KERN_ERR PFX "Method %d already in use\n", i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1261: FILE: drivers/infiniband/core/mad.c:703:
+		printk(KERN_ERR PFX "No memory for "

WARNING:SPLIT_STRING: quoted string split across lines
#1262: FILE: drivers/infiniband/core/mad.c:704:
+		printk(KERN_ERR PFX "No memory for "
+		       "ib_mad_mgmt_method_table\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1304: FILE: drivers/infiniband/core/mad.c:746:
+		if (method->agent[i] == agent) {
+			method->agent[i] = NULL;
+		}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1331: FILE: drivers/infiniband/core/mad.c:773:
+			printk(KERN_ERR PFX "No memory for "

WARNING:SPLIT_STRING: quoted string split across lines
#1332: FILE: drivers/infiniband/core/mad.c:774:
+			printk(KERN_ERR PFX "No memory for "
+			       "ib_mad_mgmt_class_table\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1341: FILE: drivers/infiniband/core/mad.c:783:
+		if ((ret = allocate_method_table(method)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1347: FILE: drivers/infiniband/core/mad.c:789:
+			if ((ret = allocate_method_table(method)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1358: FILE: drivers/infiniband/core/mad.c:800:
+^I^I^I^IIB_MGMT_MAX_METHODS); $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1361: FILE: drivers/infiniband/core/mad.c:803:
+			       1+i)) {
 			        ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1395: FILE: drivers/infiniband/core/mad.c:837:
+	if (!agent_priv->reg_req) {
+		goto out;
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1402: FILE: drivers/infiniband/core/mad.c:844:
+		printk(KERN_ERR PFX "No class table yet MAD registration "

WARNING:SPLIT_STRING: quoted string split across lines
#1403: FILE: drivers/infiniband/core/mad.c:845:
+		printk(KERN_ERR PFX "No class table yet MAD registration "
+		       "request supplied\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 25)
#1413: FILE: drivers/infiniband/core/mad.c:855:
+		if (!check_method_table(method)) {
[...]
+			 kfree(method);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'agent_priv->reg_req->mgmt_class_version'
#1422: FILE: drivers/infiniband/core/mad.c:864:
+				port_priv->version[agent_priv->reg_req->
+						   mgmt_class_version]= NULL;

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1422: FILE: drivers/infiniband/core/mad.c:864:
+						   mgmt_class_version]= NULL;
 						                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1434: FILE: drivers/infiniband/core/mad.c:876:
+^Ireturn ((mad->mad_hdr.method == IB_MGMT_METHOD_TRAP_REPRESS) || $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1441: FILE: drivers/infiniband/core/mad.c:883:
+	if (mad->mad_hdr.mgmt_class == IB_MGMT_CLASS_CM) {
+		return 0;
+	}

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1492: FILE: drivers/infiniband/core/mad.c:934:
+		class = version->method_table[convert_mgmt_class(

CHECK:BRACES: braces {} should be used on all arms of this statement
#1500: FILE: drivers/infiniband/core/mad.c:942:
+		if (mad_agent->agent.recv_handler)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1502: FILE: drivers/infiniband/core/mad.c:944:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1503: FILE: drivers/infiniband/core/mad.c:945:
+			printk(KERN_NOTICE PFX "No receive handler for client "

WARNING:SPLIT_STRING: quoted string split across lines
#1504: FILE: drivers/infiniband/core/mad.c:946:
+			printk(KERN_NOTICE PFX "No receive handler for client "
+			       "%p on port %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1521: FILE: drivers/infiniband/core/mad.c:963:
+		printk(KERN_ERR PFX "MAD received with unsupported base "

WARNING:SPLIT_STRING: quoted string split across lines
#1522: FILE: drivers/infiniband/core/mad.c:964:
+		printk(KERN_ERR PFX "MAD received with unsupported base "
+		       "version %d\n", mad->mad_hdr.base_version);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mad->mad_hdr.mgmt_class == IB_MGMT_CLASS_SUBN_LID_ROUTED'
#1527: FILE: drivers/infiniband/core/mad.c:969:
+	if ((mad->mad_hdr.mgmt_class == IB_MGMT_CLASS_SUBN_LID_ROUTED) ||
+	    (mad->mad_hdr.mgmt_class == IB_MGMT_CLASS_SUBN_DIRECTED_ROUTE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mad->mad_hdr.mgmt_class == IB_MGMT_CLASS_SUBN_DIRECTED_ROUTE'
#1527: FILE: drivers/infiniband/core/mad.c:969:
+	if ((mad->mad_hdr.mgmt_class == IB_MGMT_CLASS_SUBN_LID_ROUTED) ||
+	    (mad->mad_hdr.mgmt_class == IB_MGMT_CLASS_SUBN_DIRECTED_ROUTE)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1534: FILE: drivers/infiniband/core/mad.c:976:
+^I^I^Ivalid = 1;^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1614: FILE: drivers/infiniband/core/mad.c:1056:
+		mad_agent_priv->agent.recv_handler(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1624: FILE: drivers/infiniband/core/mad.c:1066:
+		mad_agent_priv->agent.recv_handler(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1645: FILE: drivers/infiniband/core/mad.c:1087:
+		printk(KERN_ERR PFX "ib_mad_recv_done_handler no memory "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ib_mad_recv_done_handler', this function's name, in a string
#1645: FILE: drivers/infiniband/core/mad.c:1087:
+		printk(KERN_ERR PFX "ib_mad_recv_done_handler no memory "

WARNING:SPLIT_STRING: quoted string split across lines
#1646: FILE: drivers/infiniband/core/mad.c:1088:
+		printk(KERN_ERR PFX "ib_mad_recv_done_handler no memory "
+		       "for response buffer\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1698: FILE: drivers/infiniband/core/mad.c:1140:
+			printk(KERN_ERR PFX "No memory for response MAD\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1722: FILE: drivers/infiniband/core/mad.c:1164:
+^I^I} $

CHECK:BRACES: braces {} should be used on all arms of this statement
#1740: FILE: drivers/infiniband/core/mad.c:1182:
+	if (response) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1744: FILE: drivers/infiniband/core/mad.c:1186:
+	} else

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'mad_agent_priv->qp_info->port_priv->wq'
#1768: FILE: drivers/infiniband/core/mad.c:1210:
+			queue_delayed_work(mad_agent_priv->qp_info->
+					   port_priv->wq,

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1775: FILE: drivers/infiniband/core/mad.c:1217:
+			      struct ib_mad_send_wr_private *mad_send_wr )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1836: FILE: drivers/infiniband/core/mad.c:1278:
+^I$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1837: FILE: drivers/infiniband/core/mad.c:1279:
+	if (mad_send_wr->status != IB_WC_SUCCESS )

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1876: FILE: drivers/infiniband/core/mad.c:1318:
+		queued_send_wr = container_of(mad_list,
+					struct ib_mad_send_wr_private,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1885: FILE: drivers/infiniband/core/mad.c:1327:
+	ib_mad_complete_send_wr(mad_send_wr, (struct ib_mad_send_wc*)wc);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1889: FILE: drivers/infiniband/core/mad.c:1331:
+		ret = ib_post_send(qp_info->qp, &queued_send_wr->send_wr,
+				&bad_send_wr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1891: FILE: drivers/infiniband/core/mad.c:1333:
+			printk(KERN_ERR PFX "ib_post_send failed: %d\n", ret);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1928: FILE: drivers/infiniband/core/mad.c:1370:
+^I^I * Receive errors indicate that the QP has entered the error $

CHECK:BRACES: braces {} should be used on all arms of this statement
#1940: FILE: drivers/infiniband/core/mad.c:1382:
+		if (mad_send_wr->retry) {
[...]
+		} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1946: FILE: drivers/infiniband/core/mad.c:1388:
+			ret = ib_post_send(qp_info->qp, &mad_send_wr->send_wr,
+					&bad_send_wr);

CHECK:BRACES: Unbalanced braces around else statement
#1949: FILE: drivers/infiniband/core/mad.c:1391:
+		} else

WARNING:SIZEOF_PARENTHESIS: sizeof *attr should be sizeof(*attr)
#1955: FILE: drivers/infiniband/core/mad.c:1397:
+		attr = kmalloc(sizeof *attr, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1963: FILE: drivers/infiniband/core/mad.c:1405:
+				printk(KERN_ERR PFX "mad_error_handler - "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mad_error_handler', this function's name, in a string
#1963: FILE: drivers/infiniband/core/mad.c:1405:
+				printk(KERN_ERR PFX "mad_error_handler - "

WARNING:SPLIT_STRING: quoted string split across lines
#1964: FILE: drivers/infiniband/core/mad.c:1406:
+				printk(KERN_ERR PFX "mad_error_handler - "
+				       "ib_modify_qp to RTS : %d\n", ret);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1982: FILE: drivers/infiniband/core/mad.c:1424:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1984: FILE: drivers/infiniband/core/mad.c:1426:
+		if (wc.status == IB_WC_SUCCESS) {
[...]
+		} else
[...]

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1993: FILE: drivers/infiniband/core/mad.c:1435:
+				BUG_ON(1);

CHECK:BRACES: Unbalanced braces around else statement
#1996: FILE: drivers/infiniband/core/mad.c:1438:
+		} else

ERROR:CODE_INDENT: code indent should use tabs where possible
#2014: FILE: drivers/infiniband/core/mad.c:1456:
+ ^I^I^Imad_send_wr->status = IB_WC_WR_FLUSH_ERR;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2014: FILE: drivers/infiniband/core/mad.c:1456:
+ ^I^I^Imad_send_wr->status = IB_WC_WR_FLUSH_ERR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2014: FILE: drivers/infiniband/core/mad.c:1456:
+ ^I^I^Imad_send_wr->status = IB_WC_WR_FLUSH_ERR;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2060: FILE: drivers/infiniband/core/mad.c:1502:
+void ib_cancel_mad(struct ib_mad_agent *mad_agent,
+		  u64 wr_id)

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'mad_agent_priv->qp_info->port_priv->wq'
#2127: FILE: drivers/infiniband/core/mad.c:1569:
+			queue_delayed_work(mad_agent_priv->qp_info->
+					   port_priv->wq,

WARNING:LINE_SPACING: Missing a blank line after declarations
#2149: FILE: drivers/infiniband/core/mad.c:1591:
+	struct ib_mad_port_private *port_priv = cq->cq_context;
+	queue_work(port_priv->wq, &port_priv->work);

WARNING:SIZEOF_PARENTHESIS: sizeof *mad_priv should be sizeof(*mad_priv)
#2166: FILE: drivers/infiniband/core/mad.c:1608:
+	sg_list.length = sizeof *mad_priv - sizeof mad_priv->header;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2183: FILE: drivers/infiniband/core/mad.c:1625:
+				printk(KERN_ERR PFX "No memory for receive buffer\n");

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'qp_info->port_priv->device->dma_device'
#2189: FILE: drivers/infiniband/core/mad.c:1631:
+		sg_list.addr = dma_map_single(qp_info->port_priv->
+						device->dma_device,

WARNING:SIZEOF_PARENTHESIS: sizeof *mad_priv should be sizeof(*mad_priv)
#2191: FILE: drivers/infiniband/core/mad.c:1633:
+					sizeof *mad_priv -

WARNING:SIZEOF_PARENTHESIS: sizeof mad_priv->header should be sizeof(mad_priv->header)
#2192: FILE: drivers/infiniband/core/mad.c:1634:
+						sizeof mad_priv->header,

WARNING:SIZEOF_PARENTHESIS: sizeof *mad_priv should be sizeof(*mad_priv)
#2212: FILE: drivers/infiniband/core/mad.c:1654:
+					 sizeof *mad_priv -

WARNING:SIZEOF_PARENTHESIS: sizeof mad_priv->header should be sizeof(mad_priv->header)
#2213: FILE: drivers/infiniband/core/mad.c:1655:
+					   sizeof mad_priv->header,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2216: FILE: drivers/infiniband/core/mad.c:1658:
+			printk(KERN_ERR PFX "ib_post_recv failed: %d\n", ret);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2234: FILE: drivers/infiniband/core/mad.c:1676:
+	while (!list_empty(&qp_info->recv_queue.list)) {
+

WARNING:SIZEOF_PARENTHESIS: sizeof *attr should be sizeof(*attr)
#2267: FILE: drivers/infiniband/core/mad.c:1709:
+	attr = kmalloc(sizeof *attr, GFP_KERNEL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2268: FILE: drivers/infiniband/core/mad.c:1710:
+ ^Iif (!attr) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2268: FILE: drivers/infiniband/core/mad.c:1710:
+ ^Iif (!attr) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2268: FILE: drivers/infiniband/core/mad.c:1710:
+ ^Iif (!attr) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2269: FILE: drivers/infiniband/core/mad.c:1711:
+		printk(KERN_ERR PFX "Couldn't kmalloc ib_qp_attr\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2269: FILE: drivers/infiniband/core/mad.c:1711:
+ 	if (!attr) {
+		printk(KERN_ERR PFX "Couldn't kmalloc ib_qp_attr\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2285: FILE: drivers/infiniband/core/mad.c:1727:
+			printk(KERN_ERR PFX "Couldn't change QP%d state to "

WARNING:SPLIT_STRING: quoted string split across lines
#2286: FILE: drivers/infiniband/core/mad.c:1728:
+			printk(KERN_ERR PFX "Couldn't change QP%d state to "
+			       "INIT: %d\n", i, ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2293: FILE: drivers/infiniband/core/mad.c:1735:
+			printk(KERN_ERR PFX "Couldn't change QP%d state to "

WARNING:SPLIT_STRING: quoted string split across lines
#2294: FILE: drivers/infiniband/core/mad.c:1736:
+			printk(KERN_ERR PFX "Couldn't change QP%d state to "
+			       "RTR: %d\n", i, ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2302: FILE: drivers/infiniband/core/mad.c:1744:
+			printk(KERN_ERR PFX "Couldn't change QP%d state to "

WARNING:SPLIT_STRING: quoted string split across lines
#2303: FILE: drivers/infiniband/core/mad.c:1745:
+			printk(KERN_ERR PFX "Couldn't change QP%d state to "
+			       "RTS: %d\n", i, ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2310: FILE: drivers/infiniband/core/mad.c:1752:
+		printk(KERN_ERR PFX "Failed to request completion "

WARNING:SPLIT_STRING: quoted string split across lines
#2311: FILE: drivers/infiniband/core/mad.c:1753:
+		printk(KERN_ERR PFX "Failed to request completion "
+		       "notification: %d\n", ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2318: FILE: drivers/infiniband/core/mad.c:1760:
+			printk(KERN_ERR PFX "Couldn't post receive WRs\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2332: FILE: drivers/infiniband/core/mad.c:1774:
+	printk(KERN_ERR PFX "Fatal error (%d) on MAD QP (%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2333: FILE: drivers/infiniband/core/mad.c:1775:
+	printk(KERN_ERR PFX "Fatal error (%d) on MAD QP (%d)\n",
+		event->event, qp_info->qp->qp_num);

WARNING:SIZEOF_PARENTHESIS: sizeof qp_init_attr should be sizeof(qp_init_attr)
#2360: FILE: drivers/infiniband/core/mad.c:1802:
+	memset(&qp_init_attr, 0, sizeof qp_init_attr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2375: FILE: drivers/infiniband/core/mad.c:1817:
+		printk(KERN_ERR PFX "Couldn't create ib_mad QP%d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2378: FILE: drivers/infiniband/core/mad.c:1820:
+^I^Igoto error;^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2409: FILE: drivers/infiniband/core/mad.c:1851:
+		printk(KERN_DEBUG PFX "%s port %d already open\n",

WARNING:SIZEOF_PARENTHESIS: sizeof *port_priv should be sizeof(*port_priv)
#2415: FILE: drivers/infiniband/core/mad.c:1857:
+	port_priv = kmalloc(sizeof *port_priv, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2417: FILE: drivers/infiniband/core/mad.c:1859:
+		printk(KERN_ERR PFX "No memory for ib_mad_port_private\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2417: FILE: drivers/infiniband/core/mad.c:1859:
+	if (!port_priv) {
+		printk(KERN_ERR PFX "No memory for ib_mad_port_private\n");

WARNING:SIZEOF_PARENTHESIS: sizeof *port_priv should be sizeof(*port_priv)
#2420: FILE: drivers/infiniband/core/mad.c:1862:
+	memset(port_priv, 0, sizeof *port_priv);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2434: FILE: drivers/infiniband/core/mad.c:1876:
+		printk(KERN_ERR PFX "Couldn't create ib_mad CQ\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2441: FILE: drivers/infiniband/core/mad.c:1883:
+		printk(KERN_ERR PFX "Couldn't create ib_mad PD\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2448: FILE: drivers/infiniband/core/mad.c:1890:
+		printk(KERN_ERR PFX "Couldn't get ib_mad DMA MR\n");

WARNING:SIZEOF_PARENTHESIS: sizeof name should be sizeof(name)
#2460: FILE: drivers/infiniband/core/mad.c:1902:
+	snprintf(name, sizeof name, "ib_mad%d", port_num);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2470: FILE: drivers/infiniband/core/mad.c:1912:
+		printk(KERN_ERR PFX "Couldn't start port\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2500: FILE: drivers/infiniband/core/mad.c:1942:
+ * Close the port $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2501: FILE: drivers/infiniband/core/mad.c:1943:
+ * If there are no classes using the port, free the port $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_priv"
#2511: FILE: drivers/infiniband/core/mad.c:1953:
+	if (port_priv == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2513: FILE: drivers/infiniband/core/mad.c:1955:
+		printk(KERN_ERR PFX "Port %d not found\n", port_num);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2550: FILE: drivers/infiniband/core/mad.c:1992:
+			printk(KERN_ERR PFX "Couldn't open %s port %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2556: FILE: drivers/infiniband/core/mad.c:1998:
+			printk(KERN_ERR PFX "Couldn't open %s port %d "

WARNING:SPLIT_STRING: quoted string split across lines
#2557: FILE: drivers/infiniband/core/mad.c:1999:
+			printk(KERN_ERR PFX "Couldn't open %s port %d "
+			       "for agents\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2570: FILE: drivers/infiniband/core/mad.c:2012:
+			printk(KERN_ERR PFX "Couldn't close %s port %d "

WARNING:SPLIT_STRING: quoted string split across lines
#2571: FILE: drivers/infiniband/core/mad.c:2013:
+			printk(KERN_ERR PFX "Couldn't close %s port %d "
+			       "for agents\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2576: FILE: drivers/infiniband/core/mad.c:2018:
+			printk(KERN_ERR PFX "Couldn't close %s port %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2600: FILE: drivers/infiniband/core/mad.c:2042:
+			printk(KERN_ERR PFX "Couldn't close %s port %d "

WARNING:SPLIT_STRING: quoted string split across lines
#2601: FILE: drivers/infiniband/core/mad.c:2043:
+			printk(KERN_ERR PFX "Couldn't close %s port %d "
+			       "for agents\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2608: FILE: drivers/infiniband/core/mad.c:2050:
+			printk(KERN_ERR PFX "Couldn't close %s port %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2636: FILE: drivers/infiniband/core/mad.c:2078:
+		printk(KERN_ERR PFX "Couldn't create ib_mad cache\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2644: FILE: drivers/infiniband/core/mad.c:2086:
+		printk(KERN_ERR PFX "Couldn't register ib_mad client\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2661: FILE: drivers/infiniband/core/mad.c:2103:
+	if (kmem_cache_destroy(ib_mad_cache)) {
+		printk(KERN_DEBUG PFX "Failed to destroy ib_mad cache\n");
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2662: FILE: drivers/infiniband/core/mad.c:2104:
+		printk(KERN_DEBUG PFX "Failed to destroy ib_mad cache\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2671: FILE: drivers/infiniband/core/mad_priv.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2676: FILE: drivers/infiniband/core/mad_priv.h:6:
+ * protocol stack for Linux Servers. $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2685: FILE: drivers/infiniband/core/mad_priv.h:15:
+ *    Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA, or on the$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2712: FILE: drivers/infiniband/core/mad_priv.h:42:
+ * Attention: Voltaire openSource maintainer, $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2735: FILE: drivers/infiniband/core/mad_priv.h:65:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2749: FILE: drivers/infiniband/core/mad_priv.h:79:
+#define MAX_MGMT_CLASS^I^I80^I$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2762: FILE: drivers/infiniband/core/mad_priv.h:92:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2772: FILE: drivers/infiniband/core/mad_priv.h:102:
+} __attribute__ ((packed));

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2780: FILE: drivers/infiniband/core/mad_priv.h:110:
+	spinlock_t lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2814: FILE: drivers/infiniband/core/mad_priv.h:144:
+	spinlock_t lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2837: FILE: drivers/infiniband/core/mad_priv.h:167:
+	spinlock_t reg_lock;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2849: FILE: drivers/infiniband/core/smi.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2850: FILE: drivers/infiniband/core/smi.c:2:
+/*
+  This software is available to you under a choice of one of two

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2876: FILE: drivers/infiniband/core/smi.c:28:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2895: FILE: drivers/infiniband/core/smi.c:47:
+^I^I^Ireturn (smp->initial_path[smp->hop_ptr] == $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2903: FILE: drivers/infiniband/core/smi.c:55:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2906: FILE: drivers/infiniband/core/smi.c:58:
+^I^I^Ireturn (smp->initial_path[smp->hop_ptr] == $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2926: FILE: drivers/infiniband/core/smi.c:78:
+^I^I^Ireturn (smp->return_path[smp->hop_ptr] == $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2931: FILE: drivers/infiniband/core/smi.c:83:
+		if (2 <= hop_ptr && hop_ptr <= hop_cnt) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2936: FILE: drivers/infiniband/core/smi.c:88:
+^I^I^Ireturn (smp->return_path[smp->hop_ptr] == $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2984: FILE: drivers/infiniband/core/smi.c:136:
+			return (smp->initial_path[hop_ptr+1] <= phys_port_cnt);
 			                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2996: FILE: drivers/infiniband/core/smi.c:148:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3002: FILE: drivers/infiniband/core/smi.c:154:
+	} else {
+

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3011: FILE: drivers/infiniband/core/smi.c:163:
+		if (2 <= hop_ptr && hop_ptr <= hop_cnt) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3016: FILE: drivers/infiniband/core/smi.c:168:
+			return (smp->return_path[hop_ptr-1] <= phys_port_cnt);
 			                                ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3061: FILE: drivers/infiniband/core/smi.c:213:
+		if (2 <= hop_ptr && hop_ptr <= hop_cnt)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3074: FILE: drivers/infiniband/core/smi.h:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3075: FILE: drivers/infiniband/core/smi.h:2:
+/*
+  This software is available to you under a choice of one of two

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3106: FILE: drivers/infiniband/core/smi.h:33:
+extern int smi_check_forward_dr_smp(struct ib_smp *smp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3107: FILE: drivers/infiniband/core/smi.h:34:
+extern int smi_handle_dr_smp_send(struct ib_smp *smp,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3110: FILE: drivers/infiniband/core/smi.h:37:
+extern int smi_check_local_dr_smp(struct ib_smp *smp,

ERROR:CODE_INDENT: code indent should use tabs where possible
#3118: FILE: drivers/infiniband/core/smi.h:45:
+                         ^I      struct ib_smp *smp)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3118: FILE: drivers/infiniband/core/smi.h:45:
+                         ^I      struct ib_smp *smp)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3118: FILE: drivers/infiniband/core/smi.h:45:
+static inline int smi_check_local_smp(struct ib_mad_agent *mad_agent,
+                         	      struct ib_smp *smp)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3118: FILE: drivers/infiniband/core/smi.h:45:
+                         ^I      struct ib_smp *smp)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3123: FILE: drivers/infiniband/core/smi.h:50:
+	return ((mad_agent->device->process_mad &&
+		!ib_get_smp_direction(smp) &&

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228292.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 52 errors, 140 warnings, 65 checks, 3060 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228292.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
