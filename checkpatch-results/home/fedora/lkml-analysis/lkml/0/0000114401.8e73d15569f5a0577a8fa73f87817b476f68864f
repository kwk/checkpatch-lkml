WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
The following provides an address translation service that maps IP addresses

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#43: FILE: drivers/infiniband/core/addr.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: No space is necessary after a cast
#124: FILE: drivers/infiniband/core/addr.c:82:
+	u32 ip = ((struct sockaddr_in *) addr)->sin_addr.s_addr;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof fl should be sizeof(fl)
#173: FILE: drivers/infiniband/core/addr.c:131:
+	memset(&fl, 0, sizeof fl);

WARNING:SIZEOF_PARENTHESIS: sizeof fl should be sizeof(fl)
#194: FILE: drivers/infiniband/core/addr.c:152:
+	memset(&fl, 0, sizeof fl);

CHECK:SPACING: No space is necessary after a cast
#237: FILE: drivers/infiniband/core/addr.c:195:
+			src_in = (struct sockaddr_in *) &req->src_addr;

CHECK:SPACING: No space is necessary after a cast
#238: FILE: drivers/infiniband/core/addr.c:196:
+			dst_in = (struct sockaddr_in *) &req->dst_addr;

WARNING:SIZEOF_PARENTHESIS: sizeof *req should be sizeof(*req)
#302: FILE: drivers/infiniband/core/addr.c:260:
+	req = kmalloc(sizeof *req, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *req should be sizeof(*req)
#305: FILE: drivers/infiniband/core/addr.c:263:
+	memset(req, 0, sizeof *req);

CHECK:SPACING: No space is necessary after a cast
#314: FILE: drivers/infiniband/core/addr.c:272:
+	src_in = (struct sockaddr_in *) &req->src_addr;

CHECK:SPACING: No space is necessary after a cast
#315: FILE: drivers/infiniband/core/addr.c:273:
+	dst_in = (struct sockaddr_in *) &req->dst_addr;

CHECK:SPACING: No space is necessary after a cast
#364: FILE: drivers/infiniband/core/addr.c:322:
+	arp_hdr = (struct arphdr *) skb->nh.raw;

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#367: FILE: drivers/infiniband/core/addr.c:325:
+	    (arp_hdr->ar_op == __constant_htons(ARPOP_REQUEST) ||

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#368: FILE: drivers/infiniband/core/addr.c:326:
+	     arp_hdr->ar_op == __constant_htons(ARPOP_REPLY)))

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#376: FILE: drivers/infiniband/core/addr.c:334:
+	.type           = __constant_htons(ETH_P_ARP),

CHECK:SPACING: No space is necessary after a cast
#378: FILE: drivers/infiniband/core/addr.c:336:
+	.af_packet_priv = (void*) 1,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#378: FILE: drivers/infiniband/core/addr.c:336:
+	.af_packet_priv = (void*) 1,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#426: FILE: include/rdma/ib_addr.h:1:
+/*

CHECK:SPACING: No space is necessary after a cast
#516: FILE: include/rdma/ib_addr.h:91:
+	dev_addr->broadcast[9] = (unsigned char) pkey;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#519: FILE: include/rdma/ib_addr.h:94:
+static inline union ib_gid* ib_addr_get_sgid(struct rdma_dev_addr *dev_addr)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#521: FILE: include/rdma/ib_addr.h:96:
+^Ireturn ^I(union ib_gid *) (dev_addr->src_dev_addr + 4);$

CHECK:SPACING: No space is necessary after a cast
#521: FILE: include/rdma/ib_addr.h:96:
+	return 	(union ib_gid *) (dev_addr->src_dev_addr + 4);

WARNING:SIZEOF_PARENTHESIS: sizeof *gid should be sizeof(*gid)
#527: FILE: include/rdma/ib_addr.h:102:
+	memcpy(dev_addr->src_dev_addr + 4, gid, sizeof *gid);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#530: FILE: include/rdma/ib_addr.h:105:
+static inline union ib_gid* ib_addr_get_dgid(struct rdma_dev_addr *dev_addr)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#532: FILE: include/rdma/ib_addr.h:107:
+^Ireturn ^I(union ib_gid *) (dev_addr->dst_dev_addr + 4);$

CHECK:SPACING: No space is necessary after a cast
#532: FILE: include/rdma/ib_addr.h:107:
+	return 	(union ib_gid *) (dev_addr->dst_dev_addr + 4);

WARNING:SIZEOF_PARENTHESIS: sizeof *gid should be sizeof(*gid)
#538: FILE: include/rdma/ib_addr.h:113:
+	memcpy(dev_addr->dst_dev_addr + 4, gid, sizeof *gid);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000114401.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 14 warnings, 10 checks, 492 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000114401.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
