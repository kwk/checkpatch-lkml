WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#240: FILE: arch/m68k/lib/string.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#270: FILE: arch/m68k/lib/string.c:31:
+		asm volatile (

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#333: FILE: arch/m68k/lib/string.c:94:
+		asm volatile (

WARNING:LINE_SPACING: Missing a blank line after declarations
#401: FILE: arch/m68k/lib/string.c:162:
+			const long *lsrc = src;
+			temp--;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#403: FILE: arch/m68k/lib/string.c:164:
+				*ldest++ = *lsrc++;
 				^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#443: FILE: arch/m68k/lib/string.c:204:
+			const long *lsrc = src;
+			temp--;

CHECK:SPACING: spaces preferred around that '*' (ctx:ExO)
#445: FILE: arch/m68k/lib/string.c:206:
+				*--ldest = *--lsrc;
 				^

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#473: FILE: arch/m68k/lib/string.c:234:
+			return *su1 < *su2 ? -1 : +1;
 			                          ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#705: FILE: include/asm-m68k/string.h:139:
+extern void *memset(void *, int, __kernel_size_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#705: FILE: include/asm-m68k/string.h:139:
+extern void *memset(void *, int, __kernel_size_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#705: FILE: include/asm-m68k/string.h:139:
+extern void *memset(void *, int, __kernel_size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__kernel_size_t' should also have an identifier name
#705: FILE: include/asm-m68k/string.h:139:
+extern void *memset(void *, int, __kernel_size_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#770: FILE: include/asm-m68k/string.h:143:
+extern void *memcpy(void *, const void *, __kernel_size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#770: FILE: include/asm-m68k/string.h:143:
+extern void *memcpy(void *, const void *, __kernel_size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void *' should also have an identifier name
#770: FILE: include/asm-m68k/string.h:143:
+extern void *memcpy(void *, const void *, __kernel_size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__kernel_size_t' should also have an identifier name
#770: FILE: include/asm-m68k/string.h:143:
+extern void *memcpy(void *, const void *, __kernel_size_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#880: FILE: include/asm-m68k/string.h:147:
+extern void *memmove(void *, const void *, __kernel_size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#880: FILE: include/asm-m68k/string.h:147:
+extern void *memmove(void *, const void *, __kernel_size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void *' should also have an identifier name
#880: FILE: include/asm-m68k/string.h:147:
+extern void *memmove(void *, const void *, __kernel_size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__kernel_size_t' should also have an identifier name
#880: FILE: include/asm-m68k/string.h:147:
+extern void *memmove(void *, const void *, __kernel_size_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#899: FILE: include/asm-m68k/string.h:150:
+extern int memcmp(const void *, const void *, __kernel_size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void *' should also have an identifier name
#899: FILE: include/asm-m68k/string.h:150:
+extern int memcmp(const void *, const void *, __kernel_size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void *' should also have an identifier name
#899: FILE: include/asm-m68k/string.h:150:
+extern int memcmp(const void *, const void *, __kernel_size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__kernel_size_t' should also have an identifier name
#899: FILE: include/asm-m68k/string.h:150:
+extern int memcmp(const void *, const void *, __kernel_size_t);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155315.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 15 warnings, 9 checks, 672 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155315.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
