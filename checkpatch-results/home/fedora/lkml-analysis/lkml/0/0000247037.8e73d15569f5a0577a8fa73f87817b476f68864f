WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#17: 
Subject: [PATCH 8/10] Re: [2.6-BK-URL] NTFS: 2.1.19 sparse annotation, cleanups

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#46: 
   Signed-off-by: Anton Altaparmakov <aia21@cantab.net>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#81: FILE: fs/ntfs/attrib.c:1207:
+static int ntfs_attr_find(const ATTR_TYPE type, const ntfschar *name,
 		const u32 name_len, const IGNORE_CASE_BOOL ic,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: fs/ntfs/attrib.c:1479:
+static int ntfs_external_attr_find(const ATTR_TYPE type,
 		const ntfschar *name, const u32 name_len,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#98: FILE: fs/ntfs/attrib.c:1623:
+						le64_to_cpu(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: fs/ntfs/attrib.c:1804:
+int ntfs_attr_lookup(const ATTR_TYPE type, const ntfschar *name,
 		const u32 name_len, const IGNORE_CASE_BOOL ic,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#121: FILE: fs/ntfs/attrib.h:85:
+int ntfs_attr_lookup(const ATTR_TYPE type, const ntfschar *name,
 		const u32 name_len, const IGNORE_CASE_BOOL ic,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#132: FILE: fs/ntfs/collate.c:100:
+int ntfs_collate(ntfs_volume *vol, COLLATION_RULE cr,
 		const void *data1, const int data1_len,
 		const void *data2, const int data2_len) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: fs/ntfs/collate.c:101:
+int ntfs_collate(ntfs_volume *vol, COLLATION_RULE cr,
 		const void *data1, const int data1_len,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#148: FILE: fs/ntfs/collate.c:112:
+	BUG_ON(i < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#156: FILE: fs/ntfs/collate.c:116:
+	BUG_ON(i < 0x10);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#171: FILE: fs/ntfs/collate.h:29:
+static inline BOOL ntfs_is_collation_rule_supported(COLLATION_RULE cr) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i >= 0'
#185: FILE: fs/ntfs/collate.h:40:
+	if (likely(((i >= 0) && (i <= 0x02)) ||
+			((i >= 0x10) && (i <= 0x13))))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i <= 0x02'
#185: FILE: fs/ntfs/collate.h:40:
+	if (likely(((i >= 0) && (i <= 0x02)) ||
+			((i >= 0x10) && (i <= 0x13))))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i >= 0x10'
#185: FILE: fs/ntfs/collate.h:40:
+	if (likely(((i >= 0) && (i <= 0x02)) ||
+			((i >= 0x10) && (i <= 0x13))))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i <= 0x13'
#185: FILE: fs/ntfs/collate.h:40:
+	if (likely(((i >= 0) && (i <= 0x02)) ||
+			((i >= 0x10) && (i <= 0x13))))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: fs/ntfs/collate.h:41:
+	if (likely(((i >= 0) && (i <= 0x02)) ||
+			((i >= 0x10) && (i <= 0x13))))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#192: FILE: fs/ntfs/collate.h:46:
+extern int ntfs_collate(ntfs_volume *vol, COLLATION_RULE cr,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: fs/ntfs/collate.h:47:
+extern int ntfs_collate(ntfs_volume *vol, COLLATION_RULE cr,
 		const void *data1, const int data1_len,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#204: FILE: fs/ntfs/compress.c:206:
+	if (cb == cb_end || !le16_to_cpup((le16*)cb) ||

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: fs/ntfs/compress.c:207:
+	if (cb == cb_end || !le16_to_cpup((le16*)cb) ||
 			(*dest_index == dest_max_index &&

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#213: FILE: fs/ntfs/compress.c:258:
+	cb_sb_end = cb_sb_start + (le16_to_cpup((le16*)cb) & NTFS_SB_SIZE_MASK)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#222: FILE: fs/ntfs/compress.c:280:
+	if (!(le16_to_cpup((le16*)cb) & NTFS_SB_IS_COMPRESSED)) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#231: FILE: fs/ntfs/compress.c:385:
+		pt = le16_to_cpup((le16*)cb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: fs/ntfs/inode.c:218:
+struct inode *ntfs_attr_iget(struct inode *base_vi, ATTR_TYPE type,
 		ntfschar *name, u32 name_len)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#291: FILE: fs/ntfs/inode.h:263:
+extern struct inode *ntfs_attr_iget(struct inode *base_vi, ATTR_TYPE type,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: fs/ntfs/inode.h:264:
+extern struct inode *ntfs_attr_iget(struct inode *base_vi, ATTR_TYPE type,
 		ntfschar *name, u32 name_len);

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#333: FILE: fs/ntfs/layout.h:120:
+/* Found in $LogFile/$DATA. */

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#337: FILE: fs/ntfs/layout.h:124:
+/* Found in $LogFile/$DATA.  (May be found in $MFT/$DATA, also?) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#342: FILE: fs/ntfs/layout.h:129:
+#define magic_BAAD const_cpu_to_le32(0x44414142) /* Failed multi sector
+						    transfer was detected. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#342: FILE: fs/ntfs/layout.h:129:
+						    transfer was detected. */

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#344: FILE: fs/ntfs/layout.h:131:
+ * Found in $LogFile/$DATA when a page is full or 0xff bytes and is thus not

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#348: FILE: fs/ntfs/layout.h:135:
+#define magic_empty const_cpu_to_le32(0xffffffff)/* Record is empty and has to
+						    be initialized before it

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#349: FILE: fs/ntfs/layout.h:136:
+						    can be used. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#384: FILE: fs/ntfs/layout.h:200:
+	NTFS_RECORD_TYPE magic;	/* A four-byte magic identifying the record
+				   type and/or status. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#384: FILE: fs/ntfs/layout.h:200:
+				   type and/or status. */

ERROR:SPACING: space prohibited after that open parenthesis '('
#450: FILE: fs/ntfs/layout.h:409:
+#define AT_UNUSED			const_cpu_to_le32(         0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#451: FILE: fs/ntfs/layout.h:410:
+#define AT_STANDARD_INFORMATION		const_cpu_to_le32(      0x10)

ERROR:SPACING: space prohibited after that open parenthesis '('
#452: FILE: fs/ntfs/layout.h:411:
+#define AT_ATTRIBUTE_LIST		const_cpu_to_le32(      0x20)

ERROR:SPACING: space prohibited after that open parenthesis '('
#453: FILE: fs/ntfs/layout.h:412:
+#define AT_FILE_NAME			const_cpu_to_le32(      0x30)

ERROR:SPACING: space prohibited after that open parenthesis '('
#454: FILE: fs/ntfs/layout.h:413:
+#define AT_OBJECT_ID			const_cpu_to_le32(      0x40)

ERROR:SPACING: space prohibited after that open parenthesis '('
#455: FILE: fs/ntfs/layout.h:414:
+#define AT_SECURITY_DESCRIPTOR		const_cpu_to_le32(      0x50)

ERROR:SPACING: space prohibited after that open parenthesis '('
#456: FILE: fs/ntfs/layout.h:415:
+#define AT_VOLUME_NAME			const_cpu_to_le32(      0x60)

ERROR:SPACING: space prohibited after that open parenthesis '('
#457: FILE: fs/ntfs/layout.h:416:
+#define AT_VOLUME_INFORMATION		const_cpu_to_le32(      0x70)

ERROR:SPACING: space prohibited after that open parenthesis '('
#458: FILE: fs/ntfs/layout.h:417:
+#define AT_DATA				const_cpu_to_le32(      0x80)

ERROR:SPACING: space prohibited after that open parenthesis '('
#459: FILE: fs/ntfs/layout.h:418:
+#define AT_INDEX_ROOT			const_cpu_to_le32(      0x90)

ERROR:SPACING: space prohibited after that open parenthesis '('
#460: FILE: fs/ntfs/layout.h:419:
+#define AT_INDEX_ALLOCATION		const_cpu_to_le32(      0xa0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#461: FILE: fs/ntfs/layout.h:420:
+#define AT_BITMAP			const_cpu_to_le32(      0xb0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#462: FILE: fs/ntfs/layout.h:421:
+#define AT_REPARSE_POINT		const_cpu_to_le32(      0xc0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#463: FILE: fs/ntfs/layout.h:422:
+#define AT_EA_INFORMATION		const_cpu_to_le32(      0xd0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#464: FILE: fs/ntfs/layout.h:423:
+#define AT_EA				const_cpu_to_le32(      0xe0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#465: FILE: fs/ntfs/layout.h:424:
+#define AT_PROPERTY_SET			const_cpu_to_le32(      0xf0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#466: FILE: fs/ntfs/layout.h:425:
+#define AT_LOGGED_UTILITY_STREAM	const_cpu_to_le32(     0x100)

ERROR:SPACING: space prohibited after that open parenthesis '('
#467: FILE: fs/ntfs/layout.h:426:
+#define AT_FIRST_USER_DEFINED_ATTRIBUTE	const_cpu_to_le32(    0x1000)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#529: FILE: fs/ntfs/layout.h:487:
+#define INDEXABLE	    const_cpu_to_le32(0x02) /* Attribute can be
+						       indexed. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#529: FILE: fs/ntfs/layout.h:487:
+						       indexed. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#531: FILE: fs/ntfs/layout.h:489:
+#define NEED_TO_REGENERATE  const_cpu_to_le32(0x40) /* Need to regenerate
+						       during regeneration

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#532: FILE: fs/ntfs/layout.h:490:
+						       phase. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#534: FILE: fs/ntfs/layout.h:492:
+#define CAN_BE_NON_RESIDENT const_cpu_to_le32(0x80) /* Attribute can be
+						       non-resident. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#534: FILE: fs/ntfs/layout.h:492:
+						       non-resident. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#567: FILE: fs/ntfs/layout.h:524:
+#define	ATTR_COMPRESSION_MASK const_cpu_to_le16(0x00ff) /* Compression method
+							   mask.  Also, first

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#568: FILE: fs/ntfs/layout.h:525:
+							   illegal value. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#586: FILE: fs/ntfs/layout.h:602:
+#define RESIDENT_ATTR_IS_INDEXED 0x01 /* Attribute is referenced in an index
+					 (has implications for deleting and

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#587: FILE: fs/ntfs/layout.h:603:
+					 modifying the attribute). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#651: FILE: fs/ntfs/layout.h:717:
+/* FILE_ATTR_DIRECTORY is not considered valid in NT.  It is reserved for the
+   DOS SUBDIRECTORY flag. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#651: FILE: fs/ntfs/layout.h:717:
+   DOS SUBDIRECTORY flag. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#667: FILE: fs/ntfs/layout.h:733:
+/* FILE_ATTR_VALID_FLAGS masks out the old DOS VolId and the FILE_ATTR_DEVICE
+   and preserves everything else.  This mask is used to obtain all flags that

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#668: FILE: fs/ntfs/layout.h:734:
+   are valid for reading. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#671: FILE: fs/ntfs/layout.h:737:
+/* FILE_ATTR_VALID_SET_FLAGS masks out the old DOS VolId, the F_A_DEVICE,
+   F_A_DIRECTORY, F_A_SPARSE_FILE, F_A_REPARSE_POINT, F_A_COMPRESSED, and

WARNING:REPEATED_WORD: Possible repeated word: 'to'
#672: FILE: fs/ntfs/layout.h:738:
+   F_A_ENCRYPTED and preserves the rest.  This mask is used to to obtain all

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#673: FILE: fs/ntfs/layout.h:739:
+   flags that are valid for setting. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#681: FILE: fs/ntfs/layout.h:747:
+/* This is a copy of the corresponding bit from the mft record, telling us
+   whether this is a directory or not, i.e. whether it has an index root

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#682: FILE: fs/ntfs/layout.h:748:
+   attribute or not. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#685: FILE: fs/ntfs/layout.h:751:
+/* This is a copy of the corresponding bit from the mft record, telling us
+   whether this file has a view index present (eg. object id index, quota

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#687: FILE: fs/ntfs/layout.h:753:
+   indexes). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#744: FILE: fs/ntfs/layout.h:928:
+	/* This is the largest namespace. It is case sensitive and allows all
+	   Unicode characters except for: '\0' and '/'.  Beware that in

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#748: FILE: fs/ntfs/layout.h:932:
+	   warning. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#751: FILE: fs/ntfs/layout.h:935:
+	/* The standard WinNT/2k NTFS long filenames. Case insensitive.  All
+	   Unicode chars except: '\0', '"', '*', '/', ':', '<', '>', '?', '\',

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#752: FILE: fs/ntfs/layout.h:936:
+	   and '|'.  Further, names cannot end with a '.' or a space. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#755: FILE: fs/ntfs/layout.h:939:
+	/* The standard DOS filenames (8.3 format). Uppercase only.  All 8-bit
+	   characters greater space, except: '"', '*', '+', ',', '/', ':', ';',

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#756: FILE: fs/ntfs/layout.h:940:
+	   '<', '=', '>', '?', and '\'. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#759: FILE: fs/ntfs/layout.h:943:
+	/* 3 means that both the Win32 and the DOS filenames are identical and
+	   hence have been saved in this single filename record. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#759: FILE: fs/ntfs/layout.h:943:
+	   hence have been saved in this single filename record. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#798: FILE: fs/ntfs/layout.h:1256:
+#define SYSTEM_ALARM_ACE_TYPE			3 /* Not implemented as of
+						     Win2k. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#798: FILE: fs/ntfs/layout.h:1256:
+						     Win2k. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1211: FILE: fs/ntfs/layout.h:1830:
+#define SMALL_INDEX 0 /* The index is small enough to fit inside the index root
+			 attribute and there is no index allocation attribute

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1212: FILE: fs/ntfs/layout.h:1831:
+			 present. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1214: FILE: fs/ntfs/layout.h:1833:
+#define LARGE_INDEX 1 /* The index is too large to fit in the index root
+			 attribute and/or an index allocation attribute is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1215: FILE: fs/ntfs/layout.h:1834:
+			 present. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1221: FILE: fs/ntfs/layout.h:1840:
+#define LEAF_NODE  0 /* This is a leaf node, i.e. there are no more nodes
+			branching off it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1221: FILE: fs/ntfs/layout.h:1840:
+			branching off it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1223: FILE: fs/ntfs/layout.h:1842:
+#define INDEX_NODE 1 /* This node indexes other nodes, i.e. it is not a leaf
+			node. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1223: FILE: fs/ntfs/layout.h:1842:
+			node. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1288: FILE: fs/ntfs/layout.h:1982:
+/* These flags are only present in the quota defaults index entry, i.e. in the
+   entry where owner_id = QUOTA_DEFAULTS_ID. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1288: FILE: fs/ntfs/layout.h:1982:
+   entry where owner_id = QUOTA_DEFAULTS_ID. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1334: FILE: fs/ntfs/layout.h:2048:
+#define INDEX_ENTRY_NODE const_cpu_to_le16(1) /* This entry contains a
+			sub-node, i.e. a reference to an index block in form of

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1335: FILE: fs/ntfs/layout.h:2049:
+			a virtual cluster number (see below). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1337: FILE: fs/ntfs/layout.h:2051:
+#define INDEX_ENTRY_END  const_cpu_to_le16(2) /* This signifies the last entry
+			in an index block.  The index entry does not represent

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1338: FILE: fs/ntfs/layout.h:2052:
+			a file but it can point to a sub-node. */

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1423: FILE: fs/ntfs/mft.c:47:
+	*(le16*)((char*)m + ((sizeof(MFT_RECORD) + 1) & ~1)) = cpu_to_le16(1);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1423: FILE: fs/ntfs/mft.c:47:
+	*(le16*)((char*)m + ((sizeof(MFT_RECORD) + 1) & ~1)) = cpu_to_le16(1);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1471: FILE: fs/ntfs/mst.c:144:
+	usa_pos = (le16*)((u8*)b + usa_ofs);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1471: FILE: fs/ntfs/mst.c:144:
+	usa_pos = (le16*)((u8*)b + usa_ofs);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1485: FILE: fs/ntfs/mst.c:155:
+	data_pos = (le16*)b + NTFS_BLOCK_SIZE/sizeof(le16) - 1;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1485: FILE: fs/ntfs/mst.c:155:
+	data_pos = (le16*)b + NTFS_BLOCK_SIZE/sizeof(le16) - 1;
 	                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1497: FILE: fs/ntfs/mst.c:166:
+		data_pos += NTFS_BLOCK_SIZE/sizeof(le16);
 		                           ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1513: FILE: fs/ntfs/mst.c:187:
+	usa_pos = (le16*)b + usa_ofs/sizeof(le16);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1513: FILE: fs/ntfs/mst.c:187:
+	usa_pos = (le16*)b + usa_ofs/sizeof(le16);
 	                            ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1517: FILE: fs/ntfs/mst.c:190:
+	data_pos = (le16*)b + NTFS_BLOCK_SIZE/sizeof(le16) - 1;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1517: FILE: fs/ntfs/mst.c:190:
+	data_pos = (le16*)b + NTFS_BLOCK_SIZE/sizeof(le16) - 1;
 	                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1526: FILE: fs/ntfs/mst.c:201:
+		data_pos += NTFS_BLOCK_SIZE/sizeof(le16);
 		                           ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247037.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 31 errors, 58 warnings, 22 checks, 1448 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247037.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
