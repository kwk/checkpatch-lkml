WARNING:TYPO_SPELLING: 'Proccess' may be misspelled - perhaps 'Process'?
#12: 
Subject: Re: 2.4.20: Proccess stuck in __lock_page ...
                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: drivers/block/ll_rw_blk.c:445:
+void blk_print_stats(kdev_t dev) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: drivers/block/ll_rw_blk.c:460:
+^Iif (q->num_wait) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: drivers/block/ll_rw_blk.c:464:
+^Iprintk("device %s: num_req %lu, total jiffies waited %lu\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#123: FILE: drivers/block/ll_rw_blk.c:464:
+	printk("device %s: num_req %lu, total jiffies waited %lu\n", 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#125: FILE: drivers/block/ll_rw_blk.c:466:
+	printk("\t%lu forced to wait\n", q->num_wait);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#126: FILE: drivers/block/ll_rw_blk.c:467:
+	printk("\t%lu min wait, %lu max wait\n", min_wait, q->max_wait);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#127: FILE: drivers/block/ll_rw_blk.c:468:
+	printk("\t%lu average wait\n", avg_wait);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#129: FILE: drivers/block/ll_rw_blk.c:470:
+	printk("\t%lu < 100, %lu < 200, %lu < 300, %lu < 400, %lu < 500\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: drivers/block/ll_rw_blk.c:471:
+               d[0], d[1], d[2], d[3], d[4]);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: drivers/block/ll_rw_blk.c:471:
+	printk("\t%lu < 100, %lu < 200, %lu < 300, %lu < 400, %lu < 500\n",
+               d[0], d[1], d[2], d[3], d[4]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: drivers/block/ll_rw_blk.c:471:
+               d[0], d[1], d[2], d[3], d[4]);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#133: FILE: drivers/block/ll_rw_blk.c:474:
+	printk("\t%lu waits longer than 500 jiffies\n", high_wait);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: drivers/block/ll_rw_blk.c:486:
+void blk_reset_stats(kdev_t dev) $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#145: FILE: drivers/block/ll_rw_blk.c:486:
+}
+void blk_reset_stats(kdev_t dev) 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#148: FILE: drivers/block/ll_rw_blk.c:489:
+	request_queue_t *q;
+	q = blk_get_queue(dev);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#149: FILE: drivers/block/ll_rw_blk.c:490:
+	if (!q)
+	    return;

WARNING:TABSTOP: Statements should start on a tabstop
#150: FILE: drivers/block/ll_rw_blk.c:491:
+	    return;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#151: FILE: drivers/block/ll_rw_blk.c:492:
+	printk("reset latency stats on device %s\n", kdevname(dev));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#188: FILE: drivers/block/ll_rw_blk.c:668:
+	if (time_waited < 500) {
+		q->deviation[time_waited/100]++;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#189: FILE: drivers/block/ll_rw_blk.c:669:
+		q->deviation[time_waited/100]++;
 		                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#247: FILE: include/linux/blkdev.h:229:
+extern void blk_print_stats(kdev_t dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000366783.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 13 warnings, 4 checks, 143 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000366783.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
