WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#124: 
diff -ruN -X /home/picco/losl/dontdiff linux-2.6.6-mm3/Documentation/filesystems/proc.txt linux-2.6.6-mm3-hpet/Documentation/filesystems/proc.txt

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#200: FILE: drivers/char/hpet.c:89:
+#define^Iwrite_counter(V, MC) ^Iwritel(V, MC)$

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#205: FILE: drivers/char/hpet.c:94:
+static unsigned long long __inline readq(void *addr)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:INLINE: plain inline is preferred over __inline
#205: FILE: drivers/char/hpet.c:94:
+static unsigned long long __inline readq(void *addr)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#212: FILE: drivers/char/hpet.c:101:
+static void __inline writeq(unsigned long long v, void *addr)

WARNING:INLINE: plain inline is preferred over __inline
#212: FILE: drivers/char/hpet.c:101:
+static void __inline writeq(unsigned long long v, void *addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#287: FILE: drivers/char/hpet.c:183:
+hpet_read(struct file *file, char *buf, size_t count, loff_t * ppos)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#319: FILE: drivers/char/hpet.c:224:
+      out:

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#328: FILE: drivers/char/hpet.c:231:
+static unsigned int hpet_poll(struct file *file, poll_table * wait)

CHECK:CAMELCASE: Avoid CamelCase: <Tn_INT_ENB_CNF_MASK>
#405: FILE: drivers/char/hpet.c:309:
+	writeq((readq(&timer->hpet_config) & ~Tn_INT_ENB_CNF_MASK),

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#416: FILE: drivers/char/hpet.c:320:
+	if (devp->hd_flags & HPET_PERIODIC
+	    && readq(&timer->hpet_config) & Tn_TYPE_CNF_MASK) {

CHECK:CAMELCASE: Avoid CamelCase: <Tn_TYPE_CNF_MASK>
#416: FILE: drivers/char/hpet.c:320:
+	    && readq(&timer->hpet_config) & Tn_TYPE_CNF_MASK) {

CHECK:CAMELCASE: Avoid CamelCase: <Tn_PER_INT_CAP_MASK>
#577: FILE: drivers/char/hpet.c:481:
+			    readq(&timer->hpet_config) & Tn_PER_INT_CAP_MASK;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#712: FILE: drivers/char/hpet.c:605:
+		if (devp >= hpetp->hp_dev
+		    && devp < (hpetp->hp_dev + hpetp->hp_ntimer)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#713: FILE: drivers/char/hpet.c:606:
+		    && devp < (hpetp->hp_dev + hpetp->hp_ntimer)
+		    && devp->hd_hpet == hpetp->hp_hpet)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#880: FILE: drivers/char/hpet.c:736:
+static void *hpet_start(struct seq_file *s, loff_t * pos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#890: FILE: drivers/char/hpet.c:748:
+static void *hpet_next(struct seq_file *s, void *v, loff_t * pos)

CHECK:SPACING: No space is necessary after a cast
#928: FILE: drivers/char/hpet.c:778:
+		   hpetp->hp_which, (u32) period, (u32) vendor,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#1049: FILE: drivers/char/hpet.c:875:
+				      S_IFCHR | S_IRUSR | S_IWUSR, hpetname);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hdp->hd_address'
#1078: FILE: drivers/char/hpet.c:898:
+		if (hpetp->hp_hpet == (struct hpet *)(hdp->hd_address))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPLIT_STRING: quoted string split across lines
#1121: FILE: drivers/char/hpet.c:927:
 		printk(KERN_WARNING "hpet: number irqs doesn't agree"
+		       " with number of timers\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#1181: FILE: drivers/char/hpet.c:985:
+			      S_IFCHR | S_IRUSR | S_IWUSR, hpetname);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hdp->hd_address'
#1205: FILE: drivers/char/hpet.c:1013:
+			if (hpetp->hp_hpet == (struct hpet *)(hdp->hd_address))

CHECK:BRACES: Unbalanced braces around else statement
#1314: FILE: drivers/char/hpet.c:1112:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1347: FILE: drivers/char/Kconfig:946:
+^I  each timer supported by the HPET.  The timers are $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1348: FILE: drivers/char/Kconfig:947:
+^I  non-periodioc and/or periodic. $

WARNING:SPACING: Unnecessary space before function pointer arguments
#1461: FILE: include/linux/hpet.h:111:
+	void (*ht_func) (void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1461: FILE: include/linux/hpet.h:111:
+	void (*ht_func) (void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000281169.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 10 warnings, 10 checks, 1301 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000281169.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
