WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#29: 
# This is a BitKeeper generated diff -Nru style patch.

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#30: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#31: 
#   Run Lindent on ioctl.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#32: 
#   Add an ioctl path which does not take the BKL.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#33: 
# 

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#35: 
--- a/fs/ioctl.c	2004-12-07 11:53:59 -08:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#42: FILE: fs/ioctl.c:19:
+static int file_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
                                    ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!inode->i_sb"
#67: FILE: fs/ioctl.c:43:
+		if (inode->i_sb == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#80: FILE: fs/ioctl.c:54:
arg)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#84: FILE: fs/ioctl.c:56:
+	struct file *filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#98: FILE: fs/ioctl.c:66:
+		fput(filp);
 		     ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#123: FILE: fs/ioctl.c:85:
+		if ((error = get_user(on, (int __user *)arg)) != 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#169: FILE: fs/ioctl.c:100:
+		if ((error = get_user(on, (int __user *)arg)) != 0)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#184: FILE: fs/ioctl.c:107:
+				error = filp->f_op->fasync(fd, filp, on);
 				                               ^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#199: FILE: fs/ioctl.c:121:
+		if (S_ISDIR(filp->f_dentry->d_inode->i_mode) ||
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#203: FILE: fs/ioctl.c:125:
+			loff_t res = inode_get_bytes(filp->f_dentry->d_inode);
+			error =

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#204: FILE: fs/ioctl.c:126:
+			    copy_to_user((loff_t __user *) arg, &res,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#206: FILE: fs/ioctl.c:128:
+		} else

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#216: FILE: fs/ioctl.c:134:
+			error = file_ioctl(filp, cmd, arg);
 			                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#220: FILE: fs/ioctl.c:138:
+						       filp, cmd, arg);
 						       ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#223: FILE: fs/ioctl.c:141:
+			    filp->f_op->ioctl(filp->f_dentry->d_inode, filp,
 			                                               ^^^^

WARNING:INDENTED_LABEL: labels should not be indented
#232: FILE: fs/ioctl.c:148:
+      out:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: include/linux/fs.h:918:
+^Iint (*unlocked_ioctl) (struct inode *, struct file *, unsigned int, unsigned $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#243: FILE: include/linux/fs.h:918:
+	int (*unlocked_ioctl) (struct inode *, struct file *, unsigned int, unsigned 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#243: FILE: include/linux/fs.h:918:
+	int (*unlocked_ioctl) (struct inode *, struct file *, unsigned int, unsigned 

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#243: FILE: include/linux/fs.h:918:
+	int (*unlocked_ioctl) (struct inode *, struct file *, unsigned int, unsigned 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#243: FILE: include/linux/fs.h:918:
+	int (*unlocked_ioctl) (struct inode *, struct file *, unsigned int, unsigned 

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000224753.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 18 warnings, 4 checks, 205 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000224753.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
