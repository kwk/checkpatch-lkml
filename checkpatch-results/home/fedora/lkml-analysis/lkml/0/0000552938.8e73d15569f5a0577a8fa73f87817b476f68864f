WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
diff -u --recursive --new-file linux-2.4.1/fs/nfs/dir.c linux-2.4.1-dir/fs/nfs/dir.c

CHECK:BIT_MACRO: Prefer using the BIT macro
#51: FILE: fs/nfs/dir.c:73:
+#define NCOOKIES		(1 << COOKIE_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#55: FILE: fs/nfs/dir.c:77:
+#define COOKIE_HASH(x,y)	(((x) << COOKIE_SHIFT) + ((y) & COOKIE_MASK))
                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#80: FILE: fs/nfs/dir.c:102:
+		printk(KERN_INFO "nfs_cookies: not all structures were freed\n");

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#83: FILE: fs/nfs/dir.c:105:
+static inline struct nfs_cookiedict* alloc_cookiedict(unsigned int index)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#87: FILE: fs/nfs/dir.c:109:
+	if (!(dict = kmem_cache_alloc(nfs_cookie_cachep, SLAB_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#125: FILE: fs/nfs/dir.c:147:
+		if (!(dict = *q)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#142: FILE: fs/nfs/dir.c:164:
+	return COOKIE_HASH(dict->index,idx);
 	                              ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#266: FILE: fs/nfs/inode.c:1067:
+extern int nfs_init_cookiecache(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#267: FILE: fs/nfs/inode.c:1068:
+extern int nfs_destroy_cookiecache(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#297: FILE: include/linux/nfs_fs.h:179:
+extern void   nfs_zap_cookies(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#297: FILE: include/linux/nfs_fs.h:179:
+extern void   nfs_zap_cookies(struct inode *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000552938.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 5 warnings, 2 checks, 251 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000552938.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
