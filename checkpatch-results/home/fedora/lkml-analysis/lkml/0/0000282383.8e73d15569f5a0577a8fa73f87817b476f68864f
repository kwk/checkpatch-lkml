WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
diff -Nru a/arch/ppc/configs/bubinga_defconfig b/arch/ppc/configs/bubinga_defconfig

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#625: FILE: arch/ppc/platforms/4xx/bubinga.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#652: FILE: arch/ppc/platforms/4xx/bubinga.c:28:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#656: FILE: arch/ppc/platforms/4xx/bubinga.c:32:
+#include <asm/io.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/kgdb.h> instead of <asm/kgdb.h>
#658: FILE: arch/ppc/platforms/4xx/bubinga.c:34:
+#include <asm/kgdb.h>

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#667: FILE: arch/ppc/platforms/4xx/bubinga.c:43:
+#define DBG(x...) printk(x)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#672: FILE: arch/ppc/platforms/4xx/bubinga.c:48:
+extern bd_t __res;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#709: FILE: arch/ppc/platforms/4xx/bubinga.c:85:
+         /* Calculate the serial clock input frequency$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#710: FILE: arch/ppc/platforms/4xx/bubinga.c:86:
+          *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#711: FILE: arch/ppc/platforms/4xx/bubinga.c:87:
+          * The base baud is the PLL OUTA (provided in the board info$

ERROR:CODE_INDENT: code indent should use tabs where possible
#712: FILE: arch/ppc/platforms/4xx/bubinga.c:88:
+          * structure) divided by the external UART Divisor, divided$

ERROR:CODE_INDENT: code indent should use tabs where possible
#713: FILE: arch/ppc/platforms/4xx/bubinga.c:89:
+          * by 16.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#714: FILE: arch/ppc/platforms/4xx/bubinga.c:90:
+          */$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#720: FILE: arch/ppc/platforms/4xx/bubinga.c:96:
+	port.membase = (void*)ACTING_UART0_IO_BASE;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#728: FILE: arch/ppc/platforms/4xx/bubinga.c:104:
+	if (early_serial_setup(&port) != 0) {
+		printk("Early serial init of port 0 failed\n");
+	}	

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#729: FILE: arch/ppc/platforms/4xx/bubinga.c:105:
+		printk("Early serial init of port 0 failed\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#730: FILE: arch/ppc/platforms/4xx/bubinga.c:106:
+^I}^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#731: FILE: arch/ppc/platforms/4xx/bubinga.c:107:
+^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#732: FILE: arch/ppc/platforms/4xx/bubinga.c:108:
+	port.membase = (void*)ACTING_UART1_IO_BASE;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#736: FILE: arch/ppc/platforms/4xx/bubinga.c:112:
+	if (early_serial_setup(&port) != 0) {
+		printk("Early serial init of port 1 failed\n");
+	}	

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#737: FILE: arch/ppc/platforms/4xx/bubinga.c:113:
+		printk("Early serial init of port 1 failed\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#738: FILE: arch/ppc/platforms/4xx/bubinga.c:114:
+^I}^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#744: FILE: arch/ppc/platforms/4xx/bubinga.c:120:
+{
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#765: FILE: arch/ppc/platforms/4xx/bubinga.c:141:
+	printk("ioremap PCLIO_BASE = 0x%x\n", pcip);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#766: FILE: arch/ppc/platforms/4xx/bubinga.c:142:
+	printk("PCI bridge regs before fixup \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#766: FILE: arch/ppc/platforms/4xx/bubinga.c:142:
+	printk("PCI bridge regs before fixup \n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#768: FILE: arch/ppc/platforms/4xx/bubinga.c:144:
+		printk(" pmm%dma\t0x%x\n", i, in_le32(&(pcip->pmm[i].ma)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[i].ma
#768: FILE: arch/ppc/platforms/4xx/bubinga.c:144:
+		printk(" pmm%dma\t0x%x\n", i, in_le32(&(pcip->pmm[i].ma)));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#769: FILE: arch/ppc/platforms/4xx/bubinga.c:145:
+		printk(" pmm%dma\t0x%x\n", i, in_le32(&(pcip->pmm[i].la)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[i].la
#769: FILE: arch/ppc/platforms/4xx/bubinga.c:145:
+		printk(" pmm%dma\t0x%x\n", i, in_le32(&(pcip->pmm[i].la)));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#770: FILE: arch/ppc/platforms/4xx/bubinga.c:146:
+		printk(" pmm%dma\t0x%x\n", i, in_le32(&(pcip->pmm[i].pcila)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[i].pcila
#770: FILE: arch/ppc/platforms/4xx/bubinga.c:146:
+		printk(" pmm%dma\t0x%x\n", i, in_le32(&(pcip->pmm[i].pcila)));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#771: FILE: arch/ppc/platforms/4xx/bubinga.c:147:
+		printk(" pmm%dma\t0x%x\n", i, in_le32(&(pcip->pmm[i].pciha)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[i].pciha
#771: FILE: arch/ppc/platforms/4xx/bubinga.c:147:
+		printk(" pmm%dma\t0x%x\n", i, in_le32(&(pcip->pmm[i].pciha)));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#773: FILE: arch/ppc/platforms/4xx/bubinga.c:149:
+	printk(" ptm1ms\t0x%x\n", in_le32(&(pcip->ptm1ms)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->ptm1ms
#773: FILE: arch/ppc/platforms/4xx/bubinga.c:149:
+	printk(" ptm1ms\t0x%x\n", in_le32(&(pcip->ptm1ms)));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#774: FILE: arch/ppc/platforms/4xx/bubinga.c:150:
+	printk(" ptm1la\t0x%x\n", in_le32(&(pcip->ptm1la)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->ptm1la
#774: FILE: arch/ppc/platforms/4xx/bubinga.c:150:
+	printk(" ptm1la\t0x%x\n", in_le32(&(pcip->ptm1la)));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#775: FILE: arch/ppc/platforms/4xx/bubinga.c:151:
+	printk(" ptm2ms\t0x%x\n", in_le32(&(pcip->ptm2ms)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->ptm2ms
#775: FILE: arch/ppc/platforms/4xx/bubinga.c:151:
+	printk(" ptm2ms\t0x%x\n", in_le32(&(pcip->ptm2ms)));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#776: FILE: arch/ppc/platforms/4xx/bubinga.c:152:
+	printk(" ptm2la\t0x%x\n", in_le32(&(pcip->ptm2la)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->ptm2la
#776: FILE: arch/ppc/platforms/4xx/bubinga.c:152:
+	printk(" ptm2la\t0x%x\n", in_le32(&(pcip->ptm2la)));

CHECK:SPACING: No space is necessary after a cast
#783: FILE: arch/ppc/platforms/4xx/bubinga.c:159:
+	out_le32((void *) &(pcip->pmm[0].ma), 0x00000000);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[0].ma
#783: FILE: arch/ppc/platforms/4xx/bubinga.c:159:
+	out_le32((void *) &(pcip->pmm[0].ma), 0x00000000);

CHECK:SPACING: No space is necessary after a cast
#785: FILE: arch/ppc/platforms/4xx/bubinga.c:161:
+	out_le32((void *) &(pcip->pmm[0].la), 0x80000000);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[0].la
#785: FILE: arch/ppc/platforms/4xx/bubinga.c:161:
+	out_le32((void *) &(pcip->pmm[0].la), 0x80000000);

CHECK:SPACING: No space is necessary after a cast
#787: FILE: arch/ppc/platforms/4xx/bubinga.c:163:
+	out_le32((void *) &(pcip->pmm[0].pcila), PPC405_PCI_MEM_BASE);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[0].pcila
#787: FILE: arch/ppc/platforms/4xx/bubinga.c:163:
+	out_le32((void *) &(pcip->pmm[0].pcila), PPC405_PCI_MEM_BASE);

CHECK:SPACING: No space is necessary after a cast
#789: FILE: arch/ppc/platforms/4xx/bubinga.c:165:
+	out_le32((void *) &(pcip->pmm[0].pciha), 0x00000000);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[0].pciha
#789: FILE: arch/ppc/platforms/4xx/bubinga.c:165:
+	out_le32((void *) &(pcip->pmm[0].pciha), 0x00000000);

CHECK:SPACING: No space is necessary after a cast
#791: FILE: arch/ppc/platforms/4xx/bubinga.c:167:
+	out_le32((void *) &(pcip->pmm[0].ma), ((0xffffffff -

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[0].ma
#791: FILE: arch/ppc/platforms/4xx/bubinga.c:167:
+	out_le32((void *) &(pcip->pmm[0].ma), ((0xffffffff -

CHECK:SPACING: No space is necessary after a cast
#796: FILE: arch/ppc/platforms/4xx/bubinga.c:172:
+	out_le32((void *) &(pcip->pmm[1].ma), 0x00000000);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[1].ma
#796: FILE: arch/ppc/platforms/4xx/bubinga.c:172:
+	out_le32((void *) &(pcip->pmm[1].ma), 0x00000000);

CHECK:SPACING: No space is necessary after a cast
#797: FILE: arch/ppc/platforms/4xx/bubinga.c:173:
+	out_le32((void *) &(pcip->pmm[1].la), 0x00000000);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[1].la
#797: FILE: arch/ppc/platforms/4xx/bubinga.c:173:
+	out_le32((void *) &(pcip->pmm[1].la), 0x00000000);

CHECK:SPACING: No space is necessary after a cast
#798: FILE: arch/ppc/platforms/4xx/bubinga.c:174:
+	out_le32((void *) &(pcip->pmm[1].pcila), 0x00000000);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[1].pcila
#798: FILE: arch/ppc/platforms/4xx/bubinga.c:174:
+	out_le32((void *) &(pcip->pmm[1].pcila), 0x00000000);

CHECK:SPACING: No space is necessary after a cast
#799: FILE: arch/ppc/platforms/4xx/bubinga.c:175:
+	out_le32((void *) &(pcip->pmm[1].pciha), 0x00000000);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[1].pciha
#799: FILE: arch/ppc/platforms/4xx/bubinga.c:175:
+	out_le32((void *) &(pcip->pmm[1].pciha), 0x00000000);

CHECK:SPACING: No space is necessary after a cast
#800: FILE: arch/ppc/platforms/4xx/bubinga.c:176:
+	out_le32((void *) &(pcip->pmm[1].ma), 0x00000000);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[1].ma
#800: FILE: arch/ppc/platforms/4xx/bubinga.c:176:
+	out_le32((void *) &(pcip->pmm[1].ma), 0x00000000);

CHECK:SPACING: No space is necessary after a cast
#801: FILE: arch/ppc/platforms/4xx/bubinga.c:177:
+	out_le32((void *) &(pcip->ptm1ms), 0x00000001);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->ptm1ms
#801: FILE: arch/ppc/platforms/4xx/bubinga.c:177:
+	out_le32((void *) &(pcip->ptm1ms), 0x00000001);

CHECK:SPACING: No space is necessary after a cast
#804: FILE: arch/ppc/platforms/4xx/bubinga.c:180:
+	out_le32((void *) &(pcip->pmm[2].ma), 0x00000000);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[2].ma
#804: FILE: arch/ppc/platforms/4xx/bubinga.c:180:
+	out_le32((void *) &(pcip->pmm[2].ma), 0x00000000);

CHECK:SPACING: No space is necessary after a cast
#805: FILE: arch/ppc/platforms/4xx/bubinga.c:181:
+	out_le32((void *) &(pcip->pmm[2].la), 0x00000000);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[2].la
#805: FILE: arch/ppc/platforms/4xx/bubinga.c:181:
+	out_le32((void *) &(pcip->pmm[2].la), 0x00000000);

CHECK:SPACING: No space is necessary after a cast
#806: FILE: arch/ppc/platforms/4xx/bubinga.c:182:
+	out_le32((void *) &(pcip->pmm[2].pcila), 0x00000000);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[2].pcila
#806: FILE: arch/ppc/platforms/4xx/bubinga.c:182:
+	out_le32((void *) &(pcip->pmm[2].pcila), 0x00000000);

CHECK:SPACING: No space is necessary after a cast
#807: FILE: arch/ppc/platforms/4xx/bubinga.c:183:
+	out_le32((void *) &(pcip->pmm[2].pciha), 0x00000000);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[2].pciha
#807: FILE: arch/ppc/platforms/4xx/bubinga.c:183:
+	out_le32((void *) &(pcip->pmm[2].pciha), 0x00000000);

CHECK:SPACING: No space is necessary after a cast
#808: FILE: arch/ppc/platforms/4xx/bubinga.c:184:
+	out_le32((void *) &(pcip->pmm[2].ma), 0x00000000);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[2].ma
#808: FILE: arch/ppc/platforms/4xx/bubinga.c:184:
+	out_le32((void *) &(pcip->pmm[2].ma), 0x00000000);

CHECK:SPACING: No space is necessary after a cast
#809: FILE: arch/ppc/platforms/4xx/bubinga.c:185:
+	out_le32((void *) &(pcip->ptm2ms), 0x00000000);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->ptm2ms
#809: FILE: arch/ppc/platforms/4xx/bubinga.c:185:
+	out_le32((void *) &(pcip->ptm2ms), 0x00000000);

CHECK:SPACING: No space is necessary after a cast
#810: FILE: arch/ppc/platforms/4xx/bubinga.c:186:
+	out_le32((void *) &(pcip->ptm2la), 0x00000000);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->ptm2la
#810: FILE: arch/ppc/platforms/4xx/bubinga.c:186:
+	out_le32((void *) &(pcip->ptm2la), 0x00000000);

WARNING:TYPO_SPELLING: 'arround' may be misspelled - perhaps 'around'?
#824: FILE: arch/ppc/platforms/4xx/bubinga.c:200:
+	/* end work arround */
 	            ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#827: FILE: arch/ppc/platforms/4xx/bubinga.c:203:
+	printk("PCI bridge regs after fixup \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#827: FILE: arch/ppc/platforms/4xx/bubinga.c:203:
+	printk("PCI bridge regs after fixup \n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#829: FILE: arch/ppc/platforms/4xx/bubinga.c:205:
+		printk(" pmm%dma\t0x%x\n", i, in_le32(&(pcip->pmm[i].ma)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[i].ma
#829: FILE: arch/ppc/platforms/4xx/bubinga.c:205:
+		printk(" pmm%dma\t0x%x\n", i, in_le32(&(pcip->pmm[i].ma)));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#830: FILE: arch/ppc/platforms/4xx/bubinga.c:206:
+		printk(" pmm%dma\t0x%x\n", i, in_le32(&(pcip->pmm[i].la)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[i].la
#830: FILE: arch/ppc/platforms/4xx/bubinga.c:206:
+		printk(" pmm%dma\t0x%x\n", i, in_le32(&(pcip->pmm[i].la)));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#831: FILE: arch/ppc/platforms/4xx/bubinga.c:207:
+		printk(" pmm%dma\t0x%x\n", i, in_le32(&(pcip->pmm[i].pcila)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[i].pcila
#831: FILE: arch/ppc/platforms/4xx/bubinga.c:207:
+		printk(" pmm%dma\t0x%x\n", i, in_le32(&(pcip->pmm[i].pcila)));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#832: FILE: arch/ppc/platforms/4xx/bubinga.c:208:
+		printk(" pmm%dma\t0x%x\n", i, in_le32(&(pcip->pmm[i].pciha)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->pmm[i].pciha
#832: FILE: arch/ppc/platforms/4xx/bubinga.c:208:
+		printk(" pmm%dma\t0x%x\n", i, in_le32(&(pcip->pmm[i].pciha)));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#834: FILE: arch/ppc/platforms/4xx/bubinga.c:210:
+	printk(" ptm1ms\t0x%x\n", in_le32(&(pcip->ptm1ms)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->ptm1ms
#834: FILE: arch/ppc/platforms/4xx/bubinga.c:210:
+	printk(" ptm1ms\t0x%x\n", in_le32(&(pcip->ptm1ms)));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#835: FILE: arch/ppc/platforms/4xx/bubinga.c:211:
+	printk(" ptm1la\t0x%x\n", in_le32(&(pcip->ptm1la)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->ptm1la
#835: FILE: arch/ppc/platforms/4xx/bubinga.c:211:
+	printk(" ptm1la\t0x%x\n", in_le32(&(pcip->ptm1la)));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#836: FILE: arch/ppc/platforms/4xx/bubinga.c:212:
+	printk(" ptm2ms\t0x%x\n", in_le32(&(pcip->ptm2ms)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->ptm2ms
#836: FILE: arch/ppc/platforms/4xx/bubinga.c:212:
+	printk(" ptm2ms\t0x%x\n", in_le32(&(pcip->ptm2ms)));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#837: FILE: arch/ppc/platforms/4xx/bubinga.c:213:
+	printk(" ptm2la\t0x%x\n", in_le32(&(pcip->ptm2la)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcip->ptm2la
#837: FILE: arch/ppc/platforms/4xx/bubinga.c:213:
+	printk(" ptm2la\t0x%x\n", in_le32(&(pcip->ptm2la)));

ERROR:CODE_INDENT: code indent should use tabs where possible
#849: FILE: arch/ppc/platforms/4xx/bubinga.c:225:
+        bubinga_early_serial_map();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#849: FILE: arch/ppc/platforms/4xx/bubinga.c:225:
+        bubinga_early_serial_map();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#851: FILE: arch/ppc/platforms/4xx/bubinga.c:227:
+        /* RTC step for the evb405ep */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#852: FILE: arch/ppc/platforms/4xx/bubinga.c:228:
+        bubinga_rtc_base = (void *) BUBINGA_RTC_VADDR;$

CHECK:SPACING: No space is necessary after a cast
#852: FILE: arch/ppc/platforms/4xx/bubinga.c:228:
+        bubinga_rtc_base = (void *) BUBINGA_RTC_VADDR;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#852: FILE: arch/ppc/platforms/4xx/bubinga.c:228:
+        bubinga_rtc_base = (void *) BUBINGA_RTC_VADDR;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#853: FILE: arch/ppc/platforms/4xx/bubinga.c:229:
+        TODC_INIT(TODC_TYPE_DS1743, bubinga_rtc_base, bubinga_rtc_base,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#853: FILE: arch/ppc/platforms/4xx/bubinga.c:229:
+        TODC_INIT(TODC_TYPE_DS1743, bubinga_rtc_base, bubinga_rtc_base,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#854: FILE: arch/ppc/platforms/4xx/bubinga.c:230:
+                  bubinga_rtc_base, 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#854: FILE: arch/ppc/platforms/4xx/bubinga.c:230:
+                  bubinga_rtc_base, 8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#855: FILE: arch/ppc/platforms/4xx/bubinga.c:231:
+        /* Identify the system */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#856: FILE: arch/ppc/platforms/4xx/bubinga.c:232:
+        printk("IBM Bubinga port (MontaVista Software, Inc. <source@mvista.com>)\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#856: FILE: arch/ppc/platforms/4xx/bubinga.c:232:
+        printk("IBM Bubinga port (MontaVista Software, Inc. <source@mvista.com>)\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#856: FILE: arch/ppc/platforms/4xx/bubinga.c:232:
+        printk("IBM Bubinga port (MontaVista Software, Inc. <source@mvista.com>)\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#863: FILE: arch/ppc/platforms/4xx/bubinga.c:239:
+     ^Iio_block_mapping(BUBINGA_RTC_VADDR,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#863: FILE: arch/ppc/platforms/4xx/bubinga.c:239:
+     ^Iio_block_mapping(BUBINGA_RTC_VADDR,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#863: FILE: arch/ppc/platforms/4xx/bubinga.c:239:
+     ^Iio_block_mapping(BUBINGA_RTC_VADDR,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#864: FILE: arch/ppc/platforms/4xx/bubinga.c:240:
+                         BUBINGA_RTC_PADDR, BUBINGA_RTC_SIZE, _PAGE_IO);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#864: FILE: arch/ppc/platforms/4xx/bubinga.c:240:
+                         BUBINGA_RTC_PADDR, BUBINGA_RTC_SIZE, _PAGE_IO);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#892: FILE: arch/ppc/platforms/4xx/bubinga.h:1:
+/*

WARNING:NEW_TYPEDEFS: do not add new typedefs
#919: FILE: arch/ppc/platforms/4xx/bubinga.h:28:
+typedef struct board_info {

ERROR:CODE_INDENT: code indent should use tabs where possible
#920: FILE: arch/ppc/platforms/4xx/bubinga.h:29:
+        unsigned char    bi_s_version[4];       /* Version of this structure */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: arch/ppc/platforms/4xx/bubinga.h:29:
+        unsigned char    bi_s_version[4];       /* Version of this structure */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#921: FILE: arch/ppc/platforms/4xx/bubinga.h:30:
+        unsigned char    bi_r_version[30];      /* Version of the IBM ROM */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: arch/ppc/platforms/4xx/bubinga.h:30:
+        unsigned char    bi_r_version[30];      /* Version of the IBM ROM */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#922: FILE: arch/ppc/platforms/4xx/bubinga.h:31:
+        unsigned int     bi_memsize;            /* DRAM installed, in bytes */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#922: FILE: arch/ppc/platforms/4xx/bubinga.h:31:
+        unsigned int     bi_memsize;            /* DRAM installed, in bytes */$

WARNING:LONG_LINE: line length of 158 exceeds 100 columns
#923: FILE: arch/ppc/platforms/4xx/bubinga.h:32:
+        unsigned char    bi_enetaddr[2][6];     /* Local Ethernet MAC address */        unsigned char    bi_pci_enetaddr[6];    /* PCI Ethernet MAC address */

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#923: FILE: arch/ppc/platforms/4xx/bubinga.h:32:
+        unsigned char    bi_enetaddr[2][6];     /* Local Ethernet MAC address */        unsigned char    bi_pci_enetaddr[6];    /* PCI Ethernet MAC address */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#923: FILE: arch/ppc/platforms/4xx/bubinga.h:32:
+        unsigned char    bi_enetaddr[2][6];     /* Local Ethernet MAC address */        unsigned char    bi_pci_enetaddr[6];    /* PCI Ethernet MAC address */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#924: FILE: arch/ppc/platforms/4xx/bubinga.h:33:
+        unsigned int     bi_intfreq;            /* Processor speed, in Hz */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#924: FILE: arch/ppc/platforms/4xx/bubinga.h:33:
+        unsigned int     bi_intfreq;            /* Processor speed, in Hz */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#925: FILE: arch/ppc/platforms/4xx/bubinga.h:34:
+        unsigned int     bi_busfreq;            /* PLB Bus speed, in Hz */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#925: FILE: arch/ppc/platforms/4xx/bubinga.h:34:
+        unsigned int     bi_busfreq;            /* PLB Bus speed, in Hz */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#926: FILE: arch/ppc/platforms/4xx/bubinga.h:35:
+        unsigned int     bi_pci_busfreq;        /* PCI Bus speed, in Hz */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#926: FILE: arch/ppc/platforms/4xx/bubinga.h:35:
+        unsigned int     bi_pci_busfreq;        /* PCI Bus speed, in Hz */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#927: FILE: arch/ppc/platforms/4xx/bubinga.h:36:
+        unsigned int     bi_opb_busfreq;        /* OPB Bus speed, in Hz */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#927: FILE: arch/ppc/platforms/4xx/bubinga.h:36:
+        unsigned int     bi_opb_busfreq;        /* OPB Bus speed, in Hz */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#928: FILE: arch/ppc/platforms/4xx/bubinga.h:37:
+        unsigned int     bi_pllouta_freq;       /* PLL OUTA speed, in Hz */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#928: FILE: arch/ppc/platforms/4xx/bubinga.h:37:
+        unsigned int     bi_pllouta_freq;       /* PLL OUTA speed, in Hz */$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#932: FILE: arch/ppc/platforms/4xx/bubinga.h:41:
+/* Some 4xx parts use a different timebase frequency from the internal clock.
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#935: FILE: arch/ppc/platforms/4xx/bubinga.h:44:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#943: FILE: arch/ppc/platforms/4xx/bubinga.h:52:
+#define BUBINGA_RTC_SIZE	((uint)8*1024)
                         	        ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#965: FILE: arch/ppc/platforms/4xx/ibm405ep.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#994: FILE: arch/ppc/platforms/4xx/ibm405ep.c:30:
+^I.txeob_irq^I= 11,^I^I/* TX End Of Buffer IRQ  */^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1000: FILE: arch/ppc/platforms/4xx/ibm405ep.c:36:
+};
+OCP_SYSFS_MAL_DATA()

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1027: FILE: arch/ppc/platforms/4xx/ibm405ep.c:63:
+};
+OCP_SYSFS_EMAC_DATA()

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1032: FILE: arch/ppc/platforms/4xx/ibm405ep.c:68:
+};
+OCP_SYSFS_IIC_DATA()

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1103: FILE: arch/ppc/platforms/4xx/ibm405ep.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1104: FILE: arch/ppc/platforms/4xx/ibm405ep.h:2:
+ * arch/ppc/platforms/4xx/ibm405ep.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1148: FILE: arch/ppc/platforms/4xx/ibm405ep.h:46:
+#define PPC4xx_PCI_IO_SIZE	((uint)64*1024)
                           	         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1151: FILE: arch/ppc/platforms/4xx/ibm405ep.h:49:
+#define PPC4xx_PCI_CFG_SIZE	((uint)4*1024)
                            	        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1154: FILE: arch/ppc/platforms/4xx/ibm405ep.h:52:
+#define PPC4xx_PCI_LCFG_SIZE	((uint)4*1024)
                             	        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1157: FILE: arch/ppc/platforms/4xx/ibm405ep.h:55:
+#define PPC4xx_ONB_IO_SIZE	((uint)4*1024)
                           	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1170: FILE: arch/ppc/platforms/4xx/ibm405ep.h:68:
+#define BD_EMAC_ADDR(e,i) bi_enetaddr[e][i]
                       ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1187: FILE: arch/ppc/platforms/4xx/ibm405ep.h:85:
+		iomem_base: (u8 *)ACTING_UART##num##_IO_BASE,		\
 		          ^

WARNING:INDENTED_LABEL: labels should not be indented
#1187: FILE: arch/ppc/platforms/4xx/ibm405ep.h:85:
+		iomem_base: (u8 *)ACTING_UART##num##_IO_BASE,		\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1188: FILE: arch/ppc/platforms/4xx/ibm405ep.h:86:
+		io_type: SERIAL_IO_MEM},
 		       ^

WARNING:INDENTED_LABEL: labels should not be indented
#1188: FILE: arch/ppc/platforms/4xx/ibm405ep.h:86:
+		io_type: SERIAL_IO_MEM},

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1191: FILE: arch/ppc/platforms/4xx/ibm405ep.h:89:
+#define SERIAL_PORT_DFNS	\
+	STD_UART_OP(0)		\
+	STD_UART_OP(1)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1211: FILE: arch/ppc/platforms/4xx/ibm405ep.h:109:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1227: FILE: arch/ppc/platforms/4xx/ibm405ep.h:125:
+                                        | IBM_CPM_OPB | IBM_CPM_EBC \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1227: FILE: arch/ppc/platforms/4xx/ibm405ep.h:125:
+                                        | IBM_CPM_OPB | IBM_CPM_EBC \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1228: FILE: arch/ppc/platforms/4xx/ibm405ep.h:126:
+                                        | IBM_CPM_SDRAM0 | IBM_CPM_PLB \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1228: FILE: arch/ppc/platforms/4xx/ibm405ep.h:126:
+                                        | IBM_CPM_SDRAM0 | IBM_CPM_PLB \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1229: FILE: arch/ppc/platforms/4xx/ibm405ep.h:127:
+                                        | IBM_CPM_UIC | IBM_CPM_TMRCLK)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1229: FILE: arch/ppc/platforms/4xx/ibm405ep.h:127:
+                                        | IBM_CPM_UIC | IBM_CPM_TMRCLK)$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000282383.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 37 errors, 60 warnings, 67 checks, 1207 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000282383.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
