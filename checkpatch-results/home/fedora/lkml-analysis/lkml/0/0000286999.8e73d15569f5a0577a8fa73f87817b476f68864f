WARNING:TYPO_SPELLING: 'whith' may be misspelled - perhaps 'with'?
#33: 
kernel 2.6.5 whith this patch applyed, either with driver compiled
             ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'applyed' may be misspelled - perhaps 'applied'?
#33: 
kernel 2.6.5 whith this patch applyed, either with driver compiled
                              ^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
diff -uprN linux-2.6.5/drivers/input/Kconfig linux-2.6.5-psaux/drivers/input/Kconfig

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#112: FILE: drivers/input/misc/psaux.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'sleeped' may be misspelled - perhaps 'slept'?
#117: FILE: drivers/input/misc/psaux.c:6:
+ *    - Fixed SMP (original code sleeped with spinlocks held)
                                  ^^^^^^^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#183: FILE: drivers/input/misc/psaux.c:72:
+static unsigned int psaux_dropped = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#184: FILE: drivers/input/misc/psaux.c:73:
+static unsigned int psaux_readen  = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#185: FILE: drivers/input/misc/psaux.c:74:
+static unsigned int psaux_written = 0;

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#199: FILE: drivers/input/misc/psaux.c:88:
+#define BUFFER_SIZE 64					/* Should be integer power of 2 for efficiency */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#200: FILE: drivers/input/misc/psaux.c:89:
+#define BUFFER_BYTES ((psaux_buffer_head-psaux_buffer_tail) % BUFFER_SIZE)
                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#202: FILE: drivers/input/misc/psaux.c:91:
+volatile static unsigned int psaux_buffer_head;		/* Position in buffer to write next received byte */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#202: FILE: drivers/input/misc/psaux.c:91:
+volatile static unsigned int psaux_buffer_head;		/* Position in buffer to write next received byte */

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#203: FILE: drivers/input/misc/psaux.c:92:
+static unsigned int psaux_buffer_tail;			/* Position in buffer from which to read next byte */

WARNING:LONG_LINE_COMMENT: line length of 115 exceeds 100 columns
#204: FILE: drivers/input/misc/psaux.c:93:
+static struct serio *psaux_serio = NULL;		/* The serio device into which the driver is attached to */

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#204: FILE: drivers/input/misc/psaux.c:93:
+static struct serio *psaux_serio = NULL;		/* The serio device into which the driver is attached to */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#205: FILE: drivers/input/misc/psaux.c:94:
+static int psaux_users = 0;				/* Number of opens() of the psaux device */

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#206: FILE: drivers/input/misc/psaux.c:95:
+static DECLARE_MUTEX(psaux_mutex);			/* Mutex protecting psaux_users and psaux_buffer_tail */

WARNING:LONG_LINE_COMMENT: line length of 129 exceeds 100 columns
#207: FILE: drivers/input/misc/psaux.c:96:
+static DECLARE_WAIT_QUEUE_HEAD(psaux_wq);		/* Kernel mode processes waiting for new data in psaux_buffer sit here */

WARNING:LONG_LINE_COMMENT: line length of 111 exceeds 100 columns
#208: FILE: drivers/input/misc/psaux.c:97:
+static struct fasync_struct *psaux_fasync_s = NULL;	/* User mode processes waiting for new data sit here */

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#208: FILE: drivers/input/misc/psaux.c:97:
+static struct fasync_struct *psaux_fasync_s = NULL;	/* User mode processes waiting for new data sit here */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#210: FILE: drivers/input/misc/psaux.c:99:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#216: FILE: drivers/input/misc/psaux.c:105:
+ * which are stored for psaux_read(). */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: drivers/input/misc/psaux.c:107:
+static irqreturn_t psaux_interrupt(struct serio *serio,
+		unsigned char data, unsigned int flags, struct pt_regs *regs)

WARNING:LINE_SPACING: Missing a blank line after declarations
#221: FILE: drivers/input/misc/psaux.c:110:
+	unsigned int head, new_head;
+	if (PSAUX_DEBUG) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#222: FILE: drivers/input/misc/psaux.c:111:
+		printk(KERN_DEBUG "psaux: interrupt\n");

WARNING:LONG_LINE: line length of 141 exceeds 100 columns
#223: FILE: drivers/input/misc/psaux.c:112:
+		printk(KERN_DEBUG "psaux: got %02x, avail=%d, tail=%d, head=%d\n", data, BUFFER_BYTES, psaux_buffer_tail, psaux_buffer_head);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#223: FILE: drivers/input/misc/psaux.c:112:
+		printk(KERN_DEBUG "psaux: got %02x, avail=%d, tail=%d, head=%d\n", data, BUFFER_BYTES, psaux_buffer_tail, psaux_buffer_head);

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#225: FILE: drivers/input/misc/psaux.c:114:
+	if (PARANOID && psaux_users<=0) {				/* Why am I called in this case? */

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#225: FILE: drivers/input/misc/psaux.c:114:
+	if (PARANOID && psaux_users<=0) {				/* Why am I called in this case? */
 	                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#226: FILE: drivers/input/misc/psaux.c:115:
+		printk(KERN_WARNING "psaux: ignoring unexpected interrupt\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#231: FILE: drivers/input/misc/psaux.c:120:
+	if (PARANOID && head>=BUFFER_SIZE) { printk(KERN_CRIT "psaux: bad head value\n"); BUG(); }

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#231: FILE: drivers/input/misc/psaux.c:120:
+	if (PARANOID && head>=BUFFER_SIZE) { printk(KERN_CRIT "psaux: bad head value\n"); BUG(); }

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#231: FILE: drivers/input/misc/psaux.c:120:
+	if (PARANOID && head>=BUFFER_SIZE) { printk(KERN_CRIT "psaux: bad head value\n"); BUG(); }
 	                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#231: FILE: drivers/input/misc/psaux.c:120:
+	if (PARANOID && head>=BUFFER_SIZE) { printk(KERN_CRIT "psaux: bad head value\n"); BUG(); }

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LONG_LINE_COMMENT: line length of 122 exceeds 100 columns
#232: FILE: drivers/input/misc/psaux.c:121:
+	new_head = (head + 1) % BUFFER_SIZE;			/* Needs not to be re-entrant, as interrupts don't nest */

WARNING:LONG_LINE_COMMENT: line length of 120 exceeds 100 columns
#234: FILE: drivers/input/misc/psaux.c:123:
+		psaux_buffer[head] = data;			/* data must be written before buffer_head is updated */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#240: FILE: drivers/input/misc/psaux.c:129:
+		printk(KERN_WARNING "psaux: buffer overflow, dropping byte %02x\n", data);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#246: FILE: drivers/input/misc/psaux.c:135:
+}
+/* }}} */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#249: FILE: drivers/input/misc/psaux.c:138:
+ * an unhandled serio port is found. */

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#256: FILE: drivers/input/misc/psaux.c:145:
+		if (PSAUX_DEBUG) printk(KERN_WARNING "psaux: ignoring extra port %s\n", serio->phys);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#256: FILE: drivers/input/misc/psaux.c:145:
+		if (PSAUX_DEBUG) printk(KERN_WARNING "psaux: ignoring extra port %s\n", serio->phys);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#256: FILE: drivers/input/misc/psaux.c:145:
+		if (PSAUX_DEBUG) printk(KERN_WARNING "psaux: ignoring extra port %s\n", serio->phys);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#260: FILE: drivers/input/misc/psaux.c:149:
+		if (PSAUX_DEBUG) printk(KERN_WARNING "psaux: serio_open failed at port %s\n", serio->phys);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#260: FILE: drivers/input/misc/psaux.c:149:
+		if (PSAUX_DEBUG) printk(KERN_WARNING "psaux: serio_open failed at port %s\n", serio->phys);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#260: FILE: drivers/input/misc/psaux.c:149:
+		if (PSAUX_DEBUG) printk(KERN_WARNING "psaux: serio_open failed at port %s\n", serio->phys);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#264: FILE: drivers/input/misc/psaux.c:153:
+	if (PSAUX_DEBUG) printk(KERN_INFO "psaux: attached to %s\n", psaux_serio->phys);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#264: FILE: drivers/input/misc/psaux.c:153:
+	if (PSAUX_DEBUG) printk(KERN_INFO "psaux: attached to %s\n", psaux_serio->phys);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#266: FILE: drivers/input/misc/psaux.c:155:
+}
+/* }}} */

WARNING:LONG_LINE: line length of 153 exceeds 100 columns
#271: FILE: drivers/input/misc/psaux.c:160:
+	if (PARANOID && psaux_serio!=serio) { printk(KERN_CRIT "psaux: asked to disconnect from %s, which I didn't connect to!\n", serio->phys); BUG(); }

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#271: FILE: drivers/input/misc/psaux.c:160:
+	if (PARANOID && psaux_serio!=serio) { printk(KERN_CRIT "psaux: asked to disconnect from %s, which I didn't connect to!\n", serio->phys); BUG(); }

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#271: FILE: drivers/input/misc/psaux.c:160:
+	if (PARANOID && psaux_serio!=serio) { printk(KERN_CRIT "psaux: asked to disconnect from %s, which I didn't connect to!\n", serio->phys); BUG(); }

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#271: FILE: drivers/input/misc/psaux.c:160:
+	if (PARANOID && psaux_serio!=serio) { printk(KERN_CRIT "psaux: asked to disconnect from %s, which I didn't connect to!\n", serio->phys); BUG(); }
 	                           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#271: FILE: drivers/input/misc/psaux.c:160:
+	if (PARANOID && psaux_serio!=serio) { printk(KERN_CRIT "psaux: asked to disconnect from %s, which I didn't connect to!\n", serio->phys); BUG(); }

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#274: FILE: drivers/input/misc/psaux.c:163:
+	if (PSAUX_DEBUG) printk(KERN_INFO "psaux: detached from %s\n", serio->phys);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#274: FILE: drivers/input/misc/psaux.c:163:
+	if (PSAUX_DEBUG) printk(KERN_INFO "psaux: detached from %s\n", serio->phys);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#276: FILE: drivers/input/misc/psaux.c:165:
+}
+/* }}} */

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#286: FILE: drivers/input/misc/psaux.c:175:
+	psaux_written++;				/* May have a race condition, but I don't care */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#290: FILE: drivers/input/misc/psaux.c:179:
+}
+/* }}} */

WARNING:LINE_SPACING: Missing a blank line after declarations
#305: FILE: drivers/input/misc/psaux.c:194:
+	int retval;
+	if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: fasync, avail=%d\n", BUFFER_BYTES);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#305: FILE: drivers/input/misc/psaux.c:194:
+	if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: fasync, avail=%d\n", BUFFER_BYTES);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#305: FILE: drivers/input/misc/psaux.c:194:
+	if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: fasync, avail=%d\n", BUFFER_BYTES);

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#307: FILE: drivers/input/misc/psaux.c:196:
+	return retval<0 ? retval : 0;
 	             ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#309: FILE: drivers/input/misc/psaux.c:198:
+}
+/* }}} */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#315: FILE: drivers/input/misc/psaux.c:204:
+	if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: /dev/psaux opened\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#315: FILE: drivers/input/misc/psaux.c:204:
+	if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: /dev/psaux opened\n");

WARNING:LONG_LINE: line length of 143 exceeds 100 columns
#316: FILE: drivers/input/misc/psaux.c:205:
+	if (PARANOID && (imajor(inode)!=MISC_MAJOR /*|| iminor(inode)!=psaux_misc.minor*/)) { printk(KERN_CRIT "psaux: bad device\n"); BUG(); }

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#316: FILE: drivers/input/misc/psaux.c:205:
+	if (PARANOID && (imajor(inode)!=MISC_MAJOR /*|| iminor(inode)!=psaux_misc.minor*/)) { printk(KERN_CRIT "psaux: bad device\n"); BUG(); }

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#316: FILE: drivers/input/misc/psaux.c:205:
+	if (PARANOID && (imajor(inode)!=MISC_MAJOR /*|| iminor(inode)!=psaux_misc.minor*/)) { printk(KERN_CRIT "psaux: bad device\n"); BUG(); }

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#316: FILE: drivers/input/misc/psaux.c:205:
+	if (PARANOID && (imajor(inode)!=MISC_MAJOR /*|| iminor(inode)!=psaux_misc.minor*/)) { printk(KERN_CRIT "psaux: bad device\n"); BUG(); }
 	                              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#316: FILE: drivers/input/misc/psaux.c:205:
+	if (PARANOID && (imajor(inode)!=MISC_MAJOR /*|| iminor(inode)!=psaux_misc.minor*/)) { printk(KERN_CRIT "psaux: bad device\n"); BUG(); }

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#319: FILE: drivers/input/misc/psaux.c:208:
+	if (retval) return retval;

WARNING:LONG_LINE_STRING: line length of 115 exceeds 100 columns
#325: FILE: drivers/input/misc/psaux.c:214:
+		if (PSAUX_DEBUG && !psaux_serio) printk(KERN_WARNING "psaux: can not find suitable serial port\n");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#325: FILE: drivers/input/misc/psaux.c:214:
+		if (PSAUX_DEBUG && !psaux_serio) printk(KERN_WARNING "psaux: can not find suitable serial port\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#325: FILE: drivers/input/misc/psaux.c:214:
+		if (PSAUX_DEBUG && !psaux_serio) printk(KERN_WARNING "psaux: can not find suitable serial port\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#331: FILE: drivers/input/misc/psaux.c:220:
+}
+/* }}} */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#339: FILE: drivers/input/misc/psaux.c:228:
+	if (PARANOID && psaux_users<0) { printk(KERN_CRIT "psaux: closing closed file\n"); BUG(); }

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#339: FILE: drivers/input/misc/psaux.c:228:
+	if (PARANOID && psaux_users<0) { printk(KERN_CRIT "psaux: closing closed file\n"); BUG(); }

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#339: FILE: drivers/input/misc/psaux.c:228:
+	if (PARANOID && psaux_users<0) { printk(KERN_CRIT "psaux: closing closed file\n"); BUG(); }
 	                           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#339: FILE: drivers/input/misc/psaux.c:228:
+	if (PARANOID && psaux_users<0) { printk(KERN_CRIT "psaux: closing closed file\n"); BUG(); }

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#340: FILE: drivers/input/misc/psaux.c:229:
+	if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: /dev/psaux closed\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#340: FILE: drivers/input/misc/psaux.c:229:
+	if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: /dev/psaux closed\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#344: FILE: drivers/input/misc/psaux.c:233:
+}
+/* }}} */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#352: FILE: drivers/input/misc/psaux.c:241:
+	if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: trying to read %d bytes\n", count);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#352: FILE: drivers/input/misc/psaux.c:241:
+	if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: trying to read %d bytes\n", count);

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#353: FILE: drivers/input/misc/psaux.c:242:
+	if (count<=0) goto out;
 	         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#353: FILE: drivers/input/misc/psaux.c:242:
+	if (count<=0) goto out;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#356: FILE: drivers/input/misc/psaux.c:245:
+	if (retval) goto out;

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#359: FILE: drivers/input/misc/psaux.c:248:
+	while (psaux_buffer_head==psaux_buffer_tail) {
 	                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#364: FILE: drivers/input/misc/psaux.c:253:
+		if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: waiting for more bytes\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#364: FILE: drivers/input/misc/psaux.c:253:
+		if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: waiting for more bytes\n");

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#366: FILE: drivers/input/misc/psaux.c:255:
+		retval = wait_event_interruptible(psaux_wq, psaux_buffer_head!=psaux_buffer_tail);
 		                                                             ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#367: FILE: drivers/input/misc/psaux.c:256:
+		if (retval) goto out;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#369: FILE: drivers/input/misc/psaux.c:258:
+		if (retval) goto out;

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#377: FILE: drivers/input/misc/psaux.c:266:
+		bytes_to_copy = head>tail ? head-tail : BUFFER_SIZE-tail;
 		                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#377: FILE: drivers/input/misc/psaux.c:266:
+		bytes_to_copy = head>tail ? head-tail : BUFFER_SIZE-tail;
 		                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#377: FILE: drivers/input/misc/psaux.c:266:
+		bytes_to_copy = head>tail ? head-tail : BUFFER_SIZE-tail;
 		                                                   ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#378: FILE: drivers/input/misc/psaux.c:267:
+		if (bytes_to_copy>count) bytes_to_copy = count;
 		                 ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#378: FILE: drivers/input/misc/psaux.c:267:
+		if (bytes_to_copy>count) bytes_to_copy = count;

WARNING:LINE_SPACING: Missing a blank line after declarations
#385: FILE: drivers/input/misc/psaux.c:274:
+			int i;
+			for (i=0; i<bytes_to_copy; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#385: FILE: drivers/input/misc/psaux.c:274:
+			for (i=0; i<bytes_to_copy; i++) {
 			      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#385: FILE: drivers/input/misc/psaux.c:274:
+			for (i=0; i<bytes_to_copy; i++) {
 			           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#385: FILE: drivers/input/misc/psaux.c:274:
+			for (i=0; i<bytes_to_copy; i++) {
+				printk(KERN_DEBUG "psaux: read %02x, tail=%d, head=%d\n", psaux_buffer[tail+i], tail, head);
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#386: FILE: drivers/input/misc/psaux.c:275:
+				printk(KERN_DEBUG "psaux: read %02x, tail=%d, head=%d\n", psaux_buffer[tail+i], tail, head);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#386: FILE: drivers/input/misc/psaux.c:275:
+				printk(KERN_DEBUG "psaux: read %02x, tail=%d, head=%d\n", psaux_buffer[tail+i], tail, head);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#386: FILE: drivers/input/misc/psaux.c:275:
+				printk(KERN_DEBUG "psaux: read %02x, tail=%d, head=%d\n", psaux_buffer[tail+i], tail, head);
 				                                                                           ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#398: FILE: drivers/input/misc/psaux.c:287:
+	} while (head!=tail && count>0);
 	             ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#398: FILE: drivers/input/misc/psaux.c:287:
+	} while (head!=tail && count>0);
 	                            ^

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#401: FILE: drivers/input/misc/psaux.c:290:
+out:	if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: read done, return %d\n", retval);
+	return retval;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#401: FILE: drivers/input/misc/psaux.c:290:
+out:	if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: read done, return %d\n", retval);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#401: FILE: drivers/input/misc/psaux.c:290:
+out:	if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: read done, return %d\n", retval);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#404: FILE: drivers/input/misc/psaux.c:293:
+}
+/* }}} */

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#405: FILE: drivers/input/misc/psaux.c:294:
+/* {{{ [fold] ssize_t psaux_write(struct file *file, const char *buffer, size_t count, loff_t *ppos) */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#412: FILE: drivers/input/misc/psaux.c:301:
+	for (remaining=count; remaining>0; remaining--, buffer++) {
 	              ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#412: FILE: drivers/input/misc/psaux.c:301:
+	for (remaining=count; remaining>0; remaining--, buffer++) {
 	                               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#414: FILE: drivers/input/misc/psaux.c:303:
+		if (retval) return retval;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#416: FILE: drivers/input/misc/psaux.c:305:
+		if (retval) return retval;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#417: FILE: drivers/input/misc/psaux.c:306:
+		if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: written %02x\n", c);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#417: FILE: drivers/input/misc/psaux.c:306:
+		if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: written %02x\n", c);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#419: FILE: drivers/input/misc/psaux.c:308:
+	if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: written %d bytes\n", count);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#419: FILE: drivers/input/misc/psaux.c:308:
+	if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: written %d bytes\n", count);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#422: FILE: drivers/input/misc/psaux.c:311:
+}
+/* }}} */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#427: FILE: drivers/input/misc/psaux.c:316:
+	if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: poll, avail=%d\n", BUFFER_BYTES);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#427: FILE: drivers/input/misc/psaux.c:316:
+	if (PSAUX_DEBUG) printk(KERN_DEBUG "psaux: poll, avail=%d\n", BUFFER_BYTES);

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#429: FILE: drivers/input/misc/psaux.c:318:
+	if (psaux_buffer_head!=psaux_buffer_tail)
 	                     ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#433: FILE: drivers/input/misc/psaux.c:322:
+}
+/* }}} */

WARNING:CONST_STRUCT: struct file_operations should normally be const
#435: FILE: drivers/input/misc/psaux.c:324:
+struct file_operations psaux_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#444: FILE: drivers/input/misc/psaux.c:333:
+};
+static struct miscdevice psaux_misc = {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#454: FILE: drivers/input/misc/psaux.c:343:
+	printk(KERN_INFO "psaux: direct /dev/psaux device\n");

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#459: FILE: drivers/input/misc/psaux.c:348:
+		printk(KERN_WARNING "psaux: could not misc_register the device with minor %d: aborting\n", minor);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#459: FILE: drivers/input/misc/psaux.c:348:
+		printk(KERN_WARNING "psaux: could not misc_register the device with minor %d: aborting\n", minor);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#464: FILE: drivers/input/misc/psaux.c:353:
+	if (PSAUX_DEBUG) printk(KERN_INFO "psaux: registered minor %i\n", psaux_misc.minor);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#464: FILE: drivers/input/misc/psaux.c:353:
+	if (PSAUX_DEBUG) printk(KERN_INFO "psaux: registered minor %i\n", psaux_misc.minor);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#466: FILE: drivers/input/misc/psaux.c:355:
+		printk(KERN_INFO "psaux: debug messages enabled (use debug=0 to suppress)\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#468: FILE: drivers/input/misc/psaux.c:357:
+		printk(KERN_INFO "psaux: debug messages suppressed\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#473: FILE: drivers/input/misc/psaux.c:362:
+}
+/* }}} */

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#480: FILE: drivers/input/misc/psaux.c:369:
+	if (PARANOID && retval) { printk(KERN_CRIT "psaux: failed to deregister misc device\n"); BUG(); }

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#480: FILE: drivers/input/misc/psaux.c:369:
+	if (PARANOID && retval) { printk(KERN_CRIT "psaux: failed to deregister misc device\n"); BUG(); }

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#480: FILE: drivers/input/misc/psaux.c:369:
+	if (PARANOID && retval) { printk(KERN_CRIT "psaux: failed to deregister misc device\n"); BUG(); }

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#480: FILE: drivers/input/misc/psaux.c:369:
+	if (PARANOID && retval) { printk(KERN_CRIT "psaux: failed to deregister misc device\n"); BUG(); }

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#482: FILE: drivers/input/misc/psaux.c:371:
+	printk(KERN_INFO "psaux: statistics: read %d, wrote %d, dropped %d bytes\n", psaux_readen, psaux_written, psaux_dropped);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#482: FILE: drivers/input/misc/psaux.c:371:
+	printk(KERN_INFO "psaux: statistics: read %d, wrote %d, dropped %d bytes\n", psaux_readen, psaux_written, psaux_dropped);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#484: FILE: drivers/input/misc/psaux.c:373:
+	printk(KERN_INFO "psaux: unloaded\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#486: FILE: drivers/input/misc/psaux.c:375:
+}
+/* }}} */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286999.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 52 errors, 72 warnings, 19 checks, 435 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286999.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
