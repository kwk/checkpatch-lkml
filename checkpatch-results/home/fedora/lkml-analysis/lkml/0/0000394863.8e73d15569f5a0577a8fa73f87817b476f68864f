WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
This patch moves the resource parsing functions from the pnpbios protocol to a 

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#37: 
--- a/drivers/pnp/support.c	Thu Jan  1 00:00:00 1970

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#40: FILE: drivers/pnp/support.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#81: FILE: drivers/pnp/support.c:42:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#88: FILE: drivers/pnp/support.c:49:
+int pnp_is_active(struct pnp_dev * dev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: drivers/pnp/support.c:55:
+^I    ^Ireturn 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#94: FILE: drivers/pnp/support.c:55:
+^I    ^Ireturn 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#99: FILE: drivers/pnp/support.c:60:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: drivers/pnp/support.c:65:
+static void current_irqresource(struct pnp_resource_table * res, int irq)

WARNING:LINE_SPACING: Missing a blank line after declarations
#107: FILE: drivers/pnp/support.c:68:
+	int i = 0;
+	while ((res->irq_resource[i].flags & IORESOURCE_IRQ) && i < PNP_MAX_IRQ) i++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#107: FILE: drivers/pnp/support.c:68:
+	while ((res->irq_resource[i].flags & IORESOURCE_IRQ) && i < PNP_MAX_IRQ) i++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: No space is necessary after a cast
#110: FILE: drivers/pnp/support.c:71:
+		res->irq_resource[i].end = (unsigned long) irq;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#115: FILE: drivers/pnp/support.c:76:
+static void current_dmaresource(struct pnp_resource_table * res, int dma)

WARNING:LINE_SPACING: Missing a blank line after declarations
#118: FILE: drivers/pnp/support.c:79:
+	int i = 0;
+	while ((res->dma_resource[i].flags & IORESOURCE_DMA) && i < PNP_MAX_DMA) i++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#118: FILE: drivers/pnp/support.c:79:
+	while ((res->dma_resource[i].flags & IORESOURCE_DMA) && i < PNP_MAX_DMA) i++;

CHECK:SPACING: No space is necessary after a cast
#121: FILE: drivers/pnp/support.c:82:
+		res->dma_resource[i].end = (unsigned long) dma;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#126: FILE: drivers/pnp/support.c:87:
+static void current_ioresource(struct pnp_resource_table * res, int io, int len)

WARNING:LINE_SPACING: Missing a blank line after declarations
#129: FILE: drivers/pnp/support.c:90:
+	int i = 0;
+	while ((res->port_resource[i].flags & IORESOURCE_IO) && i < PNP_MAX_PORT) i++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#129: FILE: drivers/pnp/support.c:90:
+	while ((res->port_resource[i].flags & IORESOURCE_IO) && i < PNP_MAX_PORT) i++;

CHECK:SPACING: No space is necessary after a cast
#131: FILE: drivers/pnp/support.c:92:
+		res->port_resource[i].start = (unsigned long) io;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#137: FILE: drivers/pnp/support.c:98:
+static void current_memresource(struct pnp_resource_table * res, int mem, int len)

WARNING:LINE_SPACING: Missing a blank line after declarations
#140: FILE: drivers/pnp/support.c:101:
+	int i = 0;
+	while ((res->mem_resource[i].flags & IORESOURCE_MEM) && i < PNP_MAX_MEM) i++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#140: FILE: drivers/pnp/support.c:101:
+	while ((res->mem_resource[i].flags & IORESOURCE_MEM) && i < PNP_MAX_MEM) i++;

CHECK:SPACING: No space is necessary after a cast
#142: FILE: drivers/pnp/support.c:103:
+		res->mem_resource[i].start = (unsigned long) mem;

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#149: FILE: drivers/pnp/support.c:110:
+ * pnp_parse_current_resources - Extracts current resource information from a raw PnP resource structure

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#156: FILE: drivers/pnp/support.c:117:
+unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#156: FILE: drivers/pnp/support.c:117:
+unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#156: FILE: drivers/pnp/support.c:117:
+unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#156: FILE: drivers/pnp/support.c:117:
+unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#156: FILE: drivers/pnp/support.c:117:
+unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#167: FILE: drivers/pnp/support.c:128:
+	while ((char *)p < (char *)end) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#168: FILE: drivers/pnp/support.c:129:
+		if(p[0] & LARGE_TAG) { /* large tag */

CHECK:SPACING: No space is necessary after a cast
#173: FILE: drivers/pnp/support.c:134:
+				int io = *(short *) &p[4];

CHECK:SPACING: No space is necessary after a cast
#174: FILE: drivers/pnp/support.c:135:
+				int size = *(short *) &p[10];

WARNING:LINE_SPACING: Missing a blank line after declarations
#175: FILE: drivers/pnp/support.c:136:
+				int size = *(short *) &p[10];
+				if (len != 9)

CHECK:SPACING: No space is necessary after a cast
#187: FILE: drivers/pnp/support.c:148:
+				int io = *(int *) &p[4];

CHECK:SPACING: No space is necessary after a cast
#188: FILE: drivers/pnp/support.c:149:
+				int size = *(int *) &p[16];

WARNING:LINE_SPACING: Missing a blank line after declarations
#189: FILE: drivers/pnp/support.c:150:
+				int size = *(int *) &p[16];
+				if (len != 17)

CHECK:SPACING: No space is necessary after a cast
#196: FILE: drivers/pnp/support.c:157:
+				int io = *(int *) &p[4];

CHECK:SPACING: No space is necessary after a cast
#197: FILE: drivers/pnp/support.c:158:
+				int size = *(int *) &p[8];

WARNING:LINE_SPACING: Missing a blank line after declarations
#198: FILE: drivers/pnp/support.c:159:
+				int size = *(int *) &p[8];
+				if (len != 9)

WARNING:TYPO_SPELLING: 'unkown' may be misspelled - perhaps 'unknown'?
#203: FILE: drivers/pnp/support.c:164:
+			default: /* an unkown tag */
 			               ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INDENTED_LABEL: labels should not be indented
#205: FILE: drivers/pnp/support.c:166:
+				lrg_err:

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#216: FILE: drivers/pnp/support.c:177:
+		switch ((p[0]>>3) & 0x0f) {
 		             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#220: FILE: drivers/pnp/support.c:181:
+			int i, mask, irq = -1;
+			if (len < 2 || len > 3)

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#222: FILE: drivers/pnp/support.c:183:
+			mask= p[1] + p[2]*256;
 			    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#222: FILE: drivers/pnp/support.c:183:
+			mask= p[1] + p[2]*256;
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#223: FILE: drivers/pnp/support.c:184:
+			for (i=0;i<16;i++, mask=mask>>1)
 			      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#223: FILE: drivers/pnp/support.c:184:
+			for (i=0;i<16;i++, mask=mask>>1)
 			        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#223: FILE: drivers/pnp/support.c:184:
+			for (i=0;i<16;i++, mask=mask>>1)
 			          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#223: FILE: drivers/pnp/support.c:184:
+			for (i=0;i<16;i++, mask=mask>>1)
 			             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#223: FILE: drivers/pnp/support.c:184:
+			for (i=0;i<16;i++, mask=mask>>1)
 			                       ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#223: FILE: drivers/pnp/support.c:184:
+			for (i=0;i<16;i++, mask=mask>>1)
 			                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#224: FILE: drivers/pnp/support.c:185:
+				if(mask & 0x01) irq=i;
 				                   ^

ERROR:SPACING: space required before the open parenthesis '('
#224: FILE: drivers/pnp/support.c:185:
+				if(mask & 0x01) irq=i;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#224: FILE: drivers/pnp/support.c:185:
+				if(mask & 0x01) irq=i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#231: FILE: drivers/pnp/support.c:192:
+			int i, mask, dma = -1;
+			if (len != 2)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#234: FILE: drivers/pnp/support.c:195:
+			for (i=0;i<8;i++, mask = mask>>1)
 			      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#234: FILE: drivers/pnp/support.c:195:
+			for (i=0;i<8;i++, mask = mask>>1)
 			        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#234: FILE: drivers/pnp/support.c:195:
+			for (i=0;i<8;i++, mask = mask>>1)
 			          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#234: FILE: drivers/pnp/support.c:195:
+			for (i=0;i<8;i++, mask = mask>>1)
 			            ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#234: FILE: drivers/pnp/support.c:195:
+			for (i=0;i<8;i++, mask = mask>>1)
 			                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#235: FILE: drivers/pnp/support.c:196:
+				if(mask & 0x01) dma=i;
 				                   ^

ERROR:SPACING: space required before the open parenthesis '('
#235: FILE: drivers/pnp/support.c:196:
+				if(mask & 0x01) dma=i;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#235: FILE: drivers/pnp/support.c:196:
+				if(mask & 0x01) dma=i;

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#241: FILE: drivers/pnp/support.c:202:
+			int io= p[2] + p[3] *256;
 			      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#241: FILE: drivers/pnp/support.c:202:
+			int io= p[2] + p[3] *256;
 			                    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#243: FILE: drivers/pnp/support.c:204:
+			int size = p[7];
+			if (len != 7)

WARNING:LINE_SPACING: Missing a blank line after declarations
#252: FILE: drivers/pnp/support.c:213:
+			int size = p[3];
+			if (len != 3)

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: drivers/pnp/support.c:221:
+        ^I^Ireturn (unsigned char *)p;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#260: FILE: drivers/pnp/support.c:221:
+        ^I^Ireturn (unsigned char *)p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: drivers/pnp/support.c:221:
+        ^I^Ireturn (unsigned char *)p;$

WARNING:TYPO_SPELLING: 'unkown' may be misspelled - perhaps 'unknown'?
#263: FILE: drivers/pnp/support.c:224:
+		default: /* an unkown tag */
 		               ^^^^^^

WARNING:INDENTED_LABEL: labels should not be indented
#265: FILE: drivers/pnp/support.c:226:
+			sm_err:

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#266: FILE: drivers/pnp/support.c:227:
+			pnp_warn("parser: Unknown small tag '0x%x'.", p[0]>>3);
 			                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: drivers/pnp/support.c:231:
+                p += len + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: drivers/pnp/support.c:231:
+                p += len + 1;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#277: FILE: drivers/pnp/support.c:238:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#284: FILE: drivers/pnp/support.c:245:
+	struct pnp_mem * mem;

WARNING:LINE_SPACING: Missing a blank line after declarations
#285: FILE: drivers/pnp/support.c:246:
+	struct pnp_mem * mem;
+	mem = pnp_alloc(sizeof(struct pnp_mem));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#293: FILE: drivers/pnp/support.c:254:
+	pnp_add_mem_resource(dev,depnum,mem);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#293: FILE: drivers/pnp/support.c:254:
+	pnp_add_mem_resource(dev,depnum,mem);
 	                               ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#295: FILE: drivers/pnp/support.c:256:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#299: FILE: drivers/pnp/support.c:260:
+	struct pnp_mem * mem;

WARNING:LINE_SPACING: Missing a blank line after declarations
#300: FILE: drivers/pnp/support.c:261:
+	struct pnp_mem * mem;
+	mem = pnp_alloc(sizeof(struct pnp_mem));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#308: FILE: drivers/pnp/support.c:269:
+	pnp_add_mem_resource(dev,depnum,mem);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#308: FILE: drivers/pnp/support.c:269:
+	pnp_add_mem_resource(dev,depnum,mem);
 	                               ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#310: FILE: drivers/pnp/support.c:271:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#314: FILE: drivers/pnp/support.c:275:
+	struct pnp_mem * mem;

WARNING:LINE_SPACING: Missing a blank line after declarations
#315: FILE: drivers/pnp/support.c:276:
+	struct pnp_mem * mem;
+	mem = pnp_alloc(sizeof(struct pnp_mem));

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#318: FILE: drivers/pnp/support.c:279:
+	mem->min = mem->max = (p[5] << 24) | (p[4] << 16) | (p[3] << 8) | p[2];

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#322: FILE: drivers/pnp/support.c:283:
+	pnp_add_mem_resource(dev,depnum,mem);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#322: FILE: drivers/pnp/support.c:283:
+	pnp_add_mem_resource(dev,depnum,mem);
 	                               ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#324: FILE: drivers/pnp/support.c:285:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#328: FILE: drivers/pnp/support.c:289:
+	struct pnp_irq * irq;

WARNING:LINE_SPACING: Missing a blank line after declarations
#329: FILE: drivers/pnp/support.c:290:
+	struct pnp_irq * irq;
+	irq = pnp_alloc(sizeof(struct pnp_irq));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: drivers/pnp/support.c:296:
+	pnp_add_irq_resource(dev,depnum,irq);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: drivers/pnp/support.c:296:
+	pnp_add_irq_resource(dev,depnum,irq);
 	                               ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#337: FILE: drivers/pnp/support.c:298:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#341: FILE: drivers/pnp/support.c:302:
+	struct pnp_dma * dma;

WARNING:LINE_SPACING: Missing a blank line after declarations
#342: FILE: drivers/pnp/support.c:303:
+	struct pnp_dma * dma;
+	dma = pnp_alloc(sizeof(struct pnp_dma));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#347: FILE: drivers/pnp/support.c:308:
+	pnp_add_dma_resource(dev,depnum,dma);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#347: FILE: drivers/pnp/support.c:308:
+	pnp_add_dma_resource(dev,depnum,dma);
 	                               ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#349: FILE: drivers/pnp/support.c:310:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#353: FILE: drivers/pnp/support.c:314:
+	struct pnp_port * port;

WARNING:LINE_SPACING: Missing a blank line after declarations
#354: FILE: drivers/pnp/support.c:315:
+	struct pnp_port * port;
+	port = pnp_alloc(sizeof(struct pnp_port));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#362: FILE: drivers/pnp/support.c:323:
+	pnp_add_port_resource(dev,depnum,port);
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#362: FILE: drivers/pnp/support.c:323:
+	pnp_add_port_resource(dev,depnum,port);
 	                                ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#364: FILE: drivers/pnp/support.c:325:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#368: FILE: drivers/pnp/support.c:329:
+	struct pnp_port * port;

WARNING:LINE_SPACING: Missing a blank line after declarations
#369: FILE: drivers/pnp/support.c:330:
+	struct pnp_port * port;
+	port = pnp_alloc(sizeof(struct pnp_port));

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#372: FILE: drivers/pnp/support.c:333:
+	port->min = port->max = (p[2] << 8) | p[1];

ERROR:SPACING: space required after that ',' (ctx:VxV)
#376: FILE: drivers/pnp/support.c:337:
+	pnp_add_port_resource(dev,depnum,port);
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#376: FILE: drivers/pnp/support.c:337:
+	pnp_add_port_resource(dev,depnum,port);
 	                                ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#378: FILE: drivers/pnp/support.c:339:
+	return;
+}

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#381: FILE: drivers/pnp/support.c:342:
+ * pnp_parse_possible_resources - Extracts possible resource information from a raw PnP resource structure

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#388: FILE: drivers/pnp/support.c:349:
+unsigned char * pnp_parse_possible_resources(unsigned char * p, unsigned char * end, struct pnp_dev *dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#388: FILE: drivers/pnp/support.c:349:
+unsigned char * pnp_parse_possible_resources(unsigned char * p, unsigned char * end, struct pnp_dev *dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#388: FILE: drivers/pnp/support.c:349:
+unsigned char * pnp_parse_possible_resources(unsigned char * p, unsigned char * end, struct pnp_dev *dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#388: FILE: drivers/pnp/support.c:349:
+unsigned char * pnp_parse_possible_resources(unsigned char * p, unsigned char * end, struct pnp_dev *dev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pnp_build_resource"
#395: FILE: drivers/pnp/support.c:356:
+	if (pnp_build_resource(dev, 0) == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#399: FILE: drivers/pnp/support.c:360:
+	while ((char *)p < (char *)end) {
+

ERROR:SPACING: space required before the open parenthesis '('
#400: FILE: drivers/pnp/support.c:361:
+		if(p[0] & LARGE_TAG) { /* large tag */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#407: FILE: drivers/pnp/support.c:368:
+				possible_mem(p,len,depnum,dev);
 				              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#407: FILE: drivers/pnp/support.c:368:
+				possible_mem(p,len,depnum,dev);
 				                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#407: FILE: drivers/pnp/support.c:368:
+				possible_mem(p,len,depnum,dev);
 				                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#414: FILE: drivers/pnp/support.c:375:
+				possible_mem32(p,len,depnum,dev);
 				                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#414: FILE: drivers/pnp/support.c:375:
+				possible_mem32(p,len,depnum,dev);
 				                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#414: FILE: drivers/pnp/support.c:375:
+				possible_mem32(p,len,depnum,dev);
 				                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#421: FILE: drivers/pnp/support.c:382:
+				possible_fixed_mem32(p,len,depnum,dev);
 				                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#421: FILE: drivers/pnp/support.c:382:
+				possible_fixed_mem32(p,len,depnum,dev);
 				                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#421: FILE: drivers/pnp/support.c:382:
+				possible_fixed_mem32(p,len,depnum,dev);
 				                                 ^

WARNING:TYPO_SPELLING: 'unkown' may be misspelled - perhaps 'unknown'?
#424: FILE: drivers/pnp/support.c:385:
+			default: /* an unkown tag */
 			               ^^^^^^

WARNING:INDENTED_LABEL: labels should not be indented
#426: FILE: drivers/pnp/support.c:387:
+				lrg_err:

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: drivers/pnp/support.c:392:
+                        p += len + 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: drivers/pnp/support.c:392:
+                        p += len + 3;$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#437: FILE: drivers/pnp/support.c:398:
+		switch ((p[0]>>3) & 0x0f) {
 		             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#442: FILE: drivers/pnp/support.c:403:
+			possible_irq(p,len,depnum,dev);
 			              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#442: FILE: drivers/pnp/support.c:403:
+			possible_irq(p,len,depnum,dev);
 			                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#442: FILE: drivers/pnp/support.c:403:
+			possible_irq(p,len,depnum,dev);
 			                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#449: FILE: drivers/pnp/support.c:410:
+			possible_dma(p,len,depnum,dev);
 			              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#449: FILE: drivers/pnp/support.c:410:
+			possible_dma(p,len,depnum,dev);
 			                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#449: FILE: drivers/pnp/support.c:410:
+			possible_dma(p,len,depnum,dev);
 			                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#459: FILE: drivers/pnp/support.c:420:
+			pnp_build_resource(dev,dependent);
 			                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#474: FILE: drivers/pnp/support.c:435:
+			possible_port(p,len,depnum,dev);
 			               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#474: FILE: drivers/pnp/support.c:435:
+			possible_port(p,len,depnum,dev);
 			                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#474: FILE: drivers/pnp/support.c:435:
+			possible_port(p,len,depnum,dev);
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#481: FILE: drivers/pnp/support.c:442:
+			possible_fixed_port(p,len,depnum,dev);
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#481: FILE: drivers/pnp/support.c:442:
+			possible_fixed_port(p,len,depnum,dev);
 			                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#481: FILE: drivers/pnp/support.c:442:
+			possible_fixed_port(p,len,depnum,dev);
 			                                ^

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#488: FILE: drivers/pnp/support.c:449:
+			return (unsigned char *)p;
+			break;

WARNING:TYPO_SPELLING: 'unkown' may be misspelled - perhaps 'unknown'?
#490: FILE: drivers/pnp/support.c:451:
+		default: /* an unkown tag */
 		               ^^^^^^

WARNING:INDENTED_LABEL: labels should not be indented
#492: FILE: drivers/pnp/support.c:453:
+			sm_err:

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#493: FILE: drivers/pnp/support.c:454:
+			pnp_warn("parser: Unknown small tag '0x%x'.", p[0]>>3);
 			                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: drivers/pnp/support.c:458:
+                p += len + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: drivers/pnp/support.c:458:
+                p += len + 1;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#504: FILE: drivers/pnp/support.c:465:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#509: FILE: drivers/pnp/support.c:470:
+static void write_mem(unsigned char *p, struct resource * res)

WARNING:LINE_SPACING: Missing a blank line after declarations
#513: FILE: drivers/pnp/support.c:474:
+	unsigned long len = res->end - res->start + 1;
+	p[2] = (base >> 8) & 0xff;

WARNING:RETURN_VOID: void function return statements are not generally useful
#520: FILE: drivers/pnp/support.c:481:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#522: FILE: drivers/pnp/support.c:483:
+static void write_mem32(unsigned char *p, struct resource * res)

WARNING:LINE_SPACING: Missing a blank line after declarations
#526: FILE: drivers/pnp/support.c:487:
+	unsigned long len = res->end - res->start + 1;
+	p[2] = base & 0xff;

WARNING:RETURN_VOID: void function return statements are not generally useful
#539: FILE: drivers/pnp/support.c:500:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#541: FILE: drivers/pnp/support.c:502:
+static void write_fixed_mem32(unsigned char *p, struct resource * res)

WARNING:LINE_SPACING: Missing a blank line after declarations
#544: FILE: drivers/pnp/support.c:505:
+	unsigned long len = res->end - res->start + 1;
+	p[2] = base & 0xff;

WARNING:RETURN_VOID: void function return statements are not generally useful
#553: FILE: drivers/pnp/support.c:514:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#555: FILE: drivers/pnp/support.c:516:
+static void write_irq(unsigned char *p, struct resource * res)

WARNING:LINE_SPACING: Missing a blank line after declarations
#558: FILE: drivers/pnp/support.c:519:
+	unsigned long map = 0;
+	map = 1 << res->start;

WARNING:RETURN_VOID: void function return statements are not generally useful
#562: FILE: drivers/pnp/support.c:523:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#564: FILE: drivers/pnp/support.c:525:
+static void write_dma(unsigned char *p, struct resource * res)

WARNING:LINE_SPACING: Missing a blank line after declarations
#567: FILE: drivers/pnp/support.c:528:
+	unsigned long map = 0;
+	map = 1 << res->start;

WARNING:RETURN_VOID: void function return statements are not generally useful
#570: FILE: drivers/pnp/support.c:531:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#572: FILE: drivers/pnp/support.c:533:
+static void write_port(unsigned char *p, struct resource * res)

WARNING:LINE_SPACING: Missing a blank line after declarations
#576: FILE: drivers/pnp/support.c:537:
+	unsigned long len = res->end - res->start + 1;
+	p[2] = base & 0xff;

WARNING:RETURN_VOID: void function return statements are not generally useful
#582: FILE: drivers/pnp/support.c:543:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#584: FILE: drivers/pnp/support.c:545:
+static void write_fixed_port(unsigned char *p, struct resource * res)

WARNING:LINE_SPACING: Missing a blank line after declarations
#588: FILE: drivers/pnp/support.c:549:
+	unsigned long len = res->end - res->start + 1;
+	p[1] = base & 0xff;

WARNING:RETURN_VOID: void function return statements are not generally useful
#592: FILE: drivers/pnp/support.c:553:
+	return;
+}

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#602: FILE: drivers/pnp/support.c:563:
+unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#602: FILE: drivers/pnp/support.c:563:
+unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#602: FILE: drivers/pnp/support.c:563:
+unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#602: FILE: drivers/pnp/support.c:563:
+unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#602: FILE: drivers/pnp/support.c:563:
+unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#610: FILE: drivers/pnp/support.c:571:
+	while ((char *)p < (char *)end) {
+

ERROR:SPACING: space required before the open parenthesis '('
#611: FILE: drivers/pnp/support.c:572:
+		if(p[0] & LARGE_TAG) { /* large tag */

WARNING:TYPO_SPELLING: 'unkown' may be misspelled - perhaps 'unknown'?
#636: FILE: drivers/pnp/support.c:597:
+			default: /* an unkown tag */
 			               ^^^^^^

WARNING:INDENTED_LABEL: labels should not be indented
#638: FILE: drivers/pnp/support.c:599:
+				lrg_err:

ERROR:CODE_INDENT: code indent should use tabs where possible
#643: FILE: drivers/pnp/support.c:604:
+                        p += len + 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: drivers/pnp/support.c:604:
+                        p += len + 3;$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#649: FILE: drivers/pnp/support.c:610:
+		switch ((p[0]>>3) & 0x0f) {
 		             ^

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#686: FILE: drivers/pnp/support.c:647:
+			return (unsigned char *)p;
+			break;

WARNING:TYPO_SPELLING: 'unkown' may be misspelled - perhaps 'unknown'?
#688: FILE: drivers/pnp/support.c:649:
+		default: /* an unkown tag */
 		               ^^^^^^

WARNING:INDENTED_LABEL: labels should not be indented
#690: FILE: drivers/pnp/support.c:651:
+			sm_err:

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#691: FILE: drivers/pnp/support.c:652:
+			pnp_warn("parser: Unknown small tag '0x%x'.", p[0]>>3);
 			                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#695: FILE: drivers/pnp/support.c:656:
+                p += len + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: drivers/pnp/support.c:656:
+                p += len + 1;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#702: FILE: drivers/pnp/support.c:663:
+EXPORT_SYMBOL(pnp_is_active);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#703: FILE: drivers/pnp/support.c:664:
+EXPORT_SYMBOL(pnp_parse_current_resources);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#704: FILE: drivers/pnp/support.c:665:
+EXPORT_SYMBOL(pnp_parse_possible_resources);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#705: FILE: drivers/pnp/support.c:666:
+EXPORT_SYMBOL(pnp_write_resources);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000394863.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 98 errors, 72 warnings, 30 checks, 666 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000394863.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
