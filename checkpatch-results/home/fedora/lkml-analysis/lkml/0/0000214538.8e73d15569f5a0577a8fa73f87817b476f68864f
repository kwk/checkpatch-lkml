WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
ChangeSet 1.2329.2.1, 2005/01/14 15:56:18-08:00, tlnguyen@snoqualmie.dp.intel.com

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: Documentation/PCIEBUS-HOWTO.txt:59:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: Documentation/PCIEBUS-HOWTO.txt:61:
+^I  Port devices. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: Documentation/PCIEBUS-HOWTO.txt:85:
+register its service with the PCI Express Port Bus driver (see $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: Documentation/PCIEBUS-HOWTO.txt:140:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: Documentation/PCIEBUS-HOWTO.txt:150:
+static void __exit aerdrv_service_exit(void) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: Documentation/PCIEBUS-HOWTO.txt:178:
+in a wrong interrupt mode. $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: drivers/pci/hotplug/pciehp.h:316:
+int pcie_init(struct controller *ctrl, struct pcie_device *dev,
 		php_intr_callback_t attention_button_callback,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: drivers/pci/hotplug/pciehp_core.c:359:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#374: FILE: drivers/pci/hotplug/pciehp_core.c:360:
+	dbg("%s: Called by hp_drv\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: drivers/pci/hotplug/pciehp_core.c:369:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: drivers/pci/hotplug/pciehp_core.c:373:
+	rc = pcie_init(ctrl, dev,
 		(php_intr_callback_t) pciehp_handle_attention_button,

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#394: FILE: drivers/pci/hotplug/pciehp_core.c:570:
+int hpdriver_context = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#410: FILE: drivers/pci/hotplug/pciehp_core.c:572:
+static void pciehp_remove (struct pcie_device *device)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: drivers/pci/hotplug/pciehp_core.c:574:
+^Iprintk("%s ENTRY\n", __FUNCTION__);^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#412: FILE: drivers/pci/hotplug/pciehp_core.c:574:
+	printk("%s ENTRY\n", __FUNCTION__);	

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#412: FILE: drivers/pci/hotplug/pciehp_core.c:574:
+	printk("%s ENTRY\n", __FUNCTION__);	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: drivers/pci/hotplug/pciehp_core.c:575:
+^Iprintk("%s -> Call free_irq for irq = %d\n",  $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#413: FILE: drivers/pci/hotplug/pciehp_core.c:575:
+	printk("%s -> Call free_irq for irq = %d\n",  

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: drivers/pci/hotplug/pciehp_core.c:576:
+	printk("%s -> Call free_irq for irq = %d\n",  
+		__FUNCTION__, device->irq);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#414: FILE: drivers/pci/hotplug/pciehp_core.c:576:
+		__FUNCTION__, device->irq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#419: FILE: drivers/pci/hotplug/pciehp_core.c:581:
+static int pciehp_suspend (struct pcie_device *dev, u32 state)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#421: FILE: drivers/pci/hotplug/pciehp_core.c:583:
+^Iprintk("%s ENTRY\n", __FUNCTION__);^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#421: FILE: drivers/pci/hotplug/pciehp_core.c:583:
+	printk("%s ENTRY\n", __FUNCTION__);	

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#421: FILE: drivers/pci/hotplug/pciehp_core.c:583:
+	printk("%s ENTRY\n", __FUNCTION__);	

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#425: FILE: drivers/pci/hotplug/pciehp_core.c:587:
+static int pciehp_resume (struct pcie_device *dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#427: FILE: drivers/pci/hotplug/pciehp_core.c:589:
+^Iprintk("%s ENTRY\n", __FUNCTION__);^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#427: FILE: drivers/pci/hotplug/pciehp_core.c:589:
+	printk("%s ENTRY\n", __FUNCTION__);	

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#427: FILE: drivers/pci/hotplug/pciehp_core.c:589:
+	printk("%s ENTRY\n", __FUNCTION__);	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#437: FILE: drivers/pci/hotplug/pciehp_core.c:594:
+static struct pcie_port_service_id port_pci_ids[] = { { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#438: FILE: drivers/pci/hotplug/pciehp_core.c:595:
+^I.vendor = PCI_ANY_ID, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: drivers/pci/hotplug/pciehp_core.c:597:
+^I.port_type = PCIE_RC_PORT, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#442: FILE: drivers/pci/hotplug/pciehp_core.c:599:
+^I.driver_data =^I0, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#445: FILE: drivers/pci/hotplug/pciehp_core.c:602:
 };
+static const char device_name[] = "hpdriver";

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: drivers/pci/hotplug/pciehp_core.c:631:
+ ^I^Iretval = pcie_port_service_register(&hpdriver_portdrv);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#470: FILE: drivers/pci/hotplug/pciehp_core.c:631:
+ ^I^Iretval = pcie_port_service_register(&hpdriver_portdrv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: drivers/pci/hotplug/pciehp_core.c:631:
+ ^I^Iretval = pcie_port_service_register(&hpdriver_portdrv);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#471: FILE: drivers/pci/hotplug/pciehp_core.c:632:
+ ^I^Idbg("pcie_port_service_register = %d\n", retval);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#471: FILE: drivers/pci/hotplug/pciehp_core.c:632:
+ ^I^Idbg("pcie_port_service_register = %d\n", retval);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: drivers/pci/hotplug/pciehp_core.c:632:
+ ^I^Idbg("pcie_port_service_register = %d\n", retval);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: drivers/pci/hotplug/pciehp_core.c:633:
+  ^I^Iinfo(DRIVER_DESC " version: " DRIVER_VERSION "\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#472: FILE: drivers/pci/hotplug/pciehp_core.c:633:
+  ^I^Iinfo(DRIVER_DESC " version: " DRIVER_VERSION "\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: drivers/pci/hotplug/pciehp_core.c:633:
+  ^I^Iinfo(DRIVER_DESC " version: " DRIVER_VERSION "\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#473: FILE: drivers/pci/hotplug/pciehp_core.c:634:
+ ^I^Iif (retval)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#473: FILE: drivers/pci/hotplug/pciehp_core.c:634:
+ ^I^Iif (retval)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: drivers/pci/hotplug/pciehp_core.c:634:
+ ^I^Iif (retval)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#473: FILE: drivers/pci/hotplug/pciehp_core.c:634:
+ 		if (retval)
+ 		   dbg("%s: Failure to register service\n", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#474: FILE: drivers/pci/hotplug/pciehp_core.c:635:
+ ^I^I   dbg("%s: Failure to register service\n", __FUNCTION__);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#474: FILE: drivers/pci/hotplug/pciehp_core.c:635:
+ ^I^I   dbg("%s: Failure to register service\n", __FUNCTION__);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: drivers/pci/hotplug/pciehp_core.c:635:
+ ^I^I   dbg("%s: Failure to register service\n", __FUNCTION__);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#474: FILE: drivers/pci/hotplug/pciehp_core.c:635:
+ 		   dbg("%s: Failure to register service\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#514: FILE: drivers/pci/hotplug/pciehp_hpc.c:1281:
+^I$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#562: FILE: drivers/pci/pcie/Kconfig:4:
+config PCIEPORTBUS
+	bool "PCI Express support"
+	depends on PCI_GOMMCONFIG || PCI_GOANY
+	default n
+
+	---help---
+	This automatically enables PCI Express Port Bus support. Users can
+	choose Native Hot-Plug support, Advanced Error Reporting support,
+	Power Management Event support and Virtual Channel support to run
+	on PCI Express Ports (Root or Switch).
+
+#
+# Include service Kconfig here
+#

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#588: FILE: drivers/pci/pcie/Kconfig:30:
+config HOTPLUG_PCI_PCIE_POLL_EVENT_MODE
+	bool "Use polling mechanism for hot-plug events (for testing purpose)"
+	depends on HOTPLUG_PCI_PCIE
+	help
+	  Say Y here if you want to use the polling mechanism for hot-plug 
+	  events for early platform testing.
+	   
+	  When in doubt, say N.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#592: FILE: drivers/pci/pcie/Kconfig:34:
+^I  Say Y here if you want to use the polling mechanism for hot-plug $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#594: FILE: drivers/pci/pcie/Kconfig:36:
+^I   $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#612: FILE: drivers/pci/pcie/portdrv.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'service' may be better as '(service)' to avoid precedence issues
#639: FILE: drivers/pci/pcie/portdrv.h:28:
+#define get_descriptor_id(type, service) (((type - 4) << 4) | service)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#643: FILE: drivers/pci/pcie/portdrv.h:32:
+extern int pcie_port_device_probe(struct pci_dev *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#644: FILE: drivers/pci/pcie/portdrv.h:33:
+extern int pcie_port_device_register(struct pci_dev *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#646: FILE: drivers/pci/pcie/portdrv.h:35:
+extern int pcie_port_device_suspend(struct pcie_device *dev, u32 state);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#647: FILE: drivers/pci/pcie/portdrv.h:36:
+extern int pcie_port_device_resume(struct pcie_device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#649: FILE: drivers/pci/pcie/portdrv.h:38:
+extern void pcie_port_device_remove(struct pcie_device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#650: FILE: drivers/pci/pcie/portdrv.h:39:
+extern void pcie_port_bus_register(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#651: FILE: drivers/pci/pcie/portdrv.h:40:
+extern void pcie_port_bus_unregister(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#658: FILE: drivers/pci/pcie/portdrv_bus.c:1:
+/*

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#674: FILE: drivers/pci/pcie/portdrv_bus.c:17:
+static int generic_probe (struct device *dev) {	return 0;}

ERROR:SPACING: space required after that ';' (ctx:VxV)
#674: FILE: drivers/pci/pcie/portdrv_bus.c:17:
+static int generic_probe (struct device *dev) {	return 0;}
                                                	        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#675: FILE: drivers/pci/pcie/portdrv_bus.c:18:
+static int generic_remove (struct device *dev) { return 0;}

ERROR:SPACING: space required after that ';' (ctx:VxV)
#675: FILE: drivers/pci/pcie/portdrv_bus.c:18:
+static int generic_remove (struct device *dev) { return 0;}
                                                          ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#681: FILE: drivers/pci/pcie/portdrv_bus.c:24:
+^I.name ^I^I= "pci_express",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#682: FILE: drivers/pci/pcie/portdrv_bus.c:25:
+^I.match ^I^I= pcie_port_bus_match,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#684: FILE: drivers/pci/pcie/portdrv_bus.c:27:
+^I.resume^I^I= pcie_port_bus_resume, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#699: FILE: drivers/pci/pcie/portdrv_bus.c:42:
+^Iif (^Idrv->bus != &pcie_port_bus_type || $

ERROR:SPACING: space prohibited after that open parenthesis '('
#699: FILE: drivers/pci/pcie/portdrv_bus.c:42:
+	if (	drv->bus != &pcie_port_bus_type || 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#700: FILE: drivers/pci/pcie/portdrv_bus.c:43:
+	if (	drv->bus != &pcie_port_bus_type || 
+		dev->bus != &pcie_port_bus_type	||

ERROR:TRAILING_WHITESPACE: trailing whitespace
#706: FILE: drivers/pci/pcie/portdrv_bus.c:49:
+^Iif (   (driver->id_table->vendor != PCI_ANY_ID && $

ERROR:SPACING: space prohibited after that open parenthesis '('
#706: FILE: drivers/pci/pcie/portdrv_bus.c:49:
+	if (   (driver->id_table->vendor != PCI_ANY_ID && 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#709: FILE: drivers/pci/pcie/portdrv_bus.c:52:
+^I^Idriver->id_table->device != pciedev->id.device) ||^I$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#711: FILE: drivers/pci/pcie/portdrv_bus.c:54:
+		driver->id_table->service_type != pciedev->id.service_type )

ERROR:CODE_INDENT: code indent should use tabs where possible
#726: FILE: drivers/pci/pcie/portdrv_bus.c:69:
+ ^Idriver = to_service_driver(dev->driver);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#726: FILE: drivers/pci/pcie/portdrv_bus.c:69:
+ ^Idriver = to_service_driver(dev->driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: drivers/pci/pcie/portdrv_bus.c:69:
+ ^Idriver = to_service_driver(dev->driver);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#741: FILE: drivers/pci/pcie/portdrv_bus.c:84:
+ ^Idriver = to_service_driver(dev->driver);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#741: FILE: drivers/pci/pcie/portdrv_bus.c:84:
+ ^Idriver = to_service_driver(dev->driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#741: FILE: drivers/pci/pcie/portdrv_bus.c:84:
+ ^Idriver = to_service_driver(dev->driver);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#750: FILE: drivers/pci/pcie/portdrv_core.c:1:
+/*

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#769: FILE: drivers/pci/pcie/portdrv_core.c:20:
+extern struct device_driver pcieport_generic_driver;

ERROR:CODE_INDENT: code indent should use tabs where possible
#780: FILE: drivers/pci/pcie/portdrv_core.c:31:
+ ^Idriver = to_service_driver(dev->driver);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#780: FILE: drivers/pci/pcie/portdrv_core.c:31:
+ ^Idriver = to_service_driver(dev->driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#780: FILE: drivers/pci/pcie/portdrv_core.c:31:
+ ^Idriver = to_service_driver(dev->driver);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#787: FILE: drivers/pci/pcie/portdrv_core.c:38:
+		printk(KERN_DEBUG "Load service driver %s on pcie device %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#788: FILE: drivers/pci/pcie/portdrv_core.c:39:
+		printk(KERN_DEBUG "Load service driver %s on pcie device %s\n",
+			driver->name, dev->bus_id);

ERROR:CODE_INDENT: code indent should use tabs where possible
#803: FILE: drivers/pci/pcie/portdrv_core.c:54:
+ ^Idriver = to_service_driver(dev->driver);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#803: FILE: drivers/pci/pcie/portdrv_core.c:54:
+ ^Idriver = to_service_driver(dev->driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#803: FILE: drivers/pci/pcie/portdrv_core.c:54:
+ ^Idriver = to_service_driver(dev->driver);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#804: FILE: drivers/pci/pcie/portdrv_core.c:55:
+^Iif (driver && driver->remove) { $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#805: FILE: drivers/pci/pcie/portdrv_core.c:56:
+		printk(KERN_DEBUG "Unload service driver %s on pcie device %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#806: FILE: drivers/pci/pcie/portdrv_core.c:57:
+		printk(KERN_DEBUG "Unload service driver %s on pcie device %s\n",
+			driver->name, dev->bus_id);

ERROR:CODE_INDENT: code indent should use tabs where possible
#824: FILE: drivers/pci/pcie/portdrv_core.c:75:
+ ^Idriver = to_service_driver(dev->driver);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#824: FILE: drivers/pci/pcie/portdrv_core.c:75:
+ ^Idriver = to_service_driver(dev->driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#824: FILE: drivers/pci/pcie/portdrv_core.c:75:
+ ^Idriver = to_service_driver(dev->driver);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#839: FILE: drivers/pci/pcie/portdrv_core.c:90:
+ ^Idriver = to_service_driver(dev->driver);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#839: FILE: drivers/pci/pcie/portdrv_core.c:90:
+ ^Idriver = to_service_driver(dev->driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#839: FILE: drivers/pci/pcie/portdrv_core.c:90:
+ ^Idriver = to_service_driver(dev->driver);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#848: FILE: drivers/pci/pcie/portdrv_core.c:99:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#849: FILE: drivers/pci/pcie/portdrv_core.c:100:
+ *^IBeing invoked automatically when device is being removed $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#855: FILE: drivers/pci/pcie/portdrv_core.c:106:
+^Ikfree(to_pcie_device(dev));^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#863: FILE: drivers/pci/pcie/portdrv_core.c:114:
+^Ipci_read_config_word(dev, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#864: FILE: drivers/pci/pcie/portdrv_core.c:115:
+^I^Ipci_find_capability(dev, PCI_CAP_ID_EXP) + $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#864: FILE: drivers/pci/pcie/portdrv_core.c:115:
+	pci_read_config_word(dev, 
+		pci_find_capability(dev, PCI_CAP_ID_EXP) + 

ERROR:SPACING: space required before the open parenthesis '('
#867: FILE: drivers/pci/pcie/portdrv_core.c:118:
+	switch(port_type) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#875: FILE: drivers/pci/pcie/portdrv_core.c:126:
+^I^Ibreak;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#879: FILE: drivers/pci/pcie/portdrv_core.c:130:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#887: FILE: drivers/pci/pcie/portdrv_core.c:138:
+^I^Iif (mask & (1 << i)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#891: FILE: drivers/pci/pcie/portdrv_core.c:142:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#896: FILE: drivers/pci/pcie/portdrv_core.c:147:
+^I/* Select MSI-X over MSI if supported */^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#899: FILE: drivers/pci/pcie/portdrv_core.c:150:
+^I^Istruct msix_entry msix_entries[PCIE_PORT_DEVICE_MAXSERVICES] = $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#900: FILE: drivers/pci/pcie/portdrv_core.c:151:
+		struct msix_entry msix_entries[PCIE_PORT_DEVICE_MAXSERVICES] = 
+			{{0, 0}, {0, 1}, {0, 2}, {0, 3}};

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#901: FILE: drivers/pci/pcie/portdrv_core.c:152:
+		printk("%s Found MSIX capability\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#901: FILE: drivers/pci/pcie/portdrv_core.c:152:
+		printk("%s Found MSIX capability\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#908: FILE: drivers/pci/pcie/portdrv_core.c:159:
+^I^I^I^Iif (mask & (1 << i)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#912: FILE: drivers/pci/pcie/portdrv_core.c:163:
+^I} $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#916: FILE: drivers/pci/pcie/portdrv_core.c:167:
+			printk("%s Found MSI capability\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#916: FILE: drivers/pci/pcie/portdrv_core.c:167:
+			printk("%s Found MSI capability\n", __FUNCTION__);

ERROR:SPACING: space required after that ';' (ctx:VxV)
#920: FILE: drivers/pci/pcie/portdrv_core.c:171:
+				for (i = 0;i < PCIE_PORT_DEVICE_MAXSERVICES;i++)
 				          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#920: FILE: drivers/pci/pcie/portdrv_core.c:171:
+				for (i = 0;i < PCIE_PORT_DEVICE_MAXSERVICES;i++)
 				                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#924: FILE: drivers/pci/pcie/portdrv_core.c:175:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#938: FILE: drivers/pci/pcie/portdrv_core.c:189:
+^I^Ipci_read_config_dword(dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#939: FILE: drivers/pci/pcie/portdrv_core.c:190:
+		pci_read_config_dword(dev, 
+			pos + PCIE_SLOT_CAPABILITIES_REG, &reg32);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#942: FILE: drivers/pci/pcie/portdrv_core.c:193:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#945: FILE: drivers/pci/pcie/portdrv_core.c:196:
+^Iif (pos) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#947: FILE: drivers/pci/pcie/portdrv_core.c:198:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#969: FILE: drivers/pci/pcie/portdrv_core.c:220:
+static void pcie_device_init(struct pcie_device *parent, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#970: FILE: drivers/pci/pcie/portdrv_core.c:221:
+^I^I^Istruct pcie_device *dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#970: FILE: drivers/pci/pcie/portdrv_core.c:221:
+static void pcie_device_init(struct pcie_device *parent, 
+			struct pcie_device *dev, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#990: FILE: drivers/pci/pcie/portdrv_core.c:241:
+^Idevice->driver_data = NULL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#992: FILE: drivers/pci/pcie/portdrv_core.c:243:
+^Isprintf(&device->bus_id[0], "%s.%02x", parent->device.bus_id, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#993: FILE: drivers/pci/pcie/portdrv_core.c:244:
+	sprintf(&device->bus_id[0], "%s.%02x", parent->device.bus_id, 
+			get_descriptor_id(port_type, service_type));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!parent"
#994: FILE: drivers/pci/pcie/portdrv_core.c:245:
+	device->parent = ((parent == NULL) ? NULL : &parent->device);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#997: FILE: drivers/pci/pcie/portdrv_core.c:248:
+static struct pcie_device* alloc_pcie_device(

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#997: FILE: drivers/pci/pcie/portdrv_core.c:248:
+static struct pcie_device* alloc_pcie_device(

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#998: FILE: drivers/pci/pcie/portdrv_core.c:249:
+^Istruct pcie_device *parent, struct pci_dev *bridge, $

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1002: FILE: drivers/pci/pcie/portdrv_core.c:253:
+	static int NR_PORTS = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*device)...) over kmalloc(sizeof(struct pcie_device)...)
#1004: FILE: drivers/pci/pcie/portdrv_core.c:255:
+	device = kmalloc(sizeof(struct pcie_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1016: FILE: drivers/pci/pcie/portdrv_core.c:267:
+^I^Isprintf(&device->device.bus_id[0], "port%d", NR_PORTS); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1017: FILE: drivers/pci/pcie/portdrv_core.c:268:
+^I} else { $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1020: FILE: drivers/pci/pcie/portdrv_core.c:271:
+	printk(KERN_DEBUG "Allocate Port Device[%s]\n", device->device.bus_id);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1029: FILE: drivers/pci/pcie/portdrv_core.c:280:
+	if (!(pos = pci_find_capability(dev, PCI_CAP_ID_EXP)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#1034: FILE: drivers/pci/pcie/portdrv_core.c:285:
+	if (	type == PCIE_RC_PORT || type == PCIE_SW_UPSTREAM_PORT ||

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1035: FILE: drivers/pci/pcie/portdrv_core.c:286:
+^I^Itype == PCIE_SW_DOWNSTREAM_PORT )  $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1035: FILE: drivers/pci/pcie/portdrv_core.c:286:
+	if (	type == PCIE_RC_PORT || type == PCIE_SW_UPSTREAM_PORT ||
+		type == PCIE_SW_DOWNSTREAM_PORT )  

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1035: FILE: drivers/pci/pcie/portdrv_core.c:286:
+		type == PCIE_SW_DOWNSTREAM_PORT )  

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1037: FILE: drivers/pci/pcie/portdrv_core.c:288:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1037: FILE: drivers/pci/pcie/portdrv_core.c:288:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1049: FILE: drivers/pci/pcie/portdrv_core.c:300:
+^Ipci_read_config_word(dev, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1050: FILE: drivers/pci/pcie/portdrv_core.c:301:
+^I^Ipci_find_capability(dev, PCI_CAP_ID_EXP) + $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1050: FILE: drivers/pci/pcie/portdrv_core.c:301:
+	pci_read_config_word(dev, 
+		pci_find_capability(dev, PCI_CAP_ID_EXP) + 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1060: FILE: drivers/pci/pcie/portdrv_core.c:311:
+^Iif (!parent) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1062: FILE: drivers/pci/pcie/portdrv_core.c:313:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1069: FILE: drivers/pci/pcie/portdrv_core.c:320:
+^Ipci_set_drvdata(dev, parent);^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1076: FILE: drivers/pci/pcie/portdrv_core.c:327:
+			child = alloc_pcie_device(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1077: FILE: drivers/pci/pcie/portdrv_core.c:328:
+^I^I^I^Iparent,^I^I/* parent */ $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1078: FILE: drivers/pci/pcie/portdrv_core.c:329:
+^I^I^I^Idev, ^I^I/* Root/Upstream/Downstream */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1079: FILE: drivers/pci/pcie/portdrv_core.c:330:
+^I^I^I^Itype,^I^I/* port type */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1083: FILE: drivers/pci/pcie/portdrv_core.c:334:
+^I^I^Iif (child) { $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1099: FILE: drivers/pci/pcie/portdrv_core.c:350:
+^Istruct list_head ^I^I*head;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1100: FILE: drivers/pci/pcie/portdrv_core.c:351:
+^Istruct device ^I^I^I*parent, *child;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1101: FILE: drivers/pci/pcie/portdrv_core.c:352:
+^Istruct device_driver ^I^I*driver;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1112: FILE: drivers/pci/pcie/portdrv_core.c:363:
+^I^Iif (service_driver->suspend)  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1115: FILE: drivers/pci/pcie/portdrv_core.c:366:
+^Ireturn 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1118: FILE: drivers/pci/pcie/portdrv_core.c:369:
+int pcie_port_device_resume(struct pcie_device *dev) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1119: FILE: drivers/pci/pcie/portdrv_core.c:370:
+{ $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1120: FILE: drivers/pci/pcie/portdrv_core.c:371:
+^Istruct list_head ^I^I*head;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1121: FILE: drivers/pci/pcie/portdrv_core.c:372:
+^Istruct device ^I^I^I*parent, *child;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1122: FILE: drivers/pci/pcie/portdrv_core.c:373:
+^Istruct device_driver ^I^I*driver;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1133: FILE: drivers/pci/pcie/portdrv_core.c:384:
+^I^Iif (service_driver->resume)  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1136: FILE: drivers/pci/pcie/portdrv_core.c:387:
+^Ireturn 0; $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1138: FILE: drivers/pci/pcie/portdrv_core.c:389:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1143: FILE: drivers/pci/pcie/portdrv_core.c:394:
+^Istruct list_head ^I^I*head;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1144: FILE: drivers/pci/pcie/portdrv_core.c:395:
+^Istruct device ^I^I^I*parent, *child;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1145: FILE: drivers/pci/pcie/portdrv_core.c:396:
+^Istruct device_driver ^I^I*driver;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1153: FILE: drivers/pci/pcie/portdrv_core.c:404:
+^I^Iif (driver) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1155: FILE: drivers/pci/pcie/portdrv_core.c:406:
+^I^I^Iif (service_driver->remove)  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1194: FILE: drivers/pci/pcie/portdrv_core.c:445:
+} $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1201: FILE: drivers/pci/pcie/portdrv_core.c:452:
+EXPORT_SYMBOL(pcie_port_service_register);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1202: FILE: drivers/pci/pcie/portdrv_core.c:453:
+EXPORT_SYMBOL(pcie_port_service_unregister);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1207: FILE: drivers/pci/pcie/portdrv_pci.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1242: FILE: drivers/pci/pcie/portdrv_pci.c:36:
+ * If detected invokes the pcie_port_device_register() method for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1246: FILE: drivers/pci/pcie/portdrv_pci.c:40:
+static int __devinit pcie_portdrv_probe (struct pci_dev *dev, $

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1246: FILE: drivers/pci/pcie/portdrv_pci.c:40:
+static int __devinit pcie_portdrv_probe (struct pci_dev *dev, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1246: FILE: drivers/pci/pcie/portdrv_pci.c:40:
+static int __devinit pcie_portdrv_probe (struct pci_dev *dev, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1247: FILE: drivers/pci/pcie/portdrv_pci.c:41:
+static int __devinit pcie_portdrv_probe (struct pci_dev *dev, 
+				const struct pci_device_id *id )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1247: FILE: drivers/pci/pcie/portdrv_pci.c:41:
+				const struct pci_device_id *id )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1255: FILE: drivers/pci/pcie/portdrv_pci.c:49:
+^Iif (pci_enable_device(dev) < 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1257: FILE: drivers/pci/pcie/portdrv_pci.c:51:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1259: FILE: drivers/pci/pcie/portdrv_pci.c:53:
+        if (!dev->irq) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1259: FILE: drivers/pci/pcie/portdrv_pci.c:53:
+        if (!dev->irq) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1260: FILE: drivers/pci/pcie/portdrv_pci.c:54:
+^I^Iprintk(KERN_WARNING $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1260: FILE: drivers/pci/pcie/portdrv_pci.c:54:
+		printk(KERN_WARNING 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1261: FILE: drivers/pci/pcie/portdrv_pci.c:55:
+^I^I"%s->Dev[%04x:%04x] has invalid IRQ. Check vendor BIOS\n", $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1262: FILE: drivers/pci/pcie/portdrv_pci.c:56:
+		__FUNCTION__, dev->device, dev->vendor);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1264: FILE: drivers/pci/pcie/portdrv_pci.c:58:
+^Iif (pcie_port_device_register(dev)) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1270: FILE: drivers/pci/pcie/portdrv_pci.c:64:
+static void pcie_portdrv_remove (struct pci_dev *dev)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1274: FILE: drivers/pci/pcie/portdrv_pci.c:68:
+      ^Ipciedev = (struct pcie_device *)pci_get_drvdata(dev);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1274: FILE: drivers/pci/pcie/portdrv_pci.c:68:
+      ^Ipciedev = (struct pcie_device *)pci_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1274: FILE: drivers/pci/pcie/portdrv_pci.c:68:
+      ^Ipciedev = (struct pcie_device *)pci_get_drvdata(dev);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1277: FILE: drivers/pci/pcie/portdrv_pci.c:71:
+^I^Ipci_set_drvdata(dev, NULL); $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1282: FILE: drivers/pci/pcie/portdrv_pci.c:76:
+static int pcie_portdrv_suspend (struct pci_dev *dev, u32 state)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1285: FILE: drivers/pci/pcie/portdrv_pci.c:79:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1286: FILE: drivers/pci/pcie/portdrv_pci.c:80:
+      ^Ipciedev = (struct pcie_device *)pci_get_drvdata(dev);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1286: FILE: drivers/pci/pcie/portdrv_pci.c:80:
+      ^Ipciedev = (struct pcie_device *)pci_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1286: FILE: drivers/pci/pcie/portdrv_pci.c:80:
+      ^Ipciedev = (struct pcie_device *)pci_get_drvdata(dev);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1287: FILE: drivers/pci/pcie/portdrv_pci.c:81:
+^Iif (pciedev) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1292: FILE: drivers/pci/pcie/portdrv_pci.c:86:
+static int pcie_portdrv_resume (struct pci_dev *dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1295: FILE: drivers/pci/pcie/portdrv_pci.c:89:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1296: FILE: drivers/pci/pcie/portdrv_pci.c:90:
+      ^Ipciedev = (struct pcie_device *)pci_get_drvdata(dev);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1296: FILE: drivers/pci/pcie/portdrv_pci.c:90:
+      ^Ipciedev = (struct pcie_device *)pci_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1296: FILE: drivers/pci/pcie/portdrv_pci.c:90:
+      ^Ipciedev = (struct pcie_device *)pci_get_drvdata(dev);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1297: FILE: drivers/pci/pcie/portdrv_pci.c:91:
+^Iif (pciedev) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1337: FILE: drivers/pci/pcie/portdrv_pci.c:131:
+static void __exit pcie_portdrv_exit(void) $

CHECK:SPACING: No space is necessary after a cast
#1337: FILE: drivers/pci/pcie/portdrv_pci.c:131:
+static void __exit pcie_portdrv_exit(void) 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1349: FILE: include/linux/pcieport_if.h:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1386: FILE: include/linux/pcieport_if.h:38:
+^Iint ^I^Iirq;^I    /* Service IRQ/MSI/MSI-X Vector */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1387: FILE: include/linux/pcieport_if.h:39:
+^Iint ^I^Iinterrupt_mode;^I/* [0:INTx | 1:MSI | 2:MSI-X] */^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1387: FILE: include/linux/pcieport_if.h:39:
+^Iint ^I^Iinterrupt_mode;^I/* [0:INTx | 1:MSI | 2:MSI-X] */^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1393: FILE: include/linux/pcieport_if.h:45:
+};
+#define to_pcie_device(d) container_of(d, struct pcie_device, device)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1400: FILE: include/linux/pcieport_if.h:52:
+static inline void* get_service_data(struct pcie_device *dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1407: FILE: include/linux/pcieport_if.h:59:
+^Iint (*probe) (struct pcie_device *dev, $

WARNING:SPACING: Unnecessary space before function pointer arguments
#1407: FILE: include/linux/pcieport_if.h:59:
+	int (*probe) (struct pcie_device *dev, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1408: FILE: include/linux/pcieport_if.h:60:
+	int (*probe) (struct pcie_device *dev, 
+		const struct pcie_port_service_id *id);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1409: FILE: include/linux/pcieport_if.h:61:
+	void (*remove) (struct pcie_device *dev);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1410: FILE: include/linux/pcieport_if.h:62:
+	int (*suspend) (struct pcie_device *dev, u32 state);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1411: FILE: include/linux/pcieport_if.h:63:
+	int (*resume) (struct pcie_device *dev);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1416: FILE: include/linux/pcieport_if.h:68:
+};
+#define to_service_driver(d) \

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1419: FILE: include/linux/pcieport_if.h:71:
+extern int pcie_port_service_register(struct pcie_port_service_driver *new);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1420: FILE: include/linux/pcieport_if.h:72:
+extern void pcie_port_service_unregister(struct pcie_port_service_driver *new);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214538.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 115 errors, 89 warnings, 33 checks, 1303 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214538.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
