WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#13: 
Subject: [PATCH 08/12] HPPFS: add sparse annotations

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#45: FILE: fs/hppfs/hppfs_kern.c:107:
+static struct dentry_operations hppfs_dentry_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#58: FILE: fs/hppfs/hppfs_kern.c:232:
+	ssize_t (*read)(struct file *, char __user *, size_t, loff_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char __user *' should also have an identifier name
#58: FILE: fs/hppfs/hppfs_kern.c:232:
+	ssize_t (*read)(struct file *, char __user *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#58: FILE: fs/hppfs/hppfs_kern.c:232:
+	ssize_t (*read)(struct file *, char __user *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#58: FILE: fs/hppfs/hppfs_kern.c:232:
+	ssize_t (*read)(struct file *, char __user *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#91: FILE: fs/hppfs/hppfs_kern.c:361:
+	ssize_t (*write)(struct file *, const char __user *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char __user *' should also have an identifier name
#91: FILE: fs/hppfs/hppfs_kern.c:361:
+	ssize_t (*write)(struct file *, const char __user *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#91: FILE: fs/hppfs/hppfs_kern.c:361:
+	ssize_t (*write)(struct file *, const char __user *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#91: FILE: fs/hppfs/hppfs_kern.c:361:
+	ssize_t (*write)(struct file *, const char __user *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#114: FILE: fs/hppfs/hppfs_kern.c:735:
+	int (*readlink)(struct dentry *, char __user *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char __user *' should also have an identifier name
#114: FILE: fs/hppfs/hppfs_kern.c:735:
+	int (*readlink)(struct dentry *, char __user *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#114: FILE: fs/hppfs/hppfs_kern.c:735:
+	int (*readlink)(struct dentry *, char __user *, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000150169.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 13 warnings, 0 checks, 71 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000150169.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
