WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#15: 
Subject: [PATCH] fs - fix sparse errors

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#143: FILE: fs/fs.h:1:
+/* linux/fs/fs.h

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#143: FILE: fs/fs.h:1:
+/* linux/fs/fs.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: fs/fs.h:8:
+ * Licensed under GPLv2 $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#151: FILE: fs/fs.h:9:
+ * Licensed under GPLv2 
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#153: FILE: fs/fs.h:11:
+extern void get_filesystem(struct file_system_type *fs);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#154: FILE: fs/fs.h:12:
+extern void put_filesystem(struct file_system_type *fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#158: FILE: fs/fs.h:16:
+extern int copy_mount_options (const void __user *, unsigned long *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#158: FILE: fs/fs.h:16:
+extern int copy_mount_options (const void __user *, unsigned long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void __user *' should also have an identifier name
#158: FILE: fs/fs.h:16:
+extern int copy_mount_options (const void __user *, unsigned long *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long *' should also have an identifier name
#158: FILE: fs/fs.h:16:
+extern int copy_mount_options (const void __user *, unsigned long *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#260: FILE: include/linux/proc_fs.h:114:
+extern int get_locks_status (char *, char **, off_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#260: FILE: include/linux/proc_fs.h:114:
+extern int get_locks_status (char *, char **, off_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#260: FILE: include/linux/proc_fs.h:114:
+extern int get_locks_status (char *, char **, off_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#260: FILE: include/linux/proc_fs.h:114:
+extern int get_locks_status (char *, char **, off_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'off_t' should also have an identifier name
#260: FILE: include/linux/proc_fs.h:114:
+extern int get_locks_status (char *, char **, off_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#260: FILE: include/linux/proc_fs.h:114:
+extern int get_locks_status (char *, char **, off_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#261: FILE: include/linux/proc_fs.h:115:
+extern int get_filesystem_list(char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#261: FILE: include/linux/proc_fs.h:115:
+extern int get_filesystem_list(char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#262: FILE: include/linux/proc_fs.h:116:
+extern int get_chrdev_list(char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#262: FILE: include/linux/proc_fs.h:116:
+extern int get_chrdev_list(char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#263: FILE: include/linux/proc_fs.h:117:
+extern int get_hardware_list(char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#263: FILE: include/linux/proc_fs.h:117:
+extern int get_hardware_list(char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#264: FILE: include/linux/proc_fs.h:118:
+extern int get_stram_list(char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#264: FILE: include/linux/proc_fs.h:118:
+extern int get_stram_list(char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#265: FILE: include/linux/proc_fs.h:119:
+extern int get_exec_domain_list(char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#265: FILE: include/linux/proc_fs.h:119:
+extern int get_exec_domain_list(char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#266: FILE: include/linux/proc_fs.h:120:
+extern int get_dma_list(char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#266: FILE: include/linux/proc_fs.h:120:
+extern int get_dma_list(char *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000143641.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 18 warnings, 10 checks, 158 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000143641.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
