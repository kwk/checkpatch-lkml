WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#64: 
diff -urN -X dontdiff linux-2.5.3-pre5/drivers/scsi/Config.help linux-2.5.3-pre5-repluns/drivers/scsi/Config.help

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#111: FILE: drivers/scsi/scsi_scan.c:50:
+		unsigned int lun, int scsi_level, Scsi_Device ** SDpnt2,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Device>
#111: FILE: drivers/scsi/scsi_scan.c:50:
+		unsigned int lun, int scsi_level, Scsi_Device ** SDpnt2,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <SDpnt2>
#111: FILE: drivers/scsi/scsi_scan.c:50:
+		unsigned int lun, int scsi_level, Scsi_Device ** SDpnt2,

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#112: FILE: drivers/scsi/scsi_scan.c:51:
+		struct Scsi_Host *shpnt, char *scsi_result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: drivers/scsi/scsi_scan.c:53:
+static void scan_scsis_target(unsigned int channel, unsigned int dev,
+		Scsi_Device ** SDpnt2, struct Scsi_Host *shpnt,

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#114: FILE: drivers/scsi/scsi_scan.c:53:
+		Scsi_Device ** SDpnt2, struct Scsi_Host *shpnt,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: drivers/scsi/scsi_scan.c:189:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'suppored' may be misspelled - perhaps 'supported'?
#127: FILE: drivers/scsi/scsi_scan.c:193:
+ * in practice, the maximum number of LUNs suppored by any device
                                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#158: FILE: drivers/scsi/scsi_scan.c:235:
+		return 1;
+	} else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#159: FILE: drivers/scsi/scsi_scan.c:236:
+		printk("scsi_report_luns_setup : usage max_scsi_report_luns=n "

WARNING:SPLIT_STRING: quoted string split across lines
#160: FILE: drivers/scsi/scsi_scan.c:237:
+		printk("scsi_report_luns_setup : usage max_scsi_report_luns=n "
+		       "(n should be between 1 and 16384)\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#165: FILE: drivers/scsi/scsi_scan.c:242:
+__setup("max_scsi_report_luns=", max_scsi_report_luns_setup);

CHECK:CAMELCASE: Avoid CamelCase: <SDpnt>
#176: FILE: drivers/scsi/scsi_scan.c:288:
+static int get_device_flags(Scsi_Device *SDpnt)

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: drivers/scsi/scsi_scan.c:410:
+^I^I^I       ^I  scsi_result);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#225: FILE: drivers/scsi/scsi_scan.c:410:
+^I^I^I       ^I  scsi_result);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: drivers/scsi/scsi_scan.c:410:
+		scan_scsis_single(channel, dev, lun, lun0_sl, &SDpnt, shpnt,
+			       	  scsi_result);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#260: FILE: drivers/scsi/scsi_scan.c:456:
+^I^I^I^I^I^I          &SDpnt, shpnt, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: drivers/scsi/scsi_scan.c:456:
+^I^I^I^I^I^I          &SDpnt, shpnt, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: drivers/scsi/scsi_scan.c:456:
+					scan_scsis_target(channel, order_dev,
+						          &SDpnt, shpnt, 

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#279: FILE: drivers/scsi/scsi_scan.c:511:
+ * ^I^Iconfigure it into the system.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#282: FILE: drivers/scsi/scsi_scan.c:514:
+ * ^I^Idev        - target dev (target id)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#283: FILE: drivers/scsi/scsi_scan.c:515:
+ * ^I^Ilun        - LUN$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#284: FILE: drivers/scsi/scsi_scan.c:516:
+ * ^I^Iscsi_level - SCSI 1, 2 or 3$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#285: FILE: drivers/scsi/scsi_scan.c:517:
+ * ^I^ISDpnt2     - pointer to pointer of a preallocated Scsi_Device$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#286: FILE: drivers/scsi/scsi_scan.c:518:
+ * ^I^Ishpnt      - host device to use$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#287: FILE: drivers/scsi/scsi_scan.c:519:
+ * ^I^Iscsi_result - preallocated buffer for the SCSI command result$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#292: FILE: drivers/scsi/scsi_scan.c:524:
+ * ^I^Idevice, this includes allocation failures preventing IO from$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#293: FILE: drivers/scsi/scsi_scan.c:525:
+ * ^I^Ibeing sent, or any general failures.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#299: FILE: drivers/scsi/scsi_scan.c:531:
+ *   ^I^ISCSI_SCAN_DEVICE_ADDED - device responded, and added to list;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#300: FILE: drivers/scsi/scsi_scan.c:532:
+ *   ^I^ISDpnt2 filled, and pointed to new allocated Scsi_Device.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#303: FILE: drivers/scsi/scsi_scan.c:535:
+ * ^I^Iallocation into scan_scsis_target.$

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#310: FILE: drivers/scsi/scsi_scan.c:538:
+		unsigned int lun, int scsi_level, Scsi_Device ** SDpnt2,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: drivers/scsi/scsi_scan.c:582:
+	SCSI_LOG_SCAN_BUS(3,
+		printk("scsi scan: INQUIRY to host %d channel %d "

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#331: FILE: drivers/scsi/scsi_scan.c:582:
+		printk("scsi scan: INQUIRY to host %d channel %d "

WARNING:SPLIT_STRING: quoted string split across lines
#332: FILE: drivers/scsi/scsi_scan.c:583:
+		printk("scsi scan: INQUIRY to host %d channel %d "
+		"id %d lun %d\n", shpnt->host_no, channel, dev, lun)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lun > 0'
#340: FILE: drivers/scsi/scsi_scan.c:590:
+	if ((lun > 0) && (scsi_level <= SCSI_2))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'scsi_level <= SCSI_2'
#340: FILE: drivers/scsi/scsi_scan.c:590:
+	if ((lun > 0) && (scsi_level <= SCSI_2))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#373: FILE: drivers/scsi/scsi_scan.c:639:
+	bflags = get_device_flags (SDpnt);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: drivers/scsi/scsi_scan.c:648:
+  ^I^Iscsi_release_request(SRpnt);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#391: FILE: drivers/scsi/scsi_scan.c:648:
+  ^I^Iscsi_release_request(SRpnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: drivers/scsi/scsi_scan.c:648:
+  ^I^Iscsi_release_request(SRpnt);$

CHECK:CAMELCASE: Avoid CamelCase: <SRpnt>
#391: FILE: drivers/scsi/scsi_scan.c:648:
+  		scsi_release_request(SRpnt);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#454: FILE: drivers/scsi/scsi_scan.c:849:
+ * ^I^Ichannel    - the host's channel$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#455: FILE: drivers/scsi/scsi_scan.c:850:
+ * ^I^Idev        - target dev (target id)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#456: FILE: drivers/scsi/scsi_scan.c:851:
+ * ^I^ISDpnt2     - pointer to pointer of a preallocated Scsi_Device$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#457: FILE: drivers/scsi/scsi_scan.c:852:
+ * ^I^Ishpnt      - host device to use$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#458: FILE: drivers/scsi/scsi_scan.c:853:
+ * ^I^Iscsi_result - preallocated buffer for the SCSI command result$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#463: FILE: drivers/scsi/scsi_scan.c:858:
+ * ^I^Ireturn 0, else return 1.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#465: FILE: drivers/scsi/scsi_scan.c:860:
+ * Notes:       $

CHECK:CAMELCASE: Avoid CamelCase: <SDlun0_pnt>
#467: FILE: drivers/scsi/scsi_scan.c:862:
+static inline int scsi_report_lun_scan(Scsi_Device *SDlun0_pnt, unsigned

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#471: FILE: drivers/scsi/scsi_scan.c:866:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <ScsiLun>
#480: FILE: drivers/scsi/scsi_scan.c:875:
+	ScsiLun *fcp_cur_lun_pnt, *lun_data_pnt;

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Request>
#481: FILE: drivers/scsi/scsi_scan.c:876:
+	Scsi_Request *SRpnt;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#489: FILE: drivers/scsi/scsi_scan.c:884:
+	if (SDlun0_pnt->scsi_level < SCSI_3) {
+		return 1;
+	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#507: FILE: drivers/scsi/scsi_scan.c:902:
+	sprintf (devname, "host %d channel %d id %d",

CHECK:SPACING: No space is necessary after a cast
#521: FILE: drivers/scsi/scsi_scan.c:916:
+	lun_data_pnt = (ScsiLun *) kmalloc(length,

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#521: FILE: drivers/scsi/scsi_scan.c:916:
+	lun_data_pnt = (ScsiLun *) kmalloc(length,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lun_data_pnt"
#523: FILE: drivers/scsi/scsi_scan.c:918:
+	if (lun_data_pnt == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#524: FILE: drivers/scsi/scsi_scan.c:919:
+		printk("scsi: scsi_report_lun_scan: Cannot malloc\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#524: FILE: drivers/scsi/scsi_scan.c:919:
+	if (lun_data_pnt == NULL) {
+		printk("scsi: scsi_report_lun_scan: Cannot malloc\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#525: FILE: drivers/scsi/scsi_scan.c:920:
+		if (got_command_blocks) {
+			scsi_release_commandblocks(SDlun0_pnt);
+		}

CHECK:SPACING: No space is necessary after a cast
#552: FILE: drivers/scsi/scsi_scan.c:947:
+		scsi_cmd[6] = (unsigned char) (length >> 24) & 0xff;

CHECK:SPACING: No space is necessary after a cast
#553: FILE: drivers/scsi/scsi_scan.c:948:
+		scsi_cmd[7] = (unsigned char) (length >> 16) & 0xff;

CHECK:SPACING: No space is necessary after a cast
#554: FILE: drivers/scsi/scsi_scan.c:949:
+		scsi_cmd[8] = (unsigned char) (length >> 8) & 0xff;

CHECK:SPACING: No space is necessary after a cast
#555: FILE: drivers/scsi/scsi_scan.c:950:
+		scsi_cmd[9] = (unsigned char) length & 0xff;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#564: FILE: drivers/scsi/scsi_scan.c:959:
+		SCSI_LOG_SCAN_BUS(3,
+			printk("scsi: Sending REPORT LUNS to %s (try %d)\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#564: FILE: drivers/scsi/scsi_scan.c:959:
+			printk("scsi: Sending REPORT LUNS to %s (try %d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#565: FILE: drivers/scsi/scsi_scan.c:960:
+			printk("scsi: Sending REPORT LUNS to %s (try %d)\n",
+				devname, retries));

CHECK:SPACING: No space is necessary after a cast
#567: FILE: drivers/scsi/scsi_scan.c:962:
+		scsi_wait_req (SRpnt, (void *) scsi_cmd,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#567: FILE: drivers/scsi/scsi_scan.c:962:
+		scsi_wait_req (SRpnt, (void *) scsi_cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#568: FILE: drivers/scsi/scsi_scan.c:963:
+		scsi_wait_req (SRpnt, (void *) scsi_cmd,
+			  (void *) lun_data_pnt,

CHECK:SPACING: No space is necessary after a cast
#568: FILE: drivers/scsi/scsi_scan.c:963:
+			  (void *) lun_data_pnt,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#569: FILE: drivers/scsi/scsi_scan.c:964:
+			  length, SCSI_TIMEOUT+4*HZ, 3);
 			                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#569: FILE: drivers/scsi/scsi_scan.c:964:
+			  length, SCSI_TIMEOUT+4*HZ, 3);
 			                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#572: FILE: drivers/scsi/scsi_scan.c:967:
+		SCSI_LOG_SCAN_BUS(3,
+			printk("scsi: REPORT LUNS %s (try %d) result 0x%x\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#572: FILE: drivers/scsi/scsi_scan.c:967:
+			printk("scsi: REPORT LUNS %s (try %d) result 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#573: FILE: drivers/scsi/scsi_scan.c:968:
+			printk("scsi: REPORT LUNS %s (try %d) result 0x%x\n",
+			SRpnt->sr_result ? "failed" : "successful", retries,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#577: FILE: drivers/scsi/scsi_scan.c:972:
+		if (SRpnt->sr_result == 0
+		    || SRpnt->sr_sense_buffer[2] != UNIT_ATTENTION) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#583: FILE: drivers/scsi/scsi_scan.c:978:
+	if (got_command_blocks) {
+		scsi_release_commandblocks(SDlun0_pnt);
+	}

CHECK:SPACING: No space is necessary after a cast
#588: FILE: drivers/scsi/scsi_scan.c:983:
+		kfree((char *) lun_data_pnt);

CHECK:SPACING: No space is necessary after a cast
#595: FILE: drivers/scsi/scsi_scan.c:990:
+	byte_pnt = (char*) lun_data_pnt->scsi_lun;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#595: FILE: drivers/scsi/scsi_scan.c:990:
+	byte_pnt = (char*) lun_data_pnt->scsi_lun;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#599: FILE: drivers/scsi/scsi_scan.c:994:
+		printk("scsi: On %s only %d (max_scsi_report_luns) of %d luns"

WARNING:SPLIT_STRING: quoted string split across lines
#600: FILE: drivers/scsi/scsi_scan.c:995:
+		printk("scsi: On %s only %d (max_scsi_report_luns) of %d luns"
+			" reported, try increasing max_scsi_report_luns.\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#633: FILE: drivers/scsi/scsi_scan.c:1028:
+		for (i = 0; i < sizeof(lun)/sizeof(u16); i++) {
 		                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#641: FILE: drivers/scsi/scsi_scan.c:1036:
+		for (; i < sizeof(ScsiLun)/sizeof(u16); i++) {
 		                          ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#642: FILE: drivers/scsi/scsi_scan.c:1037:
+			if (fcp_cur_lun_pnt->scsi_lun[i] != 0) {
+				break;
+			}

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#646: FILE: drivers/scsi/scsi_scan.c:1041:
+		if (i != sizeof(ScsiLun)/sizeof(u16)) {
 		                        ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#652: FILE: drivers/scsi/scsi_scan.c:1047:
+			printk("scsi: %s lun 0x", devname);

CHECK:SPACING: No space is necessary after a cast
#653: FILE: drivers/scsi/scsi_scan.c:1048:
+			byte_pnt = (char*) fcp_cur_lun_pnt->scsi_lun;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#653: FILE: drivers/scsi/scsi_scan.c:1048:
+			byte_pnt = (char*) fcp_cur_lun_pnt->scsi_lun;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#654: FILE: drivers/scsi/scsi_scan.c:1049:
+			for (i = 0; i < 8; i++) {
+				printk("%02x", byte_pnt[i]);
+			}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#655: FILE: drivers/scsi/scsi_scan.c:1050:
+				printk("%02x", byte_pnt[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#657: FILE: drivers/scsi/scsi_scan.c:1052:
+			printk("has a LUN larger than that supported by"

WARNING:SPLIT_STRING: quoted string split across lines
#658: FILE: drivers/scsi/scsi_scan.c:1053:
+			printk("has a LUN larger than that supported by"
+				" the kernel\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#664: FILE: drivers/scsi/scsi_scan.c:1059:
+			printk("scsi: %s lun %d has a LUN larger than allowed"

WARNING:SPLIT_STRING: quoted string split across lines
#665: FILE: drivers/scsi/scsi_scan.c:1060:
+			printk("scsi: %s lun %d has a LUN larger than allowed"
+				" by the host adapter\n", devname, lun);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#673: FILE: drivers/scsi/scsi_scan.c:1068:
+			if (scan_scsis_single(channel, dev, lun,
+			    scsi_level, SDpnt2, shpnt, scsi_result)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#678: FILE: drivers/scsi/scsi_scan.c:1073:
+				printk("scsi: no response from %s lun %d while"

ERROR:TRAILING_WHITESPACE: trailing whitespace
#679: FILE: drivers/scsi/scsi_scan.c:1074:
+^I^I^I^I       " scanning, scan aborted\n", devname, $

WARNING:SPLIT_STRING: quoted string split across lines
#679: FILE: drivers/scsi/scsi_scan.c:1074:
+				printk("scsi: no response from %s lun %d while"
+				       " scanning, scan aborted\n", devname, 

CHECK:SPACING: No space is necessary after a cast
#686: FILE: drivers/scsi/scsi_scan.c:1081:
+	kfree((char *) lun_data_pnt);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#693: FILE: drivers/scsi/scsi_scan.c:1088:
+
+}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#699: FILE: drivers/scsi/scsi_scan.c:1094:
+ * ^I^Ion the target dev.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#702: FILE: drivers/scsi/scsi_scan.c:1097:
+ * ^I^Idev        - target dev (target id)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#703: FILE: drivers/scsi/scsi_scan.c:1098:
+ * ^I^ISDpnt2     - pointer to pointer of a preallocated Scsi_Device$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#704: FILE: drivers/scsi/scsi_scan.c:1099:
+ * ^I^Ishpnt      - host device to use$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#705: FILE: drivers/scsi/scsi_scan.c:1100:
+ * ^I^Iscsi_result - preallocated buffer for the SCSI command result$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#712: FILE: drivers/scsi/scsi_scan.c:1107:
+ * ^I^Irelies on scan_scsis_single to setup SDlun0_pnt. $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#712: FILE: drivers/scsi/scsi_scan.c:1107:
+ * ^I^Irelies on scan_scsis_single to setup SDlun0_pnt. $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#714: FILE: drivers/scsi/scsi_scan.c:1109:
+ * ^I^IIt would be better if the Scsi_Device allocation and freeing$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#715: FILE: drivers/scsi/scsi_scan.c:1110:
+ * ^I^Iwas done here, rather than oddly embedded in scan_scsis_single$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#716: FILE: drivers/scsi/scsi_scan.c:1111:
+ * ^I^Iand scan_scsis.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#719: FILE: drivers/scsi/scsi_scan.c:1114:
+static void scan_scsis_target(unsigned int channel, unsigned int dev,
+		Scsi_Device **SDpnt2, struct Scsi_Host *shpnt,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#734: FILE: drivers/scsi/scsi_scan.c:1129:
+	sdlun0_res = scan_scsis_single(channel, dev, 0 /* LUN 0 */, SCSI_2,
+		SDpnt2, shpnt, scsi_result);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#735: FILE: drivers/scsi/scsi_scan.c:1130:
+	if (sdlun0_res == SCSI_SCAN_NO_RESPONSE) {
+		return;
+	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#751: FILE: drivers/scsi/scsi_scan.c:1146:
+	bflags = get_device_flags (SDlun0_pnt);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#768: FILE: drivers/scsi/scsi_scan.c:1160:
+	if (scsi_report_lun_scan(SDlun0_pnt, channel, dev, SDpnt2, shpnt,
+	    scsi_result) == 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#773: FILE: drivers/scsi/scsi_scan.c:1165:
+	SCSI_LOG_SCAN_BUS(3,
+		printk("scsi: Sequential scan of host %d channel %d id %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#773: FILE: drivers/scsi/scsi_scan.c:1165:
+		printk("scsi: Sequential scan of host %d channel %d id %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#774: FILE: drivers/scsi/scsi_scan.c:1166:
+		printk("scsi: Sequential scan of host %d channel %d id %d\n",
+		 SDlun0_pnt->host->host_no, SDlun0_pnt->channel,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'scsi_level < SCSI_1_CCS'
#796: FILE: drivers/scsi/scsi_scan.c:1185:
+	if ((scsi_level < SCSI_1_CCS) && ((bflags &
+	     (BLIST_FORCELUN | BLIST_SPARSELUN | BLIST_MAX5LUN)) == 0)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#861: FILE: drivers/scsi/scsi_scan.c:1224:
+		res = scan_scsis_single(channel, dev, lun,
+		     scsi_level, SDpnt2, shpnt, scsi_result);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#866: FILE: drivers/scsi/scsi_scan.c:1229:
+			printk("scsi: no response from device"

WARNING:SPLIT_STRING: quoted string split across lines
#867: FILE: drivers/scsi/scsi_scan.c:1230:
+			printk("scsi: no response from device"
+				" host%d/bus%d/target%d/lun%d"

WARNING:SPLIT_STRING: quoted string split across lines
#868: FILE: drivers/scsi/scsi_scan.c:1231:
+				" host%d/bus%d/target%d/lun%d"
+				" while scanning, scan aborted\n",

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#872: FILE: drivers/scsi/scsi_scan.c:1235:
+		} else if ((res == SCSI_SCAN_DEVICE_PRESENT)
+			    && !sparse_lun) {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#905: FILE: include/scsi/scsi.h:173:
+typedef struct scsi_lun {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000480854.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 67 warnings, 49 checks, 814 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000480854.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
