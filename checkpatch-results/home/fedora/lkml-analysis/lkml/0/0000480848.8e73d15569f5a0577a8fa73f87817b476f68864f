WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
> that are over a month old that I don't know whether they are valid or not,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#164: FILE: fs/xattr.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#165: FILE: fs/xattr.c:2:
+  File: fs/xattr.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#165: FILE: fs/xattr.c:2:
+/*
+  File: fs/xattr.c

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#178: FILE: fs/xattr.c:15:
+#include <asm/uaccess.h>

CHECK:SPACING: No space is necessary after a cast
#201: FILE: fs/xattr.c:38:
+		ptr = kmalloc((unsigned long) size, GFP_KERNEL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#203: FILE: fs/xattr.c:40:
+		ptr = vmalloc((unsigned long) size);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#230: FILE: fs/xattr.c:67:
+	if (flags & ~(XATTR_CREATE|XATTR_REPLACE))
 	                          ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#260: FILE: fs/xattr.c:97:
+	struct nameidata nd;
 	                 ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#263: FILE: fs/xattr.c:100:
+	error = user_path_walk(path, &nd);
 	                              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#266: FILE: fs/xattr.c:103:
+	error = setxattr(nd.dentry, name, value, size, flags);
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#267: FILE: fs/xattr.c:104:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#274: FILE: fs/xattr.c:111:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#277: FILE: fs/xattr.c:114:
+	error = user_path_walk_link(path, &nd);
 	                                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#280: FILE: fs/xattr.c:117:
+	error = setxattr(nd.dentry, name, value, size, flags);
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#281: FILE: fs/xattr.c:118:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#334: FILE: fs/xattr.c:171:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#337: FILE: fs/xattr.c:174:
+	error = user_path_walk(path, &nd);
 	                              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#340: FILE: fs/xattr.c:177:
+	error = getxattr(nd.dentry, name, value, size);
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#341: FILE: fs/xattr.c:178:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#348: FILE: fs/xattr.c:185:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#351: FILE: fs/xattr.c:188:
+	error = user_path_walk_link(path, &nd);
 	                                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#354: FILE: fs/xattr.c:191:
+	error = getxattr(nd.dentry, name, value, size);
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#355: FILE: fs/xattr.c:192:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#403: FILE: fs/xattr.c:240:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#406: FILE: fs/xattr.c:243:
+	error = user_path_walk(path, &nd);
 	                              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#409: FILE: fs/xattr.c:246:
+	error = listxattr(nd.dentry, list, size);
 	                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#410: FILE: fs/xattr.c:247:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#417: FILE: fs/xattr.c:254:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#420: FILE: fs/xattr.c:257:
+	error = user_path_walk_link(path, &nd);
 	                                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#423: FILE: fs/xattr.c:260:
+	error = listxattr(nd.dentry, list, size);
 	                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#424: FILE: fs/xattr.c:261:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#467: FILE: fs/xattr.c:304:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#470: FILE: fs/xattr.c:307:
+	error = user_path_walk(path, &nd);
 	                              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#473: FILE: fs/xattr.c:310:
+	error = removexattr(nd.dentry, name);
 	                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#474: FILE: fs/xattr.c:311:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#481: FILE: fs/xattr.c:318:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#484: FILE: fs/xattr.c:321:
+	error = user_path_walk_link(path, &nd);
 	                                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#487: FILE: fs/xattr.c:324:
+	error = removexattr(nd.dentry, name);
 	                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#488: FILE: fs/xattr.c:325:
+	path_release(&nd);
 	              ^^

WARNING:SPACING: Unnecessary space before function pointer arguments
#534: FILE: include/linux/fs.h:854:
+	int (*setxattr) (struct dentry *, char *, void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#534: FILE: include/linux/fs.h:854:
+	int (*setxattr) (struct dentry *, char *, void *, size_t, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#534: FILE: include/linux/fs.h:854:
+	int (*setxattr) (struct dentry *, char *, void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#534: FILE: include/linux/fs.h:854:
+	int (*setxattr) (struct dentry *, char *, void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#534: FILE: include/linux/fs.h:854:
+	int (*setxattr) (struct dentry *, char *, void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#534: FILE: include/linux/fs.h:854:
+	int (*setxattr) (struct dentry *, char *, void *, size_t, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#535: FILE: include/linux/fs.h:855:
+	int (*getxattr) (struct dentry *, char *, void *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#535: FILE: include/linux/fs.h:855:
+	int (*getxattr) (struct dentry *, char *, void *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#535: FILE: include/linux/fs.h:855:
+	int (*getxattr) (struct dentry *, char *, void *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#535: FILE: include/linux/fs.h:855:
+	int (*getxattr) (struct dentry *, char *, void *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#535: FILE: include/linux/fs.h:855:
+	int (*getxattr) (struct dentry *, char *, void *, size_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#536: FILE: include/linux/fs.h:856:
+	int (*listxattr) (struct dentry *, char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#536: FILE: include/linux/fs.h:856:
+	int (*listxattr) (struct dentry *, char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#536: FILE: include/linux/fs.h:856:
+	int (*listxattr) (struct dentry *, char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#536: FILE: include/linux/fs.h:856:
+	int (*listxattr) (struct dentry *, char *, size_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#537: FILE: include/linux/fs.h:857:
+	int (*removexattr) (struct dentry *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#537: FILE: include/linux/fs.h:857:
+	int (*removexattr) (struct dentry *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#537: FILE: include/linux/fs.h:857:
+	int (*removexattr) (struct dentry *, char *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#558: FILE: include/linux/xattr.h:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#559: FILE: include/linux/xattr.h:2:
+/*
+  File: linux/xattr.h

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000480848.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 57 warnings, 3 checks, 455 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000480848.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
