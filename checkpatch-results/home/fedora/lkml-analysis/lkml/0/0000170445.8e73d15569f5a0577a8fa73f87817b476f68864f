WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
Source: http://www.kernel.org/git/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=1946089a109251655c5438d92c539bd2930e71ea

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#62: 
  Signed-off-by: Justin M. Forbes <jmforbes@linuxtx.org>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#63: 
  Signed-off-by: Christoph Lameter <christoph@lameter.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#64: 
  Signed-off-by: Pravin Shelar <pravin@calsoftinc.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#65: 
  Signed-off-by: Shobhit Dayal <shobhit@calsoftinc.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#66: 
  Signed-off-by: Andrew Morton <akpm@osdl.org>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#67: 
  Signed-off-by: Linus Torvalds <torvalds@osdl.org>

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#84: FILE: drivers/block/as-iosched.c:1881:
+	ad->hash = kmalloc_node(sizeof(struct list_head)*AS_HASH_ENTRIES,
 	                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*ad->hash)...) over kmalloc_node(sizeof(struct list_head)...)
#84: FILE: drivers/block/as-iosched.c:1881:
+	ad->hash = kmalloc_node(sizeof(struct list_head)*AS_HASH_ENTRIES,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: drivers/block/as-iosched.c:1889:
+	ad->arq_pool = mempool_create_node(BLKDEV_MIN_RQ, mempool_alloc_slab,
+				mempool_free_slab, arq_pool, q->node);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#110: FILE: drivers/block/deadline-iosched.c:719:
+	dd->hash = kmalloc_node(sizeof(struct list_head)*DL_HASH_ENTRIES,
 	                                                ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*dd->hash)...) over kmalloc_node(sizeof(struct list_head)...)
#110: FILE: drivers/block/deadline-iosched.c:719:
+	dd->hash = kmalloc_node(sizeof(struct list_head)*DL_HASH_ENTRIES,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: drivers/block/deadline-iosched.c:727:
+	dd->drq_pool = mempool_create_node(BLKDEV_MIN_RQ, mempool_alloc_slab,
+					mempool_free_slab, drq_pool, q->node);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*disk)...) over kmalloc_node(sizeof(struct gendisk)...)
#140: FILE: drivers/block/genhd.c:594:
+	disk = kmalloc_node(sizeof(struct gendisk), GFP_KERNEL, node_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: drivers/block/ll_rw_blk.c:1650:
+	rl->rq_pool = mempool_create_node(BLKDEV_MIN_RQ, mempool_alloc_slab,
+				mempool_free_slab, request_cachep, q->node);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: drivers/ide/ide-disk.c:1219:
+	g = alloc_disk_node(1 << PARTN_BITS,
+			pcibus_to_node(drive->hwif->pci_dev->bus));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: drivers/ide/ide-probe.c:1100:
+		hwgroup = kmalloc_node(sizeof(ide_hwgroup_t), GFP_KERNEL,
+			pcibus_to_node(hwif->drives[0].hwif->pci_dev->bus));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#292: FILE: include/linux/blkdev.h:619:
+extern request_queue_t *blk_init_queue_node(request_fn_proc *rfn,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: include/linux/blkdev.h:620:
+extern request_queue_t *blk_init_queue_node(request_fn_proc *rfn,
+					spinlock_t *lock, int node_id);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#303: FILE: include/linux/blkdev.h:653:
+request_queue_t *blk_alloc_queue_node(int,int);
                                          ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#303: FILE: include/linux/blkdev.h:653:
+request_queue_t *blk_alloc_queue_node(int,int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#303: FILE: include/linux/blkdev.h:653:
+request_queue_t *blk_alloc_queue_node(int,int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#313: FILE: include/linux/genhd.h:406:
+extern struct gendisk *alloc_disk_node(int minors, int node_id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#338: FILE: include/linux/mempool.h:24:
+extern mempool_t *mempool_create(int min_nr, mempool_alloc_t *alloc_fn,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#339: FILE: include/linux/mempool.h:25:
+extern mempool_t *mempool_create(int min_nr, mempool_alloc_t *alloc_fn,
+			mempool_free_t *free_fn, void *pool_data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#340: FILE: include/linux/mempool.h:26:
+extern mempool_t *mempool_create_node(int min_nr, mempool_alloc_t *alloc_fn,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#341: FILE: include/linux/mempool.h:27:
+extern mempool_t *mempool_create_node(int min_nr, mempool_alloc_t *alloc_fn,
+			mempool_free_t *free_fn, void *pool_data, int nid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#343: FILE: include/linux/mempool.h:29:
+extern int mempool_resize(mempool_t *pool, int new_min_nr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: include/linux/mempool.h:30:
+extern int mempool_resize(mempool_t *pool, int new_min_nr,
+			unsigned int __nocast gfp_mask);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: mm/mempool.c:55:
+mempool_t *mempool_create(int min_nr, mempool_alloc_t *alloc_fn,
 				mempool_free_t *free_fn, void *pool_data)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#359: FILE: mm/mempool.c:57:
+	return  mempool_create_node(min_nr,alloc_fn,free_fn, pool_data,-1);
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#359: FILE: mm/mempool.c:57:
+	return  mempool_create_node(min_nr,alloc_fn,free_fn, pool_data,-1);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#359: FILE: mm/mempool.c:57:
+	return  mempool_create_node(min_nr,alloc_fn,free_fn, pool_data,-1);
 	                                                              ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#359: FILE: mm/mempool.c:57:
+	return  mempool_create_node(min_nr,alloc_fn,free_fn, pool_data,-1);
 	                                                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#365: FILE: mm/mempool.c:62:
+mempool_t *mempool_create_node(int min_nr, mempool_alloc_t *alloc_fn,
+			mempool_free_t *free_fn, void *pool_data, int node_id)

WARNING:LINE_SPACING: Missing a blank line after declarations
#368: FILE: mm/mempool.c:65:
+	mempool_t *pool;
+	pool = kmalloc_node(sizeof(*pool), GFP_KERNEL, node_id);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#374: FILE: mm/mempool.c:70:
+	pool->elements = kmalloc_node(min_nr * sizeof(void *),
+					GFP_KERNEL, node_id);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170445.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 10 warnings, 22 checks, 274 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170445.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
