WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
--- linux-2.6.18.orig/arch/powerpc/configs/cell_defconfig	2006-11-15 10:44:42.880315592 -0600

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#75: FILE: arch/powerpc/oprofile/common.c:142:
 	switch (cur_cpu_spec->oprofile_type) {
[...]
+		case PPC_OPROFILE_CELL:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#102: FILE: arch/powerpc/oprofile/op_model_cell.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#131: FILE: arch/powerpc/oprofile/op_model_cell.c:30:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#133: FILE: arch/powerpc/oprofile/op_model_cell.c:32:
+#include <asm/processor.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#197: FILE: arch/powerpc/oprofile/op_model_cell.c:96:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#198: FILE: arch/powerpc/oprofile/op_model_cell.c:97:
+#define GET_SUB_UNIT(x) ((x & 0x0000f000) >> 12)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#199: FILE: arch/powerpc/oprofile/op_model_cell.c:98:
+#define GET_BUS_WORD(x) ((x & 0x000000f0) >> 4)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#200: FILE: arch/powerpc/oprofile/op_model_cell.c:99:
+#define GET_BUS_TYPE(x) ((x & 0x00000300) >> 8)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#201: FILE: arch/powerpc/oprofile/op_model_cell.c:100:
+#define GET_POLARITY(x) ((x & 0x00000002) >> 1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#202: FILE: arch/powerpc/oprofile/op_model_cell.c:101:
+#define GET_COUNT_CYCLES(x) (x & 0x00000001)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#203: FILE: arch/powerpc/oprofile/op_model_cell.c:102:
+#define GET_INPUT_CONTROL(x) ((x & 0x00000004) >> 2)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#205: FILE: arch/powerpc/oprofile/op_model_cell.c:104:
+
+

WARNING:TYPO_SPELLING: 'Interpetation' may be misspelled - perhaps 'Interpretation'?
#210: FILE: arch/powerpc/oprofile/op_model_cell.c:109:
+/* Interpetation of hdw_thread:
    ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: arch/powerpc/oprofile/op_model_cell.c:120:
+ * is available. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#256: FILE: arch/powerpc/oprofile/op_model_cell.c:155:
+	 *  However, the FW still expects atleast one legal signal routing
 	                                  ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#275: FILE: arch/powerpc/oprofile/op_model_cell.c:174:
+		printk(KERN_WARNING "%s: rtas returned: %d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#276: FILE: arch/powerpc/oprofile/op_model_cell.c:175:
+		       __FUNCTION__, ret);

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: arch/powerpc/oprofile/op_model_cell.c:182:
+        struct pm_signal pm_signal_local[NR_PHYS_CTRS];$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: arch/powerpc/oprofile/op_model_cell.c:182:
+        struct pm_signal pm_signal_local[NR_PHYS_CTRS];$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#299: FILE: arch/powerpc/oprofile/op_model_cell.c:198:
+		printk(KERN_WARNING "%s: rtas returned: %d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#300: FILE: arch/powerpc/oprofile/op_model_cell.c:199:
+		       __FUNCTION__, ret);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pm_signal[ctr]
#316: FILE: arch/powerpc/oprofile/op_model_cell.c:215:
+		p = &(pm_signal[ctr]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pm_signal[ctr]
#333: FILE: arch/powerpc/oprofile/op_model_cell.c:232:
+	p = &(pm_signal[ctr]);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus_type == 0'
#353: FILE: arch/powerpc/oprofile/op_model_cell.c:252:
+		if ((bus_type == 0) && p->signal_group >= 60)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus_type == 1'
#355: FILE: arch/powerpc/oprofile/op_model_cell.c:254:
+		if ((bus_type == 1) && p->signal_group >= 50)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#383: FILE: arch/powerpc/oprofile/op_model_cell.c:282:
+static void write_pm_cntrl(int cpu, struct pm_cntrl * pm_cntrl)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#387: FILE: arch/powerpc/oprofile/op_model_cell.c:286:
+	u32 val = 0;
+	if (pm_cntrl->enable == 1)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#425: FILE: arch/powerpc/oprofile/op_model_cell.c:324:
+static inline void enable_ctr(u32 cpu, u32 ctr, u32 * pm07_cntrl)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#427: FILE: arch/powerpc/oprofile/op_model_cell.c:326:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#445: FILE: arch/powerpc/oprofile/op_model_cell.c:344:
+^I/* Make sure that the interrupt_hander and $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#447: FILE: arch/powerpc/oprofile/op_model_cell.c:346:
+	 * the counters on the same node.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#451: FILE: arch/powerpc/oprofile/op_model_cell.c:350:
+        /* cntr offset for the cntrs that were running */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#452: FILE: arch/powerpc/oprofile/op_model_cell.c:351:
+^Icntr_offset_prev = num_counters *  hdw_thread;^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#454: FILE: arch/powerpc/oprofile/op_model_cell.c:353:
+        /* switch the cpu handling the interrupts */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#459: FILE: arch/powerpc/oprofile/op_model_cell.c:358:
+^I/* The following is done only once per each node, but       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: arch/powerpc/oprofile/op_model_cell.c:362:
+ ^I^Iif (cbe_get_hw_thread_id(cpu))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#463: FILE: arch/powerpc/oprofile/op_model_cell.c:362:
+ ^I^Iif (cbe_get_hw_thread_id(cpu))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: arch/powerpc/oprofile/op_model_cell.c:362:
+ ^I^Iif (cbe_get_hw_thread_id(cpu))$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: arch/powerpc/oprofile/op_model_cell.c:372:
+^I^I^I * The cntr value will be 0xffffffff.  We will $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#474: FILE: arch/powerpc/oprofile/op_model_cell.c:373:
+^I^I^I * reset that to 0xfffffff0 when the current $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#478: FILE: arch/powerpc/oprofile/op_model_cell.c:377:
+^I^I^I * were restored to the max value, they do not $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#480: FILE: arch/powerpc/oprofile/op_model_cell.c:379:
+^I^I^I * no more samples will be collected on that cpu. $

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#489: FILE: arch/powerpc/oprofile/op_model_cell.c:388:
+			per_cpu(pmc_values, cpu)[i + cntr_offset_prev]
+				= cbe_read_ctr(cpu, i);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#491: FILE: arch/powerpc/oprofile/op_model_cell.c:390:
+			if (per_cpu(pmc_values, cpu)[i+cntr_offset_next] == \
 			                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#491: FILE: arch/powerpc/oprofile/op_model_cell.c:390:
+			if (per_cpu(pmc_values, cpu)[i+cntr_offset_next] == \

ERROR:TRAILING_WHITESPACE: trailing whitespace
#492: FILE: arch/powerpc/oprofile/op_model_cell.c:391:
+^I^I^I    0xFFFFFFFF) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#494: FILE: arch/powerpc/oprofile/op_model_cell.c:393:
+^I^I^I^I * the max value.  If you do, the counters $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#495: FILE: arch/powerpc/oprofile/op_model_cell.c:394:
+^I^I^I^I * will not increment, and no interrupts will $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#496: FILE: arch/powerpc/oprofile/op_model_cell.c:395:
+^I^I^I^I * occur. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#501: FILE: arch/powerpc/oprofile/op_model_cell.c:400:
+^I^I^I^I^I      per_cpu(pmc_values, $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#502: FILE: arch/powerpc/oprofile/op_model_cell.c:401:
+						      cpu)[i+cntr_offset_next]);
 						            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#512: FILE: arch/powerpc/oprofile/op_model_cell.c:411:
+			if (pmc_cntrl[hdw_thread][i+cntr_offset_next].enabled) {
 			                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#530: FILE: arch/powerpc/oprofile/op_model_cell.c:429:
+	timer_virt_cntr.expires = jiffies + HZ/10;
 	                                      ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#534: FILE: arch/powerpc/oprofile/op_model_cell.c:433:
+	return;
+}

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#541: FILE: arch/powerpc/oprofile/op_model_cell.c:440:
+	timer_virt_cntr.expires = jiffies + HZ/10;
 	                                      ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#553: FILE: arch/powerpc/oprofile/op_model_cell.c:452:
+	smp_mb();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#556: FILE: arch/powerpc/oprofile/op_model_cell.c:455:
+		printk(KERN_WARNING "%s: RTAS_UNKNOWN_SERVICE\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#557: FILE: arch/powerpc/oprofile/op_model_cell.c:456:
+		       __FUNCTION__);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#577: FILE: arch/powerpc/oprofile/op_model_cell.c:476:
+	for (i = 0; i < num_ctrs; ++i) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#591: FILE: arch/powerpc/oprofile/op_model_cell.c:490:
+	for (i = 0; i < num_ctrs; ++i) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ctr[i].event >= 2100'
#592: FILE: arch/powerpc/oprofile/op_model_cell.c:491:
+		if ((ctr[i].event >= 2100) && (ctr[i].event <= 2111))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ctr[i].event <= 2111'
#592: FILE: arch/powerpc/oprofile/op_model_cell.c:491:
+		if ((ctr[i].event >= 2100) && (ctr[i].event <= 2111))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#651: FILE: arch/powerpc/oprofile/op_model_cell.c:550:
+		printk(KERN_WARNING "%s: RTAS_UNKNOWN_SERVICE\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#652: FILE: arch/powerpc/oprofile/op_model_cell.c:551:
+		       __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#684: FILE: arch/powerpc/oprofile/op_model_cell.c:583:
+^I/* There is one performance monitor per node, so we $

WARNING:MEMORY_BARRIER: memory barrier without comment
#708: FILE: arch/powerpc/oprofile/op_model_cell.c:607:
+	smp_mb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#718: FILE: arch/powerpc/oprofile/op_model_cell.c:617:
+^I/* There is one performance monitor per node, so we $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#721: FILE: arch/powerpc/oprofile/op_model_cell.c:620:
+^I$

WARNING:TYPO_SPELLING: 'trys' may be misspelled - perhaps 'tries'?
#725: FILE: arch/powerpc/oprofile/op_model_cell.c:624:
+	/* Make sure only once CPU at a time trys to cancel 
 	                                     ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#725: FILE: arch/powerpc/oprofile/op_model_cell.c:624:
+^I/* Make sure only once CPU at a time trys to cancel $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#726: FILE: arch/powerpc/oprofile/op_model_cell.c:625:
+^I * the timer $

WARNING:MEMORY_BARRIER: memory barrier without comment
#733: FILE: arch/powerpc/oprofile/op_model_cell.c:632:
+	smp_mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#745: FILE: arch/powerpc/oprofile/op_model_cell.c:644:
+	smp_mb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#763: FILE: arch/powerpc/oprofile/op_model_cell.c:662:
+^I * routine are not running at the same time. See the $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#764: FILE: arch/powerpc/oprofile/op_model_cell.c:663:
+	 * cell_virtual_cntr() routine for additional comments. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#766: FILE: arch/powerpc/oprofile/op_model_cell.c:665:
+^I$

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#767: FILE: arch/powerpc/oprofile/op_model_cell.c:666:
+	/* Need to disable and reenable the performance counters
 	                       ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#769: FILE: arch/powerpc/oprofile/op_model_cell.c:668:
+^I * is hardware specific.  $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'oprofile_running == 1'
#782: FILE: arch/powerpc/oprofile/op_model_cell.c:681:
+	if ((oprofile_running == 1) && (interrupt_mask != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'interrupt_mask != 0'
#782: FILE: arch/powerpc/oprofile/op_model_cell.c:681:
+	if ((oprofile_running == 1) && (interrupt_mask != 0)) {

WARNING:TYPO_SPELLING: 'Reenable' may be misspelled - perhaps 'Re-enable'?
#795: FILE: arch/powerpc/oprofile/op_model_cell.c:694:
+		 * Reenable the interrupt and restart the counters.
 		   ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#801: FILE: arch/powerpc/oprofile/op_model_cell.c:700:
+^I^I * counter value etc.) are not copied to the actual registers $

WARNING:TYPO_SPELLING: 'permormance' may be misspelled - perhaps 'performance'?
#803: FILE: arch/powerpc/oprofile/op_model_cell.c:702:
+		 * this to work as desired, the permormance monitor needs to 
 		                                ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#803: FILE: arch/powerpc/oprofile/op_model_cell.c:702:
+^I^I * this to work as desired, the permormance monitor needs to $

WARNING:TYPO_SPELLING: 'writting' may be misspelled - perhaps 'writing'?
#804: FILE: arch/powerpc/oprofile/op_model_cell.c:703:
+		 * be disabled while writting to the latches.  This is a 
 		                     ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#804: FILE: arch/powerpc/oprofile/op_model_cell.c:703:
+^I^I * be disabled while writting to the latches.  This is a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#830: FILE: arch/powerpc/platforms/cell/cbe_regs.c:138:
+ * matter if the passed cpu is odd or even. $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#851: FILE: include/asm-powerpc/cell-pmu.h:96:
+extern u32 cbe_get_hw_thread_id(int cpu);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000018065.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 32 errors, 29 warnings, 28 checks, 806 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000018065.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
