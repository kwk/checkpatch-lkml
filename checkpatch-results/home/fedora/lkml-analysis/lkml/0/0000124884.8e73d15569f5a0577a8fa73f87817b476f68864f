WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#75: FILE: drivers/message/i2o/device.c:250:
 	list_for_each_entry(tmp, &c->devices, list)
+	    if ((tmp->lct_data.user_tid == i2o_dev->lct_data.tid)

WARNING:TABSTOP: Statements should start on a tabstop
#80: FILE: drivers/message/i2o/device.c:251:
+	    if ((tmp->lct_data.user_tid == i2o_dev->lct_data.tid)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp->lct_data.user_tid == i2o_dev->lct_data.tid'
#80: FILE: drivers/message/i2o/device.c:251:
+	    if ((tmp->lct_data.user_tid == i2o_dev->lct_data.tid)
+		&& (tmp != i2o_dev))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != i2o_dev'
#80: FILE: drivers/message/i2o/device.c:251:
+	    if ((tmp->lct_data.user_tid == i2o_dev->lct_data.tid)
+		&& (tmp != i2o_dev))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#81: FILE: drivers/message/i2o/device.c:252:
+	    if ((tmp->lct_data.user_tid == i2o_dev->lct_data.tid)
+		&& (tmp != i2o_dev))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#90: FILE: drivers/message/i2o/device.c:263:
 	list_for_each_entry(tmp, &c->devices, list)
+	    if ((tmp->lct_data.parent_tid == i2o_dev->lct_data.tid)

WARNING:TABSTOP: Statements should start on a tabstop
#95: FILE: drivers/message/i2o/device.c:264:
+	    if ((tmp->lct_data.parent_tid == i2o_dev->lct_data.tid)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp->lct_data.parent_tid == i2o_dev->lct_data.tid'
#95: FILE: drivers/message/i2o/device.c:264:
+	    if ((tmp->lct_data.parent_tid == i2o_dev->lct_data.tid)
+		&& (tmp != i2o_dev))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != i2o_dev'
#95: FILE: drivers/message/i2o/device.c:264:
+	    if ((tmp->lct_data.parent_tid == i2o_dev->lct_data.tid)
+		&& (tmp != i2o_dev))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#96: FILE: drivers/message/i2o/device.c:265:
+	    if ((tmp->lct_data.parent_tid == i2o_dev->lct_data.tid)
+		&& (tmp != i2o_dev))

WARNING:SPACING: Unnecessary space before function pointer arguments
#160: FILE: drivers/message/i2o/i2o_lan.h:131:
+	unsigned short (*type_trans) (struct sk_buff *, struct net_device *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sk_buff *' should also have an identifier name
#160: FILE: drivers/message/i2o/i2o_lan.h:131:
+	unsigned short (*type_trans) (struct sk_buff *, struct net_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct net_device *' should also have an identifier name
#160: FILE: drivers/message/i2o/i2o_lan.h:131:
+	unsigned short (*type_trans) (struct sk_buff *, struct net_device *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124884.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 7 warnings, 6 checks, 128 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124884.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
