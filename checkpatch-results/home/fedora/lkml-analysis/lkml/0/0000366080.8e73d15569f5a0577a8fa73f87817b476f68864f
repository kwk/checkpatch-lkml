WARNING:TYPO_SPELLING: 'actualy' may be misspelled - perhaps 'actually'?
#34: 
I've just played around with my server (that has actualy no load)
                                                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#69: 
   3    0 hda 948 317 16216 4294408142 90 333 848 7309 4294967294 7309215 4280372198

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#69: 
   3    0 hda 948 317 16216 4294408142 90 333 848 7309 4294967294 7309215 4280372198
          ^^^

WARNING:TYPO_SPELLING: 'definately' may be misspelled - perhaps 'definitely'?
#78: 
That's definately not zero. 8)
       ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#83: 
hda and hdb are two small 2GB ide-disks.
^^^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#90: 
Regards Michael Büsch
                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: include/linux/writeback.h:83:
+int dirty_writeback_centisecs_handler(struct ctl_table *, int, struct file *, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#136: FILE: include/linux/writeback.h:83:
+int dirty_writeback_centisecs_handler(struct ctl_table *, int, struct file *, 

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#136: FILE: include/linux/writeback.h:83:
+int dirty_writeback_centisecs_handler(struct ctl_table *, int, struct file *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#136: FILE: include/linux/writeback.h:83:
+int dirty_writeback_centisecs_handler(struct ctl_table *, int, struct file *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#136: FILE: include/linux/writeback.h:83:
+int dirty_writeback_centisecs_handler(struct ctl_table *, int, struct file *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#136: FILE: include/linux/writeback.h:83:
+int dirty_writeback_centisecs_handler(struct ctl_table *, int, struct file *, 

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: include/linux/writeback.h:84:
+                                         void *, size_t *);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: include/linux/writeback.h:84:
+int dirty_writeback_centisecs_handler(struct ctl_table *, int, struct file *, 
+                                         void *, size_t *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: include/linux/writeback.h:84:
+                                         void *, size_t *);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: kernel/sysctl.c:299:
+        NULL, dirty_writeback_centisecs_handler },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: kernel/sysctl.c:299:
+        NULL, dirty_writeback_centisecs_handler },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: mm/page-writeback.c:333:
+       if (dirty_writeback_centisecs)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#190: FILE: mm/page-writeback.c:333:
+       if (dirty_writeback_centisecs)
+               mod_timer(&wb_timer, next_jif);

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: mm/page-writeback.c:334:
+               mod_timer(&wb_timer, next_jif);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: mm/page-writeback.c:334:
+               mod_timer(&wb_timer, next_jif);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: mm/page-writeback.c:341:
+               struct file *file, void *buffer, size_t *length)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: mm/page-writeback.c:341:
+int dirty_writeback_centisecs_handler(ctl_table *table, int write,
+               struct file *file, void *buffer, size_t *length)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: mm/page-writeback.c:341:
+               struct file *file, void *buffer, size_t *length)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: mm/page-writeback.c:343:
+       proc_dointvec(table, write, file, buffer, length);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: mm/page-writeback.c:344:
+       if (dirty_writeback_centisecs) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#201: FILE: mm/page-writeback.c:344:
+       if (dirty_writeback_centisecs) {
+               mod_timer(&wb_timer,

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: mm/page-writeback.c:345:
+               mod_timer(&wb_timer,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: mm/page-writeback.c:345:
+               mod_timer(&wb_timer,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: mm/page-writeback.c:346:
+                       jiffies + (dirty_writeback_centisecs * HZ) / 100);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: mm/page-writeback.c:346:
+               mod_timer(&wb_timer,
+                       jiffies + (dirty_writeback_centisecs * HZ) / 100);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: mm/page-writeback.c:346:
+                       jiffies + (dirty_writeback_centisecs * HZ) / 100);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: mm/page-writeback.c:347:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#204: FILE: mm/page-writeback.c:347:
+       } else {
+               del_timer(&wb_timer);

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: mm/page-writeback.c:348:
+               del_timer(&wb_timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: mm/page-writeback.c:348:
+               del_timer(&wb_timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: mm/page-writeback.c:349:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: mm/page-writeback.c:350:
+       return 0;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000366080.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 26 warnings, 4 checks, 78 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000366080.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
