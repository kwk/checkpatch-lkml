WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#61: 
diff -urN linux-2.6.0-test5/arch/i386/oprofile/Kconfig linux-2.6.0-test5-intel-vtune/arch/i386/oprofile/Kconfig

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#93: FILE: Makefile:4:
+EXTRAVERSION = -test5-intel-vtune
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#106: FILE: MAINTAINERS:2198:
+P:	Juan Villacis
+M:	juan.villacis@intel.com

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'S:' before 'W:'
#109: FILE: MAINTAINERS:2201:
+W:	http://www.intel.com/software/products/vtune/
+S:	Maintained

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: include/linux/profile.h:28:
+        DO_FORK,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: include/linux/profile.h:28:
+        DO_FORK,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: include/linux/profile.h:29:
+        DO_EXECVE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: include/linux/profile.h:29:
+        DO_EXECVE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: include/linux/profile.h:30:
+        LOAD_KERNEL_IMAGE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: include/linux/profile.h:30:
+        LOAD_KERNEL_IMAGE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: include/linux/profile.h:31:
+        LOAD_USER_IMAGE$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: include/linux/profile.h:31:
+        LOAD_USER_IMAGE$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#143: FILE: include/linux/profile.h:50:
+void profile_do_fork(struct task_struct * task);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#146: FILE: include/linux/profile.h:53:
+void profile_do_execve(struct task_struct * task);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#149: FILE: include/linux/profile.h:56:
+void profile_load_kernel_image(struct module * mod, unsigned int sechdr_index,

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: include/linux/profile.h:57:
+        unsigned long addr, unsigned long size);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: include/linux/profile.h:57:
+void profile_load_kernel_image(struct module * mod, unsigned int sechdr_index,
+        unsigned long addr, unsigned long size);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: include/linux/profile.h:57:
+        unsigned long addr, unsigned long size);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: include/linux/profile.h:60:
+void profile_load_user_image(struct task_struct * task,

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: include/linux/profile.h:61:
+        struct vm_area_struct * vma);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: include/linux/profile.h:61:
+void profile_load_user_image(struct task_struct * task,
+        struct vm_area_struct * vma);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: include/linux/profile.h:61:
+        struct vm_area_struct * vma);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#154: FILE: include/linux/profile.h:61:
+        struct vm_area_struct * vma);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#177: FILE: kernel/profile.c:53:
+static struct notifier_block * do_fork_notifier;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#178: FILE: kernel/profile.c:54:
+static struct notifier_block * do_execve_notifier;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#179: FILE: kernel/profile.c:55:
+static struct notifier_block * load_kernel_image_notifier;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#180: FILE: kernel/profile.c:56:
+static struct notifier_block * load_user_image_notifier;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#188: FILE: kernel/profile.c:79:
+void profile_do_fork(struct task_struct * task)

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: kernel/profile.c:81:
+        down_read(&profile_rwsem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: kernel/profile.c:81:
+        down_read(&profile_rwsem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: kernel/profile.c:82:
+        notifier_call_chain(&do_fork_notifier, 0, task);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: kernel/profile.c:82:
+        notifier_call_chain(&do_fork_notifier, 0, task);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: kernel/profile.c:83:
+        up_read(&profile_rwsem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: kernel/profile.c:83:
+        up_read(&profile_rwsem);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#195: FILE: kernel/profile.c:86:
+void profile_do_execve(struct task_struct * task)

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: kernel/profile.c:88:
+        down_read(&profile_rwsem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: kernel/profile.c:88:
+        down_read(&profile_rwsem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: kernel/profile.c:89:
+        notifier_call_chain(&do_execve_notifier, 0, task);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: kernel/profile.c:89:
+        notifier_call_chain(&do_execve_notifier, 0, task);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: kernel/profile.c:90:
+        up_read(&profile_rwsem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: kernel/profile.c:90:
+        up_read(&profile_rwsem);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#202: FILE: kernel/profile.c:93:
+void profile_load_kernel_image(struct module * mod, unsigned int sechdr_index,

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: kernel/profile.c:94:
+        unsigned long addr, unsigned long size)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: kernel/profile.c:94:
+void profile_load_kernel_image(struct module * mod, unsigned int sechdr_index,
+        unsigned long addr, unsigned long size)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: kernel/profile.c:94:
+        unsigned long addr, unsigned long size)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: kernel/profile.c:96:
+        down_read(&profile_rwsem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: kernel/profile.c:96:
+        down_read(&profile_rwsem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: kernel/profile.c:97:
+        notifier_call_chain(&load_kernel_image_notifier, sechdr_index, mod);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: kernel/profile.c:97:
+        notifier_call_chain(&load_kernel_image_notifier, sechdr_index, mod);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: kernel/profile.c:98:
+        up_read(&profile_rwsem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: kernel/profile.c:98:
+        up_read(&profile_rwsem);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#210: FILE: kernel/profile.c:101:
+void profile_load_user_image(struct task_struct * task,

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: kernel/profile.c:102:
+        struct vm_area_struct * vma)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: kernel/profile.c:102:
+void profile_load_user_image(struct task_struct * task,
+        struct vm_area_struct * vma)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: kernel/profile.c:102:
+        struct vm_area_struct * vma)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#211: FILE: kernel/profile.c:102:
+        struct vm_area_struct * vma)

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: kernel/profile.c:104:
+        down_read(&profile_rwsem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: kernel/profile.c:104:
+        down_read(&profile_rwsem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: kernel/profile.c:105:
+        notifier_call_chain(&load_user_image_notifier,(unsigned long) task,$

CHECK:SPACING: No space is necessary after a cast
#214: FILE: kernel/profile.c:105:
+        notifier_call_chain(&load_user_image_notifier,(unsigned long) task,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: kernel/profile.c:105:
+        notifier_call_chain(&load_user_image_notifier,(unsigned long) task,$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#214: FILE: kernel/profile.c:105:
+        notifier_call_chain(&load_user_image_notifier,(unsigned long) task,
                                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: kernel/profile.c:106:
+                vma);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: kernel/profile.c:106:
+        notifier_call_chain(&load_user_image_notifier,(unsigned long) task,
+                vma);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: kernel/profile.c:106:
+                vma);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: kernel/profile.c:107:
+        up_read(&profile_rwsem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: kernel/profile.c:107:
+        up_read(&profile_rwsem);$

WARNING:TYPO_SPELLING: 'layed' may be misspelled - perhaps 'laid'?
#298: FILE: kernel/module.c:1662:
+	 * have been properly layed out 
 	                      ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: kernel/module.c:1662:
+^I * have been properly layed out $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#300: FILE: kernel/module.c:1664:
+	for (i = 0; i < hdr->e_shnum; i++) {
+	  if ( (sechdrs[i].sh_addr >= (unsigned long) mod->module_core) &&

WARNING:TABSTOP: Statements should start on a tabstop
#301: FILE: kernel/module.c:1665:
+	  if ( (sechdrs[i].sh_addr >= (unsigned long) mod->module_core) &&

CHECK:SPACING: No space is necessary after a cast
#301: FILE: kernel/module.c:1665:
+	  if ( (sechdrs[i].sh_addr >= (unsigned long) mod->module_core) &&

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#301: FILE: kernel/module.c:1665:
+	  if ( (sechdrs[i].sh_addr >= (unsigned long) mod->module_core) &&
[...]
+	    profile_load_kernel_image(mod, i,

ERROR:SPACING: space prohibited after that open parenthesis '('
#301: FILE: kernel/module.c:1665:
+	  if ( (sechdrs[i].sh_addr >= (unsigned long) mod->module_core) &&

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sechdrs[i].sh_addr >= (unsigned long) mod->module_core'
#301: FILE: kernel/module.c:1665:
+	  if ( (sechdrs[i].sh_addr >= (unsigned long) mod->module_core) &&
+		(sechdrs[i].sh_addr < (unsigned long) (mod->module_core +
+						       mod->core_size))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: kernel/module.c:1666:
+	  if ( (sechdrs[i].sh_addr >= (unsigned long) mod->module_core) &&
+		(sechdrs[i].sh_addr < (unsigned long) (mod->module_core +

CHECK:SPACING: No space is necessary after a cast
#302: FILE: kernel/module.c:1666:
+		(sechdrs[i].sh_addr < (unsigned long) (mod->module_core +

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: kernel/module.c:1669:
+                    (unsigned long)(sechdrs[i].sh_addr),$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#305: FILE: kernel/module.c:1669:
+	    profile_load_kernel_image(mod, i,
+                    (unsigned long)(sechdrs[i].sh_addr),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: kernel/module.c:1669:
+                    (unsigned long)(sechdrs[i].sh_addr),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: kernel/module.c:1670:
+                    (unsigned long)(sechdrs[i].sh_size));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: kernel/module.c:1670:
+                    (unsigned long)(sechdrs[i].sh_size));$

WARNING:TABSTOP: Statements should start on a tabstop
#307: FILE: kernel/module.c:1671:
+	  }

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: fs/exec.c:1107:
+                profile_do_execve(current);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: fs/exec.c:1107:
+                profile_do_execve(current);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: mm/mmap.c:655:
+        if (vma->vm_flags & VM_EXEC) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: mm/mmap.c:655:
+        if (vma->vm_flags & VM_EXEC) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#341: FILE: mm/mmap.c:655:
+        if (vma->vm_flags & VM_EXEC) {
+            profile_load_user_image(current, vma);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#341: FILE: mm/mmap.c:655:
+        if (vma->vm_flags & VM_EXEC) {
+            profile_load_user_image(current, vma);
+        }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: mm/mmap.c:656:
+            profile_load_user_image(current, vma);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: mm/mmap.c:656:
+            profile_load_user_image(current, vma);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: mm/mmap.c:657:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: mm/mmap.c:657:
+        }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000335689.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 44 errors, 38 warnings, 11 checks, 242 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000335689.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
