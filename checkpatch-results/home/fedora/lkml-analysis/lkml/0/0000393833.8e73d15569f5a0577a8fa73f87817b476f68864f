WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
This is a kernel-2.4.13 patch for a "generic" fix for the Etherleak security

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#46: FILE: drivers/net/net_init.c:418:
+extern int etherleak_fix(struct sk_buff *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sk_buff *' should also have an identifier name
#46: FILE: drivers/net/net_init.c:418:
+extern int etherleak_fix(struct sk_buff *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: net/core/dev.c:952:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: net/core/dev.c:952:
+ $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#80: FILE: net/core/dev.c:1003:
+	if ((netif_xmit_hook) && (netif_xmit_hook)(skb)) {
+		;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: net/ethernet/eth.c:241:
+/* $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#100: FILE: net/ethernet/eth.c:242:
+/* 
+ * RFCs 894 & 1042, require that the data field should be padded with

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: net/ethernet/eth.c:247:
+ * information leakage issue. $

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#108: FILE: net/ethernet/eth.c:249:
protocols

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#116: FILE: net/ethernet/eth.c:257:
+	int frame_len = skb->len, pad_length = ETH_ZLEN-frame_len;
 	                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#118: FILE: net/ethernet/eth.c:259:
+	if ( (skb->dev->type == ARPHRD_ETHER) && (frame_len < ETH_ZLEN) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#118: FILE: net/ethernet/eth.c:259:
+	if ( (skb->dev->type == ARPHRD_ETHER) && (frame_len < ETH_ZLEN) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'skb->dev->type == ARPHRD_ETHER'
#118: FILE: net/ethernet/eth.c:259:
+	if ( (skb->dev->type == ARPHRD_ETHER) && (frame_len < ETH_ZLEN) ) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'frame_len < ETH_ZLEN'
#118: FILE: net/ethernet/eth.c:259:
+	if ( (skb->dev->type == ARPHRD_ETHER) && (frame_len < ETH_ZLEN) ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#120: FILE: net/ethernet/eth.c:261:
+			printk(KERN_ALERT "Potential Etherleak security issue detected. Contact

CHECK:LINE_SPACING: Please don't use multiple blank lines
#128: FILE: net/ethernet/eth.c:268:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000393833.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 7 warnings, 4 checks, 75 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000393833.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
