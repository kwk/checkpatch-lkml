WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
### Comments for ChangeSet

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:TYPO_SPELLING: 'existance' may be misspelled - perhaps 'existence'?
#38: 
counts on the module implied by the existance of the thread.
                                    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: include/linux/module.h:317:
+extern int module_kernel_thread(int (*fn)(void*), void *arg, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#149: FILE: include/linux/module.h:317:
+extern int module_kernel_thread(int (*fn)(void*), void *arg, 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#149: FILE: include/linux/module.h:317:
+extern int module_kernel_thread(int (*fn)(void*), void *arg, 

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: include/linux/module.h:334:
+static inline int module_kernel_thread(int (*fn)(void*), void *arg, $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#159: FILE: include/linux/module.h:334:
+static inline int module_kernel_thread(int (*fn)(void*), void *arg, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: include/linux/module.h:339:
+^I       $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#172: FILE: include/linux/module.h:431:
+static inline int module_kernel_thread(int (*fn)(void*), void *arg,

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:FUNCTION_ARGUMENTS: function definition argument 'svc_thread_fn' should also have an identifier name
#197: FILE: include/linux/sunrpc/svc.h:285:
+int		   svc_create_thread(svc_thread_fn, struct svc_serv *, struct module *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct svc_serv *' should also have an identifier name
#197: FILE: include/linux/sunrpc/svc.h:285:
+int		   svc_create_thread(svc_thread_fn, struct svc_serv *, struct module *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct module *' should also have an identifier name
#197: FILE: include/linux/sunrpc/svc.h:285:
+int		   svc_create_thread(svc_thread_fn, struct svc_serv *, struct module *);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:LINE_SPACING: Please don't use multiple blank lines
#209: FILE: kernel/module.c:619:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#215: FILE: kernel/module.c:625:
+ * have been ref-counted iif the thread started.
                          ^^^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#218: FILE: kernel/module.c:628:
+	int (*fn)(void*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void*' should also have an identifier name
#218: FILE: kernel/module.c:628:
+	int (*fn)(void*);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#222: FILE: kernel/module.c:632:
+};
+static int module_kernel_thread_helper(void *arg)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: kernel/module.c:642:
+int module_kernel_thread(int (*fn)(void*), void *arg, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#232: FILE: kernel/module.c:642:
+}
+int module_kernel_thread(int (*fn)(void*), void *arg, 

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#232: FILE: kernel/module.c:642:
+int module_kernel_thread(int (*fn)(void*), void *arg, 

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#286: FILE: net/sunrpc/svc.c:174:
+	error = module_kernel_thread((int(*)(void*))func, rqstp,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364937.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 13 warnings, 4 checks, 200 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364937.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
