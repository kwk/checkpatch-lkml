WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#43: FILE: MAINTAINERS:263:
+P:

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#44: FILE: MAINTAINERS:264:
+M:

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#44: FILE: MAINTAINERS:264:
+P:
+M:

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'S:' before 'W:'
#47: FILE: MAINTAINERS:267:
+W:	http://www.amd.com/us-en/ConnectivitySolutions/TechnicalResources/0,,50_2334_2452_11363,00.html
+S:	Supported

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#68: FILE: arch/i386/Kconfig:291:
+config MGEODE_GX
+	bool "Geode GX"
+	help
+	  Select this for AMD Geode GX processors.  Enables use of some extended
+	  instructions, and passes appropriate optimization flags to GCC.
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#126: FILE: arch/i386/kernel/cpu/cyrix.c:345:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#129: FILE: arch/i386/kernel/cpu/cyrix.c:348:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#130: FILE: arch/i386/kernel/cpu/cyrix.c:349:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#132: FILE: arch/i386/kernel/cpu/cyrix.c:351:
+	if ( (c->x86 == 5) && (c->x86_model >= 4 && c->x86_model <= 5)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->x86 == 5'
#132: FILE: arch/i386/kernel/cpu/cyrix.c:351:
+	if ( (c->x86 == 5) && (c->x86_model >= 4 && c->x86_model <= 5)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#134: FILE: arch/i386/kernel/cpu/cyrix.c:353:
+		/* Bit 31 in normal CPUID used for nonstandard 3DNow ID;
+		   3DNow is IDd by bit 31 in extended CPUID (1*32+31) anyway */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#134: FILE: arch/i386/kernel/cpu/cyrix.c:353:
+		   3DNow is IDd by bit 31 in extended CPUID (1*32+31) anyway */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#135: FILE: arch/i386/kernel/cpu/cyrix.c:354:
+		clear_bit(0*32+31, c->x86_capability);
 		           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#135: FILE: arch/i386/kernel/cpu/cyrix.c:354:
+		clear_bit(0*32+31, c->x86_capability);
 		              ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#139: FILE: arch/i386/kernel/cpu/cyrix.c:358:
+		switch ( c->x86_model ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#139: FILE: arch/i386/kernel/cpu/cyrix.c:358:
+		switch ( c->x86_model ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: arch/i386/kernel/cpu/cyrix.c:359:
+                case 4: /* GX1/SCxx00 */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: arch/i386/kernel/cpu/cyrix.c:359:
+                case 4: /* GX1/SCxx00 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: arch/i386/kernel/cpu/cyrix.c:362:
+                        /* GX1 uses bits 16 and 24 differently -$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: arch/i386/kernel/cpu/cyrix.c:363:
+                           you could probably just do$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#144: FILE: arch/i386/kernel/cpu/cyrix.c:363:
+                        /* GX1 uses bits 16 and 24 differently -
+                           you could probably just do

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: arch/i386/kernel/cpu/cyrix.c:365:
+                           clear_bit(0*32+16, &c->x86_capability);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: arch/i386/kernel/cpu/cyrix.c:366:
+                           clear_bit(0*32+24, &c->x86_capability);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: arch/i386/kernel/cpu/cyrix.c:368:
+                           since I don't think the kernel supports$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: arch/i386/kernel/cpu/cyrix.c:369:
+                           FPU-CMOV or Cyrix MMX.  Unsure tho.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: arch/i386/kernel/cpu/cyrix.c:371:
+                           Also checking GX1 cache here needs to be done -$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: arch/i386/kernel/cpu/cyrix.c:372:
+                           display_cacheinfo() won't work according to$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: arch/i386/kernel/cpu/cyrix.c:373:
+                           AMD specs.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: arch/i386/kernel/cpu/cyrix.c:374:
+                        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: arch/i386/kernel/cpu/cyrix.c:376:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: arch/i386/kernel/cpu/cyrix.c:376:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: arch/i386/kernel/cpu/cyrix.c:378:
+                case 5: /* GX */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: arch/i386/kernel/cpu/cyrix.c:378:
+                case 5: /* GX */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: arch/i386/kernel/cpu/cyrix.c:379:
+                        display_cacheinfo(c);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: arch/i386/kernel/cpu/cyrix.c:379:
+                        display_cacheinfo(c);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: arch/i386/kernel/cpu/cyrix.c:380:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: arch/i386/kernel/cpu/cyrix.c:380:
+                        break;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#169: FILE: arch/i386/kernel/cpu/cyrix.c:388:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000146184.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 13 warnings, 7 checks, 148 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000146184.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
