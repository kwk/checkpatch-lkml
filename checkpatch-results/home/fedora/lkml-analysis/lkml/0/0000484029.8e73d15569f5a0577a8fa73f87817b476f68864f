WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
diff -Nur -X dontdiff linux/drivers/block/ll_rw_blk.c linux.new/drivers/block/ll_rw_blk.c

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#60: FILE: drivers/block/ll_rw_blk.c:125:
+char * blkdev_varyio[MAX_BLKDEV];

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#73: FILE: drivers/block/ll_rw_blk.c:915:
+	switch (rw) {
+		case WRITE:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#87: FILE: drivers/block/ll_rw_blk.c:929:
+void submit_bh_blknr(int rw, struct buffer_head * bh)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#92: FILE: drivers/block/ll_rw_blk.c:934:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#120: FILE: drivers/char/raw.c:121:
+^Iraw_devices[minor].can_do_vary = $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#158: FILE: drivers/scsi/aic7xxx/aic7xxx_linux_host.h:93:
+	can_do_varyio: 1					\
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: drivers/scsi/hosts.h:297:
+    unsigned can_do_varyio:1;$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#185: FILE: drivers/scsi/qlogicisp.h:87:
+	use_clustering:		DISABLE_CLUSTERING,			   \
 	              ^

WARNING:INDENTED_LABEL: labels should not be indented
#185: FILE: drivers/scsi/qlogicisp.h:87:
+	use_clustering:		DISABLE_CLUSTERING,			   \

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#186: FILE: drivers/scsi/qlogicisp.h:88:
+	can_do_varyio:		1					   \
 	             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: drivers/scsi/sd.c:1118:
+^Imemset(sd_varyio, 0, (sd_template.dev_max << 4)); $

CHECK:CAMELCASE: Avoid CamelCase: <SDp>
#237: FILE: drivers/scsi/sd.c:1289:
+	if (SDp->host->hostt->can_do_varyio) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!blkdev_varyio[SD_DISK_MAJOR(i)]"
#238: FILE: drivers/scsi/sd.c:1290:
+		if (blkdev_varyio[SD_DISK_MAJOR(i)] == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: drivers/scsi/sd.c:1291:
+^I^I^Iblkdev_varyio[SD_DISK_MAJOR(i)] = $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'offset == 0'
#292: FILE: fs/buffer.c:2171:
+				if (iobuf->dovary && (offset == 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: fs/buffer.c:2172:
+^I^I^I^I^Iiosize = RAWIO_BLOCKSIZE; $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#297: FILE: fs/buffer.c:2176:
+				bufind += (iosize/size);
 				                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: fs/buffer.c:2195:
+^I^I^I^Iif (iobuf->dovary) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: fs/buffer.c:2197:
+^I^I^I^Ielse $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#335: FILE: include/linux/blkdev.h:178:
+extern char * blkdev_varyio[MAX_BLKDEV];

WARNING:LINE_SPACING: Missing a blank line after declarations
#347: FILE: include/linux/blkdev.h:236:
+	int retval = 0;
+	if (blkdev_varyio[major]) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#347: FILE: include/linux/blkdev.h:236:
+	if (blkdev_varyio[major]) {
+		retval = blkdev_varyio[major][minor];	
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: include/linux/blkdev.h:237:
+^I^Iretval = blkdev_varyio[major][minor];^I$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#360: FILE: include/linux/fs.h:1353:
+extern void submit_bh_blknr(int, struct buffer_head *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#360: FILE: include/linux/fs.h:1353:
+extern void submit_bh_blknr(int, struct buffer_head *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head *' should also have an identifier name
#360: FILE: include/linux/fs.h:1353:
+extern void submit_bh_blknr(int, struct buffer_head *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000484029.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 8 warnings, 5 checks, 280 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000484029.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
