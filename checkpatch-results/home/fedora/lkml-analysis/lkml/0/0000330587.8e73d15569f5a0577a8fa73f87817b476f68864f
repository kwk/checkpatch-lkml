WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
T o allow a simple upgrade path for people moving from 2.4 -ck to 2.6 I have 

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#154: FILE: kernel/sched.c:379:
+	if (prio > MAX_PRIO-1 || batch_task(p))
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#196: FILE: kernel/sched.c:1436:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#211: FILE: kernel/sched.c:1562:
+		if (likely(rq->expired->nr_active)){

ERROR:SPACING: space required before the open brace '{'
#233: FILE: kernel/sched.c:1583:
+	if (unlikely(batch_task(next) && rq->expired->nr_active)){

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#251: FILE: kernel/sched.c:1912:
+		if (delta < 0 || ((delta > 0 || batch_task(p)) &&
[...]
+				resched_task(rq->curr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: kernel/sched.c:1913:
+		if (delta < 0 || ((delta > 0 || batch_task(p)) &&
+			task_running(rq, p)))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#260: FILE: kernel/sched.c:2060:
 		if (policy != SCHED_FIFO && policy != SCHED_RR &&
[...]
+				goto out_unlock;

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#263: FILE: kernel/sched.c:2061:
+			policy != SCHED_NORMAL && policy !=SCHED_BATCH)
 			                                 ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#274: FILE: kernel/sched.c:2072:
+	if ((policy == SCHED_NORMAL || policy == SCHED_BATCH) !=
[...]
+			goto out_unlock;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lp.sched_priority == 0'
#274: FILE: kernel/sched.c:2072:
+	if ((policy == SCHED_NORMAL || policy == SCHED_BATCH) !=
+		(lp.sched_priority == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000330587.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 4 warnings, 4 checks, 230 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000330587.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
