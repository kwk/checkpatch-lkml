WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#73: 
diff -urzN -X /home/axboe/cdrom/exclude /opt/kernel/linux-2.5.8/drivers/block/ll_rw_blk.c linux/drivers/block/ll_rw_blk.c

CHECK:BRACES: braces {} should be used on all arms of this statement
#205: FILE: drivers/ide/ide-disk.c:126:
+		if (drive->using_dma) {
[...]
-		} else {
[...]
-				if (drive->using_tcq)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#224: FILE: drivers/ide/ide-disk.c:136:
+		if (drive->using_dma) {
[...]
-		}
[...]
+		} else if (drive->mult_count)
[...]

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#250: FILE: drivers/ide/ide-disk.c:903:
+	len += sprintf(out+len, "Queue:\t\t\treleased [ %d ] - started [ %d ]\n", drive->tcq->immed_rel, drive->tcq->immed_comp);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#250: FILE: drivers/ide/ide-disk.c:903:
+	len += sprintf(out+len, "Queue:\t\t\treleased [ %d ] - started [ %d ]\n", drive->tcq->immed_rel, drive->tcq->immed_comp);
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#254: FILE: drivers/ide/ide-disk.c:906:
+		len += sprintf(out+len, "pending request and queue count mismatch (counted: %d)\n", cmds);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#254: FILE: drivers/ide/ide-disk.c:906:
+		len += sprintf(out+len, "pending request and queue count mismatch (counted: %d)\n", cmds);
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#265: FILE: drivers/ide/ide-disk.c:913:
+	len += sprintf(out+len, "Oldest command:\t\t%lu jiffies\n", max_jif);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#266: FILE: drivers/ide/ide-disk.c:914:
+	len += sprintf(out+len, "Oldest command ever:\t%lu\n", drive->tcq->oldest_command);
 	                  ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#339: FILE: drivers/ide/ide-dma.c:658:
+				BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#408: FILE: drivers/ide/ide-taskfile.c:402:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#409: FILE: drivers/ide/ide-taskfile.c:403:
+	printk("ata_taskfile ... %p\n", args->handler);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#411: FILE: drivers/ide/ide-taskfile.c:405:
+	printk("   sector feature          %02x\n", args->taskfile.feature);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#412: FILE: drivers/ide/ide-taskfile.c:406:
+	printk("   sector count            %02x\n", args->taskfile.sector_count);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#413: FILE: drivers/ide/ide-taskfile.c:407:
+	printk("   drive/head              %02x\n", args->taskfile.device_head);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#414: FILE: drivers/ide/ide-taskfile.c:408:
+	printk("   command                 %02x\n", args->taskfile.command);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#417: FILE: drivers/ide/ide-taskfile.c:411:
+		printk("   rq->nr_sectors          %2li\n",  rq->nr_sectors);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#419: FILE: drivers/ide/ide-taskfile.c:413:
+		printk("   rq->                   = null\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#421: FILE: drivers/ide/ide-taskfile.c:415:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: drivers/ide/ide-taskfile.c:415:
+ $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#489: FILE: drivers/ide/ide-tcq.c:56:
+ide_startstop_t ide_service(ide_drive_t *drive);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#777: FILE: drivers/ide/ide-tcq.c:509:
+		printk("%s: timeout waiting for data phase\n", drive->name);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#797: FILE: drivers/ide/ide-tcq.c:532:
+			BUG_ON(drive->tcq->active_tag == IDE_INACTIVE_TAG);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#816: FILE: drivers/ide/ide-tcq.c:550:
+			BUG_ON(drive->tcq->active_tag == IDE_INACTIVE_TAG);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#887: FILE: drivers/ide/ide-tcq.c:633:
+	TCQ_PRINTK("%s: ide_start_tag: begin tag %p/%d, rq %p\n", drive->name,ar,ar->ar_tag, ar->ar_rq);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#887: FILE: drivers/ide/ide-tcq.c:633:
+	TCQ_PRINTK("%s: ide_start_tag: begin tag %p/%d, rq %p\n", drive->name,ar,ar->ar_tag, ar->ar_rq);
 	                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#887: FILE: drivers/ide/ide-tcq.c:633:
+	TCQ_PRINTK("%s: ide_start_tag: begin tag %p/%d, rq %p\n", drive->name,ar,ar->ar_tag, ar->ar_rq);
 	                                                                        ^

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#917: FILE: drivers/ide/ide.c:386:
+			printk("%s: exceeded max command turn-around time (%d seconds)\n", drive->name, ATA_AR_MAX_TURNAROUND / HZ);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#917: FILE: drivers/ide/ide.c:386:
+			printk("%s: exceeded max command turn-around time (%d seconds)\n", drive->name, ATA_AR_MAX_TURNAROUND / HZ);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#998: FILE: drivers/ide/ide.c:1316:
+			printk("ide_set_handler: timer already active\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1003: FILE: drivers/ide/ide.c:1321:
+		 * sleeping */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1006: FILE: drivers/ide/ide.c:1324:
+		 * otherwise? perhaps from tq_disk? */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1035: FILE: drivers/ide/ide.c:1353:
+			printk("%s: hwgroup not busy while queueing\n", drive->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1052: FILE: drivers/ide/ide.c:1370:
+			printk("ide_do_request: DMA in progress...\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1064: FILE: drivers/ide/ide.c:1382:
+			BUG_ON(!drive->using_tcq);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1068: FILE: drivers/ide/ide.c:1386:
+		if (!(rq = elv_next_request(&drive->queue))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1121: FILE: drivers/ide/ide.c:1439:
+#if 0

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1131: FILE: drivers/ide/ide.c:1449:
+	if ((do_service = drive->service_pending))

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1182: FILE: drivers/ide/ide.c:1493:
 	while (!test_and_set_bit(IDE_BUSY, &hwgroup->flags)) {
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1186: FILE: drivers/ide/ide.c:1497:
+		if ((drive = ide_choose_drive(hwgroup)) == NULL)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1198: FILE: drivers/ide/ide.c:1506:
+				OUT_BYTE(drive->ctl|2, IDE_CONTROL_REG);
 				                   ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1269: FILE: drivers/ide/ide.c:1768:
+		printk("ide: unexpected interrupt\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1364: FILE: drivers/ide/ide.c:2839:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1364: FILE: drivers/ide/ide.c:2839:
 
+		

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1402: FILE: drivers/ide/ide.c:2862:
+	struct pci_dev *pdev= drive->channel->pci_dev;
 	                    ^

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1410: FILE: drivers/ide/ide.c:2870:
+		pci_free_consistent(pdev, PRD_SEGMENTS * PRD_BYTES, ar->ar_dmatable_cpu, ar->ar_dmatable);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'drive' - possible side-effects?
#1457: FILE: include/linux/ide.h:306:
+#define IDE_SET_CUR_TAG(drive, tag)	\
+	do {						\
+		((drive)->tcq->active_tag = (tag));	\
+		if ((tag) == IDE_INACTIVE_TAG)		\
+			HWGROUP((drive))->rq = NULL;	\
+	} while (0);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tag' - possible side-effects?
#1457: FILE: include/linux/ide.h:306:
+#define IDE_SET_CUR_TAG(drive, tag)	\
+	do {						\
+		((drive)->tcq->active_tag = (tag));	\
+		if ((tag) == IDE_INACTIVE_TAG)		\
+			HWGROUP((drive))->rq = NULL;	\
+	} while (0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#1457: FILE: include/linux/ide.h:306:
+#define IDE_SET_CUR_TAG(drive, tag)	\
+	do {						\
+		((drive)->tcq->active_tag = (tag));	\
+		if ((tag) == IDE_INACTIVE_TAG)		\
+			HWGROUP((drive))->rq = NULL;	\
+	} while (0);

do {} while(0) macros should not have a trailing semicolon.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#1578: FILE: include/linux/ide.h:1084:
+int ide_init_commandlist(ide_drive_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000463862.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 31 warnings, 11 checks, 1416 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000463862.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
