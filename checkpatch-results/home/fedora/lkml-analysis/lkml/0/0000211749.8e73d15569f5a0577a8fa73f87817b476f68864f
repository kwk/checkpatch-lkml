ERROR:TRAILING_WHITESPACE: trailing whitespace
#65: FILE: arch/i386/config.in:144:
+   define_bool CONFIG_X86_USE_PPRO_CHECKSUM y ^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: arch/i386/config.in:276:
+   ^Ifi $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#173: FILE: arch/i386/kernel/setup.c:1552:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#177: FILE: arch/i386/kernel/setup.c:1556:
+	/* Bit 31 in normal CPUID used for nonstandard 3DNow ID;
+	   3DNow is IDd by bit 31 in extended CPUID (1*32+31) anyway */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#177: FILE: arch/i386/kernel/setup.c:1556:
+	   3DNow is IDd by bit 31 in extended CPUID (1*32+31) anyway */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#178: FILE: arch/i386/kernel/setup.c:1557:
+	clear_bit(0*32+31, &c->x86_capability);
 	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#178: FILE: arch/i386/kernel/setup.c:1557:
+	clear_bit(0*32+31, &c->x86_capability);
 	              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: arch/i386/kernel/setup.c:1558:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#182: FILE: arch/i386/kernel/setup.c:1561:
+	switch(c->x86_model)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#182: FILE: arch/i386/kernel/setup.c:1561:
+	switch(c->x86_model)

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: arch/i386/kernel/setup.c:1563:
+^I        case 4: /* GX1/SCxx00 */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: arch/i386/kernel/setup.c:1565:
+^I^I^I/* GX1 uses bits 16 and 24 differently - $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: arch/i386/kernel/setup.c:1566:
+^I^I^I   you could probably just do $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#187: FILE: arch/i386/kernel/setup.c:1566:
+			/* GX1 uses bits 16 and 24 differently - 
+			   you could probably just do 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: arch/i386/kernel/setup.c:1584:
+^I^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: arch/i386/kernel/setup.c:1585:
+^I        case 10: /* GX3 */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: arch/i386/kernel/setup.c:1589:
+^I^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#211: FILE: arch/i386/kernel/setup.c:1590:
+			
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#212: FILE: arch/i386/kernel/setup.c:1591:
+
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: arch/i386/kernel/setup.c:2956:
+             /* NSC chips with TFMS of 0x54n or 0x55n are Geode $

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: arch/i386/kernel/setup.c:2956:
+             /* NSC chips with TFMS of 0x54n or 0x55n are Geode $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#226: FILE: arch/i386/kernel/setup.c:2957:
+             /* NSC chips with TFMS of 0x54n or 0x55n are Geode 
+		- do a special init */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#226: FILE: arch/i386/kernel/setup.c:2957:
+		- do a special init */

ERROR:SPACING: space prohibited after that open parenthesis '('
#227: FILE: arch/i386/kernel/setup.c:2958:
+		if ( (c->x86 == 5) &&

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->x86 == 5'
#227: FILE: arch/i386/kernel/setup.c:2958:
+		if ( (c->x86 == 5) &&
+		     (c->x86_model >= 4 && c->x86_model <= 5))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: arch/i386/kernel/setup.c:2959:
+		if ( (c->x86 == 5) &&
+		     (c->x86_model >= 4 && c->x86_model <= 5))

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: arch/i386/kernel/setup.c:2962:
+^I^I        init_cyrix(c);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: arch/i386/kernel/setup.c:2966:
+^I^I/* Unlike its predecessors, the GX3 flavor of the $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#237: FILE: arch/i386/kernel/setup.c:2967:
+		/* Unlike its predecessors, the GX3 flavor of the 
+		   Geode family declares itself as an AuthenticAMD,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#238: FILE: arch/i386/kernel/setup.c:2968:
+		   so check for that here */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: arch/i386/kernel/setup.c:2969:
+^I^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#264: FILE: include/asm-i386/msr.h:23:
+#define rdtsc(low,high) \
                  ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#264: FILE: include/asm-i386/msr.h:23:
+#define rdtsc(low,high) \
+     __asm__ __volatile__("rdtsc" : "=a" (low), "=d" (high)); \
+    if ((unsigned long) low > 0xFFFFFFFC) high--

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'low' - possible side-effects?
#264: FILE: include/asm-i386/msr.h:23:
+#define rdtsc(low,high) \
+     __asm__ __volatile__("rdtsc" : "=a" (low), "=d" (high)); \
+    if ((unsigned long) low > 0xFFFFFFFC) high--

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'high' - possible side-effects?
#264: FILE: include/asm-i386/msr.h:23:
+#define rdtsc(low,high) \
+     __asm__ __volatile__("rdtsc" : "=a" (low), "=d" (high)); \
+    if ((unsigned long) low > 0xFFFFFFFC) high--

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: include/asm-i386/msr.h:24:
+     __asm__ __volatile__("rdtsc" : "=a" (low), "=d" (high)); \$

CHECK:SPACING: No space is necessary after a cast
#266: FILE: include/asm-i386/msr.h:25:
+    if ((unsigned long) low > 0xFFFFFFFC) high--

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: include/asm-i386/msr.h:25:
+    if ((unsigned long) low > 0xFFFFFFFC) high--$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#266: FILE: include/asm-i386/msr.h:25:
+    if ((unsigned long) low > 0xFFFFFFFC) high--

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000211749.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 9 warnings, 10 checks, 221 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000211749.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
