WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
It is written in such a way that it will optimise out at compile time unless you

WARNING:TYPO_SPELLING: 'definitons' may be misspelled - perhaps 'definitions'?
#34: 
It also removes the duplicate definitons of clustered_apic_mode.
                              ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'clustered_apic_mode == CLUSTERED_APIC_NUMAQ'
#67: FILE: arch/i386/kernel/io_apic.c:743:
+		if ((clustered_apic_mode == CLUSTERED_APIC_NUMAQ) && (apic != 0) && (irq == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'apic != 0'
#67: FILE: arch/i386/kernel/io_apic.c:743:
+		if ((clustered_apic_mode == CLUSTERED_APIC_NUMAQ) && (apic != 0) && (irq == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq == 0'
#67: FILE: arch/i386/kernel/io_apic.c:743:
+		if ((clustered_apic_mode == CLUSTERED_APIC_NUMAQ) && (apic != 0) && (irq == 0))

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#78: FILE: arch/i386/kernel/mpparse.c:72:
+int clustered_apic = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#79: FILE: arch/i386/kernel/mpparse.c:73:
+int esr_disable = 0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#113: FILE: arch/i386/kernel/mpparse.c:229:
+		if (clustered_apic_mode == CLUSTERED_APIC_NUMAQ) {
 			quad_local_to_mp_bus_id[quad][translation_table[mpc_record]->trans_local] = m->mpc_busid;
 		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'clustered_apic_mode == CLUSTERED_APIC_NUMAQ'
#122: FILE: arch/i386/kernel/mpparse.c:403:
+	if ((clustered_apic_mode == CLUSTERED_APIC_NUMAQ) && mpc->mpc_oemptr) {

ERROR:SPACING: space required before the open parenthesis '('
#152: FILE: arch/i386/kernel/smpboot.c:903:
+	if(clustered_apic_mode == CLUSTERED_APIC_NUMAQ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: arch/i386/kernel/smpboot.c:1060:
+        if ((clustered_apic_mode == CLUSTERED_APIC_NUMAQ) && (numnodes > 1)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: arch/i386/kernel/smpboot.c:1060:
+        if ((clustered_apic_mode == CLUSTERED_APIC_NUMAQ) && (numnodes > 1)) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'clustered_apic_mode == CLUSTERED_APIC_NUMAQ'
#161: FILE: arch/i386/kernel/smpboot.c:1060:
+        if ((clustered_apic_mode == CLUSTERED_APIC_NUMAQ) && (numnodes > 1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'numnodes > 1'
#161: FILE: arch/i386/kernel/smpboot.c:1060:
+        if ((clustered_apic_mode == CLUSTERED_APIC_NUMAQ) && (numnodes > 1)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: include/asm-i386/smp.h:41:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: include/asm-i386/smp.h:42:
+ * The following makes all the clustered apic mode switches optimise out at $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: include/asm-i386/smpboot.h:16:
+#else $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423875.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 4 warnings, 6 checks, 173 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423875.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
