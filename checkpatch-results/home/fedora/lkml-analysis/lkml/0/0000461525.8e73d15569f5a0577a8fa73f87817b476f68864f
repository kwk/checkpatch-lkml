WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
> -#define virt_to_page(kaddr)	(ADDR_TO_MAPBASE(kaddr) + LOCAL_MAP_NR(kaddr))

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:LINE_SPACING: Missing a blank line after declarations
#116: FILE: mips/mm/umap.c:120:
+		struct page *ptpage = pte_valid_page(page);
+		if (!ptpage || PageReserved(ptpage))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:LINE_SPACING: Missing a blank line after declarations
#134: FILE: mips64/mm/umap.c:119:
+		struct page *ptpage = pte_valid_page(page);
+		if (!ptpage || PageReserved(ptpage))

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:LINE_SPACING: Missing a blank line after declarations
#170: FILE: sparc/mm/generic.c:23:
+		struct page *ptpage = pte_valid_page(page);
+		if (!ptpage || PageReserved(ptpage))

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:LINE_SPACING: Missing a blank line after declarations
#232: FILE: sparc64/mm/generic.c:23:
+		struct page *ptpage = pte_valid_page(page);
+		if (!ptpage || PageReserved(ptpage))

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#253: FILE: sparc64/mm/init.c:193:
+	if (page && page->mapping &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: asm-cris/processor.h:104:
+        if (regs > PAGE_SIZE && virt_to_valid_page(regs)) \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: asm-cris/processor.h:104:
+        if (regs > PAGE_SIZE && virt_to_valid_page(regs)) \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 14)
#301: FILE: asm-cris/processor.h:104:
+        if (regs > PAGE_SIZE && virt_to_valid_page(regs)) \
               eip = ((struct pt_regs *)regs)->irp; \

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#335: FILE: asm-i386/pgtable-2level.h:60:
+#define pte_valid_page(x)	(pte_val(x) < max_mapnr ? pte_page(x) : NULL)

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#350: FILE: asm-i386/pgtable-3level.h:90:
+#define pte_valid_page(x) (pte_val(x) < max_mapnr ? pte_page(x) : NULL)

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:LINE_SPACING: Missing a blank line after declarations
#385: FILE: asm-sh/pgalloc.h:109:
+		struct page *page = pte_valid_page(pte);
+		if (page && (!page->mapping || !(page->mapping->i_mmap_shared)))

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:LINE_SPACING: Missing a blank line after declarations
#403: FILE: memory.c:80:
+	struct page *page = pte_valid_page(pte);
+	if (!page || PageReserved(page))

WARNING:LINE_SPACING: Missing a blank line after declarations
#426: FILE: memory.c:359:
+			struct page *page = pte_valid_page(pte);
+			if (page && !PageReserved(page))

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: memory.c:865:
+ ^I^I^Iset_pte(pte, newpage);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#462: FILE: memory.c:865:
+ ^I^I^Iset_pte(pte, newpage);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: memory.c:865:
+ ^I^I^Iset_pte(pte, newpage);$

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:LINE_SPACING: Missing a blank line after declarations
#491: FILE: msync.c:30:
+		struct page *page = pte_valid_page(pte);
+		if (page && !PageReserved(page) && ptep_test_and_clear_dirty(ptep)) {

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:LINE_SPACING: Missing a blank line after declarations
#595: FILE: vmalloc.c:49:
+			struct page *ptpage = pte_valid_page(page);
+			if (ptpage && (!PageReserved(ptpage)))

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000461525.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 38 warnings, 2 checks, 363 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000461525.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
