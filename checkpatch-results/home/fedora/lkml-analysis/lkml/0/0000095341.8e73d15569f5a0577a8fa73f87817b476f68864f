ERROR:SPACING: space required after that ',' (ctx:VxV)
#88: FILE: include/asm-i386/io.h:342:
+	__BUILDOUTINST(bwl,bw,value,port); \
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#88: FILE: include/asm-i386/io.h:342:
+	__BUILDOUTINST(bwl,bw,value,port); \
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#88: FILE: include/asm-i386/io.h:342:
+	__BUILDOUTINST(bwl,bw,value,port); \
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#93: FILE: include/asm-i386/io.h:346:
+	__BUILDININST(bwl,bw,value,port); \
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#93: FILE: include/asm-i386/io.h:346:
+	__BUILDININST(bwl,bw,value,port); \
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#93: FILE: include/asm-i386/io.h:346:
+	__BUILDININST(bwl,bw,value,port); \
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#102: FILE: include/asm-i386/io.h:369:
+	__BUILDOUTSINST(bwl,addr,count,port); \
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#102: FILE: include/asm-i386/io.h:369:
+	__BUILDOUTSINST(bwl,addr,count,port); \
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#102: FILE: include/asm-i386/io.h:369:
+	__BUILDOUTSINST(bwl,addr,count,port); \
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#106: FILE: include/asm-i386/io.h:372:
+	__BUILDINSINST(bwl,addr,count,port); \
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#106: FILE: include/asm-i386/io.h:372:
+	__BUILDINSINST(bwl,addr,count,port); \
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#106: FILE: include/asm-i386/io.h:372:
+	__BUILDINSINST(bwl,addr,count,port); \
 	                             ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#115: FILE: include/asm-i386/mach-vmi/mach_io.h:1:
+#ifndef _MACH_ASM_IO_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#131: FILE: include/asm-i386/mach-vmi/mach_io.h:17:
+	vmi_wrap_call(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#140: FILE: include/asm-i386/mach-vmi/mach_io.h:26:
+	vmi_wrap_call(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#149: FILE: include/asm-i386/mach-vmi/mach_io.h:35:
+	vmi_wrap_call(

WARNING:LINE_SPACING: Missing a blank line after declarations
#159: FILE: include/asm-i386/mach-vmi/mach_io.h:45:
+	VMI_UINT32 ret;
+	vmi_wrap_call(

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#159: FILE: include/asm-i386/mach-vmi/mach_io.h:45:
+	vmi_wrap_call(

WARNING:LINE_SPACING: Missing a blank line after declarations
#170: FILE: include/asm-i386/mach-vmi/mach_io.h:56:
+	VMI_UINT8 ret;
+	vmi_wrap_call(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#170: FILE: include/asm-i386/mach-vmi/mach_io.h:56:
+	vmi_wrap_call(

WARNING:LINE_SPACING: Missing a blank line after declarations
#181: FILE: include/asm-i386/mach-vmi/mach_io.h:67:
+	VMI_UINT16 ret;
+	vmi_wrap_call(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#181: FILE: include/asm-i386/mach-vmi/mach_io.h:67:
+	vmi_wrap_call(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#191: FILE: include/asm-i386/mach-vmi/mach_io.h:77:
+	vmi_wrap_call(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: include/asm-i386/mach-vmi/mach_io.h:80:
+^I^I3, XCONC("S"(addr), "c"(count), "d"(port)), $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#200: FILE: include/asm-i386/mach-vmi/mach_io.h:86:
+	vmi_wrap_call(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: include/asm-i386/mach-vmi/mach_io.h:89:
+^I^I3, XCONC("S"(addr), "c"(count), "d"(port)), $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#209: FILE: include/asm-i386/mach-vmi/mach_io.h:95:
+	vmi_wrap_call(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: include/asm-i386/mach-vmi/mach_io.h:98:
+^I^I3, XCONC("S"(addr), "c"(count), "d"(port)), $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#218: FILE: include/asm-i386/mach-vmi/mach_io.h:104:
+	vmi_wrap_call(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: include/asm-i386/mach-vmi/mach_io.h:107:
+^I^I3, XCONC("D"(addr), "c"(count), "d"(port)), $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#227: FILE: include/asm-i386/mach-vmi/mach_io.h:113:
+	vmi_wrap_call(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: include/asm-i386/mach-vmi/mach_io.h:116:
+^I^I3, XCONC("D"(addr), "c"(count), "d"(port)), $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#236: FILE: include/asm-i386/mach-vmi/mach_io.h:122:
+	vmi_wrap_call(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: include/asm-i386/mach-vmi/mach_io.h:125:
+^I^I3, XCONC("D"(addr), "c"(count), "d"(port)), $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#243: FILE: include/asm-i386/mach-vmi/mach_io.h:129:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#252: FILE: include/asm-i386/mach-vmi/mach_io.h:138:
+	vmi_wrap_call(

CHECK:CAMELCASE: Avoid CamelCase: <IODelay>
#253: FILE: include/asm-i386/mach-vmi/mach_io.h:139:
+		IODelay, "outb %%al, $0x80",

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space required after that ',' (ctx:VxV)
#261: FILE: include/asm-i386/mach-vmi/mach_io.h:147:
+#define __BUILDOUTINST(bwl,bw,value,port) \
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#261: FILE: include/asm-i386/mach-vmi/mach_io.h:147:
+#define __BUILDOUTINST(bwl,bw,value,port) \
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#261: FILE: include/asm-i386/mach-vmi/mach_io.h:147:
+#define __BUILDOUTINST(bwl,bw,value,port) \
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#263: FILE: include/asm-i386/mach-vmi/mach_io.h:149:
+#define	__BUILDININST(bwl,bw,value,port) \
        	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#263: FILE: include/asm-i386/mach-vmi/mach_io.h:149:
+#define	__BUILDININST(bwl,bw,value,port) \
        	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#263: FILE: include/asm-i386/mach-vmi/mach_io.h:149:
+#define	__BUILDININST(bwl,bw,value,port) \
        	                          ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#263: FILE: include/asm-i386/mach-vmi/mach_io.h:149:
+#define	__BUILDININST(bwl,bw,value,port) \
+	do { value = vmi_in##bwl(port); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: include/asm-i386/mach-vmi/mach_io.h:151:
+#define	__BUILDOUTSINST(bwl,addr,count,port) \
        	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: include/asm-i386/mach-vmi/mach_io.h:151:
+#define	__BUILDOUTSINST(bwl,addr,count,port) \
        	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: include/asm-i386/mach-vmi/mach_io.h:151:
+#define	__BUILDOUTSINST(bwl,addr,count,port) \
        	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#267: FILE: include/asm-i386/mach-vmi/mach_io.h:153:
+#define	__BUILDINSINST(bwl,addr,count,port) \
        	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#267: FILE: include/asm-i386/mach-vmi/mach_io.h:153:
+#define	__BUILDINSINST(bwl,addr,count,port) \
        	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#267: FILE: include/asm-i386/mach-vmi/mach_io.h:153:
+#define	__BUILDINSINST(bwl,addr,count,port) \
        	                             ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#275: FILE: include/asm-i386/mach-default/mach_io.h:1:
+#ifndef _MACH_ASM_IO_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#279: FILE: include/asm-i386/mach-default/mach_io.h:5:
+#define __SLOW_DOWN_IO asm volatile("jmp 1f; 1: jmp 1f; 1:")

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#281: FILE: include/asm-i386/mach-default/mach_io.h:7:
+#define __SLOW_DOWN_IO asm volatile("outb %al, $0x80")

ERROR:SPACING: space required after that ',' (ctx:VxV)
#284: FILE: include/asm-i386/mach-default/mach_io.h:10:
+#define __BUILDOUTINST(bwl,bw,value,port) \
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#284: FILE: include/asm-i386/mach-default/mach_io.h:10:
+#define __BUILDOUTINST(bwl,bw,value,port) \
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#284: FILE: include/asm-i386/mach-default/mach_io.h:10:
+#define __BUILDOUTINST(bwl,bw,value,port) \
                                    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#284: FILE: include/asm-i386/mach-default/mach_io.h:10:
+#define __BUILDOUTINST(bwl,bw,value,port) \
+	__asm__ __volatile__("out" #bwl " %" #bw "0, %w1" : : "a"(value), "Nd"(port))

WARNING:TYPO_SPELLING: 'Nd' may be misspelled - perhaps 'And'?
#285: FILE: include/asm-i386/mach-default/mach_io.h:11:
+	__asm__ __volatile__("out" #bwl " %" #bw "0, %w1" : : "a"(value), "Nd"(port))
 	                                                                   ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#286: FILE: include/asm-i386/mach-default/mach_io.h:12:
+#define	__BUILDININST(bwl,bw,value,port) \
        	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#286: FILE: include/asm-i386/mach-default/mach_io.h:12:
+#define	__BUILDININST(bwl,bw,value,port) \
        	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#286: FILE: include/asm-i386/mach-default/mach_io.h:12:
+#define	__BUILDININST(bwl,bw,value,port) \
        	                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#286: FILE: include/asm-i386/mach-default/mach_io.h:12:
+#define	__BUILDININST(bwl,bw,value,port) \
+	__asm__ __volatile__("in" #bwl " %w1, %" #bw "0" : "=a"(value) : "Nd"(port))

WARNING:TYPO_SPELLING: 'Nd' may be misspelled - perhaps 'And'?
#287: FILE: include/asm-i386/mach-default/mach_io.h:13:
+	__asm__ __volatile__("in" #bwl " %w1, %" #bw "0" : "=a"(value) : "Nd"(port))
 	                                                                  ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#288: FILE: include/asm-i386/mach-default/mach_io.h:14:
+#define	__BUILDOUTSINST(bwl,addr,count,port) \
        	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#288: FILE: include/asm-i386/mach-default/mach_io.h:14:
+#define	__BUILDOUTSINST(bwl,addr,count,port) \
        	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#288: FILE: include/asm-i386/mach-default/mach_io.h:14:
+#define	__BUILDOUTSINST(bwl,addr,count,port) \
        	                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#288: FILE: include/asm-i386/mach-default/mach_io.h:14:
+#define	__BUILDOUTSINST(bwl,addr,count,port) \
+	__asm__ __volatile__("rep; outs" #bwl : "+S"(addr), "+c"(count) : "d"(port))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#290: FILE: include/asm-i386/mach-default/mach_io.h:16:
+#define	__BUILDINSINST(bwl,addr,count,port) \
        	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#290: FILE: include/asm-i386/mach-default/mach_io.h:16:
+#define	__BUILDINSINST(bwl,addr,count,port) \
        	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#290: FILE: include/asm-i386/mach-default/mach_io.h:16:
+#define	__BUILDINSINST(bwl,addr,count,port) \
        	                             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#290: FILE: include/asm-i386/mach-default/mach_io.h:16:
+#define	__BUILDINSINST(bwl,addr,count,port) \
+	__asm__ __volatile__("rep; ins" #bwl \
+			     : "+D"(addr), "+c"(count) \
+			     : "d"(port) \
+			     : "memory")

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095341.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 48 errors, 8 warnings, 15 checks, 230 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095341.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
