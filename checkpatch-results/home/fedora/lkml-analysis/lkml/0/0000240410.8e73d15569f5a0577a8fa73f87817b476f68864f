WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#51: 
   Signed-off-by: Anton Altaparmakov <aia21@cantab.net>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: fs/ntfs/mft.c:1018:
+static int ntfs_mft_bitmap_find_and_alloc_free_rec_nolock(ntfs_volume *vol,
+		ntfs_inode *base_ni)

WARNING:SPLIT_STRING: quoted string split across lines
#112: FILE: fs/ntfs/mft.c:1028:
+	ntfs_debug("Searching for free mft record in the currently "
+			"initialized mft bitmap.");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#139: FILE: fs/ntfs/mft.c:1055:
+	ntfs_debug("Starting bitmap search: pass %u, pass_start 0x%llx, "
+			"pass_end 0x%llx, data_pos 0x%llx.", pass,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: fs/ntfs/mft.c:1074:
+			page = ntfs_map_page(mftbmp_mapping,
+					ofs >> PAGE_CACHE_SHIFT);

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#159: FILE: fs/ntfs/mft.c:1075:
+			if (unlikely(IS_ERR(page))) {

WARNING:SPLIT_STRING: quoted string split across lines
#161: FILE: fs/ntfs/mft.c:1077:
+				ntfs_error(vol->sb, "Failed to read mft "
+						"bitmap, aborting.");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#164: FILE: fs/ntfs/mft.c:1080:
+			buf = (u8*)page_address(page) + page_ofs;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#168: FILE: fs/ntfs/mft.c:1084:
+			ntfs_debug("Before inner for loop: size 0x%x, "
+					"data_pos 0x%llx, bit 0x%llx", size,

WARNING:SPLIT_STRING: quoted string split across lines
#187: FILE: fs/ntfs/mft.c:1103:
+					ntfs_debug("Done.  (Found and "
+							"allocated mft record "

WARNING:SPLIT_STRING: quoted string split across lines
#188: FILE: fs/ntfs/mft.c:1104:
+							"allocated mft record "
+							"0x%llx.)",

WARNING:SPLIT_STRING: quoted string split across lines
#194: FILE: fs/ntfs/mft.c:1110:
+			ntfs_debug("After inner for loop: size 0x%x, "
+					"data_pos 0x%llx, bit 0x%llx", size,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#212: FILE: fs/ntfs/mft.c:1128:
+			data_pos = pass_start = 24;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPLIT_STRING: quoted string split across lines
#214: FILE: fs/ntfs/mft.c:1130:
+			ntfs_debug("pass %i, pass_start 0x%llx, pass_end "
+					"0x%llx.", pass, (long long)pass_start,

WARNING:SPLIT_STRING: quoted string split across lines
#222: FILE: fs/ntfs/mft.c:1138:
+	ntfs_debug("Done.  (No free mft records left in currently initialized "
+			"mft bitmap.)");

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#272: FILE: fs/ntfs/mft.c:1188:
+	if (unlikely(IS_ERR(rl) || !rl->length || rl->lcn < 0)) {

WARNING:SPLIT_STRING: quoted string split across lines
#274: FILE: fs/ntfs/mft.c:1190:
+		ntfs_error(vol->sb, "Failed to determine last allocated "
+				"cluster of mft bitmap attribute.");

CHECK:BRACES: braces {} should be used on all arms of this statement
#275: FILE: fs/ntfs/mft.c:1191:
+		if (!IS_ERR(rl)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#278: FILE: fs/ntfs/mft.c:1194:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: fs/ntfs/mft.c:1200:
+	ntfs_debug("Last lcn of mft bitmap attribute is 0x%llx.",
+			(long long)lcn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: fs/ntfs/mft.c:1208:
+	page = ntfs_map_page(vol->lcnbmp_ino->i_mapping,
+			ll >> PAGE_CACHE_SHIFT);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#298: FILE: fs/ntfs/mft.c:1214:
+	b = (u8*)page_address(page) + (ll & ~PAGE_CACHE_MASK);

WARNING:SPLIT_STRING: quoted string split across lines
#321: FILE: fs/ntfs/mft.c:1237:
+			ntfs_error(vol->sb, "Failed to allocate a cluster for "
+					"the mft bitmap.");

WARNING:SPLIT_STRING: quoted string split across lines
#328: FILE: fs/ntfs/mft.c:1244:
+			ntfs_error(vol->sb, "Failed to merge runlists for mft "
+					"bitmap.");

WARNING:TYPO_SPELLING: 'dealocate' may be misspelled - perhaps 'deallocate'?
#330: FILE: fs/ntfs/mft.c:1246:
+				ntfs_error(vol->sb, "Failed to dealocate "
 				                               ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPLIT_STRING: quoted string split across lines
#331: FILE: fs/ntfs/mft.c:1247:
+				ntfs_error(vol->sb, "Failed to dealocate "
+						"allocated cluster.%s", es);

CHECK:CAMELCASE: Avoid CamelCase: <NVolSetErrors>
#332: FILE: fs/ntfs/mft.c:1248:
+				NVolSetErrors(vol);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: fs/ntfs/mft.c:1277:
+	ret = ntfs_attr_lookup(mftbmp_ni->type, mftbmp_ni->name,
+			mftbmp_ni->name_len, CASE_SENSITIVE, rl[1].vcn, NULL,

WARNING:SPLIT_STRING: quoted string split across lines
#365: FILE: fs/ntfs/mft.c:1281:
+		ntfs_error(vol->sb, "Failed to find last attribute extent of "
+				"mft bitmap attribute.");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#377: FILE: fs/ntfs/mft.c:1293:
+	BUG_ON(ll < rl2->vcn);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#378: FILE: fs/ntfs/mft.c:1294:
+	BUG_ON(ll >= rl2->vcn + rl2->length);

WARNING:SPLIT_STRING: quoted string split across lines
#383: FILE: fs/ntfs/mft.c:1299:
+		ntfs_error(vol->sb, "Get size for mapping pairs failed for "
+				"mft bitmap attribute extent.");

WARNING:SPLIT_STRING: quoted string split across lines
#396: FILE: fs/ntfs/mft.c:1312:
+			ntfs_error(vol->sb, "Failed to resize attribute "
+					"record for mft bitmap attribute.");

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#403: FILE: fs/ntfs/mft.c:1319:
+				"accomodate extended mft bitmap attribute "
 				 ^^^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#403: FILE: fs/ntfs/mft.c:1319:
+		ntfs_error(vol->sb, "Not enough space in this mft record to "
+				"accomodate extended mft bitmap attribute "

WARNING:SPLIT_STRING: quoted string split across lines
#404: FILE: fs/ntfs/mft.c:1320:
+				"accomodate extended mft bitmap attribute "
+				"extent.  Cannot handle this yet.");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#410: FILE: fs/ntfs/mft.c:1326:
+	ret = ntfs_mapping_pairs_build(vol, (u8*)a +

WARNING:SPLIT_STRING: quoted string split across lines
#415: FILE: fs/ntfs/mft.c:1331:
+		ntfs_error(vol->sb, "Failed to build mapping pairs array for "
+				"mft bitmap attribute.");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#433: FILE: fs/ntfs/mft.c:1349:
+		ret = ntfs_attr_lookup(mftbmp_ni->type, mftbmp_ni->name,
+				mftbmp_ni->name_len, CASE_SENSITIVE, 0, NULL,

WARNING:SPLIT_STRING: quoted string split across lines
#437: FILE: fs/ntfs/mft.c:1353:
+			ntfs_error(vol->sb, "Failed to find first attribute "
+					"extent of mft bitmap attribute.");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#456: FILE: fs/ntfs/mft.c:1372:
+	if (ntfs_attr_lookup(mftbmp_ni->type, mftbmp_ni->name,
+			mftbmp_ni->name_len, CASE_SENSITIVE, rl[1].vcn, NULL,

WARNING:SPLIT_STRING: quoted string split across lines
#459: FILE: fs/ntfs/mft.c:1375:
+		ntfs_error(vol->sb, "Failed to find last attribute extent of "
+				"mft bitmap attribute.%s", es);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#492: FILE: fs/ntfs/mft.c:1408:
+		if (ntfs_mapping_pairs_build(vol, (u8*)a + le16_to_cpu(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#492: FILE: fs/ntfs/mft.c:1408:
+		if (ntfs_mapping_pairs_build(vol, (u8*)a + le16_to_cpu(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#494: FILE: fs/ntfs/mft.c:1410:
+				old_alen - le16_to_cpu(

WARNING:SPLIT_STRING: quoted string split across lines
#498: FILE: fs/ntfs/mft.c:1414:
+			ntfs_error(vol->sb, "Failed to restore mapping pairs "
+					"array.%s", es);

WARNING:SPLIT_STRING: quoted string split across lines
#503: FILE: fs/ntfs/mft.c:1419:
+			ntfs_error(vol->sb, "Failed to restore attribute "
+					"record.%s", es);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#558: FILE: fs/ntfs/mft.c:1474:
+	ret = ntfs_attr_lookup(mftbmp_ni->type, mftbmp_ni->name,
+			mftbmp_ni->name_len, CASE_SENSITIVE, 0, NULL, 0, ctx);

WARNING:SPLIT_STRING: quoted string split across lines
#561: FILE: fs/ntfs/mft.c:1477:
+		ntfs_error(vol->sb, "Failed to find first attribute extent of "
+				"mft bitmap attribute.");

WARNING:SPLIT_STRING: quoted string split across lines
#591: FILE: fs/ntfs/mft.c:1507:
+		ntfs_debug("Done.  (Wrote eight initialized bytes to mft "
+				"bitmap.");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#609: FILE: fs/ntfs/mft.c:1525:
+	if (ntfs_attr_lookup(mftbmp_ni->type, mftbmp_ni->name,
+			mftbmp_ni->name_len, CASE_SENSITIVE, 0, NULL, 0, ctx)) {

WARNING:SPLIT_STRING: quoted string split across lines
#611: FILE: fs/ntfs/mft.c:1527:
+		ntfs_error(vol->sb, "Failed to find first attribute extent of "
+				"mft bitmap attribute.%s", es);

WARNING:SPLIT_STRING: quoted string split across lines
#632: FILE: fs/ntfs/mft.c:1548:
+	ntfs_debug("Restored status of mftbmp: allocated_size 0x%llx, "
+			"data_size 0x%llx, initialized_size 0x%llx.",

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#683: FILE: fs/ntfs/mft.c:1599:
+	if (unlikely(IS_ERR(rl) || !rl->length || rl->lcn < 0)) {

WARNING:SPLIT_STRING: quoted string split across lines
#685: FILE: fs/ntfs/mft.c:1601:
+		ntfs_error(vol->sb, "Failed to determine last allocated "
+				"cluster of mft data attribute.");

CHECK:BRACES: braces {} should be used on all arms of this statement
#686: FILE: fs/ntfs/mft.c:1602:
+		if (!IS_ERR(rl)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#689: FILE: fs/ntfs/mft.c:1605:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#695: FILE: fs/ntfs/mft.c:1611:
+	ntfs_debug("Last lcn of mft data attribute is 0x%llx.",
+			(long long)lcn);

WARNING:SPLIT_STRING: quoted string split across lines
#713: FILE: fs/ntfs/mft.c:1629:
+			ntfs_warning(vol->sb, "Cannot allocate mft record "
+					"because the maximum number of inodes "

WARNING:SPLIT_STRING: quoted string split across lines
#714: FILE: fs/ntfs/mft.c:1630:
+					"because the maximum number of inodes "
+					"(2^32) has already been reached.");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#720: FILE: fs/ntfs/mft.c:1636:
+	ntfs_debug("Trying mft data allocation with %s cluster count %lli.",
+			nr > min_nr ? "default" : "minimal", (long long)nr);

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#724: FILE: fs/ntfs/mft.c:1640:
+		if (likely(!IS_ERR(rl2)))

WARNING:SPLIT_STRING: quoted string split across lines
#728: FILE: fs/ntfs/mft.c:1644:
+			ntfs_error(vol->sb, "Failed to allocate the minimal "
+					"number of clusters (%lli) for the "

WARNING:SPLIT_STRING: quoted string split across lines
#729: FILE: fs/ntfs/mft.c:1645:
+					"number of clusters (%lli) for the "
+					"mft data attribute.", (long long)nr);

WARNING:SPLIT_STRING: quoted string split across lines
#740: FILE: fs/ntfs/mft.c:1656:
+		ntfs_debug("Retrying mft data allocation with minimal cluster "
+				"count %lli.", (long long)nr);

WARNING:SPLIT_STRING: quoted string split across lines
#746: FILE: fs/ntfs/mft.c:1662:
+		ntfs_error(vol->sb, "Failed to merge runlists for mft data "
+				"attribute.");

WARNING:TYPO_SPELLING: 'dealocate' may be misspelled - perhaps 'deallocate'?
#748: FILE: fs/ntfs/mft.c:1664:
+			ntfs_error(vol->sb, "Failed to dealocate clusters "
 			                               ^^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#749: FILE: fs/ntfs/mft.c:1665:
+			ntfs_error(vol->sb, "Failed to dealocate clusters "
+					"from the mft data attribute.%s", es);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#774: FILE: fs/ntfs/mft.c:1690:
+	ret = ntfs_attr_lookup(mft_ni->type, mft_ni->name, mft_ni->name_len,
+			CASE_SENSITIVE, rl[1].vcn, NULL, 0, ctx);

WARNING:SPLIT_STRING: quoted string split across lines
#777: FILE: fs/ntfs/mft.c:1693:
+		ntfs_error(vol->sb, "Failed to find last attribute extent of "
+				"mft data attribute.");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#789: FILE: fs/ntfs/mft.c:1705:
+	BUG_ON(ll < rl2->vcn);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#790: FILE: fs/ntfs/mft.c:1706:
+	BUG_ON(ll >= rl2->vcn + rl2->length);

WARNING:SPLIT_STRING: quoted string split across lines
#795: FILE: fs/ntfs/mft.c:1711:
+		ntfs_error(vol->sb, "Get size for mapping pairs failed for "
+				"mft data attribute extent.");

WARNING:SPLIT_STRING: quoted string split across lines
#808: FILE: fs/ntfs/mft.c:1724:
+			ntfs_error(vol->sb, "Failed to resize attribute "
+					"record for mft data attribute.");

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#818: FILE: fs/ntfs/mft.c:1734:
+				"accomodate extended mft data attribute "
 				 ^^^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#818: FILE: fs/ntfs/mft.c:1734:
+		ntfs_error(vol->sb, "Not enough space in this mft record to "
+				"accomodate extended mft data attribute "

WARNING:SPLIT_STRING: quoted string split across lines
#819: FILE: fs/ntfs/mft.c:1735:
+				"accomodate extended mft data attribute "
+				"extent.  Cannot handle this yet.");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#825: FILE: fs/ntfs/mft.c:1741:
+	ret = ntfs_mapping_pairs_build(vol, (u8*)a +

WARNING:SPLIT_STRING: quoted string split across lines
#830: FILE: fs/ntfs/mft.c:1746:
+		ntfs_error(vol->sb, "Failed to build mapping pairs array of "
+				"mft data attribute.");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#850: FILE: fs/ntfs/mft.c:1766:
+		ret = ntfs_attr_lookup(mft_ni->type, mft_ni->name,
+				mft_ni->name_len, CASE_SENSITIVE, 0, NULL, 0,

WARNING:SPLIT_STRING: quoted string split across lines
#854: FILE: fs/ntfs/mft.c:1770:
+			ntfs_error(vol->sb, "Failed to find first attribute "
+					"extent of mft data attribute.");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#873: FILE: fs/ntfs/mft.c:1789:
+	if (ntfs_attr_lookup(mft_ni->type, mft_ni->name, mft_ni->name_len,
+			CASE_SENSITIVE, rl[1].vcn, NULL, 0, ctx)) {

WARNING:SPLIT_STRING: quoted string split across lines
#875: FILE: fs/ntfs/mft.c:1791:
+		ntfs_error(vol->sb, "Failed to find last attribute extent of "
+				"mft data attribute.%s", es);

WARNING:SPLIT_STRING: quoted string split across lines
#892: FILE: fs/ntfs/mft.c:1808:
+		ntfs_error(vol->sb, "Failed to free clusters from mft data "
+				"attribute.%s", es);

WARNING:SPLIT_STRING: quoted string split across lines
#897: FILE: fs/ntfs/mft.c:1813:
+		ntfs_error(vol->sb, "Failed to truncate mft data attribute "
+				"runlist.%s", es);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#901: FILE: fs/ntfs/mft.c:1817:
+		if (ntfs_mapping_pairs_build(vol, (u8*)a + le16_to_cpu(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#901: FILE: fs/ntfs/mft.c:1817:
+		if (ntfs_mapping_pairs_build(vol, (u8*)a + le16_to_cpu(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#903: FILE: fs/ntfs/mft.c:1819:
+				old_alen - le16_to_cpu(

WARNING:SPLIT_STRING: quoted string split across lines
#907: FILE: fs/ntfs/mft.c:1823:
+			ntfs_error(vol->sb, "Failed to restore mapping pairs "
+					"array.%s", es);

WARNING:SPLIT_STRING: quoted string split across lines
#912: FILE: fs/ntfs/mft.c:1828:
+			ntfs_error(vol->sb, "Failed to restore attribute "
+					"record.%s", es);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#940: FILE: fs/ntfs/mft.c:1856:
+static int ntfs_mft_record_layout(const ntfs_volume *vol, const s64 mft_no,
+		MFT_RECORD *m)

WARNING:SPLIT_STRING: quoted string split across lines
#947: FILE: fs/ntfs/mft.c:1863:
+		ntfs_error(vol->sb, "Mft record number 0x%llx exceeds "
+				"maximum of 2^32.", (long long)mft_no);

CHECK:BRACES: braces {} should be used on all arms of this statement
#953: FILE: fs/ntfs/mft.c:1869:
+	if (vol->major_ver < 3 || (vol->major_ver == 3 && !vol->minor_ver))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#955: FILE: fs/ntfs/mft.c:1871:
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#968: FILE: fs/ntfs/mft.c:1884:
+	else {

WARNING:SPLIT_STRING: quoted string split across lines
#971: FILE: fs/ntfs/mft.c:1887:
+		ntfs_warning(vol->sb, "Sector size is bigger than mft record "
+				"size.  Setting usa_count to 1.  If chkdsk "

WARNING:SPLIT_STRING: quoted string split across lines
#972: FILE: fs/ntfs/mft.c:1888:
+				"size.  Setting usa_count to 1.  If chkdsk "
+				"reports this as corruption, please email "

WARNING:SPLIT_STRING: quoted string split across lines
#973: FILE: fs/ntfs/mft.c:1889:
+				"reports this as corruption, please email "
+				"linux-ntfs-dev@lists.sourceforge.net stating "

WARNING:SPLIT_STRING: quoted string split across lines
#974: FILE: fs/ntfs/mft.c:1890:
+				"linux-ntfs-dev@lists.sourceforge.net stating "
+				"that you saw this message and that the "

WARNING:SPLIT_STRING: quoted string split across lines
#975: FILE: fs/ntfs/mft.c:1891:
+				"that you saw this message and that the "
+				"modified file system created was corrupt.  "

WARNING:SPLIT_STRING: quoted string split across lines
#976: FILE: fs/ntfs/mft.c:1892:
+				"modified file system created was corrupt.  "
+				"Thank you.");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#979: FILE: fs/ntfs/mft.c:1895:
+	*(le16*)((u8*)m + le16_to_cpu(m->usa_ofs)) = cpu_to_le16(1);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#979: FILE: fs/ntfs/mft.c:1895:
+	*(le16*)((u8*)m + le16_to_cpu(m->usa_ofs)) = cpu_to_le16(1);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1000: FILE: fs/ntfs/mft.c:1916:
+	a = (ATTR_RECORD*)((u8*)m + le16_to_cpu(m->attrs_offset));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1000: FILE: fs/ntfs/mft.c:1916:
+	a = (ATTR_RECORD*)((u8*)m + le16_to_cpu(m->attrs_offset));

WARNING:SPLIT_STRING: quoted string split across lines
#1040: FILE: fs/ntfs/mft.c:1956:
+			ntfs_error(vol->sb, "Tried to format non-existing mft "
+					"record 0x%llx.", (long long)mft_no);

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#1046: FILE: fs/ntfs/mft.c:1962:
+	if (unlikely(IS_ERR(page))) {

WARNING:SPLIT_STRING: quoted string split across lines
#1048: FILE: fs/ntfs/mft.c:1964:
+		ntfs_error(vol->sb, "Failed to map page containing mft record "
+				"to format 0x%llx.", (long long)mft_no);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1052: FILE: fs/ntfs/mft.c:1968:
+	BUG_ON(!PageUptodate(page));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1054: FILE: fs/ntfs/mft.c:1970:
+	m = (MFT_RECORD*)((u8*)page_address(page) + ofs);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1054: FILE: fs/ntfs/mft.c:1970:
+	m = (MFT_RECORD*)((u8*)page_address(page) + ofs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1058: FILE: fs/ntfs/mft.c:1974:
+		ntfs_error(vol->sb, "Failed to layout mft record 0x%llx.",
+				(long long)mft_no);

WARNING:TYPO_SPELLING: 'direvctory' may be misspelled - perhaps 'directory'?
#1088: FILE: fs/ntfs/mft.c:2004:
+ * direvctory inode, and allocate it at the default allocator position.  In
    ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'superflous' may be misspelled - perhaps 'superfluous'?
#1140: FILE: fs/ntfs/mft.c:2056:
+ * superflous bits are padded with zeroes.
    ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1169: FILE: fs/ntfs/mft.c:2085:
+ntfs_inode *ntfs_mft_record_alloc(ntfs_volume *vol, const int mode,
+		ntfs_inode *base_ni, MFT_RECORD **mrec)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1184: FILE: fs/ntfs/mft.c:2100:
+	if (base_ni) {
[...]
+	} else
[...]

WARNING:SPLIT_STRING: quoted string split across lines
#1186: FILE: fs/ntfs/mft.c:2102:
+		ntfs_debug("Entering (allocating an extent mft record for "
+				"base mft record 0x%llx).",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1189: FILE: fs/ntfs/mft.c:2105:
+		BUG_ON(mode);

CHECK:BRACES: Unbalanced braces around else statement
#1190: FILE: fs/ntfs/mft.c:2106:
+	} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1194: FILE: fs/ntfs/mft.c:2110:
+		BUG_ON(base_ni);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1199: FILE: fs/ntfs/mft.c:2115:
+	BUG_ON(!mrec);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1206: FILE: fs/ntfs/mft.c:2122:
+		ntfs_debug("Found and allocated free record (#1), bit 0x%llx.",
+				(long long)bit);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1223: FILE: fs/ntfs/mft.c:2139:
+	if (mftbmp_ni->initialized_size << 3 > ll &&
+			mftbmp_ni->initialized_size > 3) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1230: FILE: fs/ntfs/mft.c:2146:
+		ntfs_debug("Found free record (#2), bit 0x%llx.",
+				(long long)bit);

WARNING:SPLIT_STRING: quoted string split across lines
#1242: FILE: fs/ntfs/mft.c:2158:
+	ntfs_debug("Status of mftbmp before extension: allocated_size 0x%llx, "
+			"data_size 0x%llx, initialized_size 0x%llx.",

WARNING:SPLIT_STRING: quoted string split across lines
#1255: FILE: fs/ntfs/mft.c:2171:
+		ntfs_debug("Status of mftbmp after allocation extension: "
+				"allocated_size 0x%llx, data_size 0x%llx, "

WARNING:SPLIT_STRING: quoted string split across lines
#1256: FILE: fs/ntfs/mft.c:2172:
+				"allocated_size 0x%llx, data_size 0x%llx, "
+				"initialized_size 0x%llx.",

WARNING:TYPO_SPELLING: 'extention' may be misspelled - perhaps 'extension'?
#1271: FILE: fs/ntfs/mft.c:2187:
+	ntfs_debug("Status of mftbmp after initialized extention: "
 	                                               ^^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1272: FILE: fs/ntfs/mft.c:2188:
+	ntfs_debug("Status of mftbmp after initialized extention: "
+			"allocated_size 0x%llx, data_size 0x%llx, "

WARNING:SPLIT_STRING: quoted string split across lines
#1273: FILE: fs/ntfs/mft.c:2189:
+			"allocated_size 0x%llx, data_size 0x%llx, "
+			"initialized_size 0x%llx.",

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1290: FILE: fs/ntfs/mft.c:2206:
+	 * The mft bitmap is now uptodate.  Deal with mft data attribute now.
 	                         ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1310: FILE: fs/ntfs/mft.c:2226:
+	ntfs_debug("Status of mft data before extension: "
+			"allocated_size 0x%llx, data_size 0x%llx, "

WARNING:SPLIT_STRING: quoted string split across lines
#1311: FILE: fs/ntfs/mft.c:2227:
+			"allocated_size 0x%llx, data_size 0x%llx, "
+			"initialized_size 0x%llx.",

WARNING:SPLIT_STRING: quoted string split across lines
#1319: FILE: fs/ntfs/mft.c:2235:
+			ntfs_error(vol->sb, "Failed to extend mft data "
+					"allocation.");

WARNING:SPLIT_STRING: quoted string split across lines
#1323: FILE: fs/ntfs/mft.c:2239:
+		ntfs_debug("Status of mft data after allocation extension: "
+				"allocated_size 0x%llx, data_size 0x%llx, "

WARNING:SPLIT_STRING: quoted string split across lines
#1324: FILE: fs/ntfs/mft.c:2240:
+				"allocated_size 0x%llx, data_size 0x%llx, "
+				"initialized_size 0x%llx.",

WARNING:TYPO_SPELLING: 'allong' may be misspelled - perhaps 'along'?
#1331: FILE: fs/ntfs/mft.c:2247:
+	 * the allocated mft record, formatting the mft records allong the way.
 	                                                        ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1340: FILE: fs/ntfs/mft.c:2256:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1347: FILE: fs/ntfs/mft.c:2263:
+		ntfs_debug("Initializing mft record 0x%llx.",
+				(long long)mft_no);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1371: FILE: fs/ntfs/mft.c:2287:
+	err = ntfs_attr_lookup(mft_ni->type, mft_ni->name, mft_ni->name_len,
+			CASE_SENSITIVE, 0, NULL, 0, ctx);

WARNING:SPLIT_STRING: quoted string split across lines
#1374: FILE: fs/ntfs/mft.c:2290:
+		ntfs_error(vol->sb, "Failed to find first attribute extent of "
+				"mft data attribute.");

WARNING:SPLIT_STRING: quoted string split across lines
#1389: FILE: fs/ntfs/mft.c:2305:
+	ntfs_debug("Status of mft data after mft record initialization: "
+			"allocated_size 0x%llx, data_size 0x%llx, "

WARNING:SPLIT_STRING: quoted string split across lines
#1390: FILE: fs/ntfs/mft.c:2306:
+			"allocated_size 0x%llx, data_size 0x%llx, "
+			"initialized_size 0x%llx.",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1394: FILE: fs/ntfs/mft.c:2310:
+	BUG_ON(vol->mft_ino->i_size > mft_ni->allocated_size);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1395: FILE: fs/ntfs/mft.c:2311:
+	BUG_ON(mft_ni->initialized_size > vol->mft_ino->i_size);

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#1415: FILE: fs/ntfs/mft.c:2331:
+	if (unlikely(IS_ERR(page))) {

WARNING:SPLIT_STRING: quoted string split across lines
#1417: FILE: fs/ntfs/mft.c:2333:
+		ntfs_error(vol->sb, "Failed to map page containing allocated "
+				"mft record 0x%llx.", (long long)bit);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1422: FILE: fs/ntfs/mft.c:2338:
+	BUG_ON(!PageUptodate(page));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1424: FILE: fs/ntfs/mft.c:2340:
+	m = (MFT_RECORD*)((u8*)page_address(page) + ofs);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1424: FILE: fs/ntfs/mft.c:2340:
+	m = (MFT_RECORD*)((u8*)page_address(page) + ofs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1429: FILE: fs/ntfs/mft.c:2345:
+		if (ntfs_is_file_record(m->magic) &&
+				(m->flags & MFT_RECORD_IN_USE)) {

WARNING:SPLIT_STRING: quoted string split across lines
#1431: FILE: fs/ntfs/mft.c:2347:
+			ntfs_error(vol->sb, "Mft record 0x%llx was marked "
+					"free in mft bitmap but is marked "

WARNING:SPLIT_STRING: quoted string split across lines
#1432: FILE: fs/ntfs/mft.c:2348:
+					"free in mft bitmap but is marked "
+					"used itself.  Corrupt filesystem.  "

WARNING:SPLIT_STRING: quoted string split across lines
#1433: FILE: fs/ntfs/mft.c:2349:
+					"used itself.  Corrupt filesystem.  "
+					"Unmount and run chkdsk.",

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1450: FILE: fs/ntfs/mft.c:2366:
+		usn = *(le16*)((u8*)m + le16_to_cpu(m->usa_ofs));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1450: FILE: fs/ntfs/mft.c:2366:
+		usn = *(le16*)((u8*)m + le16_to_cpu(m->usa_ofs));

WARNING:SPLIT_STRING: quoted string split across lines
#1454: FILE: fs/ntfs/mft.c:2370:
+			ntfs_error(vol->sb, "Failed to layout allocated mft "
+					"record 0x%llx.", (long long)bit);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1463: FILE: fs/ntfs/mft.c:2379:
+			*(le16*)((u8*)m + le16_to_cpu(m->usa_ofs)) = usn;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1463: FILE: fs/ntfs/mft.c:2379:
+			*(le16*)((u8*)m + le16_to_cpu(m->usa_ofs)) = usn;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1478: FILE: fs/ntfs/mft.c:2394:
+		m->base_mft_record = MK_LE_MREF(base_ni->mft_no,
+				base_ni->seq_no);

WARNING:SPLIT_STRING: quoted string split across lines
#1487: FILE: fs/ntfs/mft.c:2403:
+			ntfs_error(vol->sb, "Failed to map allocated extent "
+					"mft record 0x%llx.", (long long)bit);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1490: FILE: fs/ntfs/mft.c:2406:
+			m->flags &= cpu_to_le16(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1523: FILE: fs/ntfs/mft.c:2439:
+			m->flags &= cpu_to_le16(

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#1557: FILE: fs/ntfs/mft.c:2473:
+			vi->i_mode = S_IFDIR | S_IRWXUGO;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:CAMELCASE: Avoid CamelCase: <NInoSetMstProtected>
#1560: FILE: fs/ntfs/mft.c:2476:
+			NInoSetMstProtected(ni);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#1578: FILE: fs/ntfs/mft.c:2494:
+			vi->i_mode = S_IFREG | S_IRWXUGO;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#1586: FILE: fs/ntfs/mft.c:2502:
+			vi->i_mode &= ~S_IWUGO;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1589: FILE: fs/ntfs/mft.c:2505:
+		vi->i_atime = vi->i_mtime = vi->i_ctime = current_kernel_time();

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1598: FILE: fs/ntfs/mft.c:2514:
+		vi->i_generation = ni->seq_no = le16_to_cpu(m->sequence_number);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1631: FILE: fs/ntfs/mft.c:2547:
+	ntfs_debug("Returning opened, allocated %sinode 0x%llx.",
+			base_ni ? "extent " : "", (long long)bit);

WARNING:SPLIT_STRING: quoted string split across lines
#1650: FILE: fs/ntfs/mft.c:2566:
+	ntfs_warning(vol->sb, "Cannot allocate mft record because the maximum "
+			"number of inodes (2^32) has already been reached.");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1666: FILE: fs/ntfs/mft.h:121:
+extern ntfs_inode *ntfs_mft_record_alloc(ntfs_volume *vol, const int mode,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1667: FILE: fs/ntfs/mft.h:122:
+extern ntfs_inode *ntfs_mft_record_alloc(ntfs_volume *vol, const int mode,
+		ntfs_inode *base_ni, MFT_RECORD **mrec);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240410.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 107 warnings, 47 checks, 1595 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240410.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
