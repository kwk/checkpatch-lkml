WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#55: FILE: drivers/i2c/busses/i2c-i801.c:44:
+/* Another note: This interface is extremely sensitive to timing and
+   failure handling.  If you don't wait at least one jiffie after

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#60: FILE: drivers/i2c/busses/i2c-i801.c:49:
+   work any more.  Gotta love this hardware. */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#88: FILE: drivers/i2c/busses/i2c-i801.c:122:
+struct i801_i2c_data
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#99: FILE: drivers/i2c/busses/i2c-i801.c:133:
+};
+struct i801_i2c_data i801_data;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: drivers/i2c/busses/i2c-i801.c:229:
+		if (entry->smbus.size != I2C_SMBUS_QUICK &&
+		   entry->smbus.size != I2C_SMBUS_I2C_BLOCK_DATA)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry->result < 0'
#158: FILE: drivers/i2c/busses/i2c-i801.c:234:
+	if (d->block || (entry->result < 0) ||
+	   ((entry->smbus.read_write == I2C_SMBUS_WRITE)
+	    || (d->xact == I801_QUICK)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry->smbus.read_write == I2C_SMBUS_WRITE'
#158: FILE: drivers/i2c/busses/i2c-i801.c:234:
+	if (d->block || (entry->result < 0) ||
+	   ((entry->smbus.read_write == I2C_SMBUS_WRITE)
+	    || (d->xact == I801_QUICK)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'd->xact == I801_QUICK'
#158: FILE: drivers/i2c/busses/i2c-i801.c:234:
+	if (d->block || (entry->result < 0) ||
+	   ((entry->smbus.read_write == I2C_SMBUS_WRITE)
+	    || (d->xact == I801_QUICK)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: drivers/i2c/busses/i2c-i801.c:235:
+	if (d->block || (entry->result < 0) ||
+	   ((entry->smbus.read_write == I2C_SMBUS_WRITE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#160: FILE: drivers/i2c/busses/i2c-i801.c:236:
+	   ((entry->smbus.read_write == I2C_SMBUS_WRITE)
+	    || (d->xact == I801_QUICK)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#184: FILE: drivers/i2c/busses/i2c-i801.c:260:
+	if ((d->hststs = (0x1f & inb_p(SMBHSTSTS))) != 0x00) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPLIT_STRING: quoted string split across lines
#186: FILE: drivers/i2c/busses/i2c-i801.c:262:
+		dev_dbg(&I801_dev->dev, "Failed reset at end of transaction"
+			"(%02x)\n", d->hststs);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#189: FILE: drivers/i2c/busses/i2c-i801.c:265:
+	dev_dbg(&I801_dev->dev, "Transaction (post): CNT=%02x, CMD=%02x, "
+		"ADD=%02x, DAT0=%02x, DAT1=%02x\n", inb_p(SMBHSTCNT),

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#224: FILE: drivers/i2c/busses/i2c-i801.c:296:
+	if ((d->hststs = (0x1f & inb_p(SMBHSTSTS))) != 0x00) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#233: FILE: drivers/i2c/busses/i2c-i801.c:300:
+		if ((d->hststs = (0x1f & inb_p(SMBHSTSTS))) != 0x00) {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#282: FILE: drivers/i2c/busses/i2c-i801.c:329:
+	if (entry->result >= 0 &&
+	   isich4 &&
+	   entry->smbus.size == I2C_SMBUS_BLOCK_DATA_PEC)
+	{

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: drivers/i2c/busses/i2c-i801.c:330:
+	if (entry->result >= 0 &&
+	   isich4 &&

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: drivers/i2c/busses/i2c-i801.c:336:
+^I^I^Ioutb_p(d->hststs, SMBHSTSTS); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: drivers/i2c/busses/i2c-i801.c:340:
+^I^I^Ioutb_p(d->hststs, SMBHSTSTS); $

CHECK:BRACES: Unbalanced braces around else statement
#297: FILE: drivers/i2c/busses/i2c-i801.c:344:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#331: FILE: drivers/i2c/busses/i2c-i801.c:370:
+	dev_dbg(&I801_dev->dev, "Block (pre %d): CNT=%02x, CMD=%02x, "
+		"ADD=%02x, DAT0=%02x, BLKDAT=%02x\n", d->i,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: drivers/i2c/busses/i2c-i801.c:377:
+^I^I/* Erronenous conditions before transaction: $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#339: FILE: drivers/i2c/busses/i2c-i801.c:378:
+		 * Byte_Done, Failed, Bus_Err, Dev_Err, Intr, Host_Busy */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: drivers/i2c/busses/i2c-i801.c:379:
+^I^Ierrmask=0x9f; $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#340: FILE: drivers/i2c/busses/i2c-i801.c:379:
+		errmask=0x9f; 
 		       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: drivers/i2c/busses/i2c-i801.c:381:
+^I^I/* Erronenous conditions during transaction: $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#343: FILE: drivers/i2c/busses/i2c-i801.c:382:
+		 * Failed, Bus_Err, Dev_Err, Intr */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: drivers/i2c/busses/i2c-i801.c:383:
+^I^Ierrmask=0x1e; $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#344: FILE: drivers/i2c/busses/i2c-i801.c:383:
+		errmask=0x1e; 
 		       ^

WARNING:SPLIT_STRING: quoted string split across lines
#348: FILE: drivers/i2c/busses/i2c-i801.c:387:
+		dev_dbg(&I801_dev->dev, "SMBus busy (%02x). "
+			"Resetting... \n", d->hststs);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#348: FILE: drivers/i2c/busses/i2c-i801.c:387:
+			"Resetting... \n", d->hststs);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#350: FILE: drivers/i2c/busses/i2c-i801.c:389:
+		if (((d->hststs = inb_p(SMBHSTSTS)) & errmask) != 0x00) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#376: FILE: drivers/i2c/busses/i2c-i801.c:407:
+/* Called on timer ticks.  This checks the result of the
+   transaction. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#376: FILE: drivers/i2c/busses/i2c-i801.c:407:
+   transaction. */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#429: FILE: drivers/i2c/busses/i2c-i801.c:435:
+	if (entry->smbus.read_write == I2C_SMBUS_WRITE && d->i+1 <= d->len)
 	                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#430: FILE: drivers/i2c/busses/i2c-i801.c:436:
+		outb_p(entry->smbus.data->block[d->i+1], SMBBLKDAT);
 		                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#433: FILE: drivers/i2c/busses/i2c-i801.c:439:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#434: FILE: drivers/i2c/busses/i2c-i801.c:440:
+	if ((d->hststs = (0x1e & inb_p(SMBHSTSTS))) != 0x00) {

WARNING:SPLIT_STRING: quoted string split across lines
#440: FILE: drivers/i2c/busses/i2c-i801.c:446:
+	dev_dbg(&I801_dev->dev, "Block (post %d): CNT=%02x, CMD=%02x, "
+		"ADD=%02x, DAT0=%02x, BLKDAT=%02x\n", d->i,

ERROR:SPACING: space required before the open parenthesis '('
#469: FILE: drivers/i2c/busses/i2c-i801.c:473:
+	if(isich4 && entry->smbus.size != I2C_SMBUS_I2C_BLOCK_DATA) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#469: FILE: drivers/i2c/busses/i2c-i801.c:473:
+	if(isich4 && entry->smbus.size != I2C_SMBUS_I2C_BLOCK_DATA) {
 		/* set 32 byte buffer */
 	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#558: FILE: drivers/i2c/busses/i2c-i801.c:497:
+		/* We delay an extra poll to keep the hardware happy.
+		   Otherwise the hardware is not ready when we start

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#559: FILE: drivers/i2c/busses/i2c-i801.c:498:
+		   the next operation. */

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#598: FILE: drivers/i2c/busses/i2c-i801.c:510:
+		if (d->wait_intr) {
[...]
+		} else {
[...]

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#624: FILE: drivers/i2c/busses/i2c-i801.c:527:
+/* Start a general SMBUS transaction on the i801.  Figure out what
+   kind of transaction it is, set it up, and start it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#624: FILE: drivers/i2c/busses/i2c-i801.c:527:
+   kind of transaction it is, set it up, and start it. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#768: FILE: drivers/i2c/busses/i2c-i801.c:621:
+		if (entry->smbus.size != I2C_SMBUS_QUICK &&
+		   entry->smbus.size != I2C_SMBUS_I2C_BLOCK_DATA)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#797: FILE: drivers/i2c/busses/i2c-i801.c:639:
+	/* Wait extra long here, we want at least 2 ticks to guarantee
+	   we wait >= 1 tick.  But we want to wait at least 100us no

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#798: FILE: drivers/i2c/busses/i2c-i801.c:640:
+	   matter what. */

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#853: FILE: drivers/i2c/busses/i2c-i801.c:699:
+static int __devinit i801_probe(struct pci_dev *dev,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000203361.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 21 warnings, 12 checks, 799 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000203361.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
