CHECK:CAMELCASE: Avoid CamelCase: <MD5Context>
#84: FILE: fs/cifs/cifsencrypt.c:85:
+	struct  MD5Context context;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iov == NULL'
#89: FILE: fs/cifs/cifsencrypt.c:88:
+	if((iov == NULL) || (signature == NULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'signature == NULL'
#89: FILE: fs/cifs/cifsencrypt.c:88:
+	if((iov == NULL) || (signature == NULL))

ERROR:SPACING: space required before the open parenthesis '('
#89: FILE: fs/cifs/cifsencrypt.c:88:
+	if((iov == NULL) || (signature == NULL))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iov"
#89: FILE: fs/cifs/cifsencrypt.c:88:
+	if((iov == NULL) || (signature == NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!signature"
#89: FILE: fs/cifs/cifsencrypt.c:88:
+	if((iov == NULL) || (signature == NULL))

CHECK:CAMELCASE: Avoid CamelCase: <MD5Init>
#93: FILE: fs/cifs/cifsencrypt.c:91:
+	MD5Init(&context);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#94: FILE: fs/cifs/cifsencrypt.c:92:
+	MD5Update(&context,key,CIFS_SESSION_KEY_SIZE+16);
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#94: FILE: fs/cifs/cifsencrypt.c:92:
+	MD5Update(&context,key,CIFS_SESSION_KEY_SIZE+16);
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#94: FILE: fs/cifs/cifsencrypt.c:92:
+	MD5Update(&context,key,CIFS_SESSION_KEY_SIZE+16);
 	                                            ^

CHECK:CAMELCASE: Avoid CamelCase: <MD5Update>
#94: FILE: fs/cifs/cifsencrypt.c:92:
+	MD5Update(&context,key,CIFS_SESSION_KEY_SIZE+16);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#95: FILE: fs/cifs/cifsencrypt.c:93:
+	for(i=0;i<n_vec;i++) {
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#95: FILE: fs/cifs/cifsencrypt.c:93:
+	for(i=0;i<n_vec;i++) {
 	       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#95: FILE: fs/cifs/cifsencrypt.c:93:
+	for(i=0;i<n_vec;i++) {
 	         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#95: FILE: fs/cifs/cifsencrypt.c:93:
+	for(i=0;i<n_vec;i++) {
 	               ^

ERROR:SPACING: space required before the open parenthesis '('
#95: FILE: fs/cifs/cifsencrypt.c:93:
+	for(i=0;i<n_vec;i++) {

ERROR:SPACING: space required before the open parenthesis '('
#96: FILE: fs/cifs/cifsencrypt.c:94:
+		if(iov[i].iov_base == NULL) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#96: FILE: fs/cifs/cifsencrypt.c:94:
+		if(iov[i].iov_base == NULL) {
[...]
+		} else if(iov[i].iov_len == 0)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iov[i].iov_base"
#96: FILE: fs/cifs/cifsencrypt.c:94:
+		if(iov[i].iov_base == NULL) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#97: FILE: fs/cifs/cifsencrypt.c:95:
+			cERROR(1,("null iovec entry"));
 			        ^

CHECK:CAMELCASE: Avoid CamelCase: <cERROR>
#97: FILE: fs/cifs/cifsencrypt.c:95:
+			cERROR(1,("null iovec entry"));

ERROR:SPACING: space required before the open parenthesis '('
#99: FILE: fs/cifs/cifsencrypt.c:97:
+		} else if(iov[i].iov_len == 0)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#102: FILE: fs/cifs/cifsencrypt.c:100:
+		/* The first entry includes a length field (which does not get
+		   signed that occupies the first 4 bytes before the header */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#102: FILE: fs/cifs/cifsencrypt.c:100:
+		   signed that occupies the first 4 bytes before the header */

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#103: FILE: fs/cifs/cifsencrypt.c:101:
+		if(i==0) {
 		    ^

ERROR:SPACING: space required before the open parenthesis '('
#103: FILE: fs/cifs/cifsencrypt.c:101:
+		if(i==0) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#103: FILE: fs/cifs/cifsencrypt.c:101:
+		if(i==0) {
[...]
+		} else
[...]

ERROR:SPACING: space prohibited before that close parenthesis ')'
#104: FILE: fs/cifs/cifsencrypt.c:102:
+			if (iov[0].iov_len <= 8 ) /* cmd field at offset 9 */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#106: FILE: fs/cifs/cifsencrypt.c:104:
+			MD5Update(&context,iov[0].iov_base+4, iov[0].iov_len-4);
 			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#106: FILE: fs/cifs/cifsencrypt.c:104:
+			MD5Update(&context,iov[0].iov_base+4, iov[0].iov_len-4);
 			                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#106: FILE: fs/cifs/cifsencrypt.c:104:
+			MD5Update(&context,iov[0].iov_base+4, iov[0].iov_len-4);
 			                                                    ^

CHECK:BRACES: Unbalanced braces around else statement
#107: FILE: fs/cifs/cifsencrypt.c:105:
+		} else

ERROR:SPACING: space required after that ',' (ctx:VxV)
#108: FILE: fs/cifs/cifsencrypt.c:106:
+			MD5Update(&context,iov[i].iov_base, iov[i].iov_len);
 			                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#112: FILE: fs/cifs/cifsencrypt.c:109:
+	MD5Final(signature,&context);
 	                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#112: FILE: fs/cifs/cifsencrypt.c:109:
+	MD5Final(signature,&context);
 	                   ^

CHECK:CAMELCASE: Avoid CamelCase: <MD5Final>
#112: FILE: fs/cifs/cifsencrypt.c:109:
+	MD5Final(signature,&context);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000085567.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 2 warnings, 16 checks, 52 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000085567.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
