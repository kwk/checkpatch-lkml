ERROR:TRAILING_WHITESPACE: trailing whitespace
#37: FILE: drivers/block/nbd.c:41:
+ * why not: would need access_ok and friends, would share yet another $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: drivers/cdrom/cdu31a.c:2793:
+			if (!access_ok(VERIFY_WRITE, ra.buf,
+					CD_FRAMESIZE_RAW * ra.nframes))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#121: FILE: drivers/cdrom/sbpcd.c:4270:
+		if (!access_ok(VERIFY_WRITE, read_audio.buf,
+			      read_audio.nframes*CD_FRAMESIZE_RAW))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#121: FILE: drivers/cdrom/sbpcd.c:4270:
+			      read_audio.nframes*CD_FRAMESIZE_RAW))
 			                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: drivers/cdrom/sbpcd.c:4271:
+                ^IRETURN_UP(-EFAULT);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#122: FILE: drivers/cdrom/sbpcd.c:4271:
+                ^IRETURN_UP(-EFAULT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: drivers/cdrom/sbpcd.c:4271:
+                ^IRETURN_UP(-EFAULT);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: drivers/cdrom/sjcd.c:834:
+^I^I^I     access_ok(VERIFY_READ, argp, sizeof(sjcd_msf)) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: drivers/cdrom/sjcd.c:835:
+^I^I^I     ^I^I? 0 : -EFAULT) == 0) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#136: FILE: drivers/cdrom/sjcd.c:835:
+^I^I^I     ^I^I? 0 : -EFAULT) == 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: drivers/cdrom/sjcd.c:892:
+^I^I^I     ^I^I? 0 : -EFAULT) == 0) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#147: FILE: drivers/cdrom/sjcd.c:892:
+^I^I^I     ^I^I? 0 : -EFAULT) == 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: drivers/cdrom/sjcd.c:947:
+^I^I^I     ^I^I? 0 : -EFAULT) == 0) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#158: FILE: drivers/cdrom/sjcd.c:947:
+^I^I^I     ^I^I? 0 : -EFAULT) == 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: drivers/cdrom/sjcd.c:1006:
+^I^I^I     ^I^I? 0 : -EFAULT) == 0) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#169: FILE: drivers/cdrom/sjcd.c:1006:
+^I^I^I     ^I^I? 0 : -EFAULT) == 0) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#215: FILE: drivers/char/n_hdlc.c:590:
+		printk(KERN_WARNING "%s(%d) n_hdlc_tty_read() can't verify user "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'n_hdlc_tty_read', this function's name, in a string
#215: FILE: drivers/char/n_hdlc.c:590:
+		printk(KERN_WARNING "%s(%d) n_hdlc_tty_read() can't verify user "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#216: FILE: drivers/char/n_hdlc.c:591:
+		printk(KERN_WARNING "%s(%d) n_hdlc_tty_read() can't verify user "
+		"buffer\n", __FILE__, __LINE__);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: drivers/char/rio/rio_linux.c:684:
+    rc = -EFAULT;$

CHECK:SPACING: No space is necessary after a cast
#243: FILE: drivers/char/rio/rio_linux.c:685:
+    if (access_ok(VERIFY_WRITE, (void *) arg,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/char/rio/rio_linux.c:685:
+    if (access_ok(VERIFY_WRITE, (void *) arg,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#243: FILE: drivers/char/rio/rio_linux.c:685:
+    if (access_ok(VERIFY_WRITE, (void *) arg,
[...]
       rc = gs_getserial(&PortP->gs, (struct serial_struct *) arg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: drivers/char/rio/rio_linux.c:686:
+                          sizeof(struct serial_struct)))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: drivers/char/rio/rio_linux.c:686:
+    if (access_ok(VERIFY_WRITE, (void *) arg,
+                          sizeof(struct serial_struct)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: drivers/char/rio/rio_linux.c:686:
+                          sizeof(struct serial_struct)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: drivers/char/rio/rio_linux.c:715:
+    rc = -EFAULT;$

CHECK:SPACING: No space is necessary after a cast
#255: FILE: drivers/char/rio/rio_linux.c:716:
+    if (access_ok(VERIFY_READ, (void *) arg,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: drivers/char/rio/rio_linux.c:716:
+    if (access_ok(VERIFY_READ, (void *) arg,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#255: FILE: drivers/char/rio/rio_linux.c:716:
+    if (access_ok(VERIFY_READ, (void *) arg,
[...]
       rc = gs_setserial(&PortP->gs, (struct serial_struct *) arg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: drivers/char/rio/rio_linux.c:717:
+                          sizeof(struct serial_struct)))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: drivers/char/rio/rio_linux.c:717:
+    if (access_ok(VERIFY_READ, (void *) arg,
+                          sizeof(struct serial_struct)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: drivers/char/rio/rio_linux.c:717:
+                          sizeof(struct serial_struct)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: drivers/char/rio/rio_linux.c:727:
+    rc = -EFAULT;$

CHECK:SPACING: No space is necessary after a cast
#267: FILE: drivers/char/rio/rio_linux.c:728:
+    if (access_ok(VERIFY_WRITE, (void *) arg,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: drivers/char/rio/rio_linux.c:728:
+    if (access_ok(VERIFY_WRITE, (void *) arg,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#267: FILE: drivers/char/rio/rio_linux.c:728:
+    if (access_ok(VERIFY_WRITE, (void *) arg,
[...]
+      rc = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: drivers/char/rio/rio_linux.c:729:
+                          sizeof(unsigned int))) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: drivers/char/rio/rio_linux.c:729:
+    if (access_ok(VERIFY_WRITE, (void *) arg,
+                          sizeof(unsigned int))) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/char/rio/rio_linux.c:729:
+                          sizeof(unsigned int))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/char/rio/rio_linux.c:730:
+      rc = 0;$

WARNING:TABSTOP: Statements should start on a tabstop
#281: FILE: drivers/char/selection.c:125:
+	  if (!access_ok(VERIFY_READ, sel, sizeof(*sel)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: drivers/char/vt_ioctl.c:343:
+^I^Iif (!access_ok(VERIFY_WRITE, tmp.entries, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#303: FILE: drivers/char/vt_ioctl.c:344:
+		if (!access_ok(VERIFY_WRITE, tmp.entries, 
+				tmp.entry_ct*sizeof(struct unipair)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#303: FILE: drivers/char/vt_ioctl.c:344:
+				tmp.entry_ct*sizeof(struct unipair)))
 				            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: drivers/char/vt_ioctl.c:866:
+		if (!access_ok(VERIFY_READ, vtconsize,
 				sizeof(struct vt_consize)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: drivers/isdn/act2000/act2000_isa.c:415:
+        if (copy_from_user(&cblock, cb, sizeof(cblock)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: drivers/isdn/act2000/act2000_isa.c:415:
+        if (copy_from_user(&cblock, cb, sizeof(cblock)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: drivers/isdn/act2000/act2000_isa.c:419:
+        if (!access_ok(VERIFY_READ, p, length))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: drivers/isdn/act2000/act2000_isa.c:419:
+        if (!access_ok(VERIFY_READ, p, length))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: drivers/isdn/act2000/act2000_isa.c:420:
+                return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: drivers/isdn/act2000/act2000_isa.c:420:
+                return -EFAULT;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: drivers/isdn/i4l/isdn_common.c:1184:
+					if (!access_ok(VERIFY_WRITE, p,
+							sizeof(ulong) * ISDN_MAX_CHANNELS * 2))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: drivers/isdn/i4l/isdn_common.c:1424:
+					if (!access_ok(VERIFY_WRITE, argp,
 					(ISDN_MODEM_NUMREG + ISDN_MSNLEN + ISDN_LMSNLEN)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#401: FILE: drivers/isdn/i4l/isdn_common.c:1451:
+					if (!access_ok(VERIFY_READ, argp,
 					(ISDN_MODEM_NUMREG + ISDN_MSNLEN + ISDN_LMSNLEN)

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#415: FILE: drivers/isdn/i4l/isdn_common.c:1499:
+								if (!access_ok(VERIFY_READ, p, 1))

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#428: FILE: drivers/isdn/i4l/isdn_common.c:1567:
+					if (!access_ok(VERIFY_WRITE, argp,
+					     sizeof(isdn_ioctl_struct)))

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#499: FILE: drivers/isdn/isdnloop/isdnloop.c:1149:
+					if (!access_ok(VERIFY_READ, (void *) a, sizeof(isdnloop_sdef)))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#499: FILE: drivers/isdn/isdnloop/isdnloop.c:1149:
+					if (!access_ok(VERIFY_READ, (void *) a, sizeof(isdnloop_sdef)))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000202637.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 28 warnings, 17 checks, 462 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000202637.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
