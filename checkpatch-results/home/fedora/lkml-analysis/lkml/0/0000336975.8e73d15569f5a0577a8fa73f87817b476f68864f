CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'state == PM_SUSPEND_DISK'
#124: FILE: kernel/power/main.c:311:
+	if ((state == PM_SUSPEND_DISK) && (pm_disk_mode != PM_DISK_FIRMWARE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pm_disk_mode != PM_DISK_FIRMWARE'
#124: FILE: kernel/power/main.c:311:
+	if ((state == PM_SUSPEND_DISK) && (pm_disk_mode != PM_DISK_FIRMWARE)) {

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#203: FILE: kernel/power/swsusp.c:71:
+unsigned char software_suspend_enabled = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#248: FILE: kernel/power/swsusp.c:453:
+		printk( KERN_ERR "Suspend failed: Not all processes stopped!\n" );

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#248: FILE: kernel/power/swsusp.c:453:
+		printk( KERN_ERR "Suspend failed: Not all processes stopped!\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#248: FILE: kernel/power/swsusp.c:453:
+		printk( KERN_ERR "Suspend failed: Not all processes stopped!\n" );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#248: FILE: kernel/power/swsusp.c:453:
+		printk( KERN_ERR "Suspend failed: Not all processes stopped!\n" );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#262: FILE: kernel/power/swsusp.c:467:
+	printk("Freeing memory: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#264: FILE: kernel/power/swsusp.c:469:
+		printk(".");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#265: FILE: kernel/power/swsusp.c:470:
+	printk("|\n");

ERROR:SPACING: space required before the open parenthesis '('
#278: FILE: kernel/power/swsusp.c:483:
+	if(!pm_suspend_state) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#278: FILE: kernel/power/swsusp.c:483:
+	if(!pm_suspend_state) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#279: FILE: kernel/power/swsusp.c:484:
+		if(pm_send_all(PM_SUSPEND,(void *)3)) {
 		                         ^

ERROR:SPACING: space required before the open parenthesis '('
#279: FILE: kernel/power/swsusp.c:484:
+		if(pm_send_all(PM_SUSPEND,(void *)3)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#280: FILE: kernel/power/swsusp.c:485:
+			printk(KERN_WARNING "Problem while sending suspend event\n");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#281: FILE: kernel/power/swsusp.c:486:
+			return(1);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#283: FILE: kernel/power/swsusp.c:488:
+		pm_suspend_state=1;
 		                ^

CHECK:BRACES: Unbalanced braces around else statement
#284: FILE: kernel/power/swsusp.c:489:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#285: FILE: kernel/power/swsusp.c:490:
+		printk(KERN_WARNING "PM suspend state already raised\n");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#287: FILE: kernel/power/swsusp.c:492:
+	return(0);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#295: FILE: kernel/power/swsusp.c:500:
+	if (flags & RESUME_PHASE1) {
+		dpm_power_up();
+	}

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: kernel/power/swsusp.c:503:
+  ^Iif (flags & RESUME_PHASE2) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#298: FILE: kernel/power/swsusp.c:503:
+  ^Iif (flags & RESUME_PHASE2) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: kernel/power/swsusp.c:503:
+  ^Iif (flags & RESUME_PHASE2) {$

ERROR:SPACING: space required before the open parenthesis '('
#300: FILE: kernel/power/swsusp.c:505:
+		if(pm_suspend_state) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#300: FILE: kernel/power/swsusp.c:505:
+		if(pm_suspend_state) {
[...]
+		} else
[...]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#301: FILE: kernel/power/swsusp.c:506:
+			if(pm_send_all(PM_RESUME,(void *)0))
 			                        ^

ERROR:SPACING: space required before the open parenthesis '('
#301: FILE: kernel/power/swsusp.c:506:
+			if(pm_send_all(PM_RESUME,(void *)0))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#302: FILE: kernel/power/swsusp.c:507:
+				printk(KERN_WARNING "Problem while sending resume event\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#303: FILE: kernel/power/swsusp.c:508:
+			pm_suspend_state=0;
 			                ^

CHECK:BRACES: Unbalanced braces around else statement
#304: FILE: kernel/power/swsusp.c:509:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#305: FILE: kernel/power/swsusp.c:510:
+			printk(KERN_WARNING "PM suspend state wasn't raised\n");

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#342: FILE: kernel/power/swsusp.c:587:
+	extern int C_A_D;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LINE_SPACING: Missing a blank line after declarations
#343: FILE: kernel/power/swsusp.c:588:
+	extern int C_A_D;
+	C_A_D = 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#344: FILE: kernel/power/swsusp.c:589:
+	printk(KERN_EMERG "%s%s Trying to power down.\n", name_suspend, TEST_SWSUSP ? "Disable TEST_SWSUSP. NOT ": "");

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#344: FILE: kernel/power/swsusp.c:589:
+	printk(KERN_EMERG "%s%s Trying to power down.\n", name_suspend, TEST_SWSUSP ? "Disable TEST_SWSUSP. NOT ": "");

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#344: FILE: kernel/power/swsusp.c:589:
+	printk(KERN_EMERG "%s%s Trying to power down.\n", name_suspend, TEST_SWSUSP ? "Disable TEST_SWSUSP. NOT ": "");
 	                                                                                                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#357: FILE: kernel/power/swsusp.c:602:
+	printk(KERN_EMERG "%sProbably not capable for powerdown. System halted.\n", name_suspend);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#359: FILE: kernel/power/swsusp.c:604:
+	while (1);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#375: FILE: kernel/power/swsusp.c:620:
+	mdelay(1000);	/* We do not want some readahead with DMA to corrupt our memory, right?
+			   Do it with disabled interrupts for best effect. That way, if some

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#376: FILE: kernel/power/swsusp.c:621:
+			   driver scheduled DMA, we have good chance for DMA to finish ;-). */

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#387: FILE: kernel/power/swsusp.c:629:
+	__flush_tlb_global();		/* Even mappings of "global" things (vmalloc) need to be fixed */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space prohibited after that open parenthesis '('
#389: FILE: kernel/power/swsusp.c:631:
+	PRINTK( "Freeing prev allocated pagedir\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#389: FILE: kernel/power/swsusp.c:631:
+	PRINTK( "Freeing prev allocated pagedir\n" );

CHECK:SPACING: No space is necessary after a cast
#390: FILE: kernel/power/swsusp.c:632:
+	free_suspend_pagedir((unsigned long) pagedir_save);

ERROR:SPACING: space prohibited after that open parenthesis '('
#394: FILE: kernel/power/swsusp.c:636:
+	PRINTK( "Fixing swap signatures... " );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#394: FILE: kernel/power/swsusp.c:636:
+	PRINTK( "Fixing swap signatures... " );

ERROR:SPACING: space prohibited after that open parenthesis '('
#396: FILE: kernel/power/swsusp.c:638:
+	PRINTK( "ok\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#396: FILE: kernel/power/swsusp.c:638:
+	PRINTK( "ok\n" );

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#408: FILE: kernel/power/swsusp.c:667:
+	BUG_ON(in_atomic());

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LONG_LINE_COMMENT: line length of 152 exceeds 100 columns
#422: FILE: kernel/power/swsusp.c:678:
+		kernel_fpu_end();	/* save_processor_state() does kernel_fpu_begin, and we need to revert it in order to pass in_atomic() checks */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#423: FILE: kernel/power/swsusp.c:679:
+		BUG_ON(in_atomic());

WARNING:LONG_LINE_COMMENT: line length of 130 exceeds 100 columns
#425: FILE: kernel/power/swsusp.c:681:
+		suspend_power_down();	/* FIXME: if suspend_power_down is commented out, console is lost after few suspends ?! */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#433: FILE: kernel/power/swsusp.c:689:
+^Ispin_lock_irq(&suspend_pagedir_lock);^I/* Done to disable interrupts */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#437: FILE: kernel/power/swsusp.c:692:
+	free_pages((unsigned long) pagedir_nosave, pagedir_order);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#444: FILE: kernel/power/swsusp.c:699:
+	printk("Doing software_suspend()\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#447: FILE: kernel/power/swsusp.c:702:
+		printk( "%sCan't allocate a console... proceeding\n", name_suspend);

ERROR:SPACING: space prohibited after that open parenthesis '('
#447: FILE: kernel/power/swsusp.c:702:
+		printk( "%sCan't allocate a console... proceeding\n", name_suspend);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#449: FILE: kernel/power/swsusp.c:704:
+	if (!prepare_suspend_processes()) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#451: FILE: kernel/power/swsusp.c:706:
+                   kernel threads are stopped. Free some memory, as we$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#451: FILE: kernel/power/swsusp.c:706:
+		/* At this point, all user processes and "dangerous"
+                   kernel threads are stopped. Free some memory, as we

ERROR:CODE_INDENT: code indent should use tabs where possible
#452: FILE: kernel/power/swsusp.c:707:
+                   need half of memory free. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#452: FILE: kernel/power/swsusp.c:707:
+                   need half of memory free. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#455: FILE: kernel/power/swsusp.c:710:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#456: FILE: kernel/power/swsusp.c:711:
+^I^I/* No need to invalidate any vfsmnt list -- $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#461: FILE: kernel/power/swsusp.c:716:
+^I^I/* Save state of all device drivers, and stop them. */^I^I   $

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#462: FILE: kernel/power/swsusp.c:717:
+		if(drivers_suspend()==0)
 		                    ^

ERROR:SPACING: space required before the open parenthesis '('
#462: FILE: kernel/power/swsusp.c:717:
+		if(drivers_suspend()==0)

ERROR:SPACING: space required before the open parenthesis '('
#486: FILE: kernel/power/swsusp.c:741:
+	if(!software_suspend_enabled)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: kernel/power/swsusp.c:770:
+static int does_collide_order(suspend_pagedir_t *pagedir, unsigned long addr,
+		int order)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#563: FILE: kernel/power/swsusp.c:894:
+#if 0

WARNING:LINE_SPACING: Missing a blank line after declarations
#565: FILE: kernel/power/swsusp.c:896:
+	struct buffer_head *bh;
+	BUG_ON (pos%PAGE_SIZE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#565: FILE: kernel/power/swsusp.c:896:
+	BUG_ON (pos%PAGE_SIZE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#565: FILE: kernel/power/swsusp.c:896:
+	BUG_ON (pos%PAGE_SIZE);

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#565: FILE: kernel/power/swsusp.c:896:
+	BUG_ON (pos%PAGE_SIZE);
 	           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#566: FILE: kernel/power/swsusp.c:897:
+	bh = __bread(bdev, pos/PAGE_SIZE, PAGE_SIZE);
 	                      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!bh->b_data'
#567: FILE: kernel/power/swsusp.c:898:
+	if (!bh || (!bh->b_data)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#567: FILE: kernel/power/swsusp.c:898:
+	if (!bh || (!bh->b_data)) {
+		return -1;
+	}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#571: FILE: kernel/power/swsusp.c:902:
+	BUG_ON(!buffer_uptodate(bh));

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#574: FILE: kernel/power/swsusp.c:905:
+		printk(KERN_CRIT "%sWarning %s: Fixing swap signatures unsuccessful...\n", name_resume, resume_file);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#574: FILE: kernel/power/swsusp.c:905:
+		printk(KERN_CRIT "%sWarning %s: Fixing swap signatures unsuccessful...\n", name_resume, resume_file);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#579: FILE: kernel/power/swsusp.c:910:
+	printk(KERN_CRIT "%sWarning %s: Fixing swap signatures unimplemented...\n", name_resume, resume_file);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#579: FILE: kernel/power/swsusp.c:910:
+	printk(KERN_CRIT "%sWarning %s: Fixing swap signatures unimplemented...\n", name_resume, resume_file);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#598: FILE: kernel/power/swsusp.c:943:
+^I^Ipanic("%sUnable to find suspended-data signature (%.10s - misspelled?\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#599: FILE: kernel/power/swsusp.c:944:
+		panic("%sUnable to find suspended-data signature (%.10s - misspelled?\n", 
 			name_resume, cur->swh.magic.magic);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#604: FILE: kernel/power/swsusp.c:948:
+		/* We don't do a sanity check here: we want to restore the swap
+		   whatever version of kernel made the suspend image;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#606: FILE: kernel/power/swsusp.c:950:
+		   we must write the device directly */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#607: FILE: kernel/power/swsusp.c:951:
+		printk("%s: Fixing swap signatures %s...\n", name_resume, resume_file);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#652: FILE: kernel/power/swsusp.c:1002:
+static int read_suspend_image(const char * specialfile, int noresume)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#669: FILE: kernel/power/swsusp.c:1011:
+	cur = (void *) scratch_page;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#672: FILE: kernel/power/swsusp.c:1014:
+		printk("Resuming from device %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#673: FILE: kernel/power/swsusp.c:1015:
+		printk("Resuming from device %s\n",
+				__bdevname(resume_device, b));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#689: FILE: kernel/power/swsusp.c:1024:
+	} else error = -ENOMEM;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#697: FILE: kernel/power/swsusp.c:1028:
+	switch (error) {
+		case 0:
[...]
+		case -EINVAL:
[...]
+		case -EIO:
[...]
+		case -ENOENT:
[...]
+		case -ENOMEM:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#704: FILE: kernel/power/swsusp.c:1035:
+			printk( "%sI/O error\n", name_resume);

ERROR:SPACING: space prohibited after that open parenthesis '('
#704: FILE: kernel/power/swsusp.c:1035:
+			printk( "%sI/O error\n", name_resume);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#707: FILE: kernel/power/swsusp.c:1038:
+			printk( "%s%s: No such file or directory\n", name_resume, specialfile);

ERROR:SPACING: space prohibited after that open parenthesis '('
#707: FILE: kernel/power/swsusp.c:1038:
+			printk( "%s%s: No such file or directory\n", name_resume, specialfile);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#710: FILE: kernel/power/swsusp.c:1041:
+			printk( "%sNot enough memory\n", name_resume);

ERROR:SPACING: space prohibited after that open parenthesis '('
#710: FILE: kernel/power/swsusp.c:1041:
+			printk( "%sNot enough memory\n", name_resume);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#713: FILE: kernel/power/swsusp.c:1044:
+			printk( "%sError %d resuming\n", name_resume, error );

ERROR:SPACING: space prohibited after that open parenthesis '('
#713: FILE: kernel/power/swsusp.c:1044:
+			printk( "%sError %d resuming\n", name_resume, error );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#713: FILE: kernel/power/swsusp.c:1044:
+			printk( "%sError %d resuming\n", name_resume, error );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#724: FILE: kernel/power/swsusp.c:1053:
+ *^ICalled as a late_initcall (so all devices are discovered and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#726: FILE: kernel/power/swsusp.c:1055:
+ *^IIf so, we quiesce devices, the restore the saved image. We will $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#727: FILE: kernel/power/swsusp.c:1056:
+ *^Ireturn above (in pm_suspend_disk() ) if everything goes well. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#728: FILE: kernel/power/swsusp.c:1057:
+ *^IOtherwise, we fail gracefully and return to the normally $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#739: FILE: kernel/power/swsusp.c:1064:
+^I^Iprintk(KERN_WARNING "Software Suspend has malfunctioning SMP support. Disabled :(\n");^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#739: FILE: kernel/power/swsusp.c:1064:
+		printk(KERN_WARNING "Software Suspend has malfunctioning SMP support. Disabled :(\n");	

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#747: FILE: kernel/power/swsusp.c:1072:
+	printk( "%s", name_resume );

ERROR:SPACING: space prohibited after that open parenthesis '('
#747: FILE: kernel/power/swsusp.c:1072:
+	printk( "%s", name_resume );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#747: FILE: kernel/power/swsusp.c:1072:
+	printk( "%s", name_resume );

ERROR:SPACING: space required before the open parenthesis '('
#749: FILE: kernel/power/swsusp.c:1074:
+		if(resume_file[0])

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#751: FILE: kernel/power/swsusp.c:1076:
+		printk( "disabled\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#751: FILE: kernel/power/swsusp.c:1076:
+		printk( "disabled\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#751: FILE: kernel/power/swsusp.c:1076:
+		printk( "disabled\n" );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#760: FILE: kernel/power/swsusp.c:1082:
+		printk("swsusp: Can't allocate a console... proceeding\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#767: FILE: kernel/power/swsusp.c:1085:
+		printk( "suspension device unspecified\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#767: FILE: kernel/power/swsusp.c:1085:
+		printk( "suspension device unspecified\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#767: FILE: kernel/power/swsusp.c:1085:
+		printk( "suspension device unspecified\n" );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#775: FILE: kernel/power/swsusp.c:1089:
+	printk( "resuming from %s\n", resume_file);

ERROR:SPACING: space prohibited after that open parenthesis '('
#775: FILE: kernel/power/swsusp.c:1089:
+	printk( "resuming from %s\n", resume_file);

ERROR:SPACING: space prohibited after that open parenthesis '('
#795: FILE: kernel/power/swsusp.c:1107:
+	strncpy( resume_file, str, 255 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#795: FILE: kernel/power/swsusp.c:1107:
+	strncpy( resume_file, str, 255 );

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#811: FILE: kernel/power/swsusp.c:1122:
+EXPORT_SYMBOL(software_suspend);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#812: FILE: kernel/power/swsusp.c:1123:
+EXPORT_SYMBOL(software_suspend_enabled);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#833: FILE: include/linux/suspend.h:53:
+extern void software_suspend(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#834: FILE: include/linux/suspend.h:54:
+extern void software_resume(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#836: FILE: include/linux/suspend.h:56:
+extern int register_suspend_notifier(struct notifier_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_block *' should also have an identifier name
#836: FILE: include/linux/suspend.h:56:
+extern int register_suspend_notifier(struct notifier_block *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#837: FILE: include/linux/suspend.h:57:
+extern int unregister_suspend_notifier(struct notifier_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_block *' should also have an identifier name
#837: FILE: include/linux/suspend.h:57:
+extern int unregister_suspend_notifier(struct notifier_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#844: FILE: include/linux/suspend.h:64:
+extern void do_magic_resume_1(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#845: FILE: include/linux/suspend.h:65:
+extern void do_magic_resume_2(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#846: FILE: include/linux/suspend.h:66:
+extern void do_magic_suspend_1(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#847: FILE: include/linux/suspend.h:67:
+extern void do_magic_suspend_2(void);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#858: FILE: include/linux/suspend.h:77:
+	printk("Warning: fake suspend called\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#861: FILE: include/linux/suspend.h:80:
 }
+#define software_resume()		do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#861: FILE: include/linux/suspend.h:80:
+#define software_resume()		do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#862: FILE: include/linux/suspend.h:81:
+#define register_suspend_notifier(a)	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#863: FILE: include/linux/suspend.h:82:
+#define unregister_suspend_notifier(a)	do { } while(0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#869: FILE: include/linux/suspend.h:88:
+extern int freeze_processes(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#870: FILE: include/linux/suspend.h:89:
+extern void thaw_processes(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#872: FILE: include/linux/suspend.h:91:
+extern int pm_prepare_console(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#873: FILE: include/linux/suspend.h:92:
+extern void pm_restore_console(void);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#880: FILE: include/linux/suspend.h:99:
 }
+static inline int freeze_processes(void)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#884: FILE: include/linux/suspend.h:103:
+}
+static inline void thaw_processes(void)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#886: FILE: include/linux/suspend.h:105:
+{
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#887: FILE: include/linux/suspend.h:106:
+
+}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000336975.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 59 errors, 57 warnings, 33 checks, 792 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000336975.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
