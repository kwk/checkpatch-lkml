WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#36: FILE: Makefile:4:
+EXTRAVERSION = .4
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#86: FILE: arch/sparc64/kernel/systbls.S:74:
+	.word sys_ni_syscall, compat_sys_clock_settime, compat_sys_clock_gettime, compat_sys_clock_getres, sys32_clock_nanosleep

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: arch/x86_64/kernel/vmlinux.lds.S:176:
+  . = ALIGN(4096);^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: arch/x86_64/kernel/vmlinux.lds.S:177:
+  __init_end = .;^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#123: FILE: arch/x86_64/mm/srat.c:29:
+/* Too small nodes confuse the VM badly. Usually they result
+   from BIOS bugs. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#123: FILE: arch/x86_64/mm/srat.c:29:
+   from BIOS bugs. */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#124: FILE: arch/x86_64/mm/srat.c:30:
+#define NODE_MIN_SIZE (4*1024*1024)
                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#124: FILE: arch/x86_64/mm/srat.c:30:
+#define NODE_MIN_SIZE (4*1024*1024)
                              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#136: FILE: arch/x86_64/mm/srat.c:178:
+	int i;
+	node_clear(node, nodes_parsed);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: arch/x86_64/mm/srat.c:193:
+ ^I^Icutoff_node(i, start, end);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#151: FILE: arch/x86_64/mm/srat.c:193:
+ ^I^Icutoff_node(i, start, end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/x86_64/mm/srat.c:193:
+ ^I^Icutoff_node(i, start, end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: arch/x86_64/mm/srat.c:196:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#154: FILE: arch/x86_64/mm/srat.c:196:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: arch/x86_64/mm/srat.c:196:
+ ^I}$

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#178: FILE: drivers/input/joystick/db9.c:278:
+static int db9_saturn_report(unsigned char id, unsigned char data[60], struct input_dev *devs[], int n, int max_pads)

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#203: FILE: drivers/input/joystick/db9.c:296:
+			input_report_abs(dev, db9_abs[0], !(data[j + 1] & 128) - !(data[j + 1] & 64));

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#204: FILE: drivers/input/joystick/db9.c:297:
+			input_report_abs(dev, db9_abs[1], !(data[j + 1] & 32) - !(data[j + 1] & 16));

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#207: FILE: drivers/input/joystick/db9.c:299:
+				input_report_key(dev, db9_cd32_btn[i], ~data[j + db9_saturn_byte[i]] & db9_saturn_mask[i]);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#212: FILE: drivers/input/joystick/db9.c:302:
+			input_report_abs(dev, db9_abs[0], !(data[j + 1] & 128) - !(data[j + 1] & 64));

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#213: FILE: drivers/input/joystick/db9.c:303:
+			input_report_abs(dev, db9_abs[1], !(data[j + 1] & 32) - !(data[j + 1] & 16));

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#219: FILE: drivers/input/joystick/db9.c:305:
+				input_report_key(dev, db9_cd32_btn[i], ~data[j + db9_saturn_byte[i]] & db9_saturn_mask[i]);

WARNING:LONG_LINE_COMMENT: line length of 116 exceeds 100 columns
#226: FILE: drivers/input/joystick/db9.c:310:
+			input_report_abs(dev, db9_abs[8], (data[j + 6] & 128 ? 0 : 1) - (data[j + 6] & 64 ? 0 : 1));

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 115 exceeds 100 columns
#227: FILE: drivers/input/joystick/db9.c:311:
+			input_report_abs(dev, db9_abs[9], (data[j + 6] & 32 ? 0 : 1) - (data[j + 6] & 16 ? 0 : 1));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#254: FILE: drivers/input/joystick/db9.c:327:
+			input_report_abs(dev, db9_abs[3], (0xff-(data[j + 3] ^ 0x80))+1); /* */
 			                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#254: FILE: drivers/input/joystick/db9.c:327:
+			input_report_abs(dev, db9_abs[3], (0xff-(data[j + 3] ^ 0x80))+1); /* */
 			                                                             ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#366: FILE: drivers/input/joystick/sidewinder.c:739:
+		sw->dev[i] = input_dev = input_allocate_device();

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#443: FILE: drivers/md/md.c:1217:
+	while ( (s=strchr(rdev->kobj.k_name, '/')) != NULL)
 	          ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#443: FILE: drivers/md/md.c:1217:
+	while ( (s=strchr(rdev->kobj.k_name, '/')) != NULL)

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#522: FILE: fs/dcache.c:845:
+		iput(inode);
 		^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#674: FILE: net/bridge/br_netfilter.c:191:
+	if (!skb->dev)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#676: FILE: net/bridge/br_netfilter.c:193:
+	else {

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#677: FILE: net/bridge/br_netfilter.c:194:
+		if (skb->protocol == __constant_htons(ETH_P_8021Q)) {

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

ERROR:SPACING: space prohibited before that close parenthesis ')'
#785: FILE: net/bridge/br_netfilter.c:711:
+		if (!(nf_bridge->mask & BRNF_DONT_TAKE_PARENT) ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#787: FILE: net/bridge/br_netfilter.c:713:
+			struct net_device *parent = bridge_parent(realindev);
+			if (parent)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000105981.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 22 warnings, 7 checks, 718 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000105981.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
