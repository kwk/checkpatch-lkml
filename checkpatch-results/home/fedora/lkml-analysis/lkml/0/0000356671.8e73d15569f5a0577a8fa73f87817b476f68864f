WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
Content-Type: text/x-patch; name=patch.libaio.io_queue_run; charset=ISO-8859-1

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#60: FILE: src/io_queue_run.c:22:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#76: FILE: src/io_queue_run.c:29:
+	int ret =3D 0;		/* total number of events processed */
 	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#88: FILE: src/io_queue_run.c:40:
+		if ((n =3D io_getevents(ctx, 1, IO_BATCH_EVENTS, &events, timeout)) <=3D=
 		       ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#88: FILE: src/io_queue_run.c:40:
+		if ((n =3D io_getevents(ctx, 1, IO_BATCH_EVENTS, &events, timeout)) <=3D=
 		                                                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#88: FILE: src/io_queue_run.c:40:
+		if ((n =3D io_getevents(ctx, 1, IO_BATCH_EVENTS, &events, timeout)) <=3D=
 		                                                                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#88: FILE: src/io_queue_run.c:40:
+		if ((n =3D io_getevents(ctx, 1, IO_BATCH_EVENTS, &events, timeout)) <=3D=

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#91: FILE: src/io_queue_run.c:43:
+		ret +=3D n;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#92: FILE: src/io_queue_run.c:44:
+		for (ep =3D events, i =3D n; i-- > 0; ep++) {
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#92: FILE: src/io_queue_run.c:44:
+		for (ep =3D events, i =3D n; i-- > 0; ep++) {
 		                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#93: FILE: src/io_queue_run.c:45:
+			io_callback_t cb =3D (io_callback_t)ep->data;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#93: FILE: src/io_queue_run.c:45:
+			io_callback_t cb =3D (io_callback_t)ep->data;
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#94: FILE: src/io_queue_run.c:46:
+			struct iocb *iocb =3D ep->obj;
 			                  ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#98: FILE: src/io_queue_run.c:47:
+			struct iocb *iocb =3D ep->obj;
+			cb(ctx, iocb, ep->res, ep->res2);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#100: FILE: src/io_queue_run.c:49:
+	} while (n =3D=3D IO_BATCH_EVENTS);
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#100: FILE: src/io_queue_run.c:49:
+	} while (n =3D=3D IO_BATCH_EVENTS);
 	              ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#115: FILE: src/libaio.h:126:
+extern int io_queue_run(io_context_t ctx, struct timespec *timeout);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:REPEATED_WORD: Possible repeated word: 'events'
#158: FILE: man/io_queue_run.3:17:
+Attempts to read all the events events from

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000356671.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 4 warnings, 1 checks, 111 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000356671.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
