WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#74: 
--- linux-2.6.13-rc1-mm1/arch/i386/kernel/entry.S	3 Jul 2005 13:20:43 -0000	1.1.1.1

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#193: FILE: arch/i386/kernel/io_apic.c:82:
+int vector_irq[MAX_NUMNODES][NR_VECTORS] =
+	{ [0 ... MAX_NUMNODES-1][0 ... NR_VECTORS - 1] = -1 };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#193: FILE: arch/i386/kernel/io_apic.c:82:
+	{ [0 ... MAX_NUMNODES-1][0 ... NR_VECTORS - 1] = -1 };
 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#197: FILE: arch/i386/kernel/io_apic.c:84:
+#define vector_to_irq(node, vector) ^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vector' - possible side-effects?
#197: FILE: arch/i386/kernel/io_apic.c:84:
+#define vector_to_irq(node, vector) 	\
+	(platform_legacy_irq(vector) ? vector : vector_irq[node][vector])

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#215: FILE: arch/i386/kernel/io_apic.c:1128:
+	static u8 current_vector[MAX_NUMNODES] = {[0 ... MAX_NUMNODES-1] =
 	                                                             ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vector > 0'
#224: FILE: arch/i386/kernel/io_apic.c:1134:
+	if ((vector > 0) && (irq != AUTO_ASSIGN)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq != AUTO_ASSIGN'
#224: FILE: arch/i386/kernel/io_apic.c:1134:
+	if ((vector > 0) && (irq != AUTO_ASSIGN)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: arch/i386/kernel/io_apic.c:1142:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: arch/i386/kernel/io_apic.c:1155:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#412: FILE: arch/i386/kernel/io_apic.c:2063:
+				if ((tmp = vector_to_irq(0, tmp)) == -1) /* FIXME - zwane */

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#526: FILE: arch/i386/kernel/traps.c:75:
+	__attribute__((__section__(".data.idt"))) = {[0 ... MAX_NUMNODES-1] = {{0, 0}, }};
 	                                                                ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.idt") over __attribute__((__section__(".data.idt")))
#526: FILE: arch/i386/kernel/traps.c:75:
+	__attribute__((__section__(".data.idt"))) = {[0 ... MAX_NUMNODES-1] = {{0, 0}, }};

ERROR:SPACING: space required after that ',' (ctx:VxV)
#562: FILE: arch/i386/kernel/traps.c:1125:
+	_set_gate(&node_idt_table[node][n],14,0,addr,__KERNEL_CS);
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#562: FILE: arch/i386/kernel/traps.c:1125:
+	_set_gate(&node_idt_table[node][n],14,0,addr,__KERNEL_CS);
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#562: FILE: arch/i386/kernel/traps.c:1125:
+	_set_gate(&node_idt_table[node][n],14,0,addr,__KERNEL_CS);
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#562: FILE: arch/i386/kernel/traps.c:1125:
+	_set_gate(&node_idt_table[node][n],14,0,addr,__KERNEL_CS);
 	                                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#569: FILE: arch/i386/kernel/traps.c:1131:
+	int node;
+	for (node = 0; node < MAX_NUMNODES; node++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#580: FILE: arch/i386/kernel/traps.c:1141:
+	int node;
+	for (node = 0; node < MAX_NUMNODES; node++)

WARNING:LINE_SPACING: Missing a blank line after declarations
#588: FILE: arch/i386/kernel/traps.c:1148:
+	int node;
+	for (node = 0; node < MAX_NUMNODES; node++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#589: FILE: arch/i386/kernel/traps.c:1149:
+		_set_gate(&node_idt_table[node][n],15,0,addr,__KERNEL_CS);
 		                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#589: FILE: arch/i386/kernel/traps.c:1149:
+		_set_gate(&node_idt_table[node][n],15,0,addr,__KERNEL_CS);
 		                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#589: FILE: arch/i386/kernel/traps.c:1149:
+		_set_gate(&node_idt_table[node][n],15,0,addr,__KERNEL_CS);
 		                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#589: FILE: arch/i386/kernel/traps.c:1149:
+		_set_gate(&node_idt_table[node][n],15,0,addr,__KERNEL_CS);
 		                                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#596: FILE: arch/i386/kernel/traps.c:1155:
+	int node;
+	for (node = 0; node < MAX_NUMNODES; node++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#597: FILE: arch/i386/kernel/traps.c:1156:
+		_set_gate(&node_idt_table[node][n],15,3,addr,__KERNEL_CS);
 		                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#597: FILE: arch/i386/kernel/traps.c:1156:
+		_set_gate(&node_idt_table[node][n],15,3,addr,__KERNEL_CS);
 		                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#597: FILE: arch/i386/kernel/traps.c:1156:
+		_set_gate(&node_idt_table[node][n],15,3,addr,__KERNEL_CS);
 		                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#597: FILE: arch/i386/kernel/traps.c:1156:
+		_set_gate(&node_idt_table[node][n],15,3,addr,__KERNEL_CS);
 		                                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#604: FILE: arch/i386/kernel/traps.c:1162:
+	int node;
+	for (node = 0; node < MAX_NUMNODES; node++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#605: FILE: arch/i386/kernel/traps.c:1163:
+		_set_gate(&node_idt_table[node][n],5,0,0,(gdt_entry<<3));
 		                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#605: FILE: arch/i386/kernel/traps.c:1163:
+		_set_gate(&node_idt_table[node][n],5,0,0,(gdt_entry<<3));
 		                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#605: FILE: arch/i386/kernel/traps.c:1163:
+		_set_gate(&node_idt_table[node][n],5,0,0,(gdt_entry<<3));
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#605: FILE: arch/i386/kernel/traps.c:1163:
+		_set_gate(&node_idt_table[node][n],5,0,0,(gdt_entry<<3));
 		                                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#605: FILE: arch/i386/kernel/traps.c:1163:
+		_set_gate(&node_idt_table[node][n],5,0,0,(gdt_entry<<3));
 		                                                   ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#634: FILE: arch/i386/kernel/cpu/common.c:570:
+void __devinit setup_node_idts(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#646: FILE: arch/i386/kernel/cpu/common.c:582:
+void __devinit setup_cpu_idt(void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#650: FILE: arch/i386/kernel/cpu/common.c:586:
+^Iprintk(KERN_DEBUG "CPU%d IDT at 0x%08lx\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#650: FILE: arch/i386/kernel/cpu/common.c:586:
+	printk(KERN_DEBUG "CPU%d IDT at 0x%08lx\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#651: FILE: arch/i386/kernel/cpu/common.c:587:
+	printk(KERN_DEBUG "CPU%d IDT at 0x%08lx\n", 
+		cpu, node_idt_descr[node].address);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#654: FILE: arch/i386/kernel/cpu/common.c:590:
+	__asm__ __volatile__("lidt %0": "=m" (node_idt_descr[node]));
 	                              ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#664: FILE: arch/i386/kernel/cpu/common.c:599:
 void __devinit cpu_init(void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#688: FILE: arch/i386/mm/fault.c:404:
+		unsigned long nr, node;
+		node = cpu_to_node(smp_processor_id());

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#753: FILE: include/asm-i386/cpu.h:20:
+extern void __devinit setup_cpu_idt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#753: FILE: include/asm-i386/cpu.h:20:
+extern void __devinit setup_cpu_idt(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#754: FILE: include/asm-i386/cpu.h:21:
+extern void __devinit setup_node_idts(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#754: FILE: include/asm-i386/cpu.h:21:
+extern void __devinit setup_node_idts(void);

CHECK:CAMELCASE: Avoid CamelCase: <Xgt_desc_struct>
#786: FILE: include/asm-i386/desc.h:30:
+extern struct Xgt_desc_struct node_idt_descr[MAX_NUMNODES], cpu_gdt_descr[NR_CPUS];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#794: FILE: include/asm-i386/desc.h:41:
+extern void node_set_intr_gate(unsigned int node, unsigned int vector, void * addr);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#794: FILE: include/asm-i386/desc.h:41:
+extern void node_set_intr_gate(unsigned int node, unsigned int vector, void * addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#826: FILE: include/asm-i386/io_apic.h:211:
+extern int assign_irq_vector(int irq, int node);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000168966.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 15 warnings, 13 checks, 661 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000168966.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
