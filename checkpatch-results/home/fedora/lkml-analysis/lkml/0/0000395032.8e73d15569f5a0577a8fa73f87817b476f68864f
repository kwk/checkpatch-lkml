ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#52: FILE: lib/vsprintf.c:31:
base)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#53: FILE: lib/vsprintf.c:32:
+static unsigned long simple_strtoul_width(const char *cp,char
                                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#69: FILE: lib/vsprintf.c:46:
 	while (isxdigit(*cp) &&
[...]
+	       (value = isdigit(*cp) ? *cp-'0' : toupper(*cp)-'A'+10) <

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#72: FILE: lib/vsprintf.c:47:
+	       (value = isdigit(*cp) ? *cp-'0' : toupper(*cp)-'A'+10) <
 	                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#72: FILE: lib/vsprintf.c:47:
+	       (value = isdigit(*cp) ? *cp-'0' : toupper(*cp)-'A'+10) <
 	                                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#72: FILE: lib/vsprintf.c:47:
+	       (value = isdigit(*cp) ? *cp-'0' : toupper(*cp)-'A'+10) <
 	                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#90: FILE: lib/vsprintf.c:64:
+static long simple_strtol_width(const char *cp,char **endp,unsigned int
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#90: FILE: lib/vsprintf.c:64:
+static long simple_strtol_width(const char *cp,char **endp,unsigned int
                                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#96: FILE: lib/vsprintf.c:67:
+		return -simple_strtoul_width(cp+1,endp,base,cendp);
 		                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#96: FILE: lib/vsprintf.c:67:
+		return -simple_strtoul_width(cp+1,endp,base,cendp);
 		                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#96: FILE: lib/vsprintf.c:67:
+		return -simple_strtoul_width(cp+1,endp,base,cendp);
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#96: FILE: lib/vsprintf.c:67:
+		return -simple_strtoul_width(cp+1,endp,base,cendp);
 		                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#97: FILE: lib/vsprintf.c:68:
+	return simple_strtoul_width(cp,endp,base,cendp);
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#97: FILE: lib/vsprintf.c:68:
+	return simple_strtoul_width(cp,endp,base,cendp);
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#97: FILE: lib/vsprintf.c:68:
+	return simple_strtoul_width(cp,endp,base,cendp);
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#110: FILE: lib/vsprintf.c:78:
+static unsigned long long simple_strtoull_width(const char *cp,char
                                                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#129: FILE: lib/vsprintf.c:94:
+	    ? toupper(*cp) : *cp)-'A'+10) < base &&
 	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#129: FILE: lib/vsprintf.c:94:
+	    ? toupper(*cp) : *cp)-'A'+10) < base &&
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#146: FILE: lib/vsprintf.c:111:
+static long long simple_strtoll_width(const char *cp,char
                                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#152: FILE: lib/vsprintf.c:114:
+		return -simple_strtoull_width(cp+1,endp,base,cendp);
 		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#152: FILE: lib/vsprintf.c:114:
+		return -simple_strtoull_width(cp+1,endp,base,cendp);
 		                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#152: FILE: lib/vsprintf.c:114:
+		return -simple_strtoull_width(cp+1,endp,base,cendp);
 		                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#152: FILE: lib/vsprintf.c:114:
+		return -simple_strtoull_width(cp+1,endp,base,cendp);
 		                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: lib/vsprintf.c:115:
+	return simple_strtoull_width(cp,endp,base,cendp);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: lib/vsprintf.c:115:
+	return simple_strtoull_width(cp,endp,base,cendp);
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: lib/vsprintf.c:115:
+	return simple_strtoull_width(cp,endp,base,cendp);
 	                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: lib/vsprintf.c:118:
+unsigned long simple_strtoul(const char *cp, char **endp, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#156: FILE: lib/vsprintf.c:118:
+unsigned long simple_strtoul(const char *cp, char **endp, 

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: lib/vsprintf.c:119:
+unsigned long simple_strtoul(const char *cp, char **endp, 
+	unsigned int base)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: lib/vsprintf.c:124:
+long simple_strtol(const char *cp, char **endp, $

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#162: FILE: lib/vsprintf.c:124:
+long simple_strtol(const char *cp, char **endp, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: lib/vsprintf.c:125:
+long simple_strtol(const char *cp, char **endp, 
+	unsigned int base)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: lib/vsprintf.c:130:
+unsigned long long simple_strtoull(const char *cp, char **endp, $

WARNING:CONSIDER_KSTRTO: simple_strtoull is obsolete, use kstrtoull instead
#168: FILE: lib/vsprintf.c:130:
+unsigned long long simple_strtoull(const char *cp, char **endp, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: lib/vsprintf.c:131:
+unsigned long long simple_strtoull(const char *cp, char **endp, 
+	unsigned int base)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: lib/vsprintf.c:136:
+long long simple_strtoll(const char *cp, char **endp, $

WARNING:CONSIDER_KSTRTO: simple_strtoll is obsolete, use kstrtoll instead
#174: FILE: lib/vsprintf.c:136:
+long long simple_strtoll(const char *cp, char **endp, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: lib/vsprintf.c:137:
+long long simple_strtoll(const char *cp, char **endp, 
+	unsigned int base)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000395032.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 5 warnings, 11 checks, 221 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000395032.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
