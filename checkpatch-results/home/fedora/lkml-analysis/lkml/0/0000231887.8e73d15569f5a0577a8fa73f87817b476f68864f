WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#49: FILE: arch/m32r/kernel/io_m32700ut.c:2:
+ *  linux/arch/m32r/kernel/io_m32700ut.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INLINE: plain inline is preferred over __inline__
#81: FILE: arch/m32r/kernel/io_mappi2.c:45:
+static __inline__ void *__port2addr_ata(unsigned long port)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#95: FILE: arch/m32r/kernel/io_mappi2.c:59:
+^Idefault: ^Ireturn (void *)&dummy_reg;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#115: FILE: arch/m32r/kernel/io_mappi2.c:95:
+	return (unsigned short)le16_to_cpu(*(volatile unsigned short *)portp);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#132: FILE: arch/m32r/kernel/io_mappi2.c:112:
+	*(volatile unsigned short *)portp = cpu_to_le16(w);

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#140: FILE: arch/m32r/kernel/io_mappi2.c:120:
+	else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#141: FILE: arch/m32r/kernel/io_mappi2.c:121:
+		return *(volatile unsigned char *)__port2addr_ata(port);

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#152: FILE: arch/m32r/kernel/io_mappi2.c:140:
+	else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                                ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#152: FILE: arch/m32r/kernel/io_mappi2.c:140:
+	else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
+		return *(volatile unsigned short *)__port2addr_ata(port);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#153: FILE: arch/m32r/kernel/io_mappi2.c:141:
+		return *(volatile unsigned short *)__port2addr_ata(port);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#158: FILE: arch/m32r/kernel/io_mappi2.c:145:
+	else if (port >= 0x340 && port < 0x3a0)
 	  return *(volatile unsigned short *)PORT2ADDR_USB(port);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#169: FILE: arch/m32r/kernel/io_mappi2.c:177:
 	else
[...]
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#171: FILE: arch/m32r/kernel/io_mappi2.c:179:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                           ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#172: FILE: arch/m32r/kernel/io_mappi2.c:180:
+		return *(volatile unsigned char *)__port2addr_ata(port);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#173: FILE: arch/m32r/kernel/io_mappi2.c:181:
+		return *(volatile unsigned char *)__port2addr_ata(port);
+	} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#173: FILE: arch/m32r/kernel/io_mappi2.c:181:
+	} else
[...]
 	if (port >= M32R_PCC_IOSTART0 && port <= M32R_PCC_IOEND0) {

CHECK:BRACES: Unbalanced braces around else statement
#173: FILE: arch/m32r/kernel/io_mappi2.c:181:
+	} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#185: FILE: arch/m32r/kernel/io_mappi2.c:202:
 	else
[...]
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#187: FILE: arch/m32r/kernel/io_mappi2.c:204:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                           ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#187: FILE: arch/m32r/kernel/io_mappi2.c:204:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
[...]
+	} else
[...]

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#188: FILE: arch/m32r/kernel/io_mappi2.c:205:
+		return *(volatile unsigned short *)__port2addr_ata(port);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#189: FILE: arch/m32r/kernel/io_mappi2.c:206:
+		return *(volatile unsigned short *)__port2addr_ata(port);
+	} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#189: FILE: arch/m32r/kernel/io_mappi2.c:206:
+	} else
[...]
 	  if (port >= 0x340 && port < 0x3a0)

CHECK:BRACES: Unbalanced braces around else statement
#189: FILE: arch/m32r/kernel/io_mappi2.c:206:
+	} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#197: FILE: arch/m32r/kernel/io_mappi2.c:239:
 	else
[...]
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#199: FILE: arch/m32r/kernel/io_mappi2.c:241:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                           ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#200: FILE: arch/m32r/kernel/io_mappi2.c:242:
+		*(volatile unsigned char *)__port2addr_ata(port) = b;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#201: FILE: arch/m32r/kernel/io_mappi2.c:243:
+	} else
[...]
 	if (port >= M32R_PCC_IOSTART0 && port <= M32R_PCC_IOEND0) {

CHECK:BRACES: Unbalanced braces around else statement
#201: FILE: arch/m32r/kernel/io_mappi2.c:243:
+	} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#209: FILE: arch/m32r/kernel/io_mappi2.c:257:
 	else
[...]
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#211: FILE: arch/m32r/kernel/io_mappi2.c:259:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                           ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#211: FILE: arch/m32r/kernel/io_mappi2.c:259:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
[...]
+	} else
[...]

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#212: FILE: arch/m32r/kernel/io_mappi2.c:260:
+		*(volatile unsigned short *)__port2addr_ata(port) = w;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#213: FILE: arch/m32r/kernel/io_mappi2.c:261:
+	} else
[...]
 	  if (port >= 0x340 && port < 0x3a0)

CHECK:BRACES: Unbalanced braces around else statement
#213: FILE: arch/m32r/kernel/io_mappi2.c:261:
+	} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#221: FILE: arch/m32r/kernel/io_mappi2.c:290:
 	else
[...]
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#223: FILE: arch/m32r/kernel/io_mappi2.c:292:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                           ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#224: FILE: arch/m32r/kernel/io_mappi2.c:293:
+		*(volatile unsigned char *)__port2addr_ata(port) = b;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#225: FILE: arch/m32r/kernel/io_mappi2.c:294:
+	} else
[...]
 	if (port >= M32R_PCC_IOSTART0 && port <= M32R_PCC_IOEND0) {

CHECK:BRACES: Unbalanced braces around else statement
#225: FILE: arch/m32r/kernel/io_mappi2.c:294:
+	} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#233: FILE: arch/m32r/kernel/io_mappi2.c:310:
 	else
[...]
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#235: FILE: arch/m32r/kernel/io_mappi2.c:312:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                           ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#235: FILE: arch/m32r/kernel/io_mappi2.c:312:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
[...]
+	} else
[...]

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#236: FILE: arch/m32r/kernel/io_mappi2.c:313:
+		*(volatile unsigned short *)__port2addr_ata(port) = w;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#237: FILE: arch/m32r/kernel/io_mappi2.c:314:
+	} else
[...]
 	  if (port >= 0x340 && port < 0x3a0)

CHECK:BRACES: Unbalanced braces around else statement
#237: FILE: arch/m32r/kernel/io_mappi2.c:314:
+	} else

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#247: FILE: arch/m32r/kernel/io_mappi2.c:342:
+	else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#250: FILE: arch/m32r/kernel/io_mappi2.c:345:
+		unsigned char *portp = __port2addr_ata(port);
+		while(count--) *buf++ = *(volatile unsigned char *)portp;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#250: FILE: arch/m32r/kernel/io_mappi2.c:345:
+		while(count--) *buf++ = *(volatile unsigned char *)portp;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#250: FILE: arch/m32r/kernel/io_mappi2.c:345:
+		while(count--) *buf++ = *(volatile unsigned char *)portp;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#250: FILE: arch/m32r/kernel/io_mappi2.c:345:
+		while(count--) *buf++ = *(volatile unsigned char *)portp;

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#269: FILE: arch/m32r/kernel/io_mappi2.c:373:
+	} else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                                  ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#271: FILE: arch/m32r/kernel/io_mappi2.c:375:
+		while (count--) *buf++ = *(volatile unsigned short *)portp;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#271: FILE: arch/m32r/kernel/io_mappi2.c:375:
+		while (count--) *buf++ = *(volatile unsigned short *)portp;

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#285: FILE: arch/m32r/kernel/io_mappi2.c:401:
+	} else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#287: FILE: arch/m32r/kernel/io_mappi2.c:403:
+		while(count--) *(volatile unsigned char *)portp = *buf++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#287: FILE: arch/m32r/kernel/io_mappi2.c:403:
+		while(count--) *(volatile unsigned char *)portp = *buf++;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#287: FILE: arch/m32r/kernel/io_mappi2.c:403:
+		while(count--) *(volatile unsigned char *)portp = *buf++;

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#301: FILE: arch/m32r/kernel/io_mappi2.c:424:
+	} else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#303: FILE: arch/m32r/kernel/io_mappi2.c:426:
+		while(count--) *(volatile unsigned short *)portp = *buf++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#303: FILE: arch/m32r/kernel/io_mappi2.c:426:
+		while(count--) *(volatile unsigned short *)portp = *buf++;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#303: FILE: arch/m32r/kernel/io_mappi2.c:426:
+		while(count--) *(volatile unsigned short *)portp = *buf++;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000231887.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 34 warnings, 9 checks, 264 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000231887.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
