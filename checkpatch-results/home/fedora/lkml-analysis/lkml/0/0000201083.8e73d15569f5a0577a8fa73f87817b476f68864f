WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Small morning patch for bd_fd filter which closes "major security vulnerability"

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: bd_fd.c:131:
+       int err, size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: bd_fd.c:133:
+       size = f->priv_size - sizeof(*u);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: bd_fd.c:135:
+       p = kmalloc(sizeof(*p) + size, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: bd_fd.c:144:
+       if (size) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#87: FILE: bd_fd.c:144:
+       if (size) {
+               p->hmac = (u8 *)(p+1);

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: bd_fd.c:145:
+               p->hmac = (u8 *)(p+1);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: bd_fd.c:145:
+               p->hmac = (u8 *)(p+1);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#88: FILE: bd_fd.c:145:
+               p->hmac = (u8 *)(p+1);
                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: bd_fd.c:146:
+               memcpy(p->hmac, u+1, size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: bd_fd.c:146:
+               memcpy(p->hmac, u+1, size);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#89: FILE: bd_fd.c:146:
+               memcpy(p->hmac, u+1, size);
                                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: bd_fd.c:147:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: bd_fd.c:163:
+       if (size)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#99: FILE: bd_fd.c:163:
+       if (size)
+               err = bd_fd_check_media(dev, f, size);

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: bd_fd.c:164:
+               err = bd_fd_check_media(dev, f, size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: bd_fd.c:164:
+               err = bd_fd_check_media(dev, f, size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: bd_fd.c:166:
+       return err;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#114: FILE: bd_fd.c:321:
+}
+#define SHA512_DIGEST_SIZE 64

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: bd_fd.c:324:
+       struct crypto_tfm *tfm;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: bd_fd.c:325:
+       int err, i; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: bd_fd.c:325:
+       int err, i; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: bd_fd.c:326:
+       loff_t storage_size, pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: bd_fd.c:327:
+       struct bd_fd_private *p = f->priv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: bd_fd.c:328:
+       struct page *pg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: bd_fd.c:329:
+       struct bd_transfer t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: bd_fd.c:330:
+       u8 hmac[SHA512_DIGEST_SIZE];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: bd_fd.c:331:
+       u8 scratch[SHA512_DIGEST_SIZE];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: bd_fd.c:332:
+       struct scatterlist sg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: bd_fd.c:334:
+       if (size != SHA512_DIGEST_SIZE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#127: FILE: bd_fd.c:334:
+       if (size != SHA512_DIGEST_SIZE)
+               return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: bd_fd.c:335:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: bd_fd.c:335:
+               return -EINVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: bd_fd.c:336:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: bd_fd.c:336:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: bd_fd.c:337:
+       tfm = crypto_alloc_tfm("sha512", 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: bd_fd.c:338:
+       if (!tfm) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#131: FILE: bd_fd.c:338:
+       if (!tfm) {
+               dprintk("Failed to create sha512 tfm for device %s.\n", dev->name);

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: bd_fd.c:339:
+               dprintk("Failed to create sha512 tfm for device %s.\n", dev->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: bd_fd.c:339:
+               dprintk("Failed to create sha512 tfm for device %s.\n", dev->name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: bd_fd.c:340:
+               return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: bd_fd.c:340:
+               return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: bd_fd.c:341:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: bd_fd.c:343:
+       storage_size = bd_get_size(dev, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: bd_fd.c:344:
+       if (!storage_size) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#137: FILE: bd_fd.c:344:
+       if (!storage_size) {
+               dprintk("Storage size of %s is %llu.\n", dev->name, storage_size);

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: bd_fd.c:345:
+               dprintk("Storage size of %s is %llu.\n", dev->name, storage_size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: bd_fd.c:345:
+               dprintk("Storage size of %s is %llu.\n", dev->name, storage_size);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: bd_fd.c:346:
+               err = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: bd_fd.c:346:
+               err = -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: bd_fd.c:347:
+               goto err_out_free_tfm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: bd_fd.c:347:
+               goto err_out_free_tfm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: bd_fd.c:348:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: bd_fd.c:350:
+       pg = alloc_pages(GFP_KERNEL, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: bd_fd.c:351:
+       if (!pg) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#144: FILE: bd_fd.c:351:
+       if (!pg) {
+               dprintk("Failed to get free scratch page for device %s.\n", dev->name);

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: bd_fd.c:352:
+               dprintk("Failed to get free scratch page for device %s.\n", dev->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: bd_fd.c:352:
+               dprintk("Failed to get free scratch page for device %s.\n", dev->name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: bd_fd.c:353:
+               err = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: bd_fd.c:353:
+               err = -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: bd_fd.c:354:
+               goto err_out_free_tfm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: bd_fd.c:354:
+               goto err_out_free_tfm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: bd_fd.c:355:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: bd_fd.c:357:
+       memset(&t, 0, sizeof(t));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: bd_fd.c:359:
+       for (pos=0; pos<storage_size;) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#152: FILE: bd_fd.c:359:
+       for (pos=0; pos<storage_size;) {
+               t.src.page = pg;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#152: FILE: bd_fd.c:359:
+       for (pos=0; pos<storage_size;) {
                ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#152: FILE: bd_fd.c:359:
+       for (pos=0; pos<storage_size;) {
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: bd_fd.c:360:
+               t.src.page = pg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: bd_fd.c:360:
+               t.src.page = pg;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: bd_fd.c:361:
+               t.src.off = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: bd_fd.c:361:
+               t.src.off = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: bd_fd.c:362:
+               t.src.size = (storage_size - pos > PAGE_SIZE)?PAGE_SIZE:(storage_size - pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: bd_fd.c:362:
+               t.src.size = (storage_size - pos > PAGE_SIZE)?PAGE_SIZE:(storage_size - pos);$

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#155: FILE: bd_fd.c:362:
+               t.src.size = (storage_size - pos > PAGE_SIZE)?PAGE_SIZE:(storage_size - pos);
                                                             ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#155: FILE: bd_fd.c:362:
+               t.src.size = (storage_size - pos > PAGE_SIZE)?PAGE_SIZE:(storage_size - pos);
                                                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: bd_fd.c:363:
+               t.cmd = READ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: bd_fd.c:363:
+               t.cmd = READ;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: bd_fd.c:364:
+               t.pos = pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: bd_fd.c:364:
+               t.pos = pos;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: bd_fd.c:365:
+               t.f = f;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: bd_fd.c:365:
+               t.f = f;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: bd_fd.c:366:
+               t.f->complete = bd_fd_complete;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: bd_fd.c:366:
+               t.f->complete = bd_fd_complete;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: bd_fd.c:367:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: bd_fd.c:367:
+               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: bd_fd.c:367:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: bd_fd.c:368:
+               file_bd_read(&t);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: bd_fd.c:368:
+               file_bd_read(&t);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: bd_fd.c:370:
+               pos += PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: bd_fd.c:370:
+               pos += PAGE_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: bd_fd.c:372:
+               sg.page = pg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: bd_fd.c:372:
+               sg.page = pg;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: bd_fd.c:373:
+               sg.offset = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: bd_fd.c:373:
+               sg.offset = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: bd_fd.c:374:
+               sg.length = PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: bd_fd.c:374:
+               sg.length = PAGE_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: bd_fd.c:376:
+               crypto_digest_digest(tfm, &sg, 1, scratch);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: bd_fd.c:376:
+               crypto_digest_digest(tfm, &sg, 1, scratch);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: bd_fd.c:378:
+               for (i=0; i<sizeof(hmac); ++i) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: bd_fd.c:378:
+               for (i=0; i<sizeof(hmac); ++i) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#171: FILE: bd_fd.c:378:
+               for (i=0; i<sizeof(hmac); ++i) {
+                       hmac[i] ^= scratch[i];

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#171: FILE: bd_fd.c:378:
+               for (i=0; i<sizeof(hmac); ++i) {
                      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#171: FILE: bd_fd.c:378:
+               for (i=0; i<sizeof(hmac); ++i) {
                           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#171: FILE: bd_fd.c:378:
+               for (i=0; i<sizeof(hmac); ++i) {
+                       hmac[i] ^= scratch[i];
+               }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: bd_fd.c:379:
+                       hmac[i] ^= scratch[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: bd_fd.c:379:
+                       hmac[i] ^= scratch[i];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: bd_fd.c:380:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: bd_fd.c:380:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: bd_fd.c:381:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: bd_fd.c:383:
+       __free_pages(pg, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: bd_fd.c:386:
+       crypto_free_tfm(tfm);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: bd_fd.c:388:
+       err = memcmp(hmac, p->hmac, sizeof(hmac));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: bd_fd.c:390:
+       printk("Calculated: ");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#183: FILE: bd_fd.c:390:
+       printk("Calculated: ");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: bd_fd.c:391:
+       for (i=0; i<sizeof(hmac); ++i) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#184: FILE: bd_fd.c:391:
+       for (i=0; i<sizeof(hmac); ++i) {
+               printk("%02x ", hmac[i]);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#184: FILE: bd_fd.c:391:
+       for (i=0; i<sizeof(hmac); ++i) {
              ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#184: FILE: bd_fd.c:391:
+       for (i=0; i<sizeof(hmac); ++i) {
                   ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#184: FILE: bd_fd.c:391:
+       for (i=0; i<sizeof(hmac); ++i) {
+               printk("%02x ", hmac[i]);
+       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: bd_fd.c:392:
+               printk("%02x ", hmac[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: bd_fd.c:392:
+               printk("%02x ", hmac[i]);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#185: FILE: bd_fd.c:392:
+               printk("%02x ", hmac[i]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: bd_fd.c:393:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: bd_fd.c:394:
+       printk("\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#187: FILE: bd_fd.c:394:
+       printk("\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: bd_fd.c:395:
+       printk("Provided  : ");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#188: FILE: bd_fd.c:395:
+       printk("Provided  : ");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: bd_fd.c:396:
+       for (i=0; i<sizeof(hmac); ++i) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#189: FILE: bd_fd.c:396:
+       for (i=0; i<sizeof(hmac); ++i) {
+               printk("%02x ", p->hmac[i]);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#189: FILE: bd_fd.c:396:
+       for (i=0; i<sizeof(hmac); ++i) {
              ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#189: FILE: bd_fd.c:396:
+       for (i=0; i<sizeof(hmac); ++i) {
                   ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#189: FILE: bd_fd.c:396:
+       for (i=0; i<sizeof(hmac); ++i) {
+               printk("%02x ", p->hmac[i]);
+       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: bd_fd.c:397:
+               printk("%02x ", p->hmac[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: bd_fd.c:397:
+               printk("%02x ", p->hmac[i]);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#190: FILE: bd_fd.c:397:
+               printk("%02x ", p->hmac[i]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: bd_fd.c:398:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: bd_fd.c:399:
+       printk("\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#192: FILE: bd_fd.c:399:
+       printk("\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: bd_fd.c:400:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: bd_fd.c:400:
+               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: bd_fd.c:400:
+               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: bd_fd.c:401:
+       return err;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#197: FILE: bd_fd.c:404:
+
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#198: FILE: bd_fd.c:405:
 int __devinit bd_fd_init_dev(void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: bd_fd.h:38:
+       u8                      *hmac;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000201083.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 44 errors, 96 warnings, 6 checks, 152 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000201083.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
