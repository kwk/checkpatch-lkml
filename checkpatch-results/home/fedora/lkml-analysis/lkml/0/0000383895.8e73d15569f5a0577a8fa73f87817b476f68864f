WARNING:TYPO_SPELLING: 'existant' may be misspelled - perhaps 'existent'?
#18: 
- Don't attach non existant drives
                   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#21: 
diff -u --new-file --recursive --exclude-from /usr/src/exclude linux-2.5.65/drivers/ide/ide.c linux-2.5.65-ac2/drivers/ide/ide.c

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#27: FILE: drivers/ide/ide.c:2:
+ *  linux/drivers/ide/ide.c		Version 7.00beta2	Mar 05 2003

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#43: FILE: drivers/ide/ide.c:218:
+extern ide_driver_t idedefault_driver;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#44: FILE: drivers/ide/ide.c:219:
+static void setup_driver_defaults (ide_drive_t *drive);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#84: FILE: drivers/ide/ide.c:595:
+	BUG_ON(in_interrupt());

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#85: FILE: drivers/ide/ide.c:596:
+	BUG_ON(irqs_disabled());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#146: FILE: drivers/ide/ide.c:661:
+			BUG_ON(hwgroup->drive != drive);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#160: FILE: drivers/ide/ide.c:675:
+		BUG_ON(hwgroup->drive == drive);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#178: FILE: drivers/ide/ide.c:685:
+		BUG_ON(hwgroup->hwif != hwif);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#193: FILE: drivers/ide/ide.c:700:
+			BUG_ON(hwgroup->drive != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "hwgroup->drive"
#193: FILE: drivers/ide/ide.c:700:
+			BUG_ON(hwgroup->drive != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#196: FILE: drivers/ide/ide.c:703:
+		BUG_ON(hwgroup->hwif == hwif);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#244: FILE: drivers/ide/ide.c:1380:
+	schedule_timeout(1+HZ/20);
 	                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#244: FILE: drivers/ide/ide.c:1380:
+	schedule_timeout(1+HZ/20);
 	                     ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxW)
#262: FILE: drivers/ide/ide.c:1414:
+	if (DRIVER(drive)!= &idedefault_driver && !strcmp(DRIVER(drive)->name, driver))
 	                 ^

ERROR:SPACING: space required before the open parenthesis '('
#272: FILE: drivers/ide/ide.c:1441:
+	if(idedefault_driver.attach(drive) != 0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#294: FILE: drivers/ide/ide.c:1550:
+			if (!capable(CAP_SYS_RAWIO)) return -EACCES;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#303: FILE: drivers/ide/ide.c:1558:
+			if (!capable(CAP_SYS_RAWIO)) return -EACCES;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: drivers/ide/ide.c:1577:
+^I^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: drivers/ide/ide.c:1587:
+^I^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#338: FILE: drivers/ide/ide.c:1589:
+			if(HWGROUP(drive)->handler)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#339: FILE: drivers/ide/ide.c:1590:
+				BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: drivers/ide/ide.c:1591:
+^I^I^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#342: FILE: drivers/ide/ide.c:1593:
+			/* Ensure nothing gets queued after we
+			   drop the lock. Reset will clear the busy */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#342: FILE: drivers/ide/ide.c:1593:
+			   drop the lock. Reset will clear the busy */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: drivers/ide/ide.c:1594:
+^I^I   $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#368: FILE: drivers/ide/ide.c:2227:
+	if (drive->usage || DRIVER(drive)->busy) {
 		return 1;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#376: FILE: drivers/ide/ide.c:2295:
+static ide_startstop_t default_abort (ide_drive_t *drive, const char *msg)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#388: FILE: drivers/ide/ide.c:2311:
+	if (d->abort == NULL)		d->abort = default_abort;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!d->abort"
#388: FILE: drivers/ide/ide.c:2311:
+	if (d->abort == NULL)		d->abort = default_abort;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#396: FILE: drivers/ide/ide.c:2322:
+	BUG_ON(drive->driver == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drive->driver"
#396: FILE: drivers/ide/ide.c:2322:
+	BUG_ON(drive->driver == NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#397: FILE: drivers/ide/ide.c:2323:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000383895.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 18 warnings, 5 checks, 402 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000383895.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
