WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#98: 
diff -Nrup ../tmp/linux-2.6.2-rc3/fs/devfs/base.c linux-2.6.2-rc2/fs/devfs/base.c

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: fs/devfs/base.c:802:
+    unsigned char vfs:1;/*  Whether the VFS may delete the entry   */$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#222: FILE: fs/devfs/base.c:1070:
+	if (new == NULL )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new"
#222: FILE: fs/devfs/base.c:1070:
+	if (new == NULL )

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#241: FILE: fs/devfs/base.c:1216:
 	if (S_ISLNK (de->mode) && traverse_symlink)
[...]
+		/* FIXME what if it puts outside of mounted tree? */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#266: FILE: fs/devfs/base.c:1434:
+		printk(KERN_WARNING "%s: invalid format string %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: fs/devfs/base.c:1435:
+		printk(KERN_WARNING "%s: invalid format string %s\n",
+				__FUNCTION__, fmt);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#267: FILE: fs/devfs/base.c:1435:
+				__FUNCTION__, fmt);

WARNING:TYPO_SPELLING: 'invalide' may be misspelled - perhaps 'invalid'?
#298: FILE: fs/devfs/base.c:1466:
+		printk(KERN_WARNING "%s: invalide mode (%u) for %s\n",
 		                         ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#298: FILE: fs/devfs/base.c:1466:
+		printk(KERN_WARNING "%s: invalide mode (%u) for %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: fs/devfs/base.c:1467:
+		printk(KERN_WARNING "%s: invalide mode (%u) for %s\n",
+				__FUNCTION__, mode, fmt);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#299: FILE: fs/devfs/base.c:1467:
+				__FUNCTION__, mode, fmt);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#328: FILE: fs/devfs/base.c:1484:
+				__FUNCTION__, mode, fmt);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#463: FILE: fs/devfs/base.c:1948:
+		PRINTK("(%s): unknown mode %o de: %p\n",
+			de->name, de->mode, de);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#464: FILE: fs/devfs/base.c:1949:
+		iput(inode);
 		^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#484: FILE: fs/devfs/base.c:2034:
+	struct file_operations *old_fops, *new_fops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_fops"
#515: FILE: fs/devfs/base.c:2049:
+	if (new_fops == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#520: FILE: fs/devfs/base.c:2054:
+	if (err) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#523: FILE: fs/devfs/base.c:2057:
+	} else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: fs/devfs/base.c:2161:
+    int need_lock;$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#556: FILE: fs/devfs/base.c:2176:
+     *   as nd
             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#564: FILE: fs/devfs/base.c:2184:
+    need_lock = nd &&
                 ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: fs/devfs/base.c:2184:
+    need_lock = nd &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: fs/devfs/base.c:2187:
+    if (need_lock)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#577: FILE: fs/devfs/base.c:2199:
+	if (dentry->d_inode)
+	    goto out;

WARNING:TABSTOP: Statements should start on a tabstop
#578: FILE: fs/devfs/base.c:2200:
+	    goto out;

WARNING:TABSTOP: Statements should start on a tabstop
#586: FILE: fs/devfs/base.c:2207:
+	    if (de == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!de"
#586: FILE: fs/devfs/base.c:2207:
+	    if (de == NULL)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#593: FILE: fs/devfs/base.c:2213:
+	if (!inode)
+	    goto out;

WARNING:TABSTOP: Statements should start on a tabstop
#594: FILE: fs/devfs/base.c:2214:
+	    goto out;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: fs/devfs/base.c:2221:
+    if (lookup_info == NULL)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lookup_info"
#603: FILE: fs/devfs/base.c:2221:
+    if (lookup_info == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: fs/devfs/base.c:2246:
+    if (need_lock)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: fs/devfs/base.c:2297:
+    down (&dir->i_sem);      /*  Grab it again because them's the rules  */$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#633: FILE: fs/devfs/base.c:2297:
+    down (&dir->i_sem);      /*  Grab it again because them's the rules  */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: fs/devfs/base.c:2341:
+    if (!de->vfs) return -EPERM;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#650: FILE: fs/devfs/base.c:2341:
+    if (!de->vfs) return -EPERM;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#659: FILE: fs/devfs/base.c:2369:
+    de->vfs = TRUE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#668: FILE: fs/devfs/base.c:2398:
+    de->vfs = TRUE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: fs/devfs/base.c:2428:
+    if (!de->vfs) return -EPERM;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#677: FILE: fs/devfs/base.c:2428:
+    if (!de->vfs) return -EPERM;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: fs/devfs/base.c:2462:
+    de->vfs = TRUE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: fs/devfs/base.c:2463:
+    if (S_ISCHR(mode) || S_ISBLK(mode))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#706: FILE: fs/devfs/base.c:2617:
+    if (S_ISCHR(de->mode) || S_ISBLK(de->mode)) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!_devfs_get_root_entry"
#728: FILE: fs/devfs/base.c:2790:
+	if (_devfs_get_root_entry() == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#734: FILE: fs/devfs/base.c:2793:
+	printk(KERN_INFO "%s: %s Richard Gooch (rgooch@atnf.csiro.au)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#737: FILE: fs/devfs/base.c:2796:
+	devfsd_buf_cache = kmem_cache_create("devfsd_event",
 					  sizeof (struct devfsd_buf_entry),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#746: FILE: fs/devfs/base.c:2802:
+	printk(KERN_INFO "%s: devfs_debug: 0x%0x\n", DEVFS_NAME, devfs_debug);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#757: FILE: fs/devfs/base.c:2804:
+	printk(KERN_INFO "%s: boot_options: 0x%0x\n", DEVFS_NAME, boot_options);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#763: FILE: fs/devfs/base.c:2810:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#765: FILE: fs/devfs/base.c:2812:
+	devfsd = _devfs_alloc_entry(".devfsd", 0, S_IFCHR|S_IRUSR|S_IWUSR);
 	                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#765: FILE: fs/devfs/base.c:2812:
+	devfsd = _devfs_alloc_entry(".devfsd", 0, S_IFCHR|S_IRUSR|S_IWUSR);
 	                                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#765: FILE: fs/devfs/base.c:2812:
+	devfsd = _devfs_alloc_entry(".devfsd", 0, S_IFCHR|S_IRUSR|S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:SPACING: space prohibited before that close parenthesis ')'
#766: FILE: fs/devfs/base.c:2813:
+	if (devfsd == NULL )

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!devfsd"
#766: FILE: fs/devfs/base.c:2813:
+	if (devfsd == NULL )

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#772: FILE: fs/devfs/base.c:2819:
+	stat = _devfs_alloc_entry(".stat", 0, S_IFCHR|S_IRUGO);
 	                                             ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#772: FILE: fs/devfs/base.c:2819:
+	stat = _devfs_alloc_entry(".stat", 0, S_IFCHR|S_IRUGO);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#773: FILE: fs/devfs/base.c:2820:
+	if (stat == NULL )

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!stat"
#773: FILE: fs/devfs/base.c:2820:
+	if (stat == NULL )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#776: FILE: fs/devfs/base.c:2823:
+	_devfs_append_entry (root_entry, stat, NULL);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000307311.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 38 warnings, 16 checks, 662 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000307311.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
