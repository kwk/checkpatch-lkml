WARNING:TYPO_SPELLING: 'catched' may be misspelled - perhaps 'caught'?
#77: 
	  now.	This condition should have been catched by
	      	                                ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#255: FILE: drivers/scsi/scsi_lib.c:31:
+#define MIN_RESET_DELAY (2*HZ)
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#333: FILE: drivers/scsi/scsi_lib.c:1263:
+static inline void scsi_wait_reset(struct Scsi_Host *shost)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: drivers/scsi/scsi_lib.c:1288:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#367: FILE: drivers/scsi/scsi_lib.c:1297:
+^Iif (cmd->serial_number == 0) $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#399: FILE: drivers/scsi/scsi_lib.c:1332:
+	 * function can go away. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#441: FILE: drivers/scsi/scsi_lib.c:1345:
+			printk(KERN_ERR

CHECK:BRACES: braces {} should be used on all arms of this statement
#456: FILE: drivers/scsi/scsi_lib.c:1360:
+		if (blk_queue_tagged(q)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#458: FILE: drivers/scsi/scsi_lib.c:1362:
+				BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: Unbalanced braces around else statement
#460: FILE: drivers/scsi/scsi_lib.c:1364:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#472: FILE: drivers/scsi/scsi_lib.c:1376:
+			SCSI_LOG_MLQUEUE(3,
+			    printk("%s: rejecting request\n", __FUNCTION__));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#472: FILE: drivers/scsi/scsi_lib.c:1376:
+			    printk("%s: rejecting request\n", __FUNCTION__));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#472: FILE: drivers/scsi/scsi_lib.c:1376:
+			    printk("%s: rejecting request\n", __FUNCTION__));

WARNING:LINE_SPACING: Missing a blank line after declarations
#490: FILE: drivers/scsi/scsi_lib.c:1389:
+			struct scsi_target *target = scsi_target(sdev);
+			if (target->starget_sdev_user &&

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#497: FILE: drivers/scsi/scsi_lib.c:1396:
+		 * be moved to prep_fn() where it belongs. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: drivers/scsi/scsi_lib.c:1409:
+			SCSI_LOG_MLQUEUE(3,
+			    printk("%s: queuecommand deferred request (%d)\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#522: FILE: drivers/scsi/scsi_lib.c:1409:
+			    printk("%s: queuecommand deferred request (%d)\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#523: FILE: drivers/scsi/scsi_lib.c:1410:
+				   __FUNCTION__, ret));

WARNING:INDENTED_LABEL: labels should not be indented
#556: FILE: drivers/scsi/scsi_lib.c:1427:
+	relock:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: drivers/scsi/scsi_lib.c:1453:
+	SCSI_LOG_MLQUEUE(3,
+	    printk("%s: requeueing request\n", __FUNCTION__));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#595: FILE: drivers/scsi/scsi_lib.c:1453:
+	    printk("%s: requeueing request\n", __FUNCTION__));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#595: FILE: drivers/scsi/scsi_lib.c:1453:
+	    printk("%s: requeueing request\n", __FUNCTION__));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000183599.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 13 warnings, 7 checks, 514 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000183599.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
