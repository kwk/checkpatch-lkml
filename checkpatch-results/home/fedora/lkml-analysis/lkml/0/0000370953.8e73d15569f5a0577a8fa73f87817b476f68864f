WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
> suspect even the MTRR's should be handled as a driver, since unlike things

ERROR:TRAILING_WHITESPACE: trailing whitespace
#51: FILE: arch/i386/kernel/cpu/mtrr/main.c:5:
+    Copyright (c) 2003^I     Nigel Cunningham & Pavel Machek $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#51: FILE: arch/i386/kernel/cpu/mtrr/main.c:5:
+    Copyright (c) 2003^I     Nigel Cunningham & Pavel Machek $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#51: FILE: arch/i386/kernel/cpu/mtrr/main.c:5:
+    Copyright (c) 2003	     Nigel Cunningham & Pavel Machek 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Copyright>
#51: FILE: arch/i386/kernel/cpu/mtrr/main.c:5:
+    Copyright (c) 2003	     Nigel Cunningham & Pavel Machek 

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Nigel>
#51: FILE: arch/i386/kernel/cpu/mtrr/main.c:5:
+    Copyright (c) 2003	     Nigel Cunningham & Pavel Machek 

CHECK:CAMELCASE: Avoid CamelCase: <Cunningham>
#51: FILE: arch/i386/kernel/cpu/mtrr/main.c:5:
+    Copyright (c) 2003	     Nigel Cunningham & Pavel Machek 

CHECK:CAMELCASE: Avoid CamelCase: <Pavel>
#51: FILE: arch/i386/kernel/cpu/mtrr/main.c:5:
+    Copyright (c) 2003	     Nigel Cunningham & Pavel Machek 

CHECK:CAMELCASE: Avoid CamelCase: <Machek>
#51: FILE: arch/i386/kernel/cpu/mtrr/main.c:5:
+    Copyright (c) 2003	     Nigel Cunningham & Pavel Machek 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#67: FILE: arch/i386/kernel/cpu/mtrr/main.c:649:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: arch/i386/kernel/cpu/mtrr/main.c:649:
+ $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#70: FILE: arch/i386/kernel/cpu/mtrr/main.c:652:
+struct mtrr_suspend_state
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: arch/i386/kernel/cpu/mtrr/main.c:653:
+     mtrr_type ltype;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: arch/i386/kernel/cpu/mtrr/main.c:654:
+     unsigned long lbase;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: arch/i386/kernel/cpu/mtrr/main.c:655:
+     unsigned int lsize;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#77: FILE: arch/i386/kernel/cpu/mtrr/main.c:659:
+/* We return a pointer ptr on an area of *ptr bytes
+   beginning at ptr+sizeof(int)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#78: FILE: arch/i386/kernel/cpu/mtrr/main.c:660:
+   This buffer has to be saved in some way during suspension */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: arch/i386/kernel/cpu/mtrr/main.c:663:
+     int i, len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: arch/i386/kernel/cpu/mtrr/main.c:664:
+     int *ptr = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: arch/i386/kernel/cpu/mtrr/main.c:665:
+     static struct mtrr_suspend_state *mtrr_suspend_buffer=NULL;$

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#83: FILE: arch/i386/kernel/cpu/mtrr/main.c:665:
+     static struct mtrr_suspend_state *mtrr_suspend_buffer=NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#83: FILE: arch/i386/kernel/cpu/mtrr/main.c:665:
+     static struct mtrr_suspend_state *mtrr_suspend_buffer=NULL;
                                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: arch/i386/kernel/cpu/mtrr/main.c:666:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: arch/i386/kernel/cpu/mtrr/main.c:666:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: arch/i386/kernel/cpu/mtrr/main.c:667:
+     if(!mtrr_suspend_buffer)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#85: FILE: arch/i386/kernel/cpu/mtrr/main.c:667:
+     if(!mtrr_suspend_buffer)
+     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 10)
#85: FILE: arch/i386/kernel/cpu/mtrr/main.c:667:
+     if(!mtrr_suspend_buffer)
+     {

ERROR:SPACING: space required before the open parenthesis '('
#85: FILE: arch/i386/kernel/cpu/mtrr/main.c:667:
+     if(!mtrr_suspend_buffer)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: arch/i386/kernel/cpu/mtrr/main.c:668:
+     {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#87: FILE: arch/i386/kernel/cpu/mtrr/main.c:669:
+	  len = num_var_ranges * sizeof (struct mtrr_suspend_state) + sizeof(int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#88: FILE: arch/i386/kernel/cpu/mtrr/main.c:670:
+	  ptr = kmalloc (len, GFP_KERNEL);

WARNING:TABSTOP: Statements should start on a tabstop
#89: FILE: arch/i386/kernel/cpu/mtrr/main.c:671:
+	  if (ptr == NULL)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 15)
#89: FILE: arch/i386/kernel/cpu/mtrr/main.c:671:
+	  if (ptr == NULL)
+	       return(NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ptr"
#89: FILE: arch/i386/kernel/cpu/mtrr/main.c:671:
+	  if (ptr == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TABSTOP: Statements should start on a tabstop
#90: FILE: arch/i386/kernel/cpu/mtrr/main.c:672:
+	       return(NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: arch/i386/kernel/cpu/mtrr/main.c:677:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: arch/i386/kernel/cpu/mtrr/main.c:678:
+     for (i = 0; i < num_var_ranges; ++i,mtrr_suspend_buffer++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 10)
#96: FILE: arch/i386/kernel/cpu/mtrr/main.c:678:
+     for (i = 0; i < num_var_ranges; ++i,mtrr_suspend_buffer++)
+	  mtrr_if->get (i,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#96: FILE: arch/i386/kernel/cpu/mtrr/main.c:678:
+     for (i = 0; i < num_var_ranges; ++i,mtrr_suspend_buffer++)
                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#97: FILE: arch/i386/kernel/cpu/mtrr/main.c:679:
+	  mtrr_if->get (i,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around mtrr_suspend_buffer->lbase
#98: FILE: arch/i386/kernel/cpu/mtrr/main.c:680:
+		       &(mtrr_suspend_buffer->lbase),

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around mtrr_suspend_buffer->lsize
#99: FILE: arch/i386/kernel/cpu/mtrr/main.c:681:
+		       &(mtrr_suspend_buffer->lsize),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around mtrr_suspend_buffer->ltype
#100: FILE: arch/i386/kernel/cpu/mtrr/main.c:682:
+		       &(mtrr_suspend_buffer->ltype));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: arch/i386/kernel/cpu/mtrr/main.c:683:
+     return(ptr);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#101: FILE: arch/i386/kernel/cpu/mtrr/main.c:683:
+     return(ptr);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: arch/i386/kernel/cpu/mtrr/main.c:689:
+     int i, len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: arch/i386/kernel/cpu/mtrr/main.c:690:
+     struct mtrr_suspend_state *mtrr_suspend_buffer;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: arch/i386/kernel/cpu/mtrr/main.c:691:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: arch/i386/kernel/cpu/mtrr/main.c:691:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: arch/i386/kernel/cpu/mtrr/main.c:692:
+     len = num_var_ranges * sizeof (struct mtrr_suspend_state) + sizeof(int);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#110: FILE: arch/i386/kernel/cpu/mtrr/main.c:692:
+     len = num_var_ranges * sizeof (struct mtrr_suspend_state) + sizeof(int);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: arch/i386/kernel/cpu/mtrr/main.c:693:
+     if(*ptr != len)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#111: FILE: arch/i386/kernel/cpu/mtrr/main.c:693:
+     if(*ptr != len)
+     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 10)
#111: FILE: arch/i386/kernel/cpu/mtrr/main.c:693:
+     if(*ptr != len)
+     {

ERROR:SPACING: space required before the open parenthesis '('
#111: FILE: arch/i386/kernel/cpu/mtrr/main.c:693:
+     if(*ptr != len)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: arch/i386/kernel/cpu/mtrr/main.c:694:
+     {$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#113: FILE: arch/i386/kernel/cpu/mtrr/main.c:695:
+	  printk ("mtrr: Resuming failed due to different number of MTRRs\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#113: FILE: arch/i386/kernel/cpu/mtrr/main.c:695:
+	  printk ("mtrr: Resuming failed due to different number of MTRRs\n");

WARNING:TABSTOP: Statements should start on a tabstop
#114: FILE: arch/i386/kernel/cpu/mtrr/main.c:696:
+	  return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: arch/i386/kernel/cpu/mtrr/main.c:697:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: arch/i386/kernel/cpu/mtrr/main.c:698:
+     ptr++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: arch/i386/kernel/cpu/mtrr/main.c:699:
+     mtrr_suspend_buffer=(struct mtrr_suspend_state *)ptr;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#117: FILE: arch/i386/kernel/cpu/mtrr/main.c:699:
+     mtrr_suspend_buffer=(struct mtrr_suspend_state *)ptr;
                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: arch/i386/kernel/cpu/mtrr/main.c:700:
+     for (i = 0; i < num_var_ranges; ++i,mtrr_suspend_buffer++)     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: arch/i386/kernel/cpu/mtrr/main.c:700:
+     for (i = 0; i < num_var_ranges; ++i,mtrr_suspend_buffer++)     $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 10)
#118: FILE: arch/i386/kernel/cpu/mtrr/main.c:700:
+     for (i = 0; i < num_var_ranges; ++i,mtrr_suspend_buffer++)     
+	  if (mtrr_suspend_buffer->lsize)	  

ERROR:SPACING: space required after that ',' (ctx:VxV)
#118: FILE: arch/i386/kernel/cpu/mtrr/main.c:700:
+     for (i = 0; i < num_var_ranges; ++i,mtrr_suspend_buffer++)     
                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: arch/i386/kernel/cpu/mtrr/main.c:701:
+^I  if (mtrr_suspend_buffer->lsize)^I  $

WARNING:TABSTOP: Statements should start on a tabstop
#119: FILE: arch/i386/kernel/cpu/mtrr/main.c:701:
+	  if (mtrr_suspend_buffer->lsize)	  

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 15)
#119: FILE: arch/i386/kernel/cpu/mtrr/main.c:701:
+	  if (mtrr_suspend_buffer->lsize)	  
+	       set_mtrr(i,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000370953.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 44 warnings, 9 checks, 118 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000370953.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
