WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#40: 
* all blocks undergoing a write are now marked locked and !uptodate at the
                                                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#63: FILE: drivers/md/Kconfig:165:
+config MD_RAID456_WORKQUEUE
+	depends on MD_RAID456
+	bool "Offload raid work to a workqueue from raid5d"
+	---help---
+	  This option enables raid work (block copy and xor operations)
+	  to run in a workqueue.  If your platform has a high context
+	  switch penalty say N.  If you are using hardware offload or
+	  are running on an SMP platform say Y.
+
+	  If unsure say, Y.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#74: FILE: drivers/md/Kconfig:176:
+config MD_RAID456_WORKQUEUE_MULTITHREAD
+	depends on MD_RAID456_WORKQUEUE && SMP
+	bool "Enable multi-threaded raid processing"
+	default y
+	---help---
+	  This option controls whether the raid workqueue will be multi-
+	  threaded or single threaded.
+
+	  If unsure say, Y.
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#95: FILE: drivers/md/raid5.c:225:
+	BUG_ON(sh->ops.state);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#96: FILE: drivers/md/raid5.c:226:
+	BUG_ON(sh->ops.pending);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#117: FILE: drivers/md/raid5.c:1277:
+	int locked=0;
 	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#124: FILE: drivers/md/raid5.c:1284:
+			for (i=disks ; i-- ;) {
 			      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#131: FILE: drivers/md/raid5.c:1291:
+			for (i=disks ; i-- ;) {
 			      ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#143: FILE: drivers/md/raid5.c:1303:
+		BUG_ON(!test_bit(R5_UPTODATE, &sh->dev[pd_idx].flags));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#147: FILE: drivers/md/raid5.c:1307:
+		for (i=disks ; i-- ;) {
 		      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#149: FILE: drivers/md/raid5.c:1309:
+			struct r5dev *dev = &sh->dev[i];
+			if (i==pd_idx)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#149: FILE: drivers/md/raid5.c:1309:
+			if (i==pd_idx)
 			     ^

CHECK:CAMELCASE: Avoid CamelCase: <R5_RMWReq>
#158: FILE: drivers/md/raid5.c:1318:
+				set_bit(R5_RMWReq, &dev->flags);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: drivers/md/raid5.c:1335:
+	PRINTK("%s: stripe %llu locked: %d op_state: %lx\n",
+		__FUNCTION__, (unsigned long long)sh->sector,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#175: FILE: drivers/md/raid5.c:1335:
+		__FUNCTION__, (unsigned long long)sh->sector,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#196: FILE: drivers/md/raid5.c:1751:
+	int non_overwrite=0, write_complete=0;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#196: FILE: drivers/md/raid5.c:1751:
+	int non_overwrite=0, write_complete=0;
 	                                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: drivers/md/raid5.c:2002:
+	if (test_bit(STRIPE_OP_RCW, &sh->state) &&
+		test_bit(STRIPE_OP_RCW_Done, &sh->ops.state)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: drivers/md/raid5.c:2009:
+	if (test_bit(STRIPE_OP_RMW, &sh->state) &&
+		test_bit(STRIPE_OP_RMW_Done, &sh->ops.state)) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#229: FILE: drivers/md/raid5.c:2012:
+		BUG_ON(++write_complete > 1);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#230: FILE: drivers/md/raid5.c:2013:
+		for (i=disks; i--;)
 		      ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#238: FILE: drivers/md/raid5.c:2021:
+		BUG_ON(!test_bit(R5_UPTODATE, &sh->dev[sh->pd_idx].flags));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#239: FILE: drivers/md/raid5.c:2022:
+		for (i=disks; i--;) {
 		      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: drivers/md/raid5.c:2025:
+			if (test_bit(R5_LOCKED, &dev->flags) &&
+				(i == sh->pd_idx || dev->written)) {

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantwrite>
#244: FILE: drivers/md/raid5.c:2027:
+				set_bit(R5_Wantwrite, &dev->flags);

CHECK:CAMELCASE: Avoid CamelCase: <R5_Insync>
#245: FILE: drivers/md/raid5.c:2028:
+				if (!test_bit(R5_Insync, &dev->flags)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#246: FILE: drivers/md/raid5.c:2029:
+				if (!test_bit(R5_Insync, &dev->flags)
+				    || (i==sh->pd_idx && failed == 0))

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#246: FILE: drivers/md/raid5.c:2029:
+				    || (i==sh->pd_idx && failed == 0))
 				         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: drivers/md/raid5.c:2046:
+	if (to_write && !test_bit(STRIPE_OP_RCW, &sh->state) &&
+		!test_bit(STRIPE_OP_RMW, &sh->state) &&

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#324: FILE: drivers/md/raid5.c:3557:
+	if ((conf->block_ops_queue = create_workqueue(conf->workqueue_name))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#328: FILE: drivers/md/raid5.c:3561:
+	if ((conf->block_ops_queue = create_singlethread_workqueue(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#328: FILE: drivers/md/raid5.c:3561:
+	if ((conf->block_ops_queue = create_singlethread_workqueue(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#341: FILE: drivers/md/raid5.c:3574:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000039174.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 10 warnings, 11 checks, 312 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000039174.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
