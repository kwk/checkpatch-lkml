WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
diff -Pur linux-2.6.11.9/drivers/i2c/busses/Kconfig linux-2.6.11.9-i2c2p/drivers/i2c/busses/Kconfig

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#114: FILE: drivers/i2c/busses/i2c-parport.c:144:
+	.timeout	= (HZ+99)/100,
 	        	     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#114: FILE: drivers/i2c/busses/i2c-parport.c:144:
+	.timeout	= (HZ+99)/100,
 	        	         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#120: FILE: drivers/i2c/busses/i2c-parport.c:150:
+			 * the parport adapter timeout. --Clock */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#129: FILE: drivers/i2c/busses/i2c-parport.c:163:
+ * on deinit). */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: drivers/i2c/busses/i2c-parport.c:165:
+static void start_stop_adapter(struct parport *port,
+		struct adapter_parm* adap, int up)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#131: FILE: drivers/i2c/busses/i2c-parport.c:165:
+		struct adapter_parm* adap, int up)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#133: FILE: drivers/i2c/busses/i2c-parport.c:167:
+	struct lineop *p=adap->init;
 	                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#134: FILE: drivers/i2c/busses/i2c-parport.c:168:
+	struct lineop *p=adap->init;
+	if (p) while (p->val){

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#134: FILE: drivers/i2c/busses/i2c-parport.c:168:
+	if (p) while (p->val){

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#134: FILE: drivers/i2c/busses/i2c-parport.c:168:
+	if (p) while (p->val){

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '&&' (ctx:VxV)
#138: FILE: drivers/i2c/busses/i2c-parport.c:172:
+	if (up&&adap->msleep) msleep_interruptible(adap->msleep);
 	      ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#138: FILE: drivers/i2c/busses/i2c-parport.c:172:
+	if (up&&adap->msleep) msleep_interruptible(adap->msleep);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: drivers/i2c/busses/i2c-parport.c:211:
+	start_stop_adapter(port,adapter_parm+type,1);
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#150: FILE: drivers/i2c/busses/i2c-parport.c:211:
+	start_stop_adapter(port,adapter_parm+type,1);
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: drivers/i2c/busses/i2c-parport.c:211:
+	start_stop_adapter(port,adapter_parm+type,1);
 	                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#160: FILE: drivers/i2c/busses/i2c-parport.c:240:
+			start_stop_adapter(port, adapter_parm+type,0);
 			                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#160: FILE: drivers/i2c/busses/i2c-parport.c:240:
+			start_stop_adapter(port, adapter_parm+type,0);
 			                                          ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#173: FILE: drivers/i2c/busses/i2c-parport.h:41:
+	struct lineop* init;	/* Zero-terminated list, where an entry with

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#174: FILE: drivers/i2c/busses/i2c-parport.h:42:
+	struct lineop* init;	/* Zero-terminated list, where an entry with
+				   zero .val serves as terminator. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#174: FILE: drivers/i2c/busses/i2c-parport.h:42:
+				   zero .val serves as terminator. */

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#177: FILE: drivers/i2c/busses/i2c-parport.h:45:
+static struct lineop adm1032_init[]= {
                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#181: FILE: drivers/i2c/busses/i2c-parport.h:49:
+static struct lineop i2c2p_init[]= {
                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#200: FILE: drivers/i2c/busses/i2c-parport.h:64:
+		.init=NULL,
 		     ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000180292.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 6 warnings, 5 checks, 188 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000180292.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
