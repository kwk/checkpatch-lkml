CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#99: FILE: arch/ppc64/kernel/eeh.c:350:
+	return pa | (token & (PAGE_SIZE-1));
 	                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#108: FILE: arch/ppc64/kernel/eeh.c:469:
+	addr = eeh_token_to_phys((unsigned long __force) token);

CHECK:SPACING: No space is necessary after a cast
#117: FILE: arch/ppc64/kernel/eeh.c:746:
+	_insb((u8 __force *) addr, dst, count);

CHECK:SPACING: No space is necessary after a cast
#122: FILE: arch/ppc64/kernel/eeh.c:750:
+	_insw_ns((u16 __force *) addr, dst, count);

CHECK:SPACING: No space is necessary after a cast
#127: FILE: arch/ppc64/kernel/eeh.c:754:
+	_insl_ns((u32 __force *) addr, dst, count);

CHECK:SPACING: No space is necessary after a cast
#136: FILE: arch/ppc64/kernel/eeh.c:762:
+	_outsb((u8 __force *) addr, src, count);

CHECK:SPACING: No space is necessary after a cast
#141: FILE: arch/ppc64/kernel/eeh.c:766:
+	_outsw_ns((u16 __force *) addr, src, count);

CHECK:SPACING: No space is necessary after a cast
#146: FILE: arch/ppc64/kernel/eeh.c:770:
+	_outsl_ns((u32 __force *) addr, src, count);

CHECK:SPACING: No space is necessary after a cast
#155: FILE: arch/ppc64/kernel/eeh.c:780:
+	return (void __iomem *) (port+pci_io_base);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#155: FILE: arch/ppc64/kernel/eeh.c:780:
+	return (void __iomem *) (port+pci_io_base);
 	                             ^

CHECK:SPACING: No space is necessary after a cast
#173: FILE: arch/ppc64/kernel/eeh.c:803:
+		return (void __iomem *) start;

CHECK:SPACING: No space is necessary after a cast
#240: FILE: arch/ppc64/mm/init.c:363:
+	addr = (void *) ((unsigned long __force) token & PAGE_MASK);

CHECK:SPACING: No space is necessary after a cast
#251: FILE: arch/ppc64/mm/init.c:413:
+	addr = (unsigned long __force) start & PAGE_MASK;

CHECK:SPACING: No space is necessary after a cast
#283: FILE: include/asm-ppc64/eeh.h:100:
+	volatile u8 *vaddr = (volatile u8 __force *) addr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#283: FILE: include/asm-ppc64/eeh.h:100:
+	volatile u8 *vaddr = (volatile u8 __force *) addr;

CHECK:SPACING: No space is necessary after a cast
#291: FILE: include/asm-ppc64/eeh.h:107:
+	volatile u8 *vaddr = (volatile u8 __force *) addr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#291: FILE: include/asm-ppc64/eeh.h:107:
+	volatile u8 *vaddr = (volatile u8 __force *) addr;

CHECK:SPACING: No space is necessary after a cast
#297: FILE: include/asm-ppc64/eeh.h:112:
+	volatile u16 *vaddr = (volatile u16 __force *) addr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#297: FILE: include/asm-ppc64/eeh.h:112:
+	volatile u16 *vaddr = (volatile u16 __force *) addr;

CHECK:SPACING: No space is necessary after a cast
#305: FILE: include/asm-ppc64/eeh.h:119:
+	volatile u16 *vaddr = (volatile u16 __force *) addr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#305: FILE: include/asm-ppc64/eeh.h:119:
+	volatile u16 *vaddr = (volatile u16 __force *) addr;

CHECK:SPACING: No space is necessary after a cast
#310: FILE: include/asm-ppc64/eeh.h:123:
+	volatile u16 *vaddr = (volatile u16 __force *) addr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#310: FILE: include/asm-ppc64/eeh.h:123:
+	volatile u16 *vaddr = (volatile u16 __force *) addr;

CHECK:SPACING: No space is necessary after a cast
#318: FILE: include/asm-ppc64/eeh.h:130:
+	volatile u16 *vaddr = (volatile u16 __force *) addr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#318: FILE: include/asm-ppc64/eeh.h:130:
+	volatile u16 *vaddr = (volatile u16 __force *) addr;

CHECK:SPACING: No space is necessary after a cast
#324: FILE: include/asm-ppc64/eeh.h:135:
+	volatile u32 *vaddr = (volatile u32 __force *) addr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#324: FILE: include/asm-ppc64/eeh.h:135:
+	volatile u32 *vaddr = (volatile u32 __force *) addr;

CHECK:SPACING: No space is necessary after a cast
#332: FILE: include/asm-ppc64/eeh.h:142:
+	volatile u32 *vaddr = (volatile u32 __force *) addr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#332: FILE: include/asm-ppc64/eeh.h:142:
+	volatile u32 *vaddr = (volatile u32 __force *) addr;

CHECK:SPACING: No space is necessary after a cast
#337: FILE: include/asm-ppc64/eeh.h:146:
+	volatile u32 *vaddr = (volatile u32 __force *) addr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#337: FILE: include/asm-ppc64/eeh.h:146:
+	volatile u32 *vaddr = (volatile u32 __force *) addr;

CHECK:SPACING: No space is necessary after a cast
#345: FILE: include/asm-ppc64/eeh.h:153:
+	volatile u32 *vaddr = (volatile u32 __force *) addr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#345: FILE: include/asm-ppc64/eeh.h:153:
+	volatile u32 *vaddr = (volatile u32 __force *) addr;

CHECK:SPACING: No space is necessary after a cast
#351: FILE: include/asm-ppc64/eeh.h:158:
+	volatile u64 *vaddr = (volatile u64 __force *) addr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#351: FILE: include/asm-ppc64/eeh.h:158:
+	volatile u64 *vaddr = (volatile u64 __force *) addr;

CHECK:SPACING: No space is necessary after a cast
#359: FILE: include/asm-ppc64/eeh.h:165:
+	volatile u64 *vaddr = (volatile u64 __force *) addr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#359: FILE: include/asm-ppc64/eeh.h:165:
+	volatile u64 *vaddr = (volatile u64 __force *) addr;

CHECK:SPACING: No space is necessary after a cast
#364: FILE: include/asm-ppc64/eeh.h:169:
+	volatile u64 *vaddr = (volatile u64 __force *) addr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#364: FILE: include/asm-ppc64/eeh.h:169:
+	volatile u64 *vaddr = (volatile u64 __force *) addr;

CHECK:SPACING: No space is necessary after a cast
#372: FILE: include/asm-ppc64/eeh.h:176:
+	volatile u64 *vaddr = (volatile u64 __force *) addr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#372: FILE: include/asm-ppc64/eeh.h:176:
+	volatile u64 *vaddr = (volatile u64 __force *) addr;

CHECK:SPACING: No space is necessary after a cast
#381: FILE: include/asm-ppc64/eeh.h:184:
+	void *vaddr = (void __force *) addr;

CHECK:SPACING: No space is necessary after a cast
#390: FILE: include/asm-ppc64/eeh.h:207:
+	void *vsrc = (void __force *) src;

CHECK:SPACING: No space is necessary after a cast
#399: FILE: include/asm-ppc64/eeh.h:246:
+	void *vdest = (void __force *) dest;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247880.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 14 warnings, 30 checks, 309 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247880.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
