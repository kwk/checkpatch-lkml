WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#119: FILE: drivers/char/raw.c:257:
+^I.aio_write = ^Igeneric_file_aio_write_nolock,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: fs/block_dev.c:1089:
+  ^I.aio_write^I= generic_file_aio_write_nolock,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#187: FILE: fs/block_dev.c:1089:
+  ^I.aio_write^I= generic_file_aio_write_nolock,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: fs/block_dev.c:1089:
+  ^I.aio_write^I= generic_file_aio_write_nolock,$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#373: FILE: fs/xfs/linux-2.6/xfs_file.c:88:
+	return __xfs_file_read(iocb, iov, nr_segs, IO_ISAIO|IO_INVIS, pos);
 	                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#425: FILE: fs/xfs/linux-2.6/xfs_file.c:129:
+	return __xfs_file_write(iocb, iov, nr_segs, IO_ISAIO|IO_INVIS, pos);
 	                                                    ^

WARNING:SPACING: Unnecessary space before function pointer arguments
#440: FILE: include/linux/fs.h:1019:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#440: FILE: include/linux/fs.h:1019:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#440: FILE: include/linux/fs.h:1019:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#440: FILE: include/linux/fs.h:1019:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#440: FILE: include/linux/fs.h:1019:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#441: FILE: include/linux/fs.h:1020:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#441: FILE: include/linux/fs.h:1020:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#441: FILE: include/linux/fs.h:1020:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#441: FILE: include/linux/fs.h:1020:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#441: FILE: include/linux/fs.h:1020:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#450: FILE: include/linux/fs.h:1597:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *, unsigned long, loff_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#450: FILE: include/linux/fs.h:1597:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#450: FILE: include/linux/fs.h:1597:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#450: FILE: include/linux/fs.h:1597:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#450: FILE: include/linux/fs.h:1597:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *, unsigned long, loff_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#453: FILE: include/linux/fs.h:1599:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#453: FILE: include/linux/fs.h:1599:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#453: FILE: include/linux/fs.h:1599:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#453: FILE: include/linux/fs.h:1599:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#453: FILE: include/linux/fs.h:1599:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *, unsigned long, loff_t);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#482: FILE: mm/filemap.c:1100:
+generic_file_aio_read(struct kiocb *iocb, const struct iovec *iov,
+		unsigned long nr_segs, loff_t pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#504: FILE: mm/filemap.c:2166:
+ssize_t generic_file_aio_write_nolock(struct kiocb *iocb,
+		const struct iovec *iov, unsigned long nr_segs, loff_t pos)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#513: FILE: mm/filemap.c:2173:
+	BUG_ON(iocb->ki_pos != pos);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#559: FILE: mm/filemap.c:2221:
+ssize_t generic_file_aio_write(struct kiocb *iocb, const struct iovec *iov,
+		unsigned long nr_segs, loff_t pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#590: FILE: net/socket.c:100:
+static ssize_t sock_aio_read(struct kiocb *iocb, const struct iovec *iov,
+			 unsigned long nr_segs, loff_t pos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: net/socket.c:102:
+static ssize_t sock_aio_write(struct kiocb *iocb, const struct iovec *iov,
+			  unsigned long nr_segs, loff_t pos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#637: FILE: net/socket.c:757:
+static ssize_t sock_aio_read(struct kiocb *iocb, const struct iovec *iov,
+			 unsigned long nr_segs, loff_t pos)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#649: FILE: net/socket.c:767:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#679: FILE: net/socket.c:816:
+static ssize_t sock_aio_write(struct kiocb *iocb, const struct iovec *iov,
+			  unsigned long nr_segs, loff_t pos)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#710: FILE: drivers/usb/gadget/inode.c:531:
+^Istruct iovec ^I^I*iv;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#711: FILE: drivers/usb/gadget/inode.c:532:
+^Iunsigned long ^I^Icount;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#732: FILE: drivers/usb/gadget/inode.c:567:
+	for (i=0; i < priv->count; i++) {
 	      ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#761: FILE: drivers/usb/gadget/inode.c:634:
+^Iunsigned long ^Icount$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#781: FILE: drivers/usb/gadget/inode.c:696:
+ep_aio_read(struct kiocb *iocb, const struct iovec *iv,
+		unsigned long count, loff_t o)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#805: FILE: drivers/usb/gadget/inode.c:717:
+ep_aio_write(struct kiocb *iocb, const struct iovec *iv,
+		unsigned long count, loff_t o)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#824: FILE: drivers/usb/gadget/inode.c:732:
+	for (i=0; i < count; i++) {
 	      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#826: FILE: drivers/usb/gadget/inode.c:734:
+		if (unlikely(copy_from_user(&buf[len], iv[i]->iov_base,
+				iv[i]->iov_len) != 0)) {

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#877: FILE: fs/nfs/direct.c:766:
+ssize_t nfs_file_direct_read(struct kiocb *iocb, const struct iovec *iov, unsigned long nr_segs, loff_t pos)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#915: FILE: fs/nfs/direct.c:838:
+ssize_t nfs_file_direct_write(struct kiocb *iocb, const struct iovec *iov, unsigned long nr_segs, loff_t pos)

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#947: FILE: fs/nfs/file.c:44:
+static ssize_t nfs_file_read(struct kiocb *iocb, const struct iovec *iov, unsigned long nr_segs, loff_t pos);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#948: FILE: fs/nfs/file.c:45:
+static ssize_t nfs_file_write(struct kiocb *iocb, const struct iovec *iov, unsigned long nr_segs, loff_t pos);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#969: FILE: fs/nfs/file.c:215:
+static ssize_t nfs_file_read(struct kiocb *iocb, const struct iovec *iov, unsigned long nr_segs, loff_t pos)

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#987: FILE: fs/nfs/file.c:231:
+	dfprintk(VFS, "nfs: read(%s/%s, %lu@%Ld)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#988: FILE: fs/nfs/file.c:232:
+	dfprintk(VFS, "nfs: read(%s/%s, %lu@%Ld)\n",
 		dentry->d_parent->d_name.name, dentry->d_name.name,

CHECK:SPACING: No space is necessary after a cast
#990: FILE: fs/nfs/file.c:233:
+		(unsigned long) count, (long long) pos);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1009: FILE: fs/nfs/file.c:350:
+static ssize_t nfs_file_write(struct kiocb *iocb, const struct iovec *iov, unsigned long nr_segs, loff_t pos)

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#1027: FILE: fs/nfs/file.c:366:
+	dfprintk(VFS, "nfs: write(%s/%s(%ld), %lu@%Ld)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1028: FILE: fs/nfs/file.c:367:
+	dfprintk(VFS, "nfs: write(%s/%s(%ld), %lu@%Ld)\n",
 		dentry->d_parent->d_name.name, dentry->d_name.name,

CHECK:SPACING: No space is necessary after a cast
#1030: FILE: fs/nfs/file.c:368:
+		inode->i_ino, (unsigned long) count, (long long) pos);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1055: FILE: include/linux/nfs_fs.h:362:
+extern ssize_t nfs_file_direct_read(struct kiocb *iocb, const struct iovec *iov,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1056: FILE: include/linux/nfs_fs.h:363:
+extern ssize_t nfs_file_direct_read(struct kiocb *iocb, const struct iovec *iov,
+			unsigned long nr_segs, loff_t pos);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1057: FILE: include/linux/nfs_fs.h:364:
+extern ssize_t nfs_file_direct_write(struct kiocb *iocb, const struct iovec *iov,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1058: FILE: include/linux/nfs_fs.h:365:
+extern ssize_t nfs_file_direct_write(struct kiocb *iocb, const struct iovec *iov,
+			unsigned long nr_segs, loff_t pos);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1086: FILE: fs/ocfs2/file.c:942:
+	mlog_entry("(0x%p, %u, '%.*s')\n", filp,
 	                                   ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#1111: FILE: fs/ocfs2/file.c:1060:
+		ret = ocfs2_zero_extend(inode, (u64) newsize - iocb->ki_left);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1140: FILE: fs/ocfs2/file.c:1118:
+	mlog_entry("(0x%p, %u, '%.*s')\n", filp,
 	                                   ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1165: FILE: fs/ntfs/file.c:2178:
+static ssize_t ntfs_file_aio_write(struct kiocb *iocb, const struct iovec *iov,
+		unsigned long nr_segs, loff_t pos)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000078489.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 35 warnings, 25 checks, 982 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000078489.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
