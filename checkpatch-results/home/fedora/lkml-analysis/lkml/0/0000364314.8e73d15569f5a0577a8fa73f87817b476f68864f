ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#82: 
--- a/fs/dcache.c	Sat Jun  7 15:39:03 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:INLINE: plain inline is preferred over __inline__
#129: FILE: include/linux/list.h:446:
+static __inline__ void hlist_add_after(struct hlist_node *n,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around next->pprev
#133: FILE: include/linux/list.h:450:
+	*(next->pprev)	= n;

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tpos' - possible side-effects?
#156: FILE: include/linux/list.h:472:
+#define hlist_for_each_entry(tpos, pos, head, member)			 \
+	for (pos = (head)->first;					 \
+	     pos && ({ prefetch(pos->next); 1;}) &&			 \
+		({ tpos = hlist_entry(pos, typeof(*tpos), member); 1;}); \
+	     pos = pos->next)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#156: FILE: include/linux/list.h:472:
+#define hlist_for_each_entry(tpos, pos, head, member)			 \
+	for (pos = (head)->first;					 \
+	     pos && ({ prefetch(pos->next); 1;}) &&			 \
+		({ tpos = hlist_entry(pos, typeof(*tpos), member); 1;}); \
+	     pos = pos->next)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#158: FILE: include/linux/list.h:474:
+	     pos && ({ prefetch(pos->next); 1;}) &&			 \
 	                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ';' (ctx:VxV)
#159: FILE: include/linux/list.h:475:
+		({ tpos = hlist_entry(pos, typeof(*tpos), member); 1;}); \
 		                                                    ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#169: FILE: include/linux/list.h:485:
+#define hlist_for_each_entry_safe(tpos, pos, n, head, member) ^I^I \$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tpos' - possible side-effects?
#169: FILE: include/linux/list.h:485:
+#define hlist_for_each_entry_safe(tpos, pos, n, head, member) 		 \
+	for (pos = (head)->first;					 \
+	     pos && ({ n = pos->next; 1; }) && 				 \
+		({ tpos = hlist_entry(pos, typeof(*tpos), member); 1;}); \
+	     pos = n)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#169: FILE: include/linux/list.h:485:
+#define hlist_for_each_entry_safe(tpos, pos, n, head, member) 		 \
+	for (pos = (head)->first;					 \
+	     pos && ({ n = pos->next; 1; }) && 				 \
+		({ tpos = hlist_entry(pos, typeof(*tpos), member); 1;}); \
+	     pos = n)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#169: FILE: include/linux/list.h:485:
+#define hlist_for_each_entry_safe(tpos, pos, n, head, member) 		 \
+	for (pos = (head)->first;					 \
+	     pos && ({ n = pos->next; 1; }) && 				 \
+		({ tpos = hlist_entry(pos, typeof(*tpos), member); 1;}); \
+	     pos = n)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#171: FILE: include/linux/list.h:487:
+^I     pos && ({ n = pos->next; 1; }) && ^I^I^I^I \$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#172: FILE: include/linux/list.h:488:
+		({ tpos = hlist_entry(pos, typeof(*tpos), member); 1;}); \
 		                                                    ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364314.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 3 warnings, 6 checks, 82 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364314.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
