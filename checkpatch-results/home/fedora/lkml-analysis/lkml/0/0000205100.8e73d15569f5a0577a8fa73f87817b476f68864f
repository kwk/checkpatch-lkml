WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
> Any chance to convince the alien who took control of Jeff's libata queue to

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#76: 
François Romieu:
    ^

WARNING:TYPO_SPELLING: 'ois' may be misspelled - perhaps 'is'?
#76: 
François Romieu:
     ^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#98: 
--- a/drivers/net/r8169.c	2005-02-23 18:33:11 -05:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#130: FILE: drivers/net/r8169.c:82:
+#define dprintk(fmt, args...)	do { printk(PFX fmt, ## args); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#130: FILE: drivers/net/r8169.c:82:
+#define dprintk(fmt, args...)	do { printk(PFX fmt, ## args); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#139: FILE: drivers/net/r8169.c:110:
+   The RTL chips use a 64 element hash table based on the Ethernet CRC. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <IntrMitigate>
#175: FILE: drivers/net/r8169.c:218:
+	IntrMitigate = 0xE2,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#317: FILE: drivers/net/r8169.c:481:
+		/* Check if the RTL8169 has completed retrieving data from the specified MII register */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <IntrMask>
#327: FILE: drivers/net/r8169.c:493:
+	RTL_W16(IntrMask, 0x0000);

CHECK:CAMELCASE: Avoid CamelCase: <IntrStatus>
#329: FILE: drivers/net/r8169.c:495:
+	RTL_W16(IntrStatus, 0xffff);

CHECK:CAMELCASE: Avoid CamelCase: <ChipCmd>
#334: FILE: drivers/net/r8169.c:500:
+	RTL_W8(ChipCmd, 0x00);

CHECK:CAMELCASE: Avoid CamelCase: <CPlusCmd>
#336: FILE: drivers/net/r8169.c:502:
+	RTL_R16(CPlusCmd);

CHECK:CAMELCASE: Avoid CamelCase: <TxVlanTag>
#347: FILE: drivers/net/r8169.c:723:
+		TxVlanTag | swab16(vlan_tx_tag_get(skb)) : 0x00;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tp->mac_version == RTL_GIGA_MAC_VER_D'
#527: FILE: drivers/net/r8169.c:1603:
+	if ((tp->mac_version == RTL_GIGA_MAC_VER_D) ||
+	    (tp->mac_version == RTL_GIGA_MAC_VER_E)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tp->mac_version == RTL_GIGA_MAC_VER_E'
#527: FILE: drivers/net/r8169.c:1603:
+	if ((tp->mac_version == RTL_GIGA_MAC_VER_D) ||
+	    (tp->mac_version == RTL_GIGA_MAC_VER_E)) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#536: FILE: drivers/net/r8169.c:1612:
+	/*
+	 * Undocumented corner. Supposedly:

CHECK:CAMELCASE: Avoid CamelCase: <TxPoll>
#587: FILE: drivers/net/r8169.c:2019:
+	RTL_W8(TxPoll, 0x40);	/* set polling bit */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#724: FILE: drivers/net/r8169.c:2388:
+	/*
+	 * And now for the 50k$ question: are IRQ disabled or not ?

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000205100.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 8 warnings, 10 checks, 599 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000205100.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
