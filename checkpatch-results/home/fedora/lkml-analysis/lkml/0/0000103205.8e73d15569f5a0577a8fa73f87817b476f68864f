WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#35: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#40: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#80: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:41:
+ *  $Id: ehca_uverbs.c,v 1.29 2006/02/06 10:17:34 schickhj Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:LINE_SPACING: Missing a blank line after declarations
#100: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:61:
+	struct ehca_ucontext *my_context = NULL;
+	EHCA_CHECK_ADR_P(device);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof *my_context should be sizeof(*my_context)
#102: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:63:
+	my_context = kmalloc(sizeof *my_context, GFP_KERNEL);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#103: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:64:
+	if (NULL == my_context) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:LINE_SPACING: Missing a blank line after declarations
#115: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:76:
+	struct ehca_ucontext *my_context = NULL;
+	EHCA_CHECK_ADR(context);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#136: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:97:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#151: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:112:
+			void *vaddr;
+			EDEB(6, "cq=%p cq queuearea", cq);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!qp"
#166: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:127:
+		if (qp == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#172: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:133:
+			void *vaddr;
+			EDEB(6, "qp=%p qp rqueuearea", qp);

WARNING:LINE_SPACING: Missing a blank line after declarations
#180: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:141:
+			void *vaddr;
+			EDEB(6, "qp=%p qp squeuearea", qp);

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#197: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:158:
+static struct vm_operations_struct ehcau_vm_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#202: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:163:
+/* TODO: better error output messages !!!
+   NO RETURN WITHOUT ERROR

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#208: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:169:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#264: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:225:
+			 * pgprot_noncached(vma->vm_page_prot); */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!qp"
#282: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:243:
+		if (qp == NULL || qp->ib_qp.uobject == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!qp->ib_qp.uobject"
#282: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:243:
+		if (qp == NULL || qp->ib_qp.uobject == NULL ||

WARNING:INDENTED_LABEL: labels should not be indented
#341: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:302:
+      mmap_exit0:

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#346: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:307:
+int ehca_mmap_nopage(u64 foffset,u64 length,void ** mapped,struct vm_area_struct ** vma)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#346: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:307:
+int ehca_mmap_nopage(u64 foffset,u64 length,void ** mapped,struct vm_area_struct ** vma)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#346: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:307:
+int ehca_mmap_nopage(u64 foffset,u64 length,void ** mapped,struct vm_area_struct ** vma)
                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#346: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:307:
+int ehca_mmap_nopage(u64 foffset,u64 length,void ** mapped,struct vm_area_struct ** vma)
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#346: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:307:
+int ehca_mmap_nopage(u64 foffset,u64 length,void ** mapped,struct vm_area_struct ** vma)
                                                           ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#349: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:310:
+	*mapped=(void*)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#349: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:310:
+	*mapped=(void*)
 	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#350: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:311:
+		do_mmap(NULL,0,
 		            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#352: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:313:
+			PROT_WRITE, MAP_SHARED|MAP_ANONYMOUS,
 			                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#356: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:317:
+		*vma = find_vma(current->mm,(u64)*mapped);
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#361: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:322:
+			EDEB_ERR(4,"couldn't find queue vma queue=%p",
 			          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#365: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:326:
+		EDEB_ERR(4,"couldn't create mmap length=%lx",length);
 		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#365: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:326:
+		EDEB_ERR(4,"couldn't create mmap length=%lx",length);
 		                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#367: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:328:
+	EDEB(7,"mapped=%p",*mapped);
 	      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#367: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:328:
+	EDEB(7,"mapped=%p",*mapped);
 	                  ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#367: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:328:
+	EDEB(7,"mapped=%p",*mapped);
 	                   ^

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#371: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:332:
+int ehca_mmap_register(u64 physical,void ** mapped,struct vm_area_struct ** vma)

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#371: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:332:
+int ehca_mmap_register(u64 physical,void ** mapped,struct vm_area_struct ** vma)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#371: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:332:
+int ehca_mmap_register(u64 physical,void ** mapped,struct vm_area_struct ** vma)
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#371: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:332:
+int ehca_mmap_register(u64 physical,void ** mapped,struct vm_area_struct ** vma)
                                                   ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#375: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:336:
+	unsigned long vsize;
+	ehca_mmap_nopage(0,4096,mapped,vma);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#375: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:336:
+	ehca_mmap_nopage(0,4096,mapped,vma);
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#375: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:336:
+	ehca_mmap_nopage(0,4096,mapped,vma);
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#375: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:336:
+	ehca_mmap_nopage(0,4096,mapped,vma);
 	                              ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#402: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:363:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#404: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:365:
+int ehca_munmap(unsigned long addr, size_t len) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#405: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:366:
+	int ret=0;
 	       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#407: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:368:
+	struct mm_struct *mm = current->mm;
+	if (mm!=0) {

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#407: FILE: drivers/infiniband/hw/ehca/ehca_uverbs.c:368:
+	if (mm!=0) {
 	      ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103205.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 16 warnings, 7 checks, 376 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103205.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
