WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
- i2c-core.c uses hexadecimal for the i2c address, so it should stay consistent.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#114: FILE: drivers/media/common/ir-common.c:340:
+	int i,last,bit,len;
 	     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#114: FILE: drivers/media/common/ir-common.c:340:
+	int i,last,bit,len;
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#114: FILE: drivers/media/common/ir-common.c:340:
+	int i,last,bit,len;
 	              ^

CHECK:CAMELCASE: Avoid CamelCase: <curBit>
#115: FILE: drivers/media/common/ir-common.c:341:
+	u32 curBit;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space required after that ',' (ctx:VxV)
#120: FILE: drivers/media/common/ir-common.c:346:
+		bit = getbit(samples,i);
 		                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#136: FILE: drivers/media/common/ir-common.c:362:
+		bit = getbit(samples,i);
 		                    ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#137: FILE: drivers/media/common/ir-common.c:363:
+		if (bit) {
[...]
+		} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#139: FILE: drivers/media/common/ir-common.c:365:
+			break;
+		} else {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: drivers/media/common/ir-common.c:379:
+		bit  = getbit(samples,i);
 		                     ^

ERROR:SPACING: space required before the open parenthesis '('
#155: FILE: drivers/media/common/ir-common.c:381:
+			if(bit) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#155: FILE: drivers/media/common/ir-common.c:381:
+			if(bit) {
[...]
+			} else {
[...]

CHECK:SPACING: spaces preferred around that '/' (ctx:WxV)
#162: FILE: drivers/media/common/ir-common.c:388:
+				if (len > (low + high) /2)
 				                       ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#333: FILE: drivers/media/video/tda9887.c:199:
+			   cDeemphasis75  ),

CHECK:CAMELCASE: Avoid CamelCase: <cDeemphasis75>
#333: FILE: drivers/media/video/tda9887.c:199:
+			   cDeemphasis75  ),

WARNING:BRACES: braces {} are not necessary for single statement blocks
#359: FILE: drivers/media/video/tda9887.c:572:
+	if (t->mode == T_STANDBY) {
+		buf[1] |= cForcedMuteAudioON;
+	}

CHECK:CAMELCASE: Avoid CamelCase: <cForcedMuteAudioON>
#360: FILE: drivers/media/video/tda9887.c:573:
+		buf[1] |= cForcedMuteAudioON;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#472: FILE: drivers/media/video/tea5767.c:291:
+	unsigned div, rc;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#482: FILE: drivers/media/video/tea5767.c:301:
+	if (5 != (rc = i2c_master_send(c, buffer, 5)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#493: FILE: drivers/media/video/tea5767.c:311:
+	if ((rc = i2c_master_recv(c, buffer, 7))< 5) {
 	                                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#493: FILE: drivers/media/video/tea5767.c:311:
+	if ((rc = i2c_master_recv(c, buffer, 7))< 5) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'buffer[4] != 0x00'
#502: FILE: drivers/media/video/tea5767.c:328:
+	if (((buffer[3] & 0x0f) != 0x00) || (buffer[4] != 0x00)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#561: FILE: drivers/media/video/tuner-core.c:218:
+	if ((tun_setup->addr == ADDR_UNSET &&
[...]
 			set_type(c, tun_setup->type, tun_setup->mode_mask);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: drivers/media/video/tuner-core.c:219:
+	if ((tun_setup->addr == ADDR_UNSET &&
+		(t->mode_mask & tun_setup->mode_mask)) ||

WARNING:BRACES: braces {} are not necessary for single statement blocks
#585: FILE: drivers/media/video/tuner-core.c:227:
+	if ((1 << t->mode & t->mode_mask) == 0) {
+		return EINVAL;
+	}

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -EINVAL)
#586: FILE: drivers/media/video/tuner-core.c:228:
+		return EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#610: FILE: drivers/media/video/tuner-core.c:416:
+ ^Iif (mode == t->mode)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#610: FILE: drivers/media/video/tuner-core.c:416:
+ ^Iif (mode == t->mode)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: drivers/media/video/tuner-core.c:416:
+ ^Iif (mode == t->mode)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#611: FILE: drivers/media/video/tuner-core.c:417:
+ ^I^Ireturn 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#611: FILE: drivers/media/video/tuner-core.c:417:
+ ^I^Ireturn 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: drivers/media/video/tuner-core.c:417:
+ ^I^Ireturn 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#625: FILE: drivers/media/video/tuner-core.c:419:
+ ^It->mode = mode;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#625: FILE: drivers/media/video/tuner-core.c:419:
+ ^It->mode = mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: drivers/media/video/tuner-core.c:419:
+ ^It->mode = mode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#627: FILE: drivers/media/video/tuner-core.c:421:
+ ^Iif (check_mode(t, cmd) == EINVAL) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#627: FILE: drivers/media/video/tuner-core.c:421:
+ ^Iif (check_mode(t, cmd) == EINVAL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: drivers/media/video/tuner-core.c:421:
+ ^Iif (check_mode(t, cmd) == EINVAL) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#628: FILE: drivers/media/video/tuner-core.c:422:
+ ^I^It->mode = T_STANDBY;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#628: FILE: drivers/media/video/tuner-core.c:422:
+ ^I^It->mode = T_STANDBY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: drivers/media/video/tuner-core.c:422:
+ ^I^It->mode = T_STANDBY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: drivers/media/video/tuner-core.c:423:
+ ^I^Iif (t->standby)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#629: FILE: drivers/media/video/tuner-core.c:423:
+ ^I^Iif (t->standby)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: drivers/media/video/tuner-core.c:423:
+ ^I^Iif (t->standby)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#630: FILE: drivers/media/video/tuner-core.c:424:
+ ^I^I^It->standby (client);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#630: FILE: drivers/media/video/tuner-core.c:424:
+ ^I^I^It->standby (client);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: drivers/media/video/tuner-core.c:424:
+ ^I^I^It->standby (client);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#630: FILE: drivers/media/video/tuner-core.c:424:
+ 			t->standby (client);

ERROR:CODE_INDENT: code indent should use tabs where possible
#631: FILE: drivers/media/video/tuner-core.c:425:
+ ^I^Ireturn EINVAL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#631: FILE: drivers/media/video/tuner-core.c:425:
+ ^I^Ireturn EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: drivers/media/video/tuner-core.c:425:
+ ^I^Ireturn EINVAL;$

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -EINVAL)
#631: FILE: drivers/media/video/tuner-core.c:425:
+ 		return EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#632: FILE: drivers/media/video/tuner-core.c:426:
+  ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#632: FILE: drivers/media/video/tuner-core.c:426:
+  ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: drivers/media/video/tuner-core.c:426:
+  ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#633: FILE: drivers/media/video/tuner-core.c:427:
+  ^Ireturn 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#633: FILE: drivers/media/video/tuner-core.c:427:
+  ^Ireturn 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: drivers/media/video/tuner-core.c:427:
+  ^Ireturn 0;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#646: FILE: drivers/media/video/tuner-core.c:466:
+				t->standby (client);

ERROR:CODE_INDENT: code indent should use tabs where possible
#668: FILE: drivers/media/video/tuner-simple.c:252:
+ ^I{ "LG NTSC (TALN mini series)", LGINNOTEK, NTSC,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#668: FILE: drivers/media/video/tuner-simple.c:252:
+ ^I{ "LG NTSC (TALN mini series)", LGINNOTEK, NTSC,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#668: FILE: drivers/media/video/tuner-simple.c:252:
+ ^I{ "LG NTSC (TALN mini series)", LGINNOTEK, NTSC,$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#669: FILE: drivers/media/video/tuner-simple.c:253:
+	  16*150.00,16*425.00,0x01,0x02,0x08,0x8e,732 },
 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#669: FILE: drivers/media/video/tuner-simple.c:253:
+	  16*150.00,16*425.00,0x01,0x02,0x08,0x8e,732 },
 	           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#669: FILE: drivers/media/video/tuner-simple.c:253:
+	  16*150.00,16*425.00,0x01,0x02,0x08,0x8e,732 },
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#669: FILE: drivers/media/video/tuner-simple.c:253:
+	  16*150.00,16*425.00,0x01,0x02,0x08,0x8e,732 },
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#669: FILE: drivers/media/video/tuner-simple.c:253:
+	  16*150.00,16*425.00,0x01,0x02,0x08,0x8e,732 },
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#669: FILE: drivers/media/video/tuner-simple.c:253:
+	  16*150.00,16*425.00,0x01,0x02,0x08,0x8e,732 },
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#669: FILE: drivers/media/video/tuner-simple.c:253:
+	  16*150.00,16*425.00,0x01,0x02,0x08,0x8e,732 },
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#669: FILE: drivers/media/video/tuner-simple.c:253:
+	  16*150.00,16*425.00,0x01,0x02,0x08,0x8e,732 },
 	                                         ^

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#925: FILE: include/media/ir-common.h:20:
  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#967: FILE: include/media/tuner.h:137:
+#define TUNER_SET_STANDBY            _IOW('T',4,int)
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#967: FILE: include/media/tuner.h:137:
+#define TUNER_SET_STANDBY            _IOW('T',4,int)
                                                ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#999: FILE: include/media/tuner.h:211:
+#define tuner_warn(fmt, arg...) do {\
+	printk(KERN_WARNING "%s %d-%04x: " fmt, t->i2c.driver->name, \
+                        t->i2c.adapter->nr, t->i2c.addr, ## arg); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1000: FILE: include/media/tuner.h:212:
+	printk(KERN_WARNING "%s %d-%04x: " fmt, t->i2c.driver->name, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#1001: FILE: include/media/tuner.h:213:
+                        t->i2c.adapter->nr, t->i2c.addr, ## arg); } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1001: FILE: include/media/tuner.h:213:
+                        t->i2c.adapter->nr, t->i2c.addr, ## arg); } while (0)$

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1002: FILE: include/media/tuner.h:214:
+#define tuner_info(fmt, arg...) do {\
+	printk(KERN_INFO "%s %d-%04x: " fmt, t->i2c.driver->name, \
+                        t->i2c.adapter->nr, t->i2c.addr, ## arg); } while (0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1003: FILE: include/media/tuner.h:215:
+	printk(KERN_INFO "%s %d-%04x: " fmt, t->i2c.driver->name, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#1004: FILE: include/media/tuner.h:216:
+                        t->i2c.adapter->nr, t->i2c.addr, ## arg); } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1004: FILE: include/media/tuner.h:216:
+                        t->i2c.adapter->nr, t->i2c.addr, ## arg); } while (0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1007: FILE: include/media/tuner.h:219:
+                printk(KERN_DEBUG "%s %d-%04x: " fmt, t->i2c.driver->name, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1007: FILE: include/media/tuner.h:219:
+                printk(KERN_DEBUG "%s %d-%04x: " fmt, t->i2c.driver->name, \$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1007: FILE: include/media/tuner.h:219:
+                printk(KERN_DEBUG "%s %d-%04x: " fmt, t->i2c.driver->name, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#1008: FILE: include/media/tuner.h:220:
+                        t->i2c.adapter->nr, t->i2c.addr, ## arg); } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1008: FILE: include/media/tuner.h:220:
+                        t->i2c.adapter->nr, t->i2c.addr, ## arg); } while (0)$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000154167.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 35 errors, 43 warnings, 8 checks, 787 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000154167.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
