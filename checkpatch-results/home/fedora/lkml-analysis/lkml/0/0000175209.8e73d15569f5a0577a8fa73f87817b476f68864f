WARNING:INLINE: plain inline is preferred over __inline__
#50: FILE: include/linux/byteorder/big_endian.h:44:
+static __inline__ __le64 __cpu_to_le64p(const __u64 *p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#55: FILE: include/linux/byteorder/big_endian.h:48:
 }
+static __inline__ __u64 __le64_to_cpup(const __le64 *p)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#55: FILE: include/linux/byteorder/big_endian.h:48:
+static __inline__ __u64 __le64_to_cpup(const __le64 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#61: FILE: include/linux/byteorder/big_endian.h:53:
+static __inline__ __le32 __cpu_to_le32p(const __u32 *p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#66: FILE: include/linux/byteorder/big_endian.h:57:
 }
+static __inline__ __u32 __le32_to_cpup(const __le32 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#66: FILE: include/linux/byteorder/big_endian.h:57:
+static __inline__ __u32 __le32_to_cpup(const __le32 *p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#71: FILE: include/linux/byteorder/big_endian.h:61:
 }
+static __inline__ __le16 __cpu_to_le16p(const __u16 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#71: FILE: include/linux/byteorder/big_endian.h:61:
+static __inline__ __le16 __cpu_to_le16p(const __u16 *p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#76: FILE: include/linux/byteorder/big_endian.h:65:
 }
+static __inline__ __u16 __le16_to_cpup(const __le16 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#76: FILE: include/linux/byteorder/big_endian.h:65:
+static __inline__ __u16 __le16_to_cpup(const __le16 *p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#81: FILE: include/linux/byteorder/big_endian.h:69:
 }
+#ifdef __BYTEORDER_HAS_U64__

WARNING:INLINE: plain inline is preferred over __inline__
#82: FILE: include/linux/byteorder/big_endian.h:70:
+static __inline__ __be64 __cpu_to_be64p(const __u64 *p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#87: FILE: include/linux/byteorder/big_endian.h:74:
 }
+static __inline__ __u64 __be64_to_cpup(const __be64 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#87: FILE: include/linux/byteorder/big_endian.h:74:
+static __inline__ __u64 __be64_to_cpup(const __be64 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#93: FILE: include/linux/byteorder/big_endian.h:79:
+static __inline__ __be32 __cpu_to_be32p(const __u32 *p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#98: FILE: include/linux/byteorder/big_endian.h:83:
 }
+static __inline__ __u32 __be32_to_cpup(const __be32 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#98: FILE: include/linux/byteorder/big_endian.h:83:
+static __inline__ __u32 __be32_to_cpup(const __be32 *p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#103: FILE: include/linux/byteorder/big_endian.h:87:
 }
+static __inline__ __be16 __cpu_to_be16p(const __u16 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#103: FILE: include/linux/byteorder/big_endian.h:87:
+static __inline__ __be16 __cpu_to_be16p(const __u16 *p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#108: FILE: include/linux/byteorder/big_endian.h:91:
 }
+static __inline__ __u16 __be16_to_cpup(const __be16 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#108: FILE: include/linux/byteorder/big_endian.h:91:
+static __inline__ __u16 __be16_to_cpup(const __be16 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#121: FILE: include/linux/byteorder/little_endian.h:44:
+static __inline__ __le64 __cpu_to_le64p(const __u64 *p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#126: FILE: include/linux/byteorder/little_endian.h:48:
 }
+static __inline__ __u64 __le64_to_cpup(const __le64 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#126: FILE: include/linux/byteorder/little_endian.h:48:
+static __inline__ __u64 __le64_to_cpup(const __le64 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#132: FILE: include/linux/byteorder/little_endian.h:53:
+static __inline__ __le32 __cpu_to_le32p(const __u32 *p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#137: FILE: include/linux/byteorder/little_endian.h:57:
 }
+static __inline__ __u32 __le32_to_cpup(const __le32 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#137: FILE: include/linux/byteorder/little_endian.h:57:
+static __inline__ __u32 __le32_to_cpup(const __le32 *p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#142: FILE: include/linux/byteorder/little_endian.h:61:
 }
+static __inline__ __le16 __cpu_to_le16p(const __u16 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#142: FILE: include/linux/byteorder/little_endian.h:61:
+static __inline__ __le16 __cpu_to_le16p(const __u16 *p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#147: FILE: include/linux/byteorder/little_endian.h:65:
 }
+static __inline__ __u16 __le16_to_cpup(const __le16 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#147: FILE: include/linux/byteorder/little_endian.h:65:
+static __inline__ __u16 __le16_to_cpup(const __le16 *p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#152: FILE: include/linux/byteorder/little_endian.h:69:
 }
+#ifdef __BYTEORDER_HAS_U64__

WARNING:INLINE: plain inline is preferred over __inline__
#153: FILE: include/linux/byteorder/little_endian.h:70:
+static __inline__ __be64 __cpu_to_be64p(const __u64 *p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#158: FILE: include/linux/byteorder/little_endian.h:74:
 }
+static __inline__ __u64 __be64_to_cpup(const __be64 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#158: FILE: include/linux/byteorder/little_endian.h:74:
+static __inline__ __u64 __be64_to_cpup(const __be64 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#164: FILE: include/linux/byteorder/little_endian.h:79:
+static __inline__ __be32 __cpu_to_be32p(const __u32 *p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#169: FILE: include/linux/byteorder/little_endian.h:83:
 }
+static __inline__ __u32 __be32_to_cpup(const __be32 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#169: FILE: include/linux/byteorder/little_endian.h:83:
+static __inline__ __u32 __be32_to_cpup(const __be32 *p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#174: FILE: include/linux/byteorder/little_endian.h:87:
 }
+static __inline__ __be16 __cpu_to_be16p(const __u16 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#174: FILE: include/linux/byteorder/little_endian.h:87:
+static __inline__ __be16 __cpu_to_be16p(const __u16 *p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#179: FILE: include/linux/byteorder/little_endian.h:91:
 }
+static __inline__ __u16 __be16_to_cpup(const __be16 *p)

WARNING:INLINE: plain inline is preferred over __inline__
#179: FILE: include/linux/byteorder/little_endian.h:91:
+static __inline__ __u16 __be16_to_cpup(const __be16 *p)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000175209.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 24 warnings, 18 checks, 134 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000175209.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
