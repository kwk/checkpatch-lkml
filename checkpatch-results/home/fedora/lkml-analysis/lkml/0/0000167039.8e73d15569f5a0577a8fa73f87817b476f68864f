WARNING:BAD_SIGN_OFF: Unexpected content after email: 'Hiroyui Machida <machida@sony.co.jp> for CELF', should be: 'Hiroyui Machida <machida@sony.co.jp> (for CELF)'
#49: 
Signed-off-by: Hiroyui Machida <machida@sony.co.jp> for CELF

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#60: FILE: kernel/power/Kconfig:87:
+config PRESERVE_SWSUSP_IMAGE
+	bool "Preserve swsuspend image"
+	depends on SOFTWARE_SUSPEND
+	default n
+	---help---
+	  Useally boot with swsup destories the swsusp image.
+	  This function enables to preserve swsup image over boot cycle. 
+	  Default behavior is not chaged even this configuration turned on.
+
+	  To preseve swsusp image, specify following option to command line;
+
+		prsv-img
+
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: kernel/power/Kconfig:93:
+^I  This function enables to preserve swsup image over boot cycle. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'chaged' may be misspelled - perhaps 'changed'?
#67: FILE: kernel/power/Kconfig:94:
+	  Default behavior is not chaged even this configuration turned on.
 	                          ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'preseve' may be misspelled - perhaps 'preserve'?
#69: FILE: kernel/power/Kconfig:96:
+	  To preseve swsusp image, specify following option to command line;
 	     ^^^^^^^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#85: FILE: kernel/power/disk.c:32:
+extern void dump_pagedir_nosave(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#92: FILE: kernel/power/disk.c:39:
+extern dev_t swsusp_resume_device_nosave __nosavedata;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#93: FILE: kernel/power/disk.c:40:
+extern int swsusp_swap_rdonly(dev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dev_t' should also have an identifier name
#93: FILE: kernel/power/disk.c:40:
+extern int swsusp_swap_rdonly(dev_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#94: FILE: kernel/power/disk.c:41:
+extern int swsusp_swap_off(dev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dev_t' should also have an identifier name
#94: FILE: kernel/power/disk.c:41:
+extern int swsusp_swap_off(dev_t);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#102: FILE: kernel/power/disk.c:49:
+}
+static inline int swsusp_swap_off(dev_t dev)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#122: FILE: kernel/power/disk.c:164:
+	if (preserve_swsusp_image) {
+		swsusp_swap_off(swsusp_resume_device_nosave);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#134: FILE: kernel/power/disk.c:176:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#145: FILE: kernel/power/disk.c:278:
+		if (preserve_swsusp_image) {
+			swsusp_swap_rdonly(swsusp_resume_device_nosave);
+		}

WARNING:SPACING: space prohibited before semicolon
#165: FILE: kernel/power/swsusp.c:133:
+struct swsusp_header swsusp_header_nosave __nosavedata ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#176: FILE: kernel/power/swsusp.c:148:
+int preserve_swsusp_image=0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#176: FILE: kernel/power/swsusp.c:148:
+int preserve_swsusp_image=0;
                          ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#191: FILE: kernel/power/swsusp.c:163:
+__setup("prsv-img", preserve_swsusp_image_setup);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: kernel/power/swsusp.c:1279:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: kernel/power/swsusp.c:1280:
+ *^IAssumed that swsusp_header holds correct data $

CHECK:BRACES: braces {} should be used on all arms of this statement
#212: FILE: kernel/power/swsusp.c:1288:
+	if (!IS_ERR(resume_bdev)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#216: FILE: kernel/power/swsusp.c:1292:
+	} else

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#226: FILE: kernel/power/swsusp.c:1302:
+inline static void update_swsusp_header(void)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#228: FILE: kernel/power/swsusp.c:1304:
+	swsusp_header_nosave=swsusp_header;
 	                    ^

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#231: FILE: kernel/power/swsusp.c:1307:
+inline static void update_swsusp_device(void)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#236: FILE: kernel/power/swsusp.c:1312:
+inline static void update_swsusp_header(void)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#241: FILE: kernel/power/swsusp.c:1317:
+inline static void update_swsusp_device(void)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#281: FILE: mm/swapfile.c:1075:
+#define pr_debug(fmt,arg...) \
                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#282: FILE: mm/swapfile.c:1076:
+        do {    \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: mm/swapfile.c:1076:
+        do {    \$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#284: FILE: mm/swapfile.c:1078:
+		__cw_buf[63]='\0'; \
 		            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: mm/swapfile.c:1079:
+                snprintf(__cw_buf, 63, fmt,##arg);   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: mm/swapfile.c:1079:
+                snprintf(__cw_buf, 63, fmt,##arg);   \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: mm/swapfile.c:1079:
+                snprintf(__cw_buf, 63, fmt,##arg);   \
                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: mm/swapfile.c:1080:
+                cons_write(__cw_buf);   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: mm/swapfile.c:1080:
+                cons_write(__cw_buf);   \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: mm/swapfile.c:1081:
+        } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: mm/swapfile.c:1081:
+        } while (0)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: mm/swapfile.c:1090:
+static struct swap_info_struct *find_swapdev_info(dev_t dev,
+					int *p_prev, int *p_type)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#300: FILE: mm/swapfile.c:1094:
+	struct swap_info_struct * si = NULL;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#309: FILE: mm/swapfile.c:1103:
+^I^I^I^Ipr_debug("INODE: 0x%8.8x:0x%8.8x\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: mm/swapfile.c:1104:
+^I^I^I^I^Idev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: mm/swapfile.c:1104:
+				pr_debug("INODE: 0x%8.8x:0x%8.8x\n", 
+					dev, 

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#319: FILE: mm/swapfile.c:1113:
+	if (type<0) {
 	        ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#319: FILE: mm/swapfile.c:1113:
+	if (type<0) {
+		si = 0;
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#333: FILE: mm/swapfile.c:1127:
+	struct swap_info_struct * si = NULL;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#336: FILE: mm/swapfile.c:1130:
+	int found=0;
 	         ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#348: FILE: mm/swapfile.c:1142:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#356: FILE: mm/swapfile.c:1150:
+	struct swap_info_struct * si = NULL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!si'
#368: FILE: mm/swapfile.c:1162:
+	if ((!si) || (si->flags & SWP_WRITEOK)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#385: FILE: mm/swapfile.c:1179:
+	if (prev < 0) {
[...]
+	} else {
[...]

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#416: FILE: mm/swapfile.c:1210:
+			swap_list.head = swap_list.next = si - swap_info;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000167039.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 19 warnings, 10 checks, 379 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000167039.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
