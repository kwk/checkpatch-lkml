CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#70: FILE: include/linux/mm.h:630:
+extern struct anon_vma *find_mergeable_anon_vma(struct vm_area_struct *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#70: FILE: include/linux/mm.h:630:
+extern struct anon_vma *find_mergeable_anon_vma(struct vm_area_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#102: FILE: mm/mmap.c:666:
+	vm_flags = vma->vm_flags & ~(VM_READ|VM_WRITE|VM_EXEC);
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#102: FILE: mm/mmap.c:666:
+	vm_flags = vma->vm_flags & ~(VM_READ|VM_WRITE|VM_EXEC);
 	                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#103: FILE: mm/mmap.c:667:
+	vm_flags |= near->vm_flags & (VM_READ|VM_WRITE|VM_EXEC);
 	                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#103: FILE: mm/mmap.c:667:
+	vm_flags |= near->vm_flags & (VM_READ|VM_WRITE|VM_EXEC);
 	                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: mm/mmap.c:670:
+ ^I^I^Impol_equal(vma_policy(vma), vma_policy(near)) &&$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#106: FILE: mm/mmap.c:670:
+ ^I^I^Impol_equal(vma_policy(vma), vma_policy(near)) &&$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: mm/mmap.c:670:
+	if (near->anon_vma && vma->vm_end == near->vm_start &&
+ 			mpol_equal(vma_policy(vma), vma_policy(near)) &&

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: mm/mmap.c:670:
+ ^I^I^Impol_equal(vma_policy(vma), vma_policy(near)) &&$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: mm/mmap.c:672:
+			can_vma_merge_before(near, vm_flags,
+				NULL, vma->vm_file, vma->vm_pgoff +

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#120: FILE: mm/mmap.c:684:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#124: FILE: mm/mmap.c:688:
+	vm_flags = vma->vm_flags & ~(VM_READ|VM_WRITE|VM_EXEC);
 	                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#124: FILE: mm/mmap.c:688:
+	vm_flags = vma->vm_flags & ~(VM_READ|VM_WRITE|VM_EXEC);
 	                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#125: FILE: mm/mmap.c:689:
+	vm_flags |= near->vm_flags & (VM_READ|VM_WRITE|VM_EXEC);
 	                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#125: FILE: mm/mmap.c:689:
+	vm_flags |= near->vm_flags & (VM_READ|VM_WRITE|VM_EXEC);
 	                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: mm/mmap.c:692:
+  ^I^I^Impol_equal(vma_policy(near), vma_policy(vma)) &&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#128: FILE: mm/mmap.c:692:
+  ^I^I^Impol_equal(vma_policy(near), vma_policy(vma)) &&$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: mm/mmap.c:692:
+	if (near->anon_vma && near->vm_end == vma->vm_start &&
+  			mpol_equal(vma_policy(near), vma_policy(vma)) &&

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: mm/mmap.c:692:
+  ^I^I^Impol_equal(vma_policy(near), vma_policy(vma)) &&$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: mm/mmap.c:694:
+			can_vma_merge_after(near, vm_flags,
+				NULL, vma->vm_file, vma->vm_pgoff))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000281045.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 6 warnings, 13 checks, 110 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000281045.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
