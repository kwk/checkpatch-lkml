WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
This patch updates the parport_pc driver's probing code to better detect PnP

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#33: 
--- a/drivers/parport/parport_pc.c	2004-03-11 02:55:49.000000000 +0000

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#58: FILE: drivers/parport/parport_pc.c:2776:
+static int parport_pc_pci_probe (struct pci_dev *dev,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#59: FILE: drivers/parport/parport_pc.c:2777:
+static int parport_pc_pci_probe (struct pci_dev *dev,
 					   const struct pci_device_id *id)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#72: FILE: drivers/parport/parport_pc.c:2853:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#82: FILE: drivers/parport/parport_pc.c:2862:
+MODULE_DEVICE_TABLE(pnp,parport_pc_pnp_tbl);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#90: FILE: drivers/parport/parport_pc.c:2870:
+	if (pnp_port_valid(dev,0) &&
 	                      ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#90: FILE: drivers/parport/parport_pc.c:2870:
+	if (pnp_port_valid(dev,0) &&
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#91: FILE: drivers/parport/parport_pc.c:2871:
+	if (pnp_port_valid(dev,0) &&
+		!(pnp_port_flags(dev,0) & IORESOURCE_DISABLED)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#91: FILE: drivers/parport/parport_pc.c:2871:
+		!(pnp_port_flags(dev,0) & IORESOURCE_DISABLED)) {
 		                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#92: FILE: drivers/parport/parport_pc.c:2872:
+		io_lo = pnp_port_start(dev,0);
 		                          ^

CHECK:BRACES: Unbalanced braces around else statement
#93: FILE: drivers/parport/parport_pc.c:2873:
+	} else

ERROR:SPACING: space required after that ',' (ctx:VxV)
#96: FILE: drivers/parport/parport_pc.c:2876:
+	if (pnp_port_valid(dev,1) &&
 	                      ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#96: FILE: drivers/parport/parport_pc.c:2876:
+	if (pnp_port_valid(dev,1) &&
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: drivers/parport/parport_pc.c:2877:
+	if (pnp_port_valid(dev,1) &&
+		!(pnp_port_flags(dev,1) & IORESOURCE_DISABLED)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#97: FILE: drivers/parport/parport_pc.c:2877:
+		!(pnp_port_flags(dev,1) & IORESOURCE_DISABLED)) {
 		                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#98: FILE: drivers/parport/parport_pc.c:2878:
+		io_hi = pnp_port_start(dev,1);
 		                          ^

CHECK:BRACES: Unbalanced braces around else statement
#99: FILE: drivers/parport/parport_pc.c:2879:
+	} else

ERROR:SPACING: space required after that ',' (ctx:VxV)
#102: FILE: drivers/parport/parport_pc.c:2882:
+	if (pnp_irq_valid(dev,0) &&
 	                     ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#102: FILE: drivers/parport/parport_pc.c:2882:
+	if (pnp_irq_valid(dev,0) &&
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: drivers/parport/parport_pc.c:2883:
+	if (pnp_irq_valid(dev,0) &&
+		!(pnp_irq_flags(dev,0) & IORESOURCE_DISABLED)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#103: FILE: drivers/parport/parport_pc.c:2883:
+		!(pnp_irq_flags(dev,0) & IORESOURCE_DISABLED)) {
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#104: FILE: drivers/parport/parport_pc.c:2884:
+		irq = pnp_irq(dev,0);
 		                 ^

CHECK:BRACES: Unbalanced braces around else statement
#105: FILE: drivers/parport/parport_pc.c:2885:
+	} else

ERROR:SPACING: space required after that ',' (ctx:VxV)
#108: FILE: drivers/parport/parport_pc.c:2888:
+	if (pnp_dma_valid(dev,0) &&
 	                     ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#108: FILE: drivers/parport/parport_pc.c:2888:
+	if (pnp_dma_valid(dev,0) &&
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: drivers/parport/parport_pc.c:2889:
+	if (pnp_dma_valid(dev,0) &&
+		!(pnp_dma_flags(dev,0) & IORESOURCE_DISABLED)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#109: FILE: drivers/parport/parport_pc.c:2889:
+		!(pnp_dma_flags(dev,0) & IORESOURCE_DISABLED)) {
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#110: FILE: drivers/parport/parport_pc.c:2890:
+		dma = pnp_dma(dev,0);
 		                 ^

CHECK:BRACES: Unbalanced braces around else statement
#111: FILE: drivers/parport/parport_pc.c:2891:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#114: FILE: drivers/parport/parport_pc.c:2894:
+	printk(KERN_INFO "parport: PnPBIOS parport detected.\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#115: FILE: drivers/parport/parport_pc.c:2895:
+	if (!(pdata = parport_pc_probe_port (io_lo, io_hi, irq, dma, NULL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#115: FILE: drivers/parport/parport_pc.c:2895:
+	if (!(pdata = parport_pc_probe_port (io_lo, io_hi, irq, dma, NULL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#118: FILE: drivers/parport/parport_pc.c:2898:
+	pnp_set_drvdata(dev,pdata);
 	                   ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#125: FILE: drivers/parport/parport_pc.c:2905:
+	struct parport *pdata = (struct parport *)pnp_get_drvdata(dev);
+	if (!pdata)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#150: FILE: drivers/parport/parport_pc.c:2958:
+	r = pnp_register_driver (&parport_pc_pnp_driver);

CHECK:BRACES: Unbalanced braces around else statement
#181: FILE: drivers/parport/parport_pc.c:3178:
+	} else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#201: FILE: drivers/parport/parport_pc.c:3189:
+		pnp_unregister_driver (&parport_pc_pnp_driver);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000296171.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 7 warnings, 15 checks, 176 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000296171.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
