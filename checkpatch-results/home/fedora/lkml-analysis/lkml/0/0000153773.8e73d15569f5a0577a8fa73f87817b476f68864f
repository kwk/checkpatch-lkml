WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#56: FILE: drivers/media/video/tvaudio.c:50:
+#define tvaudio_info(fmt, arg...) do {\
+	printk(KERN_INFO "tvaudio %d-%04x: " fmt, \
+			chip->c.adapter->nr, chip->c.addr, ## arg); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#57: FILE: drivers/media/video/tvaudio.c:51:
+	printk(KERN_INFO "tvaudio %d-%04x: " fmt, \

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#59: FILE: drivers/media/video/tvaudio.c:53:
+#define tvaudio_warn(fmt, arg...) do {\
+	printk(KERN_WARNING "tvaudio %d-%04x: " fmt, \
+			chip->c.adapter->nr, chip->c.addr, ## arg); } while (0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#60: FILE: drivers/media/video/tvaudio.c:54:
+	printk(KERN_WARNING "tvaudio %d-%04x: " fmt, \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#64: FILE: drivers/media/video/tvaudio.c:58:
+		printk(KERN_INFO "tvaudio %d-%04x: " fmt, \

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'chip_write', this function's name, in a string
#74: FILE: drivers/media/video/tvaudio.c:175:
+		tvaudio_dbg("%s: chip_write: 0x%x\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#75: FILE: drivers/media/video/tvaudio.c:176:
+		tvaudio_dbg("%s: chip_write: 0x%x\n",
+			chip->c.name, val);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#82: FILE: drivers/media/video/tvaudio.c:181:
+			tvaudio_warn("%s: I/O error (write 0x%x)\n",
+				chip->c.name, val);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'chip_write', this function's name, in a string
#87: FILE: drivers/media/video/tvaudio.c:185:
+		tvaudio_dbg("%s: chip_write: reg%d=0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: drivers/media/video/tvaudio.c:186:
+		tvaudio_dbg("%s: chip_write: reg%d=0x%x\n",
 			chip->c.name, subaddr, val);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: drivers/media/video/tvaudio.c:192:
+			tvaudio_warn("%s: I/O error (write reg%d=0x%x)\n",
+						chip->c.name, subaddr, val);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: drivers/media/video/tvaudio.c:217:
+		tvaudio_warn("%s: I/O error (read)\n",
+		chip->c.name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#110: FILE: drivers/media/video/tvaudio.c:220:
+	tvaudio_dbg("%s: chip_read: 0x%x\n",chip->c.name,buffer);
 	                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#110: FILE: drivers/media/video/tvaudio.c:220:
+	tvaudio_dbg("%s: chip_read: 0x%x\n",chip->c.name,buffer);
 	                                                ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'chip_read', this function's name, in a string
#110: FILE: drivers/media/video/tvaudio.c:220:
+	tvaudio_dbg("%s: chip_read: 0x%x\n",chip->c.name,buffer);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: drivers/media/video/tvaudio.c:239:
+	tvaudio_dbg("%s: chip_read2: reg%d=0x%x\n",
+			chip->c.name,subaddr,read[0]);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#139: FILE: drivers/media/video/tvaudio.c:239:
+			chip->c.name,subaddr,read[0]);
 			            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#139: FILE: drivers/media/video/tvaudio.c:239:
+			chip->c.name,subaddr,read[0]);
 			                    ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'chip_cmd', this function's name, in a string
#149: FILE: drivers/media/video/tvaudio.c:251:
+	tvaudio_dbg("%s: chip_cmd(%s): reg=%d, data:",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: drivers/media/video/tvaudio.c:252:
+	tvaudio_dbg("%s: chip_cmd(%s): reg=%d, data:",
+		chip->c.name,name,cmd->bytes[0]);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: drivers/media/video/tvaudio.c:252:
+		chip->c.name,name,cmd->bytes[0]);
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: drivers/media/video/tvaudio.c:252:
+		chip->c.name,name,cmd->bytes[0]);
 		                 ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#154: FILE: drivers/media/video/tvaudio.c:255:
+			printk(" 0x%x",cmd->bytes[i]);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: drivers/media/video/tvaudio.c:255:
+			printk(" 0x%x",cmd->bytes[i]);
 			              ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#159: FILE: drivers/media/video/tvaudio.c:259:
+		printk("\n");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#173: FILE: drivers/media/video/tvaudio.c:278:
+	struct CHIPSTATE *chip = (struct CHIPSTATE*)data;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#229: FILE: drivers/media/video/tvaudio.c:375:
+	tvaudio_dbg ("tda9840_getmode(): raw chip read: %d, return: %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tda9840_getmode', this function's name, in a string
#229: FILE: drivers/media/video/tvaudio.c:375:
+	tvaudio_dbg ("tda9840_getmode(): raw chip read: %d, return: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: drivers/media/video/tvaudio.c:376:
+	tvaudio_dbg ("tda9840_getmode(): raw chip read: %d, return: %d\n",
+		val, mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#240: FILE: drivers/media/video/tvaudio.c:671:
+	tvaudio_dbg ("tda9873_getmode(): raw chip read: %d, return: %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tda9873_getmode', this function's name, in a string
#240: FILE: drivers/media/video/tvaudio.c:671:
+	tvaudio_dbg ("tda9873_getmode(): raw chip read: %d, return: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: drivers/media/video/tvaudio.c:672:
+	tvaudio_dbg ("tda9873_getmode(): raw chip read: %d, return: %d\n",
+		val, mode);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tda9873_setmode', this function's name, in a string
#250: FILE: drivers/media/video/tvaudio.c:682:
+		tvaudio_dbg("tda9873_setmode(): external input\n");

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#256: FILE: drivers/media/video/tvaudio.c:686:
+	tvaudio_dbg("tda9873_setmode(): chip->shadow.bytes[%d] = %d\n", TDA9873_SW+1, chip->shadow.bytes[TDA9873_SW+1]);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#256: FILE: drivers/media/video/tvaudio.c:686:
+	tvaudio_dbg("tda9873_setmode(): chip->shadow.bytes[%d] = %d\n", TDA9873_SW+1, chip->shadow.bytes[TDA9873_SW+1]);
 	                                                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#256: FILE: drivers/media/video/tvaudio.c:686:
+	tvaudio_dbg("tda9873_setmode(): chip->shadow.bytes[%d] = %d\n", TDA9873_SW+1, chip->shadow.bytes[TDA9873_SW+1]);
 	                                                                                                           ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tda9873_setmode', this function's name, in a string
#256: FILE: drivers/media/video/tvaudio.c:686:
+	tvaudio_dbg("tda9873_setmode(): chip->shadow.bytes[%d] = %d\n", TDA9873_SW+1, chip->shadow.bytes[TDA9873_SW+1]);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tda9873_setmode', this function's name, in a string
#257: FILE: drivers/media/video/tvaudio.c:687:
+	tvaudio_dbg("tda9873_setmode(): sw_data  = %d\n", sw_data);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tda9873_setmode', this function's name, in a string
#266: FILE: drivers/media/video/tvaudio.c:708:
+	tvaudio_dbg("tda9873_setmode(): req. mode %d; chip_write: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: drivers/media/video/tvaudio.c:709:
+	tvaudio_dbg("tda9873_setmode(): req. mode %d; chip_write: %d\n",
 		mode, sw_data);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tda9874a_setup', this function's name, in a string
#278: FILE: drivers/media/video/tvaudio.c:847:
+	tvaudio_dbg("tda9874a_setup(): %s [0x%02X].\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: drivers/media/video/tvaudio.c:848:
+	tvaudio_dbg("tda9874a_setup(): %s [0x%02X].\n",
 		tda9874a_modelist[tda9874a_STD].name,tda9874a_STD);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tda9874a_getmode', this function's name, in a string
#287: FILE: drivers/media/video/tvaudio.c:890:
+	tvaudio_dbg("tda9874a_getmode(): DSR=0x%X, NSR=0x%X, NECR=0x%X, return: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: drivers/media/video/tvaudio.c:891:
+	tvaudio_dbg("tda9874a_getmode(): DSR=0x%X, NSR=0x%X, NECR=0x%X, return: %d.\n",
 		 dsr, nsr, necr, mode);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tda9874a_setmode', this function's name, in a string
#296: FILE: drivers/media/video/tvaudio.c:936:
+		tvaudio_dbg("tda9874a_setmode(): req. mode %d; AOSR=0x%X, MDACOSR=0x%X.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: drivers/media/video/tvaudio.c:937:
+		tvaudio_dbg("tda9874a_setmode(): req. mode %d; AOSR=0x%X, MDACOSR=0x%X.\n",
 			mode, aosr, mdacosr);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tda9874a_setmode', this function's name, in a string
#305: FILE: drivers/media/video/tvaudio.c:971:
+		tvaudio_dbg("tda9874a_setmode(): req. mode %d; FMMR=0x%X, AOSR=0x%X.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: drivers/media/video/tvaudio.c:972:
+		tvaudio_dbg("tda9874a_setmode(): req. mode %d; FMMR=0x%X, AOSR=0x%X.\n",
 			mode, fmmr, aosr);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tda9874a_checkit', this function's name, in a string
#314: FILE: drivers/media/video/tvaudio.c:985:
+	tvaudio_dbg("tda9874a_checkit(): DIC=0x%X, SIC=0x%X.\n", dic, sic);

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#318: FILE: drivers/media/video/tvaudio.c:988:
+		tvaudio_info("found tda9874%s.\n", (dic == 0x11) ? "a":"h");
 		                                                      ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ta8874z_setmode', this function's name, in a string
#376: FILE: drivers/media/video/tvaudio.c:1213:
+	tvaudio_dbg("ta8874z_setmode(): mode: 0x%02x\n", mode);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#386: FILE: drivers/media/video/tvaudio.c:1253:
+static int tea6300  = 0;  /* address clash with msp34xx */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#387: FILE: drivers/media/video/tvaudio.c:1254:
+static int tea6320  = 0;  /* address clash with msp34xx */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#391: FILE: drivers/media/video/tvaudio.c:1257:
+static int ta8874z  = 0;  /* address clash with tda9840 */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#409: FILE: drivers/media/video/tvaudio.c:1494:
+	tvaudio_dbg("chip found @ 0x%x\n", addr<<1);
 	                                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#426: FILE: drivers/media/video/tvaudio.c:1509:
+	tvaudio_info("%s found @ 0x%x (%s)\n", desc->name, addr<<1, adap->name);
 	                                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: drivers/media/video/tvaudio.c:1510:
+        if (desc->flags) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: drivers/media/video/tvaudio.c:1510:
+        if (desc->flags) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: drivers/media/video/tvaudio.c:1511:
+                tvaudio_dbg("matches:%s%s%s.\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: drivers/media/video/tvaudio.c:1511:
+                tvaudio_dbg("matches:%s%s%s.\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: drivers/media/video/tvaudio.c:1512:
+                        (desc->flags & CHIP_HAS_VOLUME)     ? " volume"      : "",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#429: FILE: drivers/media/video/tvaudio.c:1512:
+                tvaudio_dbg("matches:%s%s%s.\n",
+                        (desc->flags & CHIP_HAS_VOLUME)     ? " volume"      : "",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: drivers/media/video/tvaudio.c:1512:
+                        (desc->flags & CHIP_HAS_VOLUME)     ? " volume"      : "",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: drivers/media/video/tvaudio.c:1513:
+                        (desc->flags & CHIP_HAS_BASSTREBLE) ? " bass/treble" : "",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: drivers/media/video/tvaudio.c:1513:
+                        (desc->flags & CHIP_HAS_BASSTREBLE) ? " bass/treble" : "",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: drivers/media/video/tvaudio.c:1514:
+                        (desc->flags & CHIP_HAS_INPUTSEL)   ? " audiomux"    : "");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: drivers/media/video/tvaudio.c:1514:
+                        (desc->flags & CHIP_HAS_INPUTSEL)   ? " audiomux"    : "");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#432: FILE: drivers/media/video/tvaudio.c:1515:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: drivers/media/video/tvaudio.c:1515:
+        }$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#436: FILE: drivers/media/video/tvaudio.c:1518:
+	strcpy(chip->c.name,desc->name);
 	                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: drivers/media/video/tvaudio.c:1555:
+			tvaudio_warn("%s: kernel_thread() failed\n",
 			       chip->c.name);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adap->id == I2C_HW_SAA7146'
#454: FILE: drivers/media/video/tvaudio.c:1565:
+	if ((adap->id == I2C_HW_SAA7146))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:UNNECESSARY_PARENTHESES: Unnecessary parentheses - maybe == should be = ?
#454: FILE: drivers/media/video/tvaudio.c:1565:
+	if ((adap->id == I2C_HW_SAA7146))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#468: FILE: drivers/media/video/tvaudio.c:1608:
+	tvaudio_dbg("%s: chip_command 0x%x\n",chip->c.name,cmd);
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#468: FILE: drivers/media/video/tvaudio.c:1608:
+	tvaudio_dbg("%s: chip_command 0x%x\n",chip->c.name,cmd);
 	                                                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#485: FILE: drivers/media/video/tvaudio.c:1628:
+					kernel pointer here... */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#558: FILE: drivers/media/video/tvaudio.c:1727:
+		printk(KERN_INFO "tvaudio: TV audio decoder + audio/video mux driver\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#559: FILE: drivers/media/video/tvaudio.c:1728:
+		printk(KERN_INFO "tvaudio: known chips: ");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "desc->name"
#560: FILE: drivers/media/video/tvaudio.c:1729:
+		for (desc = chiplist; desc->name != NULL; desc++)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#561: FILE: drivers/media/video/tvaudio.c:1730:
+			printk("%s%s", (desc == chiplist) ? "" : ", ", desc->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#562: FILE: drivers/media/video/tvaudio.c:1731:
+		printk("\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000153773.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 38 warnings, 23 checks, 484 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000153773.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
