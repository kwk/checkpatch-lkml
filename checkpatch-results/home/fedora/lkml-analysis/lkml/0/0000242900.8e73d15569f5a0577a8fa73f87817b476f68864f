WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#58: FILE: fs/lockd/svclock.c:115:
+		dprintk("lockd: check f=%p pd=%d %Ld-%Ld ty=%d cookie=%s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#59: FILE: fs/lockd/svclock.c:116:
+		dprintk("lockd: check f=%p pd=%d %Ld-%Ld ty=%d cookie=%s\n",
 				block->b_file, fl->fl_pid,

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#96: FILE: fs/lockd/xdr.c:58:
+	else if(len<=NLM_MAXCOOKIELEN)
 	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#96: FILE: fs/lockd/xdr.c:58:
+	else if(len<=NLM_MAXCOOKIELEN)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#96: FILE: fs/lockd/xdr.c:58:
 	}
+	else if(len<=NLM_MAXCOOKIELEN)

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#105: FILE: fs/lockd/xdr.c:66:
supported.)\n", len);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#125: FILE: fs/lockd/xdr.c:515:
+#define NLM_cookie_sz		1+QUADLEN(NLM_MAXCOOKIELEN)
                      		 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#125: FILE: fs/lockd/xdr.c:515:
+#define NLM_cookie_sz		1+QUADLEN(NLM_MAXCOOKIELEN)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#140: FILE: fs/lockd/xdr.c:614:
+	static char buf[2*NLM_MAXCOOKIELEN+1];
 	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#140: FILE: fs/lockd/xdr.c:614:
+	static char buf[2*NLM_MAXCOOKIELEN+1];
 	                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#150: FILE: fs/lockd/xdr.c:624:
+			strcpy(p-3, "...");
 			        ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#171: FILE: fs/lockd/xdr4.c:59:
+	else if(len<=NLM_MAXCOOKIELEN)
 	           ^

ERROR:SPACING: space required before the open parenthesis '('
#171: FILE: fs/lockd/xdr4.c:59:
+	else if(len<=NLM_MAXCOOKIELEN)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#171: FILE: fs/lockd/xdr4.c:59:
 	}
+	else if(len<=NLM_MAXCOOKIELEN)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#191: FILE: fs/lockd/xdr4.c:518:
+#define NLM4_cookie_sz		1+XDR_QUADLEN(NLM_MAXCOOKIELEN)
                       		 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#191: FILE: fs/lockd/xdr4.c:518:
+#define NLM4_cookie_sz		1+XDR_QUADLEN(NLM_MAXCOOKIELEN)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#211: FILE: include/linux/lockd/debug.h:54:
+extern const char *nlmdbg_cookie2a(const struct nlm_cookie *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct nlm_cookie *' should also have an identifier name
#211: FILE: include/linux/lockd/debug.h:54:
+extern const char *nlmdbg_cookie2a(const struct nlm_cookie *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#225: FILE: include/linux/lockd/xdr.h:16:
+#define NLM_MAXCOOKIELEN    ^I32$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000242900.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 3 warnings, 7 checks, 160 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000242900.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
