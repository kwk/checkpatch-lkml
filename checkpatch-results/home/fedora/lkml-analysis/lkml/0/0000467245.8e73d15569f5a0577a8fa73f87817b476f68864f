WARNING:TYPO_SPELLING: 'Seperates' may be misspelled - perhaps 'Separates'?
#28: 
Seperates reiserfs_sb_info from struct super_block.
^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#49: FILE: fs/reiserfs/do_balan.c:1530:
+    REISERFS_SB(tb->tb_sb)->s_do_balance ++;$

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#49: FILE: fs/reiserfs/do_balan.c:1530:
+    REISERFS_SB(tb->tb_sb)->s_do_balance ++;
                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#65: FILE: fs/reiserfs/fix_node.c:1992:
+	if (REISERFS_SB(s)->s_kmallocs > malloced + 200000) {
+	    reiserfs_warning ("vs-8301: reiserfs_kmalloc: allocated memory %d\n", REISERFS_SB(s)->s_kmallocs);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#66: FILE: fs/reiserfs/fix_node.c:1993:
+	    reiserfs_warning ("vs-8301: reiserfs_kmalloc: allocated memory %d\n", REISERFS_SB(s)->s_kmallocs);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#66: FILE: fs/reiserfs/fix_node.c:1993:
+	    reiserfs_warning ("vs-8301: reiserfs_kmalloc: allocated memory %d\n", REISERFS_SB(s)->s_kmallocs);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: fs/reiserfs/fix_node.c:2005:
+    REISERFS_SB(s)->s_kmallocs -= size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: fs/reiserfs/fix_node.c:2006:
+    if (REISERFS_SB(s)->s_kmallocs < 0)$

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#84: FILE: fs/reiserfs/fix_node.c:2007:
+	reiserfs_warning ("vs-8302: reiserfs_kfree: allocated memory %d\n", REISERFS_SB(s)->s_kmallocs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#84: FILE: fs/reiserfs/fix_node.c:2007:
+	reiserfs_warning ("vs-8302: reiserfs_kfree: allocated memory %d\n", REISERFS_SB(s)->s_kmallocs);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: fs/reiserfs/fix_node.c:2293:
+    ++ REISERFS_SB(p_s_tb -> tb_sb) -> s_fix_nodes;$

ERROR:SPACING: space prohibited after that '++' (ctx:ExW)
#102: FILE: fs/reiserfs/fix_node.c:2293:
+    ++ REISERFS_SB(p_s_tb -> tb_sb) -> s_fix_nodes;
     ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#102: FILE: fs/reiserfs/fix_node.c:2293:
+    ++ REISERFS_SB(p_s_tb -> tb_sb) -> s_fix_nodes;
                           ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#102: FILE: fs/reiserfs/fix_node.c:2293:
+    ++ REISERFS_SB(p_s_tb -> tb_sb) -> s_fix_nodes;
                                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#118: FILE: fs/reiserfs/ibalance.c:629:
+	    do_balance_mark_sb_dirty (tb, REISERFS_SB(tb->tb_sb)->s_sbh, 1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#127: FILE: fs/reiserfs/ibalance.c:952:
+	do_balance_mark_sb_dirty (tb, REISERFS_SB(tb->tb_sb)->s_sbh, 1);

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#139: FILE: fs/reiserfs/inode.c:1179:
+	! REISERFS_SB(inode -> i_sb) -> s_is_unlinked_ok ) {
 	^

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#139: FILE: fs/reiserfs/inode.c:1179:
+	! REISERFS_SB(inode -> i_sb) -> s_is_unlinked_ok ) {
 	                    ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#139: FILE: fs/reiserfs/inode.c:1179:
+	! REISERFS_SB(inode -> i_sb) -> s_is_unlinked_ok ) {
 	                             ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#139: FILE: fs/reiserfs/inode.c:1179:
+	! REISERFS_SB(inode -> i_sb) -> s_is_unlinked_ok ) {

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#148: FILE: fs/reiserfs/inode.c:1518:
+	le32_to_cpu( REISERFS_SB(sb) -> s_rs -> s_inode_generation );
 	                             ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#148: FILE: fs/reiserfs/inode.c:1518:
+	le32_to_cpu( REISERFS_SB(sb) -> s_rs -> s_inode_generation );
 	                                     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#148: FILE: fs/reiserfs/inode.c:1518:
+	le32_to_cpu( REISERFS_SB(sb) -> s_rs -> s_inode_generation );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#148: FILE: fs/reiserfs/inode.c:1518:
+	le32_to_cpu( REISERFS_SB(sb) -> s_rs -> s_inode_generation );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: fs/reiserfs/namei.c:186:
+    res = REISERFS_SB(s)->s_hash_function (name, len);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#160: FILE: fs/reiserfs/namei.c:186:
+    res = REISERFS_SB(s)->s_hash_function (name, len);

ERROR:SPACING: space prohibited after that open parenthesis '('
#197: FILE: fs/reiserfs/procfs.c:85:
+	if ( REISERFS_SB(sb)->s_properties & (1 << REISERFS_3_6) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#197: FILE: fs/reiserfs/procfs.c:85:
+	if ( REISERFS_SB(sb)->s_properties & (1 << REISERFS_3_6) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#200: FILE: fs/reiserfs/procfs.c:87:
+	} else if ( REISERFS_SB(sb)->s_properties & (1 << REISERFS_3_5) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#200: FILE: fs/reiserfs/procfs.c:87:
+	} else if ( REISERFS_SB(sb)->s_properties & (1 << REISERFS_3_5) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#273: FILE: fs/reiserfs/procfs.c:561:
+	if( REISERFS_SB(sb)->procdir ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#273: FILE: fs/reiserfs/procfs.c:561:
+	if( REISERFS_SB(sb)->procdir ) {

ERROR:SPACING: space required before the open parenthesis '('
#273: FILE: fs/reiserfs/procfs.c:561:
+	if( REISERFS_SB(sb)->procdir ) {

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#274: FILE: fs/reiserfs/procfs.c:562:
+		REISERFS_SB(sb)->procdir -> owner = THIS_MODULE;
 		                         ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#293: FILE: fs/reiserfs/procfs.c:590:
+	return ( REISERFS_SB(sb)->procdir ) ? create_proc_read_entry

ERROR:SPACING: space prohibited before that close parenthesis ')'
#293: FILE: fs/reiserfs/procfs.c:590:
+	return ( REISERFS_SB(sb)->procdir ) ? create_proc_read_entry

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: fs/reiserfs/procfs.c:591:
+^I^I( name, 0, REISERFS_SB(sb)->procdir, func, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#294: FILE: fs/reiserfs/procfs.c:591:
+		( name, 0, REISERFS_SB(sb)->procdir, func, 

ERROR:SPACING: space prohibited after that open parenthesis '('
#301: FILE: fs/reiserfs/procfs.c:597:
+	remove_proc_entry( name, REISERFS_SB(sb)->procdir );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#301: FILE: fs/reiserfs/procfs.c:597:
+	remove_proc_entry( name, REISERFS_SB(sb)->procdir );

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: fs/reiserfs/stree.c:1390:
+         &REISERFS_SB(th -> t_super) -> s_rs -> s_inode_generation;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: fs/reiserfs/stree.c:1390:
+         &REISERFS_SB(th -> t_super) -> s_rs -> s_inode_generation;$

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#313: FILE: fs/reiserfs/stree.c:1390:
+         &REISERFS_SB(th -> t_super) -> s_rs -> s_inode_generation;
                          ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#313: FILE: fs/reiserfs/stree.c:1390:
+         &REISERFS_SB(th -> t_super) -> s_rs -> s_inode_generation;
                                      ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#313: FILE: fs/reiserfs/stree.c:1390:
+         &REISERFS_SB(th -> t_super) -> s_rs -> s_inode_generation;
                                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: fs/reiserfs/super.c:156:
+    REISERFS_SB(s)->s_is_unlinked_ok = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: fs/reiserfs/super.c:242:
+    REISERFS_SB(s)->s_is_unlinked_ok = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: fs/reiserfs/super.c:381:
+    set_sb_umount_state( SB_DISK_SUPER_BLOCK(s), REISERFS_SB(s)->s_mount_state );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#343: FILE: fs/reiserfs/super.c:381:
+    set_sb_umount_state( SB_DISK_SUPER_BLOCK(s), REISERFS_SB(s)->s_mount_state );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#343: FILE: fs/reiserfs/super.c:381:
+    set_sb_umount_state( SB_DISK_SUPER_BLOCK(s), REISERFS_SB(s)->s_mount_state );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: fs/reiserfs/super.c:399:
+  if (REISERFS_SB(s)->s_kmallocs != 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#352: FILE: fs/reiserfs/super.c:399:
+  if (REISERFS_SB(s)->s_kmallocs != 0) {
     reiserfs_warning ("vs-2004: reiserfs_put_super: allocated memory left %d\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: fs/reiserfs/super.c:413:
+  kfree(s->u.generic_sbp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: fs/reiserfs/super.c:414:
+  s->u.generic_sbp = NULL;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#372: FILE: fs/reiserfs/super.c:617:
   if (*flags & MS_RDONLY) {
[...]
+    if (sb_umount_state(rs) == REISERFS_VALID_FS || REISERFS_SB(s)->s_mount_state != REISERFS_VALID_FS) {

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#375: FILE: fs/reiserfs/super.c:619:
+    if (sb_umount_state(rs) == REISERFS_VALID_FS || REISERFS_SB(s)->s_mount_state != REISERFS_VALID_FS) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: fs/reiserfs/super.c:619:
+    if (sb_umount_state(rs) == REISERFS_VALID_FS || REISERFS_SB(s)->s_mount_state != REISERFS_VALID_FS) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#375: FILE: fs/reiserfs/super.c:619:
+    if (sb_umount_state(rs) == REISERFS_VALID_FS || REISERFS_SB(s)->s_mount_state != REISERFS_VALID_FS) {
       return 0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#375: FILE: fs/reiserfs/super.c:619:
+    if (sb_umount_state(rs) == REISERFS_VALID_FS || REISERFS_SB(s)->s_mount_state != REISERFS_VALID_FS) {
       return 0;
     }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: fs/reiserfs/super.c:626:
+    set_sb_umount_state( rs, REISERFS_SB(s)->s_mount_state );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#383: FILE: fs/reiserfs/super.c:626:
+    set_sb_umount_state( rs, REISERFS_SB(s)->s_mount_state );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#383: FILE: fs/reiserfs/super.c:626:
+    set_sb_umount_state( rs, REISERFS_SB(s)->s_mount_state );

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#386: FILE: fs/reiserfs/super.c:629:
   } else {
+    REISERFS_SB(s)->s_mount_state = sb_umount_state(rs) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: fs/reiserfs/super.c:630:
+    REISERFS_SB(s)->s_mount_state = sb_umount_state(rs) ;$

WARNING:SPACING: space prohibited before semicolon
#388: FILE: fs/reiserfs/super.c:630:
+    REISERFS_SB(s)->s_mount_state = sb_umount_state(rs) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: fs/reiserfs/super.c:636:
+    REISERFS_SB(s)->s_mount_state = sb_umount_state(rs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: fs/reiserfs/super.c:642:
+    REISERFS_SB(s)->s_mount_state = REISERFS_VALID_FS ;$

WARNING:SPACING: space prohibited before semicolon
#402: FILE: fs/reiserfs/super.c:642:
+    REISERFS_SB(s)->s_mount_state = REISERFS_VALID_FS ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: fs/reiserfs/super.c:1008:
+    struct reiserfs_sb_info *sbi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: fs/reiserfs/super.c:1010:
+    sbi = kmalloc(sizeof(struct reiserfs_sb_info), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sbi)...) over kmalloc(sizeof(struct reiserfs_sb_info)...)
#412: FILE: fs/reiserfs/super.c:1010:
+    sbi = kmalloc(sizeof(struct reiserfs_sb_info), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: fs/reiserfs/super.c:1011:
+    if (!sbi)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: fs/reiserfs/super.c:1013:
+    s->u.generic_sbp = sbi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: fs/reiserfs/super.c:1014:
+    memset (sbi, 0, sizeof (struct reiserfs_sb_info));$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#416: FILE: fs/reiserfs/super.c:1014:
+    memset (sbi, 0, sizeof (struct reiserfs_sb_info));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#416: FILE: fs/reiserfs/super.c:1014:
+    memset (sbi, 0, sizeof (struct reiserfs_sb_info));

CHECK:SPACING: No space is necessary after a cast
#421: FILE: fs/reiserfs/super.c:1017:
+    if (parse_options ((char *) data, &(sbi->s_mount_opt), &blocks, &jdev_name) == 0) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: fs/reiserfs/super.c:1017:
+    if (parse_options ((char *) data, &(sbi->s_mount_opt), &blocks, &jdev_name) == 0) {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#421: FILE: fs/reiserfs/super.c:1017:
+    if (parse_options ((char *) data, &(sbi->s_mount_opt), &blocks, &jdev_name) == 0) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sbi->s_mount_opt
#421: FILE: fs/reiserfs/super.c:1017:
+    if (parse_options ((char *) data, &(sbi->s_mount_opt), &blocks, &jdev_name) == 0) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#421: FILE: fs/reiserfs/super.c:1017:
+    if (parse_options ((char *) data, &(sbi->s_mount_opt), &blocks, &jdev_name) == 0) {
 	return -EINVAL;
     }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: fs/reiserfs/super.c:1037:
+    sbi->s_mount_state = SB_REISERFS_STATE(s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: fs/reiserfs/super.c:1038:
+    sbi->s_mount_state = REISERFS_VALID_FS ;$

WARNING:SPACING: space prohibited before semicolon
#432: FILE: fs/reiserfs/super.c:1038:
+    sbi->s_mount_state = REISERFS_VALID_FS ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: fs/reiserfs/super.c:1084:
+    sbi->s_hash_function = hash_function (s);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#442: FILE: fs/reiserfs/super.c:1084:
+    sbi->s_hash_function = hash_function (s);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: fs/reiserfs/super.c:1085:
+    if (sbi->s_hash_function == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#443: FILE: fs/reiserfs/super.c:1085:
+    if (sbi->s_hash_function == NULL) {
       dput(s->s_root) ;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sbi->s_hash_function"
#443: FILE: fs/reiserfs/super.c:1085:
+    if (sbi->s_hash_function == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sbi->s_properties
#452: FILE: fs/reiserfs/super.c:1093:
+	set_bit(REISERFS_3_5, &(sbi->s_properties));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sbi->s_properties
#455: FILE: fs/reiserfs/super.c:1095:
+	set_bit(REISERFS_3_6, &(sbi->s_properties));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sbi->s_properties
#465: FILE: fs/reiserfs/super.c:1120:
+	    set_bit(REISERFS_3_6, &(sbi->s_properties));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sbi->s_properties
#466: FILE: fs/reiserfs/super.c:1121:
+	    clear_bit(REISERFS_3_5, &(sbi->s_properties));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: fs/reiserfs/super.c:1140:
+    set_sb_hash_function_code( rs, function2code(sbi->s_hash_function ) );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#475: FILE: fs/reiserfs/super.c:1140:
+    set_sb_hash_function_code( rs, function2code(sbi->s_hash_function ) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#475: FILE: fs/reiserfs/super.c:1140:
+    set_sb_hash_function_code( rs, function2code(sbi->s_hash_function ) );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: fs/reiserfs/super.c:1150:
+    init_waitqueue_head (&(sbi->s_wait));$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#484: FILE: fs/reiserfs/super.c:1150:
+    init_waitqueue_head (&(sbi->s_wait));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sbi->s_wait
#484: FILE: fs/reiserfs/super.c:1150:
+    init_waitqueue_head (&(sbi->s_wait));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: fs/reiserfs/super.c:1169:
+    kfree(sbi);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: fs/reiserfs/super.c:1170:
+    s->u.generic_sbp = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: fs/reiserfs/tail_conversion.c:38:
+    REISERFS_SB(sb)->s_direct2indirect ++;$

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#506: FILE: fs/reiserfs/tail_conversion.c:38:
+    REISERFS_SB(sb)->s_direct2indirect ++;
                                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: fs/reiserfs/tail_conversion.c:205:
+    REISERFS_SB(p_s_sb)->s_indirect2direct ++;$

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#515: FILE: fs/reiserfs/tail_conversion.c:205:
+    REISERFS_SB(p_s_sb)->s_indirect2direct ++;
                                            ^

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#554: FILE: include/linux/reiserfs_fs.h:100:
+ * Structure of super block on disk, a version of which in RAM is often accessed as REISERFS_SB(s)->s_rs

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#594: FILE: include/linux/reiserfs_fs.h:1894:
+#define __PINFO( sb ) REISERFS_SB(sb) -> s_proc_info_data
                                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#594: FILE: include/linux/reiserfs_fs.h:1894:
+#define __PINFO( sb ) REISERFS_SB(sb) -> s_proc_info_data

ERROR:SPACING: space prohibited before that close parenthesis ')'
#594: FILE: include/linux/reiserfs_fs.h:1894:
+#define __PINFO( sb ) REISERFS_SB(sb) -> s_proc_info_data

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#594: FILE: include/linux/reiserfs_fs.h:1894:
+#define __PINFO( sb ) REISERFS_SB(sb) -> s_proc_info_data

ERROR:CODE_INDENT: code indent should use tabs where possible
#598: FILE: include/linux/reiserfs_fs.h:1897:
+        MAX( REISERFS_SB( sb ) -> s_proc_info_data.field, value )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: include/linux/reiserfs_fs.h:1897:
+        MAX( REISERFS_SB( sb ) -> s_proc_info_data.field, value )$

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#598: FILE: include/linux/reiserfs_fs.h:1897:
+        MAX( REISERFS_SB( sb ) -> s_proc_info_data.field, value )
                                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#598: FILE: include/linux/reiserfs_fs.h:1897:
+        MAX( REISERFS_SB( sb ) -> s_proc_info_data.field, value )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#598: FILE: include/linux/reiserfs_fs.h:1897:
+        MAX( REISERFS_SB( sb ) -> s_proc_info_data.field, value )

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#628: FILE: include/linux/reiserfs_fs_sb.h:420:
+#define reiserfs_no_unhashed_relocation(s) (REISERFS_SB(s)->s_mount_opt & (1 << REISERFS_NO_UNHASHED_RELOCATION))

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#629: FILE: include/linux/reiserfs_fs_sb.h:421:
+#define reiserfs_hashed_relocation(s) (REISERFS_SB(s)->s_mount_opt & (1 << REISERFS_HASHED_RELOCATION))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000467245.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 46 errors, 62 warnings, 9 checks, 528 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000467245.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
