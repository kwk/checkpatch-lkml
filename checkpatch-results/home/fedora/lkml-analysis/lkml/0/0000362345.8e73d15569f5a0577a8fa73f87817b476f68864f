WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
> > > SMS/Smart Scroll/Cruise Control and 800 cpi resolution control for those

WARNING:TYPO_SPELLING: 'arbirarily' may be misspelled - perhaps 'arbitrarily'?
#45: 
> wheel of the MX500/700.  H118 and H119 (I just arbirarily named them)
                                                 ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#82: 
--- a/drivers/input/mouse/Kconfig	Sun Jun 15 10:37:48 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#88: FILE: drivers/input/mouse/Kconfig:31:
+config MOUSE_PS2_SYNAPTICS
+	bool "Synaptics TouchPad"
+	default n
+	depends on INPUT && INPUT_MOUSE && SERIO && MOUSE_PS2
+	---help---
+	  Say Y here if you have a Synaptics TouchPad connected to your system.
+	  This touchpad is found on many modern laptop computers.
+	  Note that you also need a user space driver to interpret the data
+	  generated by the kernel. A compatible driver for XFree86 is available
+	  from http://...
+
+	  If unsure, say Y.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#120: FILE: drivers/input/mouse/psmouse-base.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#149: FILE: drivers/input/mouse/psmouse-base.c:30:
+static char *psmouse_protocols[] = { "None", "PS/2", "PS2++", "PS2T++", "GenPS/2", "ImPS/2", "ImExPS/2", "Synaptics"};

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#168: FILE: drivers/input/mouse/psmouse-base.c:49:
+	if (psmouse->type == PSMOUSE_PS2PP || psmouse->type == PSMOUSE_PS2TPP) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#169: FILE: drivers/input/mouse/psmouse-base.c:50:
+		if ((packet[0] & 0x40) == 0x40 && abs((int)packet[1] - (((int)packet[0] & 0x10) << 4)) > 191 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#169: FILE: drivers/input/mouse/psmouse-base.c:50:
+		if ((packet[0] & 0x40) == 0x40 && abs((int)packet[1] - (((int)packet[0] & 0x10) << 4)) > 191 ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#170: FILE: drivers/input/mouse/psmouse-base.c:51:
+		if ((packet[0] & 0x40) == 0x40 && abs((int)packet[1] - (((int)packet[0] & 0x10) << 4)) > 191 ) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#172: FILE: drivers/input/mouse/psmouse-base.c:53:
+			switch (((packet[1] >> 4) & 0x03) | ((packet[0] >> 2) & 0x0c)) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: drivers/input/mouse/psmouse-base.c:57:
+				input_report_rel(dev, packet[2] & 0x80 ? REL_HWHEEL : REL_WHEEL,
+					(int) (packet[2] & 8) - (int) (packet[2] & 7));

CHECK:SPACING: No space is necessary after a cast
#176: FILE: drivers/input/mouse/psmouse-base.c:57:
+					(int) (packet[2] & 8) - (int) (packet[2] & 7));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: drivers/input/mouse/psmouse-base.c:60:
+^I^I^I^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#185: FILE: drivers/input/mouse/psmouse-base.c:66:
+					(int) ((packet[2] >> 4) & 8) - (int) ((packet[2] >> 4) & 7));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: drivers/input/mouse/psmouse-base.c:66:
+				input_report_rel(dev, packet[2] & 0x08 ? REL_HWHEEL : REL_WHEEL,
+					(int) ((packet[2] >> 4) & 8) - (int) ((packet[2] >> 4) & 7));

CHECK:SPACING: No space is necessary after a cast
#185: FILE: drivers/input/mouse/psmouse-base.c:66:
+					(int) ((packet[2] >> 4) & 8) - (int) ((packet[2] >> 4) & 7));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#192: FILE: drivers/input/mouse/psmouse-base.c:73:
+				printk(KERN_WARNING "psmouse.c: Received PS2++ packet #%x, but don't know how to handle.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: drivers/input/mouse/psmouse-base.c:74:
+				printk(KERN_WARNING "psmouse.c: Received PS2++ packet #%x, but don't know how to handle.\n",
+					((packet[1] >> 4) & 0x03) | ((packet[0] >> 2) & 0x0c));

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#196: FILE: drivers/input/mouse/psmouse-base.c:77:
+
+			}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#202: FILE: drivers/input/mouse/psmouse-base.c:83:
+
+		}

CHECK:SPACING: No space is necessary after a cast
#210: FILE: drivers/input/mouse/psmouse-base.c:91:
+		input_report_rel(dev, REL_WHEEL, -(signed char) packet[3]);

CHECK:SPACING: No space is necessary after a cast
#217: FILE: drivers/input/mouse/psmouse-base.c:98:
+		input_report_rel(dev, REL_WHEEL, (int) (packet[3] & 8) - (int) (packet[3] & 7));

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#239: FILE: drivers/input/mouse/psmouse-base.c:120:
+	input_report_rel(dev, REL_X, packet[1] ? (int) packet[1] - (int) ((packet[0] << 4) & 0x100) : 0);

CHECK:SPACING: No space is necessary after a cast
#239: FILE: drivers/input/mouse/psmouse-base.c:120:
+	input_report_rel(dev, REL_X, packet[1] ? (int) packet[1] - (int) ((packet[0] << 4) & 0x100) : 0);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#240: FILE: drivers/input/mouse/psmouse-base.c:121:
+	input_report_rel(dev, REL_Y, packet[2] ? (int) ((packet[0] << 3) & 0x100) - (int) packet[2] : 0);

CHECK:SPACING: No space is necessary after a cast
#240: FILE: drivers/input/mouse/psmouse-base.c:121:
+	input_report_rel(dev, REL_Y, packet[2] ? (int) ((packet[0] << 3) & 0x100) - (int) packet[2] : 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: drivers/input/mouse/psmouse-base.c:132:
+static irqreturn_t psmouse_interrupt(struct serio *serio,
+		unsigned char data, unsigned int flags, struct pt_regs *regs)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#256: FILE: drivers/input/mouse/psmouse-base.c:137:
+		switch (data) {
+			case PSMOUSE_RET_ACK:
[...]
+			case PSMOUSE_RET_NAK:
[...]
+			default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LONG_LINE_COMMENT: line length of 116 exceeds 100 columns
#264: FILE: drivers/input/mouse/psmouse-base.c:145:
+				psmouse->ack = 1;	/* Workaround for mice which don't ACK the Get ID command */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#278: FILE: drivers/input/mouse/psmouse-base.c:159:
+	if (psmouse->pktcnt && time_after(jiffies, psmouse->last + HZ/2)) {
 	                                                             ^

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#279: FILE: drivers/input/mouse/psmouse-base.c:160:
+		printk(KERN_WARNING "psmouse.c: Lost synchronization, throwing %d bytes away.\n", psmouse->pktcnt);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#279: FILE: drivers/input/mouse/psmouse-base.c:160:
+		printk(KERN_WARNING "psmouse.c: Lost synchronization, throwing %d bytes away.\n", psmouse->pktcnt);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: drivers/input/mouse/psmouse-base.c:163:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'psmouse->type >= PSMOUSE_GENPS'
#286: FILE: drivers/input/mouse/psmouse-base.c:167:
+	if (psmouse->pktcnt == 3 + (psmouse->type >= PSMOUSE_GENPS)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LINE_SPACING: Missing a blank line after declarations
#319: FILE: drivers/input/mouse/psmouse-base.c:200:
+	int timeout = 10000; /* 100 msec */
+	psmouse->ack = 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#327: FILE: drivers/input/mouse/psmouse-base.c:208:
+	while (!psmouse->ack && timeout--) udelay(10);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#327: FILE: drivers/input/mouse/psmouse-base.c:208:
+	while (!psmouse->ack && timeout--) udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: drivers/input/mouse/psmouse-base.c:228:
+                timeout = 2000000; /* 2 sec */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: drivers/input/mouse/psmouse-base.c:228:
+                timeout = 2000000; /* 2 sec */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: drivers/input/mouse/psmouse-base.c:239:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#358: FILE: drivers/input/mouse/psmouse-base.c:239:
+	while (psmouse->cmdcnt && timeout--) {
+	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: drivers/input/mouse/psmouse-base.c:255:
+^Iif (psmouse->cmdcnt) $

ERROR:SPACING: space required before the open parenthesis '('
#397: FILE: drivers/input/mouse/psmouse-base.c:278:
+		if(psmouse_command(psmouse, &d, PSMOUSE_CMD_SETRES))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: drivers/input/mouse/psmouse-base.c:309:
+       param[0] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: drivers/input/mouse/psmouse-base.c:310:
+       psmouse_command(psmouse, param, PSMOUSE_CMD_SETRES);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: drivers/input/mouse/psmouse-base.c:311:
+       psmouse_command(psmouse, param, PSMOUSE_CMD_SETRES);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: drivers/input/mouse/psmouse-base.c:312:
+       psmouse_command(psmouse, param, PSMOUSE_CMD_SETRES);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: drivers/input/mouse/psmouse-base.c:313:
+       psmouse_command(psmouse, param, PSMOUSE_CMD_SETRES);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: drivers/input/mouse/psmouse-base.c:314:
+       psmouse_command(psmouse, param, PSMOUSE_CMD_GETINFO);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: drivers/input/mouse/psmouse-base.c:316:
+       if (param[1] == 0x47) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 16)
#435: FILE: drivers/input/mouse/psmouse-base.c:316:
+       if (param[1] == 0x47) {
+		psmouse->vendor = "Synaptics";

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: drivers/input/mouse/psmouse-base.c:323:
+       }$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#456: FILE: drivers/input/mouse/psmouse-base.c:337:
+	if (param[0] == 0x00 && param[1] == 0x33 && param[2] == 0x55) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#478: FILE: drivers/input/mouse/psmouse-base.c:359:
+	if (param[1]) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#499: FILE: drivers/input/mouse/psmouse-base.c:380:
+		if (psmouse->type == PSMOUSE_PS2PP) {
+

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#519: FILE: drivers/input/mouse/psmouse-base.c:400:
+				param[0] = 0x11; param[1] = 0x04; param[2] = 0x68; /* Unprotect RAM */

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#521: FILE: drivers/input/mouse/psmouse-base.c:402:
+				param[0] = 0x11; param[1] = 0x05; param[2] = 0x0b; /* Enable features */

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#523: FILE: drivers/input/mouse/psmouse-base.c:404:
+				param[0] = 0x11; param[1] = 0x09; param[2] = 0xc3; /* Enable PS2++ */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#528: FILE: drivers/input/mouse/psmouse-base.c:409:
+				if (!psmouse_command(psmouse, param, 0x13d1) &&
+					param[0] == 0x06 && param[1] == 0x00 && param[2] == 0x14)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#532: FILE: drivers/input/mouse/psmouse-base.c:413:
+				param[0] = param[1] = param[2] = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 48)
#537: FILE: drivers/input/mouse/psmouse-base.c:418:
+				if ((param[0] & 0x78) == 0x48 && (param[1] & 0xf3) == 0xc2 &&
[...]
+						return PSMOUSE_PS2PP;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#538: FILE: drivers/input/mouse/psmouse-base.c:419:
+				if ((param[0] & 0x78) == 0x48 && (param[1] & 0xf3) == 0xc2 &&
+					(param[2] & 3) == ((param[1] >> 2) & 3))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: drivers/input/mouse/psmouse-base.c:436:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#557: FILE: drivers/input/mouse/psmouse-base.c:438:
+	if (param[0] == 3) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#573: FILE: drivers/input/mouse/psmouse-base.c:454:
+		if (param[0] == 4) {
+

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#606: FILE: drivers/input/mouse/psmouse-base.c:487:
+	param[0] = param[1] = 0xa5;

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#667: FILE: drivers/input/mouse/psmouse-base.c:548:
+		printk(KERN_WARNING "psmouse.c: Failed to enable mouse on %s\n", psmouse->serio->phys);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#667: FILE: drivers/input/mouse/psmouse-base.c:548:
+		printk(KERN_WARNING "psmouse.c: Failed to enable mouse on %s\n", psmouse->serio->phys);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#669: FILE: drivers/input/mouse/psmouse-base.c:550:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#679: FILE: drivers/input/mouse/psmouse-base.c:560:
+	unsigned char param[2];
+	psmouse_command(psmouse, param, PSMOUSE_CMD_RESET_BAT);

WARNING:LINE_SPACING: Missing a blank line after declarations
#689: FILE: drivers/input/mouse/psmouse-base.c:570:
+	struct psmouse *psmouse = serio->private;
+	input_unregister_device(&psmouse->dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#703: FILE: drivers/input/mouse/psmouse-base.c:584:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#707: FILE: drivers/input/mouse/psmouse-base.c:588:
+	if (!(psmouse = kmalloc(sizeof(struct psmouse), GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*psmouse)...) over kmalloc(sizeof(struct psmouse)...)
#707: FILE: drivers/input/mouse/psmouse-base.c:588:
+	if (!(psmouse = kmalloc(sizeof(struct psmouse), GFP_KERNEL)))

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#732: FILE: drivers/input/mouse/psmouse-base.c:613:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#746: FILE: drivers/input/mouse/psmouse-base.c:627:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#747: FILE: drivers/input/mouse/psmouse-base.c:628:
+	printk(KERN_INFO "input: %s on %s\n", psmouse->devname, serio->phys);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#765: FILE: drivers/input/mouse/psmouse-base.c:646:
+__setup("psmouse_noext", psmouse_setup);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1478: FILE: drivers/input/mouse/psmouse.h:1:
+#ifndef _PSMOUSE_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1485: FILE: drivers/input/mouse/psmouse.h:8:
+#define PSMOUSE_CMD_POLL^I0x03eb^I$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1510: FILE: drivers/input/mouse/psmouse.h:33:
+	volatile char ack;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1531: FILE: drivers/input/mouse/synaptics.c:1:
+/*

WARNING:LINE_SPACING: Missing a blank line after declarations
#1576: FILE: drivers/input/mouse/synaptics.c:46:
+		unsigned char d = (command >> i) & 3;
+		if (psmouse_command(psmouse, &d, PSMOUSE_CMD_SETRES))

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#1625: FILE: drivers/input/mouse/synaptics.c:95:
+static int synaptics_model_id(struct psmouse *psmouse, unsigned long int *model_id)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1631: FILE: drivers/input/mouse/synaptics.c:101:
+	*model_id = (mi[0]<<16) | (mi[1]<<8) | mi[2];
 	                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1631: FILE: drivers/input/mouse/synaptics.c:101:
+	*model_id = (mi[0]<<16) | (mi[1]<<8) | mi[2];
 	                                ^

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#1639: FILE: drivers/input/mouse/synaptics.c:109:
+static int synaptics_capability(struct psmouse *psmouse, unsigned long int *capability)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1645: FILE: drivers/input/mouse/synaptics.c:115:
+	*capability = (cap[0]<<16) | (cap[1]<<8) | cap[2];
 	                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1645: FILE: drivers/input/mouse/synaptics.c:115:
+	*capability = (cap[0]<<16) | (cap[1]<<8) | cap[2];
 	                                    ^

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#1655: FILE: drivers/input/mouse/synaptics.c:125:
+static int synaptics_identify(struct psmouse *psmouse, unsigned long int *ident)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1661: FILE: drivers/input/mouse/synaptics.c:131:
+	*ident = (id[0]<<16) | (id[1]<<8) | id[2];
 	               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1661: FILE: drivers/input/mouse/synaptics.c:131:
+	*ident = (id[0]<<16) | (id[1]<<8) | id[2];
 	                             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1676: FILE: drivers/input/mouse/synaptics.c:146:
+	printk(KERN_INFO "Synaptics Touchpad, model: %ld\n", SYN_ID_MODEL(priv->identity));

WARNING:TYPO_SPELLING: 'Firware' may be misspelled - perhaps 'Firmware'?
#1677: FILE: drivers/input/mouse/synaptics.c:147:
+	printk(KERN_INFO " Firware: %ld.%ld\n", SYN_ID_MAJOR(priv->identity),
 	                   ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1677: FILE: drivers/input/mouse/synaptics.c:147:
+	printk(KERN_INFO " Firware: %ld.%ld\n", SYN_ID_MAJOR(priv->identity),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1681: FILE: drivers/input/mouse/synaptics.c:151:
+		printk(KERN_INFO " 180 degree mounted touchpad\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1683: FILE: drivers/input/mouse/synaptics.c:153:
+		printk(KERN_INFO " portrait touchpad\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1684: FILE: drivers/input/mouse/synaptics.c:154:
+	printk(KERN_INFO " Sensor: %ld\n", SYN_MODEL_SENSOR(priv->model_id));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1686: FILE: drivers/input/mouse/synaptics.c:156:
+		printk(KERN_INFO " new absolute packet format\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1688: FILE: drivers/input/mouse/synaptics.c:158:
+		printk(KERN_INFO " pen detection\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1691: FILE: drivers/input/mouse/synaptics.c:161:
+		printk(KERN_INFO " Touchpad has extended capability bits\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1693: FILE: drivers/input/mouse/synaptics.c:163:
+			printk(KERN_INFO " -> four buttons\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1695: FILE: drivers/input/mouse/synaptics.c:165:
+			printk(KERN_INFO " -> multifinger detection\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1697: FILE: drivers/input/mouse/synaptics.c:167:
+			printk(KERN_INFO " -> palm detection\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1707: FILE: drivers/input/mouse/synaptics.c:177:
+		printk(KERN_ERR "synaptics reset failed\n");

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1732: FILE: drivers/input/mouse/synaptics.c:202:
+static inline void set_abs_params(struct input_dev *dev, int axis, int min, int max, int fuzz, int flat)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1746: FILE: drivers/input/mouse/synaptics.c:216:
+	psmouse->private = priv = kmalloc(sizeof(struct synaptics_data), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*priv)...) over kmalloc(sizeof(struct synaptics_data)...)
#1746: FILE: drivers/input/mouse/synaptics.c:216:
+	psmouse->private = priv = kmalloc(sizeof(struct synaptics_data), GFP_KERNEL);

CHECK:CAMELCASE: Avoid CamelCase: <inSync>
#1751: FILE: drivers/input/mouse/synaptics.c:221:
+	priv->inSync = 1;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1754: FILE: drivers/input/mouse/synaptics.c:224:
+		printk(KERN_ERR "Unable to query/initialize Synaptics hardware.\n");

CHECK:CAMELCASE: Avoid CamelCase: <pBuf>
#1889: FILE: drivers/input/mouse/synaptics.c:359:
+	unsigned char *pBuf = priv->proto_buf;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'priv->proto_buf_tail == 1'
#1897: FILE: drivers/input/mouse/synaptics.c:367:
+	if ((priv->proto_buf_tail == 1) && ((u & 0xC8) != 0x80)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1900: FILE: drivers/input/mouse/synaptics.c:370:
+		printk(KERN_WARNING "Synaptics driver lost sync at 1st byte\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'priv->proto_buf_tail == 4'
#1905: FILE: drivers/input/mouse/synaptics.c:375:
+	if ((priv->proto_buf_tail == 4) && ((u & 0xc8) != 0xc0)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1908: FILE: drivers/input/mouse/synaptics.c:378:
+		printk(KERN_WARNING "Synaptics driver lost sync at 4th byte\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1915: FILE: drivers/input/mouse/synaptics.c:385:
+			printk(KERN_NOTICE "Synaptics driver resynced.\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1925: FILE: drivers/input/mouse/synaptics.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1938: FILE: drivers/input/mouse/synaptics.h:14:
+extern void synaptics_process_byte(struct psmouse *psmouse, struct pt_regs *regs);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1939: FILE: drivers/input/mouse/synaptics.h:15:
+extern int synaptics_init(struct psmouse *psmouse);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1940: FILE: drivers/input/mouse/synaptics.h:16:
+extern void synaptics_disconnect(struct psmouse *psmouse);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1950: FILE: drivers/input/mouse/synaptics.h:26:
+
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#1961: FILE: drivers/input/mouse/synaptics.h:37:
+#define SYN_BIT_ABSOLUTE_MODE		(1 << 7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1962: FILE: drivers/input/mouse/synaptics.h:38:
+#define SYN_BIT_HIGH_RATE		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1963: FILE: drivers/input/mouse/synaptics.h:39:
+#define SYN_BIT_SLEEP_MODE		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1964: FILE: drivers/input/mouse/synaptics.h:40:
+#define SYN_BIT_DISABLE_GESTURE		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1965: FILE: drivers/input/mouse/synaptics.h:41:
+#define SYN_BIT_W_MODE			(1 << 0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1994: FILE: drivers/input/mouse/synaptics.h:70:
+#define SYN_ID_MODEL(i) ^I^I(((i) >> 4) & 0x0f)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1995: FILE: drivers/input/mouse/synaptics.h:71:
+#define SYN_ID_MAJOR(i) ^I^I((i) & 0x0f)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1996: FILE: drivers/input/mouse/synaptics.h:72:
+#define SYN_ID_MINOR(i) ^I^I(((i) >> 16) & 0xff)$

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#2016: FILE: drivers/input/mouse/synaptics.h:92:
+	unsigned long int model_id;		/* Model-ID */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2017: FILE: drivers/input/mouse/synaptics.h:93:
+^Iunsigned long int capabilities; ^I/* Capabilities */$

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#2017: FILE: drivers/input/mouse/synaptics.h:93:
+	unsigned long int capabilities; 	/* Capabilities */

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#2018: FILE: drivers/input/mouse/synaptics.h:94:
+	unsigned long int identity;		/* Identification */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2115: FILE: drivers/input/mouse/logips2pp.c:1:
+/*

ERROR:CODE_INDENT: code indent should use tabs where possible
#2137: FILE: drivers/input/mouse/logips2pp.c:23:
+        unsigned char *packet = psmouse->packet;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2137: FILE: drivers/input/mouse/logips2pp.c:23:
+        unsigned char *packet = psmouse->packet;$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2140: FILE: drivers/input/mouse/logips2pp.c:26:
+	if ((packet[0] & 0x48) == 0x48 && (packet[1] & 0x02) == 0x02) {
+

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#2141: FILE: drivers/input/mouse/logips2pp.c:27:
+		switch ((packet[1] >> 4) | (packet[0] & 0x30)) {
[...]
+			case 0x0d: /* Mouse extra info */
[...]
+			case 0x0e: /* buttons 4, 5, 6, 7, 8, 9, 10 info */
[...]
+			case 0x0f: /* TouchPad extra info */
[...]
+			default:

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2142: FILE: drivers/input/mouse/logips2pp.c:28:
+		switch ((packet[1] >> 4) | (packet[0] & 0x30)) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2146: FILE: drivers/input/mouse/logips2pp.c:32:
+				input_report_rel(dev, packet[2] & 0x80 ? REL_HWHEEL : REL_WHEEL,
+					(int) (packet[2] & 8) - (int) (packet[2] & 7));

CHECK:SPACING: No space is necessary after a cast
#2146: FILE: drivers/input/mouse/logips2pp.c:32:
+					(int) (packet[2] & 8) - (int) (packet[2] & 7));

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2165: FILE: drivers/input/mouse/logips2pp.c:51:
+					(int) ((packet[2] >> 4) & 8) - (int) ((packet[2] >> 4) & 7));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2165: FILE: drivers/input/mouse/logips2pp.c:51:
+				input_report_rel(dev, packet[2] & 0x08 ? REL_HWHEEL : REL_WHEEL,
+					(int) ((packet[2] >> 4) & 8) - (int) ((packet[2] >> 4) & 7));

CHECK:SPACING: No space is necessary after a cast
#2165: FILE: drivers/input/mouse/logips2pp.c:51:
+					(int) ((packet[2] >> 4) & 8) - (int) ((packet[2] >> 4) & 7));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2171: FILE: drivers/input/mouse/logips2pp.c:57:
+				printk(KERN_WARNING "psmouse.c: Received PS2++ packet #%x, but don't know how to handle.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2172: FILE: drivers/input/mouse/logips2pp.c:58:
+				printk(KERN_WARNING "psmouse.c: Received PS2++ packet #%x, but don't know how to handle.\n",
+					(packet[1] >> 4) | (packet[0] & 0x30));

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2180: FILE: drivers/input/mouse/logips2pp.c:66:
+
+	}

ERROR:SPACING: space required before the open parenthesis '('
#2200: FILE: drivers/input/mouse/logips2pp.c:86:
+		if(psmouse_command(psmouse, &d, PSMOUSE_CMD_SETRES))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2215: FILE: drivers/input/mouse/logips2pp.c:101:
+ * 0/2 - disabled $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2229: FILE: drivers/input/mouse/logips2pp.c:115:
+^Iif (psmouse_smartscroll == 1) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#2231: FILE: drivers/input/mouse/logips2pp.c:117:
+	else
+	if (psmouse_smartscroll > 2)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2248: FILE: drivers/input/mouse/logips2pp.c:134:
+	unsigned char param = 3;
+	psmouse_command(psmouse, NULL, PSMOUSE_CMD_SETSCALE11);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2285: FILE: drivers/input/mouse/logips2pp.c:171:
+	if (psmouse->type == PSMOUSE_PS2PP) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2324: FILE: drivers/input/mouse/logips2pp.c:210:
+			if (!psmouse_command(psmouse, param, 0x13d1) &&
+				param[0] == 0x06 && param[1] == 0x00 && param[2] == 0x14) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2330: FILE: drivers/input/mouse/logips2pp.c:216:
+		} else {
+

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2333: FILE: drivers/input/mouse/logips2pp.c:219:
+			param[0] = param[1] = param[2] = 0;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#2338: FILE: drivers/input/mouse/logips2pp.c:224:
+			if ((param[0] & 0x78) == 0x48 && (param[1] & 0xf3) == 0xc2 &&
[...]
+					return PSMOUSE_PS2PP;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2339: FILE: drivers/input/mouse/logips2pp.c:225:
+			if ((param[0] & 0x78) == 0x48 && (param[1] & 0xf3) == 0xc2 &&
+				(param[2] & 3) == ((param[1] >> 2) & 3))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2350: FILE: drivers/input/mouse/logips2pp.h:1:
+/*

WARNING:LINE_SPACING: Missing a blank line after declarations
#2547: FILE: drivers/input/mouse/psmouse-base.c:309:
+		int type = ps2pp_detect_model(psmouse);
+		if (type)

ERROR:CODE_INDENT: code indent should use tabs where possible
#2577: FILE: drivers/input/mouse/psmouse-base.c:420:
+        psmouse_command(psmouse, param, PSMOUSE_CMD_SETRES);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2577: FILE: drivers/input/mouse/psmouse-base.c:420:
+        psmouse_command(psmouse, param, PSMOUSE_CMD_SETRES);$

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#2626: FILE: drivers/input/mouse/psmouse-base.c:570:
+__setup("psmouse_noext", psmouse_noext_setup);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#2627: FILE: drivers/input/mouse/psmouse-base.c:571:
+__setup("psmouse_res=", psmouse_resolution_setup);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#2628: FILE: drivers/input/mouse/psmouse-base.c:572:
+__setup("psmouse_sms=", psmouse_smartscroll_setup);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000362345.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 76 warnings, 68 checks, 1790 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000362345.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
