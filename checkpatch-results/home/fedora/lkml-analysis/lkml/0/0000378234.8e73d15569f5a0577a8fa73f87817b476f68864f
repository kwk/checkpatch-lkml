WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
diff -u --recursive --new-file -X /linux/dontdiff a/include/linux/kdev_t.h b/include/linux/kdev_t.h

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#43: 
--- a/include/linux/kdev_t.h	Tue Apr  8 09:36:46 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#128: FILE: include/linux/kdev_t.h:52:
+/* Going back and forth between dev and (ma,mi) is one-to-one
+   provided ma is nonzero or ma is zero and mi is 8-bit only.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#129: FILE: include/linux/kdev_t.h:53:
+   Never use major 0 together with a minor larger than 255. */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#130: FILE: include/linux/kdev_t.h:54:
+#if 0

CHECK:SPACING: No space is necessary after a cast
#150: FILE: include/linux/kdev_t.h:71:
+	return ((both & ~0xffff) ? (((dev_t) major) << 32) :

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#150: FILE: include/linux/kdev_t.h:71:
+	unsigned int both = (major | minor);
+	return ((both & ~0xffff) ? (((dev_t) major) << 32) :

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#151: FILE: include/linux/kdev_t.h:72:
+		(both & ~0xff) ? (((dev_t) major) << 16) :

CHECK:SPACING: No space is necessary after a cast
#152: FILE: include/linux/kdev_t.h:73:
+		(((dev_t) major) << 8) ) | minor;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#152: FILE: include/linux/kdev_t.h:73:
+		(((dev_t) major) << 8) ) | minor;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: include/linux/kdev_t.h:78:
+   (__dev & ~0xffffffff) ? (__dev >> 32) : \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: include/linux/kdev_t.h:79:
+   (__dev & ~0xffff) ? (__dev >> 16) : (__dev >> 8); }))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: include/linux/kdev_t.h:81:
+   (__dev & ~0xffffffff) ? (__dev & 0xffffffff) : \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: include/linux/kdev_t.h:82:
+   (__dev & ~0xffff) ? (__dev & 0xffff) : (__dev & 0xff); }))$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ma' - possible side-effects?
#162: FILE: include/linux/kdev_t.h:83:
+#define constant_MKDEV(ma, mi) \
+   ((((ma)|(mi)) & ~0xffff) ? ((ma) << 32) | (mi) : \
+    (((ma)|(mi)) & ~0xff) ? ((ma) << 16) | (mi) : ((ma) << 8) | (mi))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mi' - possible side-effects?
#162: FILE: include/linux/kdev_t.h:83:
+#define constant_MKDEV(ma, mi) \
+   ((((ma)|(mi)) & ~0xffff) ? ((ma) << 32) | (mi) : \
+    (((ma)|(mi)) & ~0xff) ? ((ma) << 16) | (mi) : ((ma) << 8) | (mi))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: include/linux/kdev_t.h:84:
+   ((((ma)|(mi)) & ~0xffff) ? ((ma) << 32) | (mi) : \$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#163: FILE: include/linux/kdev_t.h:84:
+   ((((ma)|(mi)) & ~0xffff) ? ((ma) << 32) | (mi) : \
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: include/linux/kdev_t.h:85:
+    (((ma)|(mi)) & ~0xff) ? ((ma) << 16) | (mi) : ((ma) << 8) | (mi))$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#164: FILE: include/linux/kdev_t.h:85:
+    (((ma)|(mi)) & ~0xff) ? ((ma) << 16) | (mi) : ((ma) << 8) | (mi))
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: include/linux/kdev_t.h:87:
+   unsigned int __ma = major, __mi = minor, __both = (__ma | __mi); \$

CHECK:SPACING: No space is necessary after a cast
#167: FILE: include/linux/kdev_t.h:88:
+   ((sizeof(dev_t) > 4 && (__both & ~0xffff)) ? (((dev_t) __ma) << 32) : \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: include/linux/kdev_t.h:88:
+   ((sizeof(dev_t) > 4 && (__both & ~0xffff)) ? (((dev_t) __ma) << 32) : \$

CHECK:SPACING: No space is necessary after a cast
#168: FILE: include/linux/kdev_t.h:89:
+    (__both & ~0xff) ? (((dev_t) __ma) << 16) : (((dev_t) __ma) << 8) \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: include/linux/kdev_t.h:89:
+    (__both & ~0xff) ? (((dev_t) __ma) << 16) : (((dev_t) __ma) << 8) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: include/linux/kdev_t.h:90:
+   ) | __mi; })$

CHECK:CAMELCASE: Avoid CamelCase: <Root_NFS>
#193: FILE: include/linux/root_dev.h:4:
+#define	Root_NFS	MKDEV(UNNAMED_MAJOR, 255)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Root_RAM0>
#194: FILE: include/linux/root_dev.h:5:
+#define	Root_RAM0	MKDEV(RAMDISK_MAJOR, 0)

CHECK:CAMELCASE: Avoid CamelCase: <Root_RAM1>
#195: FILE: include/linux/root_dev.h:6:
+#define	Root_RAM1	MKDEV(RAMDISK_MAJOR, 1)

CHECK:CAMELCASE: Avoid CamelCase: <Root_FD0>
#196: FILE: include/linux/root_dev.h:7:
+#define	Root_FD0	MKDEV(FLOPPY_MAJOR, 0)

CHECK:CAMELCASE: Avoid CamelCase: <Root_HDA1>
#197: FILE: include/linux/root_dev.h:8:
+#define	Root_HDA1	MKDEV(IDE0_MAJOR, 1)

CHECK:CAMELCASE: Avoid CamelCase: <Root_HDA2>
#198: FILE: include/linux/root_dev.h:9:
+#define	Root_HDA2	MKDEV(IDE0_MAJOR, 2)

CHECK:CAMELCASE: Avoid CamelCase: <Root_SDA1>
#199: FILE: include/linux/root_dev.h:10:
+#define	Root_SDA1	MKDEV(SCSI_DISK0_MAJOR, 1)

CHECK:CAMELCASE: Avoid CamelCase: <Root_SDA2>
#200: FILE: include/linux/root_dev.h:11:
+#define	Root_SDA2	MKDEV(SCSI_DISK0_MAJOR, 2)

CHECK:CAMELCASE: Avoid CamelCase: <Root_HDC1>
#201: FILE: include/linux/root_dev.h:12:
+#define	Root_HDC1	MKDEV(IDE1_MAJOR, 1)

CHECK:CAMELCASE: Avoid CamelCase: <Root_SR0>
#202: FILE: include/linux/root_dev.h:13:
+#define	Root_SR0	MKDEV(SCSI_CDROM_MAJOR, 0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#231: FILE: drivers/s390/block/dasd_int.h:23:
+#define DASD_PER_MAJOR ( 1U<<(DASD_MINORBITS-DASD_PARTN_BITS))
                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#231: FILE: drivers/s390/block/dasd_int.h:23:
+#define DASD_PER_MAJOR ( 1U<<(DASD_MINORBITS-DASD_PARTN_BITS))
                                             ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#231: FILE: drivers/s390/block/dasd_int.h:23:
+#define DASD_PER_MAJOR ( 1U<<(DASD_MINORBITS-DASD_PARTN_BITS))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378234.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 15 warnings, 21 checks, 176 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378234.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
