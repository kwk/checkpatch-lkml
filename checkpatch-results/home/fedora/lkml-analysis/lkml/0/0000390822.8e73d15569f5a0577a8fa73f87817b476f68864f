WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
diff -urN linux-2.5.62/arch/s390/kernel/module.c linux-2.5.62-s390/arch/s390/kernel/module.c

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Rela>
#58: FILE: arch/s390/kernel/module.c:59:
+check_rela(Elf32_Rela *rela, struct module *me)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#64: FILE: arch/s390/kernel/module.c:63:
+	info = me->arch.syminfo + ELF32_R_SYM (rela->r_info);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#65: FILE: arch/s390/kernel/module.c:64:
+	switch (ELF32_R_TYPE (rela->r_info)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: arch/s390/kernel/module.c:92:
+^I^I/* Only needed if we want to support loading of $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#94: FILE: arch/s390/kernel/module.c:93:
+		/* Only needed if we want to support loading of 
+		   modules linked with -shared. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#94: FILE: arch/s390/kernel/module.c:93:
+		   modules linked with -shared. */

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Ehdr>
#109: FILE: arch/s390/kernel/module.c:103:
+module_frob_arch_sections(Elf32_Ehdr *hdr, Elf32_Shdr *sechdrs,

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Shdr>
#109: FILE: arch/s390/kernel/module.c:103:
+module_frob_arch_sections(Elf32_Ehdr *hdr, Elf32_Shdr *sechdrs,

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Sym>
#176: FILE: arch/s390/kernel/module.c:107:
+	Elf32_Sym *symbols;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#195: FILE: arch/s390/kernel/module.c:121:
+		printk(KERN_ERR "module %s: no symbol table\n", me->name);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#201: FILE: arch/s390/kernel/module.c:127:
+	me->arch.syminfo = kmalloc(me->arch.nsyms *
+				   sizeof(struct mod_arch_syminfo),
+				   GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:SPACING: No space is necessary after a cast
#206: FILE: arch/s390/kernel/module.c:132:
+	symbols = (void *) hdr + symtab->sh_offset;

CHECK:SPACING: No space is necessary after a cast
#207: FILE: arch/s390/kernel/module.c:133:
+	strings = (void *) hdr + sechdrs[symtab->sh_link].sh_offset;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#221: FILE: arch/s390/kernel/module.c:147:
+	me->arch.got_size = me->arch.plt_size = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#226: FILE: arch/s390/kernel/module.c:152:
+		rela = (void *) hdr + sechdrs[i].sh_offset;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#232: FILE: arch/s390/kernel/module.c:158:
+	/* Increase core size by size of got & plt and set start
+	   offsets for got and plt. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#232: FILE: arch/s390/kernel/module.c:158:
+	   offsets for got and plt. */

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Shdr>
#247: FILE: arch/s390/kernel/module.c:168:
+apply_relocate(Elf_Shdr *sechdrs, const char *strtab, unsigned int symindex,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#251: FILE: arch/s390/kernel/module.c:171:
+	printk(KERN_ERR "module %s: RELOCATION unsupported\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: arch/s390/kernel/module.c:177:
+apply_rela(Elf32_Rela *rela, Elf32_Addr base, Elf32_Sym *symtab, $

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Addr>
#257: FILE: arch/s390/kernel/module.c:177:
+apply_rela(Elf32_Rela *rela, Elf32_Addr base, Elf32_Sym *symtab, 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#267: FILE: arch/s390/kernel/module.c:187:
+	/* This is the symbol it is referring to.  Note that all
+	   undefined symbols have been resolved.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#267: FILE: arch/s390/kernel/module.c:187:
+	   undefined symbols have been resolved.  */

CHECK:SPACING: No space is necessary after a cast
#280: FILE: arch/s390/kernel/module.c:200:
+			*(unsigned char *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#282: FILE: arch/s390/kernel/module.c:202:
+			*(unsigned short *) loc = (val & 0xfff) |

CHECK:SPACING: No space is necessary after a cast
#283: FILE: arch/s390/kernel/module.c:203:
+				(*(unsigned short *) loc & 0xf000);

CHECK:SPACING: No space is necessary after a cast
#285: FILE: arch/s390/kernel/module.c:205:
+			*(unsigned short *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#287: FILE: arch/s390/kernel/module.c:207:
+			*(unsigned int *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#295: FILE: arch/s390/kernel/module.c:215:
+			*(unsigned short *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#297: FILE: arch/s390/kernel/module.c:217:
+			*(unsigned short *) loc = val >> 1;

CHECK:SPACING: No space is necessary after a cast
#299: FILE: arch/s390/kernel/module.c:219:
+			*(unsigned int *) loc = val >> 1;

CHECK:SPACING: No space is necessary after a cast
#301: FILE: arch/s390/kernel/module.c:221:
+			*(unsigned int *) loc = val;

WARNING:LINE_SPACING: Missing a blank line after declarations
#313: FILE: arch/s390/kernel/module.c:233:
+			Elf32_Addr *gotent;
+			gotent = me->module_core + me->arch.got_offset +

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#321: FILE: arch/s390/kernel/module.c:241:
+			*(unsigned short *) loc = (val & 0xfff) |

CHECK:SPACING: No space is necessary after a cast
#322: FILE: arch/s390/kernel/module.c:242:
+				(*(unsigned short *) loc & 0xf000);

CHECK:SPACING: No space is necessary after a cast
#325: FILE: arch/s390/kernel/module.c:245:
+			*(unsigned short *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#328: FILE: arch/s390/kernel/module.c:248:
+			*(unsigned int *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#331: FILE: arch/s390/kernel/module.c:251:
+			*(unsigned int *) loc = val >> 1;

WARNING:LINE_SPACING: Missing a blank line after declarations
#340: FILE: arch/s390/kernel/module.c:260:
+			unsigned int *ip;
+			ip = me->module_core + me->arch.plt_offset +

CHECK:SPACING: No space is necessary after a cast
#352: FILE: arch/s390/kernel/module.c:272:
+			val =  (Elf32_Addr) me->module_core +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: arch/s390/kernel/module.c:273:
+^I^I^I^Ime->arch.plt_offset + info->plt_offset + $

CHECK:SPACING: No space is necessary after a cast
#356: FILE: arch/s390/kernel/module.c:276:
+			*(unsigned short *) loc = val >> 1;

CHECK:SPACING: No space is necessary after a cast
#358: FILE: arch/s390/kernel/module.c:278:
+			*(unsigned short *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#360: FILE: arch/s390/kernel/module.c:280:
+			*(unsigned int *) loc = val >> 1;

CHECK:SPACING: No space is necessary after a cast
#363: FILE: arch/s390/kernel/module.c:283:
+			*(unsigned int *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#368: FILE: arch/s390/kernel/module.c:288:
+			((Elf32_Addr) me->module_core + me->arch.got_offset);

CHECK:SPACING: No space is necessary after a cast
#370: FILE: arch/s390/kernel/module.c:290:
+			*(unsigned short *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#372: FILE: arch/s390/kernel/module.c:292:
+			*(unsigned int *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#376: FILE: arch/s390/kernel/module.c:296:
+		val = (Elf32_Addr) me->module_core + me->arch.got_offset +

CHECK:SPACING: No space is necessary after a cast
#379: FILE: arch/s390/kernel/module.c:299:
+			*(unsigned int *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#381: FILE: arch/s390/kernel/module.c:301:
+			*(unsigned int *) loc = val >> 1;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#387: FILE: arch/s390/kernel/module.c:307:
+^I^I/* Only needed if we want to support loading of $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#388: FILE: arch/s390/kernel/module.c:308:
+		/* Only needed if we want to support loading of 
+		   modules linked with -shared. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#388: FILE: arch/s390/kernel/module.c:308:
+		   modules linked with -shared. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#391: FILE: arch/s390/kernel/module.c:311:
+		printk(KERN_ERR "module %s: Unknown relocation: %u\n",

CHECK:SPACING: No space is necessary after a cast
#412: FILE: arch/s390/kernel/module.c:332:
+	symtab = (Elf32_Sym *) sechdrs[symindex].sh_addr;

CHECK:SPACING: No space is necessary after a cast
#413: FILE: arch/s390/kernel/module.c:333:
+	rela = (Elf32_Rela *) sechdrs[relsec].sh_addr;

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#428: FILE: arch/s390/kernel/module.c:348:
+	if (me->arch.syminfo)
+		kfree(me->arch.syminfo);

CHECK:CAMELCASE: Avoid CamelCase: <Elf64_Rela>
#464: FILE: arch/s390x/kernel/module.c:59:
+check_rela(Elf64_Rela *rela, struct module *me)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#470: FILE: arch/s390x/kernel/module.c:63:
+	info = me->arch.syminfo + ELF64_R_SYM (rela->r_info);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#471: FILE: arch/s390x/kernel/module.c:64:
+	switch (ELF64_R_TYPE (rela->r_info)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#503: FILE: arch/s390x/kernel/module.c:96:
+^I^I/* Only needed if we want to support loading of $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#504: FILE: arch/s390x/kernel/module.c:97:
+		/* Only needed if we want to support loading of 
+		   modules linked with -shared. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#504: FILE: arch/s390x/kernel/module.c:97:
+		   modules linked with -shared. */

CHECK:CAMELCASE: Avoid CamelCase: <Elf64_Ehdr>
#519: FILE: arch/s390x/kernel/module.c:107:
+module_frob_arch_sections(Elf64_Ehdr *hdr, Elf64_Shdr *sechdrs,

CHECK:CAMELCASE: Avoid CamelCase: <Elf64_Shdr>
#519: FILE: arch/s390x/kernel/module.c:107:
+module_frob_arch_sections(Elf64_Ehdr *hdr, Elf64_Shdr *sechdrs,

CHECK:CAMELCASE: Avoid CamelCase: <Elf64_Sym>
#595: FILE: arch/s390x/kernel/module.c:111:
+	Elf64_Sym *symbols;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#621: FILE: arch/s390x/kernel/module.c:125:
+		printk(KERN_ERR "module %s: no symbol table\n", me->name);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#627: FILE: arch/s390x/kernel/module.c:131:
+	me->arch.syminfo = kmalloc(me->arch.nsyms *
+				   sizeof(struct mod_arch_syminfo),
+				   GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#632: FILE: arch/s390x/kernel/module.c:136:
+	symbols = (void *) hdr + symtab->sh_offset;

CHECK:SPACING: No space is necessary after a cast
#633: FILE: arch/s390x/kernel/module.c:137:
+	strings = (void *) hdr + sechdrs[symtab->sh_link].sh_offset;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#647: FILE: arch/s390x/kernel/module.c:151:
+	me->arch.got_size = me->arch.plt_size = 0;

CHECK:SPACING: No space is necessary after a cast
#652: FILE: arch/s390x/kernel/module.c:156:
+		rela = (void *) hdr + sechdrs[i].sh_offset;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#658: FILE: arch/s390x/kernel/module.c:162:
+	/* Increase core size by size of got & plt and set start
+	   offsets for got and plt. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#658: FILE: arch/s390x/kernel/module.c:162:
+	   offsets for got and plt. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#677: FILE: arch/s390x/kernel/module.c:175:
+	printk(KERN_ERR "module %s: RELOCATION unsupported\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#683: FILE: arch/s390x/kernel/module.c:181:
+apply_rela(Elf64_Rela *rela, Elf64_Addr base, Elf64_Sym *symtab, $

CHECK:CAMELCASE: Avoid CamelCase: <Elf64_Addr>
#683: FILE: arch/s390x/kernel/module.c:181:
+apply_rela(Elf64_Rela *rela, Elf64_Addr base, Elf64_Sym *symtab, 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#693: FILE: arch/s390x/kernel/module.c:191:
+	/* This is the symbol it is referring to.  Note that all
+	   undefined symbols have been resolved.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#693: FILE: arch/s390x/kernel/module.c:191:
+	   undefined symbols have been resolved.  */

CHECK:SPACING: No space is necessary after a cast
#707: FILE: arch/s390x/kernel/module.c:205:
+			*(unsigned char *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#709: FILE: arch/s390x/kernel/module.c:207:
+			*(unsigned short *) loc = (val & 0xfff) |

CHECK:SPACING: No space is necessary after a cast
#710: FILE: arch/s390x/kernel/module.c:208:
+				(*(unsigned short *) loc & 0xf000);

CHECK:SPACING: No space is necessary after a cast
#712: FILE: arch/s390x/kernel/module.c:210:
+			*(unsigned short *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#714: FILE: arch/s390x/kernel/module.c:212:
+			*(unsigned int *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#716: FILE: arch/s390x/kernel/module.c:214:
+			*(unsigned long *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#725: FILE: arch/s390x/kernel/module.c:223:
+			*(unsigned short *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#727: FILE: arch/s390x/kernel/module.c:225:
+			*(unsigned short *) loc = val >> 1;

CHECK:SPACING: No space is necessary after a cast
#729: FILE: arch/s390x/kernel/module.c:227:
+			*(unsigned int *) loc = val >> 1;

CHECK:SPACING: No space is necessary after a cast
#731: FILE: arch/s390x/kernel/module.c:229:
+			*(unsigned int *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#733: FILE: arch/s390x/kernel/module.c:231:
+			*(unsigned long *) loc = val;

WARNING:LINE_SPACING: Missing a blank line after declarations
#747: FILE: arch/s390x/kernel/module.c:245:
+			Elf64_Addr *gotent;
+			gotent = me->module_core + me->arch.got_offset +

CHECK:SPACING: No space is necessary after a cast
#755: FILE: arch/s390x/kernel/module.c:253:
+			*(unsigned short *) loc = (val & 0xfff) |

CHECK:SPACING: No space is necessary after a cast
#756: FILE: arch/s390x/kernel/module.c:254:
+				(*(unsigned short *) loc & 0xf000);

CHECK:SPACING: No space is necessary after a cast
#759: FILE: arch/s390x/kernel/module.c:257:
+			*(unsigned short *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#762: FILE: arch/s390x/kernel/module.c:260:
+			*(unsigned int *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#765: FILE: arch/s390x/kernel/module.c:263:
+			*(unsigned int *) loc = val >> 1;

CHECK:SPACING: No space is necessary after a cast
#768: FILE: arch/s390x/kernel/module.c:266:
+			*(unsigned long *) loc = val;

WARNING:LINE_SPACING: Missing a blank line after declarations
#779: FILE: arch/s390x/kernel/module.c:277:
+			unsigned int *ip;
+			ip = me->module_core + me->arch.plt_offset +

CHECK:SPACING: No space is necessary after a cast
#784: FILE: arch/s390x/kernel/module.c:282:
+			ip[3] = (unsigned int) (val >> 32);

CHECK:SPACING: No space is necessary after a cast
#785: FILE: arch/s390x/kernel/module.c:283:
+			ip[4] = (unsigned int) val;

CHECK:SPACING: No space is necessary after a cast
#794: FILE: arch/s390x/kernel/module.c:292:
+			val =  (Elf64_Addr) me->module_core +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#795: FILE: arch/s390x/kernel/module.c:293:
+^I^I^I^Ime->arch.plt_offset + info->plt_offset + $

CHECK:SPACING: No space is necessary after a cast
#798: FILE: arch/s390x/kernel/module.c:296:
+			*(unsigned short *) loc = val >> 1;

CHECK:SPACING: No space is necessary after a cast
#800: FILE: arch/s390x/kernel/module.c:298:
+			*(unsigned short *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#802: FILE: arch/s390x/kernel/module.c:300:
+			*(unsigned int *) loc = val >> 1;

CHECK:SPACING: No space is necessary after a cast
#805: FILE: arch/s390x/kernel/module.c:303:
+			*(unsigned int *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#808: FILE: arch/s390x/kernel/module.c:306:
+			*(unsigned long *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#814: FILE: arch/s390x/kernel/module.c:312:
+			((Elf64_Addr) me->module_core + me->arch.got_offset);

CHECK:SPACING: No space is necessary after a cast
#816: FILE: arch/s390x/kernel/module.c:314:
+			*(unsigned short *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#818: FILE: arch/s390x/kernel/module.c:316:
+			*(unsigned int *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#820: FILE: arch/s390x/kernel/module.c:318:
+			*(unsigned long *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#824: FILE: arch/s390x/kernel/module.c:322:
+		val = (Elf64_Addr) me->module_core + me->arch.got_offset +

CHECK:SPACING: No space is necessary after a cast
#827: FILE: arch/s390x/kernel/module.c:325:
+			*(unsigned int *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#829: FILE: arch/s390x/kernel/module.c:327:
+			*(unsigned int *) loc = val >> 1;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#835: FILE: arch/s390x/kernel/module.c:333:
+^I^I/* Only needed if we want to support loading of $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#836: FILE: arch/s390x/kernel/module.c:334:
+		/* Only needed if we want to support loading of 
+		   modules linked with -shared. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#836: FILE: arch/s390x/kernel/module.c:334:
+		   modules linked with -shared. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#839: FILE: arch/s390x/kernel/module.c:337:
+		printk(KERN_ERR "module %s: Unknown relocation: %u\n",

CHECK:SPACING: No space is necessary after a cast
#860: FILE: arch/s390x/kernel/module.c:358:
+	symtab = (Elf64_Sym *) sechdrs[symindex].sh_addr;

CHECK:SPACING: No space is necessary after a cast
#861: FILE: arch/s390x/kernel/module.c:359:
+	rela = (Elf64_Rela *) sechdrs[relsec].sh_addr;

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#876: FILE: arch/s390x/kernel/module.c:374:
+	if (me->arch.syminfo)
+		kfree(me->arch.syminfo);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#887: FILE: include/asm-s390/module.h:8:
+struct mod_arch_syminfo
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#921: FILE: include/asm-s390x/module.h:8:
+struct mod_arch_syminfo
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#1020: FILE: include/linux/elf.h:475:
+                                           dynamic TLS code.  */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1020: FILE: include/linux/elf.h:475:
+#define R_390_TLS_GDCALL	38	/* Tag for function call in general
+                                           dynamic TLS code.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1020: FILE: include/linux/elf.h:475:
+                                           dynamic TLS code.  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1022: FILE: include/linux/elf.h:477:
+                                           dynamic TLS code.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1022: FILE: include/linux/elf.h:477:
+#define R_390_TLS_LDCALL	39	/* Tag for function call in local
+                                           dynamic TLS code.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1022: FILE: include/linux/elf.h:477:
+                                           dynamic TLS code.  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1024: FILE: include/linux/elf.h:479:
+                                           thread local data.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1024: FILE: include/linux/elf.h:479:
+#define R_390_TLS_GD32		40	/* Direct 32 bit for general dynamic
+                                           thread local data.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1024: FILE: include/linux/elf.h:479:
+                                           thread local data.  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1026: FILE: include/linux/elf.h:481:
+                                           thread local data.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1026: FILE: include/linux/elf.h:481:
+#define R_390_TLS_GD64		41	/* Direct 64 bit for general dynamic
+                                           thread local data.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1026: FILE: include/linux/elf.h:481:
+                                           thread local data.  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1028: FILE: include/linux/elf.h:483:
+                                           block offset.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1028: FILE: include/linux/elf.h:483:
+#define R_390_TLS_GOTIE12	42	/* 12 bit GOT offset for static TLS
+                                           block offset.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1028: FILE: include/linux/elf.h:483:
+                                           block offset.  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1030: FILE: include/linux/elf.h:485:
+                                           block offset.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1030: FILE: include/linux/elf.h:485:
+#define R_390_TLS_GOTIE32	43	/* 32 bit GOT offset for static TLS
+                                           block offset.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1030: FILE: include/linux/elf.h:485:
+                                           block offset.  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1032: FILE: include/linux/elf.h:487:
+                                           block offset.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1032: FILE: include/linux/elf.h:487:
+#define R_390_TLS_GOTIE64	44	/* 64 bit GOT offset for static TLS
+                                           block offset.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1032: FILE: include/linux/elf.h:487:
+                                           block offset.  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1034: FILE: include/linux/elf.h:489:
+                                           thread local data in LD code.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1034: FILE: include/linux/elf.h:489:
+#define R_390_TLS_LDM32		45	/* Direct 32 bit for local dynamic
+                                           thread local data in LD code.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1034: FILE: include/linux/elf.h:489:
+                                           thread local data in LD code.  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1036: FILE: include/linux/elf.h:491:
+                                           thread local data in LD code.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1036: FILE: include/linux/elf.h:491:
+#define R_390_TLS_LDM64		46	/* Direct 64 bit for local dynamic
+                                           thread local data in LD code.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1036: FILE: include/linux/elf.h:491:
+                                           thread local data in LD code.  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1038: FILE: include/linux/elf.h:493:
+                                           negated static TLS block offset.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1038: FILE: include/linux/elf.h:493:
+#define R_390_TLS_IE32		47	/* 32 bit address of GOT entry for
+                                           negated static TLS block offset.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1038: FILE: include/linux/elf.h:493:
+                                           negated static TLS block offset.  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1040: FILE: include/linux/elf.h:495:
+                                           negated static TLS block offset.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1040: FILE: include/linux/elf.h:495:
+#define R_390_TLS_IE64		48	/* 64 bit address of GOT entry for
+                                           negated static TLS block offset.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1040: FILE: include/linux/elf.h:495:
+                                           negated static TLS block offset.  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1042: FILE: include/linux/elf.h:497:
+                                           negated static TLS block offset.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1042: FILE: include/linux/elf.h:497:
+#define R_390_TLS_IEENT		49	/* 32 bit rel. offset to GOT entry for
+                                           negated static TLS block offset.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1042: FILE: include/linux/elf.h:497:
+                                           negated static TLS block offset.  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1044: FILE: include/linux/elf.h:499:
+                                           static TLS block.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1044: FILE: include/linux/elf.h:499:
+#define R_390_TLS_LE32		50	/* 32 bit negated offset relative to
+                                           static TLS block.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1044: FILE: include/linux/elf.h:499:
+                                           static TLS block.  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1046: FILE: include/linux/elf.h:501:
+                                           static TLS block.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1046: FILE: include/linux/elf.h:501:
+#define R_390_TLS_LE64		51	/* 64 bit negated offset relative to
+                                           static TLS block.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1046: FILE: include/linux/elf.h:501:
+                                           static TLS block.  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1048: FILE: include/linux/elf.h:503:
+                                           block.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1048: FILE: include/linux/elf.h:503:
+#define R_390_TLS_LDO32		52	/* 32 bit offset relative to TLS
+                                           block.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1048: FILE: include/linux/elf.h:503:
+                                           block.  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1050: FILE: include/linux/elf.h:505:
+                                           block.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1050: FILE: include/linux/elf.h:505:
+#define R_390_TLS_LDO64		53	/* 64 bit offset relative to TLS
+                                           block.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1050: FILE: include/linux/elf.h:505:
+                                           block.  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1054: FILE: include/linux/elf.h:509:
+                                           block.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1054: FILE: include/linux/elf.h:509:
+#define R_390_TLS_TPOFF		56	/* Negate offset in static TLS
+                                           block.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1054: FILE: include/linux/elf.h:509:
+                                           block.  */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000390822.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 69 warnings, 80 checks, 1048 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000390822.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
