WARNING:PATCH_PREFIX: patch prefix '..' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: sh5linux-16062003/fs/nfs/nfs3proc.c:303:
+       struct unlinkxdr {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: sh5linux-16062003/fs/nfs/nfs3proc.c:304:
+               struct nfs3_diropargs   arg;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: sh5linux-16062003/fs/nfs/nfs3proc.c:304:
+               struct nfs3_diropargs   arg;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#65: FILE: sh5linux-16062003/fs/nfs/nfs3proc.c:305:
+               struct nfs_fattr        res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: sh5linux-16062003/fs/nfs/nfs3proc.c:305:
+               struct nfs_fattr        res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: sh5linux-16062003/fs/nfs/nfs3proc.c:306:
+       } *ptr;$

CHECK:SPACING: No space is necessary after a cast
#70: FILE: sh5linux-16062003/fs/nfs/nfs3proc.c:308:
+       ptr = (struct unlinkxdr *) kmalloc(sizeof(struct unlinkxdr), GFP_KERNEL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: sh5linux-16062003/fs/nfs/nfs3proc.c:308:
+       ptr = (struct unlinkxdr *) kmalloc(sizeof(struct unlinkxdr), GFP_KERNEL);$

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#70: FILE: sh5linux-16062003/fs/nfs/nfs3proc.c:308:
+       ptr = (struct unlinkxdr *) kmalloc(sizeof(struct unlinkxdr), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ptr)...) over kmalloc(sizeof(struct unlinkxdr)...)
#70: FILE: sh5linux-16062003/fs/nfs/nfs3proc.c:308:
+       ptr = (struct unlinkxdr *) kmalloc(sizeof(struct unlinkxdr), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: sh5linux-16062003/fs/nfs/nfs3proc.c:309:
+       if (!ptr)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#71: FILE: sh5linux-16062003/fs/nfs/nfs3proc.c:309:
+       if (!ptr)
                return -ENOMEM;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: sh5linux-16062003/fs/nfs/nfs3proc.c:311:
+       arg = &ptr->arg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: sh5linux-16062003/fs/nfs/nfs3proc.c:312:
+       res = &ptr->res;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000358606.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 11 warnings, 2 checks, 19 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000358606.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
