WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
ftp://atrey.karlin.mff.cuni.cz/pub/local/jack/quota/v2.6/quota-2.6.3-rc2-1-jquota.diff.gz)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dquot' - possible side-effects?
#75: FILE: fs/dquot.c:264:
+#define mark_dquot_dirty(dquot) ((dquot)->dq_sb->dq_op->mark_dirty(dquot))

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#80: FILE: fs/dquot.c:269:
+	set_bit(DQF_ANY_DQUOT_DIRTY_B, &(sb_dqopt((dquot)->dq_sb)->info[(dquot)->dq_type].dqi_flags));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please don't use multiple blank lines
#93: FILE: fs/dquot.c:282:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#160: FILE: fs/dquot.c:382:
+		if ((cnt == type || type == -1) && sb_has_quota_enabled(sb, cnt) && info_dirty(&dqopt->info[cnt]))

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: fs/dquot.c:828:
+         * re-enter the quota code and are already holding the semaphore */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#232: FILE: fs/dquot.c:828:
+         * re-enter the quota code and are already holding the semaphore */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#253: FILE: fs/dquot.c:851:
+				/* Write dquot to allocate space in file if it's not allocated yet */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: fs/dquot.c:927:
+         * re-enter the quota code and are already holding the semaphore */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#321: FILE: fs/dquot.c:927:
+         * re-enter the quota code and are already holding the semaphore */

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: fs/dquot.c:976:
+         * re-enter the quota code and are already holding the semaphore */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#363: FILE: fs/dquot.c:976:
+         * re-enter the quota code and are already holding the semaphore */

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: fs/dquot.c:1020:
+         * re-enter the quota code and are already holding the semaphore */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#391: FILE: fs/dquot.c:1020:
+         * re-enter the quota code and are already holding the semaphore */

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: fs/dquot.c:1055:
+         * re-enter the quota code and are already holding the semaphore */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#430: FILE: fs/dquot.c:1055:
+         * re-enter the quota code and are already holding the semaphore */

ERROR:CODE_INDENT: code indent should use tabs where possible
#459: FILE: fs/dquot.c:1093:
+         * re-enter the quota code and are already holding the semaphore */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#459: FILE: fs/dquot.c:1093:
+         * re-enter the quota code and are already holding the semaphore */

WARNING:REPEATED_WORD: Possible repeated word: 'on'
#571: FILE: fs/dquot.c:1288:
+ *	Turn quotas on on a device

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#704: FILE: fs/ext3/inode.c:2777:
+		handle = ext3_journal_start(inode, 2*EXT3_QUOTA_TRANS_BLOCKS+3);
 		                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#704: FILE: fs/ext3/inode.c:2777:
+		handle = ext3_journal_start(inode, 2*EXT3_QUOTA_TRANS_BLOCKS+3);
 		                                                            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#731: FILE: fs/ext3/inode.c:2873:
+	 * we will be updating only the data blocks + inodes */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#732: FILE: fs/ext3/inode.c:2874:
+	ret += 2*EXT3_QUOTA_TRANS_BLOCKS;
 	        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#812: FILE: fs/ext3/super.c:512:
+#define QTYPE2NAME(t) ((t)==USRQUOTA?"user":"group")
                           ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#812: FILE: fs/ext3/super.c:512:
+#define QTYPE2NAME(t) ((t)==USRQUOTA?"user":"group")
                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#812: FILE: fs/ext3/super.c:512:
+#define QTYPE2NAME(t) ((t)==USRQUOTA?"user":"group")
                                            ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#813: FILE: fs/ext3/super.c:513:
+#define QTYPE2MOPT(on, t) ((t)==USRQUOTA?((on)##USRJQUOTA):((on)##GRPJQUOTA))
                               ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#813: FILE: fs/ext3/super.c:513:
+#define QTYPE2MOPT(on, t) ((t)==USRQUOTA?((on)##USRJQUOTA):((on)##GRPJQUOTA))
                                         ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#813: FILE: fs/ext3/super.c:513:
+#define QTYPE2MOPT(on, t) ((t)==USRQUOTA?((on)##USRJQUOTA):((on)##GRPJQUOTA))
                                                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'on' - possible side-effects?
#813: FILE: fs/ext3/super.c:513:
+#define QTYPE2MOPT(on, t) ((t)==USRQUOTA?((on)##USRJQUOTA):((on)##GRPJQUOTA))

CHECK:CAMELCASE: Avoid CamelCase: <Opt_usrjquota>
#852: FILE: fs/ext3/super.c:576:
+	Opt_usrjquota, Opt_grpjquota, Opt_offusrjquota, Opt_offgrpjquota,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Opt_grpjquota>
#852: FILE: fs/ext3/super.c:576:
+	Opt_usrjquota, Opt_grpjquota, Opt_offusrjquota, Opt_offgrpjquota,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_offusrjquota>
#852: FILE: fs/ext3/super.c:576:
+	Opt_usrjquota, Opt_grpjquota, Opt_offusrjquota, Opt_offgrpjquota,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_offgrpjquota>
#852: FILE: fs/ext3/super.c:576:
+	Opt_usrjquota, Opt_grpjquota, Opt_offusrjquota, Opt_offgrpjquota,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_jqfmt_vfsold>
#853: FILE: fs/ext3/super.c:577:
+	Opt_jqfmt_vfsold, Opt_jqfmt_vfsv0,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_jqfmt_vfsv0>
#853: FILE: fs/ext3/super.c:577:
+	Opt_jqfmt_vfsold, Opt_jqfmt_vfsv0,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#875: FILE: fs/ext3/super.c:646:
+static int parse_options (char * options, struct super_block *sb,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#875: FILE: fs/ext3/super.c:646:
+static int parse_options (char * options, struct super_block *sb,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#901: FILE: fs/ext3/super.c:819:
+				printk(KERN_ERR "EXT3-fs: Cannot change journalled quota options when quota turned on.\n");

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#905: FILE: fs/ext3/super.c:823:
+				printk(KERN_ERR "EXT3-fs: %s quota file already specified.\n", QTYPE2NAME(qtype));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#905: FILE: fs/ext3/super.c:823:
+				printk(KERN_ERR "EXT3-fs: %s quota file already specified.\n", QTYPE2NAME(qtype));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#910: FILE: fs/ext3/super.c:828:
+				printk(KERN_ERR "EXT3-fs: not enough memory for storing quotafile name.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#914: FILE: fs/ext3/super.c:832:
+				printk(KERN_ERR "EXT3-fs: quotafile must be on filesystem root.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#927: FILE: fs/ext3/super.c:845:
+				printk(KERN_ERR "EXT3-fs: Cannot change journalled quota options when quota turned on.\n");

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#931: FILE: fs/ext3/super.c:849:
+			if (sbi->s_qf_names[qtype]) {
+				kfree(sbi->s_qf_names[qtype]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#948: FILE: fs/ext3/super.c:866:
+			printk (KERN_ERR "EXT3-fs: journalled quota options not supported.\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#948: FILE: fs/ext3/super.c:866:
+			printk (KERN_ERR "EXT3-fs: journalled quota options not supported.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#960: FILE: fs/ext3/super.c:883:
+		printk(KERN_ERR "EXT3-fs: journalled quota format not specified.\n");

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#981: FILE: fs/ext3/super.c:1066:
+	sb->s_flags |= MS_ACTIVE;	/* Needed for iput() to work correctly and not trash data */
 	                         	              ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#983: FILE: fs/ext3/super.c:1068:
+	for (i=0; i < MAXQUOTAS; i++)
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#986: FILE: fs/ext3/super.c:1071:
+			int ret = ext3_quota_on_mount(sb, i);
+			if (ret < 0)

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#987: FILE: fs/ext3/super.c:1072:
+				printk(KERN_ERR "EXT3-fs: Cannot turn on journalled quota: error %d\n", ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#987: FILE: fs/ext3/super.c:1072:
+				printk(KERN_ERR "EXT3-fs: Cannot turn on journalled quota: error %d\n", ret);

CHECK:SPACING: No space is necessary after a cast
#1019: FILE: fs/ext3/super.c:1249:
+	if (!parse_options ((char *) data, sb, &journal_inum, 0))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1019: FILE: fs/ext3/super.c:1249:
+	if (!parse_options ((char *) data, sb, &journal_inum, 0))

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1042: FILE: fs/ext3/super.c:1543:
+		if (sbi->s_qf_names[i])
+			kfree(sbi->s_qf_names[i]);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1066: FILE: fs/ext3/super.c:2093:
+	return writes*5+2;
 	             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1066: FILE: fs/ext3/super.c:2093:
+	return writes*5+2;
 	               ^

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#1095: FILE: fs/ext3/super.c:2106:
+	handle = ext3_journal_start(dquot_to_inode(dquot), init ? EXT3_QUOTA_INIT_BLOCKS : EXT3_QUOTA_TRANS_BLOCKS);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1110: FILE: fs/ext3/super.c:2119:
+static int ext3_mark_dquot_dirty(struct dquot * dquot)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1174: FILE: fs/ext3/super.c:2181:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1178: FILE: fs/ext3/super.c:2185:
+	err = path_lookup(path, LOOKUP_FOLLOW, &nd);
 	                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1181: FILE: fs/ext3/super.c:2188:
+	if (nd.mnt->mnt_sb != sb)	/* Quotafile not on the same filesystem? */
 	    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1183: FILE: fs/ext3/super.c:2190:
+	if (nd.dentry->d_parent->d_inode != sb->s_root->d_inode)	/* Quotafile not of fs root? */
 	    ^^

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#1183: FILE: fs/ext3/super.c:2190:
+	if (nd.dentry->d_parent->d_inode != sb->s_root->d_inode)	/* Quotafile not of fs root? */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1184: FILE: fs/ext3/super.c:2191:
+		printk(KERN_WARNING "EXT3-fs: Quota file not on filesystem root. Journalled quota will not work.\n");

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1185: FILE: fs/ext3/super.c:2192:
+	if (!ext3_should_journal_data(nd.dentry->d_inode))
 	                              ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1186: FILE: fs/ext3/super.c:2193:
+		printk(KERN_WARNING "EXT3-fs: Quota file does not have data-journalling. Journalled quota will not work.\n");

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1187: FILE: fs/ext3/super.c:2194:
+	path_release(&nd);
 	              ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1277: FILE: fs/quota_v2.c:178:
+static int get_free_dqblk(struct file *filp, int type)
                                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1298: FILE: fs/quota_v2.c:207:
+static int put_free_dqblk(struct file *filp, int type, dqbuf_t buf, uint blk)
                                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1317: FILE: fs/quota_v2.c:224:
+static int remove_free_dqentry(struct file *filp, int type, dqbuf_t buf, uint blk)
                                             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1338: FILE: fs/quota_v2.c:263:
+static int insert_free_dqentry(struct file *filp, int type, dqbuf_t buf, uint blk)
                                             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1359: FILE: fs/quota_v2.c:316:
+		blk = get_free_dqblk(filp, dquot->dq_type);
 		                     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1372: FILE: fs/quota_v2.c:327:
+		if ((*err = remove_free_dqentry(filp, dquot->dq_type, buf, blk)) < 0) {
 		                                ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1372: FILE: fs/quota_v2.c:327:
+		if ((*err = remove_free_dqentry(filp, dquot->dq_type, buf, blk)) < 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1389: FILE: fs/quota_v2.c:366:
+		ret = get_free_dqblk(filp, dquot->dq_type);
 		                     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1398: FILE: fs/quota_v2.c:400:
+		put_free_dqblk(filp, dquot->dq_type, buf, *treeblk);
 		               ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1434: FILE: fs/quota_v2.c:473:
+		if ((ret = remove_free_dqentry(filp, dquot->dq_type, buf, blk)) < 0 ||
 		                               ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1434: FILE: fs/quota_v2.c:473:
+		if ((ret = remove_free_dqentry(filp, dquot->dq_type, buf, blk)) < 0 ||

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1435: FILE: fs/quota_v2.c:474:
+		    (ret = put_free_dqblk(filp, dquot->dq_type, buf, blk)) < 0) {
 		                          ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1444: FILE: fs/quota_v2.c:483:
+			if ((ret = insert_free_dqentry(filp, dquot->dq_type, buf, blk)) < 0) {
 			                               ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1444: FILE: fs/quota_v2.c:483:
+			if ((ret = insert_free_dqentry(filp, dquot->dq_type, buf, blk)) < 0) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1461: FILE: fs/quota_v2.c:527:
+			put_free_dqblk(filp, dquot->dq_type, buf, *blk);
 			               ^^^^

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#1478: FILE: fs/quota_v2.c:659:
+		if (!dquot->dq_dqb.dqb_bhardlimit && !dquot->dq_dqb.dqb_bsoftlimit && !dquot->dq_dqb.dqb_ihardlimit &&

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1497: FILE: fs/quota_v2.c:674:
+	test = !init && test_bit(DQ_FAKE_B, &dquot->dq_flags) && !(dquot->dq_dqb.dqb_curinodes | dquot->dq_dqb.dqb_curspace);

WARNING:TYPO_SPELLING: 'resposible' may be misspelled - perhaps 'responsible'?
#1510: FILE: fs/stat.c:400:
+	/* Caller is here resposible for sufficient locking (ie. inode->i_lock) */
 	                  ^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1539: FILE: include/linux/ext3_jbd.h:47:
+					 2*EXT3_QUOTA_TRANS_BLOCKS)
 					  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1549: FILE: include/linux/ext3_jbd.h:78:
+ * allocated so we need to update only inode+data */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1551: FILE: include/linux/ext3_jbd.h:80:
+#define EXT3_QUOTA_INIT_BLOCKS (DQUOT_MAX_WRITES*(EXT3_SINGLEDATA_TRANS_BLOCKS-2)+2)
                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1551: FILE: include/linux/ext3_jbd.h:80:
+#define EXT3_QUOTA_INIT_BLOCKS (DQUOT_MAX_WRITES*(EXT3_SINGLEDATA_TRANS_BLOCKS-2)+2)
                                                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1551: FILE: include/linux/ext3_jbd.h:80:
+#define EXT3_QUOTA_INIT_BLOCKS (DQUOT_MAX_WRITES*(EXT3_SINGLEDATA_TRANS_BLOCKS-2)+2)
                                                                                  ^

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#1567: FILE: include/linux/quota.h:142:
+#define DQUOT_MAX_WRITES	6	/* Number of writes needed when quota structure is written */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1581: FILE: include/linux/quota.h:180:
+extern void mark_info_dirty(struct super_block *sb, int type);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1587: FILE: include/linux/quota.h:186:
+#define sb_dqinfo(sb, type) (sb_dqopt(sb)->info+(type))
                                                ^

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#1596: FILE: include/linux/quota.h:241:
+	int (*commit_dqblk)(struct dquot *dquot, int init);	/* Write (or delete) structure for one user */

WARNING:SPACING: Unnecessary space before function pointer arguments
#1603: FILE: include/linux/quota.h:246:
+	int (*initialize) (struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1603: FILE: include/linux/quota.h:246:
+	int (*initialize) (struct inode *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1603: FILE: include/linux/quota.h:246:
+	int (*initialize) (struct inode *, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1604: FILE: include/linux/quota.h:247:
+	int (*drop) (struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1604: FILE: include/linux/quota.h:247:
+	int (*drop) (struct inode *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1609: FILE: include/linux/quota.h:250:
+	int (*free_space) (struct inode *, qsize_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1609: FILE: include/linux/quota.h:250:
+	int (*free_space) (struct inode *, qsize_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'qsize_t' should also have an identifier name
#1609: FILE: include/linux/quota.h:250:
+	int (*free_space) (struct inode *, qsize_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1610: FILE: include/linux/quota.h:251:
+	int (*free_inode) (const struct inode *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct inode *' should also have an identifier name
#1610: FILE: include/linux/quota.h:251:
+	int (*free_inode) (const struct inode *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1610: FILE: include/linux/quota.h:251:
+	int (*free_inode) (const struct inode *, unsigned long);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1613: FILE: include/linux/quota.h:253:
+	int (*write_dquot) (struct dquot *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dquot *' should also have an identifier name
#1613: FILE: include/linux/quota.h:253:
+	int (*write_dquot) (struct dquot *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1613: FILE: include/linux/quota.h:253:
+	int (*write_dquot) (struct dquot *, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1614: FILE: include/linux/quota.h:254:
+	int (*mark_dirty) (struct dquot *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dquot *' should also have an identifier name
#1614: FILE: include/linux/quota.h:254:
+	int (*mark_dirty) (struct dquot *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1615: FILE: include/linux/quota.h:255:
+	int (*write_info) (struct super_block *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#1615: FILE: include/linux/quota.h:255:
+	int (*write_info) (struct super_block *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1615: FILE: include/linux/quota.h:255:
+	int (*write_info) (struct super_block *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1648: FILE: include/linux/quotaops.h:25:
+extern int dquot_initialize(struct inode *inode, int type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1649: FILE: include/linux/quotaops.h:26:
+extern int dquot_drop(struct inode *inode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1653: FILE: include/linux/quotaops.h:28:
+extern int dquot_alloc_space(struct inode *inode, qsize_t number, int prealloc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1654: FILE: include/linux/quotaops.h:29:
+extern int dquot_alloc_inode(const struct inode *inode, unsigned long number);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1658: FILE: include/linux/quotaops.h:31:
+extern int dquot_free_space(struct inode *inode, qsize_t number);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1659: FILE: include/linux/quotaops.h:32:
+extern int dquot_free_inode(const struct inode *inode, unsigned long number);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1662: FILE: include/linux/quotaops.h:34:
+extern int dquot_transfer(struct inode *inode, struct iattr *iattr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1663: FILE: include/linux/quotaops.h:35:
+extern int dquot_commit(struct dquot *dquot, int init);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1664: FILE: include/linux/quotaops.h:36:
+extern int dquot_commit_info(struct super_block *sb, int type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1665: FILE: include/linux/quotaops.h:37:
+extern int dquot_mark_dquot_dirty(struct dquot *dquot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1667: FILE: include/linux/quotaops.h:39:
+extern int vfs_quota_on(struct super_block *sb, int type, int format_id, char *path);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1668: FILE: include/linux/quotaops.h:40:
+extern int vfs_quota_on_mount(int type, int format_id, struct dentry *dentry);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1669: FILE: include/linux/quotaops.h:41:
+extern int vfs_quota_off(struct super_block *sb, int type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1670: FILE: include/linux/quotaops.h:42:
+extern int vfs_quota_off_mount(struct super_block *sb, int type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1671: FILE: include/linux/quotaops.h:43:
+extern int vfs_quota_sync(struct super_block *sb, int type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1672: FILE: include/linux/quotaops.h:44:
+extern int vfs_get_dqinfo(struct super_block *sb, int type, struct if_dqinfo *ii);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1673: FILE: include/linux/quotaops.h:45:
+extern int vfs_set_dqinfo(struct super_block *sb, int type, struct if_dqinfo *ii);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1674: FILE: include/linux/quotaops.h:46:
+extern int vfs_get_dqblk(struct super_block *sb, int type, qid_t id, struct if_dqblk *di);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1675: FILE: include/linux/quotaops.h:47:
+extern int vfs_set_dqblk(struct super_block *sb, int type, qid_t id, struct if_dqblk *di);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1685: FILE: include/linux/quotaops.h:80:
 	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1699: FILE: include/linux/quotaops.h:101:
 	}
+	else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000304550.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 76 warnings, 44 checks, 1524 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000304550.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
