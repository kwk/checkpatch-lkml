WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
diff --exclude *~ --new-file -u -r linux-2.4.4-orig/drivers/char/Makefile linux-2.4.4-i386-pagetrace/drivers/char/Makefile

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: drivers/char/biglog.c:1:
+/* Implements a misc device that can output large amounts of data from

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#73: FILE: drivers/char/biglog.c:12:
+#include <asm/uaccess.h>

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#77: FILE: drivers/char/biglog.c:16:
+#define BUFFER_SIZE (1024*1024*1)
                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#77: FILE: drivers/char/biglog.c:16:
+#define BUFFER_SIZE (1024*1024*1)
                               ^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#86: FILE: drivers/char/biglog.c:25:
+struct fop_priv
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#89: FILE: drivers/char/biglog.c:28:
+}
+;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo*bar" should be "foo *bar"
#91: FILE: drivers/char/biglog.c:30:
+void biglog_log(const char*str)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo*bar" should be "foo *bar"
#93: FILE: drivers/char/biglog.c:32:
+	const char*i = str;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#97: FILE: drivers/char/biglog.c:36:
+	spin_lock_irqsave(&write_head_lock,flags);
 	                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#99: FILE: drivers/char/biglog.c:38:
+	while(*i) {

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#100: FILE: drivers/char/biglog.c:39:
+		buffer[head++]= *i++;
 		              ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#101: FILE: drivers/char/biglog.c:40:
+		if(head>=BUFFER_SIZE)
 		       ^

ERROR:SPACING: space required before the open parenthesis '('
#101: FILE: drivers/char/biglog.c:40:
+		if(head>=BUFFER_SIZE)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#105: FILE: drivers/char/biglog.c:44:
+	spin_unlock_irqrestore(&write_head_lock,flags);
 	                                       ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#109: FILE: drivers/char/biglog.c:48:
+void biglog_logfault(struct mm_struct *mm, struct vm_area_struct * vma,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: drivers/char/biglog.c:49:
+^I^I     unsigned long address, int write_access) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#115: FILE: drivers/char/biglog.c:54:
+	char* process = current ? current->comm : "unknown";

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: drivers/char/biglog.c:56:
+^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#119: FILE: drivers/char/biglog.c:58:
+	struct file* file = vma->vm_file;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#120: FILE: drivers/char/biglog.c:59:
+	struct dentry* dentry = file ? file->f_dentry : 0;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#121: FILE: drivers/char/biglog.c:60:
+	struct inode* inode = dentry ? dentry->d_inode : 0;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#125: FILE: drivers/char/biglog.c:64:
+	struct qstr* d_name = dentry ? &dentry->d_name : 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: drivers/char/biglog.c:65:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: drivers/char/biglog.c:65:
+               $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: drivers/char/biglog.c:65:
+               $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#128: FILE: drivers/char/biglog.c:67:
+	unsigned len = sizeof(name)-1;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#128: FILE: drivers/char/biglog.c:67:
+	unsigned len = sizeof(name)-1;
 	                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: drivers/char/biglog.c:68:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: drivers/char/biglog.c:68:
+               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: drivers/char/biglog.c:68:
+               $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'd_name->len < len'
#130: FILE: drivers/char/biglog.c:69:
+	if(d_name && (d_name->len < len))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#130: FILE: drivers/char/biglog.c:69:
+	if(d_name && (d_name->len < len))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: drivers/char/biglog.c:71:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: drivers/char/biglog.c:71:
+               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: drivers/char/biglog.c:71:
+               $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#133: FILE: drivers/char/biglog.c:72:
+	strncpy(name, d_name ? (const char*)d_name->name : (const char*)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#133: FILE: drivers/char/biglog.c:72:
+	strncpy(name, d_name ? (const char*)d_name->name : (const char*)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#137: FILE: drivers/char/biglog.c:76:
+	sprintf(faultbuf,"%lu: %p%c (%s) %lu (%s) %p %lu:%lu+%lu\n",
 	                ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#139: FILE: drivers/char/biglog.c:78:
+		(void*)address,

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#140: FILE: drivers/char/biglog.c:79:
+		write_access?'W':'r',
 		            ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#140: FILE: drivers/char/biglog.c:79:
+		write_access?'W':'r',
 		                ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#143: FILE: drivers/char/biglog.c:82:
+		(char*)name,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: drivers/char/biglog.c:92:
+static int fop_open(struct inode * inode, struct file * file)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: drivers/char/biglog.c:92:
+static int fop_open(struct inode * inode, struct file * file)

ERROR:POINTER_LOCATION: "foo*bar" should be "foo *bar"
#155: FILE: drivers/char/biglog.c:94:
+	struct fop_priv*priv;

WARNING:LINE_SPACING: Missing a blank line after declarations
#156: FILE: drivers/char/biglog.c:95:
+	struct fop_priv*priv;
+	priv = kmalloc(sizeof *priv,GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#156: FILE: drivers/char/biglog.c:95:
+	priv = kmalloc(sizeof *priv,GFP_KERNEL);
 	                           ^

WARNING:SIZEOF_PARENTHESIS: sizeof *priv should be sizeof(*priv)
#156: FILE: drivers/char/biglog.c:95:
+	priv = kmalloc(sizeof *priv,GFP_KERNEL);

ERROR:SPACING: space required before the open parenthesis '('
#157: FILE: drivers/char/biglog.c:96:
+	if(!priv)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#160: FILE: drivers/char/biglog.c:99:
+	memset(priv,0,sizeof *priv);
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#160: FILE: drivers/char/biglog.c:99:
+	memset(priv,0,sizeof *priv);
 	             ^

WARNING:SIZEOF_PARENTHESIS: sizeof *priv should be sizeof(*priv)
#160: FILE: drivers/char/biglog.c:99:
+	memset(priv,0,sizeof *priv);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#168: FILE: drivers/char/biglog.c:107:
+static ssize_t fop_read(struct file * file, char * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#168: FILE: drivers/char/biglog.c:107:
+static ssize_t fop_read(struct file * file, char * buf,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#179: FILE: drivers/char/biglog.c:118:
+	spin_lock_irqsave(&write_head_lock,flags);
 	                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#181: FILE: drivers/char/biglog.c:120:
+	if(head == priv->read_head) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#182: FILE: drivers/char/biglog.c:121:
+		spin_unlock_irqrestore(&write_head_lock,flags);
 		                                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#183: FILE: drivers/char/biglog.c:122:
+		if(file->f_flags&O_NONBLOCK)
 		                ^

ERROR:SPACING: space required before the open parenthesis '('
#183: FILE: drivers/char/biglog.c:122:
+		if(file->f_flags&O_NONBLOCK)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: drivers/char/biglog.c:124:
+^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: drivers/char/biglog.c:126:
+		if (wait_event_interruptible(waiters,
+		    head != write_head)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#191: FILE: drivers/char/biglog.c:130:
+		spin_lock_irqsave(&write_head_lock,flags);
 		                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: drivers/char/biglog.c:133:
+^Iif(!count) $

ERROR:SPACING: space required before the open parenthesis '('
#194: FILE: drivers/char/biglog.c:133:
+	if(!count) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: drivers/char/biglog.c:135:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#197: FILE: drivers/char/biglog.c:136:
+	if(head >= priv->read_head)

ERROR:SPACING: space required before the open parenthesis '('
#198: FILE: drivers/char/biglog.c:137:
+		if(count > head - priv->read_head)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: drivers/char/biglog.c:139:
+^I^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#201: FILE: drivers/char/biglog.c:140:
+	if(count+priv->read_head >  BUFFER_SIZE)
 	        ^

ERROR:SPACING: space required before the open parenthesis '('
#201: FILE: drivers/char/biglog.c:140:
+	if(count+priv->read_head >  BUFFER_SIZE)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: drivers/char/biglog.c:142:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#204: FILE: drivers/char/biglog.c:143:
+	if (copy_to_user(buf, buffer + priv->read_head, count))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#206: FILE: drivers/char/biglog.c:145:
+	else {

ERROR:SPACING: space required before the open parenthesis '('
#209: FILE: drivers/char/biglog.c:148:
+		if(priv->read_head >= BUFFER_SIZE)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#213: FILE: drivers/char/biglog.c:152:
+	spin_unlock_irqrestore(&write_head_lock,flags);
 	                                       ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#217: FILE: drivers/char/biglog.c:156:
+static int fop_release(struct inode * inode, struct file * file)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#217: FILE: drivers/char/biglog.c:156:
+static int fop_release(struct inode * inode, struct file * file)

WARNING:LINE_SPACING: Missing a blank line after declarations
#220: FILE: drivers/char/biglog.c:159:
+	struct fop_priv *priv = (struct fop_priv *)file->private_data;
+	kfree(priv);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#224: FILE: drivers/char/biglog.c:163:
+static struct file_operations fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#225: FILE: drivers/char/biglog.c:164:
+	owner:		THIS_MODULE,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#226: FILE: drivers/char/biglog.c:165:
+	read:		fop_read,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#226: FILE: drivers/char/biglog.c:165:
+	read:		fop_read,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#227: FILE: drivers/char/biglog.c:166:
+	open:		fop_open,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#227: FILE: drivers/char/biglog.c:166:
+	open:		fop_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#228: FILE: drivers/char/biglog.c:167:
+	release:		fop_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#228: FILE: drivers/char/biglog.c:167:
+	release:		fop_release,

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#231: FILE: drivers/char/biglog.c:170:
+static struct miscdevice dev=
                             ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#232: FILE: drivers/char/biglog.c:171:
+static struct miscdevice dev=
+{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#238: FILE: drivers/char/biglog.c:177:
+
+

ERROR:SPACING: space required before the open brace '{'
#241: FILE: drivers/char/biglog.c:180:
+	if(misc_register(&dev)){

ERROR:SPACING: space required before the open parenthesis '('
#241: FILE: drivers/char/biglog.c:180:
+	if(misc_register(&dev)){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#242: FILE: drivers/char/biglog.c:181:
+		printk(KERN_DEBUG "biglog: could not register device node\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: drivers/char/biglog.c:184:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#246: FILE: drivers/char/biglog.c:185:
+	printk(KERN_INFO "biglog: ready to rock\n");

ERROR:SPACING: space required before the open parenthesis '('
#252: FILE: drivers/char/biglog.c:191:
+	if(misc_deregister(&dev))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#253: FILE: drivers/char/biglog.c:192:
+		printk(KERN_DEBUG "biglog: could not deregister device node\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#256: FILE: drivers/char/biglog.c:195:
+	printk(KERN_INFO "biglog: biglog has left the building\n");

WARNING:TYPO_SPELLING: 'loggin' may be misspelled - perhaps 'login'?
#262: FILE: drivers/char/biglog.c:201:
+MODULE_DESCRIPTION("Interface for loggin large amounts of data from the kernel");
                                   ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#264: FILE: drivers/char/biglog.c:203:
+EXPORT_SYMBOL(biglog_logfault);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#265: FILE: drivers/char/biglog.c:204:
+EXPORT_SYMBOL(biglog_log);

ERROR:POINTER_LOCATION: "foo*bar" should be "foo *bar"
#273: FILE: include/asm-i386/mmu_context.h:30:
+	extern void trace_mm(struct mm_struct*mm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#273: FILE: include/asm-i386/mmu_context.h:30:
+	extern void trace_mm(struct mm_struct*mm);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#303: FILE: include/asm-i386/pgtable.h:283:
+static inline pte_t pte_mktrace(pte_t pte)      { (pte).pte_low |= _PAGE_TRACE; (pte).pte_low &= ~_PAGE_PRESENT; return pte; }

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 158 exceeds 100 columns
#304: FILE: include/asm-i386/pgtable.h:284:
+static inline pte_t pte_untrace(pte_t pte)      { if(!pte_traced(pte))return pte; (pte).pte_low &= ~_PAGE_TRACE; (pte).pte_low |= _PAGE_PRESENT; return pte; }

ERROR:SPACING: space required before the open parenthesis '('
#304: FILE: include/asm-i386/pgtable.h:284:
+static inline pte_t pte_untrace(pte_t pte)      { if(!pte_traced(pte))return pte; (pte).pte_low &= ~_PAGE_TRACE; (pte).pte_low |= _PAGE_PRESENT; return pte; }

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#304: FILE: include/asm-i386/pgtable.h:284:
+static inline pte_t pte_untrace(pte_t pte)      { if(!pte_traced(pte))return pte; (pte).pte_low &= ~_PAGE_TRACE; (pte).pte_low |= _PAGE_PRESENT; return pte; }

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#316: FILE: include/linux/sysctl.h:137:
+	VM_PAGE_CLUSTER=10,	/* int: set number of pages to swap together */
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#317: FILE: include/linux/sysctl.h:138:
+	VM_TRACE=11,            /* Turn on page access tracing */
 	        ^

ERROR:POINTER_LOCATION: "foo*bar" should be "foo *bar"
#356: FILE: mm/memory.c:1275:
+void trace_vma(struct vm_area_struct*vma,pte_t *avoid)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#356: FILE: mm/memory.c:1275:
+void trace_vma(struct vm_area_struct*vma,pte_t *avoid)
                                         ^

ERROR:SPACING: space required before the open parenthesis '('
#360: FILE: mm/memory.c:1279:
+	if(!page_trace)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: mm/memory.c:1281:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#363: FILE: mm/memory.c:1282:
+	for(address = vma->vm_start;
+	    address < vma->vm_end;
+	    address += PAGE_SIZE)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#363: FILE: mm/memory.c:1282:
+	for(address = vma->vm_start;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#369: FILE: mm/memory.c:1288:
+		pte_t * pte;

ERROR:SPACING: space required before the open brace '{'
#372: FILE: mm/memory.c:1291:
+		if(pgd && !pgd_none(*pgd) && !pgd_bad(*pgd)){

ERROR:SPACING: space required before the open parenthesis '('
#372: FILE: mm/memory.c:1291:
+		if(pgd && !pgd_none(*pgd) && !pgd_bad(*pgd)){

ERROR:SPACING: space required before the open brace '{'
#374: FILE: mm/memory.c:1293:
+			if(pmd && !pmd_none(*pmd) && !pmd_bad(*pmd)){

ERROR:SPACING: space required before the open parenthesis '('
#374: FILE: mm/memory.c:1293:
+			if(pmd && !pmd_none(*pmd) && !pmd_bad(*pmd)){

ERROR:SPACING: space required before the open parenthesis '('
#376: FILE: mm/memory.c:1295:
+				if(pte && pte != avoid && !pte_none(*pte))

ERROR:SPACING: space required before the open parenthesis '('
#377: FILE: mm/memory.c:1296:
+					if(pte_present(*pte) && !pte_traced(*pte)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#379: FILE: mm/memory.c:1298:
+						flush_tlb_page(vma,address);
 						                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#381: FILE: mm/memory.c:1300:
+^I^I^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#382: FILE: mm/memory.c:1301:
+				
+			}

ERROR:POINTER_LOCATION: "foo*bar" should be "foo *bar"
#387: FILE: mm/memory.c:1306:
+void trace_mm(struct mm_struct*mm)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#389: FILE: mm/memory.c:1308:
+	struct vm_area_struct * mmap;

ERROR:SPACING: space required before the open parenthesis '('
#391: FILE: mm/memory.c:1310:
+	if(!page_trace)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: mm/memory.c:1312:
+^I$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#394: FILE: mm/memory.c:1313:
+	for(mmap = mm->mmap;mmap;mmap = mmap->vm_next)
 	                   ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#394: FILE: mm/memory.c:1313:
+	for(mmap = mm->mmap;mmap;mmap = mmap->vm_next)
 	                        ^

ERROR:SPACING: space required before the open parenthesis '('
#394: FILE: mm/memory.c:1313:
+	for(mmap = mm->mmap;mmap;mmap = mmap->vm_next)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#395: FILE: mm/memory.c:1314:
+		trace_vma(mmap,0);
 		              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#406: FILE: mm/memory.c:1340:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#408: FILE: mm/memory.c:1342:
+	if(pte_traced(entry)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#409: FILE: mm/memory.c:1343:
+		trace_vma(vma,pte);
 		             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#415: FILE: mm/memory.c:1349:
+	trace_vma(vma,pte);
 	             ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#423: FILE: mm/memory.c:1352:
 	if (!pte_present(entry)) {
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#437: FILE: mm/memory.c:1376:
+	extern void biglog_logfault(struct mm_struct *mm, struct vm_area_struct * vma,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#437: FILE: mm/memory.c:1376:
+	extern void biglog_logfault(struct mm_struct *mm, struct vm_area_struct * vma,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#443: FILE: mm/memory.c:1382:
+	biglog_logfault(mm,vma,address,write_access);
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#443: FILE: mm/memory.c:1382:
+	biglog_logfault(mm,vma,address,write_access);
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#443: FILE: mm/memory.c:1382:
+	biglog_logfault(mm,vma,address,write_access);
 	                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#444: FILE: mm/memory.c:1383:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000527430.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 102 errors, 26 warnings, 16 checks, 368 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000527430.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
