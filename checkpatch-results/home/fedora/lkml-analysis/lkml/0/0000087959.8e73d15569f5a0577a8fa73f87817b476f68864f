WARNING:TYPO_SPELLING: 'similiar' may be misspelled - perhaps 'similar'?
#38: 
could result in similiar issues, so it seems a comprehensive approach is
                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#116: FILE: kernel/rcupdate.c:148:
+static int rcu_callbacks_processed_remotely(int cpu) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#120: FILE: kernel/rcupdate.c:152:
+	return(cpu_isset(cpu, mask));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#153: FILE: kernel/rcupdate.c:185:
+	cpu_remotercu_next=next_cpu(cpu_remotercu_next, mask);
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#154: FILE: kernel/rcupdate.c:186:
+	if (cpu_remotercu_next >= NR_CPUS) {
+		cpu_remotercu_next = first_cpu(mask);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#154: FILE: kernel/rcupdate.c:186:
+	if (cpu_remotercu_next >= NR_CPUS) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#166: FILE: kernel/rcupdate.c:198:
+static int rcu_set_remote_rcu(int cpu) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#169: FILE: kernel/rcupdate.c:201:
+	if (cpu < NR_CPUS) {
[...]
+	} else
[...]

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#169: FILE: kernel/rcupdate.c:201:
+	if (cpu < NR_CPUS) {

CHECK:BRACES: Unbalanced braces around else statement
#174: FILE: kernel/rcupdate.c:206:
+	} else

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#181: FILE: kernel/rcupdate.c:213:
+static void rcu_clear_remote_rcu(int cpu) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#184: FILE: kernel/rcupdate.c:216:
+	if (cpu < NR_CPUS) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#207: FILE: kernel/rcupdate.c:239:
+__setup ("remotercu=", rcu_remotercu_cpu_setup);

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#229: FILE: kernel/rcupdate.c:277:
+		} while (cmpxchg(&rdp->qlen, old, new)!=old);
 		                                      ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#261: FILE: kernel/rcupdate.c:334:
+		} while (cmpxchg(&rdp->qlen, old, new)!=old);
 		                                      ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#357: FILE: kernel/rcupdate.c:676:
+	struct rcu_head * list = NULL;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#358: FILE: kernel/rcupdate.c:677:
+	struct rcu_head * list_bh = NULL;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#362: FILE: kernel/rcupdate.c:681:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#365: FILE: kernel/rcupdate.c:684:
+	if (unlikely(cpu == -1)) {
+		return;
+	}

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#376: FILE: kernel/rcupdate.c:695:
+		if ((list=xchg(&rdp->donelist, NULL))!=NULL)
 		         ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#376: FILE: kernel/rcupdate.c:695:
+		if ((list=xchg(&rdp->donelist, NULL))!=NULL)
 		                                     ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#376: FILE: kernel/rcupdate.c:695:
+		if ((list=xchg(&rdp->donelist, NULL))!=NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#383: FILE: kernel/rcupdate.c:702:
+		if ((list_bh=xchg(&rdp_bh->donelist, NULL))!=NULL)
 		            ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#383: FILE: kernel/rcupdate.c:702:
+		if ((list_bh=xchg(&rdp_bh->donelist, NULL))!=NULL)
 		                                           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#383: FILE: kernel/rcupdate.c:702:
+		if ((list_bh=xchg(&rdp_bh->donelist, NULL))!=NULL)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#389: FILE: kernel/rcupdate.c:708:
+	cnt=0;
 	   ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#397: FILE: kernel/rcupdate.c:716:
+	if (cnt) do {

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#400: FILE: kernel/rcupdate.c:719:
+	} while (cmpxchg(&rdp->qlen, old, new)!=old);
 	                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#402: FILE: kernel/rcupdate.c:721:
+	cnt=0;
 	   ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#409: FILE: kernel/rcupdate.c:728:
+	if (cnt) do {

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#412: FILE: kernel/rcupdate.c:731:
+	} while (cmpxchg(&rdp_bh->qlen, old, new)!=old);
 	                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#440: FILE: kernel/rcupdate.c:808:
+	tasklet_init(&per_cpu(rcu_remote_tasklet, cpu),
+		rcu_process_remote_callbacks, 0UL);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#443: FILE: kernel/rcupdate.c:811:
 static int __devinit rcu_cpu_notify(struct notifier_block *self, 

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000087959.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 8 warnings, 4 checks, 374 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000087959.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
