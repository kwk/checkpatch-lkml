WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
> > > any other suggestions for instrumentation, I'd be happy to gather more

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#88: FILE: tree.h:4146:
+/* Non-zero if we are folding constants inside an initializer; zero
+   otherwise.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#88: FILE: tree.h:4146:
+   otherwise.  */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#101: FILE: builtins.c:6498:
       || POINTER_TYPE_P (TREE_TYPE (arglist))
+      || cfun == 0

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: builtins.c:6498:
+      || cfun == 0$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#102: FILE: builtins.c:6499:
+      || cfun == 0
+      || folding_initializer)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: builtins.c:6499:
+      || folding_initializer)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#113: FILE: fold-const.c:63:
+/* Non-zero if we are folding constants inside an initializer; zero
+   otherwise.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#113: FILE: fold-const.c:63:
+   otherwise.  */

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#114: FILE: fold-const.c:64:
+int folding_initializer = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: fold-const.c:11715:
+  int saved_folding_initializer = folding_initializer;\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: fold-const.c:11719:
+  flag_trapv = 0;\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: fold-const.c:11720:
+  folding_initializer = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: fold-const.c:11726:
+  flag_trapv = saved_trapv;\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: fold-const.c:11727:
+  folding_initializer = saved_folding_initializer;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#144: FILE: testsuite/gcc.c-torture/compile/builtin_constant_p.c:1:
+/* { dg-options "-O2" } */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#146: FILE: testsuite/gcc.c-torture/compile/builtin_constant_p.c:3:
+int main (int argc, char *argv[])

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: testsuite/gcc.c-torture/compile/builtin_constant_p.c:5:
+  static int a[] = { __builtin_constant_p (argc) ? 1 : 0 };$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#148: FILE: testsuite/gcc.c-torture/compile/builtin_constant_p.c:5:
+  static int a[] = { __builtin_constant_p (argc) ? 1 : 0 };

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: testsuite/gcc.c-torture/compile/builtin_constant_p.c:6:
+  return a[0];$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000027986.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 17 warnings, 2 checks, 58 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000027986.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
