ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#77: FILE: net/irda/irlap.c:26:
+ *     along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#78: FILE: net/irda/irlap.c:27:
+ *     Foundation, Inc., 59 Temple Place, Suite 330, Boston,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: net/irda/irlap.c:85:
+^I        ERROR("%s: can't allocate irlap hashbin!\n", __FUNCTION__);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#90: FILE: net/irda/irlap.c:85:
+	        ERROR("%s: can't allocate irlap hashbin!\n", __FUNCTION__);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#265: FILE: net/irda/irlap.c:336:
+	ASSERT(skb_headroom(skb) >= (LAP_ADDR_HEADER+LAP_CTRL_HEADER),
 	                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#272: FILE: net/irda/irlap.c:341:
+	/*
+	 *  Must set frame format now so that the rest of the code knows

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#283: FILE: net/irda/irlap.c:353:
+	/*
+	 *  Send event if this frame only if we are in the right state

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'self->state == LAP_XMIT_P'
#287: FILE: net/irda/irlap.c:356:
+	if ((self->state == LAP_XMIT_P) || (self->state == LAP_XMIT_S)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'self->state == LAP_XMIT_S'
#287: FILE: net/irda/irlap.c:356:
+	if ((self->state == LAP_XMIT_P) || (self->state == LAP_XMIT_S)) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#296: FILE: net/irda/irlap.c:380:
+	ASSERT(skb_headroom(skb) >= (LAP_ADDR_HEADER+LAP_CTRL_HEADER),
 	                                            ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#305: FILE: net/irda/irlap.c:402:
+	IRDA_DEBUG(1, __FUNCTION__ "()\n");

WARNING:TYPO_SPELLING: 'FALLTROUGH' may be misspelled - perhaps 'FALLTHROUGH'?
#337: FILE: net/irda/irlap.c:439:
+	case LAP_CONN:          /* FALLTROUGH */
 	                           ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'FALLTROUGH' may be misspelled - perhaps 'FALLTHROUGH'?
#338: FILE: net/irda/irlap.c:440:
+	case LAP_RESET_WAIT:    /* FALLTROUGH */
 	                           ^^^^^^^^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#351: FILE: net/irda/irlap.c:459:
+	IRDA_DEBUG(1, __FUNCTION__ "(), reason=%s\n", lap_reasons[reason]);

WARNING:TYPO_SPELLING: 'FALLTROUGH' may be misspelled - perhaps 'FALLTHROUGH'?
#366: FILE: net/irda/irlap.c:472:
+	case LAP_NO_RESPONSE:	   /* FALLTROUGH */
 	                     	      ^^^^^^^^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#376: FILE: net/irda/irlap.c:480:
+		ERROR("%s: Unknown reason %d\n", __FUNCTION__, reason);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#407: FILE: net/irda/irlap.c:506:
+		IRDA_DEBUG(4, __FUNCTION__

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#452: FILE: net/irda/irlap.c:553:
+	/*
+	 * Check for successful discovery, since we are then allowed to clear

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#517: FILE: net/irda/irlap.c:640:
+	IRDA_DEBUG(1, __FUNCTION__ "()\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "skb_peek"
#575: FILE: net/irda/irlap.c:697:
+		while ((skb_peek(&self->wx_list) != NULL) &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#576: FILE: net/irda/irlap.c:698:
+		       (((self->va+1) % 8) != nr))
 		                  ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nr >= self->va'
#631: FILE: net/irda/irlap.c:752:
+		if ((nr >= self->va) || (nr <= self->vs))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nr <= self->vs'
#631: FILE: net/irda/irlap.c:752:
+		if ((nr >= self->va) || (nr <= self->vs))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#754: FILE: net/irda/irlap.c:1013:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#756: FILE: net/irda/irlap.c:1015:
+	/*
+	 *  Initialize timeout values, some of the rules are listed on

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#808: FILE: net/irda/irlap.c:1098:
+		len += sprintf(buf+len, "state: %s\n",
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#822: FILE: net/irda/irlap.c:1109:
+		len += sprintf(buf+len, "  win size: %d, ",
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#827: FILE: net/irda/irlap.c:1113:
+		len += sprintf(buf+len, "line capacity: %d, ",
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#832: FILE: net/irda/irlap.c:1117:
+		len += sprintf(buf+len, "  tx queue len: %d ",
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#835: FILE: net/irda/irlap.c:1119:
+		len += sprintf(buf+len, "win queue len: %d ",
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#853: FILE: net/irda/irlap.c:1133:
+		len += sprintf(buf+len, "  tx\t%d\t",
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#856: FILE: net/irda/irlap.c:1135:
+		len += sprintf(buf+len, "%d\t",
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#865: FILE: net/irda/irlap.c:1143:
+		len += sprintf(buf+len, "%d\t",
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#868: FILE: net/irda/irlap.c:1145:
+		len += sprintf(buf+len, "%d\t",
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#873: FILE: net/irda/irlap.c:1149:
+		len += sprintf(buf+len, "  rx\t%d\t",
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#876: FILE: net/irda/irlap.c:1151:
+		len += sprintf(buf+len, "%d\t",
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#885: FILE: net/irda/irlap.c:1159:
+		len += sprintf(buf+len, "%d\t",
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#888: FILE: net/irda/irlap.c:1161:
+		len += sprintf(buf+len, "%d\t",
 		                  ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451071.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 13 warnings, 22 checks, 805 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451071.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
