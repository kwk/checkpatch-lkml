ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#36: 
--- a/arch/sparc/kernel/pcic.c	Fri Aug 30 13:59:38 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#68: FILE: arch/sparc/kernel/pcic.c:210:
+		pcic_read_config(bus, devfn, where&~3, 4, &v);
 		                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#69: FILE: arch/sparc/kernel/pcic.c:211:
+		*value = 0xff & (v >> (8*(where & 3)));
 		                        ^

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#71: FILE: arch/sparc/kernel/pcic.c:213:
+		return PCIBIOS_SUCCESSFUL;
+		break;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#79: FILE: arch/sparc/kernel/pcic.c:216:
+		if (where&1) return PCIBIOS_BAD_REGISTER_NUMBER;
 		         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#79: FILE: arch/sparc/kernel/pcic.c:216:
+		if (where&1) return PCIBIOS_BAD_REGISTER_NUMBER;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#83: FILE: arch/sparc/kernel/pcic.c:218:
+		pcic_read_config(bus, devfn, where&~3, 4, &v);
 		                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#84: FILE: arch/sparc/kernel/pcic.c:219:
+		*value = 0xffff & (v >> (8*(where & 3)));
 		                          ^

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#86: FILE: arch/sparc/kernel/pcic.c:221:
+		return PCIBIOS_SUCCESSFUL;
+		break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#92: FILE: arch/sparc/kernel/pcic.c:226:
+	if (busnum != 0) return PCIBIOS_DEVICE_NOT_FOUND;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#101: FILE: arch/sparc/kernel/pcic.c:234:
+	writel(CONFIG_CMD(busnum,devfn,where), pcic->pcic_config_space_addr);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#101: FILE: arch/sparc/kernel/pcic.c:234:
+	writel(CONFIG_CMD(busnum,devfn,where), pcic->pcic_config_space_addr);
 	                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#142: FILE: arch/sparc/kernel/pcic.c:268:
+		pcic_read_config(bus, devfn, where&~3, 4, &v);
 		                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: arch/sparc/kernel/pcic.c:269:
+^I        v = (v & ~(0xff << (8*(where&3)))) |$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#143: FILE: arch/sparc/kernel/pcic.c:269:
+	        v = (v & ~(0xff << (8*(where&3)))) |
 	                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#143: FILE: arch/sparc/kernel/pcic.c:269:
+	        v = (v & ~(0xff << (8*(where&3)))) |
 	                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: arch/sparc/kernel/pcic.c:270:
+^I            ((0xff&(unsigned)value) << (8*(where&3)));$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#144: FILE: arch/sparc/kernel/pcic.c:270:
+	            ((0xff&(unsigned)value) << (8*(where&3)));

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#144: FILE: arch/sparc/kernel/pcic.c:270:
+	            ((0xff&(unsigned)value) << (8*(where&3)));
 	                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#144: FILE: arch/sparc/kernel/pcic.c:270:
+	            ((0xff&(unsigned)value) << (8*(where&3)));
 	                                         ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#144: FILE: arch/sparc/kernel/pcic.c:270:
+	            ((0xff&(unsigned)value) << (8*(where&3)));
 	                                                ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#145: FILE: arch/sparc/kernel/pcic.c:271:
+		return pcic_write_config(bus, devfn, where&~3, 4, v);
 		                                          ^

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#146: FILE: arch/sparc/kernel/pcic.c:272:
+		return pcic_write_config(bus, devfn, where&~3, 4, v);
+		break;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#149: FILE: arch/sparc/kernel/pcic.c:275:
+		if (where&1) return PCIBIOS_BAD_REGISTER_NUMBER;
 		         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#149: FILE: arch/sparc/kernel/pcic.c:275:
+		if (where&1) return PCIBIOS_BAD_REGISTER_NUMBER;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#150: FILE: arch/sparc/kernel/pcic.c:276:
+		pcic_read_config(bus, devfn, where&~3, 4, &v);
 		                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#151: FILE: arch/sparc/kernel/pcic.c:277:
+		v = (v & ~(0xffff << (8*(where&3)))) |
 		                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#151: FILE: arch/sparc/kernel/pcic.c:277:
+		v = (v & ~(0xffff << (8*(where&3)))) |
 		                              ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#152: FILE: arch/sparc/kernel/pcic.c:278:
+		    ((0xffff&(unsigned)value) << (8*(where&3)));

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#152: FILE: arch/sparc/kernel/pcic.c:278:
+		    ((0xffff&(unsigned)value) << (8*(where&3)));
 		            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#152: FILE: arch/sparc/kernel/pcic.c:278:
+		    ((0xffff&(unsigned)value) << (8*(where&3)));
 		                                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#152: FILE: arch/sparc/kernel/pcic.c:278:
+		    ((0xffff&(unsigned)value) << (8*(where&3)));
 		                                          ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#153: FILE: arch/sparc/kernel/pcic.c:279:
+		return pcic_write_config(bus, devfn, where&~3, 4, v);
 		                                          ^

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#154: FILE: arch/sparc/kernel/pcic.c:280:
+		return pcic_write_config(bus, devfn, where&~3, 4, v);
+		break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#160: FILE: arch/sparc/kernel/pcic.c:285:
+	if (busnum != 0) return PCIBIOS_DEVICE_NOT_FOUND;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#165: FILE: arch/sparc/kernel/pcic.c:289:
+	writel(CONFIG_CMD(busnum,devfn,where), pcic->pcic_config_space_addr);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#165: FILE: arch/sparc/kernel/pcic.c:289:
+	writel(CONFIG_CMD(busnum,devfn,where), pcic->pcic_config_space_addr);
 	                              ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000436114.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 6 warnings, 20 checks, 142 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000436114.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
