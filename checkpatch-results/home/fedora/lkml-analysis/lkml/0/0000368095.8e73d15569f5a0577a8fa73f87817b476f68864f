WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
diff -u --recursive --new-file linux-2.5.69/fs/namei.c linux-2.5.69-01-open1/fs/namei.c

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#52: FILE: fs/namei.c:1208:
+int open_namei(const char * pathname, struct opendata *opendata, struct nameidata *nd)
                                                                                    ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#52: FILE: fs/namei.c:1208:
+int open_namei(const char * pathname, struct opendata *opendata, struct nameidata *nd)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#93: FILE: fs/namei.c:1303:
+	error = may_open(nd, opendata->acc_mode, flag);
 	                 ^^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#112: FILE: fs/open.c:606:
+#define ACC_MODE(x) ("\000\004\002\006"[(x)&O_ACCMODE])
                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#134: FILE: fs/open.c:638:
+	error = open_namei(filename, &opendata, &nd);
 	                                         ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#154: FILE: include/linux/fs.h:1139:
+extern int open_namei(const char *, struct opendata *, struct nameidata *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#154: FILE: include/linux/fs.h:1139:
+extern int open_namei(const char *, struct opendata *, struct nameidata *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct opendata *' should also have an identifier name
#154: FILE: include/linux/fs.h:1139:
+extern int open_namei(const char *, struct opendata *, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#154: FILE: include/linux/fs.h:1139:
+extern int open_namei(const char *, struct opendata *, struct nameidata *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#162: FILE: include/linux/open.h:1:
+#ifndef _LINUX_OPEN_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#170: FILE: include/linux/open.h:9:
+#if 0

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct opendata *' should also have an identifier name
#174: FILE: include/linux/open.h:13:
+	void (*destroy)(struct opendata *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#174: FILE: include/linux/open.h:13:
+	void (*destroy)(struct opendata *, void *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000368095.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 11 warnings, 2 checks, 120 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000368095.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
