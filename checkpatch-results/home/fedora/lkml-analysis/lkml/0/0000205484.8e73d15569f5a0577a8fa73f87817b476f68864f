WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
Content-Disposition: attachment; filename=nfsacl-client-side-of-nfsacl-fix3.patch

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#79: FILE: fs/nfs/inode.c:677:
+struct inode_operations nfs3_special_inode_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'rpc_ops->special_inode_ops'
#101: FILE: fs/nfs/inode.c:744:
+				inode->i_op = NFS_SB(sb)->rpc_ops->
+						       special_inode_ops;

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#140: FILE: fs/nfs/dir.c:78:
+struct inode_operations nfs3_dir_inode_operations = {

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#170: FILE: include/linux/nfs_xdr.h:692:
+	struct inode_operations *file_inode_ops;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#172: FILE: include/linux/nfs_xdr.h:694:
+	struct inode_operations *special_inode_ops;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#241: FILE: fs/nfs/file.c:74:
+struct inode_operations nfs3_file_inode_operations = {

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#262: FILE: include/linux/nfs_fs.h:284:
+extern struct inode_operations nfs3_special_inode_operations;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#271: FILE: include/linux/nfs_fs.h:319:
+extern struct inode_operations nfs3_file_inode_operations;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#279: FILE: include/linux/nfs_fs.h:364:
+extern struct inode_operations nfs3_dir_inode_operations;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000205484.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 10 warnings, 0 checks, 175 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000205484.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
