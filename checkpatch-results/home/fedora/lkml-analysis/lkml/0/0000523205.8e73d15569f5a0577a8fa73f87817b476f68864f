Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#11: 
Subject: patch for allowing msdos/vfat nfs exports
                            ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#23: 
to allow msdos/vfat NFS exports.  Since this is totally new code
         ^^^^^

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#64: FILE: fs/fat/inode.c:416:
+static struct dentry *fat_fh_to_dentry(struct super_block *sb, __u32 *data, int len, int fhtype, int parent)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#80: FILE: fs/fat/inode.c:432:
+	for (lp = inode->i_dentry.next; lp != &inode->i_dentry ; lp=lp->next) {
 	                                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: fs/fat/inode.c:433:
+^I        result = list_entry(lp,struct dentry, d_alias);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required after that ',' (ctx:VxV)
#81: FILE: fs/fat/inode.c:433:
+	        result = list_entry(lp,struct dentry, d_alias);
 	                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: fs/fat/inode.c:434:
+^I        if (! (result->d_flags & DCACHE_NFSD_DISCONNECTED)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 25)
#82: FILE: fs/fat/inode.c:434:
+	        if (! (result->d_flags & DCACHE_NFSD_DISCONNECTED)) {
+	                 dget_locked(result);

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#82: FILE: fs/fat/inode.c:434:
+	        if (! (result->d_flags & DCACHE_NFSD_DISCONNECTED)) {
 	            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: fs/fat/inode.c:435:
+^I                 dget_locked(result);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: fs/fat/inode.c:436:
+^I                 result->d_vfs_flags |= DCACHE_REFERENCED;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: fs/fat/inode.c:437:
+^I                 spin_unlock(&dcache_lock);$

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#86: FILE: fs/fat/inode.c:438:
+	                 iput(inode);
 	                 ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: fs/fat/inode.c:438:
+^I                 iput(inode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: fs/fat/inode.c:439:
+^I                 return result;$

WARNING:TABSTOP: Statements should start on a tabstop
#87: FILE: fs/fat/inode.c:439:
+	                 return result;

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: fs/fat/inode.c:440:
+^I         }$

WARNING:TABSTOP: Statements should start on a tabstop
#88: FILE: fs/fat/inode.c:440:
+	         }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#92: FILE: fs/fat/inode.c:444:
+	if (result == NULL) {
+	         iput(inode);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!result"
#92: FILE: fs/fat/inode.c:444:
+	if (result == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#93: FILE: fs/fat/inode.c:445:
+	         iput(inode);
 	         ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: fs/fat/inode.c:445:
+^I         iput(inode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: fs/fat/inode.c:446:
+^I         return ERR_PTR(-ENOMEM);$

WARNING:TABSTOP: Statements should start on a tabstop
#94: FILE: fs/fat/inode.c:446:
+	         return ERR_PTR(-ENOMEM);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#106: FILE: fs/fat/inode.c:458:
+	fh_to_dentry:	fat_fh_to_dentry,
 	            ^

WARNING:INDENTED_LABEL: labels should not be indented
#106: FILE: fs/fat/inode.c:458:
+	fh_to_dentry:	fat_fh_to_dentry,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#107: FILE: fs/fat/inode.c:459:
+	dentry_to_fh:	fat_dentry_to_fh
 	            ^

WARNING:INDENTED_LABEL: labels should not be indented
#107: FILE: fs/fat/inode.c:459:
+	dentry_to_fh:	fat_dentry_to_fh

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000523205.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 12 warnings, 1 checks, 60 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000523205.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
