WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#56: 
diff -pru linux-2.6.5-mm4/fs/proc/generic.c linux-2.6.5-mm4.new/fs/proc/generic.c

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#106: FILE: fs/proc/generic.c:299:
+	if (0 == idr_pre_get(&proc_inum_idr, GFP_KERNEL))

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: fs/proc/inode.c:184:
+struct inode * proc_get_inode(struct super_block * sb, unsigned int ino,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: fs/proc/inode.c:184:
+struct inode * proc_get_inode(struct super_block * sb, unsigned int ino,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: fs/proc/inode.c:185:
+struct inode * proc_get_inode(struct super_block * sb, unsigned int ino,
 				struct proc_dir_entry * de)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#239: FILE: include/linux/proc_fs.h:102:
+extern struct inode * proc_get_inode(struct super_block *, unsigned int, struct proc_dir_entry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#239: FILE: include/linux/proc_fs.h:102:
+extern struct inode * proc_get_inode(struct super_block *, unsigned int, struct proc_dir_entry *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#239: FILE: include/linux/proc_fs.h:102:
+extern struct inode * proc_get_inode(struct super_block *, unsigned int, struct proc_dir_entry *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#239: FILE: include/linux/proc_fs.h:102:
+extern struct inode * proc_get_inode(struct super_block *, unsigned int, struct proc_dir_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct proc_dir_entry *' should also have an identifier name
#239: FILE: include/linux/proc_fs.h:102:
+extern struct inode * proc_get_inode(struct super_block *, unsigned int, struct proc_dir_entry *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288516.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 5 warnings, 2 checks, 164 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288516.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
