WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
diff -uNr linux-2.6.7/drivers/char/Kconfig hvcs_working_linux-2.6.7/drivers/char/Kconfig

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#86: FILE: drivers/char/hvcs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#102: FILE: drivers/char/hvcs.c:17:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#103: FILE: drivers/char/hvcs.c:18:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#162: FILE: drivers/char/hvcs.c:77:
+#include <asm/uaccess.h>

WARNING:REPEATED_WORD: Possible repeated word: 'then'
#182: FILE: drivers/char/hvcs.c:97:
+ * then then quickly closing the connection would cause data loss on the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#199: FILE: drivers/char/hvcs.c:114:
+ * register the tty_driver. This can be overridden using an insmod parameter. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#204: FILE: drivers/char/hvcs.c:119:
+ * vty-server & vty partner connections. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#210: FILE: drivers/char/hvcs.c:125:
+ * to this driver via the hvcs_probe function. */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((__aligned__(8)))
#213: FILE: drivers/char/hvcs.c:128:
+#define __ALIGNED__	__attribute__((__aligned__(8)))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#219: FILE: drivers/char/hvcs.c:134:
+ * should be moved into an architecture specific area. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#223: FILE: drivers/char/hvcs.c:138:
+ * once in a chunk as a sanity check. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#228: FILE: drivers/char/hvcs.c:143:
+ * and forth with the console drivers. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#239: FILE: drivers/char/hvcs.c:154:
+ * the value of the integer passed in. */

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#246: FILE: drivers/char/hvcs.c:161:
+char hvcs_driver_string[]
+	= "IBM hvcs (Hypervisor Virtual Console Server) Driver";

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#249: FILE: drivers/char/hvcs.c:164:
+static int hvcs_rescan_status = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#258: FILE: drivers/char/hvcs.c:173:
+ * incrementally higher /dev/hvcs* entry than the last exposed vty-server. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#262: FILE: drivers/char/hvcs.c:177:
+ * kernel_thread is already awake. */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#263: FILE: drivers/char/hvcs.c:178:
+static int hvcs_kicked = 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#271: FILE: drivers/char/hvcs.c:186:
+ * partner info. */

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#278: FILE: drivers/char/hvcs.c:193:
+	spinlock_t lock;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#281: FILE: drivers/char/hvcs.c:196:
+	 * specific tty index. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#288: FILE: drivers/char/hvcs.c:203:
+	 * place upon this hvcs_struct instance. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#296: FILE: drivers/char/hvcs.c:211:
+	 * [e.g. tab to space conversions in n_tty.c opost()]. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#303: FILE: drivers/char/hvcs.c:218:
+	 * changed from sysfs initiatives. */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'kobj' - possible side-effects?
#314: FILE: drivers/char/hvcs.c:229:
+#define from_kobj(kobj) container_of(kobj, struct hvcs_struct, kobj)

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#334: FILE: drivers/char/hvcs.c:249:
+static int hvcs_enable_device(struct hvcs_struct *hvcsd, uint32_t unit_address, unsigned int irq, struct vio_dev *dev);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#338: FILE: drivers/char/hvcs.c:253:
+static int hvcs_open(struct tty_struct *tty, struct file *filp);
                                                           ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#339: FILE: drivers/char/hvcs.c:254:
+static void hvcs_close(struct tty_struct *tty, struct file *filp);
                                                             ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#340: FILE: drivers/char/hvcs.c:255:
+static void hvcs_hangup(struct tty_struct * tty);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#347: FILE: drivers/char/hvcs.c:262:
+static int __devinit hvcs_probe(struct vio_dev *dev, const struct vio_device_id *id);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#348: FILE: drivers/char/hvcs.c:263:
+static int __devexit hvcs_remove(struct vio_dev *dev);

WARNING:MEMORY_BARRIER: memory barrier without comment
#360: FILE: drivers/char/hvcs.c:275:
+	wmb();

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#387: FILE: drivers/char/hvcs.c:302:
+ * the hvcs_struct will always be valid in this handler. */

ERROR:SPACING: space required before the open parenthesis '('
#409: FILE: drivers/char/hvcs.c:324:
+	if(hvcsd->todo_mask & HVCS_TRY_WRITE) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#412: FILE: drivers/char/hvcs.c:327:
+		sent = hvc_put_chars(unit_address,
+				&hvcsd->buffer[0],

ERROR:SPACING: space prohibited before that close parenthesis ')'
#413: FILE: drivers/char/hvcs.c:328:
+				hvcsd->chars_in_buffer );

ERROR:SPACING: space required before the open parenthesis '('
#414: FILE: drivers/char/hvcs.c:329:
+		if(sent > 0) {

WARNING:MEMORY_BARRIER: memory barrier without comment
#416: FILE: drivers/char/hvcs.c:331:
+			wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#418: FILE: drivers/char/hvcs.c:333:
+			wmb();

WARNING:TYPO_SPELLING: 'commited' may be misspelled - perhaps 'committed'?
#422: FILE: drivers/char/hvcs.c:337:
+			 * we commited to delivering it.  But don't try to wake
 			      ^^^^^^^^

WARNING:TYPO_SPELLING: 'non-existant' may be misspelled - perhaps 'non-existent'?
#423: FILE: drivers/char/hvcs.c:338:
+			 * a non-existant tty. */
 			     ^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#423: FILE: drivers/char/hvcs.c:338:
+			 * a non-existant tty. */

ERROR:SPACING: space required before the open parenthesis '('
#424: FILE: drivers/char/hvcs.c:339:
+			if(tty) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#426: FILE: drivers/char/hvcs.c:341:
+				if ((tty->flags & (1 << TTY_DO_WRITE_WAKEUP))
+						&& tty->ldisc.write_wakeup)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (tty->ldisc.write_wakeup)
#427: FILE: drivers/char/hvcs.c:342:
+					(tty->ldisc.write_wakeup) (tty);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#450: FILE: drivers/char/hvcs.c:365:
+	if(!tty || test_bit(TTY_THROTTLED, &tty->flags)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#450: FILE: drivers/char/hvcs.c:365:
+	if(!tty || test_bit(TTY_THROTTLED, &tty->flags)) {
[...]
+	} else if (!(hvcsd->todo_mask & (HVCS_READ_MASK)))
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#461: FILE: drivers/char/hvcs.c:376:
+		got = hvc_get_chars(unit_address,
+				&buf[0],

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#463: FILE: drivers/char/hvcs.c:378:
+		for (i=0;got && i<got;i++)
 		      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#463: FILE: drivers/char/hvcs.c:378:
+		for (i=0;got && i<got;i++)
 		        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#463: FILE: drivers/char/hvcs.c:378:
+		for (i=0;got && i<got;i++)
 		                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#463: FILE: drivers/char/hvcs.c:378:
+		for (i=0;got && i<got;i++)
 		                     ^

ERROR:SPACING: space required before the open brace '{'
#477: FILE: drivers/char/hvcs.c:392:
+	if (!got){

WARNING:LINE_SPACING: Missing a blank line after declarations
#504: FILE: drivers/char/hvcs.c:419:
+		wait_queue_t wait = __WAITQUEUE_INITIALIZER(wait, current);
+		hvcs_todo_mask = 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#506: FILE: drivers/char/hvcs.c:421:
+		wmb();

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#514: FILE: drivers/char/hvcs.c:429:
+		 * thread again for those that want the write. */

WARNING:TABSTOP: Statements should start on a tabstop
#515: FILE: drivers/char/hvcs.c:430:
+		 if (hvcs_todo_mask & (HVCS_TRY_WRITE | HVCS_QUICK_READ)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#516: FILE: drivers/char/hvcs.c:431:
+^I^I^Iyield();                 $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#516: FILE: drivers/char/hvcs.c:431:
+			yield();                 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#529: FILE: drivers/char/hvcs.c:444:
+	complete_and_exit(&hvcs_exited,0);
 	                              ^

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#532: FILE: drivers/char/hvcs.c:447:
+static struct vio_device_id hvcs_driver_table[] __devinitdata= {

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#532: FILE: drivers/char/hvcs.c:447:
+static struct vio_device_id hvcs_driver_table[] __devinitdata= {
                                                              ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hvcsd->next
#548: FILE: drivers/char/hvcs.c:463:
+	list_del(&(hvcsd->next));

ERROR:SPACING: space required before the open parenthesis '('
#550: FILE: drivers/char/hvcs.c:465:
+	if(hvcsd->connected == 1) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#552: FILE: drivers/char/hvcs.c:467:
+		printk(KERN_INFO "HVCS: Closed vty-server@%X and"

WARNING:SPLIT_STRING: quoted string split across lines
#553: FILE: drivers/char/hvcs.c:468:
+		printk(KERN_INFO "HVCS: Closed vty-server@%X and"
+				" partner vty@%X:%d connection.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#558: FILE: drivers/char/hvcs.c:473:
+	printk(KERN_INFO "HVCS: Destroyed hvcs_struct for vty-server@%X.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#559: FILE: drivers/char/hvcs.c:474:
+	printk(KERN_INFO "HVCS: Destroyed hvcs_struct for vty-server@%X.\n",
+			hvcsd->vdev->unit_address);

ERROR:SPACING: space required before the open parenthesis '('
#584: FILE: drivers/char/hvcs.c:499:
+	if(hvcsd->tty) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#601: FILE: drivers/char/hvcs.c:516:
+static int __devinit hvcs_probe(

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#601: FILE: drivers/char/hvcs.c:516:
+static int __devinit hvcs_probe(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#608: FILE: drivers/char/hvcs.c:523:
+		printk(KERN_ERR "HVCS: probed with invalid parameter.\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#613: FILE: drivers/char/hvcs.c:528:
+	if (!hvcsd) {
+		return -ENODEV;
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#635: FILE: drivers/char/hvcs.c:550:
+	 * first time. */

ERROR:SPACING: space required before the open parenthesis '('
#636: FILE: drivers/char/hvcs.c:551:
+	if(hvcs_get_pi(hvcsd)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#637: FILE: drivers/char/hvcs.c:552:
+		printk(KERN_ERR "HVCS: Failed to fetch partner"

WARNING:SPLIT_STRING: quoted string split across lines
#638: FILE: drivers/char/hvcs.c:553:
+		printk(KERN_ERR "HVCS: Failed to fetch partner"
+			" info for vty-server@%X on device probe.\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#644: FILE: drivers/char/hvcs.c:559:
+	 * will get -ENODEV. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hvcsd->next
#646: FILE: drivers/char/hvcs.c:561:
+	list_add_tail(&(hvcsd->next), &hvcs_structs);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#650: FILE: drivers/char/hvcs.c:565:
+	printk(KERN_INFO "HVCS: Added vty-server@%X.\n", dev->unit_address);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#653: FILE: drivers/char/hvcs.c:568:
+	 * data. */

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#657: FILE: drivers/char/hvcs.c:572:
+static int __devexit hvcs_remove(struct vio_dev *dev)

WARNING:TYPO_SPELLING: 'interrups' may be misspelled - perhaps 'interrupts'?
#667: FILE: drivers/char/hvcs.c:582:
+	/* By this time the vty-server won't be getting any more interrups */
 	                                                         ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#678: FILE: drivers/char/hvcs.c:593:
+	 * would probably be tty_hangup below. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#679: FILE: drivers/char/hvcs.c:594:
+	kobject_put (kobjp);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#683: FILE: drivers/char/hvcs.c:598:
+	 * simultaneous tty close already cleaned up the hvcs_struct. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#687: FILE: drivers/char/hvcs.c:602:
+	printk(KERN_INFO "HVCS: vty-server@%X removed from the"

WARNING:SPLIT_STRING: quoted string split across lines
#688: FILE: drivers/char/hvcs.c:603:
+	printk(KERN_INFO "HVCS: vty-server@%X removed from the"
+			" vio bus.\n", dev->unit_address);

ERROR:SPACING: space required before the open parenthesis '('
#707: FILE: drivers/char/hvcs.c:622:
+	if(clclength > CLC_LENGTH - 1)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#712: FILE: drivers/char/hvcs.c:627:
+	strncpy(&hvcsd->p_location_code[0],
+			&pi->location_code[0], clclength + 1);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#725: FILE: drivers/char/hvcs.c:640:
+ * This function must be called with the hvcsd->lock held */

ERROR:SPACING: space required before the open parenthesis '('
#736: FILE: drivers/char/hvcs.c:651:
+	if(!hvcs_pi_buff) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#742: FILE: drivers/char/hvcs.c:657:
+		printk(KERN_ERR "HVCS: Failed to fetch partner"

ERROR:SPACING: space required after that ',' (ctx:VxV)
#743: FILE: drivers/char/hvcs.c:658:
+			" info for vty-server@%x.\n",unit_address);
 			                            ^

WARNING:SPLIT_STRING: quoted string split across lines
#743: FILE: drivers/char/hvcs.c:658:
+		printk(KERN_ERR "HVCS: Failed to fetch partner"
+			" info for vty-server@%x.\n",unit_address);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#754: FILE: drivers/char/hvcs.c:669:
+		hvcs_set_pi(pi,hvcsd);
 		              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#777: FILE: drivers/char/hvcs.c:692:
+ * multiple partners support is added. called with spinlock held */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!hvcsd->p_unit_address'
#780: FILE: drivers/char/hvcs.c:695:
+	if ((!hvcsd->p_unit_address) || (!hvcsd->p_partition_ID))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!hvcsd->p_partition_ID'
#780: FILE: drivers/char/hvcs.c:695:
+	if ((!hvcsd->p_unit_address) || (!hvcsd->p_partition_ID))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#788: FILE: drivers/char/hvcs.c:703:
+ * This function must be called with the hvcsd->lock held */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#798: FILE: drivers/char/hvcs.c:713:
+	 * of this bizarre code. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#800: FILE: drivers/char/hvcs.c:715:
+	retval = hvcs_register_connection(unit_address,
+			hvcsd->p_partition_ID,

CHECK:BRACES: braces {} should be used on all arms of this statement
#802: FILE: drivers/char/hvcs.c:717:
+	if (!retval) {
[...]
+	} else if (retval != -EINVAL)
[...]

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#809: FILE: drivers/char/hvcs.c:724:
+	 * first connection attempt. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#817: FILE: drivers/char/hvcs.c:732:
+	retval = hvcs_register_connection(unit_address,
+			hvcsd->p_partition_ID,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#827: FILE: drivers/char/hvcs.c:742:
+	 * tell. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#828: FILE: drivers/char/hvcs.c:743:
+	printk(KERN_INFO "HVCS: vty-server or partner"

WARNING:SPLIT_STRING: quoted string split across lines
#829: FILE: drivers/char/hvcs.c:744:
+	printk(KERN_INFO "HVCS: vty-server or partner"
+			" vty is busy.  Try again later.\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#837: FILE: drivers/char/hvcs.c:752:
+	int retval;
+	do {

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#844: FILE: drivers/char/hvcs.c:759:
+static int hvcs_enable_device(struct hvcs_struct *hvcsd, uint32_t unit_address, unsigned int irq, struct vio_dev *vdev)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#849: FILE: drivers/char/hvcs.c:764:
+	 * the conn was registered and now. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#851: FILE: drivers/char/hvcs.c:766:
+	if (!request_irq(irq, &hvcs_handle_interrupt,
+				SA_INTERRUPT, "ibmhvcs", hvcsd)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#853: FILE: drivers/char/hvcs.c:768:
+		 * requested but before we have time to enable interrupts. */

CHECK:BRACES: braces {} should be used on all arms of this statement
#854: FILE: drivers/char/hvcs.c:769:
+		if (vio_enable_interrupts(vdev) == H_Success)
[...]
+		else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#856: FILE: drivers/char/hvcs.c:771:
+			return 0;
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#856: FILE: drivers/char/hvcs.c:771:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#857: FILE: drivers/char/hvcs.c:772:
+			printk(KERN_ERR "HVCS: int enable failed for"

WARNING:SPLIT_STRING: quoted string split across lines
#858: FILE: drivers/char/hvcs.c:773:
+			printk(KERN_ERR "HVCS: int enable failed for"
+					" vty-server@%X.\n", unit_address);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#859: FILE: drivers/char/hvcs.c:774:
+			free_irq(irq,hvcsd);
 			            ^

CHECK:BRACES: Unbalanced braces around else statement
#861: FILE: drivers/char/hvcs.c:776:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#862: FILE: drivers/char/hvcs.c:777:
+		printk(KERN_ERR "HVCS: irq req failed for"

WARNING:SPLIT_STRING: quoted string split across lines
#863: FILE: drivers/char/hvcs.c:778:
+		printk(KERN_ERR "HVCS: irq req failed for"
+				" vty-server@%X.\n", unit_address);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#871: FILE: drivers/char/hvcs.c:786:
+
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#874: FILE: drivers/char/hvcs.c:789:
+ * Please remember to dec when you are done with the instance. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#900: FILE: drivers/char/hvcs.c:815:
+ * /dev node. */

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#901: FILE: drivers/char/hvcs.c:816:
+static int hvcs_open(struct tty_struct *tty, struct file *filp)
                                                           ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#915: FILE: drivers/char/hvcs.c:830:
+	if (!(hvcsd = hvcs_get_by_index(tty->index))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#916: FILE: drivers/char/hvcs.c:831:
+		printk(KERN_WARNING "HVCS: open failed, no index.\n");

ERROR:SPACING: space required before the open parenthesis '('
#922: FILE: drivers/char/hvcs.c:837:
+	if(hvcsd->connected == 0)

ERROR:SPACING: space required before the open parenthesis '('
#923: FILE: drivers/char/hvcs.c:838:
+		if((retval = hvcs_partner_connect(hvcsd)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#923: FILE: drivers/char/hvcs.c:838:
+		if((retval = hvcs_partner_connect(hvcsd)))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#934: FILE: drivers/char/hvcs.c:849:
+	 * loss.*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#940: FILE: drivers/char/hvcs.c:855:
+	 * outside of the spinlock. */

WARNING:TYPO_SPELLING: 'spinlcok' may be misspelled - perhaps 'spinlock'?
#949: FILE: drivers/char/hvcs.c:864:
+	 * and will grab the spinlcok and free the connection if it fails */
 	                     ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#949: FILE: drivers/char/hvcs.c:864:
+	 * and will grab the spinlcok and free the connection if it fails */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#950: FILE: drivers/char/hvcs.c:865:
+	if((hvcs_enable_device(hvcsd,unit_address,irq,vdev))) {
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#950: FILE: drivers/char/hvcs.c:865:
+	if((hvcs_enable_device(hvcsd,unit_address,irq,vdev))) {
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#950: FILE: drivers/char/hvcs.c:865:
+	if((hvcs_enable_device(hvcsd,unit_address,irq,vdev))) {
 	                                             ^

ERROR:SPACING: space required before the open parenthesis '('
#950: FILE: drivers/char/hvcs.c:865:
+	if((hvcs_enable_device(hvcsd,unit_address,irq,vdev))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#952: FILE: drivers/char/hvcs.c:867:
+		printk(KERN_WARNING "HVCS: enable device failed.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#964: FILE: drivers/char/hvcs.c:879:
+		printk(KERN_ERR "HVCS: Kobject of open"

WARNING:SPLIT_STRING: quoted string split across lines
#965: FILE: drivers/char/hvcs.c:880:
+		printk(KERN_ERR "HVCS: Kobject of open"
+			" hvcs doesn't exist.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#976: FILE: drivers/char/hvcs.c:891:
+	printk(KERN_INFO "HVCS: vty-server@%X opened.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#977: FILE: drivers/char/hvcs.c:892:
+	printk(KERN_INFO "HVCS: vty-server@%X opened.\n",
+		hvcsd->vdev->unit_address );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#977: FILE: drivers/char/hvcs.c:892:
+		hvcsd->vdev->unit_address );

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#985: FILE: drivers/char/hvcs.c:900:
+	printk(KERN_WARNING "HVCS: HVCS partner connect failed.\n");

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#989: FILE: drivers/char/hvcs.c:904:
+static void hvcs_close(struct tty_struct *tty, struct file *filp)
                                                             ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#995: FILE: drivers/char/hvcs.c:910:
+	 * we have hung up?  If so tty->driver_data wouldn't be valid.  */

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#996: FILE: drivers/char/hvcs.c:911:
+	if (tty_hung_up_p(filp))
 	                  ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1001: FILE: drivers/char/hvcs.c:916:
+	 * exit cleanly. */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1009: FILE: drivers/char/hvcs.c:924:
+	if (--hvcsd->open_count == 0) {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1012: FILE: drivers/char/hvcs.c:927:
+		 * called.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1017: FILE: drivers/char/hvcs.c:932:
+		 * to deliver any pending I/O to the hypervisor. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1021: FILE: drivers/char/hvcs.c:936:
+		 * delivered. */

ERROR:SPACING: space required before the open parenthesis '('
#1023: FILE: drivers/char/hvcs.c:938:
+		while(hvcsd->chars_in_buffer) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1029: FILE: drivers/char/hvcs.c:944:
+			 * */

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#1030: FILE: drivers/char/hvcs.c:945:
+			yield();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1037: FILE: drivers/char/hvcs.c:952:
+		printk(KERN_ERR "HVCS: vty-server@%X open_count: %d"

WARNING:TYPO_SPELLING: 'missmanaged' may be misspelled - perhaps 'mismanaged'?
#1038: FILE: drivers/char/hvcs.c:953:
+				" is missmanaged.\n",
 				     ^^^^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1038: FILE: drivers/char/hvcs.c:953:
+		printk(KERN_ERR "HVCS: vty-server@%X open_count: %d"
+				" is missmanaged.\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1048: FILE: drivers/char/hvcs.c:963:
+static void hvcs_hangup(struct tty_struct * tty)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1073: FILE: drivers/char/hvcs.c:988:
+	 * non-console device. */

ERROR:SPACING: space required before the open parenthesis '('
#1074: FILE: drivers/char/hvcs.c:989:
+	while(temp_open_count) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1078: FILE: drivers/char/hvcs.c:993:
+		 * final put will never happen. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1087: FILE: drivers/char/hvcs.c:1002:
+ * terminates our device. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1099: FILE: drivers/char/hvcs.c:1014:
+	 * attempt this even if there is no connected device. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1105: FILE: drivers/char/hvcs.c:1020:
+		printk(KERN_WARNING "HVCS write: count being truncated to"

WARNING:SPLIT_STRING: quoted string split across lines
#1106: FILE: drivers/char/hvcs.c:1021:
+		printk(KERN_WARNING "HVCS write: count being truncated to"
+				" HVCS_MAX_FROM_USER.\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#1110: FILE: drivers/char/hvcs.c:1025:
+	if (!from_user)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1112: FILE: drivers/char/hvcs.c:1027:
+	else {

ERROR:SPACING: space required before the open parenthesis '('
#1114: FILE: drivers/char/hvcs.c:1029:
+		if(!charbuf) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1115: FILE: drivers/char/hvcs.c:1030:
+			printk(KERN_WARNING "HVCS: write -ENOMEM.\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1115: FILE: drivers/char/hvcs.c:1030:
+		if(!charbuf) {
+			printk(KERN_WARNING "HVCS: write -ENOMEM.\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1119: FILE: drivers/char/hvcs.c:1034:
+		if(copy_from_user(charbuf,buf,count)) {
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1119: FILE: drivers/char/hvcs.c:1034:
+		if(copy_from_user(charbuf,buf,count)) {
 		                             ^

ERROR:SPACING: space required before the open parenthesis '('
#1119: FILE: drivers/char/hvcs.c:1034:
+		if(copy_from_user(charbuf,buf,count)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1121: FILE: drivers/char/hvcs.c:1036:
+			printk(KERN_WARNING "HVCS: write -EFAULT.\n");

WARNING:TYPO_SPELLING: 'succedded' may be misspelled - perhaps 'succeeded'?
#1128: FILE: drivers/char/hvcs.c:1043:
+	/* Somehow an open succedded but the device was removed or the
 	                   ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1131: FILE: drivers/char/hvcs.c:1046:
+	 * but we want to keep it all in the spinlock. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1144: FILE: drivers/char/hvcs.c:1059:
+		 * hvcs_write() didn't succeed and the buffer was filled up. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1149: FILE: drivers/char/hvcs.c:1064:
+		memcpy(&hvcsd->buffer[hvcsd->chars_in_buffer],
+				&charbuf[total_sent],

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1157: FILE: drivers/char/hvcs.c:1072:
+		 * just add to the buffer.*/

ERROR:SPACING: space required before the open parenthesis '('
#1158: FILE: drivers/char/hvcs.c:1073:
+		if(!(hvcsd->todo_mask & HVCS_TRY_WRITE))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1161: FILE: drivers/char/hvcs.c:1076:
+			result = hvc_put_chars(unit_address,
+					&hvcsd->buffer[0],

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1166: FILE: drivers/char/hvcs.c:1081:
+		 * hypervisor actually took it because we have it buffered.*/

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#1167: FILE: drivers/char/hvcs.c:1082:
+		total_sent+=tosend;
 		          ^

ERROR:SPACING: spaces required around that '-=' (ctx:VxV)
#1168: FILE: drivers/char/hvcs.c:1083:
+		count-=tosend;
 		     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1177: FILE: drivers/char/hvcs.c:1092:
+		 * deadlock our writes if hvc_put_chars fails. */

WARNING:TYPO_SPELLING: 'guarentee' may be misspelled - perhaps 'guarantee'?
#1192: FILE: drivers/char/hvcs.c:1107:
+/* This is really asking how much can we guarentee that we can send or that we
                                          ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1194: FILE: drivers/char/hvcs.c:1109:
+ * return value, hence the reason for hvcs_struct buffering. */

WARNING:CONST_STRUCT: struct tty_operations should normally be const
#1222: FILE: drivers/char/hvcs.c:1137:
+static struct tty_operations hvcs_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1238: FILE: drivers/char/hvcs.c:1153:
+	printk(KERN_INFO "Initializing %s\n", hvcs_driver_string);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1241: FILE: drivers/char/hvcs.c:1156:
+	if( hvcs_parm_num_devs <= 0 ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hvcs_parm_num_devs > HVCS_MAX_SERVER_ADAPTERS'
#1241: FILE: drivers/char/hvcs.c:1156:
+	if( hvcs_parm_num_devs <= 0 ||
+		(hvcs_parm_num_devs > HVCS_MAX_SERVER_ADAPTERS)) {

ERROR:SPACING: space required before the open parenthesis '('
#1241: FILE: drivers/char/hvcs.c:1156:
+	if( hvcs_parm_num_devs <= 0 ||

CHECK:BRACES: braces {} should be used on all arms of this statement
#1241: FILE: drivers/char/hvcs.c:1156:
+	if( hvcs_parm_num_devs <= 0 ||
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1242: FILE: drivers/char/hvcs.c:1157:
+	if( hvcs_parm_num_devs <= 0 ||
+		(hvcs_parm_num_devs > HVCS_MAX_SERVER_ADAPTERS)) {

CHECK:BRACES: Unbalanced braces around else statement
#1244: FILE: drivers/char/hvcs.c:1159:
+	} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1259: FILE: drivers/char/hvcs.c:1174:
+	 * it blank  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1266: FILE: drivers/char/hvcs.c:1181:
+	 * throw us into a horrible recursive echo-echo-echo loop. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1273: FILE: drivers/char/hvcs.c:1188:
+	 * dynamically assigned major and minor numbers for our devices. */

ERROR:SPACING: space required before the open parenthesis '('
#1274: FILE: drivers/char/hvcs.c:1189:
+	if(tty_register_driver(hvcs_tty_driver)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1275: FILE: drivers/char/hvcs.c:1190:
+		printk(KERN_ERR "HVCS: registration "

WARNING:SPLIT_STRING: quoted string split across lines
#1276: FILE: drivers/char/hvcs.c:1191:
+		printk(KERN_ERR "HVCS: registration "
+			" as a tty driver failed.\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1290: FILE: drivers/char/hvcs.c:1205:
+	 * the kobjects won't be initialized properly. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1293: FILE: drivers/char/hvcs.c:1208:
+	printk(KERN_INFO "HVCS: driver module inserted.\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1303: FILE: drivers/char/hvcs.c:1218:
+	 * removal. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1322: FILE: drivers/char/hvcs.c:1237:
+	printk(KERN_INFO "HVCS: driver module removed.\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1332: FILE: drivers/char/hvcs.c:1247:
+}
+/* The sysfs interface for the driver and devices */

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'hvcs_partner_vtys_show' to 'partner_vtys_show'
#1345: FILE: drivers/char/hvcs.c:1260:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1346: FILE: drivers/char/hvcs.c:1261:
+static DEVICE_ATTR(partner_vtys, S_IRUGO, hvcs_partner_vtys_show, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'hvcs_partner_clcs_show' to 'partner_clcs_show'
#1359: FILE: drivers/char/hvcs.c:1274:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1360: FILE: drivers/char/hvcs.c:1275:
+static DEVICE_ATTR(partner_clcs, S_IRUGO, hvcs_partner_clcs_show, NULL);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1362: FILE: drivers/char/hvcs.c:1277:
+static ssize_t hvcs_current_vty_store(struct device *dev, const char * buf, size_t count)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1365: FILE: drivers/char/hvcs.c:1280:
+	 * yet support multiple partners. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1366: FILE: drivers/char/hvcs.c:1281:
+	printk(KERN_INFO "HVCS: Denied current_vty change: -EPERM.\n");

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'hvcs_current_vty_show' to 'current_vty_show' 'hvcs_current_vty_store' to 'current_vty_store'
#1383: FILE: drivers/char/hvcs.c:1298:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1386: FILE: drivers/char/hvcs.c:1301:
+	S_IRUGO | S_IWUSR, hvcs_current_vty_show, hvcs_current_vty_store);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1395: FILE: drivers/char/hvcs.c:1310:
+	if (simple_strtol(buf,NULL,0) != 0)
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1395: FILE: drivers/char/hvcs.c:1310:
+	if (simple_strtol(buf,NULL,0) != 0)
 	                          ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1395: FILE: drivers/char/hvcs.c:1310:
+	if (simple_strtol(buf,NULL,0) != 0)

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:SPACING: space required before the open parenthesis '('
#1400: FILE: drivers/char/hvcs.c:1315:
+	if(hvcsd->open_count > 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1402: FILE: drivers/char/hvcs.c:1317:
+		printk(KERN_INFO "HVCS: vterm state unchanged.  "

WARNING:SPLIT_STRING: quoted string split across lines
#1403: FILE: drivers/char/hvcs.c:1318:
+		printk(KERN_INFO "HVCS: vterm state unchanged.  "
+				"The hvcs device node is still in use.\n");

ERROR:SPACING: space required before the open parenthesis '('
#1407: FILE: drivers/char/hvcs.c:1322:
+	if(hvcsd->connected == 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1409: FILE: drivers/char/hvcs.c:1324:
+		printk(KERN_INFO "HVCS: vterm state unchanged. The"

WARNING:SPLIT_STRING: quoted string split across lines
#1410: FILE: drivers/char/hvcs.c:1325:
+		printk(KERN_INFO "HVCS: vterm state unchanged. The"
+				" vty-server is not connected to a vty.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1415: FILE: drivers/char/hvcs.c:1330:
+	printk(KERN_INFO "HVCS: Closed vty-server@%X and"

WARNING:SPLIT_STRING: quoted string split across lines
#1416: FILE: drivers/char/hvcs.c:1331:
+	printk(KERN_INFO "HVCS: Closed vty-server@%X and"
+			" partner vty@%X:%d connection.\n",

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'hvcs_vterm_state_show' to 'vterm_state_show' 'hvcs_vterm_state_store' to 'vterm_state_store'
#1437: FILE: drivers/char/hvcs.c:1352:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1438: FILE: drivers/char/hvcs.c:1353:
+static DEVICE_ATTR(vterm_state, S_IRUGO | S_IWUSR, hvcs_vterm_state_show, hvcs_vterm_state_store);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1455: FILE: drivers/char/hvcs.c:1370:
+	struct vio_dev *vdev = hvcsd->vdev;
+	sysfs_create_group(&vdev->dev.kobj, &hvcs_attr_group);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1469: FILE: drivers/char/hvcs.c:1384:
+static ssize_t hvcs_rescan_store(struct device_driver *ddp, const char * buf, size_t count)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1471: FILE: drivers/char/hvcs.c:1386:
+	if ((simple_strtol(buf,NULL,0) != 1)
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1471: FILE: drivers/char/hvcs.c:1386:
+	if ((simple_strtol(buf,NULL,0) != 1)
 	                           ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hvcs_rescan_status != 0'
#1471: FILE: drivers/char/hvcs.c:1386:
+	if ((simple_strtol(buf,NULL,0) != 1)
+		&& (hvcs_rescan_status != 0))

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1471: FILE: drivers/char/hvcs.c:1386:
+	if ((simple_strtol(buf,NULL,0) != 1)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1472: FILE: drivers/char/hvcs.c:1387:
+	if ((simple_strtol(buf,NULL,0) != 1)
+		&& (hvcs_rescan_status != 0))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1476: FILE: drivers/char/hvcs.c:1391:
+	printk(KERN_INFO "HVCS: rescanning partner info for all"

WARNING:SPLIT_STRING: quoted string split across lines
#1477: FILE: drivers/char/hvcs.c:1392:
+	printk(KERN_INFO "HVCS: rescanning partner info for all"
+		" vty-servers.\n");

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1483: FILE: drivers/char/hvcs.c:1398:
+	S_IRUGO | S_IWUSR, hvcs_rescan_show, hvcs_rescan_store);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hvcs_vio_driver.driver
#1487: FILE: drivers/char/hvcs.c:1402:
+	struct device_driver *driverfs = &(hvcs_vio_driver.driver);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1488: FILE: drivers/char/hvcs.c:1403:
+	struct device_driver *driverfs = &(hvcs_vio_driver.driver);
+	driver_create_file(driverfs, &driver_attr_rescan);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hvcs_vio_driver.driver
#1493: FILE: drivers/char/hvcs.c:1408:
+	struct device_driver *driverfs = &(hvcs_vio_driver.driver);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1494: FILE: drivers/char/hvcs.c:1409:
+	struct device_driver *driverfs = &(hvcs_vio_driver.driver);
+	driver_remove_file(driverfs, &driver_attr_rescan);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1522: FILE: include/asm-ppc64/hvconsole.h:45:
+extern int hvcs_free_partner_info(struct list_head *head);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1523: FILE: include/asm-ppc64/hvconsole.h:46:
+extern int hvcs_get_partner_info(unsigned int unit_address, struct list_head *head, unsigned long *pi_buff);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1523: FILE: include/asm-ppc64/hvconsole.h:46:
+extern int hvcs_get_partner_info(unsigned int unit_address, struct list_head *head, unsigned long *pi_buff);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#1524: FILE: include/asm-ppc64/hvconsole.h:47:
+extern int hvcs_register_connection(unsigned int unit_address, unsigned int p_partition_ID, unsigned int p_unit_address);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1524: FILE: include/asm-ppc64/hvconsole.h:47:
+extern int hvcs_register_connection(unsigned int unit_address, unsigned int p_partition_ID, unsigned int p_unit_address);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1525: FILE: include/asm-ppc64/hvconsole.h:48:
+extern int hvcs_free_connection(unsigned int unit_address);

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#1540: FILE: arch/ppc64/kernel/hvconsole.c:28:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1550: FILE: arch/ppc64/kernel/hvconsole.c:58:
+EXPORT_SYMBOL(hvc_get_chars);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1563: FILE: arch/ppc64/kernel/hvconsole.c:74:
+EXPORT_SYMBOL(hvc_put_chars);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1575: FILE: arch/ppc64/kernel/hvconsole.c:101:
+ * issue. */

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1578: FILE: arch/ppc64/kernel/hvconsole.c:104:
+	switch (to_convert) {
+		case H_Success:
[...]
+		case H_Parameter:
[...]
+		case H_Hardware:
[...]
+		case H_Busy:
+		case H_LongBusyOrder1msec:
+		case H_LongBusyOrder10msec:
+		case H_LongBusyOrder100msec:
+		case H_LongBusyOrder1sec:
+		case H_LongBusyOrder10sec:
+		case H_LongBusyOrder100sec:
[...]
+		case H_Function: /* fall through */
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1593: FILE: arch/ppc64/kernel/hvconsole.c:119:
+		case H_Function: /* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:SPACING: space required before the open parenthesis '('
#1604: FILE: arch/ppc64/kernel/hvconsole.c:130:
+	if(!head) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1604: FILE: arch/ppc64/kernel/hvconsole.c:130:
+	if(!head) {
+		return -EINVAL;
+	}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1610: FILE: arch/ppc64/kernel/hvconsole.c:136:
+		pi = list_entry(element,struct hvcs_partner_info,node);
 		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1610: FILE: arch/ppc64/kernel/hvconsole.c:136:
+		pi = list_entry(element,struct hvcs_partner_info,node);
 		                                                ^

WARNING:LONG_LINE: line length of 142 exceeds 100 columns
#1620: FILE: arch/ppc64/kernel/hvconsole.c:146:
+int hvcs_next_partner(unsigned int unit_address, unsigned long last_p_partition_ID, unsigned long last_p_unit_address, unsigned long *pi_buff)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1624: FILE: arch/ppc64/kernel/hvconsole.c:150:
+	long retval;
+	retval = plpar_hcall_norets(H_VTERM_PARTNER_INFO, unit_address,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1625: FILE: arch/ppc64/kernel/hvconsole.c:151:
+	retval = plpar_hcall_norets(H_VTERM_PARTNER_INFO, unit_address,
+			last_p_partition_ID,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1645: FILE: arch/ppc64/kernel/hvconsole.c:171:
+	 * long, hence the casting mumbojumbo you see later. */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1652: FILE: arch/ppc64/kernel/hvconsole.c:178:
+	memset(pi_buff,0x00,PAGE_SIZE);
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1652: FILE: arch/ppc64/kernel/hvconsole.c:178:
+	memset(pi_buff,0x00,PAGE_SIZE);
 	                   ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1657: FILE: arch/ppc64/kernel/hvconsole.c:183:
+	last_p_partition_ID = last_p_unit_address = HVCS_LONG_INVALID;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required before the open parenthesis '('
#1660: FILE: arch/ppc64/kernel/hvconsole.c:186:
+	if(!pi_buff)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1665: FILE: arch/ppc64/kernel/hvconsole.c:191:
+		retval = hvcs_next_partner(unit_address, last_p_partition_ID,
+				last_p_unit_address, pi_buff);

ERROR:SPACING: space required before the open parenthesis '('
#1666: FILE: arch/ppc64/kernel/hvconsole.c:192:
+		if(retval) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1668: FILE: arch/ppc64/kernel/hvconsole.c:194:
+			 * any list elements. */

ERROR:SPACING: space required before the open parenthesis '('
#1669: FILE: arch/ppc64/kernel/hvconsole.c:195:
+			if(!list_empty(head))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1679: FILE: arch/ppc64/kernel/hvconsole.c:205:
+		if (last_p_partition_ID == HVCS_LONG_INVALID
+				&& last_p_unit_address == HVCS_LONG_INVALID)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*next_partner_info)...) over kmalloc(sizeof(struct hvcs_partner_info)...)
#1683: FILE: arch/ppc64/kernel/hvconsole.c:209:
+		next_partner_info = kmalloc(sizeof(struct hvcs_partner_info),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1684: FILE: arch/ppc64/kernel/hvconsole.c:210:
+		next_partner_info = kmalloc(sizeof(struct hvcs_partner_info),
+				GFP_ATOMIC);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1687: FILE: arch/ppc64/kernel/hvconsole.c:213:
+			printk(KERN_WARNING "HVCONSOLE: kmalloc() failed to"

WARNING:SPLIT_STRING: quoted string split across lines
#1688: FILE: arch/ppc64/kernel/hvconsole.c:214:
+			printk(KERN_WARNING "HVCONSOLE: kmalloc() failed to"
+				" allocate partner info struct.\n");

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1694: FILE: arch/ppc64/kernel/hvconsole.c:220:
+		next_partner_info->unit_address
+			= (unsigned int)last_p_unit_address;

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1696: FILE: arch/ppc64/kernel/hvconsole.c:222:
+		next_partner_info->partition_ID
+			= (unsigned int)last_p_partition_ID;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around next_partner_info->node
#1703: FILE: arch/ppc64/kernel/hvconsole.c:229:
+		list_add_tail(&(next_partner_info->node), head);

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#1719: FILE: arch/ppc64/kernel/hvconsole.c:245:
+ * -EINVAL may indicate that one of the parms is not valid, for
                                         ^^^^^

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1724: FILE: arch/ppc64/kernel/hvconsole.c:250:
+int hvcs_register_connection( unsigned int unit_address, unsigned int p_partition_ID, unsigned int p_unit_address)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1724: FILE: arch/ppc64/kernel/hvconsole.c:250:
+int hvcs_register_connection( unsigned int unit_address, unsigned int p_partition_ID, unsigned int p_unit_address)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1727: FILE: arch/ppc64/kernel/hvconsole.c:253:
+	long retval;
+	retval = plpar_hcall_norets(H_REGISTER_VTERM, unit_address,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1728: FILE: arch/ppc64/kernel/hvconsole.c:254:
+	retval = plpar_hcall_norets(H_REGISTER_VTERM, unit_address,
+				p_partition_ID, p_unit_address);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1734: FILE: arch/ppc64/kernel/hvconsole.c:260:
+ * until 0 is returned */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1738: FILE: arch/ppc64/kernel/hvconsole.c:264:
+	long retval;
+	retval = plpar_hcall_norets(H_FREE_VTERM, unit_address);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000267904.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 66 errors, 170 warnings, 53 checks, 2187 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000267904.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
