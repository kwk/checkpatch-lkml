WARNING:TYPO_SPELLING: 'removeing' may be misspelled - perhaps 'removing'?
#31: 
I didn't include removeing the various arch/div64.h file yet, since I want 
                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
RCS file: /cvsdev/hhl-2.4.17/linux/drivers/acpi/include/platform/aclinux.h,v

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: net/sk98lin/skproc.c:347:
+		tmp[i++] = digits[do_div(&num,base)];
 		                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'lib' exists, appears to be a -p0 patch

ERROR:SPACING: space required after that ',' (ctx:VxV)
#284: FILE: vsprintf.c:168:
+		tmp[i++] = digits[do_div(&num,base)];
 		                             ^

CHECK:SPACING: No space is necessary after a cast
#304: FILE: vsprintf.c:436:
+				num = (signed long long) va_arg(args, long);

CHECK:SPACING: No space is necessary after a cast
#318: FILE: vsprintf.c:445:
+				num = (signed long long) va_arg(args, int);

CHECK:SPACING: No space is necessary after a cast
#325: FILE: vsprintf.c:451:
+				num = (signed long long) va_arg(args, int);

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#338: FILE: linux/div64.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#339: FILE: linux/div64.h:2:
+ * include/linux/div64.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: linux/div64.h:9:
+ * If you really *really* need this, and are prepared to be flamed by $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#357: FILE: linux/div64.h:20:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#368: FILE: linux/div64.h:31:
+static inline int do_div(unsigned long long * n, unsigned long base)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#372: FILE: linux/div64.h:35:
+	unsigned long long t = *n;
+	if ( t == (unsigned long)t ){ /* this should handle 64 bit platforms */

ERROR:SPACING: space required before the open brace '{'
#372: FILE: linux/div64.h:35:
+	if ( t == (unsigned long)t ){ /* this should handle 64 bit platforms */

ERROR:SPACING: space prohibited after that open parenthesis '('
#372: FILE: linux/div64.h:35:
+	if ( t == (unsigned long)t ){ /* this should handle 64 bit platforms */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#372: FILE: linux/div64.h:35:
+	if ( t == (unsigned long)t ){ /* this should handle 64 bit platforms */

CHECK:SPACING: No space is necessary after a cast
#373: FILE: linux/div64.h:36:
+		res = ((unsigned long) t) % base;

CHECK:SPACING: No space is necessary after a cast
#374: FILE: linux/div64.h:37:
+		t = ((unsigned long) t) / base;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: linux/div64.h:39:
+#ifndef USE_SLOW_64BIT_DIVIDES $

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#377: FILE: linux/div64.h:40:
+		switch (base) {
+			case 8:
[...]
+			case 16:
[...]
+			default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#379: FILE: linux/div64.h:42:
+				res = ((unsigned long) t & 0x7);

CHECK:SPACING: No space is necessary after a cast
#383: FILE: linux/div64.h:46:
+				res = ((unsigned long) t & 0xf);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_div', this function's name, in a string
#387: FILE: linux/div64.h:50:
+				panic("do_div called with 64 bit arg and unsupported base\n", base);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: linux/div64.h:58:
+^I^I * vsprintf uses this to divide a 64-bit integer N by a small $

WARNING:LINE_SPACING: Missing a blank line after declarations
#399: FILE: linux/div64.h:62:
+		unsigned long low, low2, high;
+		low  = (t) & 0xffffffff;

CHECK:SPACING: No space is necessary after a cast
#412: FILE: linux/div64.h:75:
+			((long long) high << 32);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#419: FILE: linux/div64.h:82:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000481206.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 16 warnings, 10 checks, 305 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000481206.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
