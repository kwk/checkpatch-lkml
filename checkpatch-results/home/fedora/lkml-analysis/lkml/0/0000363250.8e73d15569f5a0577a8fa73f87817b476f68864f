ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#43: 
--- a/drivers/char/ip2main.c	Wed Jun 11 19:18:27 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#56: FILE: drivers/char/ip2main.c:695:
+				struct pci_dev *pci_dev_i =3D NULL;
 				                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#57: FILE: drivers/char/ip2main.c:696:
+				struct pci_dev *pci_dev_i =3D NULL;
+				pci_dev_i =3D pci_find_device(PCI_VENDOR_ID_COMPUTONE,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#57: FILE: drivers/char/ip2main.c:696:
+				pci_dev_i =3D pci_find_device(PCI_VENDOR_ID_COMPUTONE,
 				          ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#59: FILE: drivers/char/ip2main.c:698:
+				if (pci_dev_i !=3D NULL) {
 				              ^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#62: FILE: drivers/char/ip2main.c:700:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LINE_SPACING: Missing a blank line after declarations
#73: FILE: drivers/char/ip2main.c:701:
+					unsigned char pci_irq;
+					ip2config.type[i] =3D PCI;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#73: FILE: drivers/char/ip2main.c:701:
+					ip2config.type[i] =3D PCI;
 					                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#74: FILE: drivers/char/ip2main.c:702:
+					status =3D
 					       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#76: FILE: drivers/char/ip2main.c:704:
+					if ( addr & 1 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#76: FILE: drivers/char/ip2main.c:704:
+					if ( addr & 1 ) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#76: FILE: drivers/char/ip2main.c:704:
+					if ( addr & 1 ) {
[...]
+					} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#77: FILE: drivers/char/ip2main.c:705:
+						ip2config.addr[i]=3D(USHORT)(addr&0xfffe);
 						                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#77: FILE: drivers/char/ip2main.c:705:
+						ip2config.addr[i]=3D(USHORT)(addr&0xfffe);
 						                                 ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#79: FILE: drivers/char/ip2main.c:707:
+						printk( KERN_ERR "IP2: PCI I/O address error\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#79: FILE: drivers/char/ip2main.c:707:
+						printk( KERN_ERR "IP2: PCI I/O address error\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#79: FILE: drivers/char/ip2main.c:707:
+						printk( KERN_ERR "IP2: PCI I/O address error\n");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#81: FILE: drivers/char/ip2main.c:709:
+					status =3D
 					       ^

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#82: FILE: drivers/char/ip2main.c:710:
+					pci_read_config_byte(pci_dev_i, PCI_INTERRUPT_LINE, &pci_irq);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#101: FILE: drivers/char/ip2main.c:714:
+//						printk( KERN_ERR "IP2: Bad PCI BIOS IRQ(%d)\n",pci_irq);

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#104: FILE: drivers/char/ip2main.c:717:
+					ip2config.irq[i] =3D pci_irq;
 					                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#106: FILE: drivers/char/ip2main.c:719:
+					ip2config.addr[i] =3D 0;
 					                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#107: FILE: drivers/char/ip2main.c:720:
+					if (status =3D=3D PCIBIOS_DEVICE_NOT_FOUND) {
 					           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#107: FILE: drivers/char/ip2main.c:720:
+					if (status =3D=3D PCIBIOS_DEVICE_NOT_FOUND) {
 					              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#107: FILE: drivers/char/ip2main.c:720:
+					if (status =3D=3D PCIBIOS_DEVICE_NOT_FOUND) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#107: FILE: drivers/char/ip2main.c:720:
+					if (status =3D=3D PCIBIOS_DEVICE_NOT_FOUND) {
[...]
+					} else {
[...]

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#108: FILE: drivers/char/ip2main.c:721:
+						printk( KERN_ERR "IP2: PCI board %d not found\n", i );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#108: FILE: drivers/char/ip2main.c:721:
+						printk( KERN_ERR "IP2: PCI board %d not found\n", i );

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#108: FILE: drivers/char/ip2main.c:721:
+						printk( KERN_ERR "IP2: PCI board %d not found\n", i );

ERROR:SPACING: space prohibited after that open parenthesis '('
#108: FILE: drivers/char/ip2main.c:721:
+						printk( KERN_ERR "IP2: PCI board %d not found\n", i );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#108: FILE: drivers/char/ip2main.c:721:
+						printk( KERN_ERR "IP2: PCI board %d not found\n", i );

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#112: FILE: drivers/char/ip2main.c:725:
+				}=20
 				 ^

ERROR:SPACING: space required after that close brace '}'
#112: FILE: drivers/char/ip2main.c:725:
+				}=20

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000363250.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 11 warnings, 1 checks, 79 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000363250.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
