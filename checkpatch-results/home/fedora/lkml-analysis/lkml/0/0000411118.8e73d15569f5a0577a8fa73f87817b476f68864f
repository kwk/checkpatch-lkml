ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#45: 
--- a/fs/sysfs/inode.c	Mon Nov 25 11:28:31 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#51: FILE: fs/sysfs/inode.c:148:
+#define to_subsys(k) container_of(k,struct subsystem,kobj)
                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#51: FILE: fs/sysfs/inode.c:148:
+#define to_subsys(k) container_of(k,struct subsystem,kobj)
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#52: FILE: fs/sysfs/inode.c:149:
+#define to_sattr(a) container_of(a,struct subsys_attribute,attr)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#52: FILE: fs/sysfs/inode.c:149:
+#define to_sattr(a) container_of(a,struct subsys_attribute,attr)
                                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: fs/sysfs/inode.c:153:
+ * These operations allow subsystems to have files that can be $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#57: FILE: fs/sysfs/inode.c:154:
+ * read/written. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#59: FILE: fs/sysfs/inode.c:156:
+ssize_t subsys_attr_show(struct kobject * kobj, struct attribute * attr, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#59: FILE: fs/sysfs/inode.c:156:
+ssize_t subsys_attr_show(struct kobject * kobj, struct attribute * attr, 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#59: FILE: fs/sysfs/inode.c:156:
+ssize_t subsys_attr_show(struct kobject * kobj, struct attribute * attr, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#60: FILE: fs/sysfs/inode.c:157:
+			 char * page, size_t count, loff_t off)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#62: FILE: fs/sysfs/inode.c:159:
+	struct subsystem * s = to_subsys(kobj);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#63: FILE: fs/sysfs/inode.c:160:
+	struct subsys_attribute * sattr = to_sattr(attr);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#67: FILE: fs/sysfs/inode.c:164:
+		ret = sattr->show(s,page,count,off);
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#67: FILE: fs/sysfs/inode.c:164:
+		ret = sattr->show(s,page,count,off);
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#67: FILE: fs/sysfs/inode.c:164:
+		ret = sattr->show(s,page,count,off);
 		                              ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#71: FILE: fs/sysfs/inode.c:168:
+ssize_t subsys_attr_store(struct kobject * kobj, struct attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#71: FILE: fs/sysfs/inode.c:168:
+ssize_t subsys_attr_store(struct kobject * kobj, struct attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#72: FILE: fs/sysfs/inode.c:169:
+			  const char * page, size_t count, loff_t off)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#74: FILE: fs/sysfs/inode.c:171:
+	struct subsystem * s = to_subsys(kobj);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#75: FILE: fs/sysfs/inode.c:172:
+	struct subsys_attribute * sattr = to_sattr(attr);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#79: FILE: fs/sysfs/inode.c:176:
+		ret = sattr->store(s,page,count,off);
 		                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#79: FILE: fs/sysfs/inode.c:176:
+		ret = sattr->store(s,page,count,off);
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#79: FILE: fs/sysfs/inode.c:176:
+		ret = sattr->store(s,page,count,off);
 		                               ^

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#83: FILE: fs/sysfs/inode.c:180:
+static struct sysfs_ops subsys_sysfs_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct subsystem *' should also have an identifier name
#116: FILE: include/linux/kobject.h:65:
+	ssize_t (*show)(struct subsystem *, char *, size_t, loff_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#116: FILE: include/linux/kobject.h:65:
+	ssize_t (*show)(struct subsystem *, char *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#116: FILE: include/linux/kobject.h:65:
+	ssize_t (*show)(struct subsystem *, char *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#116: FILE: include/linux/kobject.h:65:
+	ssize_t (*show)(struct subsystem *, char *, size_t, loff_t);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: include/linux/kobject.h:66:
+^Issize_t (*store)(struct subsystem *, const char *, size_t, loff_t); $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct subsystem *' should also have an identifier name
#117: FILE: include/linux/kobject.h:66:
+	ssize_t (*store)(struct subsystem *, const char *, size_t, loff_t); 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#117: FILE: include/linux/kobject.h:66:
+	ssize_t (*store)(struct subsystem *, const char *, size_t, loff_t); 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#117: FILE: include/linux/kobject.h:66:
+	ssize_t (*store)(struct subsystem *, const char *, size_t, loff_t); 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#117: FILE: include/linux/kobject.h:66:
+	ssize_t (*store)(struct subsystem *, const char *, size_t, loff_t); 

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#120: FILE: include/linux/kobject.h:69:
+extern int subsys_create_file(struct subsystem * , struct subsys_attribute *);
                                                  ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#120: FILE: include/linux/kobject.h:69:
+extern int subsys_create_file(struct subsystem * , struct subsys_attribute *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct subsystem *' should also have an identifier name
#120: FILE: include/linux/kobject.h:69:
+extern int subsys_create_file(struct subsystem * , struct subsys_attribute *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct subsys_attribute *' should also have an identifier name
#120: FILE: include/linux/kobject.h:69:
+extern int subsys_create_file(struct subsystem * , struct subsys_attribute *);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#121: FILE: include/linux/kobject.h:70:
+extern void subsys_remove_file(struct subsystem * , struct subsys_attribute *);
                                                   ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#121: FILE: include/linux/kobject.h:70:
+extern void subsys_remove_file(struct subsystem * , struct subsys_attribute *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct subsystem *' should also have an identifier name
#121: FILE: include/linux/kobject.h:70:
+extern void subsys_remove_file(struct subsystem * , struct subsys_attribute *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct subsys_attribute *' should also have an identifier name
#121: FILE: include/linux/kobject.h:70:
+extern void subsys_remove_file(struct subsystem * , struct subsys_attribute *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#137: FILE: lib/kobject.c:238:
+int subsys_create_file(struct subsystem * s, struct subsys_attribute * a)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#137: FILE: lib/kobject.c:238:
+int subsys_create_file(struct subsystem * s, struct subsys_attribute * a)

WARNING:LINE_SPACING: Missing a blank line after declarations
#140: FILE: lib/kobject.c:241:
+	int error = 0;
+	if (subsys_get(s)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#141: FILE: lib/kobject.c:242:
+		error = sysfs_create_file(&s->kobj,&a->attr);
 		                                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#141: FILE: lib/kobject.c:242:
+		error = sysfs_create_file(&s->kobj,&a->attr);
 		                                   ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#147: FILE: lib/kobject.c:248:
+
+

WARNING:TYPO_SPELLING: 'desciptor' may be misspelled - perhaps 'descriptor'?
#151: FILE: lib/kobject.c:252:
+ *	@a:	attribute desciptor.
   	   	          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#154: FILE: lib/kobject.c:255:
+void subsys_remove_file(struct subsystem * s, struct subsys_attribute * a)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#154: FILE: lib/kobject.c:255:
+void subsys_remove_file(struct subsystem * s, struct subsys_attribute * a)

ERROR:SPACING: space required after that ',' (ctx:VxO)
#157: FILE: lib/kobject.c:258:
+		sysfs_remove_file(&s->kobj,&a->attr);
 		                          ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#157: FILE: lib/kobject.c:258:
+		sysfs_remove_file(&s->kobj,&a->attr);
 		                           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#162: FILE: lib/kobject.c:263:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#171: FILE: lib/kobject.c:274:
+EXPORT_SYMBOL(subsys_remove_file);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000411118.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 35 errors, 16 warnings, 4 checks, 114 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000411118.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
