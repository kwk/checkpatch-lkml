WARNING:TYPO_SPELLING: 'embeded' may be misspelled - perhaps 'embedded'?
#33: 
o New adapter-i2c-rpx for embeded MPC8XX
                          ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#41: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#42: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:2:
+/*
+   -------------------------------------------------------------------------

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#45: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:5:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#51: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:11:
+   Changes made to support the IIC peripheral on the IBM PPC 405 $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#53: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:13:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#58: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:18:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:20:
+                   1998-99 Hans Berglund$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#62: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:22:
+   With some changes from Kyösti Mälkki <kmalkki@cc.hut.fi> and even
                             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#65: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:25:
+
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#77: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:37:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#78: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:38:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:43:
+       ported up to 2.4.16+    $

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:50:
+         add PM hooks$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#94: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:54:
+
+

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#103: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:63:
+#include <asm/io.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:77:
+ */ $

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#129: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:89:
+static int i2c_debug=0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#129: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:89:
+static int i2c_debug=0;
                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#133: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:93:
+
+

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#135: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:95:
+#define DEB(x) if (i2c_debug>=1) x
                             ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#135: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:95:
+#define DEB(x) if (i2c_debug>=1) x

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#136: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:96:
+#define DEB2(x) if (i2c_debug>=2) x
                              ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#136: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:96:
+#define DEB2(x) if (i2c_debug>=2) x

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#137: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:97:
+#define DEB3(x) if (i2c_debug>=3) x
                              ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#137: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:97:
+#define DEB3(x) if (i2c_debug>=3) x

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:112:
+   writeb(val, ctl);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#155: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:115:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:121:
+   int val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:123:
+   val = readb(ctl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:124:
+   return (val);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#164: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:124:
+   return (val);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#167: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:127:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:135:
+   return(((struct iic_ibm *)(data))->iic_own);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#178: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:138:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:144:
+   return(((struct iic_ibm *)(data))->iic_clock);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#187: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:147:
+
+

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#188: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:148:
+#if 0

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:151:
+   schedule_timeout( timeout * HZ);$

ERROR:SPACING: space prohibited after that open parenthesis '('
#191: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:151:
+   schedule_timeout( timeout * HZ);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#195: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:155:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#200: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:160:
+static void iic_ibmocp_waitforpin(void *data) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#201: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:161:
+static void iic_ibmocp_waitforpin(void *data) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:162:
+   int timeout = 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:163:
+   struct iic_ibm *priv_data = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:164:
+   spinlock_t driver_lock = SPIN_LOCK_UNLOCKED;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:169:
+   // the IIC peripheral interrupts or the timeout expires. $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:171:
+   if (priv_data->iic_irq > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#211: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:171:
+   if (priv_data->iic_irq > 0) {
+      spin_lock_irq(&driver_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:172:
+      spin_lock_irq(&driver_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:173:
+      if (iic_pending == 0) {$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#213: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:173:
+      if (iic_pending == 0) {
[...]
+      } else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:174:
+        interruptible_sleep_on_timeout(&(iic_wait[priv_data->index]), timeout*HZ );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:174:
+        interruptible_sleep_on_timeout(&(iic_wait[priv_data->index]), timeout*HZ );$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#214: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:174:
+        interruptible_sleep_on_timeout(&(iic_wait[priv_data->index]), timeout*HZ );
                                                                              ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#214: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:174:
+        interruptible_sleep_on_timeout(&(iic_wait[priv_data->index]), timeout*HZ );

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around iic_wait[priv_data->index]
#214: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:174:
+        interruptible_sleep_on_timeout(&(iic_wait[priv_data->index]), timeout*HZ );

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:175:
+      } else$

CHECK:BRACES: Unbalanced braces around else statement
#215: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:175:
+      } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:176:
+        iic_pending = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:176:
+        iic_pending = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:177:
+      spin_unlock_irq(&driver_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:178:
+   } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#218: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:178:
+   } else {
[...]
+      udelay(100);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:188:
+      udelay(100);$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#228: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:188:
+      udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:189:
+   }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#233: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:193:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:197:
+static void iic_ibmocp_handler(int this_irq, void *dev_id, struct pt_regs *regs) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:199:
+   int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:200:
+   struct iic_regs *iic;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:201:
+   struct iic_ibm *priv_data = dev_id;$

CHECK:SPACING: No space is necessary after a cast
#242: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:202:
+   iic = (struct iic_regs *) priv_data->iic_base;

WARNING:LINE_SPACING: Missing a blank line after declarations
#242: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:202:
+   struct iic_ibm *priv_data = dev_id;
+   iic = (struct iic_regs *) priv_data->iic_base;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:202:
+   iic = (struct iic_regs *) priv_data->iic_base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:203:
+   iic_pending = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:204:
+   DEB2(printk("iic_ibmocp_handler: in interrupt handler\n"));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#244: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:204:
+   DEB2(printk("iic_ibmocp_handler: in interrupt handler\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_ibmocp_handler', this function's name, in a string
#244: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:204:
+   DEB2(printk("iic_ibmocp_handler: in interrupt handler\n"));

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: No space is necessary after a cast
#246: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:206:
+   ret = readb((int) &(iic->sts));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:206:
+   ret = readb((int) &(iic->sts));$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around iic->sts
#246: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:206:
+   ret = readb((int) &(iic->sts));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:207:
+   DEB2(printk("iic_ibmocp_handler: status = %x\n", ret));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#247: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:207:
+   DEB2(printk("iic_ibmocp_handler: status = %x\n", ret));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_ibmocp_handler', this function's name, in a string
#247: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:207:
+   DEB2(printk("iic_ibmocp_handler: status = %x\n", ret));

CHECK:SPACING: No space is necessary after a cast
#249: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:209:
+   writeb(0x0a, (int) &(iic->sts));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:209:
+   writeb(0x0a, (int) &(iic->sts));$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around iic->sts
#249: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:209:
+   writeb(0x0a, (int) &(iic->sts));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:210:
+   wake_up_interruptible(&(iic_wait[priv_data->index]));$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around iic_wait[priv_data->index]
#250: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:210:
+   wake_up_interruptible(&(iic_wait[priv_data->index]));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#253: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:213:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#262: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:222:
+{
+

CHECK:SPACING: No space is necessary after a cast
#263: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:223:
+   DEB(printk("iic_hw_resrc_init: Physical Base address: 0x%x\n", (u32) IIC_ADDR[instance] ));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:223:
+   DEB(printk("iic_hw_resrc_init: Physical Base address: 0x%x\n", (u32) IIC_ADDR[instance] ));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#263: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:223:
+   DEB(printk("iic_hw_resrc_init: Physical Base address: 0x%x\n", (u32) IIC_ADDR[instance] ));

ERROR:SPACING: space prohibited before that close parenthesis ')'
#263: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:223:
+   DEB(printk("iic_hw_resrc_init: Physical Base address: 0x%x\n", (u32) IIC_ADDR[instance] ));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_hw_resrc_init', this function's name, in a string
#263: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:223:
+   DEB(printk("iic_hw_resrc_init: Physical Base address: 0x%x\n", (u32) IIC_ADDR[instance] ));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:224:
+   iic_ibmocp_adaps[instance]->iic_base = (u32)ioremap((unsigned long)IIC_ADDR[instance],PAGE_SIZE);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#264: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:224:
+   iic_ibmocp_adaps[instance]->iic_base = (u32)ioremap((unsigned long)IIC_ADDR[instance],PAGE_SIZE);
                                                                                         ^

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#266: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:226:
+   DEB(printk("iic_hw_resrc_init: ioremapped base address: 0x%x\n", iic_ibmocp_adaps[instance]->iic_base));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:226:
+   DEB(printk("iic_hw_resrc_init: ioremapped base address: 0x%x\n", iic_ibmocp_adaps[instance]->iic_base));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#266: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:226:
+   DEB(printk("iic_hw_resrc_init: ioremapped base address: 0x%x\n", iic_ibmocp_adaps[instance]->iic_base));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_hw_resrc_init', this function's name, in a string
#266: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:226:
+   DEB(printk("iic_hw_resrc_init: ioremapped base address: 0x%x\n", iic_ibmocp_adaps[instance]->iic_base));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:228:
+   if (iic_ibmocp_adaps[instance]->iic_irq > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#268: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:228:
+   if (iic_ibmocp_adaps[instance]->iic_irq > 0) {
[...]
+      if (request_irq(iic_ibmocp_adaps[instance]->iic_irq, iic_ibmocp_handler,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:229:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:229:
+       $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#269: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:229:
+   if (iic_ibmocp_adaps[instance]->iic_irq > 0) {
+       

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:230:
+      if (request_irq(iic_ibmocp_adaps[instance]->iic_irq, iic_ibmocp_handler,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 9)
#270: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:230:
+      if (request_irq(iic_ibmocp_adaps[instance]->iic_irq, iic_ibmocp_handler,
[...]
+         printk(KERN_ERR "iic_hw_resrc_init: Request irq%d failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:231:
+      if (request_irq(iic_ibmocp_adaps[instance]->iic_irq, iic_ibmocp_handler,
+       0, "IBM OCP IIC", iic_ibmocp_adaps[instance]) < 0) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:231:
+       0, "IBM OCP IIC", iic_ibmocp_adaps[instance]) < 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:232:
+         printk(KERN_ERR "iic_hw_resrc_init: Request irq%d failed\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:232:
+         printk(KERN_ERR "iic_hw_resrc_init: Request irq%d failed\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#272: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:232:
+         printk(KERN_ERR "iic_hw_resrc_init: Request irq%d failed\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_hw_resrc_init', this function's name, in a string
#272: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:232:
+         printk(KERN_ERR "iic_hw_resrc_init: Request irq%d failed\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:233:
+          iic_ibmocp_adaps[instance]->iic_irq);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:233:
+         printk(KERN_ERR "iic_hw_resrc_init: Request irq%d failed\n",
+          iic_ibmocp_adaps[instance]->iic_irq);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:233:
+          iic_ibmocp_adaps[instance]->iic_irq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:234:
+        iic_ibmocp_adaps[instance]->iic_irq = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:234:
+        iic_ibmocp_adaps[instance]->iic_irq = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:235:
+      } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 9)
#275: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:235:
+      } else {
+         DEB3(printk("iic_hw_resrc_init: Enabled interrupt\n"));

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:236:
+         DEB3(printk("iic_hw_resrc_init: Enabled interrupt\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:236:
+         DEB3(printk("iic_hw_resrc_init: Enabled interrupt\n"));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#276: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:236:
+         DEB3(printk("iic_hw_resrc_init: Enabled interrupt\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_hw_resrc_init', this function's name, in a string
#276: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:236:
+         DEB3(printk("iic_hw_resrc_init: Enabled interrupt\n"));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:237:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:238:
+   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:239:
+   return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#282: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:242:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:248:
+   int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:250:
+   for(i=0; i<IIC_NUMS; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#290: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:250:
+   for(i=0; i<IIC_NUMS; i++) {
+      struct iic_ibm *priv_data = (struct iic_ibm *)iic_ibmocp_data[i]->data;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#290: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:250:
+   for(i=0; i<IIC_NUMS; i++) {
         ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#290: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:250:
+   for(i=0; i<IIC_NUMS; i++) {
              ^

ERROR:SPACING: space required before the open parenthesis '('
#290: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:250:
+   for(i=0; i<IIC_NUMS; i++) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:251:
+      struct iic_ibm *priv_data = (struct iic_ibm *)iic_ibmocp_data[i]->data;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#292: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:252:
+      struct iic_ibm *priv_data = (struct iic_ibm *)iic_ibmocp_data[i]->data;
+      if (priv_data->iic_irq > 0) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:252:
+      if (priv_data->iic_irq > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 9)
#292: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:252:
+      if (priv_data->iic_irq > 0) {
+         disable_irq(priv_data->iic_irq);

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:253:
+         disable_irq(priv_data->iic_irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:253:
+         disable_irq(priv_data->iic_irq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:254:
+         free_irq(priv_data->iic_irq, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:254:
+         free_irq(priv_data->iic_irq, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:255:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:256:
+      kfree(iic_ibmocp_data[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:257:
+      kfree(iic_ibmocp_ops[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:258:
+   }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#301: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:261:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:267:
+       return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#310: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:270:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:276:
+       return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#319: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:279:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:286:
+       MOD_INC_USE_COUNT;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#330: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:290:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:297:
+       MOD_DEC_USE_COUNT;$

WARNING:TYPO_SPELLING: 'heirarchy' may be misspelled - perhaps 'hierarchy'?
#343: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:303:
+// cascade of calls up through the heirarchy of i2c modules (i.e. up to the
                                    ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:306:
+static int __init iic_ibmocp_init(void) $

CHECK:SPACING: No space is necessary after a cast
#346: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:306:
+static int __init iic_ibmocp_init(void) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:308:
+   int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:310:
+   printk(KERN_INFO "iic_ibmocp_init: IBM on-chip iic adapter module\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#350: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:310:
+   printk(KERN_INFO "iic_ibmocp_init: IBM on-chip iic adapter module\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_ibmocp_init', this function's name, in a string
#350: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:310:
+   printk(KERN_INFO "iic_ibmocp_init: IBM on-chip iic adapter module\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#351: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:311:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:311:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:312:
+   for(i=0; i<IIC_NUMS; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#352: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:312:
+   for(i=0; i<IIC_NUMS; i++) {
+      iic_ibmocp_data[i] = kmalloc(sizeof(struct i2c_algo_iic_data),GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#352: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:312:
+   for(i=0; i<IIC_NUMS; i++) {
         ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#352: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:312:
+   for(i=0; i<IIC_NUMS; i++) {
              ^

ERROR:SPACING: space required before the open parenthesis '('
#352: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:312:
+   for(i=0; i<IIC_NUMS; i++) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:313:
+      iic_ibmocp_data[i] = kmalloc(sizeof(struct i2c_algo_iic_data),GFP_KERNEL);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#353: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:313:
+      iic_ibmocp_data[i] = kmalloc(sizeof(struct i2c_algo_iic_data),GFP_KERNEL);
                                                                    ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*iic_ibmocp_data[i])...) over kmalloc(sizeof(struct i2c_algo_iic_data)...)
#353: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:313:
+      iic_ibmocp_data[i] = kmalloc(sizeof(struct i2c_algo_iic_data),GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:314:
+      if(iic_ibmocp_data[i] == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 9)
#354: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:314:
+      if(iic_ibmocp_data[i] == NULL) {
+         return -ENOMEM;

ERROR:SPACING: space required before the open parenthesis '('
#354: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:314:
+      if(iic_ibmocp_data[i] == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#354: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:314:
+      if(iic_ibmocp_data[i] == NULL) {
+         return -ENOMEM;
+      }

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iic_ibmocp_data[i]"
#354: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:314:
+      if(iic_ibmocp_data[i] == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:315:
+         return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:315:
+         return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:316:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:317:
+      memset(iic_ibmocp_data[i], 0, sizeof(struct i2c_algo_iic_data));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:318:
+      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:318:
+      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:319:
+      switch (i) {$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#359: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:319:
+      switch (i) {
+             case 0:
[...]
+             case 1:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:320:
+             case 0:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:320:
+             case 0:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:321:
+              iic_ibmocp_adaps[i]->iic_irq = IIC_IRQ(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:321:
+              iic_ibmocp_adaps[i]->iic_irq = IIC_IRQ(0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:322:
+             break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:322:
+             break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:323:
+             case 1:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:323:
+             case 1:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#364: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:324:
+              iic_ibmocp_adaps[i]->iic_irq = IIC_IRQ(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:324:
+              iic_ibmocp_adaps[i]->iic_irq = IIC_IRQ(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:325:
+             break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:325:
+             break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:326:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:327:
+      iic_ibmocp_adaps[i]->iic_clock = IIC_CLOCK;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#368: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:328:
+      iic_ibmocp_adaps[i]->iic_own = IIC_OWN; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:328:
+      iic_ibmocp_adaps[i]->iic_own = IIC_OWN; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:329:
+      iic_ibmocp_adaps[i]->index = i;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:330:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:330:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:331:
+      DEB(printk("irq %x\n", iic_ibmocp_adaps[i]->iic_irq));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#371: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:331:
+      DEB(printk("irq %x\n", iic_ibmocp_adaps[i]->iic_irq));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:332:
+      DEB(printk("clock %x\n", iic_ibmocp_adaps[i]->iic_clock));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#372: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:332:
+      DEB(printk("clock %x\n", iic_ibmocp_adaps[i]->iic_clock));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:333:
+      DEB(printk("own %x\n", iic_ibmocp_adaps[i]->iic_own));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#373: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:333:
+      DEB(printk("own %x\n", iic_ibmocp_adaps[i]->iic_own));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:334:
+      DEB(printk("index %x\n", iic_ibmocp_adaps[i]->index));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#374: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:334:
+      DEB(printk("index %x\n", iic_ibmocp_adaps[i]->index));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#376: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:336:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:337:
+      iic_ibmocp_data[i]->data = (struct iic_regs *)iic_ibmocp_adaps[i]; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:337:
+      iic_ibmocp_data[i]->data = (struct iic_regs *)iic_ibmocp_adaps[i]; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:338:
+      iic_ibmocp_data[i]->setiic = iic_ibmocp_setbyte;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:339:
+      iic_ibmocp_data[i]->getiic = iic_ibmocp_getbyte;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:340:
+      iic_ibmocp_data[i]->getown = iic_ibmocp_getown;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:341:
+      iic_ibmocp_data[i]->getclock = iic_ibmocp_getclock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:342:
+      iic_ibmocp_data[i]->waitforpin = iic_ibmocp_waitforpin;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:343:
+      iic_ibmocp_data[i]->udelay = 80;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:344:
+      iic_ibmocp_data[i]->mdelay = 80;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:345:
+      iic_ibmocp_data[i]->timeout = 100;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#386: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:346:
+      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:346:
+      $

ERROR:CODE_INDENT: code indent should use tabs where possible
#387: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:347:
+            iic_ibmocp_ops[i] = kmalloc(sizeof(struct i2c_adapter), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:347:
+            iic_ibmocp_ops[i] = kmalloc(sizeof(struct i2c_adapter), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*iic_ibmocp_ops[i])...) over kmalloc(sizeof(struct i2c_adapter)...)
#387: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:347:
+            iic_ibmocp_ops[i] = kmalloc(sizeof(struct i2c_adapter), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:348:
+      if(iic_ibmocp_ops[i] == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 9)
#388: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:348:
+      if(iic_ibmocp_ops[i] == NULL) {
+         return -ENOMEM;

ERROR:SPACING: space required before the open parenthesis '('
#388: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:348:
+      if(iic_ibmocp_ops[i] == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#388: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:348:
+      if(iic_ibmocp_ops[i] == NULL) {
+         return -ENOMEM;
+      }

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iic_ibmocp_ops[i]"
#388: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:348:
+      if(iic_ibmocp_ops[i] == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:349:
+         return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:349:
+         return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:350:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:351:
+      memset(iic_ibmocp_ops[i], 0, sizeof(struct i2c_adapter));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:352:
+      strcpy(iic_ibmocp_ops[i]->name, "IBM OCP IIC adapter");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:353:
+      iic_ibmocp_ops[i]->id = I2C_HW_OCP;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:354:
+      iic_ibmocp_ops[i]->algo = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:355:
+      iic_ibmocp_ops[i]->algo_data = iic_ibmocp_data[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:356:
+      iic_ibmocp_ops[i]->inc_use = iic_ibmocp_inc_use;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:357:
+      iic_ibmocp_ops[i]->dec_use = iic_ibmocp_dec_use;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:358:
+      iic_ibmocp_ops[i]->client_register = iic_ibmocp_reg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:359:
+      iic_ibmocp_ops[i]->client_unregister = iic_ibmocp_unreg;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:360:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:360:
+       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:361:
+      $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#401: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:361:
+       
+      

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:361:
+      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:362:
+      init_waitqueue_head(&(iic_wait[i]));$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around iic_wait[i]
#402: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:362:
+      init_waitqueue_head(&(iic_wait[i]));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:363:
+      if (iic_hw_resrc_init(i) == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 9)
#403: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:363:
+      if (iic_hw_resrc_init(i) == 0) {
+         if (i2c_iic_add_bus(iic_ibmocp_ops[i]) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:364:
+         if (i2c_iic_add_bus(iic_ibmocp_ops[i]) < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:364:
+         if (i2c_iic_add_bus(iic_ibmocp_ops[i]) < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 9)
#404: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:364:
+         if (i2c_iic_add_bus(iic_ibmocp_ops[i]) < 0)
+         return -ENODEV;

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:365:
+         return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:365:
+         return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:366:
+      } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 9)
#406: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:366:
+      } else {
+         return -ENODEV;

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:367:
+         return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:367:
+         return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:368:
+      }$

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#409: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:369:
+      DEB(printk(KERN_INFO "iic_ibmocp_init: found device at %#x.\n\n", iic_ibmocp_adaps[i]->iic_base));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:369:
+      DEB(printk(KERN_INFO "iic_ibmocp_init: found device at %#x.\n\n", iic_ibmocp_adaps[i]->iic_base));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#409: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:369:
+      DEB(printk(KERN_INFO "iic_ibmocp_init: found device at %#x.\n\n", iic_ibmocp_adaps[i]->iic_base));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_ibmocp_init', this function's name, in a string
#409: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:369:
+      DEB(printk(KERN_INFO "iic_ibmocp_init: found device at %#x.\n\n", iic_ibmocp_adaps[i]->iic_base));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:370:
+   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:371:
+   return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#414: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:374:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:377:
+   int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:379:
+   for(i=0; i<IIC_NUMS; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#419: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:379:
+   for(i=0; i<IIC_NUMS; i++) {
+      i2c_iic_del_bus(iic_ibmocp_ops[i]);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#419: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:379:
+   for(i=0; i<IIC_NUMS; i++) {
         ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#419: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:379:
+   for(i=0; i<IIC_NUMS; i++) {
              ^

ERROR:SPACING: space required before the open parenthesis '('
#419: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:379:
+   for(i=0; i<IIC_NUMS; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#419: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:379:
+   for(i=0; i<IIC_NUMS; i++) {
+      i2c_iic_del_bus(iic_ibmocp_ops[i]);
+   }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:380:
+      i2c_iic_del_bus(iic_ibmocp_ops[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:381:
+   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:382:
+   iic_ibmocp_release();$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#437: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:397:
+MODULE_PARM(i2c_debug,"i");
                      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#439: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:399:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: drivers/i2c/i2c-adap-ibm_ocp.c:401:
+module_exit(iic_ibmocp_exit); $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#445: FILE: drivers/i2c/i2c-algo-8xx.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#460: FILE: drivers/i2c/i2c-algo-8xx.c:16:
+    along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#461: FILE: drivers/i2c/i2c-algo-8xx.c:17:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#463: FILE: drivers/i2c/i2c-algo-8xx.c:19:
+ * moved into proper i2c interface; separated out platform specific $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#471: FILE: drivers/i2c/i2c-algo-8xx.c:27:
+/* $Id: i2c-algo-8xx.c,v 1.6 2002/06/12 02:29:54 mds Exp $ */

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#479: FILE: drivers/i2c/i2c-algo-8xx.c:35:
+#include <asm/uaccess.h>

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#496: FILE: drivers/i2c/i2c-algo-8xx.c:52:
+int cpm_debug = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: drivers/i2c/i2c-algo-8xx.c:57:
+       volatile i2c8xx_t *i2c = (i2c8xx_t *)dev_id;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#501: FILE: drivers/i2c/i2c-algo-8xx.c:57:
+       volatile i2c8xx_t *i2c = (i2c8xx_t *)dev_id;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: drivers/i2c/i2c-algo-8xx.c:59:
+       if (cpm_debug > 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#503: FILE: drivers/i2c/i2c-algo-8xx.c:59:
+       if (cpm_debug > 1)
+               printk("cpm_iic_interrupt(dev_id=%p)\n", dev_id);

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: drivers/i2c/i2c-algo-8xx.c:60:
+               printk("cpm_iic_interrupt(dev_id=%p)\n", dev_id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: drivers/i2c/i2c-algo-8xx.c:60:
+               printk("cpm_iic_interrupt(dev_id=%p)\n", dev_id);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#504: FILE: drivers/i2c/i2c-algo-8xx.c:60:
+               printk("cpm_iic_interrupt(dev_id=%p)\n", dev_id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpm_iic_interrupt', this function's name, in a string
#504: FILE: drivers/i2c/i2c-algo-8xx.c:60:
+               printk("cpm_iic_interrupt(dev_id=%p)\n", dev_id);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#507: FILE: drivers/i2c/i2c-algo-8xx.c:63:
+       /* Chip errata, clear enable.
+       */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: drivers/i2c/i2c-algo-8xx.c:64:
+       i2c->i2c_i2mod = 0;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#511: FILE: drivers/i2c/i2c-algo-8xx.c:67:
+       /* Clear interrupt.
+       */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: drivers/i2c/i2c-algo-8xx.c:68:
+       i2c->i2c_i2cer = 0xff;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#515: FILE: drivers/i2c/i2c-algo-8xx.c:71:
+       /* Get 'me going again.
+       */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: drivers/i2c/i2c-algo-8xx.c:72:
+       wake_up_interruptible(&iic_wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: drivers/i2c/i2c-algo-8xx.c:78:
+       volatile iic_t          *iip = cpm_adap->iip;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#522: FILE: drivers/i2c/i2c-algo-8xx.c:78:
+       volatile iic_t          *iip = cpm_adap->iip;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: drivers/i2c/i2c-algo-8xx.c:79:
+       volatile i2c8xx_t       *i2c = cpm_adap->i2c;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#523: FILE: drivers/i2c/i2c-algo-8xx.c:79:
+       volatile i2c8xx_t       *i2c = cpm_adap->i2c;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: drivers/i2c/i2c-algo-8xx.c:81:
+       if (cpm_debug) printk("cpm_iic_init() - iip=%p\n",iip);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#525: FILE: drivers/i2c/i2c-algo-8xx.c:81:
+       if (cpm_debug) printk("cpm_iic_init() - iip=%p\n",iip);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#525: FILE: drivers/i2c/i2c-algo-8xx.c:81:
+       if (cpm_debug) printk("cpm_iic_init() - iip=%p\n",iip);
                                                         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#525: FILE: drivers/i2c/i2c-algo-8xx.c:81:
+       if (cpm_debug) printk("cpm_iic_init() - iip=%p\n",iip);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpm_iic_init', this function's name, in a string
#525: FILE: drivers/i2c/i2c-algo-8xx.c:81:
+       if (cpm_debug) printk("cpm_iic_init() - iip=%p\n",iip);

ERROR:CODE_INDENT: code indent should use tabs where possible
#528: FILE: drivers/i2c/i2c-algo-8xx.c:84:
+        * We need to make sure many things are initialized to zero,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#529: FILE: drivers/i2c/i2c-algo-8xx.c:85:
+        * especially in the case of a microcode patch.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#530: FILE: drivers/i2c/i2c-algo-8xx.c:86:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: drivers/i2c/i2c-algo-8xx.c:87:
+       iip->iic_rstate = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: drivers/i2c/i2c-algo-8xx.c:88:
+       iip->iic_rdp = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: drivers/i2c/i2c-algo-8xx.c:89:
+       iip->iic_rbptr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: drivers/i2c/i2c-algo-8xx.c:90:
+       iip->iic_rbc = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: drivers/i2c/i2c-algo-8xx.c:91:
+       iip->iic_rxtmp = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: drivers/i2c/i2c-algo-8xx.c:92:
+       iip->iic_tstate = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: drivers/i2c/i2c-algo-8xx.c:93:
+       iip->iic_tdp = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: drivers/i2c/i2c-algo-8xx.c:94:
+       iip->iic_tbptr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: drivers/i2c/i2c-algo-8xx.c:95:
+       iip->iic_tbc = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: drivers/i2c/i2c-algo-8xx.c:96:
+       iip->iic_txtmp = 0;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#543: FILE: drivers/i2c/i2c-algo-8xx.c:99:
+       /* Set up the IIC parameters in the parameter ram.
+       */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: drivers/i2c/i2c-algo-8xx.c:100:
+       iip->iic_tbase = r_tbase = cpm_adap->dp_addr;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#544: FILE: drivers/i2c/i2c-algo-8xx.c:100:
+       iip->iic_tbase = r_tbase = cpm_adap->dp_addr;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: drivers/i2c/i2c-algo-8xx.c:101:
+       iip->iic_rbase = r_rbase = cpm_adap->dp_addr + sizeof(cbd_t)*2;$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#545: FILE: drivers/i2c/i2c-algo-8xx.c:101:
+       iip->iic_rbase = r_rbase = cpm_adap->dp_addr + sizeof(cbd_t)*2;
                                                                    ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#545: FILE: drivers/i2c/i2c-algo-8xx.c:101:
+       iip->iic_rbase = r_rbase = cpm_adap->dp_addr + sizeof(cbd_t)*2;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: drivers/i2c/i2c-algo-8xx.c:103:
+       iip->iic_tfcr = SMC_EB;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: drivers/i2c/i2c-algo-8xx.c:104:
+       iip->iic_rfcr = SMC_EB;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#551: FILE: drivers/i2c/i2c-algo-8xx.c:107:
+       /* Set maximum receive size.
+       */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: drivers/i2c/i2c-algo-8xx.c:108:
+       iip->iic_mrblr = CPM_MAX_READ;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#555: FILE: drivers/i2c/i2c-algo-8xx.c:111:
+       /* Initialize Tx/Rx parameters.
+       */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: drivers/i2c/i2c-algo-8xx.c:112:
+       if (cpm_adap->reloc == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#556: FILE: drivers/i2c/i2c-algo-8xx.c:112:
+       if (cpm_adap->reloc == 0) {
+               volatile cpm8xx_t *cp = cpm_adap->cp;

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: drivers/i2c/i2c-algo-8xx.c:113:
+               volatile cpm8xx_t *cp = cpm_adap->cp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: drivers/i2c/i2c-algo-8xx.c:113:
+               volatile cpm8xx_t *cp = cpm_adap->cp;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#557: FILE: drivers/i2c/i2c-algo-8xx.c:113:
+               volatile cpm8xx_t *cp = cpm_adap->cp;

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: drivers/i2c/i2c-algo-8xx.c:115:
+               cp->cp_cpcr =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: drivers/i2c/i2c-algo-8xx.c:115:
+               cp->cp_cpcr =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#560: FILE: drivers/i2c/i2c-algo-8xx.c:116:
+                       mk_cr_cmd(CPM_CR_CH_I2C, CPM_CR_INIT_TRX) | CPM_CR_FLG;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: drivers/i2c/i2c-algo-8xx.c:116:
+                       mk_cr_cmd(CPM_CR_CH_I2C, CPM_CR_INIT_TRX) | CPM_CR_FLG;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#561: FILE: drivers/i2c/i2c-algo-8xx.c:117:
+               while (cp->cp_cpcr & CPM_CR_FLG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: drivers/i2c/i2c-algo-8xx.c:117:
+               while (cp->cp_cpcr & CPM_CR_FLG);$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#561: FILE: drivers/i2c/i2c-algo-8xx.c:117:
+               while (cp->cp_cpcr & CPM_CR_FLG);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: drivers/i2c/i2c-algo-8xx.c:118:
+       }$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#565: FILE: drivers/i2c/i2c-algo-8xx.c:121:
+       /* Select an arbitrary address.  Just make sure it is unique.
+       */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: drivers/i2c/i2c-algo-8xx.c:122:
+       i2c->i2c_i2add = 0x34;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#569: FILE: drivers/i2c/i2c-algo-8xx.c:125:
+       /* Make clock run maximum slow.
+       */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: drivers/i2c/i2c-algo-8xx.c:126:
+       i2c->i2c_i2brg = 7;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#573: FILE: drivers/i2c/i2c-algo-8xx.c:129:
+       /* Disable interrupts.
+       */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: drivers/i2c/i2c-algo-8xx.c:130:
+       i2c->i2c_i2cmr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: drivers/i2c/i2c-algo-8xx.c:131:
+       i2c->i2c_i2cer = 0xff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: drivers/i2c/i2c-algo-8xx.c:133:
+       init_waitqueue_head(&iic_wait);$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#580: FILE: drivers/i2c/i2c-algo-8xx.c:136:
+       /* Install interrupt handler.
+       */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: drivers/i2c/i2c-algo-8xx.c:137:
+       if (cpm_debug) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#581: FILE: drivers/i2c/i2c-algo-8xx.c:137:
+       if (cpm_debug) {
+               printk ("%s[%d] Install ISR for IRQ %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#582: FILE: drivers/i2c/i2c-algo-8xx.c:138:
+               printk ("%s[%d] Install ISR for IRQ %d\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: drivers/i2c/i2c-algo-8xx.c:138:
+               printk ("%s[%d] Install ISR for IRQ %d\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#582: FILE: drivers/i2c/i2c-algo-8xx.c:138:
+               printk ("%s[%d] Install ISR for IRQ %d\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#582: FILE: drivers/i2c/i2c-algo-8xx.c:138:
+               printk ("%s[%d] Install ISR for IRQ %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#583: FILE: drivers/i2c/i2c-algo-8xx.c:139:
+                       __func__,__LINE__, CPMVEC_I2C);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: drivers/i2c/i2c-algo-8xx.c:139:
+                       __func__,__LINE__, CPMVEC_I2C);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#583: FILE: drivers/i2c/i2c-algo-8xx.c:139:
+                       __func__,__LINE__, CPMVEC_I2C);
                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: drivers/i2c/i2c-algo-8xx.c:140:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: drivers/i2c/i2c-algo-8xx.c:141:
+       (*cpm_adap->setisr)(CPMVEC_I2C, cpm_iic_interrupt, (void *)i2c);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#588: FILE: drivers/i2c/i2c-algo-8xx.c:144:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: drivers/i2c/i2c-algo-8xx.c:148:
+       volatile i2c8xx_t *i2c = cpm_adap->i2c;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#592: FILE: drivers/i2c/i2c-algo-8xx.c:148:
+       volatile i2c8xx_t *i2c = cpm_adap->i2c;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#595: FILE: drivers/i2c/i2c-algo-8xx.c:151:
+       /* Shut down IIC.
+       */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: drivers/i2c/i2c-algo-8xx.c:152:
+       i2c->i2c_i2mod = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: drivers/i2c/i2c-algo-8xx.c:153:
+       i2c->i2c_i2cmr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: drivers/i2c/i2c-algo-8xx.c:154:
+       i2c->i2c_i2cer = 0xff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: drivers/i2c/i2c-algo-8xx.c:156:
+       return(0);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#600: FILE: drivers/i2c/i2c-algo-8xx.c:156:
+       return(0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: drivers/i2c/i2c-algo-8xx.c:159:
+static void $

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#604: FILE: drivers/i2c/i2c-algo-8xx.c:160:
+cpm_reset_iic_params(volatile iic_t *iip)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: drivers/i2c/i2c-algo-8xx.c:162:
+       iip->iic_tbase = r_tbase;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: drivers/i2c/i2c-algo-8xx.c:163:
+       iip->iic_rbase = r_rbase;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: drivers/i2c/i2c-algo-8xx.c:165:
+       iip->iic_tfcr = SMC_EB;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: drivers/i2c/i2c-algo-8xx.c:166:
+       iip->iic_rfcr = SMC_EB;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: drivers/i2c/i2c-algo-8xx.c:168:
+       iip->iic_mrblr = CPM_MAX_READ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: drivers/i2c/i2c-algo-8xx.c:170:
+       iip->iic_rstate = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: drivers/i2c/i2c-algo-8xx.c:171:
+       iip->iic_rdp = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: drivers/i2c/i2c-algo-8xx.c:172:
+       iip->iic_rbptr = r_rbase;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: drivers/i2c/i2c-algo-8xx.c:173:
+       iip->iic_rbc = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: drivers/i2c/i2c-algo-8xx.c:174:
+       iip->iic_rxtmp = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: drivers/i2c/i2c-algo-8xx.c:175:
+       iip->iic_tstate = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: drivers/i2c/i2c-algo-8xx.c:176:
+       iip->iic_tdp = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: drivers/i2c/i2c-algo-8xx.c:177:
+       iip->iic_tbptr = r_tbase;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: drivers/i2c/i2c-algo-8xx.c:178:
+       iip->iic_tbc = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: drivers/i2c/i2c-algo-8xx.c:179:
+       iip->iic_txtmp = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: drivers/i2c/i2c-algo-8xx.c:187:
+       if (cpm->reloc == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#631: FILE: drivers/i2c/i2c-algo-8xx.c:187:
+       if (cpm->reloc == 0) {
+               volatile cpm8xx_t *cp = cpm->cp;

ERROR:CODE_INDENT: code indent should use tabs where possible
#632: FILE: drivers/i2c/i2c-algo-8xx.c:188:
+               volatile cpm8xx_t *cp = cpm->cp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: drivers/i2c/i2c-algo-8xx.c:188:
+               volatile cpm8xx_t *cp = cpm->cp;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#632: FILE: drivers/i2c/i2c-algo-8xx.c:188:
+               volatile cpm8xx_t *cp = cpm->cp;

ERROR:CODE_INDENT: code indent should use tabs where possible
#634: FILE: drivers/i2c/i2c-algo-8xx.c:190:
+               if (cpm_debug) printk("force_close()\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: drivers/i2c/i2c-algo-8xx.c:190:
+               if (cpm_debug) printk("force_close()\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#634: FILE: drivers/i2c/i2c-algo-8xx.c:190:
+               if (cpm_debug) printk("force_close()\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#634: FILE: drivers/i2c/i2c-algo-8xx.c:190:
+               if (cpm_debug) printk("force_close()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'force_close', this function's name, in a string
#634: FILE: drivers/i2c/i2c-algo-8xx.c:190:
+               if (cpm_debug) printk("force_close()\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#635: FILE: drivers/i2c/i2c-algo-8xx.c:191:
+               cp->cp_cpcr =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: drivers/i2c/i2c-algo-8xx.c:191:
+               cp->cp_cpcr =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#636: FILE: drivers/i2c/i2c-algo-8xx.c:192:
+                       mk_cr_cmd(CPM_CR_CH_I2C, CPM_CR_CLOSE_RXBD) |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: drivers/i2c/i2c-algo-8xx.c:192:
+                       mk_cr_cmd(CPM_CR_CH_I2C, CPM_CR_CLOSE_RXBD) |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#637: FILE: drivers/i2c/i2c-algo-8xx.c:193:
+                       CPM_CR_FLG;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: drivers/i2c/i2c-algo-8xx.c:193:
+                       CPM_CR_FLG;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#639: FILE: drivers/i2c/i2c-algo-8xx.c:195:
+               while (cp->cp_cpcr & CPM_CR_FLG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: drivers/i2c/i2c-algo-8xx.c:195:
+               while (cp->cp_cpcr & CPM_CR_FLG);$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#639: FILE: drivers/i2c/i2c-algo-8xx.c:195:
+               while (cp->cp_cpcr & CPM_CR_FLG);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: drivers/i2c/i2c-algo-8xx.c:196:
+       }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#643: FILE: drivers/i2c/i2c-algo-8xx.c:199:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: drivers/i2c/i2c-algo-8xx.c:206:
+       volatile iic_t *iip = cpm->iip;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#650: FILE: drivers/i2c/i2c-algo-8xx.c:206:
+       volatile iic_t *iip = cpm->iip;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: drivers/i2c/i2c-algo-8xx.c:207:
+       volatile i2c8xx_t *i2c = cpm->i2c;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#651: FILE: drivers/i2c/i2c-algo-8xx.c:207:
+       volatile i2c8xx_t *i2c = cpm->i2c;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: drivers/i2c/i2c-algo-8xx.c:208:
+       volatile cpm8xx_t *cp = cpm->cp;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#652: FILE: drivers/i2c/i2c-algo-8xx.c:208:
+       volatile cpm8xx_t *cp = cpm->cp;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: drivers/i2c/i2c-algo-8xx.c:209:
+       volatile cbd_t  *tbdf, *rbdf;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#653: FILE: drivers/i2c/i2c-algo-8xx.c:209:
+       volatile cbd_t  *tbdf, *rbdf;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#654: FILE: drivers/i2c/i2c-algo-8xx.c:210:
+       u_char *tb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#655: FILE: drivers/i2c/i2c-algo-8xx.c:211:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#657: FILE: drivers/i2c/i2c-algo-8xx.c:213:
+       if (count >= CPM_MAX_READ)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#657: FILE: drivers/i2c/i2c-algo-8xx.c:213:
+       if (count >= CPM_MAX_READ)
+               return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#658: FILE: drivers/i2c/i2c-algo-8xx.c:214:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: drivers/i2c/i2c-algo-8xx.c:214:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: drivers/i2c/i2c-algo-8xx.c:217:
+       if (cpm->reloc) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#661: FILE: drivers/i2c/i2c-algo-8xx.c:217:
+       if (cpm->reloc) {
+               cpm_reset_iic_params(iip);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#661: FILE: drivers/i2c/i2c-algo-8xx.c:217:
+       if (cpm->reloc) {
+               cpm_reset_iic_params(iip);
+       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#662: FILE: drivers/i2c/i2c-algo-8xx.c:218:
+               cpm_reset_iic_params(iip);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#662: FILE: drivers/i2c/i2c-algo-8xx.c:218:
+               cpm_reset_iic_params(iip);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: drivers/i2c/i2c-algo-8xx.c:219:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: drivers/i2c/i2c-algo-8xx.c:221:
+       tbdf = (cbd_t *)&cp->cp_dpmem[iip->iic_tbase];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#666: FILE: drivers/i2c/i2c-algo-8xx.c:222:
+       rbdf = (cbd_t *)&cp->cp_dpmem[iip->iic_rbase];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#669: FILE: drivers/i2c/i2c-algo-8xx.c:225:
+        * All that is used is the first byte for address, the remainder$

ERROR:CODE_INDENT: code indent should use tabs where possible
#670: FILE: drivers/i2c/i2c-algo-8xx.c:226:
+        * is just used for timing (and doesn't really have to exist).$

ERROR:CODE_INDENT: code indent should use tabs where possible
#671: FILE: drivers/i2c/i2c-algo-8xx.c:227:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: drivers/i2c/i2c-algo-8xx.c:228:
+       if (cpm->reloc) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#672: FILE: drivers/i2c/i2c-algo-8xx.c:228:
+       if (cpm->reloc) {
+               cpm_reset_iic_params(iip);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#672: FILE: drivers/i2c/i2c-algo-8xx.c:228:
+       if (cpm->reloc) {
+               cpm_reset_iic_params(iip);
+       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#673: FILE: drivers/i2c/i2c-algo-8xx.c:229:
+               cpm_reset_iic_params(iip);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: drivers/i2c/i2c-algo-8xx.c:229:
+               cpm_reset_iic_params(iip);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: drivers/i2c/i2c-algo-8xx.c:230:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: drivers/i2c/i2c-algo-8xx.c:231:
+       tb = cpm->temp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: drivers/i2c/i2c-algo-8xx.c:232:
+       tb = (u_char *)(((uint)tb + 15) & ~15);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: drivers/i2c/i2c-algo-8xx.c:233:
+       tb[0] = abyte;          /* Device address byte w/rw flag */$

CHECK:SPACING: No space is necessary after a cast
#679: FILE: drivers/i2c/i2c-algo-8xx.c:235:
+       flush_dcache_range((unsigned long) tb, (unsigned long) (tb+1));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#679: FILE: drivers/i2c/i2c-algo-8xx.c:235:
+       flush_dcache_range((unsigned long) tb, (unsigned long) (tb+1));$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#679: FILE: drivers/i2c/i2c-algo-8xx.c:235:
+       flush_dcache_range((unsigned long) tb, (unsigned long) (tb+1));
                                                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: drivers/i2c/i2c-algo-8xx.c:237:
+       if (cpm_debug) printk("cpm_iic_read(abyte=0x%x)\n", abyte);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#681: FILE: drivers/i2c/i2c-algo-8xx.c:237:
+       if (cpm_debug) printk("cpm_iic_read(abyte=0x%x)\n", abyte);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#681: FILE: drivers/i2c/i2c-algo-8xx.c:237:
+       if (cpm_debug) printk("cpm_iic_read(abyte=0x%x)\n", abyte);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpm_iic_read', this function's name, in a string
#681: FILE: drivers/i2c/i2c-algo-8xx.c:237:
+       if (cpm_debug) printk("cpm_iic_read(abyte=0x%x)\n", abyte);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: drivers/i2c/i2c-algo-8xx.c:239:
+       tbdf->cbd_bufaddr = __pa(tb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: drivers/i2c/i2c-algo-8xx.c:240:
+       tbdf->cbd_datlen = count + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: drivers/i2c/i2c-algo-8xx.c:241:
+       tbdf->cbd_sc =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#686: FILE: drivers/i2c/i2c-algo-8xx.c:242:
+               BD_SC_READY | BD_SC_INTRPT | BD_SC_LAST |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: drivers/i2c/i2c-algo-8xx.c:242:
+               BD_SC_READY | BD_SC_INTRPT | BD_SC_LAST |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#687: FILE: drivers/i2c/i2c-algo-8xx.c:243:
+               BD_SC_WRAP | BD_IIC_START;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#687: FILE: drivers/i2c/i2c-algo-8xx.c:243:
+               BD_SC_WRAP | BD_IIC_START;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: drivers/i2c/i2c-algo-8xx.c:245:
+       rbdf->cbd_datlen = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: drivers/i2c/i2c-algo-8xx.c:246:
+       rbdf->cbd_bufaddr = __pa(buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: drivers/i2c/i2c-algo-8xx.c:247:
+       rbdf->cbd_sc = BD_SC_EMPTY | BD_SC_WRAP;$

CHECK:SPACING: No space is necessary after a cast
#693: FILE: drivers/i2c/i2c-algo-8xx.c:249:
+       invalidate_dcache_range((unsigned long) buf, (unsigned long) (buf+count));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: drivers/i2c/i2c-algo-8xx.c:249:
+       invalidate_dcache_range((unsigned long) buf, (unsigned long) (buf+count));$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#693: FILE: drivers/i2c/i2c-algo-8xx.c:249:
+       invalidate_dcache_range((unsigned long) buf, (unsigned long) (buf+count));
                                                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: drivers/i2c/i2c-algo-8xx.c:252:
+       local_irq_save(flags);$

WARNING:TYPO_SPELLING: 'interupts' may be misspelled - perhaps 'interrupts'?
#697: FILE: drivers/i2c/i2c-algo-8xx.c:253:
+       i2c->i2c_i2cmr = 0x13;  /* Enable some interupts */
                                               ^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: drivers/i2c/i2c-algo-8xx.c:253:
+       i2c->i2c_i2cmr = 0x13;  /* Enable some interupts */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: drivers/i2c/i2c-algo-8xx.c:254:
+       i2c->i2c_i2cer = 0xff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: drivers/i2c/i2c-algo-8xx.c:255:
+       i2c->i2c_i2mod = 1;     /* Enable */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: drivers/i2c/i2c-algo-8xx.c:256:
+       i2c->i2c_i2com = 0x81;  /* Start master */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: drivers/i2c/i2c-algo-8xx.c:259:
+       interruptible_sleep_on(&iic_wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: drivers/i2c/i2c-algo-8xx.c:260:
+       local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: drivers/i2c/i2c-algo-8xx.c:261:
+       if (signal_pending(current))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#705: FILE: drivers/i2c/i2c-algo-8xx.c:261:
+       if (signal_pending(current))
+               return -EIO;

ERROR:CODE_INDENT: code indent should use tabs where possible
#706: FILE: drivers/i2c/i2c-algo-8xx.c:262:
+               return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#706: FILE: drivers/i2c/i2c-algo-8xx.c:262:
+               return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#708: FILE: drivers/i2c/i2c-algo-8xx.c:264:
+       if (cpm_debug) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#708: FILE: drivers/i2c/i2c-algo-8xx.c:264:
+       if (cpm_debug) {
+               printk("tx sc %04x, rx sc %04x\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#709: FILE: drivers/i2c/i2c-algo-8xx.c:265:
+               printk("tx sc %04x, rx sc %04x\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: drivers/i2c/i2c-algo-8xx.c:265:
+               printk("tx sc %04x, rx sc %04x\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#709: FILE: drivers/i2c/i2c-algo-8xx.c:265:
+               printk("tx sc %04x, rx sc %04x\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#710: FILE: drivers/i2c/i2c-algo-8xx.c:266:
+                      tbdf->cbd_sc, rbdf->cbd_sc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: drivers/i2c/i2c-algo-8xx.c:266:
+                      tbdf->cbd_sc, rbdf->cbd_sc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: drivers/i2c/i2c-algo-8xx.c:267:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: drivers/i2c/i2c-algo-8xx.c:269:
+       if (tbdf->cbd_sc & BD_SC_NAK) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#713: FILE: drivers/i2c/i2c-algo-8xx.c:269:
+       if (tbdf->cbd_sc & BD_SC_NAK) {
+               printk("IIC read; no ack\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#714: FILE: drivers/i2c/i2c-algo-8xx.c:270:
+               printk("IIC read; no ack\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: drivers/i2c/i2c-algo-8xx.c:270:
+               printk("IIC read; no ack\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#714: FILE: drivers/i2c/i2c-algo-8xx.c:270:
+               printk("IIC read; no ack\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#715: FILE: drivers/i2c/i2c-algo-8xx.c:271:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: drivers/i2c/i2c-algo-8xx.c:271:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: drivers/i2c/i2c-algo-8xx.c:272:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: drivers/i2c/i2c-algo-8xx.c:274:
+       if (rbdf->cbd_sc & BD_SC_EMPTY) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#718: FILE: drivers/i2c/i2c-algo-8xx.c:274:
+       if (rbdf->cbd_sc & BD_SC_EMPTY) {
+               printk("IIC read; complete but rbuf empty\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#719: FILE: drivers/i2c/i2c-algo-8xx.c:275:
+               printk("IIC read; complete but rbuf empty\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: drivers/i2c/i2c-algo-8xx.c:275:
+               printk("IIC read; complete but rbuf empty\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#719: FILE: drivers/i2c/i2c-algo-8xx.c:275:
+               printk("IIC read; complete but rbuf empty\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#720: FILE: drivers/i2c/i2c-algo-8xx.c:276:
+               force_close(cpm);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#720: FILE: drivers/i2c/i2c-algo-8xx.c:276:
+               force_close(cpm);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#721: FILE: drivers/i2c/i2c-algo-8xx.c:277:
+               printk("tx sc %04x, rx sc %04x\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: drivers/i2c/i2c-algo-8xx.c:277:
+               printk("tx sc %04x, rx sc %04x\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#721: FILE: drivers/i2c/i2c-algo-8xx.c:277:
+               printk("tx sc %04x, rx sc %04x\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#722: FILE: drivers/i2c/i2c-algo-8xx.c:278:
+                      tbdf->cbd_sc, rbdf->cbd_sc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: drivers/i2c/i2c-algo-8xx.c:278:
+                      tbdf->cbd_sc, rbdf->cbd_sc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#723: FILE: drivers/i2c/i2c-algo-8xx.c:279:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: drivers/i2c/i2c-algo-8xx.c:281:
+       if (cpm_debug) printk("read %d bytes\n", rbdf->cbd_datlen);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#725: FILE: drivers/i2c/i2c-algo-8xx.c:281:
+       if (cpm_debug) printk("read %d bytes\n", rbdf->cbd_datlen);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#725: FILE: drivers/i2c/i2c-algo-8xx.c:281:
+       if (cpm_debug) printk("read %d bytes\n", rbdf->cbd_datlen);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#727: FILE: drivers/i2c/i2c-algo-8xx.c:283:
+       if (rbdf->cbd_datlen < count) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#727: FILE: drivers/i2c/i2c-algo-8xx.c:283:
+       if (rbdf->cbd_datlen < count) {
+               printk("IIC read; short, wanted %d got %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#728: FILE: drivers/i2c/i2c-algo-8xx.c:284:
+               printk("IIC read; short, wanted %d got %d\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#728: FILE: drivers/i2c/i2c-algo-8xx.c:284:
+               printk("IIC read; short, wanted %d got %d\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#728: FILE: drivers/i2c/i2c-algo-8xx.c:284:
+               printk("IIC read; short, wanted %d got %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#729: FILE: drivers/i2c/i2c-algo-8xx.c:285:
+                      count, rbdf->cbd_datlen);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: drivers/i2c/i2c-algo-8xx.c:285:
+                      count, rbdf->cbd_datlen);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#730: FILE: drivers/i2c/i2c-algo-8xx.c:286:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#730: FILE: drivers/i2c/i2c-algo-8xx.c:286:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: drivers/i2c/i2c-algo-8xx.c:287:
+       }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#733: FILE: drivers/i2c/i2c-algo-8xx.c:289:
+
+

CHECK:SPACING: No space is necessary after a cast
#734: FILE: drivers/i2c/i2c-algo-8xx.c:290:
+       invalidate_dcache_range((unsigned long) buf, (unsigned long) (buf+count));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: drivers/i2c/i2c-algo-8xx.c:290:
+       invalidate_dcache_range((unsigned long) buf, (unsigned long) (buf+count));$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#734: FILE: drivers/i2c/i2c-algo-8xx.c:290:
+       invalidate_dcache_range((unsigned long) buf, (unsigned long) (buf+count));
                                                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#736: FILE: drivers/i2c/i2c-algo-8xx.c:292:
+       return count;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#743: FILE: drivers/i2c/i2c-algo-8xx.c:299:
+cpm_iic_write(struct i2c_algo_8xx_data *cpm, u_char abyte, char *buf,int count)
                                                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: drivers/i2c/i2c-algo-8xx.c:301:
+       volatile iic_t *iip = cpm->iip;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#745: FILE: drivers/i2c/i2c-algo-8xx.c:301:
+       volatile iic_t *iip = cpm->iip;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#746: FILE: drivers/i2c/i2c-algo-8xx.c:302:
+       volatile i2c8xx_t *i2c = cpm->i2c;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#746: FILE: drivers/i2c/i2c-algo-8xx.c:302:
+       volatile i2c8xx_t *i2c = cpm->i2c;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#747: FILE: drivers/i2c/i2c-algo-8xx.c:303:
+       volatile cpm8xx_t *cp = cpm->cp;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#747: FILE: drivers/i2c/i2c-algo-8xx.c:303:
+       volatile cpm8xx_t *cp = cpm->cp;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#748: FILE: drivers/i2c/i2c-algo-8xx.c:304:
+       volatile cbd_t  *tbdf;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#748: FILE: drivers/i2c/i2c-algo-8xx.c:304:
+       volatile cbd_t  *tbdf;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#749: FILE: drivers/i2c/i2c-algo-8xx.c:305:
+       u_char *tb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#750: FILE: drivers/i2c/i2c-algo-8xx.c:306:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#753: FILE: drivers/i2c/i2c-algo-8xx.c:309:
+       if (cpm->reloc) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#753: FILE: drivers/i2c/i2c-algo-8xx.c:309:
+       if (cpm->reloc) {
+               cpm_reset_iic_params(iip);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#753: FILE: drivers/i2c/i2c-algo-8xx.c:309:
+       if (cpm->reloc) {
+               cpm_reset_iic_params(iip);
+       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#754: FILE: drivers/i2c/i2c-algo-8xx.c:310:
+               cpm_reset_iic_params(iip);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#754: FILE: drivers/i2c/i2c-algo-8xx.c:310:
+               cpm_reset_iic_params(iip);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#755: FILE: drivers/i2c/i2c-algo-8xx.c:311:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#756: FILE: drivers/i2c/i2c-algo-8xx.c:312:
+       tb = cpm->temp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#757: FILE: drivers/i2c/i2c-algo-8xx.c:313:
+       tb = (u_char *)(((uint)tb + 15) & ~15);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#758: FILE: drivers/i2c/i2c-algo-8xx.c:314:
+       *tb = abyte;            /* Device address byte w/rw flag */$

CHECK:SPACING: No space is necessary after a cast
#760: FILE: drivers/i2c/i2c-algo-8xx.c:316:
+       flush_dcache_range((unsigned long) tb, (unsigned long) (tb+1));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#760: FILE: drivers/i2c/i2c-algo-8xx.c:316:
+       flush_dcache_range((unsigned long) tb, (unsigned long) (tb+1));$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#760: FILE: drivers/i2c/i2c-algo-8xx.c:316:
+       flush_dcache_range((unsigned long) tb, (unsigned long) (tb+1));
                                                                  ^

CHECK:SPACING: No space is necessary after a cast
#761: FILE: drivers/i2c/i2c-algo-8xx.c:317:
+       flush_dcache_range((unsigned long) buf, (unsigned long) (buf+count));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#761: FILE: drivers/i2c/i2c-algo-8xx.c:317:
+       flush_dcache_range((unsigned long) buf, (unsigned long) (buf+count));$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#761: FILE: drivers/i2c/i2c-algo-8xx.c:317:
+       flush_dcache_range((unsigned long) buf, (unsigned long) (buf+count));
                                                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#763: FILE: drivers/i2c/i2c-algo-8xx.c:319:
+       if (cpm_debug) printk("cpm_iic_write(abyte=0x%x)\n", abyte);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#763: FILE: drivers/i2c/i2c-algo-8xx.c:319:
+       if (cpm_debug) printk("cpm_iic_write(abyte=0x%x)\n", abyte);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#763: FILE: drivers/i2c/i2c-algo-8xx.c:319:
+       if (cpm_debug) printk("cpm_iic_write(abyte=0x%x)\n", abyte);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpm_iic_write', this function's name, in a string
#763: FILE: drivers/i2c/i2c-algo-8xx.c:319:
+       if (cpm_debug) printk("cpm_iic_write(abyte=0x%x)\n", abyte);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#766: FILE: drivers/i2c/i2c-algo-8xx.c:322:
+       tbdf = (cbd_t *)&cp->cp_dpmem[iip->iic_tbase];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#768: FILE: drivers/i2c/i2c-algo-8xx.c:324:
+       tbdf[0].cbd_bufaddr = __pa(tb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#769: FILE: drivers/i2c/i2c-algo-8xx.c:325:
+       tbdf[0].cbd_datlen = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: drivers/i2c/i2c-algo-8xx.c:326:
+       tbdf[0].cbd_sc = BD_SC_READY | BD_IIC_START;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#772: FILE: drivers/i2c/i2c-algo-8xx.c:328:
+       tbdf[1].cbd_bufaddr = __pa(buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#773: FILE: drivers/i2c/i2c-algo-8xx.c:329:
+       tbdf[1].cbd_datlen = count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#774: FILE: drivers/i2c/i2c-algo-8xx.c:330:
+       tbdf[1].cbd_sc = BD_SC_READY | BD_SC_INTRPT | BD_SC_LAST | BD_SC_WRAP;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#777: FILE: drivers/i2c/i2c-algo-8xx.c:333:
+       local_irq_save(flags);$

WARNING:TYPO_SPELLING: 'interupts' may be misspelled - perhaps 'interrupts'?
#778: FILE: drivers/i2c/i2c-algo-8xx.c:334:
+       i2c->i2c_i2cmr = 0x13;  /* Enable some interupts */
                                               ^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#778: FILE: drivers/i2c/i2c-algo-8xx.c:334:
+       i2c->i2c_i2cmr = 0x13;  /* Enable some interupts */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#779: FILE: drivers/i2c/i2c-algo-8xx.c:335:
+       i2c->i2c_i2cer = 0xff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#780: FILE: drivers/i2c/i2c-algo-8xx.c:336:
+       i2c->i2c_i2mod = 1;     /* Enable */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#781: FILE: drivers/i2c/i2c-algo-8xx.c:337:
+       i2c->i2c_i2com = 0x81;  /* Start master */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: drivers/i2c/i2c-algo-8xx.c:340:
+       interruptible_sleep_on(&iic_wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#785: FILE: drivers/i2c/i2c-algo-8xx.c:341:
+       local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#786: FILE: drivers/i2c/i2c-algo-8xx.c:342:
+       if (signal_pending(current))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#786: FILE: drivers/i2c/i2c-algo-8xx.c:342:
+       if (signal_pending(current))
+               return -EIO;

ERROR:CODE_INDENT: code indent should use tabs where possible
#787: FILE: drivers/i2c/i2c-algo-8xx.c:343:
+               return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#787: FILE: drivers/i2c/i2c-algo-8xx.c:343:
+               return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#789: FILE: drivers/i2c/i2c-algo-8xx.c:345:
+       if (cpm_debug) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#789: FILE: drivers/i2c/i2c-algo-8xx.c:345:
+       if (cpm_debug) {
+               printk("tx0 sc %04x, tx1 sc %04x\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#790: FILE: drivers/i2c/i2c-algo-8xx.c:346:
+               printk("tx0 sc %04x, tx1 sc %04x\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#790: FILE: drivers/i2c/i2c-algo-8xx.c:346:
+               printk("tx0 sc %04x, tx1 sc %04x\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#790: FILE: drivers/i2c/i2c-algo-8xx.c:346:
+               printk("tx0 sc %04x, tx1 sc %04x\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#791: FILE: drivers/i2c/i2c-algo-8xx.c:347:
+                      tbdf[0].cbd_sc, tbdf[1].cbd_sc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#791: FILE: drivers/i2c/i2c-algo-8xx.c:347:
+                      tbdf[0].cbd_sc, tbdf[1].cbd_sc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#792: FILE: drivers/i2c/i2c-algo-8xx.c:348:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: drivers/i2c/i2c-algo-8xx.c:350:
+       if (tbdf->cbd_sc & BD_SC_NAK) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#794: FILE: drivers/i2c/i2c-algo-8xx.c:350:
+       if (tbdf->cbd_sc & BD_SC_NAK) {
+               printk("IIC write; no ack\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#795: FILE: drivers/i2c/i2c-algo-8xx.c:351:
+               printk("IIC write; no ack\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: drivers/i2c/i2c-algo-8xx.c:351:
+               printk("IIC write; no ack\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#795: FILE: drivers/i2c/i2c-algo-8xx.c:351:
+               printk("IIC write; no ack\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#796: FILE: drivers/i2c/i2c-algo-8xx.c:352:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#796: FILE: drivers/i2c/i2c-algo-8xx.c:352:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: drivers/i2c/i2c-algo-8xx.c:353:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#798: FILE: drivers/i2c/i2c-algo-8xx.c:354:
+         $

ERROR:CODE_INDENT: code indent should use tabs where possible
#798: FILE: drivers/i2c/i2c-algo-8xx.c:354:
+         $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: drivers/i2c/i2c-algo-8xx.c:354:
+         $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#799: FILE: drivers/i2c/i2c-algo-8xx.c:355:
+       if (tbdf->cbd_sc & BD_SC_READY) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#799: FILE: drivers/i2c/i2c-algo-8xx.c:355:
+       if (tbdf->cbd_sc & BD_SC_READY) {
+               printk("IIC write; complete but tbuf ready\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#800: FILE: drivers/i2c/i2c-algo-8xx.c:356:
+               printk("IIC write; complete but tbuf ready\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#800: FILE: drivers/i2c/i2c-algo-8xx.c:356:
+               printk("IIC write; complete but tbuf ready\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#800: FILE: drivers/i2c/i2c-algo-8xx.c:356:
+               printk("IIC write; complete but tbuf ready\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#801: FILE: drivers/i2c/i2c-algo-8xx.c:357:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#801: FILE: drivers/i2c/i2c-algo-8xx.c:357:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#802: FILE: drivers/i2c/i2c-algo-8xx.c:358:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#804: FILE: drivers/i2c/i2c-algo-8xx.c:360:
+       return count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#813: FILE: drivers/i2c/i2c-algo-8xx.c:369:
+       volatile iic_t *iip = cpm->iip;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#813: FILE: drivers/i2c/i2c-algo-8xx.c:369:
+       volatile iic_t *iip = cpm->iip;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#814: FILE: drivers/i2c/i2c-algo-8xx.c:370:
+       volatile i2c8xx_t *i2c = cpm->i2c;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#814: FILE: drivers/i2c/i2c-algo-8xx.c:370:
+       volatile i2c8xx_t *i2c = cpm->i2c;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#815: FILE: drivers/i2c/i2c-algo-8xx.c:371:
+       volatile cpm8xx_t *cp = cpm->cp;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#815: FILE: drivers/i2c/i2c-algo-8xx.c:371:
+       volatile cpm8xx_t *cp = cpm->cp;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#816: FILE: drivers/i2c/i2c-algo-8xx.c:372:
+       volatile cbd_t *tbdf, *rbdf;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#816: FILE: drivers/i2c/i2c-algo-8xx.c:372:
+       volatile cbd_t *tbdf, *rbdf;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#817: FILE: drivers/i2c/i2c-algo-8xx.c:373:
+       u_char *tb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: drivers/i2c/i2c-algo-8xx.c:374:
+       unsigned long flags, len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#820: FILE: drivers/i2c/i2c-algo-8xx.c:376:
+       if (cpm_debug > 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#820: FILE: drivers/i2c/i2c-algo-8xx.c:376:
+       if (cpm_debug > 1)
+               printk("cpm_iic_tryaddress(cpm=%p,addr=%d)\n", cpm, addr);

ERROR:CODE_INDENT: code indent should use tabs where possible
#821: FILE: drivers/i2c/i2c-algo-8xx.c:377:
+               printk("cpm_iic_tryaddress(cpm=%p,addr=%d)\n", cpm, addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: drivers/i2c/i2c-algo-8xx.c:377:
+               printk("cpm_iic_tryaddress(cpm=%p,addr=%d)\n", cpm, addr);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#821: FILE: drivers/i2c/i2c-algo-8xx.c:377:
+               printk("cpm_iic_tryaddress(cpm=%p,addr=%d)\n", cpm, addr);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpm_iic_tryaddress', this function's name, in a string
#821: FILE: drivers/i2c/i2c-algo-8xx.c:377:
+               printk("cpm_iic_tryaddress(cpm=%p,addr=%d)\n", cpm, addr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#824: FILE: drivers/i2c/i2c-algo-8xx.c:380:
+       if (cpm->reloc) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#824: FILE: drivers/i2c/i2c-algo-8xx.c:380:
+       if (cpm->reloc) {
+               cpm_reset_iic_params(iip);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#824: FILE: drivers/i2c/i2c-algo-8xx.c:380:
+       if (cpm->reloc) {
+               cpm_reset_iic_params(iip);
+       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#825: FILE: drivers/i2c/i2c-algo-8xx.c:381:
+               cpm_reset_iic_params(iip);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#825: FILE: drivers/i2c/i2c-algo-8xx.c:381:
+               cpm_reset_iic_params(iip);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#826: FILE: drivers/i2c/i2c-algo-8xx.c:382:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#828: FILE: drivers/i2c/i2c-algo-8xx.c:384:
+       if (cpm_debug && addr == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#828: FILE: drivers/i2c/i2c-algo-8xx.c:384:
+       if (cpm_debug && addr == 0) {
+               printk("iip %p, dp_addr 0x%x\n", cpm->iip, cpm->dp_addr);

ERROR:CODE_INDENT: code indent should use tabs where possible
#829: FILE: drivers/i2c/i2c-algo-8xx.c:385:
+               printk("iip %p, dp_addr 0x%x\n", cpm->iip, cpm->dp_addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#829: FILE: drivers/i2c/i2c-algo-8xx.c:385:
+               printk("iip %p, dp_addr 0x%x\n", cpm->iip, cpm->dp_addr);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#829: FILE: drivers/i2c/i2c-algo-8xx.c:385:
+               printk("iip %p, dp_addr 0x%x\n", cpm->iip, cpm->dp_addr);

ERROR:CODE_INDENT: code indent should use tabs where possible
#830: FILE: drivers/i2c/i2c-algo-8xx.c:386:
+               printk("iic_tbase %d, r_tbase %d\n", iip->iic_tbase, r_tbase);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#830: FILE: drivers/i2c/i2c-algo-8xx.c:386:
+               printk("iic_tbase %d, r_tbase %d\n", iip->iic_tbase, r_tbase);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#830: FILE: drivers/i2c/i2c-algo-8xx.c:386:
+               printk("iic_tbase %d, r_tbase %d\n", iip->iic_tbase, r_tbase);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#831: FILE: drivers/i2c/i2c-algo-8xx.c:387:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#833: FILE: drivers/i2c/i2c-algo-8xx.c:389:
+       tbdf = (cbd_t *)&cp->cp_dpmem[iip->iic_tbase];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#834: FILE: drivers/i2c/i2c-algo-8xx.c:390:
+       rbdf = (cbd_t *)&cp->cp_dpmem[iip->iic_rbase];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#836: FILE: drivers/i2c/i2c-algo-8xx.c:392:
+       tb = cpm->temp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#837: FILE: drivers/i2c/i2c-algo-8xx.c:393:
+       tb = (u_char *)(((uint)tb + 15) & ~15);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#840: FILE: drivers/i2c/i2c-algo-8xx.c:396:
+       tb[0] = (addr << 1) | 1;        /* device address (+ read) */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#841: FILE: drivers/i2c/i2c-algo-8xx.c:397:
+       len = 2;$

CHECK:SPACING: No space is necessary after a cast
#843: FILE: drivers/i2c/i2c-algo-8xx.c:399:
+       flush_dcache_range((unsigned long) tb, (unsigned long) (tb+1));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: drivers/i2c/i2c-algo-8xx.c:399:
+       flush_dcache_range((unsigned long) tb, (unsigned long) (tb+1));$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#843: FILE: drivers/i2c/i2c-algo-8xx.c:399:
+       flush_dcache_range((unsigned long) tb, (unsigned long) (tb+1));
                                                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#845: FILE: drivers/i2c/i2c-algo-8xx.c:401:
+       tbdf->cbd_bufaddr = __pa(tb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#846: FILE: drivers/i2c/i2c-algo-8xx.c:402:
+       tbdf->cbd_datlen = len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#847: FILE: drivers/i2c/i2c-algo-8xx.c:403:
+       tbdf->cbd_sc =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#848: FILE: drivers/i2c/i2c-algo-8xx.c:404:
+               BD_SC_READY | BD_SC_INTRPT | BD_SC_LAST |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#848: FILE: drivers/i2c/i2c-algo-8xx.c:404:
+               BD_SC_READY | BD_SC_INTRPT | BD_SC_LAST |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#849: FILE: drivers/i2c/i2c-algo-8xx.c:405:
+               BD_SC_WRAP | BD_IIC_START;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#849: FILE: drivers/i2c/i2c-algo-8xx.c:405:
+               BD_SC_WRAP | BD_IIC_START;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#851: FILE: drivers/i2c/i2c-algo-8xx.c:407:
+       rbdf->cbd_datlen = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#852: FILE: drivers/i2c/i2c-algo-8xx.c:408:
+       rbdf->cbd_bufaddr = __pa(tb+2);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#852: FILE: drivers/i2c/i2c-algo-8xx.c:408:
+       rbdf->cbd_bufaddr = __pa(tb+2);
                                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#853: FILE: drivers/i2c/i2c-algo-8xx.c:409:
+       rbdf->cbd_sc = BD_SC_EMPTY | BD_SC_WRAP;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#855: FILE: drivers/i2c/i2c-algo-8xx.c:411:
+       local_irq_save(flags);$

WARNING:TYPO_SPELLING: 'interupts' may be misspelled - perhaps 'interrupts'?
#856: FILE: drivers/i2c/i2c-algo-8xx.c:412:
+       i2c->i2c_i2cmr = 0x13;  /* Enable some interupts */
                                               ^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#856: FILE: drivers/i2c/i2c-algo-8xx.c:412:
+       i2c->i2c_i2cmr = 0x13;  /* Enable some interupts */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#857: FILE: drivers/i2c/i2c-algo-8xx.c:413:
+       i2c->i2c_i2cer = 0xff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#858: FILE: drivers/i2c/i2c-algo-8xx.c:414:
+       i2c->i2c_i2mod = 1;     /* Enable */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#859: FILE: drivers/i2c/i2c-algo-8xx.c:415:
+       i2c->i2c_i2com = 0x81;  /* Start master */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#861: FILE: drivers/i2c/i2c-algo-8xx.c:417:
+       if (cpm_debug > 1) printk("about to sleep\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#861: FILE: drivers/i2c/i2c-algo-8xx.c:417:
+       if (cpm_debug > 1) printk("about to sleep\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#861: FILE: drivers/i2c/i2c-algo-8xx.c:417:
+       if (cpm_debug > 1) printk("about to sleep\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#864: FILE: drivers/i2c/i2c-algo-8xx.c:420:
+       interruptible_sleep_on(&iic_wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#865: FILE: drivers/i2c/i2c-algo-8xx.c:421:
+       local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#866: FILE: drivers/i2c/i2c-algo-8xx.c:422:
+       if (signal_pending(current))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#866: FILE: drivers/i2c/i2c-algo-8xx.c:422:
+       if (signal_pending(current))
+               return -EIO;

ERROR:CODE_INDENT: code indent should use tabs where possible
#867: FILE: drivers/i2c/i2c-algo-8xx.c:423:
+               return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#867: FILE: drivers/i2c/i2c-algo-8xx.c:423:
+               return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#869: FILE: drivers/i2c/i2c-algo-8xx.c:425:
+       if (cpm_debug > 1) printk("back from sleep\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#869: FILE: drivers/i2c/i2c-algo-8xx.c:425:
+       if (cpm_debug > 1) printk("back from sleep\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#869: FILE: drivers/i2c/i2c-algo-8xx.c:425:
+       if (cpm_debug > 1) printk("back from sleep\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#871: FILE: drivers/i2c/i2c-algo-8xx.c:427:
+       if (tbdf->cbd_sc & BD_SC_NAK) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#871: FILE: drivers/i2c/i2c-algo-8xx.c:427:
+       if (tbdf->cbd_sc & BD_SC_NAK) {
+               if (cpm_debug > 1) printk("IIC try; no ack\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#872: FILE: drivers/i2c/i2c-algo-8xx.c:428:
+               if (cpm_debug > 1) printk("IIC try; no ack\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#872: FILE: drivers/i2c/i2c-algo-8xx.c:428:
+               if (cpm_debug > 1) printk("IIC try; no ack\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#872: FILE: drivers/i2c/i2c-algo-8xx.c:428:
+               if (cpm_debug > 1) printk("IIC try; no ack\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#872: FILE: drivers/i2c/i2c-algo-8xx.c:428:
+               if (cpm_debug > 1) printk("IIC try; no ack\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#873: FILE: drivers/i2c/i2c-algo-8xx.c:429:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#873: FILE: drivers/i2c/i2c-algo-8xx.c:429:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#874: FILE: drivers/i2c/i2c-algo-8xx.c:430:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#875: FILE: drivers/i2c/i2c-algo-8xx.c:431:
+         $

ERROR:CODE_INDENT: code indent should use tabs where possible
#875: FILE: drivers/i2c/i2c-algo-8xx.c:431:
+         $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#875: FILE: drivers/i2c/i2c-algo-8xx.c:431:
+         $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#876: FILE: drivers/i2c/i2c-algo-8xx.c:432:
+       if (tbdf->cbd_sc & BD_SC_READY) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#876: FILE: drivers/i2c/i2c-algo-8xx.c:432:
+       if (tbdf->cbd_sc & BD_SC_READY) {
+               printk("IIC try; complete but tbuf ready\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#876: FILE: drivers/i2c/i2c-algo-8xx.c:432:
+       if (tbdf->cbd_sc & BD_SC_READY) {
+               printk("IIC try; complete but tbuf ready\n");
+       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#877: FILE: drivers/i2c/i2c-algo-8xx.c:433:
+               printk("IIC try; complete but tbuf ready\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#877: FILE: drivers/i2c/i2c-algo-8xx.c:433:
+               printk("IIC try; complete but tbuf ready\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#877: FILE: drivers/i2c/i2c-algo-8xx.c:433:
+               printk("IIC try; complete but tbuf ready\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#878: FILE: drivers/i2c/i2c-algo-8xx.c:434:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#879: FILE: drivers/i2c/i2c-algo-8xx.c:435:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#879: FILE: drivers/i2c/i2c-algo-8xx.c:435:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#880: FILE: drivers/i2c/i2c-algo-8xx.c:436:
+       return 1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#884: FILE: drivers/i2c/i2c-algo-8xx.c:440:
+                   struct i2c_msg msgs[], $

ERROR:CODE_INDENT: code indent should use tabs where possible
#884: FILE: drivers/i2c/i2c-algo-8xx.c:440:
+                   struct i2c_msg msgs[], $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#884: FILE: drivers/i2c/i2c-algo-8xx.c:440:
+static int cpm_xfer(struct i2c_adapter *i2c_adap,
+                   struct i2c_msg msgs[], 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#884: FILE: drivers/i2c/i2c-algo-8xx.c:440:
+                   struct i2c_msg msgs[], $

ERROR:CODE_INDENT: code indent should use tabs where possible
#885: FILE: drivers/i2c/i2c-algo-8xx.c:441:
+                   int num)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#885: FILE: drivers/i2c/i2c-algo-8xx.c:441:
+                   int num)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#887: FILE: drivers/i2c/i2c-algo-8xx.c:443:
+       struct i2c_algo_8xx_data *adap = i2c_adap->algo_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#888: FILE: drivers/i2c/i2c-algo-8xx.c:444:
+       struct i2c_msg *pmsg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#889: FILE: drivers/i2c/i2c-algo-8xx.c:445:
+       int i, ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#890: FILE: drivers/i2c/i2c-algo-8xx.c:446:
+       u_char addr;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#891: FILE: drivers/i2c/i2c-algo-8xx.c:447:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#891: FILE: drivers/i2c/i2c-algo-8xx.c:447:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#892: FILE: drivers/i2c/i2c-algo-8xx.c:448:
+       for (i = 0; i < num; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#892: FILE: drivers/i2c/i2c-algo-8xx.c:448:
+       for (i = 0; i < num; i++) {
+               pmsg = &msgs[i];

ERROR:CODE_INDENT: code indent should use tabs where possible
#893: FILE: drivers/i2c/i2c-algo-8xx.c:449:
+               pmsg = &msgs[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#893: FILE: drivers/i2c/i2c-algo-8xx.c:449:
+               pmsg = &msgs[i];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#895: FILE: drivers/i2c/i2c-algo-8xx.c:451:
+               if (cpm_debug)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#895: FILE: drivers/i2c/i2c-algo-8xx.c:451:
+               if (cpm_debug)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#895: FILE: drivers/i2c/i2c-algo-8xx.c:451:
+               if (cpm_debug)
+                       printk("i2c-algo-8xx.o: "

ERROR:CODE_INDENT: code indent should use tabs where possible
#896: FILE: drivers/i2c/i2c-algo-8xx.c:452:
+                       printk("i2c-algo-8xx.o: "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#896: FILE: drivers/i2c/i2c-algo-8xx.c:452:
+                       printk("i2c-algo-8xx.o: "$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#896: FILE: drivers/i2c/i2c-algo-8xx.c:452:
+                       printk("i2c-algo-8xx.o: "

ERROR:CODE_INDENT: code indent should use tabs where possible
#897: FILE: drivers/i2c/i2c-algo-8xx.c:453:
+                              "#%d addr=0x%x flags=0x%x len=%d\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#897: FILE: drivers/i2c/i2c-algo-8xx.c:453:
+                              "#%d addr=0x%x flags=0x%x len=%d\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#897: FILE: drivers/i2c/i2c-algo-8xx.c:453:
+                       printk("i2c-algo-8xx.o: "
+                              "#%d addr=0x%x flags=0x%x len=%d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#898: FILE: drivers/i2c/i2c-algo-8xx.c:454:
+                              i, pmsg->addr, pmsg->flags, pmsg->len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#898: FILE: drivers/i2c/i2c-algo-8xx.c:454:
+                              i, pmsg->addr, pmsg->flags, pmsg->len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#900: FILE: drivers/i2c/i2c-algo-8xx.c:456:
+               addr = pmsg->addr << 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#900: FILE: drivers/i2c/i2c-algo-8xx.c:456:
+               addr = pmsg->addr << 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#901: FILE: drivers/i2c/i2c-algo-8xx.c:457:
+               if (pmsg->flags & I2C_M_RD )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#901: FILE: drivers/i2c/i2c-algo-8xx.c:457:
+               if (pmsg->flags & I2C_M_RD )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#901: FILE: drivers/i2c/i2c-algo-8xx.c:457:
+               if (pmsg->flags & I2C_M_RD )
+                       addr |= 1;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#901: FILE: drivers/i2c/i2c-algo-8xx.c:457:
+               if (pmsg->flags & I2C_M_RD )

ERROR:CODE_INDENT: code indent should use tabs where possible
#902: FILE: drivers/i2c/i2c-algo-8xx.c:458:
+                       addr |= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#902: FILE: drivers/i2c/i2c-algo-8xx.c:458:
+                       addr |= 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#903: FILE: drivers/i2c/i2c-algo-8xx.c:459:
+               if (pmsg->flags & I2C_M_REV_DIR_ADDR )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#903: FILE: drivers/i2c/i2c-algo-8xx.c:459:
+               if (pmsg->flags & I2C_M_REV_DIR_ADDR )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#903: FILE: drivers/i2c/i2c-algo-8xx.c:459:
+               if (pmsg->flags & I2C_M_REV_DIR_ADDR )
+                       addr ^= 1;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#903: FILE: drivers/i2c/i2c-algo-8xx.c:459:
+               if (pmsg->flags & I2C_M_REV_DIR_ADDR )

ERROR:CODE_INDENT: code indent should use tabs where possible
#904: FILE: drivers/i2c/i2c-algo-8xx.c:460:
+                       addr ^= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#904: FILE: drivers/i2c/i2c-algo-8xx.c:460:
+                       addr ^= 1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#905: FILE: drivers/i2c/i2c-algo-8xx.c:461:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: drivers/i2c/i2c-algo-8xx.c:461:
+    $

ERROR:CODE_INDENT: code indent should use tabs where possible
#906: FILE: drivers/i2c/i2c-algo-8xx.c:462:
+               if (!(pmsg->flags & I2C_M_NOSTART)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#906: FILE: drivers/i2c/i2c-algo-8xx.c:462:
+               if (!(pmsg->flags & I2C_M_NOSTART)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 15)
#906: FILE: drivers/i2c/i2c-algo-8xx.c:462:
+               if (!(pmsg->flags & I2C_M_NOSTART)) {
+               }

WARNING:BRACES: braces {} are not necessary for single statement blocks
#906: FILE: drivers/i2c/i2c-algo-8xx.c:462:
+               if (!(pmsg->flags & I2C_M_NOSTART)) {
+               }

ERROR:CODE_INDENT: code indent should use tabs where possible
#907: FILE: drivers/i2c/i2c-algo-8xx.c:463:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#907: FILE: drivers/i2c/i2c-algo-8xx.c:463:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#908: FILE: drivers/i2c/i2c-algo-8xx.c:464:
+               if (pmsg->flags & I2C_M_RD ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#908: FILE: drivers/i2c/i2c-algo-8xx.c:464:
+               if (pmsg->flags & I2C_M_RD ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#908: FILE: drivers/i2c/i2c-algo-8xx.c:464:
+               if (pmsg->flags & I2C_M_RD ) {
[...]
+                       ret = cpm_iic_read(adap, addr, pmsg->buf, pmsg->len);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#908: FILE: drivers/i2c/i2c-algo-8xx.c:464:
+               if (pmsg->flags & I2C_M_RD ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#909: FILE: drivers/i2c/i2c-algo-8xx.c:465:
+                       /* read bytes into buffer*/$

ERROR:CODE_INDENT: code indent should use tabs where possible
#910: FILE: drivers/i2c/i2c-algo-8xx.c:466:
+                       ret = cpm_iic_read(adap, addr, pmsg->buf, pmsg->len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#910: FILE: drivers/i2c/i2c-algo-8xx.c:466:
+                       ret = cpm_iic_read(adap, addr, pmsg->buf, pmsg->len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#911: FILE: drivers/i2c/i2c-algo-8xx.c:467:
+                       if (cpm_debug)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#911: FILE: drivers/i2c/i2c-algo-8xx.c:467:
+                       if (cpm_debug)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#911: FILE: drivers/i2c/i2c-algo-8xx.c:467:
+                       if (cpm_debug)
+                               printk("i2c-algo-8xx.o: read %d bytes\n", ret);

ERROR:CODE_INDENT: code indent should use tabs where possible
#912: FILE: drivers/i2c/i2c-algo-8xx.c:468:
+                               printk("i2c-algo-8xx.o: read %d bytes\n", ret);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#912: FILE: drivers/i2c/i2c-algo-8xx.c:468:
+                               printk("i2c-algo-8xx.o: read %d bytes\n", ret);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#912: FILE: drivers/i2c/i2c-algo-8xx.c:468:
+                               printk("i2c-algo-8xx.o: read %d bytes\n", ret);

ERROR:CODE_INDENT: code indent should use tabs where possible
#913: FILE: drivers/i2c/i2c-algo-8xx.c:469:
+                       if (ret < pmsg->len ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#913: FILE: drivers/i2c/i2c-algo-8xx.c:469:
+                       if (ret < pmsg->len ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#913: FILE: drivers/i2c/i2c-algo-8xx.c:469:
+                       if (ret < pmsg->len ) {
+                               return (ret<0)? ret : -EREMOTEIO;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#913: FILE: drivers/i2c/i2c-algo-8xx.c:469:
+                       if (ret < pmsg->len ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#913: FILE: drivers/i2c/i2c-algo-8xx.c:469:
+                       if (ret < pmsg->len ) {
+                               return (ret<0)? ret : -EREMOTEIO;
+                       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#914: FILE: drivers/i2c/i2c-algo-8xx.c:470:
+                               return (ret<0)? ret : -EREMOTEIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#914: FILE: drivers/i2c/i2c-algo-8xx.c:470:
+                               return (ret<0)? ret : -EREMOTEIO;$

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#914: FILE: drivers/i2c/i2c-algo-8xx.c:470:
+                               return (ret<0)? ret : -EREMOTEIO;
                                           ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#914: FILE: drivers/i2c/i2c-algo-8xx.c:470:
+                               return (ret<0)? ret : -EREMOTEIO;
                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#915: FILE: drivers/i2c/i2c-algo-8xx.c:471:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#915: FILE: drivers/i2c/i2c-algo-8xx.c:471:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#916: FILE: drivers/i2c/i2c-algo-8xx.c:472:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#916: FILE: drivers/i2c/i2c-algo-8xx.c:472:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#916: FILE: drivers/i2c/i2c-algo-8xx.c:472:
+               } else {
[...]
+                       ret = cpm_iic_write(adap, addr, pmsg->buf, pmsg->len);

ERROR:CODE_INDENT: code indent should use tabs where possible
#917: FILE: drivers/i2c/i2c-algo-8xx.c:473:
+                       /* write bytes from buffer */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#918: FILE: drivers/i2c/i2c-algo-8xx.c:474:
+                       ret = cpm_iic_write(adap, addr, pmsg->buf, pmsg->len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#918: FILE: drivers/i2c/i2c-algo-8xx.c:474:
+                       ret = cpm_iic_write(adap, addr, pmsg->buf, pmsg->len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#919: FILE: drivers/i2c/i2c-algo-8xx.c:475:
+                       if (cpm_debug)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#919: FILE: drivers/i2c/i2c-algo-8xx.c:475:
+                       if (cpm_debug)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#919: FILE: drivers/i2c/i2c-algo-8xx.c:475:
+                       if (cpm_debug)
+                               printk("i2c-algo-8xx.o: wrote %d\n", ret);

ERROR:CODE_INDENT: code indent should use tabs where possible
#920: FILE: drivers/i2c/i2c-algo-8xx.c:476:
+                               printk("i2c-algo-8xx.o: wrote %d\n", ret);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: drivers/i2c/i2c-algo-8xx.c:476:
+                               printk("i2c-algo-8xx.o: wrote %d\n", ret);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#920: FILE: drivers/i2c/i2c-algo-8xx.c:476:
+                               printk("i2c-algo-8xx.o: wrote %d\n", ret);

ERROR:CODE_INDENT: code indent should use tabs where possible
#921: FILE: drivers/i2c/i2c-algo-8xx.c:477:
+                       if (ret < pmsg->len ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: drivers/i2c/i2c-algo-8xx.c:477:
+                       if (ret < pmsg->len ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#921: FILE: drivers/i2c/i2c-algo-8xx.c:477:
+                       if (ret < pmsg->len ) {
+                               return (ret<0) ? ret : -EREMOTEIO;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#921: FILE: drivers/i2c/i2c-algo-8xx.c:477:
+                       if (ret < pmsg->len ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#921: FILE: drivers/i2c/i2c-algo-8xx.c:477:
+                       if (ret < pmsg->len ) {
+                               return (ret<0) ? ret : -EREMOTEIO;
+                       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#922: FILE: drivers/i2c/i2c-algo-8xx.c:478:
+                               return (ret<0) ? ret : -EREMOTEIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#922: FILE: drivers/i2c/i2c-algo-8xx.c:478:
+                               return (ret<0) ? ret : -EREMOTEIO;$

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#922: FILE: drivers/i2c/i2c-algo-8xx.c:478:
+                               return (ret<0) ? ret : -EREMOTEIO;
                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#923: FILE: drivers/i2c/i2c-algo-8xx.c:479:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#923: FILE: drivers/i2c/i2c-algo-8xx.c:479:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#924: FILE: drivers/i2c/i2c-algo-8xx.c:480:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#924: FILE: drivers/i2c/i2c-algo-8xx.c:480:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#925: FILE: drivers/i2c/i2c-algo-8xx.c:481:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#926: FILE: drivers/i2c/i2c-algo-8xx.c:482:
+       return (num);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#929: FILE: drivers/i2c/i2c-algo-8xx.c:485:
+static int algo_control(struct i2c_adapter *adapter, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#930: FILE: drivers/i2c/i2c-algo-8xx.c:486:
+static int algo_control(struct i2c_adapter *adapter, 
+       unsigned int cmd, unsigned long arg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#930: FILE: drivers/i2c/i2c-algo-8xx.c:486:
+       unsigned int cmd, unsigned long arg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#932: FILE: drivers/i2c/i2c-algo-8xx.c:488:
+       return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#937: FILE: drivers/i2c/i2c-algo-8xx.c:493:
+       return I2C_FUNC_SMBUS_EMUL | I2C_FUNC_10BIT_ADDR | $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#937: FILE: drivers/i2c/i2c-algo-8xx.c:493:
+       return I2C_FUNC_SMBUS_EMUL | I2C_FUNC_10BIT_ADDR | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#938: FILE: drivers/i2c/i2c-algo-8xx.c:494:
+              I2C_FUNC_PROTOCOL_MANGLING; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#938: FILE: drivers/i2c/i2c-algo-8xx.c:494:
+              I2C_FUNC_PROTOCOL_MANGLING; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#938: FILE: drivers/i2c/i2c-algo-8xx.c:494:
+              I2C_FUNC_PROTOCOL_MANGLING; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: drivers/i2c/i2c-algo-8xx.c:500:
+       "MPC8xx CPM algorithm",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: drivers/i2c/i2c-algo-8xx.c:501:
+       I2C_ALGO_MPC8XX,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: drivers/i2c/i2c-algo-8xx.c:502:
+       cpm_xfer,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#947: FILE: drivers/i2c/i2c-algo-8xx.c:503:
+       NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: drivers/i2c/i2c-algo-8xx.c:504:
+       NULL,                           /* slave_xmit           */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#949: FILE: drivers/i2c/i2c-algo-8xx.c:505:
+       NULL,                           /* slave_recv           */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: drivers/i2c/i2c-algo-8xx.c:506:
+       algo_control,                   /* ioctl                */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: drivers/i2c/i2c-algo-8xx.c:507:
+       cpm_func,                       /* functionality        */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#954: FILE: drivers/i2c/i2c-algo-8xx.c:510:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#955: FILE: drivers/i2c/i2c-algo-8xx.c:511:
+ * registering functions to load algorithms at runtime $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#959: FILE: drivers/i2c/i2c-algo-8xx.c:515:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#960: FILE: drivers/i2c/i2c-algo-8xx.c:516:
+       struct i2c_algo_8xx_data *cpm_adap = adap->algo_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: drivers/i2c/i2c-algo-8xx.c:518:
+       if (cpm_debug)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#962: FILE: drivers/i2c/i2c-algo-8xx.c:518:
+       if (cpm_debug)
+               printk("i2c-algo-8xx.o: hw routines for %s registered.\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#963: FILE: drivers/i2c/i2c-algo-8xx.c:519:
+               printk("i2c-algo-8xx.o: hw routines for %s registered.\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: drivers/i2c/i2c-algo-8xx.c:519:
+               printk("i2c-algo-8xx.o: hw routines for %s registered.\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#963: FILE: drivers/i2c/i2c-algo-8xx.c:519:
+               printk("i2c-algo-8xx.o: hw routines for %s registered.\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#964: FILE: drivers/i2c/i2c-algo-8xx.c:520:
+                      adap->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#964: FILE: drivers/i2c/i2c-algo-8xx.c:520:
+                      adap->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#968: FILE: drivers/i2c/i2c-algo-8xx.c:524:
+       adap->id |= cpm_algo.id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#969: FILE: drivers/i2c/i2c-algo-8xx.c:525:
+       adap->algo = &cpm_algo;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: drivers/i2c/i2c-algo-8xx.c:528:
+       MOD_INC_USE_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#975: FILE: drivers/i2c/i2c-algo-8xx.c:531:
+       i2c_add_adapter(adap);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#976: FILE: drivers/i2c/i2c-algo-8xx.c:532:
+       cpm_iic_init(cpm_adap);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#979: FILE: drivers/i2c/i2c-algo-8xx.c:535:
+       if (cpm_scan) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#979: FILE: drivers/i2c/i2c-algo-8xx.c:535:
+       if (cpm_scan) {
+               printk(KERN_INFO " i2c-algo-8xx.o: scanning bus %s...\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#980: FILE: drivers/i2c/i2c-algo-8xx.c:536:
+               printk(KERN_INFO " i2c-algo-8xx.o: scanning bus %s...\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#980: FILE: drivers/i2c/i2c-algo-8xx.c:536:
+               printk(KERN_INFO " i2c-algo-8xx.o: scanning bus %s...\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#980: FILE: drivers/i2c/i2c-algo-8xx.c:536:
+               printk(KERN_INFO " i2c-algo-8xx.o: scanning bus %s...\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#981: FILE: drivers/i2c/i2c-algo-8xx.c:537:
+                      adap->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#981: FILE: drivers/i2c/i2c-algo-8xx.c:537:
+                      adap->name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#982: FILE: drivers/i2c/i2c-algo-8xx.c:538:
+               for (i = 0; i < 128; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#982: FILE: drivers/i2c/i2c-algo-8xx.c:538:
+               for (i = 0; i < 128; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#982: FILE: drivers/i2c/i2c-algo-8xx.c:538:
+               for (i = 0; i < 128; i++) {
+                       if (cpm_iic_tryaddress(cpm_adap, i)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#983: FILE: drivers/i2c/i2c-algo-8xx.c:539:
+                       if (cpm_iic_tryaddress(cpm_adap, i)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#983: FILE: drivers/i2c/i2c-algo-8xx.c:539:
+                       if (cpm_iic_tryaddress(cpm_adap, i)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#983: FILE: drivers/i2c/i2c-algo-8xx.c:539:
+                       if (cpm_iic_tryaddress(cpm_adap, i)) {
+                               printk("(%02x)",i<<1); 

WARNING:BRACES: braces {} are not necessary for single statement blocks
#983: FILE: drivers/i2c/i2c-algo-8xx.c:539:
+                       if (cpm_iic_tryaddress(cpm_adap, i)) {
+                               printk("(%02x)",i<<1); 
+                       }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#984: FILE: drivers/i2c/i2c-algo-8xx.c:540:
+                               printk("(%02x)",i<<1); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#984: FILE: drivers/i2c/i2c-algo-8xx.c:540:
+                               printk("(%02x)",i<<1); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#984: FILE: drivers/i2c/i2c-algo-8xx.c:540:
+                               printk("(%02x)",i<<1); $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#984: FILE: drivers/i2c/i2c-algo-8xx.c:540:
+                               printk("(%02x)",i<<1); 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#984: FILE: drivers/i2c/i2c-algo-8xx.c:540:
+                               printk("(%02x)",i<<1); 
                                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#984: FILE: drivers/i2c/i2c-algo-8xx.c:540:
+                               printk("(%02x)",i<<1); 
                                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#985: FILE: drivers/i2c/i2c-algo-8xx.c:541:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: drivers/i2c/i2c-algo-8xx.c:541:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#986: FILE: drivers/i2c/i2c-algo-8xx.c:542:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#986: FILE: drivers/i2c/i2c-algo-8xx.c:542:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#987: FILE: drivers/i2c/i2c-algo-8xx.c:543:
+               printk("\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#987: FILE: drivers/i2c/i2c-algo-8xx.c:543:
+               printk("\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#987: FILE: drivers/i2c/i2c-algo-8xx.c:543:
+               printk("\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: drivers/i2c/i2c-algo-8xx.c:544:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#989: FILE: drivers/i2c/i2c-algo-8xx.c:545:
+       return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#992: FILE: drivers/i2c/i2c-algo-8xx.c:548:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#995: FILE: drivers/i2c/i2c-algo-8xx.c:551:
+       int res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#996: FILE: drivers/i2c/i2c-algo-8xx.c:552:
+       struct i2c_algo_8xx_data *cpm_adap = adap->algo_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#998: FILE: drivers/i2c/i2c-algo-8xx.c:554:
+       cpm_iic_shutdown(cpm_adap);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1000: FILE: drivers/i2c/i2c-algo-8xx.c:556:
+       if ((res = i2c_del_adapter(adap)) < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1000: FILE: drivers/i2c/i2c-algo-8xx.c:556:
+       if ((res = i2c_del_adapter(adap)) < 0)
+               return res;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1000: FILE: drivers/i2c/i2c-algo-8xx.c:556:
+       if ((res = i2c_del_adapter(adap)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1001: FILE: drivers/i2c/i2c-algo-8xx.c:557:
+               return res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1001: FILE: drivers/i2c/i2c-algo-8xx.c:557:
+               return res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1003: FILE: drivers/i2c/i2c-algo-8xx.c:559:
+       printk("i2c-algo-8xx.o: adapter unregistered: %s\n",adap->name);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1003: FILE: drivers/i2c/i2c-algo-8xx.c:559:
+       printk("i2c-algo-8xx.o: adapter unregistered: %s\n",adap->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1003: FILE: drivers/i2c/i2c-algo-8xx.c:559:
+       printk("i2c-algo-8xx.o: adapter unregistered: %s\n",adap->name);
                                                           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1006: FILE: drivers/i2c/i2c-algo-8xx.c:562:
+       MOD_DEC_USE_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1008: FILE: drivers/i2c/i2c-algo-8xx.c:564:
+       return 0;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1011: FILE: drivers/i2c/i2c-algo-8xx.c:567:
+EXPORT_SYMBOL(i2c_8xx_add_bus);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1012: FILE: drivers/i2c/i2c-algo-8xx.c:568:
+EXPORT_SYMBOL(i2c_8xx_del_bus);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1014: FILE: drivers/i2c/i2c-algo-8xx.c:570:
+int __init i2c_algo_8xx_init (void)

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1016: FILE: drivers/i2c/i2c-algo-8xx.c:572:
+       printk("i2c-algo-8xx.o: i2c mpc8xx algorithm module version %s (%s)\n", I2C_VERSION, I2C_DATE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1016: FILE: drivers/i2c/i2c-algo-8xx.c:572:
+       printk("i2c-algo-8xx.o: i2c mpc8xx algorithm module version %s (%s)\n", I2C_VERSION, I2C_DATE);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1016: FILE: drivers/i2c/i2c-algo-8xx.c:572:
+       printk("i2c-algo-8xx.o: i2c mpc8xx algorithm module version %s (%s)\n", I2C_VERSION, I2C_DATE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1017: FILE: drivers/i2c/i2c-algo-8xx.c:573:
+       return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1020: FILE: drivers/i2c/i2c-algo-8xx.c:576:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1028: FILE: drivers/i2c/i2c-algo-8xx.c:584:
+int init_module(void) $

CHECK:SPACING: No space is necessary after a cast
#1028: FILE: drivers/i2c/i2c-algo-8xx.c:584:
+int init_module(void) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1030: FILE: drivers/i2c/i2c-algo-8xx.c:586:
+       return i2c_algo_8xx_init();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1033: FILE: drivers/i2c/i2c-algo-8xx.c:589:
+void cleanup_module(void) $

CHECK:SPACING: No space is necessary after a cast
#1033: FILE: drivers/i2c/i2c-algo-8xx.c:589:
+void cleanup_module(void) 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1040: FILE: include/linux/i2c-algo-8xx.h:1:
+/* ------------------------------------------------------------------------- */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1043: FILE: include/linux/i2c-algo-8xx.h:4:
+/*
+    This program is free software; you can redistribute it and/or modify

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1054: FILE: include/linux/i2c-algo-8xx.h:15:
+    along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1055: FILE: include/linux/i2c-algo-8xx.h:16:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1055: FILE: include/linux/i2c-algo-8xx.h:16:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                */

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1058: FILE: include/linux/i2c-algo-8xx.h:19:
+/* $Id: i2c-algo-8xx.h,v 1.3 2002/06/12 02:29:54 mds Exp $ */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1066: FILE: include/linux/i2c-algo-8xx.h:27:
+       uint dp_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1067: FILE: include/linux/i2c-algo-8xx.h:28:
+       int reloc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1068: FILE: include/linux/i2c-algo-8xx.h:29:
+       volatile i2c8xx_t *i2c;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1068: FILE: include/linux/i2c-algo-8xx.h:29:
+       volatile i2c8xx_t *i2c;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1069: FILE: include/linux/i2c-algo-8xx.h:30:
+       volatile iic_t  *iip;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1069: FILE: include/linux/i2c-algo-8xx.h:30:
+       volatile iic_t  *iip;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1070: FILE: include/linux/i2c-algo-8xx.h:31:
+       volatile cpm8xx_t *cp;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1070: FILE: include/linux/i2c-algo-8xx.h:31:
+       volatile cpm8xx_t *cp;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1072: FILE: include/linux/i2c-algo-8xx.h:33:
+       int     (*setisr) (int irq,$

WARNING:SPACING: Unnecessary space before function pointer arguments
#1072: FILE: include/linux/i2c-algo-8xx.h:33:
+       int     (*setisr) (int irq,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1073: FILE: include/linux/i2c-algo-8xx.h:34:
+                          void (*func)(void *, void *),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1073: FILE: include/linux/i2c-algo-8xx.h:34:
+                          void (*func)(void *, void *),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1074: FILE: include/linux/i2c-algo-8xx.h:35:
+                          void *data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1074: FILE: include/linux/i2c-algo-8xx.h:35:
+                          void *data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1076: FILE: include/linux/i2c-algo-8xx.h:37:
+       u_char  temp[513];$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct i2c_adapter *' should also have an identifier name
#1079: FILE: include/linux/i2c-algo-8xx.h:40:
+int i2c_8xx_add_bus(struct i2c_adapter *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct i2c_adapter *' should also have an identifier name
#1080: FILE: include/linux/i2c-algo-8xx.h:41:
+int i2c_8xx_del_bus(struct i2c_adapter *);

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1090: FILE: drivers/i2c/i2c-algo-bit.c:24:
+/* $Id: i2c-algo-bit.c,v 1.37 2002/07/08 00:41:49 mds Exp $ */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1099: FILE: drivers/i2c/i2c-algo-bit.c:151:
+       sclhi(adap);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1106: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1107: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:2:
+/*
+   -------------------------------------------------------------------------

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1108: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:3:
+   i2c-algo-ibm_ocp.c i2c driver algorithms for IBM PPC 405 adapters       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1110: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:5:
+      $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1118: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:13:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1123: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:18:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1125: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:20:
+                   1998-2000 Hans Berglund$

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#1127: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:22:
+   With some changes from Kyösti Mälkki <kmalkki@cc.hut.fi> and 
                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1127: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:22:
+   With some changes from Kyösti Mälkki <kmalkki@cc.hut.fi> and $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1131: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:26:
+
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1143: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:38:
+    along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1144: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:39:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1149: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:44:
+       ported up to 2.4.16+    $

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#1154: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:49:
+       added Gérard Basler's fix to iic_combined_transaction() such that it 
               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1154: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:49:
+       added Gérard Basler's fix to iic_combined_transaction() such that it $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1158: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:53:
+
+

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1165: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:60:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1178: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:73:
+
+

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#1180: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:75:
+#define DEB(x) if (i2c_debug>=1) x
                             ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1180: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:75:
+#define DEB(x) if (i2c_debug>=1) x

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#1181: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:76:
+#define DEB2(x) if (i2c_debug>=2) x
                              ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1181: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:76:
+#define DEB2(x) if (i2c_debug>=2) x

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#1182: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:77:
+#define DEB3(x) if (i2c_debug>=3) x /* print several statistical values*/
                              ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1182: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:77:
+#define DEB3(x) if (i2c_debug>=3) x /* print several statistical values*/

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#1183: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:78:
+#define DEBPROTO(x) if (i2c_debug>=9) x;
                                  ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1183: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:78:
+#define DEBPROTO(x) if (i2c_debug>=9) x;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1183: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:78:
+#define DEBPROTO(x) if (i2c_debug>=9) x;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1192: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:87:
+/*
+#define SLO_IO      jif=jiffies;while(jiffies<=jif+i2c_table[minor].veryslow)\

ERROR:CODE_INDENT: code indent should use tabs where possible
#1193: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:88:
+                        if (need_resched) schedule();$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1196: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:91:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1200: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:95:
+       int jif;$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1205: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:100:
+static int i2c_debug=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1205: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:100:
+static int i2c_debug=0;
                     ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1206: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:101:
+static int iic_scan=0; /* have a look at what's hanging 'round         */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1206: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:101:
+static int iic_scan=0; /* have a look at what's hanging 'round         */
                    ^

CHECK:SPACING: No space is necessary after a cast
#1210: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:105:
+#define iic_outb(adap, reg, val) adap->setiic(adap->data, (int) &(reg), val)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'adap' - possible side-effects?
#1210: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:105:
+#define iic_outb(adap, reg, val) adap->setiic(adap->data, (int) &(reg), val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'adap' may be better as '(adap)' to avoid precedence issues
#1210: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:105:
+#define iic_outb(adap, reg, val) adap->setiic(adap->data, (int) &(reg), val)

CHECK:SPACING: No space is necessary after a cast
#1211: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:106:
+#define iic_inb(adap, reg) adap->getiic(adap->data, (int) &(reg))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'adap' - possible side-effects?
#1211: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:106:
+#define iic_inb(adap, reg) adap->getiic(adap->data, (int) &(reg))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'adap' may be better as '(adap)' to avoid precedence issues
#1211: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:106:
+#define iic_inb(adap, reg) adap->getiic(adap->data, (int) &(reg))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1228: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:123:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1230: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:125:
+// Description: Puts this process to sleep for a period equal to timeout $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1234: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:129:
+       schedule_timeout( timeout * HZ);$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1234: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:129:
+       schedule_timeout( timeout * HZ);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1237: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:132:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1242: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:137:
+static int iic_init (struct i2c_algo_iic_data *adap)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1244: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:139:
+       struct iic_regs *iic;   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1244: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:139:
+       struct iic_regs *iic;   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1245: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:140:
+       struct iic_ibm *adap_priv_data = adap->data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1246: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:141:
+       unsigned short  retval;$

CHECK:SPACING: No space is necessary after a cast
#1247: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:142:
+       iic = (struct iic_regs *) adap_priv_data->iic_base;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1247: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:142:
+       unsigned short  retval;
+       iic = (struct iic_regs *) adap_priv_data->iic_base;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1247: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:142:
+       iic = (struct iic_regs *) adap_priv_data->iic_base;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1249: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:144:
+        /* Clear master low master address */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1250: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:145:
+        iic_outb(adap,iic->lmadr, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1250: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:145:
+        iic_outb(adap,iic->lmadr, 0);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1250: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:145:
+        iic_outb(adap,iic->lmadr, 0);
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1252: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:147:
+        /* Clear high master address */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1253: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:148:
+        iic_outb(adap,iic->hmadr, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1253: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:148:
+        iic_outb(adap,iic->hmadr, 0);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1253: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:148:
+        iic_outb(adap,iic->hmadr, 0);
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1255: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:150:
+        /* Clear low slave address */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1256: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:151:
+        iic_outb(adap,iic->lsadr, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1256: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:151:
+        iic_outb(adap,iic->lsadr, 0);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1256: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:151:
+        iic_outb(adap,iic->lsadr, 0);
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1258: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:153:
+        /* Clear high slave address */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1259: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:154:
+        iic_outb(adap,iic->hsadr, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1259: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:154:
+        iic_outb(adap,iic->hsadr, 0);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1259: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:154:
+        iic_outb(adap,iic->hsadr, 0);
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1261: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:156:
+        /* Clear status */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1262: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:157:
+        iic_outb(adap,iic->sts, 0x0a);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1262: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:157:
+        iic_outb(adap,iic->sts, 0x0a);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1262: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:157:
+        iic_outb(adap,iic->sts, 0x0a);
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1264: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:159:
+        /* Clear extended status */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1265: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:160:
+        iic_outb(adap,iic->extsts, 0x8f);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1265: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:160:
+        iic_outb(adap,iic->extsts, 0x8f);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1265: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:160:
+        iic_outb(adap,iic->extsts, 0x8f);
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1267: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:162:
+        /* Set clock division */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1268: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:163:
+        iic_outb(adap,iic->clkdiv, 0x04);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1268: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:163:
+        iic_outb(adap,iic->clkdiv, 0x04);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1268: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:163:
+        iic_outb(adap,iic->clkdiv, 0x04);
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1270: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:165:
+       retval = iic_inb(adap, iic->clkdiv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1271: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:166:
+       DEB(printk("iic_init: CLKDIV register = %x\n", retval));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1271: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:166:
+       DEB(printk("iic_init: CLKDIV register = %x\n", retval));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_init', this function's name, in a string
#1271: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:166:
+       DEB(printk("iic_init: CLKDIV register = %x\n", retval));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1273: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:168:
+        /* Enable interrupts on Requested Master Transfer Complete */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1274: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:169:
+        iic_outb(adap,iic->intmsk, 0x01);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1274: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:169:
+        iic_outb(adap,iic->intmsk, 0x01);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1274: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:169:
+        iic_outb(adap,iic->intmsk, 0x01);
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1276: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:171:
+        /* Clear transfer count */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1277: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:172:
+        iic_outb(adap,iic->xfrcnt, 0x0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1277: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:172:
+        iic_outb(adap,iic->xfrcnt, 0x0);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1277: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:172:
+        iic_outb(adap,iic->xfrcnt, 0x0);
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1279: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:174:
+        /* Clear extended control and status */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1280: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:175:
+        iic_outb(adap,iic->xtcntlss, 0xf0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1280: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:175:
+        iic_outb(adap,iic->xtcntlss, 0xf0);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1280: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:175:
+        iic_outb(adap,iic->xtcntlss, 0xf0);
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1282: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:177:
+        /* Set mode control (flush master data buf, enable hold SCL, exit */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1283: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:178:
+        /* unknown state.                                                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1284: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:179:
+        iic_outb(adap,iic->mdcntl, 0x47);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1284: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:179:
+        iic_outb(adap,iic->mdcntl, 0x47);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1284: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:179:
+        iic_outb(adap,iic->mdcntl, 0x47);
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1286: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:181:
+        /* Clear control register */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1287: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:182:
+        iic_outb(adap,iic->cntl, 0x0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1287: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:182:
+        iic_outb(adap,iic->cntl, 0x0);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1287: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:182:
+        iic_outb(adap,iic->cntl, 0x0);
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1289: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:184:
+        DEB2(printk(KERN_DEBUG "iic_init: Initialized IIC on PPC 405\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1289: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:184:
+        DEB2(printk(KERN_DEBUG "iic_init: Initialized IIC on PPC 405\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1289: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:184:
+        DEB2(printk(KERN_DEBUG "iic_init: Initialized IIC on PPC 405\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_init', this function's name, in a string
#1289: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:184:
+        DEB2(printk(KERN_DEBUG "iic_init: Initialized IIC on PPC 405\n"));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1290: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:185:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1290: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:185:
+        return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1293: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:188:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1299: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:194:
+static int wait_for_pin(struct i2c_algo_iic_data *adap, int *status) $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1301: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:196:
+{
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1302: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:197:
+       int timeout = DEF_TIMEOUT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1303: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:198:
+       int retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1304: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:199:
+       struct iic_regs *iic;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1305: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:200:
+       struct iic_ibm *adap_priv_data = adap->data;$

CHECK:SPACING: No space is necessary after a cast
#1306: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:201:
+       iic = (struct iic_regs *) adap_priv_data->iic_base;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1306: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:201:
+       struct iic_ibm *adap_priv_data = adap->data;
+       iic = (struct iic_regs *) adap_priv_data->iic_base;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1306: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:201:
+       iic = (struct iic_regs *) adap_priv_data->iic_base;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1308: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:203:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1309: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:204:
+       *status = iic_inb(adap, iic->sts);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1312: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:207:
+       while (timeout-- && (*status & 0x01)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#1312: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:207:
+       while (timeout-- && (*status & 0x01)) {
+          adap->waitforpin(adap->data);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1313: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:208:
+          adap->waitforpin(adap->data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1313: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:208:
+          adap->waitforpin(adap->data);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1314: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:209:
+          *status = iic_inb(adap, iic->sts);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1314: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:209:
+          *status = iic_inb(adap, iic->sts);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1315: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:210:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1317: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:212:
+       if (timeout <= 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#1317: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:212:
+       if (timeout <= 0) {
[...]
+           retval = iic_inb(adap, iic->cntl);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1317: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:212:
+       if (timeout <= 0) {
[...]
+       else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#1318: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:213:
+          /* Issue stop signal on the bus, and force an interrupt */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1319: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:214:
+           retval = iic_inb(adap, iic->cntl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1319: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:214:
+           retval = iic_inb(adap, iic->cntl);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1320: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:215:
+           iic_outb(adap, iic->cntl, retval | 0x80);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1320: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:215:
+           iic_outb(adap, iic->cntl, retval | 0x80);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1321: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:216:
+           /* Clear status register */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1322: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:217:
+          iic_outb(adap, iic->sts, 0x0a);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1322: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:217:
+          iic_outb(adap, iic->sts, 0x0a);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1323: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:218:
+          /* Exit unknown bus state */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1324: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:219:
+          retval = iic_inb(adap, iic->mdcntl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1324: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:219:
+          retval = iic_inb(adap, iic->mdcntl);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1325: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:220:
+          iic_outb(adap, iic->mdcntl, (retval | 0x02));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1325: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:220:
+          iic_outb(adap, iic->mdcntl, (retval | 0x02));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1327: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:222:
+          // Check the status of the controller.  Does it still see a$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1328: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:223:
+          // pending transfer, even though we've tried to stop any$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1329: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:224:
+          // ongoing transaction?$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1330: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:225:
+           retval = iic_inb(adap, iic->sts);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1330: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:225:
+           retval = iic_inb(adap, iic->sts);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1331: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:226:
+           retval = retval & 0x01;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1331: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:226:
+           retval = retval & 0x01;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1332: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:227:
+           if(retval) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1332: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:227:
+           if(retval) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 14)
#1332: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:227:
+           if(retval) {
[...]
+              iic_outb(adap, iic->xtcntlss, 0x01);

ERROR:SPACING: space required before the open parenthesis '('
#1332: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:227:
+           if(retval) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1333: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:228:
+             // The iic controller is hosed.  It is not responding to any$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1334: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:229:
+             // of our commands.  We have already tried to force it into$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1335: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:230:
+             // a known state, but it has not worked.  Our only choice now$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1336: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:231:
+             // is a soft reset, which will clear all registers, and force$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1337: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:232:
+             // us to re-initialize the controller.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1338: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:233:
+             /* Soft reset */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1339: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:234:
+              iic_outb(adap, iic->xtcntlss, 0x01);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1339: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:234:
+              iic_outb(adap, iic->xtcntlss, 0x01);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1340: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:235:
+              udelay(500);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1340: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:235:
+              udelay(500);$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1340: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:235:
+              udelay(500);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1341: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:236:
+              iic_init(adap);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1341: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:236:
+              iic_init(adap);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1342: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:237:
+             /* Is the pending transfer bit in the sts reg finally cleared? */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1343: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:238:
+              retval = iic_inb(adap, iic->sts);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1343: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:238:
+              retval = iic_inb(adap, iic->sts);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1344: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:239:
+              retval = retval & 0x01;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1344: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:239:
+              retval = retval & 0x01;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1345: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:240:
+              if(retval) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1345: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:240:
+              if(retval) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 17)
#1345: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:240:
+              if(retval) {
+                 printk(KERN_CRIT "The IIC Controller is hosed.  A processor reset is required\n");

ERROR:SPACING: space required before the open parenthesis '('
#1345: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:240:
+              if(retval) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1345: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:240:
+              if(retval) {
+                 printk(KERN_CRIT "The IIC Controller is hosed.  A processor reset is required\n");
+              }

ERROR:CODE_INDENT: code indent should use tabs where possible
#1346: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:241:
+                 printk(KERN_CRIT "The IIC Controller is hosed.  A processor reset is required\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1346: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:241:
+                 printk(KERN_CRIT "The IIC Controller is hosed.  A processor reset is required\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1346: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:241:
+                 printk(KERN_CRIT "The IIC Controller is hosed.  A processor reset is required\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1347: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:242:
+              }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1347: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:242:
+              }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1348: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:243:
+             // For some reason, even though the interrupt bit in this$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1349: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:244:
+             // register was set during iic_init, it didn't take.  We$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1350: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:245:
+             // need to set it again.  Don't ask me why....this is just what$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1351: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:246:
+             // I saw when testing timeouts.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1352: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:247:
+              iic_outb(adap, iic->intmsk, 0x01);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1352: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:247:
+              iic_outb(adap, iic->intmsk, 0x01);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1353: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:248:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1353: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:248:
+           }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1354: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:249:
+          return(-1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1354: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:249:
+          return(-1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1355: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:250:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1356: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:251:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#1356: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:251:
+       else
+          return(0);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1356: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:251:
+       }
+       else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#1357: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:252:
+          return(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1357: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:252:
+          return(0);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1360: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:255:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1365: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:260:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1373: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:268:
+   int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1374: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:269:
+   struct iic_regs *iic;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1375: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:270:
+   struct iic_ibm *adap_priv_data = adap->data;$

CHECK:SPACING: No space is necessary after a cast
#1376: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:271:
+   iic = (struct iic_regs *) adap_priv_data->iic_base;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1376: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:271:
+   struct iic_ibm *adap_priv_data = adap->data;
+   iic = (struct iic_regs *) adap_priv_data->iic_base;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1376: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:271:
+   iic = (struct iic_regs *) adap_priv_data->iic_base;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1378: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:273:
+       $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1378: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:273:
+
+       

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1378: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:273:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1379: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:274:
+   ret = iic_inb(adap, iic->sts);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1380: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:275:
+   if(ret & 0x04) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#1380: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:275:
+   if(ret & 0x04) {
[...]
+      ret = iic_inb(adap, iic->extsts);

ERROR:SPACING: space required before the open parenthesis '('
#1380: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:275:
+   if(ret & 0x04) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1382: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:277:
+      ret = iic_inb(adap, iic->extsts);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1383: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:278:
+      if(ret & 0x04) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 9)
#1383: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:278:
+      if(ret & 0x04) {
[...]
+         *error_code =  IIC_ERR_LOST_ARB;

ERROR:SPACING: space required before the open parenthesis '('
#1383: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:278:
+      if(ret & 0x04) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1384: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:279:
+         // Lost arbitration$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1385: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:280:
+         *error_code =  IIC_ERR_LOST_ARB;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1385: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:280:
+         *error_code =  IIC_ERR_LOST_ARB;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1386: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:281:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1387: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:282:
+      if(ret & 0x02) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 9)
#1387: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:282:
+      if(ret & 0x02) {
[...]
+         *error_code = IIC_ERR_INCOMPLETE_XFR;

ERROR:SPACING: space required before the open parenthesis '('
#1387: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:282:
+      if(ret & 0x02) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1388: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:283:
+         // Incomplete transfer$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1389: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:284:
+         *error_code = IIC_ERR_INCOMPLETE_XFR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1389: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:284:
+         *error_code = IIC_ERR_INCOMPLETE_XFR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1390: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:285:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1391: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:286:
+      if(ret & 0x01) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 9)
#1391: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:286:
+      if(ret & 0x01) {
[...]
+         *error_code = IIC_ERR_NACK;

ERROR:SPACING: space required before the open parenthesis '('
#1391: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:286:
+      if(ret & 0x01) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1392: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:287:
+         // Master transfer aborted by a NACK during the transfer of the $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1392: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:287:
+         // Master transfer aborted by a NACK during the transfer of the $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1393: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:288:
+        // address byte$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1394: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:289:
+         *error_code = IIC_ERR_NACK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1394: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:289:
+         *error_code = IIC_ERR_NACK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1395: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:290:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1396: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:291:
+      return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1397: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:292:
+   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1398: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:293:
+   return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1401: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:296:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1406: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:301:
+static int iic_sendbytes(struct i2c_adapter *i2c_adap,const char *buf,
                                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1407: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:302:
+                         int count, int xfer_flag)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1407: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:302:
+                         int count, int xfer_flag)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1409: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:304:
+       struct iic_regs *iic;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1410: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:305:
+       struct i2c_algo_iic_data *adap = i2c_adap->algo_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1411: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:306:
+       struct iic_ibm *adap_priv_data = adap->data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1412: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:307:
+       int wrcount, status, timeout;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1413: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:308:
+       int loops, remainder, i, j;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1414: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:309:
+       int ret, error_code;$

CHECK:SPACING: No space is necessary after a cast
#1415: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:310:
+       iic = (struct iic_regs *) adap_priv_data->iic_base;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1415: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:310:
+       int ret, error_code;
+       iic = (struct iic_regs *) adap_priv_data->iic_base;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1415: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:310:
+       iic = (struct iic_regs *) adap_priv_data->iic_base;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1417: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:312:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1417: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:312:
+
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1417: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:312:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1418: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:313:
+       if( count == 0 ) return 0;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1418: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:313:
+       if( count == 0 ) return 0;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1418: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:313:
+       if( count == 0 ) return 0;

ERROR:SPACING: space required before the open parenthesis '('
#1418: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:313:
+       if( count == 0 ) return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1418: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:313:
+       if( count == 0 ) return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1419: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:314:
+       wrcount = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1420: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:315:
+       loops =  count / 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1421: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:316:
+       remainder = count % 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1423: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:318:
+       if((loops > 1) && (remainder == 0)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#1423: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:318:
+       if((loops > 1) && (remainder == 0)) {
+          for(i=0; i<(loops-1); i++) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'loops > 1'
#1423: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:318:
+       if((loops > 1) && (remainder == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'remainder == 0'
#1423: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:318:
+       if((loops > 1) && (remainder == 0)) {

ERROR:SPACING: space required before the open parenthesis '('
#1423: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:318:
+       if((loops > 1) && (remainder == 0)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1424: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:319:
+          for(i=0; i<(loops-1); i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1424: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:319:
+          for(i=0; i<(loops-1); i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#1424: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:319:
+          for(i=0; i<(loops-1); i++) {
[...]
+             for(j=0; j<4; j++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1424: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:319:
+          for(i=0; i<(loops-1); i++) {
                ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1424: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:319:
+          for(i=0; i<(loops-1); i++) {
                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1424: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:319:
+          for(i=0; i<(loops-1); i++) {
                            ^

ERROR:SPACING: space required before the open parenthesis '('
#1424: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:319:
+          for(i=0; i<(loops-1); i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1425: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:320:
+                     //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1426: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:321:
+             // Write four bytes to master data buffer$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1427: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:322:
+             //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1428: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:323:
+             for(j=0; j<4; j++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1428: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:323:
+             for(j=0; j<4; j++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1428: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:323:
+             for(j=0; j<4; j++) {
                   ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1428: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:323:
+             for(j=0; j<4; j++) {
                        ^

ERROR:SPACING: space required before the open parenthesis '('
#1428: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:323:
+             for(j=0; j<4; j++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1429: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:324:
+                iic_outb(adap, iic->mdbuf, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1429: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:324:
+                iic_outb(adap, iic->mdbuf, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1429: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:324:
+                iic_outb(adap, iic->mdbuf, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1430: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:325:
+                buf[wrcount++]);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1430: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:325:
+                iic_outb(adap, iic->mdbuf, 
+                buf[wrcount++]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1430: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:325:
+                buf[wrcount++]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1431: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:326:
+             }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1431: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:326:
+             }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1432: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:327:
+             //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1433: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:328:
+             // Issue command to IICO device to begin transmission$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1434: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:329:
+             //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1435: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:330:
+             iic_outb(adap, iic->cntl, 0x35);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1435: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:330:
+             iic_outb(adap, iic->cntl, 0x35);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1436: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:331:
+             //$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1437: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:332:
+             // Wait for transmission to complete.  When it does, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1437: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:332:
+             // Wait for transmission to complete.  When it does, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1438: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:333:
+             //loop to the top of the for statement and write the $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1438: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:333:
+             //loop to the top of the for statement and write the $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1439: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:334:
+             // next four bytes.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1440: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:335:
+             //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1441: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:336:
+             timeout = wait_for_pin(adap, &status);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1441: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:336:
+             timeout = wait_for_pin(adap, &status);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1442: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:337:
+             if(timeout < 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1442: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:337:
+             if(timeout < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (13, 17)
#1442: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:337:
+             if(timeout < 0) {
[...]
+                 return wrcount;

ERROR:SPACING: space required before the open parenthesis '('
#1442: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:337:
+             if(timeout < 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1443: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:338:
+                //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1444: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:339:
+                // Error handling$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1445: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:340:
+                //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1446: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:341:
+                 //printk(KERN_ERR "Error: write timeout\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1447: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:342:
+                 return wrcount;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1447: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:342:
+                 return wrcount;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1448: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:343:
+             }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1448: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:343:
+             }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1449: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:344:
+             ret = analyze_status(adap, &error_code);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1449: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:344:
+             ret = analyze_status(adap, &error_code);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1450: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:345:
+             if(ret < 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1450: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:345:
+             if(ret < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (13, 17)
#1450: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:345:
+             if(ret < 0) {
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR) {

ERROR:SPACING: space required before the open parenthesis '('
#1450: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:345:
+             if(ret < 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1451: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:346:
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1451: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:346:
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#1451: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:346:
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR) {
[...]
+                    ret = iic_inb(adap, iic->xfrcnt);

ERROR:SPACING: space required before the open parenthesis '('
#1451: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:346:
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1451: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:346:
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR) {
[...]
+                 else return error_code;
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#1452: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:347:
+                    // Return the number of bytes transferred$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1453: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:348:
+                    ret = iic_inb(adap, iic->xfrcnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1453: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:348:
+                    ret = iic_inb(adap, iic->xfrcnt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1454: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:349:
+                    ret = ret & 0x07;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1454: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:349:
+                    ret = ret & 0x07;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1455: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:350:
+                    return (wrcount-4+ret);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1455: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:350:
+                    return (wrcount-4+ret);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1455: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:350:
+                    return (wrcount-4+ret);
                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1455: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:350:
+                    return (wrcount-4+ret);
                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1456: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:351:
+                 }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1456: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:351:
+                 }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1457: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:352:
+                 else return error_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1457: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:352:
+                 else return error_code;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1457: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:352:
+                 else return error_code;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1457: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:352:
+                 }
+                 else return error_code;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1458: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:353:
+              }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1458: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:353:
+              }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1459: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:354:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1459: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:354:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1460: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:355:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1461: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:356:
+       else if((loops >= 1) && (remainder > 0)){$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#1461: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:356:
+       else if((loops >= 1) && (remainder > 0)){
[...]
+          for(i=0; i<loops; i++) {

ERROR:SPACING: space required before the open brace '{'
#1461: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:356:
+       else if((loops >= 1) && (remainder > 0)){

ERROR:SPACING: space required before the open parenthesis '('
#1461: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:356:
+       else if((loops >= 1) && (remainder > 0)){

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1461: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:356:
+       }
+       else if((loops >= 1) && (remainder > 0)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#1462: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:357:
+          //printk(KERN_DEBUG "iic_sendbytes: (loops >= 1)\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1463: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:358:
+          for(i=0; i<loops; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1463: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:358:
+          for(i=0; i<loops; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#1463: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:358:
+          for(i=0; i<loops; i++) {
[...]
+              for(j=0; j<4; j++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1463: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:358:
+          for(i=0; i<loops; i++) {
                ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1463: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:358:
+          for(i=0; i<loops; i++) {
                     ^

ERROR:SPACING: space required before the open parenthesis '('
#1463: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:358:
+          for(i=0; i<loops; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1464: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:359:
+              //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1465: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:360:
+              // Write four bytes to master data buffer$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1466: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:361:
+              //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1467: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:362:
+              for(j=0; j<4; j++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1467: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:362:
+              for(j=0; j<4; j++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 17)
#1467: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:362:
+              for(j=0; j<4; j++) {
+                 iic_outb(adap, iic->mdbuf,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1467: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:362:
+              for(j=0; j<4; j++) {
                    ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1467: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:362:
+              for(j=0; j<4; j++) {
                         ^

ERROR:SPACING: space required before the open parenthesis '('
#1467: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:362:
+              for(j=0; j<4; j++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1468: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:363:
+                 iic_outb(adap, iic->mdbuf,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1468: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:363:
+                 iic_outb(adap, iic->mdbuf,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1469: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:364:
+                 buf[wrcount++]);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1469: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:364:
+                 iic_outb(adap, iic->mdbuf,
+                 buf[wrcount++]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1469: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:364:
+                 buf[wrcount++]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1470: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:365:
+              }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1470: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:365:
+              }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1471: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:366:
+              //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1472: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:367:
+              // Issue command to IICO device to begin transmission$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1473: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:368:
+              //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1474: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:369:
+              iic_outb(adap, iic->cntl, 0x35);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1474: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:369:
+              iic_outb(adap, iic->cntl, 0x35);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1475: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:370:
+              //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1476: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:371:
+              // Wait for transmission to complete.  When it does,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1477: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:372:
+              //loop to the top of the for statement and write the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1478: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:373:
+              // next four bytes.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1479: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:374:
+              //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1480: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:375:
+              timeout = wait_for_pin(adap, &status);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1480: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:375:
+              timeout = wait_for_pin(adap, &status);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1481: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:376:
+              if(timeout < 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1481: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:376:
+              if(timeout < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 17)
#1481: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:376:
+              if(timeout < 0) {
[...]
+                 return wrcount;

ERROR:SPACING: space required before the open parenthesis '('
#1481: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:376:
+              if(timeout < 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1482: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:377:
+                 //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1483: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:378:
+                 // Error handling$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1484: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:379:
+                 //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1485: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:380:
+                 //printk(KERN_ERR "Error: write timeout\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1486: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:381:
+                 return wrcount;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1486: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:381:
+                 return wrcount;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1487: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:382:
+              }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1487: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:382:
+              }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1488: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:383:
+              ret = analyze_status(adap, &error_code);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1488: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:383:
+              ret = analyze_status(adap, &error_code);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1489: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:384:
+              if(ret < 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1489: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:384:
+              if(ret < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 17)
#1489: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:384:
+              if(ret < 0) {
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR) {

ERROR:SPACING: space required before the open parenthesis '('
#1489: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:384:
+              if(ret < 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1490: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:385:
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1490: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:385:
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#1490: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:385:
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR) {
[...]
+                    ret = iic_inb(adap, iic->xfrcnt);

ERROR:SPACING: space required before the open parenthesis '('
#1490: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:385:
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1490: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:385:
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR) {
[...]
+                 else return error_code;
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#1491: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:386:
+                    // Return the number of bytes transferred$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1492: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:387:
+                    ret = iic_inb(adap, iic->xfrcnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1492: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:387:
+                    ret = iic_inb(adap, iic->xfrcnt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1493: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:388:
+                    ret = ret & 0x07;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1493: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:388:
+                    ret = ret & 0x07;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1494: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:389:
+                    return (wrcount-4+ret);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1494: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:389:
+                    return (wrcount-4+ret);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1494: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:389:
+                    return (wrcount-4+ret);
                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1494: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:389:
+                    return (wrcount-4+ret);
                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1495: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:390:
+                 }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1495: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:390:
+                 }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1496: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:391:
+                 else return error_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1496: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:391:
+                 else return error_code;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1496: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:391:
+                 else return error_code;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1496: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:391:
+                 }
+                 else return error_code;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1497: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:392:
+              }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1497: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:392:
+              }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1498: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:393:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1498: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:393:
+           }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1499: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:394:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1499: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:394:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1502: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:397:
+       if(remainder == 0) remainder = 4;$

ERROR:SPACING: space required before the open parenthesis '('
#1502: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:397:
+       if(remainder == 0) remainder = 4;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1502: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:397:
+       if(remainder == 0) remainder = 4;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1507: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:402:
+       for(i=0; i<remainder; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#1507: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:402:
+       for(i=0; i<remainder; i++) {
+          iic_outb(adap, iic->mdbuf, buf[wrcount++]);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1507: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:402:
+       for(i=0; i<remainder; i++) {
             ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1507: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:402:
+       for(i=0; i<remainder; i++) {
                  ^

ERROR:SPACING: space required before the open parenthesis '('
#1507: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:402:
+       for(i=0; i<remainder; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1508: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:403:
+          iic_outb(adap, iic->mdbuf, buf[wrcount++]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1508: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:403:
+          iic_outb(adap, iic->mdbuf, buf[wrcount++]);$

WARNING:LONG_LINE_COMMENT: line length of 116 exceeds 100 columns
#1509: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:404:
+          //printk(KERN_DEBUG "iic_sendbytes:  data transferred = %x, wrcount = %d\n", buf[wrcount-1], (wrcount-1));

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#1509: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:404:
+          //printk(KERN_DEBUG "iic_sendbytes:  data transferred = %x, wrcount = %d\n", buf[wrcount-1], (wrcount-1));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1510: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:405:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1511: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:406:
+        //printk(KERN_DEBUG "iic_sendbytes: Issuing write\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1513: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:408:
+        if(xfer_flag == IIC_COMBINED_XFER) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1513: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:408:
+        if(xfer_flag == IIC_COMBINED_XFER) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 11)
#1513: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:408:
+        if(xfer_flag == IIC_COMBINED_XFER) {
+           iic_outb(adap, iic->cntl, (0x09 | ((remainder-1) << 4)));

ERROR:SPACING: space required before the open parenthesis '('
#1513: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:408:
+        if(xfer_flag == IIC_COMBINED_XFER) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1513: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:408:
+        if(xfer_flag == IIC_COMBINED_XFER) {
[...]
+       else {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#1514: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:409:
+           iic_outb(adap, iic->cntl, (0x09 | ((remainder-1) << 4)));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1514: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:409:
+           iic_outb(adap, iic->cntl, (0x09 | ((remainder-1) << 4)));$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1514: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:409:
+           iic_outb(adap, iic->cntl, (0x09 | ((remainder-1) << 4)));
                                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1515: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:410:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1515: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:410:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1516: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:411:
+       else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#1516: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:411:
+       else {
+           iic_outb(adap, iic->cntl, (0x01 | ((remainder-1) << 4)));

CHECK:BRACES: Unbalanced braces around else statement
#1516: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:411:
+       else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1517: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:412:
+           iic_outb(adap, iic->cntl, (0x01 | ((remainder-1) << 4)));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1517: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:412:
+           iic_outb(adap, iic->cntl, (0x01 | ((remainder-1) << 4)));$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1517: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:412:
+           iic_outb(adap, iic->cntl, (0x01 | ((remainder-1) << 4)));
                                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1518: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:413:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1518: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:413:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1519: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:414:
+       DEB2(printk(KERN_DEBUG "iic_sendbytes: Waiting for interrupt\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1519: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:414:
+       DEB2(printk(KERN_DEBUG "iic_sendbytes: Waiting for interrupt\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_sendbytes', this function's name, in a string
#1519: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:414:
+       DEB2(printk(KERN_DEBUG "iic_sendbytes: Waiting for interrupt\n"));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1520: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:415:
+       timeout = wait_for_pin(adap, &status);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1521: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:416:
+        if(timeout < 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1521: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:416:
+        if(timeout < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 11)
#1521: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:416:
+        if(timeout < 0) {
[...]
+           return wrcount;

ERROR:SPACING: space required before the open parenthesis '('
#1521: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:416:
+        if(timeout < 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1522: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:417:
+                  //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1523: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:418:
+           // Error handling$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1524: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:419:
+           //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1525: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:420:
+           //printk(KERN_ERR "Error: write timeout\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1526: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:421:
+           return wrcount;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1526: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:421:
+           return wrcount;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1527: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:422:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1527: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:422:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1528: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:423:
+        ret = analyze_status(adap, &error_code);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1528: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:423:
+        ret = analyze_status(adap, &error_code);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1529: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:424:
+        if(ret < 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1529: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:424:
+        if(ret < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 11)
#1529: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:424:
+        if(ret < 0) {
+           if(error_code == IIC_ERR_INCOMPLETE_XFR) {

ERROR:SPACING: space required before the open parenthesis '('
#1529: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:424:
+        if(ret < 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1530: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:425:
+           if(error_code == IIC_ERR_INCOMPLETE_XFR) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1530: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:425:
+           if(error_code == IIC_ERR_INCOMPLETE_XFR) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 14)
#1530: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:425:
+           if(error_code == IIC_ERR_INCOMPLETE_XFR) {
[...]
+              ret = iic_inb(adap, iic->xfrcnt);

ERROR:SPACING: space required before the open parenthesis '('
#1530: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:425:
+           if(error_code == IIC_ERR_INCOMPLETE_XFR) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1530: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:425:
+           if(error_code == IIC_ERR_INCOMPLETE_XFR) {
[...]
+           else return error_code;
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#1531: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:426:
+              // Return the number of bytes transferred$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1532: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:427:
+              ret = iic_inb(adap, iic->xfrcnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1532: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:427:
+              ret = iic_inb(adap, iic->xfrcnt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1533: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:428:
+              ret = ret & 0x07;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1533: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:428:
+              ret = ret & 0x07;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1534: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:429:
+              return (wrcount-4+ret);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1534: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:429:
+              return (wrcount-4+ret);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1534: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:429:
+              return (wrcount-4+ret);
                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1534: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:429:
+              return (wrcount-4+ret);
                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1535: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:430:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1535: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:430:
+           }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1536: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:431:
+           else return error_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1536: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:431:
+           else return error_code;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1536: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:431:
+           else return error_code;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1536: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:431:
+           }
+           else return error_code;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1537: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:432:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1537: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:432:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1538: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:433:
+       DEB2(printk(KERN_DEBUG "iic_sendbytes: Got interrupt\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1538: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:433:
+       DEB2(printk(KERN_DEBUG "iic_sendbytes: Got interrupt\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_sendbytes', this function's name, in a string
#1538: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:433:
+       DEB2(printk(KERN_DEBUG "iic_sendbytes: Got interrupt\n"));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1539: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:434:
+       return wrcount;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1542: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:437:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1549: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:444:
+       struct iic_regs *iic;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1550: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:445:
+       int rdcount=0, i, status, timeout;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1550: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:445:
+       int rdcount=0, i, status, timeout;
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1551: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:446:
+       struct i2c_algo_iic_data *adap = i2c_adap->algo_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1552: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:447:
+       struct iic_ibm *adap_priv_data = adap->data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1553: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:448:
+       int loops, remainder, j;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1554: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:449:
+        int ret, error_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1554: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:449:
+        int ret, error_code;$

CHECK:SPACING: No space is necessary after a cast
#1555: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:450:
+       iic = (struct iic_regs *) adap_priv_data->iic_base;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1555: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:450:
+       iic = (struct iic_regs *) adap_priv_data->iic_base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1557: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:452:
+       if(count == 0) return 0;$

ERROR:SPACING: space required before the open parenthesis '('
#1557: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:452:
+       if(count == 0) return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1557: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:452:
+       if(count == 0) return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1558: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:453:
+       loops = count / 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1559: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:454:
+       remainder = count % 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1563: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:458:
+       if((loops > 1) && (remainder == 0)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#1563: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:458:
+       if((loops > 1) && (remainder == 0)) {
[...]
+          for(i=0; i<(loops-1); i++) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'loops > 1'
#1563: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:458:
+       if((loops > 1) && (remainder == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'remainder == 0'
#1563: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:458:
+       if((loops > 1) && (remainder == 0)) {

ERROR:SPACING: space required before the open parenthesis '('
#1563: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:458:
+       if((loops > 1) && (remainder == 0)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1565: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:460:
+          for(i=0; i<(loops-1); i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1565: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:460:
+          for(i=0; i<(loops-1); i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#1565: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:460:
+          for(i=0; i<(loops-1); i++) {
[...]
+             iic_outb(adap, iic->cntl, 0x37);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1565: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:460:
+          for(i=0; i<(loops-1); i++) {
                ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1565: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:460:
+          for(i=0; i<(loops-1); i++) {
                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1565: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:460:
+          for(i=0; i<(loops-1); i++) {
                            ^

ERROR:SPACING: space required before the open parenthesis '('
#1565: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:460:
+          for(i=0; i<(loops-1); i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1566: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:461:
+             //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1567: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:462:
+              // Issue command to begin master read (4 bytes maximum)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1568: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:463:
+              //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1569: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:464:
+             //printk(KERN_DEBUG "--->Issued read command\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1570: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:465:
+             iic_outb(adap, iic->cntl, 0x37);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1570: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:465:
+             iic_outb(adap, iic->cntl, 0x37);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1571: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:466:
+             //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1572: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:467:
+              // Wait for transmission to complete.  When it does,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1573: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:468:
+              // loop to the top of the for statement and write the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1574: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:469:
+              // next four bytes.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1575: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:470:
+              //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1576: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:471:
+             //printk(KERN_DEBUG "--->Waiting for interrupt\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1577: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:472:
+              timeout = wait_for_pin(adap, &status);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1577: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:472:
+              timeout = wait_for_pin(adap, &status);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1578: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:473:
+              if(timeout < 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1578: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:473:
+              if(timeout < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 17)
#1578: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:473:
+              if(timeout < 0) {
[...]
+                 return rdcount;

ERROR:SPACING: space required before the open parenthesis '('
#1578: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:473:
+              if(timeout < 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1579: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:474:
+                // Error Handler$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1580: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:475:
+                //printk(KERN_ERR "Error: read timed out\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1581: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:476:
+                 return rdcount;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1581: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:476:
+                 return rdcount;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1582: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:477:
+             }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1582: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:477:
+             }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1583: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:478:
+              //printk(KERN_DEBUG "--->Got interrupt\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1585: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:480:
+              ret = analyze_status(adap, &error_code);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1585: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:480:
+              ret = analyze_status(adap, &error_code);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1586: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:481:
+             if(ret < 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1586: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:481:
+             if(ret < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (13, 17)
#1586: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:481:
+             if(ret < 0) {
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR)

ERROR:SPACING: space required before the open parenthesis '('
#1586: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:481:
+             if(ret < 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1587: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:482:
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1587: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:482:
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#1587: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:482:
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR)
+                    return rdcount;

ERROR:SPACING: space required before the open parenthesis '('
#1587: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:482:
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1588: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:483:
+                    return rdcount;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1588: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:483:
+                    return rdcount;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1589: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:484:
+                 else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1589: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:484:
+                 else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#1589: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:484:
+                 else
+                    return error_code;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1590: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:485:
+                    return error_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1590: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:485:
+                    return error_code;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1591: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:486:
+              }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1591: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:486:
+              }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1593: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:488:
+             for(j=0; j<4; j++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1593: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:488:
+             for(j=0; j<4; j++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1593: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:488:
+             for(j=0; j<4; j++) {
                   ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1593: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:488:
+             for(j=0; j<4; j++) {
                        ^

ERROR:SPACING: space required before the open parenthesis '('
#1593: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:488:
+             for(j=0; j<4; j++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1594: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:489:
+                 // Wait for data to shuffle to top of data buffer$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1595: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:490:
+                 // This value needs to optimized.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1596: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:491:
+                udelay(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1596: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:491:
+                udelay(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1597: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:492:
+                buf[rdcount] = iic_inb(adap, iic->mdbuf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1597: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:492:
+                buf[rdcount] = iic_inb(adap, iic->mdbuf);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1598: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:493:
+                rdcount++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1598: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:493:
+                rdcount++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1599: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:494:
+                //printk(KERN_DEBUG "--->Read one byte\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1600: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:495:
+              }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1600: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:495:
+              }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1601: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:496:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1601: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:496:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1602: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:497:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1604: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:499:
+       else if((loops >= 1) && (remainder > 0)){$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#1604: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:499:
+       else if((loops >= 1) && (remainder > 0)){
[...]
+          for(i=0; i<loops; i++) {

ERROR:SPACING: space required before the open brace '{'
#1604: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:499:
+       else if((loops >= 1) && (remainder > 0)){

ERROR:SPACING: space required before the open parenthesis '('
#1604: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:499:
+       else if((loops >= 1) && (remainder > 0)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#1606: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:501:
+          for(i=0; i<loops; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1606: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:501:
+          for(i=0; i<loops; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#1606: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:501:
+          for(i=0; i<loops; i++) {
[...]
+              iic_outb(adap, iic->cntl, 0x37);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1606: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:501:
+          for(i=0; i<loops; i++) {
                ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1606: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:501:
+          for(i=0; i<loops; i++) {
                     ^

ERROR:SPACING: space required before the open parenthesis '('
#1606: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:501:
+          for(i=0; i<loops; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1607: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:502:
+              //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1608: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:503:
+              // Issue command to begin master read (4 bytes maximum)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1609: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:504:
+              //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1610: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:505:
+              //printk(KERN_DEBUG "--->Issued read command\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1611: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:506:
+              iic_outb(adap, iic->cntl, 0x37);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1611: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:506:
+              iic_outb(adap, iic->cntl, 0x37);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1612: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:507:
+              //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1613: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:508:
+              // Wait for transmission to complete.  When it does,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1614: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:509:
+              // loop to the top of the for statement and write the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1615: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:510:
+              // next four bytes.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1616: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:511:
+              //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1617: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:512:
+              //printk(KERN_DEBUG "--->Waiting for interrupt\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1618: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:513:
+              timeout = wait_for_pin(adap, &status);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1618: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:513:
+              timeout = wait_for_pin(adap, &status);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1619: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:514:
+              if(timeout < 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1619: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:514:
+              if(timeout < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 17)
#1619: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:514:
+              if(timeout < 0) {
[...]
+                 return rdcount;

ERROR:SPACING: space required before the open parenthesis '('
#1619: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:514:
+              if(timeout < 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1620: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:515:
+                 // Error Handler$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1621: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:516:
+                 //printk(KERN_ERR "Error: read timed out\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1622: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:517:
+                 return rdcount;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1622: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:517:
+                 return rdcount;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1623: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:518:
+              }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1623: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:518:
+              }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1624: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:519:
+              //printk(KERN_DEBUG "--->Got interrupt\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1626: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:521:
+              ret = analyze_status(adap, &error_code);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1626: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:521:
+              ret = analyze_status(adap, &error_code);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1627: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:522:
+              if(ret < 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1627: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:522:
+              if(ret < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 17)
#1627: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:522:
+              if(ret < 0) {
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR)

ERROR:SPACING: space required before the open parenthesis '('
#1627: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:522:
+              if(ret < 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1628: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:523:
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1628: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:523:
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#1628: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:523:
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR)
+                    return rdcount;

ERROR:SPACING: space required before the open parenthesis '('
#1628: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:523:
+                 if(error_code == IIC_ERR_INCOMPLETE_XFR)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1629: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:524:
+                    return rdcount;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1629: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:524:
+                    return rdcount;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1630: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:525:
+                 else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1630: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:525:
+                 else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#1630: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:525:
+                 else
+                    return error_code;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1631: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:526:
+                    return error_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1631: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:526:
+                    return error_code;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1632: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:527:
+              }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1632: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:527:
+              }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1634: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:529:
+              for(j=0; j<4; j++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1634: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:529:
+              for(j=0; j<4; j++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 17)
#1634: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:529:
+              for(j=0; j<4; j++) {
[...]
+                 udelay(1);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1634: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:529:
+              for(j=0; j<4; j++) {
                    ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1634: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:529:
+              for(j=0; j<4; j++) {
                         ^

ERROR:SPACING: space required before the open parenthesis '('
#1634: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:529:
+              for(j=0; j<4; j++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1635: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:530:
+                 // Wait for data to shuffle to top of data buffer$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1636: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:531:
+                 // This value needs to optimized.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1637: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:532:
+                 udelay(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1637: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:532:
+                 udelay(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1638: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:533:
+                 buf[rdcount] = iic_inb(adap, iic->mdbuf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1638: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:533:
+                 buf[rdcount] = iic_inb(adap, iic->mdbuf);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1639: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:534:
+                 rdcount++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1639: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:534:
+                 rdcount++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1640: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:535:
+                 //printk(KERN_DEBUG "--->Read one byte\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1641: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:536:
+              }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1641: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:536:
+              }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1642: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:537:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1642: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:537:
+           }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1643: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:538:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1643: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:538:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1646: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:541:
+       if(remainder == 0) remainder = 4;$

ERROR:SPACING: space required before the open parenthesis '('
#1646: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:541:
+       if(remainder == 0) remainder = 4;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1646: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:541:
+       if(remainder == 0) remainder = 4;

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1647: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:542:
+       DEB2(printk(KERN_DEBUG "iic_readbytes: writing %x to IICO_CNTL\n", (0x03 | ((remainder-1) << 4))));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1647: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:542:
+       DEB2(printk(KERN_DEBUG "iic_readbytes: writing %x to IICO_CNTL\n", (0x03 | ((remainder-1) << 4))));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1647: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:542:
+       DEB2(printk(KERN_DEBUG "iic_readbytes: writing %x to IICO_CNTL\n", (0x03 | ((remainder-1) << 4))));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1647: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:542:
+       DEB2(printk(KERN_DEBUG "iic_readbytes: writing %x to IICO_CNTL\n", (0x03 | ((remainder-1) << 4))));
                                                                                              ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_readbytes', this function's name, in a string
#1647: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:542:
+       DEB2(printk(KERN_DEBUG "iic_readbytes: writing %x to IICO_CNTL\n", (0x03 | ((remainder-1) << 4))));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1649: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:544:
+       if(xfer_type == IIC_COMBINED_XFER) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#1649: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:544:
+       if(xfer_type == IIC_COMBINED_XFER) {
+          iic_outb(adap, iic->cntl, (0x0b | ((remainder-1) << 4)));

ERROR:SPACING: space required before the open parenthesis '('
#1649: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:544:
+       if(xfer_type == IIC_COMBINED_XFER) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1649: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:544:
+       if(xfer_type == IIC_COMBINED_XFER) {
[...]
+        else {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#1650: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:545:
+          iic_outb(adap, iic->cntl, (0x0b | ((remainder-1) << 4)));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1650: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:545:
+          iic_outb(adap, iic->cntl, (0x0b | ((remainder-1) << 4)));$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1650: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:545:
+          iic_outb(adap, iic->cntl, (0x0b | ((remainder-1) << 4)));
                                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1651: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:546:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1651: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:546:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1652: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:547:
+        else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1652: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:547:
+        else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#1652: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:547:
+        else {
+          iic_outb(adap, iic->cntl, (0x03 | ((remainder-1) << 4)));

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1652: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:547:
+        }
+        else {

CHECK:BRACES: Unbalanced braces around else statement
#1652: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:547:
+        else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1653: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:548:
+          iic_outb(adap, iic->cntl, (0x03 | ((remainder-1) << 4)));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1653: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:548:
+          iic_outb(adap, iic->cntl, (0x03 | ((remainder-1) << 4)));$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1653: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:548:
+          iic_outb(adap, iic->cntl, (0x03 | ((remainder-1) << 4)));
                                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1654: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:549:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1654: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:549:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1655: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:550:
+       DEB2(printk(KERN_DEBUG "iic_readbytes: Wait for pin\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1655: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:550:
+       DEB2(printk(KERN_DEBUG "iic_readbytes: Wait for pin\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_readbytes', this function's name, in a string
#1655: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:550:
+       DEB2(printk(KERN_DEBUG "iic_readbytes: Wait for pin\n"));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1656: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:551:
+        timeout = wait_for_pin(adap, &status);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1656: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:551:
+        timeout = wait_for_pin(adap, &status);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1657: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:552:
+       DEB2(printk(KERN_DEBUG "iic_readbytes: Got the interrupt\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1657: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:552:
+       DEB2(printk(KERN_DEBUG "iic_readbytes: Got the interrupt\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_readbytes', this function's name, in a string
#1657: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:552:
+       DEB2(printk(KERN_DEBUG "iic_readbytes: Got the interrupt\n"));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1658: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:553:
+        if(timeout < 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1658: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:553:
+        if(timeout < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 11)
#1658: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:553:
+        if(timeout < 0) {
[...]
+           return rdcount;

ERROR:SPACING: space required before the open parenthesis '('
#1658: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:553:
+        if(timeout < 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1659: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:554:
+           // Error Handler$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1660: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:555:
+          //printk(KERN_ERR "Error: read timed out\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1661: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:556:
+           return rdcount;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1661: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:556:
+           return rdcount;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1662: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:557:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1662: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:557:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1664: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:559:
+        ret = analyze_status(adap, &error_code);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1664: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:559:
+        ret = analyze_status(adap, &error_code);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1665: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:560:
+        if(ret < 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1665: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:560:
+        if(ret < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 11)
#1665: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:560:
+        if(ret < 0) {
+           if(error_code == IIC_ERR_INCOMPLETE_XFR)

ERROR:SPACING: space required before the open parenthesis '('
#1665: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:560:
+        if(ret < 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1666: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:561:
+           if(error_code == IIC_ERR_INCOMPLETE_XFR)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1666: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:561:
+           if(error_code == IIC_ERR_INCOMPLETE_XFR)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 14)
#1666: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:561:
+           if(error_code == IIC_ERR_INCOMPLETE_XFR)
+              return rdcount;

ERROR:SPACING: space required before the open parenthesis '('
#1666: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:561:
+           if(error_code == IIC_ERR_INCOMPLETE_XFR)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1667: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:562:
+              return rdcount;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1667: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:562:
+              return rdcount;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1668: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:563:
+           else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1668: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:563:
+           else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 14)
#1668: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:563:
+           else
+              return error_code;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1669: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:564:
+              return error_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1669: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:564:
+              return error_code;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1670: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:565:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1670: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:565:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1673: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:568:
+       for(i=0; i<remainder; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#1673: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:568:
+       for(i=0; i<remainder; i++) {
+          buf[rdcount] = iic_inb(adap, iic->mdbuf);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1673: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:568:
+       for(i=0; i<remainder; i++) {
             ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1673: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:568:
+       for(i=0; i<remainder; i++) {
                  ^

ERROR:SPACING: space required before the open parenthesis '('
#1673: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:568:
+       for(i=0; i<remainder; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1674: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:569:
+          buf[rdcount] = iic_inb(adap, iic->mdbuf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1674: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:569:
+          buf[rdcount] = iic_inb(adap, iic->mdbuf);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1675: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:570:
+          // printk(KERN_DEBUG "iic_readbytes:  Character read = %x\n", buf[rdcount]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1676: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:571:
+           rdcount++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1676: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:571:
+           rdcount++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1677: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:572:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1679: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:574:
+       return rdcount;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1682: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:577:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1689: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:584:
+static int iic_combined_transaction(struct i2c_adapter *i2c_adap, struct i2c_msg msgs[], int num) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1691: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:586:
+   int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1692: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:587:
+   struct i2c_msg *pmsg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1693: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:588:
+   int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1695: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:590:
+   DEB2(printk(KERN_DEBUG "Beginning combined transaction\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1695: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:590:
+   DEB2(printk(KERN_DEBUG "Beginning combined transaction\n"));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1696: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:591:
+       for(i=0; i < num; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1696: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:591:
+       for(i=0; i < num; i++) {
+               pmsg = &msgs[i];

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1696: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:591:
+       for(i=0; i < num; i++) {
             ^

ERROR:SPACING: space required before the open parenthesis '('
#1696: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:591:
+       for(i=0; i < num; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1697: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:592:
+               pmsg = &msgs[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1697: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:592:
+               pmsg = &msgs[i];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1698: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:593:
+               if(pmsg->flags & I2C_M_RD) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1698: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:593:
+               if(pmsg->flags & I2C_M_RD) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1698: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:593:
+               if(pmsg->flags & I2C_M_RD) {
[...]
+                       if(i < num-1) {

ERROR:SPACING: space required before the open parenthesis '('
#1698: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:593:
+               if(pmsg->flags & I2C_M_RD) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1699: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:594:
+               if(pmsg->flags & I2C_M_RD) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1700: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:595:
+                       // Last read or write segment needs to be terminated with a stop$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1701: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:596:
+                       if(i < num-1) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1701: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:596:
+                       if(i < num-1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#1701: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:596:
+                       if(i < num-1) {
+                               DEB2(printk(KERN_DEBUG "This one is a read\n"));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1701: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:596:
+                       if(i < num-1) {
                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#1701: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:596:
+                       if(i < num-1) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1701: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:596:
+                       if(i < num-1) {
[...]
+                       else {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#1702: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:597:
+                               DEB2(printk(KERN_DEBUG "This one is a read\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1702: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:597:
+                               DEB2(printk(KERN_DEBUG "This one is a read\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1702: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:597:
+                               DEB2(printk(KERN_DEBUG "This one is a read\n"));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1703: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:598:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1703: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:598:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1704: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:599:
+                       else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1704: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:599:
+                       else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#1704: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:599:
+                       else {
+                               DEB2(printk(KERN_DEBUG "Doing the last read\n"));

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1704: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:599:
+                       }
+                       else {

CHECK:BRACES: Unbalanced braces around else statement
#1704: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:599:
+                       else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1705: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:600:
+                               DEB2(printk(KERN_DEBUG "Doing the last read\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1705: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:600:
+                               DEB2(printk(KERN_DEBUG "Doing the last read\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1705: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:600:
+                               DEB2(printk(KERN_DEBUG "Doing the last read\n"));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1706: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:601:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1706: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:601:
+                       }$

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#1707: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:602:
+                       ret = iic_readbytes(i2c_adap, pmsg->buf, pmsg->len, (i < num-1) ? IIC_COMBINED_XFER : IIC_SINGLE_XFER);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1707: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:602:
+                       ret = iic_readbytes(i2c_adap, pmsg->buf, pmsg->len, (i < num-1) ? IIC_COMBINED_XFER : IIC_SINGLE_XFER);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1707: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:602:
+                       ret = iic_readbytes(i2c_adap, pmsg->buf, pmsg->len, (i < num-1) ? IIC_COMBINED_XFER : IIC_SINGLE_XFER);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1707: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:602:
+                       ret = iic_readbytes(i2c_adap, pmsg->buf, pmsg->len, (i < num-1) ? IIC_COMBINED_XFER : IIC_SINGLE_XFER);
                                                                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1709: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:604:
+                       if (ret != pmsg->len) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1709: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:604:
+                       if (ret != pmsg->len) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#1709: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:604:
+                       if (ret != pmsg->len) {
+                               DEB2(printk("i2c-algo-ppc405.o: fail: "

ERROR:CODE_INDENT: code indent should use tabs where possible
#1710: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:605:
+                               DEB2(printk("i2c-algo-ppc405.o: fail: "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1710: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:605:
+                               DEB2(printk("i2c-algo-ppc405.o: fail: "$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1710: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:605:
+                               DEB2(printk("i2c-algo-ppc405.o: fail: "

ERROR:CODE_INDENT: code indent should use tabs where possible
#1711: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:606:
+                                                       "only read %d bytes.\n",ret));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1711: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:606:
+                                                       "only read %d bytes.\n",ret));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1711: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:606:
+                                                       "only read %d bytes.\n",ret));
                                                                               ^

WARNING:SPLIT_STRING: quoted string split across lines
#1711: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:606:
+                               DEB2(printk("i2c-algo-ppc405.o: fail: "
+                                                       "only read %d bytes.\n",ret));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1712: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:607:
+                               return i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1712: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:607:
+                               return i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1713: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:608:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1713: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:608:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1714: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:609:
+                       else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1714: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:609:
+                       else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#1714: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:609:
+                       else {
+                               DEB2(printk("i2c-algo-ppc405.o: read %d bytes.\n",ret));

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1714: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:609:
+                       }
+                       else {

CHECK:BRACES: Unbalanced braces around else statement
#1714: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:609:
+                       else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1715: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:610:
+                               DEB2(printk("i2c-algo-ppc405.o: read %d bytes.\n",ret));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1715: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:610:
+                               DEB2(printk("i2c-algo-ppc405.o: read %d bytes.\n",ret));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1715: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:610:
+                               DEB2(printk("i2c-algo-ppc405.o: read %d bytes.\n",ret));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1715: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:610:
+                               DEB2(printk("i2c-algo-ppc405.o: read %d bytes.\n",ret));
                                                                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1716: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:611:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1716: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:611:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1717: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:612:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1717: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:612:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1718: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:613:
+               else if(!(pmsg->flags & I2C_M_RD)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1718: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:613:
+               else if(!(pmsg->flags & I2C_M_RD)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1718: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:613:
+               else if(!(pmsg->flags & I2C_M_RD)) {
[...]
+                       if(i < num-1) {

ERROR:SPACING: space required before the open parenthesis '('
#1718: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:613:
+               else if(!(pmsg->flags & I2C_M_RD)) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1718: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:613:
+               }
+               else if(!(pmsg->flags & I2C_M_RD)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1719: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:614:
+               else if(!(pmsg->flags & I2C_M_RD)) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1720: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:615:
+                       // Last read or write segment needs to be terminated with a stop$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1721: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:616:
+                       if(i < num-1) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1721: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:616:
+                       if(i < num-1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#1721: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:616:
+                       if(i < num-1) {
+                               DEB2(printk(KERN_DEBUG "This one is a write\n"));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1721: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:616:
+                       if(i < num-1) {
                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#1721: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:616:
+                       if(i < num-1) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1721: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:616:
+                       if(i < num-1) {
[...]
+                       else {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#1722: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:617:
+                               DEB2(printk(KERN_DEBUG "This one is a write\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1722: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:617:
+                               DEB2(printk(KERN_DEBUG "This one is a write\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1722: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:617:
+                               DEB2(printk(KERN_DEBUG "This one is a write\n"));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1723: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:618:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1723: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:618:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1724: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:619:
+                       else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1724: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:619:
+                       else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#1724: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:619:
+                       else {
+                               DEB2(printk(KERN_DEBUG "Doing the last write\n"));

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1724: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:619:
+                       }
+                       else {

CHECK:BRACES: Unbalanced braces around else statement
#1724: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:619:
+                       else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1725: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:620:
+                               DEB2(printk(KERN_DEBUG "Doing the last write\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1725: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:620:
+                               DEB2(printk(KERN_DEBUG "Doing the last write\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1725: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:620:
+                               DEB2(printk(KERN_DEBUG "Doing the last write\n"));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1726: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:621:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1726: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:621:
+                       }$

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#1727: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:622:
+                       ret = iic_sendbytes(i2c_adap, pmsg->buf, pmsg->len, (i < num-1) ? IIC_COMBINED_XFER : IIC_SINGLE_XFER);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1727: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:622:
+                       ret = iic_sendbytes(i2c_adap, pmsg->buf, pmsg->len, (i < num-1) ? IIC_COMBINED_XFER : IIC_SINGLE_XFER);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1727: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:622:
+                       ret = iic_sendbytes(i2c_adap, pmsg->buf, pmsg->len, (i < num-1) ? IIC_COMBINED_XFER : IIC_SINGLE_XFER);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1727: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:622:
+                       ret = iic_sendbytes(i2c_adap, pmsg->buf, pmsg->len, (i < num-1) ? IIC_COMBINED_XFER : IIC_SINGLE_XFER);
                                                                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1729: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:624:
+                       if (ret != pmsg->len) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1729: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:624:
+                       if (ret != pmsg->len) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#1729: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:624:
+                       if (ret != pmsg->len) {
+                               DEB2(printk("i2c-algo-ppc405.o: fail: "

ERROR:CODE_INDENT: code indent should use tabs where possible
#1730: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:625:
+                               DEB2(printk("i2c-algo-ppc405.o: fail: "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1730: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:625:
+                               DEB2(printk("i2c-algo-ppc405.o: fail: "$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1730: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:625:
+                               DEB2(printk("i2c-algo-ppc405.o: fail: "

ERROR:CODE_INDENT: code indent should use tabs where possible
#1731: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:626:
+                                                       "only wrote %d bytes.\n",ret));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1731: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:626:
+                                                       "only wrote %d bytes.\n",ret));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1731: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:626:
+                                                       "only wrote %d bytes.\n",ret));
                                                                                ^

WARNING:SPLIT_STRING: quoted string split across lines
#1731: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:626:
+                               DEB2(printk("i2c-algo-ppc405.o: fail: "
+                                                       "only wrote %d bytes.\n",ret));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1732: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:627:
+                               return i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1732: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:627:
+                               return i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1733: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:628:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1733: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:628:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1734: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:629:
+                       else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1734: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:629:
+                       else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#1734: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:629:
+                       else {
+                               DEB2(printk("i2c-algo-ppc405.o: wrote %d bytes.\n",ret));

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1734: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:629:
+                       }
+                       else {

CHECK:BRACES: Unbalanced braces around else statement
#1734: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:629:
+                       else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1735: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:630:
+                               DEB2(printk("i2c-algo-ppc405.o: wrote %d bytes.\n",ret));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1735: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:630:
+                               DEB2(printk("i2c-algo-ppc405.o: wrote %d bytes.\n",ret));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1735: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:630:
+                               DEB2(printk("i2c-algo-ppc405.o: wrote %d bytes.\n",ret));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1735: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:630:
+                               DEB2(printk("i2c-algo-ppc405.o: wrote %d bytes.\n",ret));
                                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1736: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:631:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1736: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:631:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1737: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:632:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1737: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:632:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1738: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:633:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1739: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:634:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1739: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:634:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1740: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:635:
+       return num;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1743: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:638:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <iic_doAddress>
#1753: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:648:
+static inline int iic_doAddress(struct i2c_algo_iic_data *adap,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1754: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:649:
+                                struct i2c_msg *msg, int retries) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1754: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:649:
+                                struct i2c_msg *msg, int retries) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1754: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:649:
+                                struct i2c_msg *msg, int retries) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1756: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:651:
+       struct iic_regs *iic;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1757: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:652:
+       unsigned short flags = msg->flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1758: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:653:
+       unsigned char addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1759: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:654:
+       struct iic_ibm *adap_priv_data = adap->data;$

CHECK:SPACING: No space is necessary after a cast
#1760: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:655:
+       iic = (struct iic_regs *) adap_priv_data->iic_base;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1760: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:655:
+       struct iic_ibm *adap_priv_data = adap->data;
+       iic = (struct iic_regs *) adap_priv_data->iic_base;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1760: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:655:
+       iic = (struct iic_regs *) adap_priv_data->iic_base;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1766: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:661:
+       if ( (flags & I2C_M_TEN)  ) { $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1766: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:661:
+/* Ten bit addresses not supported right now
+       if ( (flags & I2C_M_TEN)  ) { 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1767: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:662:
+               // a ten bit address$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1768: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:663:
+               addr = 0xf0 | (( msg->addr >> 7) & 0x03);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1769: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:664:
+               DEB2(printk(KERN_DEBUG "addr0: %d\n",addr));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1770: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:665:
+               // try extended address code...$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1771: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:666:
+               ret = try_address(adap, addr, retries);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1772: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:667:
+               if (ret!=1) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1773: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:668:
+                       printk(KERN_ERR "iic_doAddress: died at extended address code.\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1774: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:669:
+                       return -EREMOTEIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1775: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:670:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1776: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:671:
+               // the remaining 8 bit address$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1777: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:672:
+               iic_outb(adap,msg->addr & 0x7f);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1778: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:673:
+               // Status check comes here$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1779: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:674:
+               if (ret != 1) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1780: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:675:
+                       printk(KERN_ERR "iic_doAddress: died at 2nd address code.\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1781: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:676:
+                       return -EREMOTEIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1782: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:677:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1783: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:678:
+               if ( flags & I2C_M_RD ) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1784: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:679:
+                       i2c_repstart(adap);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1785: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:680:
+                       // okay, now switch into reading mode$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1786: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:681:
+                       addr |= 0x01;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1787: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:682:
+                       ret = try_address(adap, addr, retries);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1788: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:683:
+                       if (ret!=1) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1789: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:684:
+                               printk(KERN_ERR "iic_doAddress: died at extended address code.\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1790: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:685:
+                               return -EREMOTEIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1791: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:686:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1792: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:687:
+               }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1795: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:690:
+Ten bit addresses not supported yet */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1797: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:692:
+       addr = ( msg->addr << 1 );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1797: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:692:
+       addr = ( msg->addr << 1 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1797: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:692:
+       addr = ( msg->addr << 1 );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1798: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:693:
+       if (flags & I2C_M_RD )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1798: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:693:
+       if (flags & I2C_M_RD )
+               addr |= 1;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1798: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:693:
+       if (flags & I2C_M_RD )

ERROR:CODE_INDENT: code indent should use tabs where possible
#1799: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:694:
+               addr |= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1799: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:694:
+               addr |= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1800: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:695:
+       if (flags & I2C_M_REV_DIR_ADDR )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1800: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:695:
+       if (flags & I2C_M_REV_DIR_ADDR )
+               addr ^= 1;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1800: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:695:
+       if (flags & I2C_M_REV_DIR_ADDR )

ERROR:CODE_INDENT: code indent should use tabs where possible
#1801: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:696:
+               addr ^= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1801: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:696:
+               addr ^= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1805: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:700:
+       iic_outb(adap, iic->lmadr, addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1810: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:705:
+       iic_outb(adap, iic->hmadr, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1812: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:707:
+       return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1815: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:710:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1822: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:717:
+                   struct i2c_msg msgs[], $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1822: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:717:
+                   struct i2c_msg msgs[], $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1822: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:717:
+static int iic_xfer(struct i2c_adapter *i2c_adap,
+                   struct i2c_msg msgs[], 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1822: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:717:
+                   struct i2c_msg msgs[], $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1823: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:718:
+                   int num)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1823: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:718:
+                   int num)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1825: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:720:
+       struct iic_regs *iic;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1826: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:721:
+       struct i2c_algo_iic_data *adap = i2c_adap->algo_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1827: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:722:
+       struct iic_ibm *adap_priv_data = adap->data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1828: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:723:
+       struct i2c_msg *pmsg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1829: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:724:
+       int i = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1830: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:725:
+       int ret;$

CHECK:SPACING: No space is necessary after a cast
#1831: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:726:
+       iic = (struct iic_regs *) adap_priv_data->iic_base;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1831: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:726:
+       int ret;
+       iic = (struct iic_regs *) adap_priv_data->iic_base;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1831: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:726:
+       iic = (struct iic_regs *) adap_priv_data->iic_base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1833: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:728:
+       pmsg = &msgs[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1838: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:733:
+       DEB2(printk(KERN_DEBUG "iic_xfer: iic_xfer: Clearing status register\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1838: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:733:
+       DEB2(printk(KERN_DEBUG "iic_xfer: iic_xfer: Clearing status register\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_xfer', this function's name, in a string
#1838: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:733:
+       DEB2(printk(KERN_DEBUG "iic_xfer: iic_xfer: Clearing status register\n"));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1839: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:734:
+       iic_outb(adap, iic->sts, 0x0a);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1844: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:739:
+       DEB2(printk(KERN_DEBUG "iic_xfer: Waiting for any pending transfers to complete\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1844: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:739:
+       DEB2(printk(KERN_DEBUG "iic_xfer: Waiting for any pending transfers to complete\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_xfer', this function's name, in a string
#1844: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:739:
+       DEB2(printk(KERN_DEBUG "iic_xfer: Waiting for any pending transfers to complete\n"));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1845: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:740:
+       while((ret = iic_inb(adap, iic->sts)) == 0x01) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1845: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:740:
+       while((ret = iic_inb(adap, iic->sts)) == 0x01) {
+               ;

ERROR:SPACING: space required before the open parenthesis '('
#1845: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:740:
+       while((ret = iic_inb(adap, iic->sts)) == 0x01) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1845: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:740:
+       while((ret = iic_inb(adap, iic->sts)) == 0x01) {
+               ;
+       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#1846: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:741:
+               ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1846: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:741:
+               ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1847: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:742:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1852: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:747:
+       DEB2(printk(KERN_DEBUG "iic_xfer: Clearing master data buffer\n"));             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1852: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:747:
+       DEB2(printk(KERN_DEBUG "iic_xfer: Clearing master data buffer\n"));             $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1852: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:747:
+       DEB2(printk(KERN_DEBUG "iic_xfer: Clearing master data buffer\n"));             

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_xfer', this function's name, in a string
#1852: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:747:
+       DEB2(printk(KERN_DEBUG "iic_xfer: Clearing master data buffer\n"));             

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1853: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:748:
+       ret = iic_inb(adap, iic->mdcntl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1854: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:749:
+       iic_outb(adap, iic->mdcntl, ret | 0x40);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1859: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:754:
+       DEB2(printk(KERN_DEBUG "iic_xfer: Loading slave address\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1859: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:754:
+       DEB2(printk(KERN_DEBUG "iic_xfer: Loading slave address\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_xfer', this function's name, in a string
#1859: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:754:
+       DEB2(printk(KERN_DEBUG "iic_xfer: Loading slave address\n"));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1860: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:755:
+       ret = iic_doAddress(adap, pmsg, i2c_adap->retries);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1862: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:757:
+        //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1863: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:758:
+        // Check to see if the bus is busy$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1864: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:759:
+        //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1865: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:760:
+        ret = iic_inb(adap, iic->extsts);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1865: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:760:
+        ret = iic_inb(adap, iic->extsts);$

WARNING:TYPO_SPELLING: 'irrelevent' may be misspelled - perhaps 'irrelevant'?
#1866: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:761:
+        // Mask off the irrelevent bits
                         ^^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1866: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:761:
+        // Mask off the irrelevent bits$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1867: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:762:
+        ret = ret & 0x70;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1867: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:762:
+        ret = ret & 0x70;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1868: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:763:
+        // When the bus is free, the BCS bits in the EXTSTS register are 0b100$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1869: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:764:
+        if(ret != 0x40) return IIC_ERR_LOST_ARB;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1869: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:764:
+        if(ret != 0x40) return IIC_ERR_LOST_ARB;$

ERROR:SPACING: space required before the open parenthesis '('
#1869: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:764:
+        if(ret != 0x40) return IIC_ERR_LOST_ARB;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1869: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:764:
+        if(ret != 0x40) return IIC_ERR_LOST_ARB;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1874: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:769:
+       if(num > 1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#1874: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:769:
+       if(num > 1) {
+           DEB2(printk(KERN_DEBUG "iic_xfer: Call combined transaction\n"));

ERROR:SPACING: space required before the open parenthesis '('
#1874: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:769:
+       if(num > 1) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1875: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:770:
+           DEB2(printk(KERN_DEBUG "iic_xfer: Call combined transaction\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1875: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:770:
+           DEB2(printk(KERN_DEBUG "iic_xfer: Call combined transaction\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1875: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:770:
+           DEB2(printk(KERN_DEBUG "iic_xfer: Call combined transaction\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_xfer', this function's name, in a string
#1875: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:770:
+           DEB2(printk(KERN_DEBUG "iic_xfer: Call combined transaction\n"));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1876: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:771:
+           ret = iic_combined_transaction(i2c_adap, msgs, num);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1876: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:771:
+           ret = iic_combined_transaction(i2c_adap, msgs, num);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1877: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:772:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1877: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:772:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1881: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:776:
+       else if((num == 1) && (pmsg->flags & I2C_M_RD)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#1881: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:776:
+       else if((num == 1) && (pmsg->flags & I2C_M_RD)) {
[...]
+          DEB2(printk(KERN_DEBUG "iic_xfer: Call adapter's read\n"));

ERROR:SPACING: space required before the open parenthesis '('
#1881: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:776:
+       else if((num == 1) && (pmsg->flags & I2C_M_RD)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1882: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:777:
+          //$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1883: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:778:
+          // Tell device to begin reading data from the  master data $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1883: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:778:
+          // Tell device to begin reading data from the  master data $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1884: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:779:
+          //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1885: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:780:
+          DEB2(printk(KERN_DEBUG "iic_xfer: Call adapter's read\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1885: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:780:
+          DEB2(printk(KERN_DEBUG "iic_xfer: Call adapter's read\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1885: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:780:
+          DEB2(printk(KERN_DEBUG "iic_xfer: Call adapter's read\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_xfer', this function's name, in a string
#1885: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:780:
+          DEB2(printk(KERN_DEBUG "iic_xfer: Call adapter's read\n"));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1886: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:781:
+          ret = iic_readbytes(i2c_adap, pmsg->buf, pmsg->len, IIC_SINGLE_XFER);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1886: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:781:
+          ret = iic_readbytes(i2c_adap, pmsg->buf, pmsg->len, IIC_SINGLE_XFER);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1887: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:782:
+       } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1887: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:782:
+       } $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1888: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:783:
+        //$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1891: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:786:
+       else if((num == 1 ) && (!(pmsg->flags & I2C_M_RD))) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#1891: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:786:
+       else if((num == 1 ) && (!(pmsg->flags & I2C_M_RD))) {
[...]
+          DEB2(printk(KERN_DEBUG "iic_xfer: Call adapter's write\n"));

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1891: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:786:
+       else if((num == 1 ) && (!(pmsg->flags & I2C_M_RD))) {

ERROR:SPACING: space required before the open parenthesis '('
#1891: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:786:
+       else if((num == 1 ) && (!(pmsg->flags & I2C_M_RD))) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1892: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:787:
+          //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1893: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:788:
+          // Write data to master data buffers and tell our device$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1894: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:789:
+          // to begin transmitting$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1895: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:790:
+          //$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1896: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:791:
+          DEB2(printk(KERN_DEBUG "iic_xfer: Call adapter's write\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1896: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:791:
+          DEB2(printk(KERN_DEBUG "iic_xfer: Call adapter's write\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1896: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:791:
+          DEB2(printk(KERN_DEBUG "iic_xfer: Call adapter's write\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_xfer', this function's name, in a string
#1896: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:791:
+          DEB2(printk(KERN_DEBUG "iic_xfer: Call adapter's write\n"));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1897: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:792:
+          ret = iic_sendbytes(i2c_adap, pmsg->buf, pmsg->len, IIC_SINGLE_XFER);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1897: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:792:
+          ret = iic_sendbytes(i2c_adap, pmsg->buf, pmsg->len, IIC_SINGLE_XFER);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1898: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:793:
+       }       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1898: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:793:
+       }       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1900: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:795:
+       return ret;   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1900: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:795:
+       return ret;   $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1903: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:798:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1913: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:808:
+static int algo_control(struct i2c_adapter *adapter, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1914: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:809:
+static int algo_control(struct i2c_adapter *adapter, 
+       unsigned int cmd, unsigned long arg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1914: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:809:
+       unsigned int cmd, unsigned long arg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1916: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:811:
+       struct iic_regs *iic;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1917: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:812:
+       struct i2c_algo_iic_data *adap = adapter->algo_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1918: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:813:
+       struct iic_ibm *adap_priv_data = adap->data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1919: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:814:
+       int ret=0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1919: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:814:
+       int ret=0;
               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1920: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:815:
+       int lines;$

CHECK:SPACING: No space is necessary after a cast
#1921: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:816:
+       iic = (struct iic_regs *) adap_priv_data->iic_base;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1921: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:816:
+       int lines;
+       iic = (struct iic_regs *) adap_priv_data->iic_base;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1921: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:816:
+       iic = (struct iic_regs *) adap_priv_data->iic_base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1923: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:818:
+       lines = iic_inb(adap, iic->directcntl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1925: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:820:
+       if (cmd == IICO_I2C_SDAHIGH) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 13)
#1925: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:820:
+       if (cmd == IICO_I2C_SDAHIGH) {
+             lines = lines & 0x01;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1926: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:821:
+             lines = lines & 0x01;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1926: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:821:
+             lines = lines & 0x01;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1927: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:822:
+             if( lines ) lines = 0x04;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1927: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:822:
+             if( lines ) lines = 0x04;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1927: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:822:
+             if( lines ) lines = 0x04;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1927: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:822:
+             if( lines ) lines = 0x04;

ERROR:SPACING: space required before the open parenthesis '('
#1927: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:822:
+             if( lines ) lines = 0x04;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1927: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:822:
+             if( lines ) lines = 0x04;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1928: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:823:
+             else lines = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1928: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:823:
+             else lines = 0;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1928: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:823:
+             else lines = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1929: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:824:
+             iic_outb(adap, iic->directcntl,(0x08|lines));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1929: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:824:
+             iic_outb(adap, iic->directcntl,(0x08|lines));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1929: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:824:
+             iic_outb(adap, iic->directcntl,(0x08|lines));
                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1929: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:824:
+             iic_outb(adap, iic->directcntl,(0x08|lines));
                                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1930: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:825:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1931: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:826:
+       else if (cmd == IICO_I2C_SDALOW) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 13)
#1931: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:826:
+       else if (cmd == IICO_I2C_SDALOW) {
+             lines = lines & 0x01;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1931: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:826:
+       }
+       else if (cmd == IICO_I2C_SDALOW) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1932: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:827:
+             lines = lines & 0x01;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1932: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:827:
+             lines = lines & 0x01;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1933: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:828:
+             if( lines ) lines = 0x04;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1933: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:828:
+             if( lines ) lines = 0x04;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1933: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:828:
+             if( lines ) lines = 0x04;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1933: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:828:
+             if( lines ) lines = 0x04;

ERROR:SPACING: space required before the open parenthesis '('
#1933: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:828:
+             if( lines ) lines = 0x04;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1933: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:828:
+             if( lines ) lines = 0x04;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1934: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:829:
+              else lines = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1934: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:829:
+              else lines = 0;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1934: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:829:
+              else lines = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1935: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:830:
+              iic_outb(adap, iic->directcntl,(0x00|lines));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1935: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:830:
+              iic_outb(adap, iic->directcntl,(0x00|lines));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1935: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:830:
+              iic_outb(adap, iic->directcntl,(0x00|lines));
                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1935: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:830:
+              iic_outb(adap, iic->directcntl,(0x00|lines));
                                                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1936: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:831:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1937: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:832:
+       else if (cmd == IICO_I2C_SCLHIGH) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 14)
#1937: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:832:
+       else if (cmd == IICO_I2C_SCLHIGH) {
+              lines = lines & 0x02;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1937: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:832:
+       }
+       else if (cmd == IICO_I2C_SCLHIGH) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1938: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:833:
+              lines = lines & 0x02;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1938: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:833:
+              lines = lines & 0x02;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1939: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:834:
+              if( lines ) lines = 0x08;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1939: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:834:
+              if( lines ) lines = 0x08;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1939: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:834:
+              if( lines ) lines = 0x08;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1939: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:834:
+              if( lines ) lines = 0x08;

ERROR:SPACING: space required before the open parenthesis '('
#1939: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:834:
+              if( lines ) lines = 0x08;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1939: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:834:
+              if( lines ) lines = 0x08;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1940: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:835:
+              else lines = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1940: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:835:
+              else lines = 0;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1940: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:835:
+              else lines = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1941: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:836:
+              iic_outb(adap, iic->directcntl,(0x04|lines));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1941: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:836:
+              iic_outb(adap, iic->directcntl,(0x04|lines));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1941: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:836:
+              iic_outb(adap, iic->directcntl,(0x04|lines));
                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1941: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:836:
+              iic_outb(adap, iic->directcntl,(0x04|lines));
                                                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1942: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:837:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1943: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:838:
+       else if (cmd == IICO_I2C_SCLLOW) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 14)
#1943: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:838:
+       else if (cmd == IICO_I2C_SCLLOW) {
+              lines = lines & 0x02;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1943: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:838:
+       }
+       else if (cmd == IICO_I2C_SCLLOW) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1944: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:839:
+              lines = lines & 0x02;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1944: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:839:
+              lines = lines & 0x02;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1945: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:840:
+             if( lines ) lines = 0x08;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1945: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:840:
+             if( lines ) lines = 0x08;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1945: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:840:
+             if( lines ) lines = 0x08;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1945: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:840:
+             if( lines ) lines = 0x08;

ERROR:SPACING: space required before the open parenthesis '('
#1945: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:840:
+             if( lines ) lines = 0x08;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1945: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:840:
+             if( lines ) lines = 0x08;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1946: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:841:
+              else lines = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1946: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:841:
+              else lines = 0;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1946: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:841:
+              else lines = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1947: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:842:
+              iic_outb(adap, iic->directcntl,(0x00|lines));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1947: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:842:
+              iic_outb(adap, iic->directcntl,(0x00|lines));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1947: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:842:
+              iic_outb(adap, iic->directcntl,(0x00|lines));
                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1947: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:842:
+              iic_outb(adap, iic->directcntl,(0x00|lines));
                                                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1948: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:843:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1949: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:844:
+       else if (cmd == IICO_I2C_LINEREAD) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 13)
#1949: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:844:
+       else if (cmd == IICO_I2C_LINEREAD) {
+             ret = lines;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1949: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:844:
+       }
+       else if (cmd == IICO_I2C_LINEREAD) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1950: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:845:
+             ret = lines;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1950: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:845:
+             ret = lines;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1951: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:846:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1952: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:847:
+       return ret;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1955: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:850:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1958: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:853:
+       return I2C_FUNC_SMBUS_EMUL | I2C_FUNC_10BIT_ADDR | $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1958: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:853:
+       return I2C_FUNC_SMBUS_EMUL | I2C_FUNC_10BIT_ADDR | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1959: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:854:
+              I2C_FUNC_PROTOCOL_MANGLING; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1959: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:854:
+              I2C_FUNC_PROTOCOL_MANGLING; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1959: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:854:
+              I2C_FUNC_PROTOCOL_MANGLING; $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1962: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:857:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1966: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:861:
+       "IBM on-chip IIC algorithm",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1967: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:862:
+       I2C_ALGO_OCP,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1968: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:863:
+       iic_xfer,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1969: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:864:
+       NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1970: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:865:
+       NULL,                           /* slave_xmit           */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1971: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:866:
+       NULL,                           /* slave_recv           */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1972: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:867:
+       algo_control,                   /* ioctl                */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1973: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:868:
+       iic_func,                       /* functionality        */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1976: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:871:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1977: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:872:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1978: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:873:
+ * registering functions to load algorithms at runtime $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1981: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:876:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1987: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:882:
+       struct i2c_algo_iic_data *iic_adap = adap->algo_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1989: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:884:
+       DEB2(printk(KERN_DEBUG "i2c-algo-iic.o: hw routines for %s registered.\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1989: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:884:
+       DEB2(printk(KERN_DEBUG "i2c-algo-iic.o: hw routines for %s registered.\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1990: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:885:
+                   adap->name));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1990: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:885:
+                   adap->name));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1994: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:889:
+       adap->id |= iic_algo.id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1995: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:890:
+       adap->algo = &iic_algo;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1997: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:892:
+       adap->timeout = 100;    /* default values, should       */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1998: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:893:
+       adap->retries = 3;              /* be replaced by defines       */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2001: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:896:
+       MOD_INC_USE_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2004: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:899:
+       iic_init(iic_adap);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2005: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:900:
+       i2c_add_adapter(adap);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2009: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:904:
+       if (iic_scan) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2009: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:904:
+       if (iic_scan) {
+               printk(KERN_INFO " i2c-algo-iic.o: scanning bus %s.\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#2010: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:905:
+               printk(KERN_INFO " i2c-algo-iic.o: scanning bus %s.\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2010: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:905:
+               printk(KERN_INFO " i2c-algo-iic.o: scanning bus %s.\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2010: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:905:
+               printk(KERN_INFO " i2c-algo-iic.o: scanning bus %s.\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#2011: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:906:
+                      adap->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2011: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:906:
+                      adap->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2012: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:907:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2013: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:908:
+       return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2016: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:911:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2022: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:917:
+       int res;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#2023: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:918:
+       int res;
+       if ((res = i2c_del_adapter(adap)) < 0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2023: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:918:
+       if ((res = i2c_del_adapter(adap)) < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2023: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:918:
+       if ((res = i2c_del_adapter(adap)) < 0)
+               return res;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2023: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:918:
+       if ((res = i2c_del_adapter(adap)) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#2024: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:919:
+               return res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2024: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:919:
+               return res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2025: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:920:
+       DEB2(printk(KERN_DEBUG "i2c-algo-iic.o: adapter unregistered: %s\n",adap->name));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2025: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:920:
+       DEB2(printk(KERN_DEBUG "i2c-algo-iic.o: adapter unregistered: %s\n",adap->name));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2025: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:920:
+       DEB2(printk(KERN_DEBUG "i2c-algo-iic.o: adapter unregistered: %s\n",adap->name));
                                                                           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2028: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:923:
+       MOD_DEC_USE_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2030: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:925:
+       return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2033: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:928:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2037: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:932:
+int __init i2c_algo_iic_init (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2039: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:934:
+       printk(KERN_INFO "IBM On-chip iic (i2c) algorithm module 2002.27.03\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2039: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:934:
+       printk(KERN_INFO "IBM On-chip iic (i2c) algorithm module 2002.27.03\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2040: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:935:
+       return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2043: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:938:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2046: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:941:
+       return;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2049: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:944:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2050: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:945:
+EXPORT_SYMBOL(i2c_iic_add_bus);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2051: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:946:
+EXPORT_SYMBOL(i2c_iic_del_bus);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2062: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:957:
+MODULE_PARM(i2c_debug,"i");
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2067: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:962:
+        "debug level - 0 off; 1 normal; 2,3 more verbose; 9 iic-protocol");$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2067: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:962:
+MODULE_PARM_DESC(i2c_debug,
+        "debug level - 0 off; 1 normal; 2,3 more verbose; 9 iic-protocol");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2067: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:962:
+        "debug level - 0 off; 1 normal; 2,3 more verbose; 9 iic-protocol");$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2069: FILE: drivers/i2c/i2c-algo-ibm_ocp.c:964:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2075: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:1:
+/* ------------------------------------------------------------------------- */

ERROR:CODE_INDENT: code indent should use tabs where possible
#2079: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:5:
+                   1998-99 Hans Berglund$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2079: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:5:
+/*   Copyright (C) 1995-97 Simon G. Vogl
+                   1998-99 Hans Berglund

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2092: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:18:
+    along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2093: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:19:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2093: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:19:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                */

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#2096: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:22:
+/* With some changes from Kyösti Mälkki <kmalkki@cc.hut.fi> and even
                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2097: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:23:
+/* With some changes from Kyösti Mälkki <kmalkki@cc.hut.fi> and even
+   Frodo Looijaard <frodol@dds.nl> */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2097: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:23:
+   Frodo Looijaard <frodol@dds.nl> */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2100: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:26:
+/* Modifications by MontaVista Software, August 2000
+   Changes made to support the IIC peripheral on the IBM PPC 405 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2100: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:26:
+   Changes made to support the IIC peripheral on the IBM PPC 405 */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2109: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:35:
+       struct iic_regs *data;          /* private data for lolevel routines    */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2110: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:36:
+       void (*setiic) (void *data, int ctl, int val);$

WARNING:SPACING: Unnecessary space before function pointer arguments
#2110: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:36:
+       void (*setiic) (void *data, int ctl, int val);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2111: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:37:
+       int  (*getiic) (void *data, int ctl);$

WARNING:SPACING: Unnecessary space before function pointer arguments
#2111: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:37:
+       int  (*getiic) (void *data, int ctl);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2112: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:38:
+       int  (*getown) (void *data);$

WARNING:SPACING: Unnecessary space before function pointer arguments
#2112: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:38:
+       int  (*getown) (void *data);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2113: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:39:
+       int  (*getclock) (void *data);$

WARNING:SPACING: Unnecessary space before function pointer arguments
#2113: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:39:
+       int  (*getclock) (void *data);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2114: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:40:
+       void (*waitforpin) (void *data);     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2114: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:40:
+       void (*waitforpin) (void *data);     $

WARNING:SPACING: Unnecessary space before function pointer arguments
#2114: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:40:
+       void (*waitforpin) (void *data);     

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2117: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:43:
+       int udelay;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2118: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:44:
+       int mdelay;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2119: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:45:
+       int timeout;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2122: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:48:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2125: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:51:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct i2c_adapter *' should also have an identifier name
#2126: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:52:
+int i2c_iic_add_bus(struct i2c_adapter *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct i2c_adapter *' should also have an identifier name
#2127: FILE: drivers/i2c/i2c-algo-ibm_ocp.h:53:
+int i2c_iic_del_bus(struct i2c_adapter *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2136: FILE: drivers/i2c/i2c-elektor.c:122:
+       spinlock_t driver_lock = SPIN_LOCK_UNLOCKED;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2138: FILE: drivers/i2c/i2c-elektor.c:124:
        if (irq > 0) {
+               spin_lock_irq(&driver_lock);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2140: FILE: drivers/i2c/i2c-elektor.c:125:
+               spin_lock_irq(&driver_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2140: FILE: drivers/i2c/i2c-elektor.c:125:
+               spin_lock_irq(&driver_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2146: FILE: drivers/i2c/i2c-elektor.c:130:
+               spin_unlock_irq(&driver_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2146: FILE: drivers/i2c/i2c-elektor.c:130:
+               spin_unlock_irq(&driver_lock);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2161: FILE: drivers/i2c/i2c-frodo.c:1:
+

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2163: FILE: drivers/i2c/i2c-frodo.c:3:
+ * linux/drivers/i2c/i2c-frodo.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2188: FILE: drivers/i2c/i2c-frodo.c:28:
+static void frodo_setsda (void *data,int state)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2188: FILE: drivers/i2c/i2c-frodo.c:28:
+static void frodo_setsda (void *data,int state)
                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2190: FILE: drivers/i2c/i2c-frodo.c:30:
+       if (state)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2190: FILE: drivers/i2c/i2c-frodo.c:30:
+       if (state)
+               FRODO_CPLD_I2C |= FRODO_I2C_SDA_OUT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2191: FILE: drivers/i2c/i2c-frodo.c:31:
+               FRODO_CPLD_I2C |= FRODO_I2C_SDA_OUT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2191: FILE: drivers/i2c/i2c-frodo.c:31:
+               FRODO_CPLD_I2C |= FRODO_I2C_SDA_OUT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2192: FILE: drivers/i2c/i2c-frodo.c:32:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2192: FILE: drivers/i2c/i2c-frodo.c:32:
+       else
+               FRODO_CPLD_I2C &= ~FRODO_I2C_SDA_OUT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2193: FILE: drivers/i2c/i2c-frodo.c:33:
+               FRODO_CPLD_I2C &= ~FRODO_I2C_SDA_OUT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2193: FILE: drivers/i2c/i2c-frodo.c:33:
+               FRODO_CPLD_I2C &= ~FRODO_I2C_SDA_OUT;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2196: FILE: drivers/i2c/i2c-frodo.c:36:
+static void frodo_setscl (void *data,int state)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2196: FILE: drivers/i2c/i2c-frodo.c:36:
+static void frodo_setscl (void *data,int state)
                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2198: FILE: drivers/i2c/i2c-frodo.c:38:
+       if (state)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2198: FILE: drivers/i2c/i2c-frodo.c:38:
+       if (state)
+               FRODO_CPLD_I2C |= FRODO_I2C_SCL_OUT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2199: FILE: drivers/i2c/i2c-frodo.c:39:
+               FRODO_CPLD_I2C |= FRODO_I2C_SCL_OUT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2199: FILE: drivers/i2c/i2c-frodo.c:39:
+               FRODO_CPLD_I2C |= FRODO_I2C_SCL_OUT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2200: FILE: drivers/i2c/i2c-frodo.c:40:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2200: FILE: drivers/i2c/i2c-frodo.c:40:
+       else
+               FRODO_CPLD_I2C &= ~FRODO_I2C_SCL_OUT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2201: FILE: drivers/i2c/i2c-frodo.c:41:
+               FRODO_CPLD_I2C &= ~FRODO_I2C_SCL_OUT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2201: FILE: drivers/i2c/i2c-frodo.c:41:
+               FRODO_CPLD_I2C &= ~FRODO_I2C_SCL_OUT;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2204: FILE: drivers/i2c/i2c-frodo.c:44:
+static int frodo_getsda (void *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2206: FILE: drivers/i2c/i2c-frodo.c:46:
+       return ((FRODO_CPLD_I2C & FRODO_I2C_SDA_IN) != 0);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2209: FILE: drivers/i2c/i2c-frodo.c:49:
+static int frodo_getscl (void *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2211: FILE: drivers/i2c/i2c-frodo.c:51:
+       return ((FRODO_CPLD_I2C & FRODO_I2C_SCL_IN) != 0);$

WARNING:INDENTED_LABEL: labels should not be indented
#2215: FILE: drivers/i2c/i2c-frodo.c:55:
+       setsda:         frodo_setsda,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2216: FILE: drivers/i2c/i2c-frodo.c:56:
+       setscl:         frodo_setscl,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#2216: FILE: drivers/i2c/i2c-frodo.c:56:
+       setscl:         frodo_setscl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2217: FILE: drivers/i2c/i2c-frodo.c:57:
+       getsda:         frodo_getsda,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#2217: FILE: drivers/i2c/i2c-frodo.c:57:
+       getsda:         frodo_getsda,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2218: FILE: drivers/i2c/i2c-frodo.c:58:
+       getscl:         frodo_getscl,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#2218: FILE: drivers/i2c/i2c-frodo.c:58:
+       getscl:         frodo_getscl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2221: FILE: drivers/i2c/i2c-frodo.c:61:
+       timeout:        100
               ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2224: FILE: drivers/i2c/i2c-frodo.c:64:
+static int frodo_client_register (struct i2c_client *client)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2226: FILE: drivers/i2c/i2c-frodo.c:66:
+       return (0);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2226: FILE: drivers/i2c/i2c-frodo.c:66:
+       return (0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2229: FILE: drivers/i2c/i2c-frodo.c:69:
+static int frodo_client_unregister (struct i2c_client *client)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2231: FILE: drivers/i2c/i2c-frodo.c:71:
+       return (0);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2231: FILE: drivers/i2c/i2c-frodo.c:71:
+       return (0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2234: FILE: drivers/i2c/i2c-frodo.c:74:
+static void frodo_inc_use (struct i2c_adapter *adapter)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2236: FILE: drivers/i2c/i2c-frodo.c:76:
+       MOD_INC_USE_COUNT;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2239: FILE: drivers/i2c/i2c-frodo.c:79:
+static void frodo_dec_use (struct i2c_adapter *adapter)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2241: FILE: drivers/i2c/i2c-frodo.c:81:
+       MOD_DEC_USE_COUNT;$

WARNING:INDENTED_LABEL: labels should not be indented
#2245: FILE: drivers/i2c/i2c-frodo.c:85:
+       name:                           "Frodo adapter driver",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2246: FILE: drivers/i2c/i2c-frodo.c:86:
+       id:                                     I2C_HW_B_FRODO,
          ^

WARNING:INDENTED_LABEL: labels should not be indented
#2246: FILE: drivers/i2c/i2c-frodo.c:86:
+       id:                                     I2C_HW_B_FRODO,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2247: FILE: drivers/i2c/i2c-frodo.c:87:
+       algo:                           NULL,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#2247: FILE: drivers/i2c/i2c-frodo.c:87:
+       algo:                           NULL,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2248: FILE: drivers/i2c/i2c-frodo.c:88:
+       algo_data:                      &bit_frodo_data,
                 ^

WARNING:INDENTED_LABEL: labels should not be indented
#2248: FILE: drivers/i2c/i2c-frodo.c:88:
+       algo_data:                      &bit_frodo_data,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2249: FILE: drivers/i2c/i2c-frodo.c:89:
+       inc_use:                        frodo_inc_use,
               ^

WARNING:INDENTED_LABEL: labels should not be indented
#2249: FILE: drivers/i2c/i2c-frodo.c:89:
+       inc_use:                        frodo_inc_use,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2250: FILE: drivers/i2c/i2c-frodo.c:90:
+       dec_use:                        frodo_dec_use,
               ^

WARNING:INDENTED_LABEL: labels should not be indented
#2250: FILE: drivers/i2c/i2c-frodo.c:90:
+       dec_use:                        frodo_dec_use,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2251: FILE: drivers/i2c/i2c-frodo.c:91:
+       client_register:        frodo_client_register,
                       ^

WARNING:INDENTED_LABEL: labels should not be indented
#2251: FILE: drivers/i2c/i2c-frodo.c:91:
+       client_register:        frodo_client_register,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2252: FILE: drivers/i2c/i2c-frodo.c:92:
+       client_unregister:      frodo_client_unregister
                         ^

WARNING:INDENTED_LABEL: labels should not be indented
#2252: FILE: drivers/i2c/i2c-frodo.c:92:
+       client_unregister:      frodo_client_unregister

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2255: FILE: drivers/i2c/i2c-frodo.c:95:
+static int __init i2c_frodo_init (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2257: FILE: drivers/i2c/i2c-frodo.c:97:
+       return (i2c_bit_add_bus (&frodo_ops));$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2257: FILE: drivers/i2c/i2c-frodo.c:97:
+       return (i2c_bit_add_bus (&frodo_ops));

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2257: FILE: drivers/i2c/i2c-frodo.c:97:
+       return (i2c_bit_add_bus (&frodo_ops));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2262: FILE: drivers/i2c/i2c-frodo.c:102:
+static void __exit i2c_frodo_exit (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2264: FILE: drivers/i2c/i2c-frodo.c:104:
+       i2c_bit_del_bus (&frodo_ops);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2264: FILE: drivers/i2c/i2c-frodo.c:104:
+       i2c_bit_del_bus (&frodo_ops);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2267: FILE: drivers/i2c/i2c-frodo.c:107:
+MODULE_AUTHOR ("Abraham van der Merwe <abraham@2d3d.co.za>");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2268: FILE: drivers/i2c/i2c-frodo.c:108:
+MODULE_DESCRIPTION ("I2C-Bus adapter routines for Frodo");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2271: FILE: drivers/i2c/i2c-frodo.c:111:
+MODULE_LICENSE ("GPL");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2276: FILE: drivers/i2c/i2c-frodo.c:116:
+module_init (i2c_frodo_init);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2277: FILE: drivers/i2c/i2c-frodo.c:117:
+module_exit (i2c_frodo_exit);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2282: FILE: drivers/i2c/i2c-pcf-epp.c:1:
+/* ------------------------------------------------------------------------- */

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#2295: FILE: drivers/i2c/i2c-pcf-epp.c:14:
+#include <asm/io.h>

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2302: FILE: drivers/i2c/i2c-pcf-epp.c:21:
+  int pe_base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2303: FILE: drivers/i2c/i2c-pcf-epp.c:22:
+  int pe_irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2304: FILE: drivers/i2c/i2c-pcf-epp.c:23:
+  int pe_clock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2305: FILE: drivers/i2c/i2c-pcf-epp.c:24:
+  int pe_own;$

WARNING:SPACING: space prohibited before semicolon
#2306: FILE: drivers/i2c/i2c-pcf-epp.c:25:
+} ;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#2313: FILE: drivers/i2c/i2c-pcf-epp.c:32:
+static int base  = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#2314: FILE: drivers/i2c/i2c-pcf-epp.c:33:
+static int irq   = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#2315: FILE: drivers/i2c/i2c-pcf-epp.c:34:
+static int clock = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#2316: FILE: drivers/i2c/i2c-pcf-epp.c:35:
+static int own   = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#2317: FILE: drivers/i2c/i2c-pcf-epp.c:36:
+static int i2c_debug=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2317: FILE: drivers/i2c/i2c-pcf-epp.c:36:
+static int i2c_debug=0;
                     ^

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#2319: FILE: drivers/i2c/i2c-pcf-epp.c:38:
+#if (LINUX_VERSION_CODE < 0x020301)

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#2320: FILE: drivers/i2c/i2c-pcf-epp.c:39:
+static struct wait_queue *pcf_wait = NULL;

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#2327: FILE: drivers/i2c/i2c-pcf-epp.c:46:
+#define DEB(x) if (i2c_debug>=1) x
                             ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#2327: FILE: drivers/i2c/i2c-pcf-epp.c:46:
+#define DEB(x) if (i2c_debug>=1) x

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#2328: FILE: drivers/i2c/i2c-pcf-epp.c:47:
+#define DEB2(x) if (i2c_debug>=2) x
                              ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#2328: FILE: drivers/i2c/i2c-pcf-epp.c:47:
+#define DEB2(x) if (i2c_debug>=2) x

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#2329: FILE: drivers/i2c/i2c-pcf-epp.c:48:
+#define DEB3(x) if (i2c_debug>=3) x
                              ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#2329: FILE: drivers/i2c/i2c-pcf-epp.c:48:
+#define DEB3(x) if (i2c_debug>=3) x

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2333: FILE: drivers/i2c/i2c-pcf-epp.c:52:
+#define BASE   ((struct i2c_pcf_epp *)(data))->pe_base

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2335: FILE: drivers/i2c/i2c-pcf-epp.c:54:
+#define STAT   (BASE+1)                /* SPP status port */
                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2336: FILE: drivers/i2c/i2c-pcf-epp.c:55:
+#define CTRL   (BASE+2)                /* SPP control port */
                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2337: FILE: drivers/i2c/i2c-pcf-epp.c:56:
+#define EADD   (BASE+3)                /* EPP address port */
                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2338: FILE: drivers/i2c/i2c-pcf-epp.c:57:
+#define EDAT   (BASE+4)                /* EPP data port */
                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2344: FILE: drivers/i2c/i2c-pcf-epp.c:63:
+  if (ctl) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2344: FILE: drivers/i2c/i2c-pcf-epp.c:63:
+  if (ctl) {
+    if (gpe.pe_irq > 0) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2345: FILE: drivers/i2c/i2c-pcf-epp.c:64:
+    if (gpe.pe_irq > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#2345: FILE: drivers/i2c/i2c-pcf-epp.c:64:
+    if (gpe.pe_irq > 0) {
+      DEB3(printk(KERN_DEBUG "i2c-pcf-epp.o: Write control 0x%x\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2346: FILE: drivers/i2c/i2c-pcf-epp.c:65:
+      DEB3(printk(KERN_DEBUG "i2c-pcf-epp.o: Write control 0x%x\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2346: FILE: drivers/i2c/i2c-pcf-epp.c:65:
+      DEB3(printk(KERN_DEBUG "i2c-pcf-epp.o: Write control 0x%x\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#2347: FILE: drivers/i2c/i2c-pcf-epp.c:66:
+                 val|I2C_PCF_ENI));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2347: FILE: drivers/i2c/i2c-pcf-epp.c:66:
+      DEB3(printk(KERN_DEBUG "i2c-pcf-epp.o: Write control 0x%x\n",
+                 val|I2C_PCF_ENI));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2347: FILE: drivers/i2c/i2c-pcf-epp.c:66:
+                 val|I2C_PCF_ENI));$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2347: FILE: drivers/i2c/i2c-pcf-epp.c:66:
+                 val|I2C_PCF_ENI));
                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2349: FILE: drivers/i2c/i2c-pcf-epp.c:68:
+      outb(inb(CTRL) | PARPORT_CONTROL_INIT, CTRL);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2352: FILE: drivers/i2c/i2c-pcf-epp.c:71:
+      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2352: FILE: drivers/i2c/i2c-pcf-epp.c:71:
+      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2354: FILE: drivers/i2c/i2c-pcf-epp.c:73:
+      outb(val | I2C_PCF_ENI, EDAT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2355: FILE: drivers/i2c/i2c-pcf-epp.c:74:
+    } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#2355: FILE: drivers/i2c/i2c-pcf-epp.c:74:
+    } else {
+      DEB3(printk(KERN_DEBUG "i2c-pcf-epp.o: Write control 0x%x\n", val));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2356: FILE: drivers/i2c/i2c-pcf-epp.c:75:
+      DEB3(printk(KERN_DEBUG "i2c-pcf-epp.o: Write control 0x%x\n", val));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2356: FILE: drivers/i2c/i2c-pcf-epp.c:75:
+      DEB3(printk(KERN_DEBUG "i2c-pcf-epp.o: Write control 0x%x\n", val));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2358: FILE: drivers/i2c/i2c-pcf-epp.c:77:
+      outb(inb(CTRL) | PARPORT_CONTROL_INIT, CTRL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2359: FILE: drivers/i2c/i2c-pcf-epp.c:78:
+      outb(val, CTRL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2360: FILE: drivers/i2c/i2c-pcf-epp.c:79:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2361: FILE: drivers/i2c/i2c-pcf-epp.c:80:
+  } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2361: FILE: drivers/i2c/i2c-pcf-epp.c:80:
+  } else {
+    DEB3(printk(KERN_DEBUG "i2c-pcf-epp.o: Write data 0x%x\n", val));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2362: FILE: drivers/i2c/i2c-pcf-epp.c:81:
+    DEB3(printk(KERN_DEBUG "i2c-pcf-epp.o: Write data 0x%x\n", val));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2362: FILE: drivers/i2c/i2c-pcf-epp.c:81:
+    DEB3(printk(KERN_DEBUG "i2c-pcf-epp.o: Write data 0x%x\n", val));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2364: FILE: drivers/i2c/i2c-pcf-epp.c:83:
+    outb(inb(CTRL) & ~PARPORT_CONTROL_INIT, CTRL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2367: FILE: drivers/i2c/i2c-pcf-epp.c:86:
+    outb(val, EDAT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2368: FILE: drivers/i2c/i2c-pcf-epp.c:87:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2373: FILE: drivers/i2c/i2c-pcf-epp.c:92:
+  int val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2375: FILE: drivers/i2c/i2c-pcf-epp.c:94:
+  if (ctl) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2375: FILE: drivers/i2c/i2c-pcf-epp.c:94:
+  if (ctl) {
[...]
+    outb(inb(CTRL) | PARPORT_CONTROL_INIT, CTRL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2377: FILE: drivers/i2c/i2c-pcf-epp.c:96:
+    outb(inb(CTRL) | PARPORT_CONTROL_INIT, CTRL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2378: FILE: drivers/i2c/i2c-pcf-epp.c:97:
+    val = inb(EDAT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2379: FILE: drivers/i2c/i2c-pcf-epp.c:98:
+    DEB3(printk(KERN_DEBUG "i2c-pcf-epp.o: Read control 0x%x\n", val));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2379: FILE: drivers/i2c/i2c-pcf-epp.c:98:
+    DEB3(printk(KERN_DEBUG "i2c-pcf-epp.o: Read control 0x%x\n", val));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2380: FILE: drivers/i2c/i2c-pcf-epp.c:99:
+  } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2380: FILE: drivers/i2c/i2c-pcf-epp.c:99:
+  } else {
[...]
+    outb(inb(CTRL) & ~PARPORT_CONTROL_INIT, CTRL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2382: FILE: drivers/i2c/i2c-pcf-epp.c:101:
+    outb(inb(CTRL) & ~PARPORT_CONTROL_INIT, CTRL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2383: FILE: drivers/i2c/i2c-pcf-epp.c:102:
+    val = inb(EDAT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2384: FILE: drivers/i2c/i2c-pcf-epp.c:103:
+    DEB3(printk(KERN_DEBUG "i2c-pcf-epp.o: Read data 0x%x\n", val));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2384: FILE: drivers/i2c/i2c-pcf-epp.c:103:
+    DEB3(printk(KERN_DEBUG "i2c-pcf-epp.o: Read data 0x%x\n", val));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2385: FILE: drivers/i2c/i2c-pcf-epp.c:104:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2386: FILE: drivers/i2c/i2c-pcf-epp.c:105:
+  return (val);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2391: FILE: drivers/i2c/i2c-pcf-epp.c:110:
+  return (gpe.pe_own);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2391: FILE: drivers/i2c/i2c-pcf-epp.c:110:
+  return (gpe.pe_own);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2394: FILE: drivers/i2c/i2c-pcf-epp.c:113:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2397: FILE: drivers/i2c/i2c-pcf-epp.c:116:
+  return (gpe.pe_clock);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2397: FILE: drivers/i2c/i2c-pcf-epp.c:116:
+  return (gpe.pe_clock);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2400: FILE: drivers/i2c/i2c-pcf-epp.c:119:
+#if 0

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2403: FILE: drivers/i2c/i2c-pcf-epp.c:122:
+  schedule_timeout( timeout * HZ);$

ERROR:SPACING: space prohibited after that open parenthesis '('
#2403: FILE: drivers/i2c/i2c-pcf-epp.c:122:
+  schedule_timeout( timeout * HZ);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#2407: FILE: drivers/i2c/i2c-pcf-epp.c:126:
+static void pcf_epp_waitforpin(void) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2408: FILE: drivers/i2c/i2c-pcf-epp.c:127:
+  int timeout = 10;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2409: FILE: drivers/i2c/i2c-pcf-epp.c:128:
+  spinlock_t driver_lock = SPIN_LOCK_UNLOCKED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2411: FILE: drivers/i2c/i2c-pcf-epp.c:130:
+  if (gpe.pe_irq > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2411: FILE: drivers/i2c/i2c-pcf-epp.c:130:
+  if (gpe.pe_irq > 0) {
+    spin_lock_irq(&driver_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2412: FILE: drivers/i2c/i2c-pcf-epp.c:131:
+    spin_lock_irq(&driver_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2413: FILE: drivers/i2c/i2c-pcf-epp.c:132:
+    if (pcf_pending == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#2413: FILE: drivers/i2c/i2c-pcf-epp.c:132:
+    if (pcf_pending == 0) {
+      interruptible_sleep_on_timeout(&pcf_wait, timeout*HZ);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2414: FILE: drivers/i2c/i2c-pcf-epp.c:133:
+      interruptible_sleep_on_timeout(&pcf_wait, timeout*HZ);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2414: FILE: drivers/i2c/i2c-pcf-epp.c:133:
+      interruptible_sleep_on_timeout(&pcf_wait, timeout*HZ);
                                                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2416: FILE: drivers/i2c/i2c-pcf-epp.c:135:
+    } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#2416: FILE: drivers/i2c/i2c-pcf-epp.c:135:
+    } else {
+      pcf_pending = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2417: FILE: drivers/i2c/i2c-pcf-epp.c:136:
+      pcf_pending = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2418: FILE: drivers/i2c/i2c-pcf-epp.c:137:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2419: FILE: drivers/i2c/i2c-pcf-epp.c:138:
+    spin_unlock_irq(&driver_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2420: FILE: drivers/i2c/i2c-pcf-epp.c:139:
+  } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2420: FILE: drivers/i2c/i2c-pcf-epp.c:139:
+  } else {
+    udelay(100);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2421: FILE: drivers/i2c/i2c-pcf-epp.c:140:
+    udelay(100);$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2421: FILE: drivers/i2c/i2c-pcf-epp.c:140:
+    udelay(100);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2422: FILE: drivers/i2c/i2c-pcf-epp.c:141:
+  }$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#2425: FILE: drivers/i2c/i2c-pcf-epp.c:144:
+static void pcf_epp_handler(int this_irq, void *dev_id, struct pt_regs *regs) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2426: FILE: drivers/i2c/i2c-pcf-epp.c:145:
+  pcf_pending = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2427: FILE: drivers/i2c/i2c-pcf-epp.c:146:
+  wake_up_interruptible(&pcf_wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2428: FILE: drivers/i2c/i2c-pcf-epp.c:147:
+  DEB3(printk(KERN_DEBUG "i2c-pcf-epp.o: in interrupt handler.\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2428: FILE: drivers/i2c/i2c-pcf-epp.c:147:
+  DEB3(printk(KERN_DEBUG "i2c-pcf-epp.o: in interrupt handler.\n"));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2431: FILE: drivers/i2c/i2c-pcf-epp.c:150:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2434: FILE: drivers/i2c/i2c-pcf-epp.c:153:
+  if (check_region(gpe.pe_base, 5) < 0 ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2434: FILE: drivers/i2c/i2c-pcf-epp.c:153:
+  if (check_region(gpe.pe_base, 5) < 0 ) {
[...]
+    printk(KERN_WARNING "Could not request port region with base 0x%x\n", gpe.pe_base);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2434: FILE: drivers/i2c/i2c-pcf-epp.c:153:
+  if (check_region(gpe.pe_base, 5) < 0 ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2435: FILE: drivers/i2c/i2c-pcf-epp.c:154:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2435: FILE: drivers/i2c/i2c-pcf-epp.c:154:
+    $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2435: FILE: drivers/i2c/i2c-pcf-epp.c:154:
+  if (check_region(gpe.pe_base, 5) < 0 ) {
+    

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2436: FILE: drivers/i2c/i2c-pcf-epp.c:155:
+    printk(KERN_WARNING "Could not request port region with base 0x%x\n", gpe.pe_base);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2436: FILE: drivers/i2c/i2c-pcf-epp.c:155:
+    printk(KERN_WARNING "Could not request port region with base 0x%x\n", gpe.pe_base);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2437: FILE: drivers/i2c/i2c-pcf-epp.c:156:
+    return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2438: FILE: drivers/i2c/i2c-pcf-epp.c:157:
+  } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2438: FILE: drivers/i2c/i2c-pcf-epp.c:157:
+  } else {
+    request_region(gpe.pe_base, 5, "i2c (EPP parallel port adapter)");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2439: FILE: drivers/i2c/i2c-pcf-epp.c:158:
+    request_region(gpe.pe_base, 5, "i2c (EPP parallel port adapter)");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2440: FILE: drivers/i2c/i2c-pcf-epp.c:159:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2442: FILE: drivers/i2c/i2c-pcf-epp.c:161:
+  DEB3(printk(KERN_DEBUG "i2c-pcf-epp.o: init status port = 0x%x\n", inb(0x379)));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2442: FILE: drivers/i2c/i2c-pcf-epp.c:161:
+  DEB3(printk(KERN_DEBUG "i2c-pcf-epp.o: init status port = 0x%x\n", inb(0x379)));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2443: FILE: drivers/i2c/i2c-pcf-epp.c:162:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2443: FILE: drivers/i2c/i2c-pcf-epp.c:162:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2444: FILE: drivers/i2c/i2c-pcf-epp.c:163:
+  if (gpe.pe_irq > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2444: FILE: drivers/i2c/i2c-pcf-epp.c:163:
+  if (gpe.pe_irq > 0) {
+    if (request_irq(gpe.pe_irq, pcf_epp_handler, 0, "PCF8584", 0) < 0) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2445: FILE: drivers/i2c/i2c-pcf-epp.c:164:
+    if (request_irq(gpe.pe_irq, pcf_epp_handler, 0, "PCF8584", 0) < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#2445: FILE: drivers/i2c/i2c-pcf-epp.c:164:
+    if (request_irq(gpe.pe_irq, pcf_epp_handler, 0, "PCF8584", 0) < 0) {
+      printk(KERN_NOTICE "i2c-pcf-epp.o: Request irq%d failed\n", gpe.pe_irq);

CHECK:BRACES: braces {} should be used on all arms of this statement
#2445: FILE: drivers/i2c/i2c-pcf-epp.c:164:
+    if (request_irq(gpe.pe_irq, pcf_epp_handler, 0, "PCF8584", 0) < 0) {
[...]
+    } else
[...]

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2446: FILE: drivers/i2c/i2c-pcf-epp.c:165:
+      printk(KERN_NOTICE "i2c-pcf-epp.o: Request irq%d failed\n", gpe.pe_irq);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#2446: FILE: drivers/i2c/i2c-pcf-epp.c:165:
+      printk(KERN_NOTICE "i2c-pcf-epp.o: Request irq%d failed\n", gpe.pe_irq);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2447: FILE: drivers/i2c/i2c-pcf-epp.c:166:
+      gpe.pe_irq = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2448: FILE: drivers/i2c/i2c-pcf-epp.c:167:
+    } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#2448: FILE: drivers/i2c/i2c-pcf-epp.c:167:
+    } else
+      disable_irq(gpe.pe_irq);

CHECK:BRACES: Unbalanced braces around else statement
#2448: FILE: drivers/i2c/i2c-pcf-epp.c:167:
+    } else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2449: FILE: drivers/i2c/i2c-pcf-epp.c:168:
+      disable_irq(gpe.pe_irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2450: FILE: drivers/i2c/i2c-pcf-epp.c:169:
+      enable_irq(gpe.pe_irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2451: FILE: drivers/i2c/i2c-pcf-epp.c:170:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2454: FILE: drivers/i2c/i2c-pcf-epp.c:173:
+  outb(inb(CTRL)|0x14, CTRL);$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2454: FILE: drivers/i2c/i2c-pcf-epp.c:173:
+  outb(inb(CTRL)|0x14, CTRL);
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2456: FILE: drivers/i2c/i2c-pcf-epp.c:175:
+  outb(inb(STAT)|0x01, STAT);$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2456: FILE: drivers/i2c/i2c-pcf-epp.c:175:
+  outb(inb(STAT)|0x01, STAT);
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2457: FILE: drivers/i2c/i2c-pcf-epp.c:176:
+  outb(inb(STAT)&~0x01,STAT);$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#2457: FILE: drivers/i2c/i2c-pcf-epp.c:176:
+  outb(inb(STAT)&~0x01,STAT);
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2457: FILE: drivers/i2c/i2c-pcf-epp.c:176:
+  outb(inb(STAT)&~0x01,STAT);
                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2458: FILE: drivers/i2c/i2c-pcf-epp.c:177:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2458: FILE: drivers/i2c/i2c-pcf-epp.c:177:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2459: FILE: drivers/i2c/i2c-pcf-epp.c:178:
+  return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2462: FILE: drivers/i2c/i2c-pcf-epp.c:181:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2465: FILE: drivers/i2c/i2c-pcf-epp.c:184:
+  if (gpe.pe_irq > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2465: FILE: drivers/i2c/i2c-pcf-epp.c:184:
+  if (gpe.pe_irq > 0) {
+    disable_irq(gpe.pe_irq);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2466: FILE: drivers/i2c/i2c-pcf-epp.c:185:
+    disable_irq(gpe.pe_irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2467: FILE: drivers/i2c/i2c-pcf-epp.c:186:
+    free_irq(gpe.pe_irq, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2468: FILE: drivers/i2c/i2c-pcf-epp.c:187:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2469: FILE: drivers/i2c/i2c-pcf-epp.c:188:
+  release_region(gpe.pe_base , 5);$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2469: FILE: drivers/i2c/i2c-pcf-epp.c:188:
+  release_region(gpe.pe_base , 5);
                              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2472: FILE: drivers/i2c/i2c-pcf-epp.c:191:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2475: FILE: drivers/i2c/i2c-pcf-epp.c:194:
+  return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2478: FILE: drivers/i2c/i2c-pcf-epp.c:197:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2481: FILE: drivers/i2c/i2c-pcf-epp.c:200:
+  return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2487: FILE: drivers/i2c/i2c-pcf-epp.c:206:
+  MOD_INC_USE_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2494: FILE: drivers/i2c/i2c-pcf-epp.c:213:
+  MOD_DEC_USE_COUNT;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2498: FILE: drivers/i2c/i2c-pcf-epp.c:217:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2504: FILE: drivers/i2c/i2c-pcf-epp.c:223:
+  NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2505: FILE: drivers/i2c/i2c-pcf-epp.c:224:
+  pcf_epp_setbyte,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2506: FILE: drivers/i2c/i2c-pcf-epp.c:225:
+  pcf_epp_getbyte,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2507: FILE: drivers/i2c/i2c-pcf-epp.c:226:
+  pcf_epp_getown,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2508: FILE: drivers/i2c/i2c-pcf-epp.c:227:
+  pcf_epp_getclock,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2509: FILE: drivers/i2c/i2c-pcf-epp.c:228:
+  pcf_epp_waitforpin,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2510: FILE: drivers/i2c/i2c-pcf-epp.c:229:
+  80, 80, 100,         /*      waits, timeout */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2514: FILE: drivers/i2c/i2c-pcf-epp.c:233:
+  "PCF8584 EPP adapter",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2515: FILE: drivers/i2c/i2c-pcf-epp.c:234:
+  I2C_HW_P_LP,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2516: FILE: drivers/i2c/i2c-pcf-epp.c:235:
+  NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2517: FILE: drivers/i2c/i2c-pcf-epp.c:236:
+  &pcf_epp_data,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2518: FILE: drivers/i2c/i2c-pcf-epp.c:237:
+  pcf_epp_inc_use,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2519: FILE: drivers/i2c/i2c-pcf-epp.c:238:
+  pcf_epp_dec_use,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2520: FILE: drivers/i2c/i2c-pcf-epp.c:239:
+  pcf_epp_reg,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2521: FILE: drivers/i2c/i2c-pcf-epp.c:240:
+  pcf_epp_unreg,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2524: FILE: drivers/i2c/i2c-pcf-epp.c:243:
+int __init i2c_pcfepp_init(void) $

CHECK:SPACING: No space is necessary after a cast
#2524: FILE: drivers/i2c/i2c-pcf-epp.c:243:
+int __init i2c_pcfepp_init(void) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2526: FILE: drivers/i2c/i2c-pcf-epp.c:245:
+  struct i2c_pcf_epp *pepp = &gpe;$

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#2528: FILE: drivers/i2c/i2c-pcf-epp.c:247:
+  printk(KERN_DEBUG "i2c-pcf-epp.o: i2c pcf8584-epp adapter module version %s (%s)\n", I2C_VERSION, I2C_DATE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2528: FILE: drivers/i2c/i2c-pcf-epp.c:247:
+  printk(KERN_DEBUG "i2c-pcf-epp.o: i2c pcf8584-epp adapter module version %s (%s)\n", I2C_VERSION, I2C_DATE);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2528: FILE: drivers/i2c/i2c-pcf-epp.c:247:
+  printk(KERN_DEBUG "i2c-pcf-epp.o: i2c pcf8584-epp adapter module version %s (%s)\n", I2C_VERSION, I2C_DATE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2529: FILE: drivers/i2c/i2c-pcf-epp.c:248:
+  if (base == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2529: FILE: drivers/i2c/i2c-pcf-epp.c:248:
+  if (base == 0)
+    pepp->pe_base = DEFAULT_BASE;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2530: FILE: drivers/i2c/i2c-pcf-epp.c:249:
+    pepp->pe_base = DEFAULT_BASE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2531: FILE: drivers/i2c/i2c-pcf-epp.c:250:
+  else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2531: FILE: drivers/i2c/i2c-pcf-epp.c:250:
+  else
+    pepp->pe_base = base;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2532: FILE: drivers/i2c/i2c-pcf-epp.c:251:
+    pepp->pe_base = base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2534: FILE: drivers/i2c/i2c-pcf-epp.c:253:
+  if (irq == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2534: FILE: drivers/i2c/i2c-pcf-epp.c:253:
+  if (irq == 0)
+    pepp->pe_irq = DEFAULT_IRQ;

CHECK:BRACES: braces {} should be used on all arms of this statement
#2534: FILE: drivers/i2c/i2c-pcf-epp.c:253:
+  if (irq == 0)
[...]
+  else if (irq<0) {
[...]
+  } else {
[...]

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2535: FILE: drivers/i2c/i2c-pcf-epp.c:254:
+    pepp->pe_irq = DEFAULT_IRQ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2536: FILE: drivers/i2c/i2c-pcf-epp.c:255:
+  else if (irq<0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2536: FILE: drivers/i2c/i2c-pcf-epp.c:255:
+  else if (irq<0) {
[...]
+    pepp->pe_irq=0;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2536: FILE: drivers/i2c/i2c-pcf-epp.c:255:
+  else if (irq<0) {
               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2538: FILE: drivers/i2c/i2c-pcf-epp.c:257:
+    pepp->pe_irq=0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2538: FILE: drivers/i2c/i2c-pcf-epp.c:257:
+    pepp->pe_irq=0;
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2539: FILE: drivers/i2c/i2c-pcf-epp.c:258:
+  } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2539: FILE: drivers/i2c/i2c-pcf-epp.c:258:
+  } else {
+    pepp->pe_irq = irq;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2540: FILE: drivers/i2c/i2c-pcf-epp.c:259:
+    pepp->pe_irq = irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2541: FILE: drivers/i2c/i2c-pcf-epp.c:260:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2542: FILE: drivers/i2c/i2c-pcf-epp.c:261:
+  if (clock == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2542: FILE: drivers/i2c/i2c-pcf-epp.c:261:
+  if (clock == 0)
+    pepp->pe_clock = DEFAULT_CLOCK;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2543: FILE: drivers/i2c/i2c-pcf-epp.c:262:
+    pepp->pe_clock = DEFAULT_CLOCK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2544: FILE: drivers/i2c/i2c-pcf-epp.c:263:
+  else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2544: FILE: drivers/i2c/i2c-pcf-epp.c:263:
+  else
+    pepp->pe_clock = clock;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2545: FILE: drivers/i2c/i2c-pcf-epp.c:264:
+    pepp->pe_clock = clock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2547: FILE: drivers/i2c/i2c-pcf-epp.c:266:
+  if (own == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2547: FILE: drivers/i2c/i2c-pcf-epp.c:266:
+  if (own == 0)
+    pepp->pe_own = DEFAULT_OWN;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2548: FILE: drivers/i2c/i2c-pcf-epp.c:267:
+    pepp->pe_own = DEFAULT_OWN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2549: FILE: drivers/i2c/i2c-pcf-epp.c:268:
+  else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2549: FILE: drivers/i2c/i2c-pcf-epp.c:268:
+  else
+    pepp->pe_own = own;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2550: FILE: drivers/i2c/i2c-pcf-epp.c:269:
+    pepp->pe_own = own;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2552: FILE: drivers/i2c/i2c-pcf-epp.c:271:
+  pcf_epp_data.data = (void *)pepp;$

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#2553: FILE: drivers/i2c/i2c-pcf-epp.c:272:
+#if (LINUX_VERSION_CODE >= 0x020301)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2554: FILE: drivers/i2c/i2c-pcf-epp.c:273:
+  init_waitqueue_head(&pcf_wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2556: FILE: drivers/i2c/i2c-pcf-epp.c:275:
+  if (pcf_epp_init(pepp) == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2556: FILE: drivers/i2c/i2c-pcf-epp.c:275:
+  if (pcf_epp_init(pepp) == 0) {
+    int ret;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2557: FILE: drivers/i2c/i2c-pcf-epp.c:276:
+    int ret;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#2558: FILE: drivers/i2c/i2c-pcf-epp.c:277:
+    int ret;
+    if ( (ret = i2c_pcf_add_bus(&pcf_epp_ops)) < 0) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2558: FILE: drivers/i2c/i2c-pcf-epp.c:277:
+    if ( (ret = i2c_pcf_add_bus(&pcf_epp_ops)) < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#2558: FILE: drivers/i2c/i2c-pcf-epp.c:277:
+    if ( (ret = i2c_pcf_add_bus(&pcf_epp_ops)) < 0) {
+      printk(KERN_WARNING "i2c_pcf_add_bus caused an error: %d\n",ret);

ERROR:SPACING: space prohibited after that open parenthesis '('
#2558: FILE: drivers/i2c/i2c-pcf-epp.c:277:
+    if ( (ret = i2c_pcf_add_bus(&pcf_epp_ops)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2558: FILE: drivers/i2c/i2c-pcf-epp.c:277:
+    if ( (ret = i2c_pcf_add_bus(&pcf_epp_ops)) < 0) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2559: FILE: drivers/i2c/i2c-pcf-epp.c:278:
+      printk(KERN_WARNING "i2c_pcf_add_bus caused an error: %d\n",ret);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2559: FILE: drivers/i2c/i2c-pcf-epp.c:278:
+      printk(KERN_WARNING "i2c_pcf_add_bus caused an error: %d\n",ret);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2559: FILE: drivers/i2c/i2c-pcf-epp.c:278:
+      printk(KERN_WARNING "i2c_pcf_add_bus caused an error: %d\n",ret);
                                                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2560: FILE: drivers/i2c/i2c-pcf-epp.c:279:
+      release_region(pepp->pe_base , 5);$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2560: FILE: drivers/i2c/i2c-pcf-epp.c:279:
+      release_region(pepp->pe_base , 5);
                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2561: FILE: drivers/i2c/i2c-pcf-epp.c:280:
+      return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2562: FILE: drivers/i2c/i2c-pcf-epp.c:281:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2563: FILE: drivers/i2c/i2c-pcf-epp.c:282:
+  } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#2563: FILE: drivers/i2c/i2c-pcf-epp.c:282:
+  } else {
[...]
+    return -ENODEV;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2564: FILE: drivers/i2c/i2c-pcf-epp.c:283:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2564: FILE: drivers/i2c/i2c-pcf-epp.c:283:
+    $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2564: FILE: drivers/i2c/i2c-pcf-epp.c:283:
+  } else {
+    

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2565: FILE: drivers/i2c/i2c-pcf-epp.c:284:
+    return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2566: FILE: drivers/i2c/i2c-pcf-epp.c:285:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2567: FILE: drivers/i2c/i2c-pcf-epp.c:286:
+  printk(KERN_DEBUG "i2c-pcf-epp.o: found device at %#x.\n", pepp->pe_base);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2567: FILE: drivers/i2c/i2c-pcf-epp.c:286:
+  printk(KERN_DEBUG "i2c-pcf-epp.o: found device at %#x.\n", pepp->pe_base);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2568: FILE: drivers/i2c/i2c-pcf-epp.c:287:
+  return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2571: FILE: drivers/i2c/i2c-pcf-epp.c:290:
+
+

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2575: FILE: drivers/i2c/i2c-pcf-epp.c:294:
+MODULE_AUTHOR("Hans Berglund <hb@spacetec.no> \n modified by Ryosuke Tajima <rosk@jsk.t.u-tokyo.ac.jp>");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2584: FILE: drivers/i2c/i2c-pcf-epp.c:303:
+int init_module(void) $

CHECK:SPACING: No space is necessary after a cast
#2584: FILE: drivers/i2c/i2c-pcf-epp.c:303:
+int init_module(void) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2586: FILE: drivers/i2c/i2c-pcf-epp.c:305:
+  return i2c_pcfepp_init();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2589: FILE: drivers/i2c/i2c-pcf-epp.c:308:
+void cleanup_module(void) $

CHECK:SPACING: No space is necessary after a cast
#2589: FILE: drivers/i2c/i2c-pcf-epp.c:308:
+void cleanup_module(void) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2591: FILE: drivers/i2c/i2c-pcf-epp.c:310:
+  i2c_pcf_del_bus(&pcf_epp_ops);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2592: FILE: drivers/i2c/i2c-pcf-epp.c:311:
+  pcf_epp_exit();$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2597: FILE: drivers/i2c/i2c-pcf-epp.c:316:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2601: FILE: drivers/i2c/i2c-pport.c:1:
+/* ------------------------------------------------------------------------- */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2605: FILE: drivers/i2c/i2c-pport.c:5:
+/*   Copyright (C) 2001    Daniel Smolik
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2617: FILE: drivers/i2c/i2c-pport.c:17:
+    along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2618: FILE: drivers/i2c/i2c-pport.c:18:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.               */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2618: FILE: drivers/i2c/i2c-pport.c:18:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.               */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2622: FILE: drivers/i2c/i2c-pport.c:22:
+/*
+       See doc/i2c-pport for instructions on wiring to the

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2628: FILE: drivers/i2c/i2c-pport.c:28:
+
+

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#2635: FILE: drivers/i2c/i2c-pport.c:35:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#2637: FILE: drivers/i2c/i2c-pport.c:37:
+#include <asm/io.h>

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#2647: FILE: drivers/i2c/i2c-pport.c:47:
+static int base=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2647: FILE: drivers/i2c/i2c-pport.c:47:
+static int base=0;
                ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#2648: FILE: drivers/i2c/i2c-pport.c:48:
+static unsigned char PortData = 0;

CHECK:CAMELCASE: Avoid CamelCase: <PortData>
#2648: FILE: drivers/i2c/i2c-pport.c:48:
+static unsigned char PortData = 0;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2657: FILE: drivers/i2c/i2c-pport.c:57:
+#define BASE   (unsigned int)(data)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2659: FILE: drivers/i2c/i2c-pport.c:59:
+#define STAT   (BASE+1)                /* Centronics status port       */
                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2660: FILE: drivers/i2c/i2c-pport.c:60:
+#define CTRL   (BASE+2)                /* Centronics control port      */
                     ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2665: FILE: drivers/i2c/i2c-pport.c:65:
+#define  SET_SCL    | 0x04

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#2666: FILE: drivers/i2c/i2c-pport.c:66:
+#define  CLR_SCL    & 0xFB
                     ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2666: FILE: drivers/i2c/i2c-pport.c:66:
+#define  CLR_SCL    & 0xFB

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2668: FILE: drivers/i2c/i2c-pport.c:68:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2670: FILE: drivers/i2c/i2c-pport.c:70:
+
+

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#2671: FILE: drivers/i2c/i2c-pport.c:71:
+#define  SET_SDA    & 0x04
                     ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2671: FILE: drivers/i2c/i2c-pport.c:71:
+#define  SET_SDA    & 0x04

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2672: FILE: drivers/i2c/i2c-pport.c:72:
+#define  CLR_SDA    | 0x02

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2674: FILE: drivers/i2c/i2c-pport.c:74:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2677: FILE: drivers/i2c/i2c-pport.c:77:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2680: FILE: drivers/i2c/i2c-pport.c:80:
+       if (state) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2680: FILE: drivers/i2c/i2c-pport.c:80:
+       if (state) {
[...]
+               PortData = PortData SET_SCL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2681: FILE: drivers/i2c/i2c-pport.c:81:
+               //high$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2682: FILE: drivers/i2c/i2c-pport.c:82:
+               PortData = PortData SET_SCL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2682: FILE: drivers/i2c/i2c-pport.c:82:
+               PortData = PortData SET_SCL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2683: FILE: drivers/i2c/i2c-pport.c:83:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2683: FILE: drivers/i2c/i2c-pport.c:83:
+       } else {
[...]
+               PortData = PortData CLR_SCL; 

ERROR:CODE_INDENT: code indent should use tabs where possible
#2684: FILE: drivers/i2c/i2c-pport.c:84:
+               //low$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2685: FILE: drivers/i2c/i2c-pport.c:85:
+               PortData = PortData CLR_SCL; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2685: FILE: drivers/i2c/i2c-pport.c:85:
+               PortData = PortData CLR_SCL; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2685: FILE: drivers/i2c/i2c-pport.c:85:
+               PortData = PortData CLR_SCL; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2686: FILE: drivers/i2c/i2c-pport.c:86:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2687: FILE: drivers/i2c/i2c-pport.c:87:
+       outb(PortData, CTRL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2692: FILE: drivers/i2c/i2c-pport.c:92:
+       if (state) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2692: FILE: drivers/i2c/i2c-pport.c:92:
+       if (state) {
[...]
+               PortData = PortData SET_SDA;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2692: FILE: drivers/i2c/i2c-pport.c:92:
+       if (state) {
[...]
+       } else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2693: FILE: drivers/i2c/i2c-pport.c:93:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2693: FILE: drivers/i2c/i2c-pport.c:93:
+               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2693: FILE: drivers/i2c/i2c-pport.c:93:
+               $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2693: FILE: drivers/i2c/i2c-pport.c:93:
+       if (state) {
+               

ERROR:CODE_INDENT: code indent should use tabs where possible
#2694: FILE: drivers/i2c/i2c-pport.c:94:
+               PortData = PortData SET_SDA;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2694: FILE: drivers/i2c/i2c-pport.c:94:
+               PortData = PortData SET_SDA;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2695: FILE: drivers/i2c/i2c-pport.c:95:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2695: FILE: drivers/i2c/i2c-pport.c:95:
+       } else {
[...]
+               PortData = PortData CLR_SDA;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2696: FILE: drivers/i2c/i2c-pport.c:96:
+       } else {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#2697: FILE: drivers/i2c/i2c-pport.c:97:
+               PortData = PortData CLR_SDA;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2697: FILE: drivers/i2c/i2c-pport.c:97:
+               PortData = PortData CLR_SDA;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2698: FILE: drivers/i2c/i2c-pport.c:98:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2699: FILE: drivers/i2c/i2c-pport.c:99:
+       outb(PortData, CTRL);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2700: FILE: drivers/i2c/i2c-pport.c:100:
+} $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2704: FILE: drivers/i2c/i2c-pport.c:104:
+{
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2705: FILE: drivers/i2c/i2c-pport.c:105:
+       return ( 4 == ( (inb_p(CTRL)) & 0x04 ) );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#2705: FILE: drivers/i2c/i2c-pport.c:105:
+       return ( 4 == ( (inb_p(CTRL)) & 0x04 ) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2705: FILE: drivers/i2c/i2c-pport.c:105:
+       return ( 4 == ( (inb_p(CTRL)) & 0x04 ) );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2710: FILE: drivers/i2c/i2c-pport.c:110:
+       return ( 0 == ( (inb_p(CTRL)) & 0x02 ) );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#2710: FILE: drivers/i2c/i2c-pport.c:110:
+       return ( 0 == ( (inb_p(CTRL)) & 0x02 ) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2710: FILE: drivers/i2c/i2c-pport.c:110:
+       return ( 0 == ( (inb_p(CTRL)) & 0x02 ) );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2717: FILE: drivers/i2c/i2c-pport.c:117:
+       if (check_region((base+2),1) < 0 ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2717: FILE: drivers/i2c/i2c-pport.c:117:
+       if (check_region((base+2),1) < 0 ) {
+               return -ENODEV; 

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2717: FILE: drivers/i2c/i2c-pport.c:117:
+       if (check_region((base+2),1) < 0 ) {
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2717: FILE: drivers/i2c/i2c-pport.c:117:
+       if (check_region((base+2),1) < 0 ) {
                                 ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2717: FILE: drivers/i2c/i2c-pport.c:117:
+       if (check_region((base+2),1) < 0 ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2718: FILE: drivers/i2c/i2c-pport.c:118:
+               return -ENODEV; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2718: FILE: drivers/i2c/i2c-pport.c:118:
+               return -ENODEV; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2718: FILE: drivers/i2c/i2c-pport.c:118:
+               return -ENODEV; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2719: FILE: drivers/i2c/i2c-pport.c:119:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2719: FILE: drivers/i2c/i2c-pport.c:119:
+       } else {
[...]
+               PortData=inb(base+2);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2720: FILE: drivers/i2c/i2c-pport.c:120:
+       } else {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#2721: FILE: drivers/i2c/i2c-pport.c:121:
+               /* test for PPORT adap.         */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2722: FILE: drivers/i2c/i2c-pport.c:122:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2722: FILE: drivers/i2c/i2c-pport.c:122:
+       $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2723: FILE: drivers/i2c/i2c-pport.c:123:
+       
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#2724: FILE: drivers/i2c/i2c-pport.c:124:
+               PortData=inb(base+2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2724: FILE: drivers/i2c/i2c-pport.c:124:
+               PortData=inb(base+2);$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2724: FILE: drivers/i2c/i2c-pport.c:124:
+               PortData=inb(base+2);
                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2724: FILE: drivers/i2c/i2c-pport.c:124:
+               PortData=inb(base+2);
                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2725: FILE: drivers/i2c/i2c-pport.c:125:
+               PortData= (PortData SET_SDA) SET_SCL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2725: FILE: drivers/i2c/i2c-pport.c:125:
+               PortData= (PortData SET_SDA) SET_SCL;$

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#2725: FILE: drivers/i2c/i2c-pport.c:125:
+               PortData= (PortData SET_SDA) SET_SCL;
                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2726: FILE: drivers/i2c/i2c-pport.c:126:
+               outb(PortData,base+2);                          $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2726: FILE: drivers/i2c/i2c-pport.c:126:
+               outb(PortData,base+2);                          $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2726: FILE: drivers/i2c/i2c-pport.c:126:
+               outb(PortData,base+2);                          $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2726: FILE: drivers/i2c/i2c-pport.c:126:
+               outb(PortData,base+2);                          
                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2726: FILE: drivers/i2c/i2c-pport.c:126:
+               outb(PortData,base+2);                          
                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2728: FILE: drivers/i2c/i2c-pport.c:128:
+               if (!(inb(base+2) | 0x06)) {    /* SDA and SCL will be high     */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2728: FILE: drivers/i2c/i2c-pport.c:128:
+               if (!(inb(base+2) | 0x06)) {    /* SDA and SCL will be high     */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#2728: FILE: drivers/i2c/i2c-pport.c:128:
+               if (!(inb(base+2) | 0x06)) {    /* SDA and SCL will be high     */
+                       DEBINIT(printk("i2c-pport.o: SDA and SCL was low.\n"));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2728: FILE: drivers/i2c/i2c-pport.c:128:
+               if (!(inb(base+2) | 0x06)) {    /* SDA and SCL will be high     */
                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2729: FILE: drivers/i2c/i2c-pport.c:129:
+                       DEBINIT(printk("i2c-pport.o: SDA and SCL was low.\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2729: FILE: drivers/i2c/i2c-pport.c:129:
+                       DEBINIT(printk("i2c-pport.o: SDA and SCL was low.\n"));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2729: FILE: drivers/i2c/i2c-pport.c:129:
+                       DEBINIT(printk("i2c-pport.o: SDA and SCL was low.\n"));

ERROR:CODE_INDENT: code indent should use tabs where possible
#2730: FILE: drivers/i2c/i2c-pport.c:130:
+                       return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2730: FILE: drivers/i2c/i2c-pport.c:130:
+                       return -ENODEV;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2731: FILE: drivers/i2c/i2c-pport.c:131:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2731: FILE: drivers/i2c/i2c-pport.c:131:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#2731: FILE: drivers/i2c/i2c-pport.c:131:
+               } else {
[...]
+                       PortData = PortData SET_SCL CLR_SDA;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2732: FILE: drivers/i2c/i2c-pport.c:132:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2732: FILE: drivers/i2c/i2c-pport.c:132:
+               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2732: FILE: drivers/i2c/i2c-pport.c:132:
+               $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2732: FILE: drivers/i2c/i2c-pport.c:132:
+               } else {
+               

ERROR:CODE_INDENT: code indent should use tabs where possible
#2733: FILE: drivers/i2c/i2c-pport.c:133:
+                       /*SCL high and SDA low*/$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2734: FILE: drivers/i2c/i2c-pport.c:134:
+                       PortData = PortData SET_SCL CLR_SDA;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2734: FILE: drivers/i2c/i2c-pport.c:134:
+                       PortData = PortData SET_SCL CLR_SDA;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2735: FILE: drivers/i2c/i2c-pport.c:135:
+                       outb(PortData,base+2);  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2735: FILE: drivers/i2c/i2c-pport.c:135:
+                       outb(PortData,base+2);  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2735: FILE: drivers/i2c/i2c-pport.c:135:
+                       outb(PortData,base+2);  $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2735: FILE: drivers/i2c/i2c-pport.c:135:
+                       outb(PortData,base+2);  
                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2735: FILE: drivers/i2c/i2c-pport.c:135:
+                       outb(PortData,base+2);  
                                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2736: FILE: drivers/i2c/i2c-pport.c:136:
+                       udelay(400);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2736: FILE: drivers/i2c/i2c-pport.c:136:
+                       udelay(400);$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2736: FILE: drivers/i2c/i2c-pport.c:136:
+                       udelay(400);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2737: FILE: drivers/i2c/i2c-pport.c:137:
+                       if ( !(inb(base+2) | 0x4) ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2737: FILE: drivers/i2c/i2c-pport.c:137:
+                       if ( !(inb(base+2) | 0x4) ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#2737: FILE: drivers/i2c/i2c-pport.c:137:
+                       if ( !(inb(base+2) | 0x4) ) {
[...]
+                               DEBINIT(printk("i2c-port.o: SDA was high.\n"));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2737: FILE: drivers/i2c/i2c-pport.c:137:
+                       if ( !(inb(base+2) | 0x4) ) {
                                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#2737: FILE: drivers/i2c/i2c-pport.c:137:
+                       if ( !(inb(base+2) | 0x4) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2737: FILE: drivers/i2c/i2c-pport.c:137:
+                       if ( !(inb(base+2) | 0x4) ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#2738: FILE: drivers/i2c/i2c-pport.c:138:
+                               //outb(0x04,base+2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2739: FILE: drivers/i2c/i2c-pport.c:139:
+                               DEBINIT(printk("i2c-port.o: SDA was high.\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2739: FILE: drivers/i2c/i2c-pport.c:139:
+                               DEBINIT(printk("i2c-port.o: SDA was high.\n"));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2739: FILE: drivers/i2c/i2c-pport.c:139:
+                               DEBINIT(printk("i2c-port.o: SDA was high.\n"));

ERROR:CODE_INDENT: code indent should use tabs where possible
#2740: FILE: drivers/i2c/i2c-pport.c:140:
+                               return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2740: FILE: drivers/i2c/i2c-pport.c:140:
+                               return -ENODEV;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2741: FILE: drivers/i2c/i2c-pport.c:141:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2741: FILE: drivers/i2c/i2c-pport.c:141:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2742: FILE: drivers/i2c/i2c-pport.c:142:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2742: FILE: drivers/i2c/i2c-pport.c:142:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2743: FILE: drivers/i2c/i2c-pport.c:143:
+               request_region((base+2),1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2743: FILE: drivers/i2c/i2c-pport.c:143:
+               request_region((base+2),1,$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2743: FILE: drivers/i2c/i2c-pport.c:143:
+               request_region((base+2),1,
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2743: FILE: drivers/i2c/i2c-pport.c:143:
+               request_region((base+2),1,
                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2744: FILE: drivers/i2c/i2c-pport.c:144:
+                       "i2c (PPORT adapter)");$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2744: FILE: drivers/i2c/i2c-pport.c:144:
+               request_region((base+2),1,
+                       "i2c (PPORT adapter)");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2744: FILE: drivers/i2c/i2c-pport.c:144:
+                       "i2c (PPORT adapter)");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2745: FILE: drivers/i2c/i2c-pport.c:145:
+               bit_pport_setsda((void*)base,1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2745: FILE: drivers/i2c/i2c-pport.c:145:
+               bit_pport_setsda((void*)base,1);$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2745: FILE: drivers/i2c/i2c-pport.c:145:
+               bit_pport_setsda((void*)base,1);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2745: FILE: drivers/i2c/i2c-pport.c:145:
+               bit_pport_setsda((void*)base,1);
                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2746: FILE: drivers/i2c/i2c-pport.c:146:
+               bit_pport_setscl((void*)base,1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2746: FILE: drivers/i2c/i2c-pport.c:146:
+               bit_pport_setscl((void*)base,1);$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2746: FILE: drivers/i2c/i2c-pport.c:146:
+               bit_pport_setscl((void*)base,1);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2746: FILE: drivers/i2c/i2c-pport.c:146:
+               bit_pport_setscl((void*)base,1);
                                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2747: FILE: drivers/i2c/i2c-pport.c:147:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2748: FILE: drivers/i2c/i2c-pport.c:148:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2753: FILE: drivers/i2c/i2c-pport.c:153:
+       release_region((base+2),1);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2753: FILE: drivers/i2c/i2c-pport.c:153:
+       release_region((base+2),1);
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2753: FILE: drivers/i2c/i2c-pport.c:153:
+       release_region((base+2),1);
                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2758: FILE: drivers/i2c/i2c-pport.c:158:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2763: FILE: drivers/i2c/i2c-pport.c:163:
+       release_region((base+2),1);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2763: FILE: drivers/i2c/i2c-pport.c:163:
+       release_region((base+2),1);
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2763: FILE: drivers/i2c/i2c-pport.c:163:
+       release_region((base+2),1);
                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2764: FILE: drivers/i2c/i2c-pport.c:164:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2770: FILE: drivers/i2c/i2c-pport.c:170:
+       MOD_INC_USE_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2777: FILE: drivers/i2c/i2c-pport.c:177:
+       MOD_DEC_USE_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2786: FILE: drivers/i2c/i2c-pport.c:186:
+       NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2787: FILE: drivers/i2c/i2c-pport.c:187:
+       bit_pport_setsda,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2788: FILE: drivers/i2c/i2c-pport.c:188:
+       bit_pport_setscl,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2789: FILE: drivers/i2c/i2c-pport.c:189:
+       bit_pport_getsda,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2790: FILE: drivers/i2c/i2c-pport.c:190:
+       bit_pport_getscl,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2792: FILE: drivers/i2c/i2c-pport.c:192:
+       40, 80, 100,            /*      waits, timeout */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2796: FILE: drivers/i2c/i2c-pport.c:196:
+       "Primitive Parallel port adaptor",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2797: FILE: drivers/i2c/i2c-pport.c:197:
+       I2C_HW_B_PPORT,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2798: FILE: drivers/i2c/i2c-pport.c:198:
+       NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2799: FILE: drivers/i2c/i2c-pport.c:199:
+       &bit_pport_data,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2800: FILE: drivers/i2c/i2c-pport.c:200:
+       bit_pport_inc_use,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2801: FILE: drivers/i2c/i2c-pport.c:201:
+       bit_pport_dec_use,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2802: FILE: drivers/i2c/i2c-pport.c:202:
+       bit_pport_reg,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2803: FILE: drivers/i2c/i2c-pport.c:203:
+       bit_pport_unreg,        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2803: FILE: drivers/i2c/i2c-pport.c:203:
+       bit_pport_unreg,        $

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#2808: FILE: drivers/i2c/i2c-pport.c:208:
+       printk("i2c-pport.o: i2c Primitive parallel port adapter module version %s (%s)\n", I2C_VERSION, I2C_DATE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2808: FILE: drivers/i2c/i2c-pport.c:208:
+       printk("i2c-pport.o: i2c Primitive parallel port adapter module version %s (%s)\n", I2C_VERSION, I2C_DATE);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2808: FILE: drivers/i2c/i2c-pport.c:208:
+       printk("i2c-pport.o: i2c Primitive parallel port adapter module version %s (%s)\n", I2C_VERSION, I2C_DATE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2810: FILE: drivers/i2c/i2c-pport.c:210:
+       if (base==0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2810: FILE: drivers/i2c/i2c-pport.c:210:
+       if (base==0) {
[...]
+               base=DEFAULT_BASE;

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#2810: FILE: drivers/i2c/i2c-pport.c:210:
+       if (base==0) {
                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2811: FILE: drivers/i2c/i2c-pport.c:211:
+               /* probe some values */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2812: FILE: drivers/i2c/i2c-pport.c:212:
+               base=DEFAULT_BASE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2812: FILE: drivers/i2c/i2c-pport.c:212:
+               base=DEFAULT_BASE;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2812: FILE: drivers/i2c/i2c-pport.c:212:
+               base=DEFAULT_BASE;
                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2813: FILE: drivers/i2c/i2c-pport.c:213:
+               bit_pport_data.data=(void*)DEFAULT_BASE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2813: FILE: drivers/i2c/i2c-pport.c:213:
+               bit_pport_data.data=(void*)DEFAULT_BASE;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2813: FILE: drivers/i2c/i2c-pport.c:213:
+               bit_pport_data.data=(void*)DEFAULT_BASE;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2813: FILE: drivers/i2c/i2c-pport.c:213:
+               bit_pport_data.data=(void*)DEFAULT_BASE;
                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2814: FILE: drivers/i2c/i2c-pport.c:214:
+               if (bit_pport_init()==0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2814: FILE: drivers/i2c/i2c-pport.c:214:
+               if (bit_pport_init()==0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#2814: FILE: drivers/i2c/i2c-pport.c:214:
+               if (bit_pport_init()==0) {
+                       if(i2c_bit_add_bus(&bit_pport_ops) < 0)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#2814: FILE: drivers/i2c/i2c-pport.c:214:
+               if (bit_pport_init()==0) {
                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2815: FILE: drivers/i2c/i2c-pport.c:215:
+                       if(i2c_bit_add_bus(&bit_pport_ops) < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2815: FILE: drivers/i2c/i2c-pport.c:215:
+                       if(i2c_bit_add_bus(&bit_pport_ops) < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#2815: FILE: drivers/i2c/i2c-pport.c:215:
+                       if(i2c_bit_add_bus(&bit_pport_ops) < 0)
+                               return -ENODEV;

ERROR:SPACING: space required before the open parenthesis '('
#2815: FILE: drivers/i2c/i2c-pport.c:215:
+                       if(i2c_bit_add_bus(&bit_pport_ops) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#2816: FILE: drivers/i2c/i2c-pport.c:216:
+                               return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2816: FILE: drivers/i2c/i2c-pport.c:216:
+                               return -ENODEV;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2817: FILE: drivers/i2c/i2c-pport.c:217:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2817: FILE: drivers/i2c/i2c-pport.c:217:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#2817: FILE: drivers/i2c/i2c-pport.c:217:
+               } else {
+                       return -ENODEV;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2818: FILE: drivers/i2c/i2c-pport.c:218:
+                       return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2818: FILE: drivers/i2c/i2c-pport.c:218:
+                       return -ENODEV;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2819: FILE: drivers/i2c/i2c-pport.c:219:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2819: FILE: drivers/i2c/i2c-pport.c:219:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2820: FILE: drivers/i2c/i2c-pport.c:220:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2820: FILE: drivers/i2c/i2c-pport.c:220:
+       } else {
+               bit_pport_data.data=(void*)base;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2821: FILE: drivers/i2c/i2c-pport.c:221:
+               bit_pport_data.data=(void*)base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2821: FILE: drivers/i2c/i2c-pport.c:221:
+               bit_pport_data.data=(void*)base;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2821: FILE: drivers/i2c/i2c-pport.c:221:
+               bit_pport_data.data=(void*)base;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2821: FILE: drivers/i2c/i2c-pport.c:221:
+               bit_pport_data.data=(void*)base;
                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2822: FILE: drivers/i2c/i2c-pport.c:222:
+               if (bit_pport_init()==0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2822: FILE: drivers/i2c/i2c-pport.c:222:
+               if (bit_pport_init()==0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#2822: FILE: drivers/i2c/i2c-pport.c:222:
+               if (bit_pport_init()==0) {
+                       if(i2c_bit_add_bus(&bit_pport_ops) < 0)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#2822: FILE: drivers/i2c/i2c-pport.c:222:
+               if (bit_pport_init()==0) {
                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2823: FILE: drivers/i2c/i2c-pport.c:223:
+                       if(i2c_bit_add_bus(&bit_pport_ops) < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2823: FILE: drivers/i2c/i2c-pport.c:223:
+                       if(i2c_bit_add_bus(&bit_pport_ops) < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#2823: FILE: drivers/i2c/i2c-pport.c:223:
+                       if(i2c_bit_add_bus(&bit_pport_ops) < 0)
+                               return -ENODEV;

ERROR:SPACING: space required before the open parenthesis '('
#2823: FILE: drivers/i2c/i2c-pport.c:223:
+                       if(i2c_bit_add_bus(&bit_pport_ops) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#2824: FILE: drivers/i2c/i2c-pport.c:224:
+                               return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2824: FILE: drivers/i2c/i2c-pport.c:224:
+                               return -ENODEV;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2825: FILE: drivers/i2c/i2c-pport.c:225:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2825: FILE: drivers/i2c/i2c-pport.c:225:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#2825: FILE: drivers/i2c/i2c-pport.c:225:
+               } else {
+                       return -ENODEV;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2826: FILE: drivers/i2c/i2c-pport.c:226:
+                       return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2826: FILE: drivers/i2c/i2c-pport.c:226:
+                       return -ENODEV;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2827: FILE: drivers/i2c/i2c-pport.c:227:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2827: FILE: drivers/i2c/i2c-pport.c:227:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2828: FILE: drivers/i2c/i2c-pport.c:228:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2829: FILE: drivers/i2c/i2c-pport.c:229:
+       printk("i2c-pport.o: found device at %#x.\n",base);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2829: FILE: drivers/i2c/i2c-pport.c:229:
+       printk("i2c-pport.o: found device at %#x.\n",base);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2829: FILE: drivers/i2c/i2c-pport.c:229:
+       printk("i2c-pport.o: found device at %#x.\n",base);
                                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2830: FILE: drivers/i2c/i2c-pport.c:230:
+       return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2833: FILE: drivers/i2c/i2c-pport.c:233:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2845: FILE: drivers/i2c/i2c-pport.c:245:
+       return i2c_bitpport_init();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2850: FILE: drivers/i2c/i2c-pport.c:250:
+       i2c_bit_del_bus(&bit_pport_ops);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2851: FILE: drivers/i2c/i2c-pport.c:251:
+       bit_pport_exit();$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2858: FILE: drivers/i2c/i2c-rpx.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2867: FILE: drivers/i2c/i2c-rpx.c:10:
+ * This should work for most any 8xx board.  The console messages have been $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2887: FILE: drivers/i2c/i2c-rpx.c:30:
+       volatile cpm8xx_t *cp;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2887: FILE: drivers/i2c/i2c-rpx.c:30:
+       volatile cpm8xx_t *cp;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2888: FILE: drivers/i2c/i2c-rpx.c:31:
+       volatile immap_t *immap;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2888: FILE: drivers/i2c/i2c-rpx.c:31:
+       volatile immap_t *immap;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2890: FILE: drivers/i2c/i2c-rpx.c:33:
+       cp = cpmp;      /* Get pointer to Communication Processor */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2891: FILE: drivers/i2c/i2c-rpx.c:34:
+       immap = (immap_t *)IMAP_ADDR;   /* and to internal registers */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2893: FILE: drivers/i2c/i2c-rpx.c:36:
+       data->iip = (iic_t *)&cp->cp_dparam[PROFF_IIC];$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2896: FILE: drivers/i2c/i2c-rpx.c:39:
+       /* Check for and use a microcode relocation patch.
+       */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2897: FILE: drivers/i2c/i2c-rpx.c:40:
+       if ((data->reloc = data->iip->iic_rpbase))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2897: FILE: drivers/i2c/i2c-rpx.c:40:
+       if ((data->reloc = data->iip->iic_rpbase))
+               data->iip = (iic_t *)&cp->cp_dpmem[data->iip->iic_rpbase];

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2897: FILE: drivers/i2c/i2c-rpx.c:40:
+       if ((data->reloc = data->iip->iic_rpbase))

ERROR:CODE_INDENT: code indent should use tabs where possible
#2898: FILE: drivers/i2c/i2c-rpx.c:41:
+               data->iip = (iic_t *)&cp->cp_dpmem[data->iip->iic_rpbase];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2898: FILE: drivers/i2c/i2c-rpx.c:41:
+               data->iip = (iic_t *)&cp->cp_dpmem[data->iip->iic_rpbase];$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2899: FILE: drivers/i2c/i2c-rpx.c:42:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2899: FILE: drivers/i2c/i2c-rpx.c:42:
+               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2899: FILE: drivers/i2c/i2c-rpx.c:42:
+               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2900: FILE: drivers/i2c/i2c-rpx.c:43:
+       data->i2c = (i2c8xx_t *)&(immap->im_i2c);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around immap->im_i2c
#2900: FILE: drivers/i2c/i2c-rpx.c:43:
+       data->i2c = (i2c8xx_t *)&(immap->im_i2c);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2901: FILE: drivers/i2c/i2c-rpx.c:44:
+       data->cp = cp;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2904: FILE: drivers/i2c/i2c-rpx.c:47:
+       /* Initialize Port B IIC pins.
+       */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2905: FILE: drivers/i2c/i2c-rpx.c:48:
+       cp->cp_pbpar |= 0x00000030;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2906: FILE: drivers/i2c/i2c-rpx.c:49:
+       cp->cp_pbdir |= 0x00000030;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2907: FILE: drivers/i2c/i2c-rpx.c:50:
+       cp->cp_pbodr |= 0x00000030;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2910: FILE: drivers/i2c/i2c-rpx.c:53:
+        * descriptors in the DP ram.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2911: FILE: drivers/i2c/i2c-rpx.c:54:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2912: FILE: drivers/i2c/i2c-rpx.c:55:
+       data->dp_addr = m8xx_cpm_dpalloc(sizeof(cbd_t) * 4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2915: FILE: drivers/i2c/i2c-rpx.c:58:
+       data->i2c = (i2c8xx_t *)&(((immap_t *)IMAP_ADDR)->im_i2c);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2921: FILE: drivers/i2c/i2c-rpx.c:64:
+       cpm_install_handler(irq, (void (*)(void *, struct pt_regs *)) func, data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2923: FILE: drivers/i2c/i2c-rpx.c:66:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2928: FILE: drivers/i2c/i2c-rpx.c:71:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2933: FILE: drivers/i2c/i2c-rpx.c:76:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2939: FILE: drivers/i2c/i2c-rpx.c:82:
+       MOD_INC_USE_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2946: FILE: drivers/i2c/i2c-rpx.c:89:
+       MOD_DEC_USE_COUNT;$

WARNING:INDENTED_LABEL: labels should not be indented
#2951: FILE: drivers/i2c/i2c-rpx.c:94:
+       setisr: rpx_install_isr

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2954: FILE: drivers/i2c/i2c-rpx.c:97:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2956: FILE: drivers/i2c/i2c-rpx.c:99:
+       "m8xx",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2957: FILE: drivers/i2c/i2c-rpx.c:100:
+       I2C_HW_MPC8XX_EPON,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2958: FILE: drivers/i2c/i2c-rpx.c:101:
+       NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2959: FILE: drivers/i2c/i2c-rpx.c:102:
+       &rpx_data,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2960: FILE: drivers/i2c/i2c-rpx.c:103:
+       rpx_inc_use,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2961: FILE: drivers/i2c/i2c-rpx.c:104:
+       rpx_dec_use,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2962: FILE: drivers/i2c/i2c-rpx.c:105:
+       rpx_reg,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2963: FILE: drivers/i2c/i2c-rpx.c:106:
+       rpx_unreg,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2968: FILE: drivers/i2c/i2c-rpx.c:111:
+       printk("i2c-rpx.o: i2c MPC8xx module version %s (%s)\n", I2C_VERSION, I2C_DATE);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2968: FILE: drivers/i2c/i2c-rpx.c:111:
+       printk("i2c-rpx.o: i2c MPC8xx module version %s (%s)\n", I2C_VERSION, I2C_DATE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2971: FILE: drivers/i2c/i2c-rpx.c:114:
+       rpx_iic_init(&rpx_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2973: FILE: drivers/i2c/i2c-rpx.c:116:
+       if (i2c_8xx_add_bus(&rpx_ops) < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#2973: FILE: drivers/i2c/i2c-rpx.c:116:
+       if (i2c_8xx_add_bus(&rpx_ops) < 0) {
+               printk("i2c-rpx: Unable to register with I2C\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#2974: FILE: drivers/i2c/i2c-rpx.c:117:
+               printk("i2c-rpx: Unable to register with I2C\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2974: FILE: drivers/i2c/i2c-rpx.c:117:
+               printk("i2c-rpx: Unable to register with I2C\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2974: FILE: drivers/i2c/i2c-rpx.c:117:
+               printk("i2c-rpx: Unable to register with I2C\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#2975: FILE: drivers/i2c/i2c-rpx.c:118:
+               return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2975: FILE: drivers/i2c/i2c-rpx.c:118:
+               return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2976: FILE: drivers/i2c/i2c-rpx.c:119:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2978: FILE: drivers/i2c/i2c-rpx.c:121:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2983: FILE: drivers/i2c/i2c-rpx.c:126:
+       i2c_8xx_del_bus(&rpx_ops);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441313.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 967 errors, 1597 warnings, 217 checks, 2921 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441313.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
