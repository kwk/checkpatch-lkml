WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: kernel/sched.c:3251:
+       if(!capable(CAP_SYS_NICE)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#77: FILE: kernel/sched.c:3251:
+       if(!capable(CAP_SYS_NICE)) {
[...]
+               if (policy != p->policy)

ERROR:SPACING: space required before the open parenthesis '('
#77: FILE: kernel/sched.c:3251:
+       if(!capable(CAP_SYS_NICE)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: kernel/sched.c:3252:
+               /* can't change a policy without cap */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: kernel/sched.c:3253:
+               if (policy != p->policy)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: kernel/sched.c:3253:
+               if (policy != p->policy)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#79: FILE: kernel/sched.c:3253:
+               if (policy != p->policy)
+                       goto out_unlock;

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: kernel/sched.c:3254:
+                       goto out_unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: kernel/sched.c:3254:
+                       goto out_unlock;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: kernel/sched.c:3255:
+               /* can't increase priority without cap */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: kernel/sched.c:3256:
+               if (policy != SCHED_NORMAL &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: kernel/sched.c:3256:
+               if (policy != SCHED_NORMAL &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#82: FILE: kernel/sched.c:3256:
+               if (policy != SCHED_NORMAL &&
[...]
+                       goto out_unlock;

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: kernel/sched.c:3257:
+                   lp.sched_priority > p->rt_priority)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: kernel/sched.c:3257:
+                   lp.sched_priority > p->rt_priority)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: kernel/sched.c:3258:
+                       goto out_unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: kernel/sched.c:3258:
+                       goto out_unlock;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: kernel/sched.c:3259:
+               /* can't change other processes without cap */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: kernel/sched.c:3260:
+               if ((current->euid != p->euid) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: kernel/sched.c:3260:
+               if ((current->euid != p->euid) &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#86: FILE: kernel/sched.c:3260:
+               if ((current->euid != p->euid) &&
[...]
+                       goto out_unlock;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->euid != p->euid'
#86: FILE: kernel/sched.c:3260:
+               if ((current->euid != p->euid) &&
+                   (current->euid != p->uid))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->euid != p->uid'
#86: FILE: kernel/sched.c:3260:
+               if ((current->euid != p->euid) &&
+                   (current->euid != p->uid))

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: kernel/sched.c:3261:
+                   (current->euid != p->uid))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: kernel/sched.c:3261:
+                   (current->euid != p->uid))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: kernel/sched.c:3262:
+                       goto out_unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: kernel/sched.c:3262:
+                       goto out_unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: kernel/sched.c:3263:
+       }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000189585.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 14 warnings, 2 checks, 25 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000189585.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
