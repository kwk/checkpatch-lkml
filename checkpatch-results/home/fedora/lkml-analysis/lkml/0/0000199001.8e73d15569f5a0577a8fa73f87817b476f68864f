ERROR:SPACING: space required after that ',' (ctx:VxV)
#45: FILE: include/asm-ppc/floppy.h:15:
+#define fd_outb(value,port)	outb_p(value,port)
                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#45: FILE: include/asm-ppc/floppy.h:15:
+#define fd_outb(value,port)	outb_p(value,port)
                            	            ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#84: FILE: include/asm-ppc/floppy.h:41:
+static irqreturn_t floppy_hardint(int irq, void *dev_id, struct pt_regs * regs)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#93: FILE: include/asm-ppc/floppy.h:50:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: include/asm-ppc/floppy.h:52:
+^Ifor (lcount=virtual_dma_count, lptr=virtual_dma_addr; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#95: FILE: include/asm-ppc/floppy.h:52:
+	for (lcount=virtual_dma_count, lptr=virtual_dma_addr; 
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#95: FILE: include/asm-ppc/floppy.h:52:
+	for (lcount=virtual_dma_count, lptr=virtual_dma_addr; 
 	                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#97: FILE: include/asm-ppc/floppy.h:54:
+		st=inb(virtual_dma_port+4) & 0xa0 ;
 		  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#97: FILE: include/asm-ppc/floppy.h:54:
+		st=inb(virtual_dma_port+4) & 0xa0 ;
 		                       ^

WARNING:SPACING: space prohibited before semicolon
#97: FILE: include/asm-ppc/floppy.h:54:
+		st=inb(virtual_dma_port+4) & 0xa0 ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: include/asm-ppc/floppy.h:55:
+^I^Iif (st != 0xa0) $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#101: FILE: include/asm-ppc/floppy.h:58:
+			outb_p(*lptr, virtual_dma_port+5);
 			                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#103: FILE: include/asm-ppc/floppy.h:60:
+			*lptr = inb_p(virtual_dma_port+5);
 			                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#107: FILE: include/asm-ppc/floppy.h:64:
+	st = inb(virtual_dma_port+4);
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#113: FILE: include/asm-ppc/floppy.h:70:
+		virtual_dma_count=0;
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#125: FILE: include/asm-ppc/floppy.h:82:
+	virtual_dma_count=0;
 	                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#132: FILE: include/asm-ppc/floppy.h:89:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#138: FILE: include/asm-ppc/floppy.h:95:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#142: FILE: include/asm-ppc/floppy.h:99:
+		return request_irq(FLOPPY_IRQ, floppy_hardint,SA_INTERRUPT,
 		                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#146: FILE: include/asm-ppc/floppy.h:103:
+						   SA_INTERRUPT|SA_SAMPLE_RANDOM,
 						               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: include/asm-ppc/floppy.h:104:
+^I^I^I^I^I^I   "floppy", NULL);^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#149: FILE: include/asm-ppc/floppy.h:106:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#167: FILE: include/asm-ppc/floppy.h:124:
+	set_dma_mode(FLOPPY_DMA,mode);
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#168: FILE: include/asm-ppc/floppy.h:125:
+	set_dma_addr(FLOPPY_DMA,(unsigned int)virt_to_bus(addr));
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#169: FILE: include/asm-ppc/floppy.h:126:
+	set_dma_count(FLOPPY_DMA,size);
 	                        ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#175: FILE: include/asm-ppc/floppy.h:132:
+static struct fd_dma_ops real_dma_ops =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#183: FILE: include/asm-ppc/floppy.h:140:
+static struct fd_dma_ops virt_dma_ops =
+{

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int fd_request_dma() should probably be int fd_request_dma(void)
#190: FILE: include/asm-ppc/floppy.h:147:
+static int fd_request_dma()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#197: FILE: include/asm-ppc/floppy.h:153:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#197: FILE: include/asm-ppc/floppy.h:153:
+	else {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000199001.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 1 warnings, 10 checks, 165 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000199001.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
