WARNING:TYPO_SPELLING: 'havent'' may be misspelled - perhaps 'haven't'?
#35: 
around 2.5.40. I havent' given the patch the extensive testing that is
                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
|>  > one of the shortcomings of Linux process priority system is that it only

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#117: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#118: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#119: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#120: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#121: 
#	           ChangeSet	1.675   -> 1.677  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#122: 
#	drivers/block/ll_rw_blk.c	1.115   -> 1.117  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#123: 
#	include/linux/blkdev.h	1.70    -> 1.72   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#124: 
#	  include/linux/fs.h	1.165   -> 1.166  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#125: 
#	include/linux/backing-dev.h	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#126: 
#	 include/linux/bio.h	1.21    -> 1.22   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#127: 
#	drivers/block/deadline-iosched.c	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#128: 
#	               (new)	        -> 1.2     include/linux/blk_io_prio.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#129: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#130: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#131: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#132: 
# 02/10/04	hall@thor.jiffies.dk	1.676

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#133: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#134: 
# Added priorities to bio's.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#135: 
# Changed the allocation of requests. Allocation groups are now used.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#136: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#137: 
# 02/10/06	hall@thor.jiffies.dk	1.677

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#138: 
# Fixes.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#139: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#140: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#142: 
--- a/drivers/block/deadline-iosched.c	Sun Oct  6 14:55:47 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#187: FILE: drivers/block/deadline-iosched.c:332:
+	if (ddir==READ && !list_empty(&dd->read_fifo))
 	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#190: FILE: drivers/block/deadline-iosched.c:335:
+	if (ddir==WRITE && !list_empty(&dd->write_fifo))
 	        ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#196: FILE: drivers/block/deadline-iosched.c:341:
+	if (drq && time_after(jiffies, drq->expires))
 			return 1;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: drivers/block/deadline-iosched.c:413:
+static inline $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#253: FILE: drivers/block/deadline-iosched.c:433:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#254: FILE: drivers/block/deadline-iosched.c:434:
+^Iint expire_tmp ^I^I= expire / 2;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: drivers/block/deadline-iosched.c:435:
+^Iint ticks_pr_prio^I= expire/BIO_PRIO_MAX; $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#255: FILE: drivers/block/deadline-iosched.c:435:
+	int ticks_pr_prio	= expire/BIO_PRIO_MAX; 
 	                 	        ^

ERROR:SPACING: space required before the open parenthesis '('
#270: FILE: drivers/block/deadline-iosched.c:450:
+	switch(ddir) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: drivers/block/deadline-iosched.c:451:
+^Icase READ:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: drivers/block/deadline-iosched.c:454:
+^Icase WRITE:^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#278: FILE: drivers/block/deadline-iosched.c:458:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#325: FILE: drivers/block/deadline-iosched.c:538:
+	BUG_ON(!list_empty(&dd->write_fifo));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#337: FILE: drivers/block/deadline-iosched.c:558:
+	BUG_ON(!list_empty(&dd->write_fifo));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#364: FILE: drivers/block/deadline-iosched.c:573:
+				if ((drq = RQ_DATA(rq)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#506: FILE: drivers/block/ll_rw_blk.c:1118:
+	int i, count = (queue_nr_requests*2*QUEUE_NR_AGS);
 	                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#506: FILE: drivers/block/ll_rw_blk.c:1118:
+	int i, count = (queue_nr_requests*2*QUEUE_NR_AGS);
 	                                   ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#540: FILE: drivers/block/ll_rw_blk.c:1146:
+^I^Iq->ags[j].rq[READ].ag ^I^I= j;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#541: FILE: drivers/block/ll_rw_blk.c:1147:
+^I^Iq->ags[j].rq[WRITE].ag ^I^I= j;$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#550: FILE: drivers/block/ll_rw_blk.c:1153:
+		for (i = 0; i < (queue_nr_requests*2); i++) {
 		                                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#584: FILE: drivers/block/ll_rw_blk.c:1244:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#609: FILE: drivers/block/ll_rw_blk.c:1256:
+	for(i = ag; i >= 0; i--) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#611: FILE: drivers/block/ll_rw_blk.c:1258:
+		struct request_list *rl = &q->ags[i].rq[rw];
+		if (!list_empty(&rl->free)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#616: FILE: drivers/block/ll_rw_blk.c:1263:
+^I^I^I^Iset_queue_congested(q, i, rw); $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#678: FILE: drivers/block/ll_rw_blk.c:1457:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#727: FILE: drivers/block/ll_rw_blk.c:1613:
 
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#741: FILE: drivers/block/ll_rw_blk.c:1709:
+	} else if ((req = get_request(q, rw, prio)) == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#762: FILE: drivers/block/ll_rw_blk.c:1863:
+ * layer for I/O $

WARNING:LINE_SPACING: Missing a blank line after declarations
#771: FILE: drivers/block/ll_rw_blk.c:1875:
+	int  prio = get_io_prio(current);
+	return submit_bio_prio(rw, prio, bio);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#774: FILE: drivers/block/ll_rw_blk.c:1878:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#864: FILE: include/linux/backing-dev.h:43:
+	int ag = prio_to_ag(prio);
+	return test_bit(BDI_read_congested, &bdi->agstate[ag]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#871: FILE: include/linux/backing-dev.h:49:
+	int prio = get_io_prio(current);
+	return bdi_read_congested_prio(bdi, prio);

WARNING:LINE_SPACING: Missing a blank line after declarations
#877: FILE: include/linux/backing-dev.h:55:
+	int ag = prio_to_ag(prio);
+	return test_bit(BDI_write_congested, &bdi->agstate[ag]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#884: FILE: include/linux/backing-dev.h:61:
+	int prio = get_io_prio(current);
+	return bdi_write_congested_prio(bdi, prio);

WARNING:REPEATED_WORD: Possible repeated word: 'bit'
#897: FILE: include/linux/bio.h:115:
+ * bit 8  -- first prio bit
+ * bit 15 -- last prio bit

CHECK:LINE_SPACING: Please don't use multiple blank lines
#911: FILE: include/linux/bio.h:129:
+
+

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#923: FILE: include/linux/bio.h:146:
+#define bio_prio(bio)		(((bio)->bi_rw & BIO_PRIO_MASK)>>BIO_PRIO_START)
                      		                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bio' - possible side-effects?
#924: FILE: include/linux/bio.h:147:
+#define bio_set_prio(bio, prio)	do { \
+					int __n = ((prio)<<BIO_PRIO_START); \
+					__n &= BIO_PRIO_MASK; \
+					(bio)->bi_rw &= ~BIO_PRIO_MASK; \
+					(bio)->bi_rw |= __n; \
+				} while (0) 

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#925: FILE: include/linux/bio.h:148:
+					int __n = ((prio)<<BIO_PRIO_START); \
 					                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#929: FILE: include/linux/bio.h:152:
+^I^I^I^I} while (0) $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#938: FILE: include/linux/blk_io_prio.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#954: FILE: include/linux/blk_io_prio.h:17:
+#define QUEUE_NR_AGS ^I4$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#956: FILE: include/linux/blk_io_prio.h:19:
+#define PRIOS_PR_AG		(BIO_PRIO_MAX/QUEUE_NR_AGS)
                    		             ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#962: FILE: include/linux/blk_io_prio.h:25:
+	BUG_ON(task == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!task"
#962: FILE: include/linux/blk_io_prio.h:25:
+	BUG_ON(task == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#970: FILE: include/linux/blk_io_prio.h:33:
+	BUG_ON(prio < BIO_PRIO_MIN);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#979: FILE: include/linux/blk_io_prio.h:42:
+	BUG_ON(prio < BIO_PRIO_MIN || prio > BIO_PRIO_MAX);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#980: FILE: include/linux/blk_io_prio.h:43:
+	ag = prio / (PRIOS_PR_AG+1);
 	                        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#982: FILE: include/linux/blk_io_prio.h:45:
+	BUG_ON(ag >= QUEUE_NR_AGS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#983: FILE: include/linux/blk_io_prio.h:46:
+	BUG_ON(ag < 0);

WARNING:REPEATED_WORD: Possible repeated word: 'list'
#1008: FILE: include/linux/blkdev.h:145:
+	struct request_list rq[2];	/* one list list for writes and one for read */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1009: FILE: include/linux/blkdev.h:146:
+^Iint outstanding[2]; ^I^I/* # allocated requests read/write */$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1032: FILE: include/linux/fs.h:1132:
+#define bio_set_rw(bio,rw)	do {\
                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bio' - possible side-effects?
#1032: FILE: include/linux/fs.h:1132:
+#define bio_set_rw(bio,rw)	do {\
+				((bio)->bi_rw &= ~(RW_MASK|RWA_MASK)); \
+				((bio)->bi_rw |= (rw & (RW_MASK|RWA_MASK))); \
+			} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'rw' may be better as '(rw)' to avoid precedence issues
#1032: FILE: include/linux/fs.h:1132:
+#define bio_set_rw(bio,rw)	do {\
+				((bio)->bi_rw &= ~(RW_MASK|RWA_MASK)); \
+				((bio)->bi_rw |= (rw & (RW_MASK|RWA_MASK))); \
+			} while (0)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1033: FILE: include/linux/fs.h:1133:
+				((bio)->bi_rw &= ~(RW_MASK|RWA_MASK)); \
 				                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1034: FILE: include/linux/fs.h:1134:
+				((bio)->bi_rw |= (rw & (RW_MASK|RWA_MASK))); \
 				                               ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1044: FILE: include/linux/fs.h:1242:
+extern int submit_bio_prio(int, int, struct bio *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1044: FILE: include/linux/fs.h:1242:
+extern int submit_bio_prio(int, int, struct bio *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1044: FILE: include/linux/fs.h:1242:
+extern int submit_bio_prio(int, int, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#1044: FILE: include/linux/fs.h:1242:
+extern int submit_bio_prio(int, int, struct bio *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000421256.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 52 warnings, 21 checks, 844 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000421256.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
