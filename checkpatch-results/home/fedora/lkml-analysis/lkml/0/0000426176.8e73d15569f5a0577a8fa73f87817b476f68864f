CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#82: FILE: drivers/net/3c509.c:995:
+	return tmp & (1<<11);
 	               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: drivers/net/3c509.c:1002:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'tranceiver' may be misspelled - perhaps 'transceiver'?
#91: FILE: drivers/net/3c509.c:1004:
+	/* obtain current tranceiver via WN4_MEDIA? */	
 	                  ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: drivers/net/3c509.c:1004:
+^I/* obtain current tranceiver via WN4_MEDIA? */^I$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#111: FILE: drivers/net/3c509.c:1024:
+	if (tmp & (1<<13))
 	            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#113: FILE: drivers/net/3c509.c:1026:
+	if (tmp & (1<<12))
 	            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#115: FILE: drivers/net/3c509.c:1028:
+	if (tmp & (1<<9)) {
 	            ^

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_10baseT_Half>
#116: FILE: drivers/net/3c509.c:1029:
+		ecmd->supported |= SUPPORTED_TP | SUPPORTED_10baseT_Half |

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_10baseT_Full>
#117: FILE: drivers/net/3c509.c:1030:
+				SUPPORTED_10baseT_Full;	/* hmm... */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: drivers/net/3c509.c:1036:
+^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ecmd->duplex != DUPLEX_HALF'
#135: FILE: drivers/net/3c509.c:1048:
+	if ((ecmd->duplex != DUPLEX_HALF) || (ecmd->duplex != DUPLEX_FULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ecmd->duplex != DUPLEX_FULL'
#135: FILE: drivers/net/3c509.c:1048:
+	if ((ecmd->duplex != DUPLEX_HALF) || (ecmd->duplex != DUPLEX_FULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ecmd->transceiver != XCVR_INTERNAL'
#137: FILE: drivers/net/3c509.c:1050:
+	if ((ecmd->transceiver != XCVR_INTERNAL) || (ecmd->transceiver != XCVR_EXTERNAL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ecmd->transceiver != XCVR_EXTERNAL'
#137: FILE: drivers/net/3c509.c:1050:
+	if ((ecmd->transceiver != XCVR_INTERNAL) || (ecmd->transceiver != XCVR_EXTERNAL))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#145: FILE: drivers/net/3c509.c:1058:
+		tmp &= ~(3<<14);
 		          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#149: FILE: drivers/net/3c509.c:1062:
+		tmp |= (1<<14);
 		         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#153: FILE: drivers/net/3c509.c:1066:
+		tmp |= (3<<14);
 		         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#163: FILE: drivers/net/3c509.c:1076:
+		if (tmp & (1<<11)) {
 		            ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#163: FILE: drivers/net/3c509.c:1076:
+		if (tmp & (1<<11)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <StartCoax>
#164: FILE: drivers/net/3c509.c:1077:
+			outw(StartCoax, ioaddr + EL3_CMD);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#165: FILE: drivers/net/3c509.c:1078:
+			udelay(800);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:BRACES: Unbalanced braces around else statement
#166: FILE: drivers/net/3c509.c:1079:
+		} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#200: FILE: drivers/net/3c509.c:1128:
+		struct ethtool_cmd ecmd = { ETHTOOL_GSET };
+		spin_lock_irq(&lp->lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#212: FILE: drivers/net/3c509.c:1140:
+		struct ethtool_cmd ecmd;
+		if (copy_from_user(&ecmd, useraddr, sizeof(ecmd)))

WARNING:LINE_SPACING: Missing a blank line after declarations
#223: FILE: drivers/net/3c509.c:1151:
+		struct ethtool_value edata = { ETHTOOL_GLINK };
+		spin_lock_irq(&lp->lock);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000426176.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 4 warnings, 18 checks, 195 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000426176.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
