WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
This patch implements a notifier call chain for EEH, as per pervious emails.

WARNING:TYPO_SPELLING: 'pervious' may be misspelled - perhaps 'previous'?
#36: 
This patch implements a notifier call chain for EEH, as per pervious emails.
                                                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#58: FILE: arch/ppc64/kernel/eeh.c:17:
  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: arch/ppc64/kernel/eeh.c:38:
+ *  EEH, or "Extended Error Handling" is a PCI bridge technology for $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: arch/ppc64/kernel/eeh.c:39:
+ *  dealing with PCI bus errors that can't be dealt with within the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: arch/ppc64/kernel/eeh.c:42:
+ *  to crash due to a "mere" PCI error, thus the need for EEH. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#92: FILE: arch/ppc64/kernel/eeh.c:44:
+ *  into a "slot freeze", taking the PCI adapter off-line, making $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: arch/ppc64/kernel/eeh.c:45:
+ *  the slot behave, from the OS'es point of view, as if the slot $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: arch/ppc64/kernel/eeh.c:46:
+ *  were "empty": all reads return 0xff's and all writes are silently $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: arch/ppc64/kernel/eeh.c:50:
+ *  radioactivity or plain-old failed hardware.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: arch/ppc64/kernel/eeh.c:55:
+ *  device to bus-master data to a memory address that is not $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: arch/ppc64/kernel/eeh.c:57:
+ *  is to prevent devices-gone-wild from corrupting system memory). $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: arch/ppc64/kernel/eeh.c:58:
+ *  Buggy hardware/drivers will have a miserable time co-existing $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: arch/ppc64/kernel/eeh.c:60:
+ *  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: arch/ppc64/kernel/eeh.c:61:
+ *  Ideally, a PCI device driver, when suspecting that an isolation $

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#110: FILE: arch/ppc64/kernel/eeh.c:62:
+ *  event has occured (e.g. by reading 0xff's), will then ask EEH
               ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: arch/ppc64/kernel/eeh.c:63:
+ *  whether this is the case, and then take appropriate steps to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: arch/ppc64/kernel/eeh.c:66:
+ *  eeh_check_failure() routine embedded in the MMIO macros.  If $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: arch/ppc64/kernel/eeh.c:67:
+ *  the slot is found to be isolated, an "EEH Event" is synthesized $

WARNING:TYPO_SPELLING: 'BUID' may be misspelled - perhaps 'BUILD'?
#119: FILE: arch/ppc64/kernel/eeh.c:71:
+/** Bus Unit ID macros; get low and hi 32-bits of the 64-bit BUID */
                                                              ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: arch/ppc64/kernel/eeh.c:114:
+ * found. It is safe to perform an address lookup in an interrupt $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: arch/ppc64/kernel/eeh.c:395:
+ * halt the OS than it is to risk possible data corruption by $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: arch/ppc64/kernel/eeh.c:397:
+ * $

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#190: FILE: arch/ppc64/kernel/eeh.c:404:
+	 * XXX We should create a seperate sysctl for this.
 	                          ^^^^^^^^

CHECK:BRACES: Unbalanced braces around else statement
#198: FILE: arch/ppc64/kernel/eeh.c:412:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#200: FILE: arch/ppc64/kernel/eeh.c:414:
+		printk(KERN_INFO "EEH: Ignored MMIO failure (%d) on device:%s %s\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: arch/ppc64/kernel/eeh.c:420:
+ * eeh_event_handler - dispatch EEH events.  The detection of a frozen $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: arch/ppc64/kernel/eeh.c:421:
+ * slot can occur inside an interrupt, where it can be hard to do $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!event"
#227: FILE: arch/ppc64/kernel/eeh.c:441:
+		if (event == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: arch/ppc64/kernel/eeh.c:445:
+^I^Iif (eeh_notifier_chain && $

WARNING:TYPO_SPELLING: 'notifiying' may be misspelled - perhaps 'notifying'?
#233: FILE: arch/ppc64/kernel/eeh.c:447:
+			printk(KERN_INFO "EEH: MMIO failure (%d), notifiying device "
 			                                          ^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#233: FILE: arch/ppc64/kernel/eeh.c:447:
+			printk(KERN_INFO "EEH: MMIO failure (%d), notifiying device "

WARNING:SPLIT_STRING: quoted string split across lines
#234: FILE: arch/ppc64/kernel/eeh.c:448:
+			printk(KERN_INFO "EEH: MMIO failure (%d), notifiying device "
+				"%s %s\n", event->reset_state,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: arch/ppc64/kernel/eeh.c:451:
+^I^I^Inotifier_call_chain (&eeh_notifier_chain, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#237: FILE: arch/ppc64/kernel/eeh.c:451:
+			notifier_call_chain (&eeh_notifier_chain, 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: arch/ppc64/kernel/eeh.c:452:
+^I^I^I                     EEH_NOTIFY_FREEZE, event);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#243: FILE: arch/ppc64/kernel/eeh.c:457:
+			printk(KERN_ERR "EEH: MMIO failure (%d), recovery not supported "

WARNING:SPLIT_STRING: quoted string split across lines
#244: FILE: arch/ppc64/kernel/eeh.c:458:
+			printk(KERN_ERR "EEH: MMIO failure (%d), recovery not supported "
+				"%s %s\n", event->reset_state,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: arch/ppc64/kernel/eeh.c:563:
+		rc = rtas_call(ibm_slot_error_detail,
 		                      8, 1, NULL, dn->eeh_config_addr,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: arch/ppc64/kernel/eeh.c:576:
+^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#321: FILE: arch/ppc64/kernel/eeh.c:578:
+		 * asynchronously. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!event"
#326: FILE: arch/ppc64/kernel/eeh.c:583:
+			if (event == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: arch/ppc64/kernel/eeh.c:588:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: arch/ppc64/kernel/eeh.c:592:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: arch/ppc64/kernel/eeh.c:597:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#343: FILE: arch/ppc64/kernel/eeh.c:600:
+			 * out what happened.  So print that out. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#347: FILE: arch/ppc64/kernel/eeh.c:604:
+		else
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#347: FILE: arch/ppc64/kernel/eeh.c:604:
+		}
+		else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: arch/ppc64/kernel/eeh.c:607:
+^I^I^I * prevents the device driver from getting tangled $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#351: FILE: arch/ppc64/kernel/eeh.c:608:
+			 * in its own shorts.  */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#403: FILE: include/asm-ppc64/eeh.h:78:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: include/asm-ppc64/eeh.h:84:
+/** EEH event -- structure holding pci slot data that describes $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000269575.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 32 errors, 15 warnings, 5 checks, 356 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000269575.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
