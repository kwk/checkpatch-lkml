WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#36: 
diff -uNr -X dontdiff /usr/src/clean/linux/fs/exec.c linux/fs/exec.c

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#37: 
--- /usr/src/clean/linux/fs/exec.c	Tue Dec 12 11:25:55 2000

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#44: FILE: fs/exec.c:90:
+static inline void _put_binfmt(struct linux_binfmt * fmt)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#98: FILE: include/linux/binfmts.h:62:
+#define get_binfmt(bf)	\
+	if (bf && bf->module) __MOD_INC_USE_COUNT(bf->module)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bf' - possible side-effects?
#98: FILE: include/linux/binfmts.h:62:
+#define get_binfmt(bf)	\
+	if (bf && bf->module) __MOD_INC_USE_COUNT(bf->module)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bf' may be better as '(bf)' to avoid precedence issues
#98: FILE: include/linux/binfmts.h:62:
+#define get_binfmt(bf)	\
+	if (bf && bf->module) __MOD_INC_USE_COUNT(bf->module)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#99: FILE: include/linux/binfmts.h:63:
+	if (bf && bf->module) __MOD_INC_USE_COUNT(bf->module)

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#101: FILE: include/linux/binfmts.h:65:
+#define put_binfmt(bf)	\
+	if (bf && bf->module) __MOD_DEC_USE_COUNT(bf->module)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bf' - possible side-effects?
#101: FILE: include/linux/binfmts.h:65:
+#define put_binfmt(bf)	\
+	if (bf && bf->module) __MOD_DEC_USE_COUNT(bf->module)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bf' may be better as '(bf)' to avoid precedence issues
#101: FILE: include/linux/binfmts.h:65:
+#define put_binfmt(bf)	\
+	if (bf && bf->module) __MOD_DEC_USE_COUNT(bf->module)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#102: FILE: include/linux/binfmts.h:66:
+	if (bf && bf->module) __MOD_DEC_USE_COUNT(bf->module)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: include/linux/binfmts.h:67:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: kernel/fork.c:704:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000560522.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 2 warnings, 4 checks, 87 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000560522.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
