WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: fs/reiserfs/inode.c:307:
+    int done = 0 ;$

WARNING:SPACING: space prohibited before semicolon
#76: FILE: fs/reiserfs/inode.c:307:
+    int done = 0 ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#84: FILE: fs/reiserfs/inode.c:359:
+    /* if we've got a direct item, and the buffer was uptodate,
                                                       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#85: FILE: fs/reiserfs/inode.c:360:
+    /* if we've got a direct item, and the buffer was uptodate,
+    ** we don't want to pull data off disk again.  skip to the

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: fs/reiserfs/inode.c:363:
+    if (buffer_uptodate(bh_result)) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#88: FILE: fs/reiserfs/inode.c:363:
+    if (buffer_uptodate(bh_result)) {
+        goto finished ;
+    }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: fs/reiserfs/inode.c:364:
+        goto finished ;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: fs/reiserfs/inode.c:364:
+        goto finished ;$

WARNING:SPACING: space prohibited before semicolon
#89: FILE: fs/reiserfs/inode.c:364:
+        goto finished ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: fs/reiserfs/inode.c:365:
+    }$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#101: FILE: fs/reiserfs/inode.c:388:
+	/* make sure we don't read more bytes than actually exist in
+	** the file.  This can happen in odd cases where i_size isn't

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: fs/reiserfs/inode.c:389:
+^I** correct, and when direct item padding results in a few $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: fs/reiserfs/inode.c:392:
+        if ((le_ih_k_offset(ih) + path.pos_in_item) > inode->i_size)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: fs/reiserfs/inode.c:392:
+        if ((le_ih_k_offset(ih) + path.pos_in_item) > inode->i_size)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#105: FILE: fs/reiserfs/inode.c:392:
+        if ((le_ih_k_offset(ih) + path.pos_in_item) > inode->i_size)
+	    break ;

WARNING:TABSTOP: Statements should start on a tabstop
#106: FILE: fs/reiserfs/inode.c:393:
+	    break ;

WARNING:SPACING: space prohibited before semicolon
#106: FILE: fs/reiserfs/inode.c:393:
+	    break ;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#107: FILE: fs/reiserfs/inode.c:394:
+	if ((le_ih_k_offset(ih) - 1 + ih_item_len(ih)) > inode->i_size) {
+	    chars = inode->i_size - (le_ih_k_offset(ih) - 1) - path.pos_in_item;

WARNING:SPACING: space prohibited before semicolon
#109: FILE: fs/reiserfs/inode.c:396:
+	    done = 1 ;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#110: FILE: fs/reiserfs/inode.c:397:
+	} else {
+	    chars = le16_to_cpu (ih->ih_item_len) - path.pos_in_item;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#111: FILE: fs/reiserfs/inode.c:398:
+	    chars = le16_to_cpu (ih->ih_item_len) - path.pos_in_item;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: fs/reiserfs/inode.c:402:
+^Iif (done) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#115: FILE: fs/reiserfs/inode.c:402:
+	if (done) 
+	    break ;

WARNING:TABSTOP: Statements should start on a tabstop
#116: FILE: fs/reiserfs/inode.c:403:
+	    break ;

WARNING:SPACING: space prohibited before semicolon
#116: FILE: fs/reiserfs/inode.c:403:
+	    break ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: fs/reiserfs/inode.c:429:
+    flush_dcache_page(bh_result->b_page) ;$

WARNING:SPACING: space prohibited before semicolon
#134: FILE: fs/reiserfs/inode.c:429:
+    flush_dcache_page(bh_result->b_page) ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: fs/reiserfs/inode.c:1593:
+    ** and no zeroing is required on disk.  We zero after the truncate, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: fs/reiserfs/inode.c:1594:
+    ** because the truncate might pack the item anyway $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: fs/reiserfs/inode.c:1605:
+    if (page) {$

WARNING:TABSTOP: Statements should start on a tabstop
#166: FILE: fs/reiserfs/inode.c:1613:
+	    if (buffer_mapped(bh) && bh->b_blocknr != 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#166: FILE: fs/reiserfs/inode.c:1613:
+	    if (buffer_mapped(bh) && bh->b_blocknr != 0) {
+	        mark_buffer_dirty(bh) ;
+	    }

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: fs/reiserfs/inode.c:1614:
+^I        mark_buffer_dirty(bh) ;$

WARNING:SPACING: space prohibited before semicolon
#167: FILE: fs/reiserfs/inode.c:1614:
+	        mark_buffer_dirty(bh) ;

WARNING:TABSTOP: Statements should start on a tabstop
#168: FILE: fs/reiserfs/inode.c:1615:
+	    }

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000544627.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 28 warnings, 0 checks, 115 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000544627.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
