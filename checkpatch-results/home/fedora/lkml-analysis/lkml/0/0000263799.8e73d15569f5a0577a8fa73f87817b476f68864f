WARNING:TYPO_SPELLING: 'acutal' may be misspelled - perhaps 'actual'?
#29: 
> permission, but the acutal usage is not tracked
                      ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#45: FILE: include/linux/mm.h:512:
 }
+extern int user_can_mlock(size_t, struct user_struct *);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#45: FILE: include/linux/mm.h:512:
+extern int user_can_mlock(size_t, struct user_struct *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#46: FILE: include/linux/mm.h:513:
+extern void user_subtract_mlock(size_t, struct user_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#46: FILE: include/linux/mm.h:513:
+extern void user_subtract_mlock(size_t, struct user_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct user_struct *' should also have an identifier name
#46: FILE: include/linux/mm.h:513:
+extern void user_subtract_mlock(size_t, struct user_struct *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: ipc/shm.c:120:
+		user_subtract_mlock(shp->shm_file->f_dentry->d_inode->i_size,
+						shp->mlock_user);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: mm/mlock.c:199:
+ * and hugetlb files) get accounted against the user_struct instead. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#179: FILE: mm/mlock.c:203:
+int user_can_mlock(size_t size, struct user_struct * user)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#198: FILE: mm/mlock.c:222:
+void user_subtract_mlock(size_t size, struct user_struct * user)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000263799.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 3 warnings, 4 checks, 150 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000263799.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
