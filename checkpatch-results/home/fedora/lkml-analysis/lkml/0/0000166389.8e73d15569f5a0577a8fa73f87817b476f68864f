WARNING:REPEATED_WORD: Possible repeated word: 'an'
#38: 
kernel if the user does something stupid, an an attempt to guarantee 

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#87: 
Signed-off-by:  Luke Kosewski <lkosewsk@nit.ca>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#110: 
Signed-off-by:  Luke Kosewski <lkosewsk@nit.ca>

WARNING:BAD_SIGN_OFF: Duplicate signature
#110: 
Signed-off-by:  Luke Kosewski <lkosewsk@nit.ca>

WARNING:LINE_SPACING: Missing a blank line after declarations
#165: FILE: drivers/scsi/libata-core.c:3662:
+	struct ata_port *ap = (struct ata_port *)_data;
+	DPRINTK("Got an unplug request on port %d\n", ap->id);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#177: FILE: drivers/scsi/libata-core.c:3674:
+	struct ata_port *ap = (struct ata_port *)_data;
+	DPRINTK("Got a plug request on port %d\n", ap->id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: drivers/scsi/libata-core.c:3678:
+^I * queue, and this function executes while it's there (because $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#253: FILE: drivers/scsi/libata-core.c:4617:
+EXPORT_SYMBOL_GPL(ata_hotplug_plug);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#277: FILE: drivers/scsi/libata-scsi.c:1028:
+	if (qc->complete_fn == ata_scsi_qc_complete);
+		qc->complete_fn = ata_scsi_qc_abort;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#277: FILE: drivers/scsi/libata-scsi.c:1028:
+	if (qc->complete_fn == ata_scsi_qc_complete);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:REPEATED_WORD: Possible repeated word: 'really'
#293: FILE: drivers/scsi/libata-scsi.c:1044:
+	 * hotswap bay between on and off really really fast.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#319: FILE: drivers/scsi/libata.h:43:
+extern void ata_check_kill_qc(struct ata_port *ap);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#327: FILE: drivers/scsi/libata.h:80:
+extern void ata_scsi_prepare_qc_abort(struct ata_queued_cmd *qc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#328: FILE: drivers/scsi/libata.h:81:
+extern void ata_scsi_handle_plug(struct ata_port *ap);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#329: FILE: drivers/scsi/libata.h:82:
+extern void ata_scsi_handle_unplug(struct ata_port *ap);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#366: FILE: include/linux/libata.h:411:
+extern void ata_hotplug_unplug(struct ata_port *ap);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#367: FILE: include/linux/libata.h:412:
+extern void ata_hotplug_plug(struct ata_port *ap);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000166389.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 9 warnings, 6 checks, 236 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000166389.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
