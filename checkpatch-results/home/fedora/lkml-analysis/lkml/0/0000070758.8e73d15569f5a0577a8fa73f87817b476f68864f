WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#34: 
Signed-Off-By: Mingming Cao <cmm@us.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#129: FILE: fs/ext3/balloc.c:1509:
+	printk("ext3_count_free_blocks: stored = "E3FSBLK

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ext3_count_free_blocks', this function's name, in a string
#129: FILE: fs/ext3/balloc.c:1509:
+	printk("ext3_count_free_blocks: stored = "E3FSBLK

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#129: FILE: fs/ext3/balloc.c:1509:
+	printk("ext3_count_free_blocks: stored = "E3FSBLK

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#130: FILE: fs/ext3/balloc.c:1510:
+		", computed = "E3FSBLK", "E3FSBLK"\n",

CHECK:CAMELCASE: Avoid CamelCase: <Indirect>
#144: FILE: fs/ext3/inode.c:410:
+static ext3_fsblk_t ext3_find_near(struct inode *inode, Indirect *ind)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: fs/ext3/inode.c:451:
+static ext3_fsblk_t ext3_find_goal(struct inode *inode, long block,
 		Indirect chain[4], Indirect *partial)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#293: FILE: fs/ext3/inode.c:2115:
+					   "Read failure, inode=%ld, block="E3FSBLK,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#303: FILE: fs/ext3/inode.c:2397:
+static ext3_fsblk_t ext3_get_inode_block(struct super_block *sb,
 		unsigned long ino, struct ext3_iloc *iloc)

WARNING:SPLIT_STRING: quoted string split across lines
#326: FILE: fs/ext3/inode.c:2462:
 				"unable to read inode block - "
+				"inode=%lu, block="E3FSBLK,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#326: FILE: fs/ext3/inode.c:2462:
+				"inode=%lu, block="E3FSBLK,

WARNING:SPLIT_STRING: quoted string split across lines
#336: FILE: fs/ext3/inode.c:2544:
 					"unable to read inode block - "
+					"inode=%lu, block="E3FSBLK,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#336: FILE: fs/ext3/inode.c:2544:
+					"inode=%lu, block="E3FSBLK,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#395: FILE: fs/ext3/resize.c:346:
+				     "reserved GDT "E3FSBLK

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#396: FILE: fs/ext3/resize.c:347:
+				     " missing grp %d ("E3FSBLK")",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#414: FILE: fs/ext3/resize.c:424:
+			     "new group %u GDT block "E3FSBLK" not reserved",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#432: FILE: fs/ext3/resize.c:547:
+				     "reserved block "E3FSBLK

WARNING:LONG_LINE_STRING: line length of 104 exceeds 100 columns
#454: FILE: fs/ext3/resize.c:928:
+		printk(KERN_DEBUG "EXT3-fs: extending last group from "E3FSBLK" uto "E3FSBLK" blocks\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#454: FILE: fs/ext3/resize.c:928:
+		printk(KERN_DEBUG "EXT3-fs: extending last group from "E3FSBLK" uto "E3FSBLK" blocks\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#454: FILE: fs/ext3/resize.c:928:
+		printk(KERN_DEBUG "EXT3-fs: extending last group from "E3FSBLK" uto "E3FSBLK" blocks\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#463: FILE: fs/ext3/resize.c:967:
+			     "will only finish group ("E3FSBLK

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#473: FILE: fs/ext3/resize.c:1011:
+	ext3_debug("freeing blocks %lu through "E3FSBLK"\n", o_blocks_count,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#477: FILE: fs/ext3/resize.c:1014:
+	ext3_debug("freed blocks "E3FSBLK" through "E3FSBLK"\n", o_blocks_count,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#492: FILE: fs/ext3/super.c:693:
+^Iext3_fsblk_t ^Isb_block;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#527: FILE: fs/ext3/super.c:1319:
+static ext3_fsblk_t descriptor_loc(struct super_block *sb,
+				    ext3_fsblk_t logic_sb_block,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 27)
#605: FILE: fs/ext3/xattr.c:234:
 	if (ext3_xattr_check_block(bh)) {
[...]
+			   "inode %ld: bad block "E3FSBLK, inode->i_ino,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#608: FILE: fs/ext3/xattr.c:236:
+			   "inode %ld: bad block "E3FSBLK, inode->i_ino,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#617: FILE: fs/ext3/xattr.c:378:
+			   "inode %ld: bad block "E3FSBLK, inode->i_ino,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#626: FILE: fs/ext3/xattr.c:650:
+				"inode %ld: bad block "E3FSBLK, inode->i_ino,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#635: FILE: fs/ext3/xattr.c:851:
+		   "inode %ld: bad block "E3FSBLK, inode->i_ino,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#644: FILE: fs/ext3/xattr.c:1080:
+			"inode %ld: block "E3FSBLK" read error", inode->i_ino,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#652: FILE: fs/ext3/xattr.c:1087:
+			"inode %ld: bad block "E3FSBLK, inode->i_ino,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#679: FILE: include/linux/ext3_fs.h:752:
+extern ext3_fsblk_t ext3_count_free_blocks (struct super_block *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#679: FILE: include/linux/ext3_fs.h:752:
+extern ext3_fsblk_t ext3_count_free_blocks (struct super_block *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#679: FILE: include/linux/ext3_fs.h:752:
+extern ext3_fsblk_t ext3_count_free_blocks (struct super_block *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000070758.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 11 warnings, 24 checks, 592 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000070758.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
