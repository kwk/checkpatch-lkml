ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#25: 
--- a/arch/ppc/syslib/Makefile	Wed May 12 09:24:25 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#46: FILE: arch/ppc/syslib/ibm440gp_common.c:27:
+void __init ibm440gp_get_clocks(struct ibm44x_clocks* p,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#55: FILE: arch/ppc/syslib/ibm440gp_common.c:71:
+		p->uart0 = p->uart1 = ser_clk;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#61: FILE: arch/ppc/syslib/ibm440gp_common.c:76:
+		p->uart0 = p->uart1 = p->plb / uart_div;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: arch/ppc/syslib/ibm440gp_common.h:27:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: arch/ppc/syslib/ibm440gp_common.h:30:
+void ibm440gp_get_clocks(struct ibm44x_clocks*, unsigned int sys_clk, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: arch/ppc/syslib/ibm440gp_common.h:31:
+void ibm440gp_get_clocks(struct ibm44x_clocks*, unsigned int sys_clk, 
 	unsigned int ser_clk) __init;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: arch/ppc/syslib/ibm440gp_common.h:32:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: arch/ppc/syslib/ibm440gp_common.h:32:
+ $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#109: FILE: arch/ppc/syslib/ibm440gx_common.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#127: FILE: arch/ppc/syslib/ibm440gx_common.c:19:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#133: FILE: arch/ppc/syslib/ibm440gx_common.c:25:
+static inline u32 __fix_zero(u32 v, u32 def){

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#133: FILE: arch/ppc/syslib/ibm440gx_common.c:25:
+static inline u32 __fix_zero(u32 v, u32 def){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: arch/ppc/syslib/ibm440gx_common.c:28:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: arch/ppc/syslib/ibm440gx_common.c:28:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#137: FILE: arch/ppc/syslib/ibm440gx_common.c:29:
+void __init ibm440gx_get_clocks(struct ibm44x_clocks* p, unsigned int sys_clk, $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#137: FILE: arch/ppc/syslib/ibm440gx_common.c:29:
+void __init ibm440gx_get_clocks(struct ibm44x_clocks* p, unsigned int sys_clk, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: arch/ppc/syslib/ibm440gx_common.c:30:
+void __init ibm440gx_get_clocks(struct ibm44x_clocks* p, unsigned int sys_clk, 
+	unsigned int ser_clk)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: arch/ppc/syslib/ibm440gx_common.c:36:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: arch/ppc/syslib/ibm440gx_common.c:47:
+^I/* Input clocks for primary dividers */^I$

ERROR:SPACING: space required before the open brace '{'
#158: FILE: arch/ppc/syslib/ibm440gx_common.c:50:
+	if (pllc & 0x40000000){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: arch/ppc/syslib/ibm440gx_common.c:52:
+^I    $

ERROR:SPACING: space required before the open brace '{'
#162: FILE: arch/ppc/syslib/ibm440gx_common.c:54:
+		switch ((pllc >> 24) & 7){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#176: FILE: arch/ppc/syslib/ibm440gx_common.c:68:
+			printk(KERN_EMERG "invalid PLL feedback source\n");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#184: FILE: arch/ppc/syslib/ibm440gx_common.c:76:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#184: FILE: arch/ppc/syslib/ibm440gx_common.c:76:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: arch/ppc/syslib/ibm440gx_common.c:77:
+bypass:^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#188: FILE: arch/ppc/syslib/ibm440gx_common.c:80:
+		clk_a = clk_b = sys_clk;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: arch/ppc/syslib/ibm440gx_common.c:82:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: arch/ppc/syslib/ibm440gx_common.c:87:
+^I$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#209: FILE: arch/ppc/syslib/ibm440gx_common.c:101:
+void __init ibm440gx_l2c_enable(void){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: arch/ppc/syslib/ibm440gx_common.c:103:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: arch/ppc/syslib/ibm440gx_common.c:112:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: arch/ppc/syslib/ibm440gx_common.c:117:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: arch/ppc/syslib/ibm440gx_common.c:119:
+^I$

WARNING:SPACING: space prohibited before semicolon
#230: FILE: arch/ppc/syslib/ibm440gx_common.c:122:
+	while (!(mfdcr(DCRN_L2C0_SR) & L2C_SR_CC)) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#230: FILE: arch/ppc/syslib/ibm440gx_common.c:122:
+	while (!(mfdcr(DCRN_L2C0_SR) & L2C_SR_CC)) ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: arch/ppc/syslib/ibm440gx_common.c:123:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: arch/ppc/syslib/ibm440gx_common.c:126:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: arch/ppc/syslib/ibm440gx_common.c:135:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: arch/ppc/syslib/ibm440gx_common.c:137:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: arch/ppc/syslib/ibm440gx_common.c:140:
+^Ir &= ~(L2C_CFG_DCW_MASK | L2C_CFG_CPIM | L2C_CFG_TPIM | L2C_CFG_LIM $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: arch/ppc/syslib/ibm440gx_common.c:143:
+^Ir |= L2C_CFG_ICU | L2C_CFG_DCU | L2C_CFG_TPC | L2C_CFG_CPC | L2C_CFG_FRAN $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: arch/ppc/syslib/ibm440gx_common.c:146:
+^I$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#259: FILE: arch/ppc/syslib/ibm440gx_common.c:151:
+void __init ibm440gx_l2c_disable(void){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: arch/ppc/syslib/ibm440gx_common.c:153:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: arch/ppc/syslib/ibm440gx_common.c:170:
+^I$

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#289: FILE: arch/ppc/syslib/ibm440gx_common.c:181:
+	SDR_WRITE(DCRN_SDR_PFC1, (SDR_READ(DCRN_SDR_PFC1) & ~DCRN_SDR_PFC1_EPS) | (group << DCRN_SDR_PFC1_EPS_SHIFT));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#295: FILE: arch/ppc/syslib/ibm440gx_common.c:187:
+	SDR_WRITE(DCRN_SDR_MFR,SDR_READ(DCRN_SDR_MFR) &
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#297: FILE: arch/ppc/syslib/ibm440gx_common.c:189:
+	SDR_WRITE(DCRN_SDR_MFR,SDR_READ(DCRN_SDR_MFR) &
 	                      ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#301: FILE: arch/ppc/syslib/ibm440gx_common.c:193:
+int ibm440gx_show_cpuinfo(struct seq_file *m){

ERROR:SPACING: space required before the open brace '{'
#301: FILE: arch/ppc/syslib/ibm440gx_common.c:193:
+int ibm440gx_show_cpuinfo(struct seq_file *m){

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#302: FILE: arch/ppc/syslib/ibm440gx_common.c:194:
+int ibm440gx_show_cpuinfo(struct seq_file *m){
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#304: FILE: arch/ppc/syslib/ibm440gx_common.c:196:
+	const char* s;

WARNING:LINE_SPACING: Missing a blank line after declarations
#305: FILE: arch/ppc/syslib/ibm440gx_common.c:197:
+	const char* s;
+	if (l2c_cfg & L2C_CFG_L2M){

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#305: FILE: arch/ppc/syslib/ibm440gx_common.c:197:
+	if (l2c_cfg & L2C_CFG_L2M){
+	    switch (l2c_cfg & (L2C_CFG_ICU | L2C_CFG_DCU)){

ERROR:SPACING: space required before the open brace '{'
#305: FILE: arch/ppc/syslib/ibm440gx_common.c:197:
+	if (l2c_cfg & L2C_CFG_L2M){

CHECK:BRACES: braces {} should be used on all arms of this statement
#305: FILE: arch/ppc/syslib/ibm440gx_common.c:197:
+	if (l2c_cfg & L2C_CFG_L2M){
[...]
+	else
[...]

WARNING:TABSTOP: Statements should start on a tabstop
#306: FILE: arch/ppc/syslib/ibm440gx_common.c:198:
+	    switch (l2c_cfg & (L2C_CFG_ICU | L2C_CFG_DCU)){

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#306: FILE: arch/ppc/syslib/ibm440gx_common.c:198:
+	    switch (l2c_cfg & (L2C_CFG_ICU | L2C_CFG_DCU)){
+		case L2C_CFG_ICU: s = "I-Cache only";    break;
+		case L2C_CFG_DCU: s = "D-Cache only";    break;
+		default:	  s = "I-Cache/D-Cache"; break;	

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open brace '{'
#306: FILE: arch/ppc/syslib/ibm440gx_common.c:198:
+	    switch (l2c_cfg & (L2C_CFG_ICU | L2C_CFG_DCU)){

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#307: FILE: arch/ppc/syslib/ibm440gx_common.c:199:
+		case L2C_CFG_ICU: s = "I-Cache only";    break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#308: FILE: arch/ppc/syslib/ibm440gx_common.c:200:
+		case L2C_CFG_DCU: s = "D-Cache only";    break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#309: FILE: arch/ppc/syslib/ibm440gx_common.c:201:
+^I^Idefault:^I  s = "I-Cache/D-Cache"; break;^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#309: FILE: arch/ppc/syslib/ibm440gx_common.c:201:
+		default:	  s = "I-Cache/D-Cache"; break;	

WARNING:TABSTOP: Statements should start on a tabstop
#310: FILE: arch/ppc/syslib/ibm440gx_common.c:202:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#312: FILE: arch/ppc/syslib/ibm440gx_common.c:204:
+	else
+	    s = "disabled";

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#312: FILE: arch/ppc/syslib/ibm440gx_common.c:204:
+	}
+	else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#315: FILE: arch/ppc/syslib/ibm440gx_common.c:207:
+^Iseq_printf(m, "L2-Cache\t: %s (0x%08x 0x%08x)\n", s, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: arch/ppc/syslib/ibm440gx_common.c:208:
+	seq_printf(m, "L2-Cache\t: %s (0x%08x 0x%08x)\n", s, 
+	    l2c_cfg, mfdcr(DCRN_L2C0_SR));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#325: FILE: arch/ppc/syslib/ibm440gx_common.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: arch/ppc/syslib/ibm440gx_common.h:28:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: arch/ppc/syslib/ibm440gx_common.h:31:
+void ibm440gx_get_clocks(struct ibm44x_clocks*, unsigned int sys_clk, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: arch/ppc/syslib/ibm440gx_common.h:32:
+void ibm440gx_get_clocks(struct ibm44x_clocks*, unsigned int sys_clk, 
+	unsigned int ser_clk) __init;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#374: FILE: arch/ppc/syslib/ibm440gx_common.h:50:
+int ibm440gx_show_cpuinfo(struct seq_file*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct seq_file*' should also have an identifier name
#374: FILE: arch/ppc/syslib/ibm440gx_common.h:50:
+int ibm440gx_show_cpuinfo(struct seq_file*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#383: FILE: arch/ppc/syslib/ibm44x_common.h:1:
+/*

ERROR:SPACING: space required after that ';' (ctx:VxV)
#468: FILE: include/asm-ppc/ibm44x.h:87:
+	mfdcr(DCRN_CPR_CONFIG_DATA);})
 	                           ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#471: FILE: include/asm-ppc/ibm44x.h:90:
+	mtdcr(DCRN_CPR_CONFIG_DATA, data);})
 	                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#475: FILE: include/asm-ppc/ibm44x.h:93:
+#define DCRN_SDR_CONFIG_ADDR ^I0xe $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#475: FILE: include/asm-ppc/ibm44x.h:93:
+#define DCRN_SDR_CONFIG_ADDR ^I0xe $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#490: FILE: include/asm-ppc/ibm44x.h:115:
+#define DCRN_SDR_MFR_E1RXFL^I0x00000200 $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#523: FILE: include/asm-ppc/ibm44x.h:166:
+#define UIC0_UIC1CR      ^I31^I/* UIC1 critical interrupt */$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000282384.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 56 errors, 16 warnings, 11 checks, 621 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000282384.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
