WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
static int sys_mkdir_exit(struct kretprobe_instance *i, struct pt_regs *regs)

CHECK:SPACING: No space is necessary after a cast
#127: FILE: arch/x86_64/kernel/kprobes.c:279:
+	return ((struct thread_info *) (((unsigned long) ptr) &

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#128: FILE: arch/x86_64/kernel/kprobes.c:280:
+					(~(THREAD_SIZE -1))))->task;
 					               ^

WARNING:TYPO_SPELLING: 'addrress' may be misspelled - perhaps 'address'?
#141: FILE: arch/x86_64/kernel/kprobes.c:293:
+	 * the same addrress since stack address would have
 	            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#144: FILE: arch/x86_64/kernel/kprobes.c:296:
+	if (((void*) *sara) != kretprobe_trampoline)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#144: FILE: arch/x86_64/kernel/kprobes.c:296:
+	if (((void*) *sara) != kretprobe_trampoline)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#145: FILE: arch/x86_64/kernel/kprobes.c:297:
+		orig_ret_addr = (void*) *sara;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#145: FILE: arch/x86_64/kernel/kprobes.c:297:
+		orig_ret_addr = (void*) *sara;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#147: FILE: arch/x86_64/kernel/kprobes.c:299:
+	if ((ri = get_free_rp_inst(rp)) != NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#153: FILE: arch/x86_64/kernel/kprobes.c:305:
+		*sara = (unsigned long) &kretprobe_trampoline;

WARNING:LINE_SPACING: Missing a blank line after declarations
#162: FILE: arch/x86_64/kernel/kprobes.c:314:
+	struct kretprobe_instance *ri;
+	while ((ri = get_rp_inst_tsk(tk)) != NULL) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#164: FILE: arch/x86_64/kernel/kprobes.c:316:
+					(unsigned long) ri->ret_addr;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: arch/x86_64/kernel/kprobes.c:419:
+ void kretprobe_trampoline_holder(void)$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#180: FILE: arch/x86_64/kernel/kprobes.c:419:
+ void kretprobe_trampoline_holder(void)
+ {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: arch/x86_64/kernel/kprobes.c:420:
+ {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: arch/x86_64/kernel/kprobes.c:421:
+ ^Iasm volatile (  ".global kretprobe_trampoline\n"$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#182: FILE: arch/x86_64/kernel/kprobes.c:421:
+ ^Iasm volatile (  ".global kretprobe_trampoline\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: arch/x86_64/kernel/kprobes.c:421:
+ ^Iasm volatile (  ".global kretprobe_trampoline\n"$

ERROR:SPACING: space prohibited after that open parenthesis '('
#182: FILE: arch/x86_64/kernel/kprobes.c:421:
+ 	asm volatile (  ".global kretprobe_trampoline\n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: arch/x86_64/kernel/kprobes.c:422:
+ ^I^I^I"kretprobe_trampoline: \n"$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#183: FILE: arch/x86_64/kernel/kprobes.c:422:
+ ^I^I^I"kretprobe_trampoline: \n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: arch/x86_64/kernel/kprobes.c:422:
+ ^I^I^I"kretprobe_trampoline: \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#183: FILE: arch/x86_64/kernel/kprobes.c:422:
+ 			"kretprobe_trampoline: \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: arch/x86_64/kernel/kprobes.c:423:
+ ^I^I^I"nop\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#184: FILE: arch/x86_64/kernel/kprobes.c:423:
+ ^I^I^I"nop\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: arch/x86_64/kernel/kprobes.c:423:
+ ^I^I^I"nop\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: arch/x86_64/kernel/kprobes.c:424:
+ }$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: arch/x86_64/kernel/kprobes.c:450:
+void trampoline_post_handler(struct kprobe *p, struct pt_regs *regs,
+						unsigned long flags)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000178935.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 13 warnings, 7 checks, 165 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000178935.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
