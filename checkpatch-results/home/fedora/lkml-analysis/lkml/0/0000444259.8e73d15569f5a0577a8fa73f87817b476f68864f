WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
diff -durNp -x '*.[ao]' -x '*~' -x '*.cmd' -x '*.orig' -x '*.rej' -x 'vmlinu*' -x bzImage -x bootsect -x conmakehash -x setup -x build -x asm -x config -x '.*' -x consolemap_deftbl.c -x defkeymap.c -x devlist.h -x classlist.h -x autoconf.h -x compile.h -x version.h -x System.map -x gen-devlist -x fixdep -x split-include linux-2.5.28/drivers/ide/ide.c linux/drivers/ide/ide.c

WARNING:TYPO_SPELLING: 'choosen' may be misspelled - perhaps 'chosen'?
#110: FILE: drivers/ide/ide.c:553:
+			/* Take this device, if there is no device choosen thus
 			                                           ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#113: FILE: drivers/ide/ide.c:556:
+			if (!drive || (tmp->sleep && (!drive->sleep || time_after(drive->sleep, tmp->sleep)))) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#169: FILE: drivers/ide/ide.c:589:
+					printk(KERN_ERR "%s: timer already active\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#169: FILE: drivers/ide/ide.c:589:
+					printk(KERN_ERR "%s: timer already active\n", __FUNCTION__);

WARNING:TYPO_SPELLING: 'becouse' may be misspelled - perhaps 'because'?
#192: FILE: drivers/ide/ide.c:595:
+				 * We purposely leave us busy while sleeping becouse we
 				                                             ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#200: FILE: drivers/ide/ide.c:603:
+				 * upper layers from stomping on us */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#202: FILE: drivers/ide/ide.c:605:
+				 * */

WARNING:TYPO_SPELLING: 'wan't' may be misspelled - perhaps 'want'?
#219: FILE: drivers/ide/ide.c:613:
+				 * make sure that it wan't throw stones at us when we
 				                     ^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#291: FILE: drivers/ide/ide.c:652:
+				printk(KERN_ERR "%s: error: DMA in progress...\n", drive->name);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#312: FILE: drivers/ide/ide.c:664:
+				BUG_ON(!drive->using_tcq);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#319: FILE: drivers/ide/ide.c:668:
+			if (!(rq = elv_next_request(&drive->queue))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#361: FILE: drivers/ide/ide.c:696:
+			BUG_ON(!(rq->flags & REQ_STARTED));

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#365: FILE: drivers/ide/ide.c:699:
+			printk("%s: %s: current=0x%08lx\n", ch->name, __FUNCTION__, (unsigned long) rq);

CHECK:SPACING: No space is necessary after a cast
#365: FILE: drivers/ide/ide.c:699:
+			printk("%s: %s: current=0x%08lx\n", ch->name, __FUNCTION__, (unsigned long) rq);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#365: FILE: drivers/ide/ide.c:699:
+			printk("%s: %s: current=0x%08lx\n", ch->name, __FUNCTION__, (unsigned long) rq);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#365: FILE: drivers/ide/ide.c:699:
+			printk("%s: %s: current=0x%08lx\n", ch->name, __FUNCTION__, (unsigned long) rq);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drive->failures > drive->max_failures'
#372: FILE: drivers/ide/ide.c:703:
+			if (drive->max_failures && (drive->failures > drive->max_failures))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#405: FILE: drivers/ide/ide.c:722:
+			ret = ata_status_poll(drive, drive->ready_stat, BUSY_STAT | DRQ_STAT,
+					WAIT_READY, rq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#410: FILE: drivers/ide/ide.c:725:
+				printk(KERN_ERR "%s: drive not ready for command\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#423: FILE: drivers/ide/ide.c:731:
+				printk(KERN_WARNING "%s: device type %d not supported\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#424: FILE: drivers/ide/ide.c:732:
+				printk(KERN_WARNING "%s: device type %d not supported\n",
+						drive->name, drive->type);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#466: FILE: drivers/ide/ide.c:750:
 
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#507: FILE: drivers/ide/ide.c:1050:
+		} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000444259.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 17 warnings, 6 checks, 464 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000444259.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
