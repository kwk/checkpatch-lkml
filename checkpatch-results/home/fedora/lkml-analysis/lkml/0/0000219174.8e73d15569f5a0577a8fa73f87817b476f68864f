CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#59: FILE: include/sound/ac97_codec.h:369:
+#define AC97_DEFAULT_POWER_OFF	(1<<8)	/* no RESET write */
                               	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#59: FILE: include/sound/ac97_codec.h:369:
+#define AC97_DEFAULT_POWER_OFF	(1<<8)	/* no RESET write */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#60: FILE: include/sound/ac97_codec.h:370:
+#define AC97_MODEM_PATCH	(1<<9)	/* modem patch */
                         	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#60: FILE: include/sound/ac97_codec.h:370:
+#define AC97_MODEM_PATCH	(1<<9)	/* modem patch */

WARNING:TYPO_SPELLING: 'Conexant' may be misspelled - perhaps 'Connexant'?
#106: FILE: sound/pci/ac97/ac97_codec.c:68:
+{ 0x43585400, 0xffffff00, "Conexant" },
                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#234: FILE: sound/pci/ac97/ac97_codec.c:106:
+{ 0x414c4300, 0xffffff00, "ALC100/100P", ^INULL },$

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#262: FILE: sound/pci/ac97/ac97_codec.c:134:
+{ 0x43585428, 0xfffffff8, "Cx20468",		patch_conexant }, // SmartAMC fixme: the mask might be different

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: sound/pci/ac97/ac97_codec.c:142:
+{ 0x49434551, 0xffffffff, "VT1616", ^I^Ipatch_vt1616 }, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#270: FILE: sound/pci/ac97/ac97_codec.c:142:
+{ 0x49434551, 0xffffffff, "VT1616", ^I^Ipatch_vt1616 }, $

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#271: FILE: sound/pci/ac97/ac97_codec.c:143:
+{ 0x49434552, 0xffffffff, "VT1616i",		patch_vt1616 }, // VT1616 compatible (chipset integrated)

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#281: FILE: sound/pci/ac97/ac97_codec.c:153:
+{ 0x54524108, 0xffffffff, "TR28028",		patch_tritech_tr28028 }, // added by xin jin [07/09/99]

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#282: FILE: sound/pci/ac97/ac97_codec.c:154:
+{ 0x54524123, 0xffffffff, "TR28602",		NULL }, // only guess --jk [TR28023 = eMicro EM28023 (new CT1297)]

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#292: FILE: sound/pci/ac97/ac97_codec.c:164:
+{ 0x574d4c13, 0xffffffff, "WM9713",		patch_wolfson13,	AC97_DEFAULT_POWER_OFF }, /* warm start */

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#347: FILE: sound/pci/ac97/ac97_codec.c:1688:
+	if (! pid)
 	    ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#367: FILE: sound/pci/ac97/ac97_codec.c:1694:
+		    (! modem && ! (pid->flags & AC97_MODEM_PATCH)))
 		     ^

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#367: FILE: sound/pci/ac97/ac97_codec.c:1694:
+		    (! modem && ! (pid->flags & AC97_MODEM_PATCH)))
 		                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: sound/pci/ac97/ac97_codec.c:1696:
+^I} $

CHECK:BRACES: braces {} should be used on all arms of this statement
#372: FILE: sound/pci/ac97/ac97_codec.c:1699:
+	if (pid) {
[...]
-	sprintf(name + strlen(name), " id %x", id & 0xff);
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#379: FILE: sound/pci/ac97/ac97_codec.c:1706:
+			    (! modem && ! (pid->flags & AC97_MODEM_PATCH)))
 			     ^

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#379: FILE: sound/pci/ac97/ac97_codec.c:1706:
+			    (! modem && ! (pid->flags & AC97_MODEM_PATCH)))
 			                ^

CHECK:BRACES: Unbalanced braces around else statement
#383: FILE: sound/pci/ac97/ac97_codec.c:1709:
+	} else

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#427: FILE: sound/pci/ac97/ac97_codec.c:1975:
+		if (! (ac97->flags & AC97_DEFAULT_POWER_OFF)) {
 		    ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#429: FILE: sound/pci/ac97/ac97_codec.c:1977:
+			udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#444: FILE: sound/pci/ac97/ac97_codec.c:2242:
+	if (! (ac97->flags & AC97_DEFAULT_POWER_OFF)) {
 	    ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#446: FILE: sound/pci/ac97/ac97_codec.c:2244:
+		udelay(100);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#458: FILE: sound/pci/ac97/ac97_patch.c:308:
+int patch_wolfson13(ac97_t * ac97)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#485: FILE: sound/pci/ac97/ac97_patch.h:31:
+int patch_wolfson13(ac97_t * ac97);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000219174.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 8 warnings, 8 checks, 417 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000219174.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
