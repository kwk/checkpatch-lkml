ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#99: FILE: drivers/block/DAC960.c:2476:
lock);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: drivers/block/DAC960.c:2478:
+  blk_queue_dma_mask(RequestQueue, Controller->BounceBufferLimit);$

CHECK:CAMELCASE: Avoid CamelCase: <RequestQueue>
#101: FILE: drivers/block/DAC960.c:2478:
+  blk_queue_dma_mask(RequestQueue, Controller->BounceBufferLimit);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Controller>
#101: FILE: drivers/block/DAC960.c:2478:
+  blk_queue_dma_mask(RequestQueue, Controller->BounceBufferLimit);

CHECK:CAMELCASE: Avoid CamelCase: <BounceBufferLimit>
#101: FILE: drivers/block/DAC960.c:2478:
+  blk_queue_dma_mask(RequestQueue, Controller->BounceBufferLimit);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#157: FILE: drivers/block/ll_rw_blk.c:236:
+	q->dma_mask =3D dma_mask;
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#187: FILE: drivers/block/ll_rw_blk.c:931:
+	if (BIOVEC_VIRT_MERGEABLE(q, __BVEC_END(req->biotail), __BVEC_START(bio))=
 	                                                                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#187: FILE: drivers/block/ll_rw_blk.c:931:
+	if (BIOVEC_VIRT_MERGEABLE(q, __BVEC_END(req->biotail), __BVEC_START(bio))=

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required before the open parenthesis '('
#208: FILE: drivers/ide/ide-lib.c:408:
+	if((HWIF(drive)->pci_dev))

ERROR:SPACING: space required before the open parenthesis '('
#221: FILE: drivers/scsi/scsi_lib.c:1259:
+	if(scsi_get_device(shost) && scsi_get_device(shost)->dma_mask)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vec' - possible side-effects?
#246: FILE: include/linux/bio.h:163:
+#define __BVEC_PHYS_DIRECT_OK(q, vec) \
+	((bvec_to_phys(vec) & (q)->dma_mask) =3D=3D bvec_to_phys(vec))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#247: FILE: include/linux/bio.h:164:
+	((bvec_to_phys(vec) & (q)->dma_mask) =3D=3D bvec_to_phys(vec))
 	                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#247: FILE: include/linux/bio.h:164:
+	((bvec_to_phys(vec) & (q)->dma_mask) =3D=3D bvec_to_phys(vec))
 	                                        ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#249: FILE: include/linux/bio.h:166:
+#define __BIO_CAN_BYPASS(q) \
+	((BIO_VMERGE_BYPASS_MASK) && ((q)->dma_mask & (BIO_VMERGE_BYPASS_MASK)) =

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#263: FILE: include/linux/bio.h:179:
+#define BIOVEC_VIRT_MERGEABLE(q, vec1, vec2)	\
+	(((((bvec_to_phys((vec1)) + (vec1)->bv_len) | bvec_to_phys((vec2))) & (BI=

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vec1' - possible side-effects?
#263: FILE: include/linux/bio.h:179:
+#define BIOVEC_VIRT_MERGEABLE(q, vec1, vec2)	\
+	(((((bvec_to_phys((vec1)) + (vec1)->bv_len) | bvec_to_phys((vec2))) & (BI=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#264: FILE: include/linux/bio.h:180:
+	(((((bvec_to_phys((vec1)) + (vec1)->bv_len) | bvec_to_phys((vec2))) & (BI=
 	                                                                         ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#266: FILE: include/linux/bio.h:181:
+	(((((bvec_to_phys((vec1)) + (vec1)->bv_len) | bvec_to_phys((vec2))) & (BI=
+	&& !( __BIO_CAN_BYPASS(q) && (__BVEC_PHYS_DIRECT_OK(q, vec1) \

ERROR:SPACING: space prohibited after that open parenthesis '('
#266: FILE: include/linux/bio.h:181:
+	&& !( __BIO_CAN_BYPASS(q) && (__BVEC_PHYS_DIRECT_OK(q, vec1) \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#266: FILE: include/linux/bio.h:181:
+	&& !( __BIO_CAN_BYPASS(q) && (__BVEC_PHYS_DIRECT_OK(q, vec1) \

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#267: FILE: include/linux/bio.h:182:
+	&& !( __BIO_CAN_BYPASS(q) && (__BVEC_PHYS_DIRECT_OK(q, vec1) \
+				      || __BVEC_PHYS_DIRECT_OK(q, vec2))))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#291: FILE: include/linux/blkdev.h:467:
+extern void blk_queue_dma_mask(request_queue_t *, u64);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#291: FILE: include/linux/blkdev.h:467:
+extern void blk_queue_dma_mask(request_queue_t *, u64);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#291: FILE: include/linux/blkdev.h:467:
+extern void blk_queue_dma_mask(request_queue_t *, u64);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000358324.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 4 warnings, 8 checks, 174 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000358324.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
