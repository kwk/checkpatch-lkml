WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
Content-Type: text/x-patch; name=timer_top3-20050805.patch; charset=us-ascii

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#78: FILE: kernel/timer.c:512:
+extern int account_timer(unsigned int function,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: kernel/timer.c:513:
+^I       ^I^Istruct timer_top_info * top_info);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#79: FILE: kernel/timer.c:513:
+^I       ^I^Istruct timer_top_info * top_info);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#79: FILE: kernel/timer.c:513:
+extern int account_timer(unsigned int function,
+	       		struct timer_top_info * top_info);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#79: FILE: kernel/timer.c:513:
+	       		struct timer_top_info * top_info);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#95: FILE: kernel/timer_top.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#96: FILE: kernel/timer_top.c:2:
+ * kernel/timer_top.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#108: FILE: kernel/timer_top.c:14:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: kernel/timer_top.c:25:
+^Istruct list_head ^Ilist;      ^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#119: FILE: kernel/timer_top.c:25:
+^Istruct list_head ^Ilist;      ^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#127: FILE: kernel/timer_top.c:33:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#128: FILE: kernel/timer_top.c:34:
+int account_timer(unsigned int function, struct timer_top_info * top_info)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: kernel/timer_top.c:48:
+^I$

WARNING:TYPO_SPELLING: 'didnt' may be misspelled - perhaps 'didn't'?
#143: FILE: kernel/timer_top.c:49:
+	/* if you are here then it didnt find so inserts in the list */
 	                           ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*top)...) over kmalloc(sizeof(struct timer_top_info)...)
#145: FILE: kernel/timer_top.c:51:
+	top = kmalloc(sizeof(struct timer_top_info), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: kernel/timer_top.c:52:
+^Iif (!top) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: kernel/timer_top.c:60:
+out:^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#158: FILE: kernel/timer_top.c:64:
+EXPORT_SYMBOL(account_timer);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: kernel/timer_top.c:74:
+static int proc_read_top_info(char *page, char **start, off_t off,
+				int count, int *eof, void *data)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#173: FILE: kernel/timer_top.c:79:
+	struct top_info_poll *info_poll_data=(struct top_info_poll *)data;
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: kernel/timer_top.c:89:
+} $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#188: FILE: kernel/timer_top.c:94:
+	if (top_info_file == NULL) {
+		return -ENOMEM;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!top_info_file"
#188: FILE: kernel/timer_top.c:94:
+	if (top_info_file == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: kernel/timer_top.c:103:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000161567.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 9 warnings, 6 checks, 132 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000161567.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
