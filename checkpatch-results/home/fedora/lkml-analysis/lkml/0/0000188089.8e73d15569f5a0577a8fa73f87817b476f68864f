WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#34: 
Signed-Off-By: Dave Teigland <teigland@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#35: 
Signed-Off-By: Patrick Caulfield <pcaulfie@redhat.com>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#50: FILE: include/linux/dlm_node.h:1:
+/******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#51: FILE: include/linux/dlm_node.h:2:
+/******************************************************************************
+*******************************************************************************

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#96: FILE: drivers/dlm/config.c:1:
+/******************************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#97: FILE: drivers/dlm/config.c:2:
+/******************************************************************************
+*******************************************************************************

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#141: FILE: drivers/dlm/config.h:1:
+/******************************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#142: FILE: drivers/dlm/config.h:2:
+/******************************************************************************
+*******************************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: drivers/dlm/config.h:6:
+**  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#168: FILE: drivers/dlm/config.h:28:
+extern int dlm_config_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#169: FILE: drivers/dlm/config.h:29:
+extern void dlm_config_exit(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#175: FILE: drivers/dlm/member_sysfs.c:1:
+/******************************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#176: FILE: drivers/dlm/member_sysfs.c:2:
+/******************************************************************************
+*******************************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#191: FILE: drivers/dlm/member_sysfs.c:17:
+/*
+/dlm/lsname/stop       RW  write 1 to suspend operation

CHECK:LINE_SPACING: Please don't use multiple blank lines
#200: FILE: drivers/dlm/member_sysfs.c:26:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#217: FILE: drivers/dlm/member_sysfs.c:43:
+	if (simple_strtol(buf, NULL, 0) == 1) {

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LINE_SPACING: Missing a blank line after declarations
#239: FILE: drivers/dlm/member_sysfs.c:65:
+	ssize_t ret;
+	ret = dlm_ls_start(ls, simple_strtol(buf, NULL, 0));

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#239: FILE: drivers/dlm/member_sysfs.c:65:
+	ret = dlm_ls_start(ls, simple_strtol(buf, NULL, 0));

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#257: FILE: drivers/dlm/member_sysfs.c:83:
+	dlm_ls_finish(ls, simple_strtol(buf, NULL, 0));

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#278: FILE: drivers/dlm/member_sysfs.c:104:
+	if (simple_strtol(buf, NULL, 0) == 1) {

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#304: FILE: drivers/dlm/member_sysfs.c:130:
+	ls->ls_global_id = simple_strtol(buf, NULL, 0);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#316: FILE: drivers/dlm/member_sysfs.c:142:
+		ret += sprintf(buf+ret, "%u ", memb->nodeid);
 		                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#317: FILE: drivers/dlm/member_sysfs.c:143:
+	ret += sprintf(buf+ret, "\n");
 	                  ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#333: FILE: drivers/dlm/member_sysfs.c:159:
+	nodeids = kmalloc(sizeof(int) * count, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#345: FILE: drivers/dlm/member_sysfs.c:171:
+		if ((t = strsep(&p, " ")) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#347: FILE: drivers/dlm/member_sysfs.c:173:
+		if (sscanf(t, "%u", &id) != 1)
+			break;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dlm_ls *' should also have an identifier name
#376: FILE: drivers/dlm/member_sysfs.c:202:
+	ssize_t (*show)(struct dlm_ls *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#376: FILE: drivers/dlm/member_sysfs.c:202:
+	ssize_t (*show)(struct dlm_ls *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dlm_ls *' should also have an identifier name
#377: FILE: drivers/dlm/member_sysfs.c:203:
+	ssize_t (*store)(struct dlm_ls *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#377: FILE: drivers/dlm/member_sysfs.c:203:
+	ssize_t (*store)(struct dlm_ls *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#377: FILE: drivers/dlm/member_sysfs.c:203:
+	ssize_t (*store)(struct dlm_ls *, const char *, size_t);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#381: FILE: drivers/dlm/member_sysfs.c:207:
+	.attr  = {.name = "stop", .mode = S_IRUGO | S_IWUSR},

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#387: FILE: drivers/dlm/member_sysfs.c:213:
+	.attr  = {.name = "start", .mode = S_IRUGO | S_IWUSR},

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#393: FILE: drivers/dlm/member_sysfs.c:219:
+	.attr  = {.name = "finish", .mode = S_IRUGO | S_IWUSR},

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#399: FILE: drivers/dlm/member_sysfs.c:225:
+	.attr  = {.name = "terminate", .mode = S_IRUGO | S_IWUSR},

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#405: FILE: drivers/dlm/member_sysfs.c:231:
+	.attr  = {.name = "done", .mode = S_IRUGO},

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#410: FILE: drivers/dlm/member_sysfs.c:236:
+	.attr  = {.name = "id", .mode = S_IRUGO | S_IWUSR},

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#416: FILE: drivers/dlm/member_sysfs.c:242:
+	.attr  = {.name = "members", .mode = S_IRUGO | S_IWUSR},

WARNING:LINE_SPACING: Missing a blank line after declarations
#437: FILE: drivers/dlm/member_sysfs.c:263:
+	struct dlm_attr *a = container_of(attr, struct dlm_attr, attr);
+	return a->show ? a->show(ls, buf) : 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#445: FILE: drivers/dlm/member_sysfs.c:271:
+	struct dlm_attr *a = container_of(attr, struct dlm_attr, attr);
+	return a->store ? a->store(ls, buf, len) : len;

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#448: FILE: drivers/dlm/member_sysfs.c:274:
+static struct sysfs_ops dlm_attr_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#470: FILE: drivers/dlm/member_sysfs.c:296:
+		printk("dlm_lockspace_init: cannot register kset %d\n", error);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#499: FILE: drivers/dlm/member_sysfs.h:1:
+/******************************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#500: FILE: drivers/dlm/member_sysfs.h:2:
+/******************************************************************************
+*******************************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#503: FILE: drivers/dlm/member_sysfs.h:5:
+**  $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#523: FILE: drivers/dlm/node_ioctl.c:1:
+/******************************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#524: FILE: drivers/dlm/node_ioctl.c:2:
+/******************************************************************************
+*******************************************************************************

CHECK:LINE_SPACING: Please don't use multiple blank lines
#543: FILE: drivers/dlm/node_ioctl.c:21:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'DLM_NODE_VERSION_MAJOR != version[0]'
#553: FILE: drivers/dlm/node_ioctl.c:31:
+	if ((DLM_NODE_VERSION_MAJOR != version[0]) ||
+	    (DLM_NODE_VERSION_MINOR < version[1])) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'DLM_NODE_VERSION_MINOR < version[1]'
#553: FILE: drivers/dlm/node_ioctl.c:31:
+	if ((DLM_NODE_VERSION_MAJOR != version[0]) ||
+	    (DLM_NODE_VERSION_MINOR < version[1])) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#553: FILE: drivers/dlm/node_ioctl.c:31:
+	if ((DLM_NODE_VERSION_MAJOR != version[0]) ||

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#554: FILE: drivers/dlm/node_ioctl.c:32:
+	    (DLM_NODE_VERSION_MINOR < version[1])) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#555: FILE: drivers/dlm/node_ioctl.c:33:
+		printk("dlm node_ioctl: interface mismatch: "

WARNING:SPLIT_STRING: quoted string split across lines
#556: FILE: drivers/dlm/node_ioctl.c:34:
+		printk("dlm node_ioctl: interface mismatch: "
+		       "kernel(%u.%u.%u), user(%u.%u.%u), cmd(%d)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#574: FILE: drivers/dlm/node_ioctl.c:52:
+^I              uint command, ulong u)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#574: FILE: drivers/dlm/node_ioctl.c:52:
+static int node_ioctl(struct inode *inode, struct file *file,
+	              uint command, ulong u)

CHECK:SPACING: No space is necessary after a cast
#581: FILE: drivers/dlm/node_ioctl.c:59:
+	u_param = (struct dlm_node_ioctl __user *) u;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#590: FILE: drivers/dlm/node_ioctl.c:68:
+		printk("dlm node_ioctl: bad ioctl 0x%x 0x%x 0x%x\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'node_ioctl', this function's name, in a string
#590: FILE: drivers/dlm/node_ioctl.c:68:
+		printk("dlm node_ioctl: bad ioctl 0x%x 0x%x 0x%x\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:CONST_STRUCT: struct file_operations should normally be const
#622: FILE: drivers/dlm/node_ioctl.c:100:
+static struct file_operations node_fops = {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#639: FILE: drivers/dlm/node_ioctl.c:117:
+		printk("dlm node_ioctl: misc_register failed %d\n", error);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#646: FILE: drivers/dlm/node_ioctl.c:124:
+		printk("dlm node_ioctl: misc_deregister failed\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000188089.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 48 warnings, 10 checks, 584 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000188089.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
