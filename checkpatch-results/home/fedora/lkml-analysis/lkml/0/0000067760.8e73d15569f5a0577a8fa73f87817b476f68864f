WARNING:TYPO_SPELLING: 'unneccesary' may be misspelled - perhaps 'unnecessary'?
#95: 
      ocfs2: remove unneccesary spin_unlock() in dlm_remaster_locks()
                    ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: fs/ocfs2/dlm/dlmast.c:202:
+ ^I^I * place when the lock is downconverted - otherwise we risk$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#132: FILE: fs/ocfs2/dlm/dlmast.c:202:
+ ^I^I * place when the lock is downconverted - otherwise we risk$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: fs/ocfs2/dlm/dlmast.c:203:
+ ^I^I * racing gets and puts which could result in old lvb data$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#133: FILE: fs/ocfs2/dlm/dlmast.c:203:
+ ^I^I * racing gets and puts which could result in old lvb data$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: fs/ocfs2/dlm/dlmast.c:204:
+ ^I^I * being propagated. We leave the put flag set and clear it$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#134: FILE: fs/ocfs2/dlm/dlmast.c:204:
+ ^I^I * being propagated. We leave the put flag set and clear it$

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: fs/ocfs2/dlm/dlmast.c:205:
+ ^I^I * here. In the future we might want to clear it at the time$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#135: FILE: fs/ocfs2/dlm/dlmast.c:205:
+ ^I^I * here. In the future we might want to clear it at the time$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: fs/ocfs2/dlm/dlmast.c:206:
+ ^I^I * the put is actually done.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#136: FILE: fs/ocfs2/dlm/dlmast.c:206:
+ ^I^I * the put is actually done.$

CHECK:BIT_MACRO: Prefer using the BIT macro
#150: FILE: fs/ocfs2/dlm/dlmcommon.h:40:
+#define DLM_HASH_SIZE_DEFAULT	(1 << 14)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#195: FILE: fs/ocfs2/dlm/dlmcommon.h:147:
+static inline struct hlist_head *dlm_lockres_hash(struct dlm_ctxt *dlm, unsigned i)

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#197: FILE: fs/ocfs2/dlm/dlmcommon.h:149:
+	return dlm->lockres_hash[(i / DLM_BUCKETS_PER_PAGE) % DLM_HASH_PAGES] + (i % DLM_BUCKETS_PER_PAGE);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LINE_SPACING: Missing a blank line after declarations
#251: FILE: fs/ocfs2/dlm/dlmcommon.h:331:
+	int i;
+	for (i=0; i<DLM_LVB_LEN; i++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#251: FILE: fs/ocfs2/dlm/dlmcommon.h:331:
+	for (i=0; i<DLM_LVB_LEN; i++)
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#251: FILE: fs/ocfs2/dlm/dlmcommon.h:331:
+	for (i=0; i<DLM_LVB_LEN; i++)
 	           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#286: FILE: fs/ocfs2/dlm/dlmcommon.h:729:
+	 * inlining. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPLIT_STRING: quoted string split across lines
#346: FILE: fs/ocfs2/dlm/dlmconvert.c:491:
+				mlog(ML_ERROR, "There is something here "
+				     "for node %u, lock->ml.cookie=%llu, "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#347: FILE: fs/ocfs2/dlm/dlmconvert.c:492:
+				     "for node %u, lock->ml.cookie=%llu, "
+				     "cnv->cookie=%llu\n", cnv->node_idx,

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#377: FILE: fs/ocfs2/dlm/dlmdebug.c:121:
+#if 0

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#397: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#464: FILE: fs/ocfs2/dlm/dlmdomain.c:67:
+		if (!(vec[i] = (void *)__get_free_page(GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#697: FILE: fs/ocfs2/dlm/dlmlock.c:235:
+			 * lockres and completely remaster it. */

WARNING:SPLIT_STRING: quoted string split across lines
#699: FILE: fs/ocfs2/dlm/dlmlock.c:237:
+			mlog(0, "%s: recovery lock was owned by "
+			     "dead node %u, remaster it now.\n",

WARNING:SPLIT_STRING: quoted string split across lines
#730: FILE: fs/ocfs2/dlm/dlmlock.c:305:
+			mlog(ML_ERROR, "%s:%.*s: BUG.  this is a stale lockres "
+			     "no longer owned by %u.  that node is coming back "

WARNING:SPLIT_STRING: quoted string split across lines
#731: FILE: fs/ocfs2/dlm/dlmlock.c:306:
+			     "no longer owned by %u.  that node is coming back "
+			     "up currently.\n", dlm->name, create.namelen,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#734: FILE: fs/ocfs2/dlm/dlmlock.c:309:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPLIT_STRING: quoted string split across lines
#767: FILE: fs/ocfs2/dlm/dlmlock.c:464:
+		mlog(ML_ERROR, "Domain %s not fully joined, but node %u is "
+		     "sending a create_lock message for lock %.*s!\n",

WARNING:SPLIT_STRING: quoted string split across lines
#791: FILE: fs/ocfs2/dlm/dlmlock.c:708:
+				mlog(0, "%s: got RECOVERING "
+				     "for $RECOVERY lock, master "

WARNING:SPLIT_STRING: quoted string split across lines
#792: FILE: fs/ocfs2/dlm/dlmlock.c:709:
+				     "for $RECOVERY lock, master "
+				     "was %u\n", dlm->name,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#796: FILE: fs/ocfs2/dlm/dlmlock.c:713:
+				 * get cleaned up.  need to remaster. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#798: FILE: fs/ocfs2/dlm/dlmlock.c:715:
+				dlm_wait_for_node_death(dlm, res->owner,
+						DLM_NODE_DEATH_WAIT_MAX);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#833: FILE: fs/ocfs2/dlm/dlmmaster.c:130:
+#define dlm_print_nodemap(m)  _dlm_print_nodemap(m,#m)
                                                   ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#837: FILE: fs/ocfs2/dlm/dlmmaster.c:134:
+	int i;
+	printk("%s=[ ", mapname);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#837: FILE: fs/ocfs2/dlm/dlmmaster.c:134:
+	printk("%s=[ ", mapname);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#838: FILE: fs/ocfs2/dlm/dlmmaster.c:135:
+	for (i=0; i<O2NM_MAX_NODES; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#838: FILE: fs/ocfs2/dlm/dlmmaster.c:135:
+	for (i=0; i<O2NM_MAX_NODES; i++)
 	           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#840: FILE: fs/ocfs2/dlm/dlmmaster.c:137:
+			printk("%d ", i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#841: FILE: fs/ocfs2/dlm/dlmmaster.c:138:
+	printk("]");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#870: FILE: fs/ocfs2/dlm/dlmmaster.c:175:
+	mlog(ML_NOTICE, "%.*s: %3s refs=%3d mas=%3u new=%3u evt=%c inuse=%d ",
+		  namelen, name, type, refs, master, mle->new_master, attached,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#873: FILE: fs/ocfs2/dlm/dlmmaster.c:178:
+	printk(", ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#875: FILE: fs/ocfs2/dlm/dlmmaster.c:180:
+	printk(", ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#877: FILE: fs/ocfs2/dlm/dlmmaster.c:182:
+	printk(", ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#879: FILE: fs/ocfs2/dlm/dlmmaster.c:184:
+	printk(", ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#880: FILE: fs/ocfs2/dlm/dlmmaster.c:185:
+	printk("\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#883: FILE: fs/ocfs2/dlm/dlmmaster.c:188:
+#if 0

WARNING:LINE_SPACING: Missing a blank line after declarations
#903: FILE: fs/ocfs2/dlm/dlmmaster.c:343:
+	struct dlm_ctxt *dlm;
+	dlm = mle->dlm;

WARNING:LINE_SPACING: Missing a blank line after declarations
#914: FILE: fs/ocfs2/dlm/dlmmaster.c:354:
+	struct dlm_ctxt *dlm;
+	dlm = mle->dlm;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#923: FILE: fs/ocfs2/dlm/dlmmaster.c:363:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#935: FILE: fs/ocfs2/dlm/dlmmaster.c:373:
+	if (!atomic_read(&mle->mle_refs.refcount)) {
[...]
+	} else
[...]

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#937: FILE: fs/ocfs2/dlm/dlmmaster.c:375:
+		 * it's a BUG. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#940: FILE: fs/ocfs2/dlm/dlmmaster.c:378:
+		BUG();

CHECK:BRACES: Unbalanced braces around else statement
#941: FILE: fs/ocfs2/dlm/dlmmaster.c:379:
+	} else

WARNING:SPLIT_STRING: quoted string split across lines
#967: FILE: fs/ocfs2/dlm/dlmmaster.c:630:
+		     "Going to BUG for resource %.*s."
+		     "  We're on a list! [%c%c%c%c%c%c%c]\n",

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*res)...) over kmalloc(sizeof(struct dlm_lock_resource)...)
#1009: FILE: fs/ocfs2/dlm/dlmmaster.c:711:
+	res = kmalloc(sizeof(struct dlm_lock_resource), GFP_NOFS);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPLIT_STRING: quoted string split across lines
#1143: FILE: fs/ocfs2/dlm/dlmmaster.c:1046:
+			mlog(0, "map not changed and voting not done "
+			     "for %s:%.*s\n", dlm->name, res->lockname.len,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1185: FILE: fs/ocfs2/dlm/dlmmaster.c:1223:
+^I^I^I       ^Iif (node == lowest) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1185: FILE: fs/ocfs2/dlm/dlmmaster.c:1223:
+^I^I^I       ^Iif (node == lowest) {$

WARNING:SPLIT_STRING: quoted string split across lines
#1187: FILE: fs/ocfs2/dlm/dlmmaster.c:1225:
+					mlog(0, "expected master %u died"
+					    " while this node was blocked "

WARNING:SPLIT_STRING: quoted string split across lines
#1188: FILE: fs/ocfs2/dlm/dlmmaster.c:1226:
+					    " while this node was blocked "
+					    "waiting on it!\n", node);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1190: FILE: fs/ocfs2/dlm/dlmmaster.c:1228:
+^I^I^I^I^I^I       ^IO2NM_MAX_NODES,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1190: FILE: fs/ocfs2/dlm/dlmmaster.c:1228:
+^I^I^I^I^I^I       ^IO2NM_MAX_NODES,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1190: FILE: fs/ocfs2/dlm/dlmmaster.c:1228:
+					lowest = find_next_bit(mle->maybe_map,
+						       	O2NM_MAX_NODES,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1191: FILE: fs/ocfs2/dlm/dlmmaster.c:1229:
+^I^I^I^I^I^I       ^Ilowest+1);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1191: FILE: fs/ocfs2/dlm/dlmmaster.c:1229:
+^I^I^I^I^I^I       ^Ilowest+1);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1191: FILE: fs/ocfs2/dlm/dlmmaster.c:1229:
+						       	lowest+1);
 						       	      ^

WARNING:SPLIT_STRING: quoted string split across lines
#1194: FILE: fs/ocfs2/dlm/dlmmaster.c:1232:
+						mlog(0, "%s:%.*s:still "
+						     "blocked. waiting on %u "

WARNING:SPLIT_STRING: quoted string split across lines
#1195: FILE: fs/ocfs2/dlm/dlmmaster.c:1233:
+						     "blocked. waiting on %u "
+						     "now\n", dlm->name,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1207: FILE: fs/ocfs2/dlm/dlmmaster.c:1245:
+						 * refcount is ok */

WARNING:SPLIT_STRING: quoted string split across lines
#1209: FILE: fs/ocfs2/dlm/dlmmaster.c:1247:
+						mlog(0, "%s:%.*s: no "
+						     "longer blocking. try to "

WARNING:SPLIT_STRING: quoted string split across lines
#1210: FILE: fs/ocfs2/dlm/dlmmaster.c:1248:
+						     "longer blocking. try to "
+						     "master this here\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1250: FILE: fs/ocfs2/dlm/dlmmaster.c:1259:
+			 * contacted anyone */

WARNING:SPLIT_STRING: quoted string split across lines
#1398: FILE: fs/ocfs2/dlm/dlmmaster.c:1751:
+				mlog(0, "%s:%.*s: got cleanup assert"
+				     " from %u for migration\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1403: FILE: fs/ocfs2/dlm/dlmmaster.c:1756:
+				mlog(0, "%s:%.*s: got unrelated assert"
+				     " from %u for migration, ignoring\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1410: FILE: fs/ocfs2/dlm/dlmmaster.c:1763:
+^I^I^I}^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#1456: FILE: fs/ocfs2/dlm/dlmmaster.c:1857:
+^I^I^I     ^I^I"from %u to %u\n",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1456: FILE: fs/ocfs2/dlm/dlmmaster.c:1857:
+^I^I^I     ^I^I"from %u to %u\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#1456: FILE: fs/ocfs2/dlm/dlmmaster.c:1857:
+				mlog(0, "finishing off migration of lockres %.*s, "
+			     		"from %u to %u\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1457: FILE: fs/ocfs2/dlm/dlmmaster.c:1858:
+^I^I^I       ^I^Ires->lockname.len, res->lockname.name,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1457: FILE: fs/ocfs2/dlm/dlmmaster.c:1858:
+^I^I^I       ^I^Ires->lockname.len, res->lockname.name,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1458: FILE: fs/ocfs2/dlm/dlmmaster.c:1859:
+^I^I^I       ^I^Idlm->node_num, mle->new_master);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1458: FILE: fs/ocfs2/dlm/dlmmaster.c:1859:
+^I^I^I       ^I^Idlm->node_num, mle->new_master);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1461: FILE: fs/ocfs2/dlm/dlmmaster.c:1862:
+				BUG_ON(res->state & DLM_LOCK_RES_DIRTY);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1474: FILE: fs/ocfs2/dlm/dlmmaster.c:1871:
+		 * on this mle. */

WARNING:SPLIT_STRING: quoted string split across lines
#1492: FILE: fs/ocfs2/dlm/dlmmaster.c:1889:
+			mlog(ML_ERROR, "%s:%.*s: got assert master from %u "
+			     "that will mess up this node, refs=%d, extra=%d, "

WARNING:SPLIT_STRING: quoted string split across lines
#1493: FILE: fs/ocfs2/dlm/dlmmaster.c:1890:
+			     "that will mess up this node, refs=%d, extra=%d, "
+			     "inuse=%d\n", dlm->name, namelen, name,

WARNING:SPLIT_STRING: quoted string split across lines
#1513: FILE: fs/ocfs2/dlm/dlmmaster.c:1909:
+			mlog(0, "assert_master from %u, but current "
+			     "owner is %u (%.*s), no mle\n", assert->node_idx,

WARNING:SPLIT_STRING: quoted string split across lines
#1523: FILE: fs/ocfs2/dlm/dlmmaster.c:1928:
+	mlog(ML_ERROR, "Bad message received from another node.  Dumping state "
+	     "and killing the other node now!  This node is OK and can continue.\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#1563: FILE: fs/ocfs2/dlm/dlmmaster.c:2012:
+	if (res->state & DLM_LOCK_RES_MIGRATING) {
[...]
+	} else
[...]

WARNING:SPLIT_STRING: quoted string split across lines
#1565: FILE: fs/ocfs2/dlm/dlmmaster.c:2014:
+		mlog(0, "Someone asked us to assert mastery, but we're "
+		     "in the middle of migration.  Skipping assert, "

WARNING:SPLIT_STRING: quoted string split across lines
#1566: FILE: fs/ocfs2/dlm/dlmmaster.c:2015:
+		     "in the middle of migration.  Skipping assert, "
+		     "the new master will handle that.\n");

CHECK:BRACES: Unbalanced braces around else statement
#1569: FILE: fs/ocfs2/dlm/dlmmaster.c:2018:
+	} else

CHECK:SPACING: No space is necessary after a cast
#1605: FILE: fs/ocfs2/dlm/dlmmaster.c:2178:
+	mres = (struct dlm_migratable_lockres *) __get_free_page(GFP_NOFS);

WARNING:SPLIT_STRING: quoted string split across lines
#1645: FILE: fs/ocfs2/dlm/dlmmaster.c:2330:
+				mlog(0, "%s:%.*s: expected migration "
+				     "target %u is no longer up, restarting\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1740: FILE: fs/ocfs2/dlm/dlmmaster.c:2852:
+		mlog(0, "%s: node %u died during migration from "
+		     "%u to %u!\n", dlm->name, dead_node,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1800: FILE: fs/ocfs2/dlm/dlmrecovery.c:160:
+	int tot=0;
 	       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1834: FILE: fs/ocfs2/dlm/dlmrecovery.c:269:
+		char *st = "unknown";
+		switch (ndata->state) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1834: FILE: fs/ocfs2/dlm/dlmrecovery.c:269:
+		switch (ndata->state) {
+			case DLM_RECO_NODE_DATA_INIT:
[...]
+			case DLM_RECO_NODE_DATA_REQUESTING:
[...]
+			case DLM_RECO_NODE_DATA_DEAD:
[...]
+			case DLM_RECO_NODE_DATA_RECEIVING:
[...]
+			case DLM_RECO_NODE_DATA_REQUESTED:
[...]
+			case DLM_RECO_NODE_DATA_DONE:
[...]
+			case DLM_RECO_NODE_DATA_FINALIZE_SENT:
[...]
+			default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1882: FILE: fs/ocfs2/dlm/dlmrecovery.c:356:
+ * could be dead or just not joined */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1886: FILE: fs/ocfs2/dlm/dlmrecovery.c:360:
+	int recovered;
+	spin_lock(&dlm->spinlock);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1892: FILE: fs/ocfs2/dlm/dlmrecovery.c:366:
+
+

WARNING:SPLIT_STRING: quoted string split across lines
#1904: FILE: fs/ocfs2/dlm/dlmrecovery.c:389:
+		mlog(0, "%s: waiting %dms for notification of "
+		     "recovery of node %u\n", dlm->name, timeout, node);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1906: FILE: fs/ocfs2/dlm/dlmrecovery.c:391:
+		wait_event_timeout(dlm->dlm_reco_thread_wq,
+			   dlm_is_node_recovered(dlm, node),

WARNING:SPLIT_STRING: quoted string split across lines
#1910: FILE: fs/ocfs2/dlm/dlmrecovery.c:395:
+		mlog(0, "%s: waiting indefinitely for notification "
+		     "of recovery of node %u\n", dlm->name, node);

WARNING:SPLIT_STRING: quoted string split across lines
#1927: FILE: fs/ocfs2/dlm/dlmrecovery.c:423:
+		mlog(0, "%s: reco thread %d in recovery: "
+		     "state=%d, master=%u, dead=%u\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2007: FILE: fs/ocfs2/dlm/dlmrecovery.c:558:
+		 * this, so just keep trying until we get it. */

WARNING:SPLIT_STRING: quoted string split across lines
#2011: FILE: fs/ocfs2/dlm/dlmrecovery.c:562:
+			mlog(ML_ERROR, "%s: failed to alloc recovery area, "
+			     "retrying\n", dlm->name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2040: FILE: fs/ocfs2/dlm/dlmrecovery.c:592:
+					 * with the network state. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2043: FILE: fs/ocfs2/dlm/dlmrecovery.c:595:
+							   dlm_is_node_dead(dlm,
+								ndata->node_num),

WARNING:SPLIT_STRING: quoted string split across lines
#2046: FILE: fs/ocfs2/dlm/dlmrecovery.c:598:
+					mlog(0, "waited 1 sec for %u, "
+					     "dead? %s\n", ndata->node_num,

WARNING:SPLIT_STRING: quoted string split across lines
#2052: FILE: fs/ocfs2/dlm/dlmrecovery.c:604:
+					mlog(0, "%s: node %u returned "
+					     "%d during recovery, retrying "

WARNING:SPLIT_STRING: quoted string split across lines
#2053: FILE: fs/ocfs2/dlm/dlmrecovery.c:605:
+					     "%d during recovery, retrying "
+					     "after a short wait\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2073: FILE: fs/ocfs2/dlm/dlmrecovery.c:624:
+				 * continue without it. */

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#2110: FILE: fs/ocfs2/dlm/dlmrecovery.c:678:
+					     ndata->state==DLM_RECO_NODE_DATA_RECEIVING ?
 					                 ^

WARNING:SPLIT_STRING: quoted string split across lines
#2156: FILE: fs/ocfs2/dlm/dlmrecovery.c:832:
+		mlog(ML_ERROR, "%s: node %u sent dead_node=%u, but local "
+		     "dead_node is %u\n", dlm->name, lr->node_idx,

CHECK:SPACING: No space is necessary after a cast
#2174: FILE: fs/ocfs2/dlm/dlmrecovery.c:848:
+	buf = (char *) __get_free_page(GFP_NOFS);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2219: FILE: fs/ocfs2/dlm/dlmrecovery.c:891:
+		 * died.  if so, do not continue, but do not error. */

WARNING:SPLIT_STRING: quoted string split across lines
#2222: FILE: fs/ocfs2/dlm/dlmrecovery.c:894:
+			mlog(ML_NOTICE, "%s: will not send recovery state, "
+			     "recovery master %u died, thread=(dead=%u,mas=%u)"

WARNING:SPLIT_STRING: quoted string split across lines
#2223: FILE: fs/ocfs2/dlm/dlmrecovery.c:895:
+			     "recovery master %u died, thread=(dead=%u,mas=%u)"
+			     " current=(dead=%u,mas=%u)\n", dlm->name,

WARNING:SPLIT_STRING: quoted string split across lines
#2228: FILE: fs/ocfs2/dlm/dlmrecovery.c:900:
+			mlog(ML_NOTICE, "%s: reco state invalid: reco(dead=%u, "
+			     "master=%u), request(dead=%u, master=%u)\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2245: FILE: fs/ocfs2/dlm/dlmrecovery.c:918:
+	 * the dlm_reco_thread should detect this */

WARNING:SPLIT_STRING: quoted string split across lines
#2254: FILE: fs/ocfs2/dlm/dlmrecovery.c:925:
+			mlog(ML_ERROR, "%s: node %u went down while sending "
+			     "recovery state for dead node %u, ret=%d\n", dlm->name,

WARNING:SPLIT_STRING: quoted string split across lines
#2274: FILE: fs/ocfs2/dlm/dlmrecovery.c:941:
+			mlog(ML_ERROR, "%s: node %u went down while sending "
+			     "recovery all-done for dead node %u, ret=%d\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#2288: FILE: fs/ocfs2/dlm/dlmrecovery.c:964:
+	if (ret < 0) {
[...]
+	} else
[...]

WARNING:SPLIT_STRING: quoted string split across lines
#2292: FILE: fs/ocfs2/dlm/dlmrecovery.c:968:
+			mlog(ML_ERROR, "%s: unknown error sending data-done "
+			     "to %u\n", dlm->name, send_to);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2293: FILE: fs/ocfs2/dlm/dlmrecovery.c:969:
+			BUG();

CHECK:BRACES: Unbalanced braces around else statement
#2295: FILE: fs/ocfs2/dlm/dlmrecovery.c:971:
+	} else

WARNING:SPLIT_STRING: quoted string split across lines
#2307: FILE: fs/ocfs2/dlm/dlmrecovery.c:994:
+			"Got DATA DONE: dead_node=%u, reco.dead_node=%u, "
+			"node_idx=%u, this node=%u\n", done->dead_node,

WARNING:SPLIT_STRING: quoted string split across lines
#2355: FILE: fs/ocfs2/dlm/dlmrecovery.c:1273:
+	mlog(0, "%s: node %u went down while sending %s "
+	     "lockres %.*s\n", dlm->name, send_to,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2429: FILE: fs/ocfs2/dlm/dlmrecovery.c:1746:
+				 * the lvb. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#2442: FILE: fs/ocfs2/dlm/dlmrecovery.c:1754:
+ ^I^I^I^I    (ml->type == LKM_EXMODE ||$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2442: FILE: fs/ocfs2/dlm/dlmrecovery.c:1754:
+ ^I^I^I^I    (ml->type == LKM_EXMODE ||$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2442: FILE: fs/ocfs2/dlm/dlmrecovery.c:1754:
+				if (!dlm_lvb_is_empty(res->lvb) &&
+ 				    (ml->type == LKM_EXMODE ||

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2442: FILE: fs/ocfs2/dlm/dlmrecovery.c:1754:
+ ^I^I^I^I    (ml->type == LKM_EXMODE ||$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2443: FILE: fs/ocfs2/dlm/dlmrecovery.c:1755:
+ ^I^I^I^I     memcmp(res->lvb, mres->lvb, DLM_LVB_LEN))) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2443: FILE: fs/ocfs2/dlm/dlmrecovery.c:1755:
+ ^I^I^I^I     memcmp(res->lvb, mres->lvb, DLM_LVB_LEN))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2443: FILE: fs/ocfs2/dlm/dlmrecovery.c:1755:
+ ^I^I^I^I     memcmp(res->lvb, mres->lvb, DLM_LVB_LEN))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2444: FILE: fs/ocfs2/dlm/dlmrecovery.c:1756:
+ ^I^I^I^I^Iint i;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2444: FILE: fs/ocfs2/dlm/dlmrecovery.c:1756:
+ ^I^I^I^I^Iint i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2444: FILE: fs/ocfs2/dlm/dlmrecovery.c:1756:
+ ^I^I^I^I^Iint i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2445: FILE: fs/ocfs2/dlm/dlmrecovery.c:1757:
+ ^I^I^I^I^Imlog(ML_ERROR, "%s:%.*s: received bad "$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2445: FILE: fs/ocfs2/dlm/dlmrecovery.c:1757:
+ ^I^I^I^I^Imlog(ML_ERROR, "%s:%.*s: received bad "$

WARNING:LINE_SPACING: Missing a blank line after declarations
#2445: FILE: fs/ocfs2/dlm/dlmrecovery.c:1757:
+ 					int i;
+ 					mlog(ML_ERROR, "%s:%.*s: received bad "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2445: FILE: fs/ocfs2/dlm/dlmrecovery.c:1757:
+ ^I^I^I^I^Imlog(ML_ERROR, "%s:%.*s: received bad "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2446: FILE: fs/ocfs2/dlm/dlmrecovery.c:1758:
+ ^I^I^I^I^I     "lvb! type=%d\n", dlm->name,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2446: FILE: fs/ocfs2/dlm/dlmrecovery.c:1758:
+ ^I^I^I^I^I     "lvb! type=%d\n", dlm->name,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2446: FILE: fs/ocfs2/dlm/dlmrecovery.c:1758:
+ ^I^I^I^I^I     "lvb! type=%d\n", dlm->name,$

WARNING:SPLIT_STRING: quoted string split across lines
#2446: FILE: fs/ocfs2/dlm/dlmrecovery.c:1758:
+ 					mlog(ML_ERROR, "%s:%.*s: received bad "
+ 					     "lvb! type=%d\n", dlm->name,

ERROR:CODE_INDENT: code indent should use tabs where possible
#2447: FILE: fs/ocfs2/dlm/dlmrecovery.c:1759:
+ ^I^I^I^I^I     res->lockname.len,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2447: FILE: fs/ocfs2/dlm/dlmrecovery.c:1759:
+ ^I^I^I^I^I     res->lockname.len,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2447: FILE: fs/ocfs2/dlm/dlmrecovery.c:1759:
+ ^I^I^I^I^I     res->lockname.len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2448: FILE: fs/ocfs2/dlm/dlmrecovery.c:1760:
+ ^I^I^I^I^I     res->lockname.name, ml->type);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2448: FILE: fs/ocfs2/dlm/dlmrecovery.c:1760:
+ ^I^I^I^I^I     res->lockname.name, ml->type);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2448: FILE: fs/ocfs2/dlm/dlmrecovery.c:1760:
+ ^I^I^I^I^I     res->lockname.name, ml->type);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2449: FILE: fs/ocfs2/dlm/dlmrecovery.c:1761:
+ ^I^I^I^I^Iprintk("lockres lvb=[");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2449: FILE: fs/ocfs2/dlm/dlmrecovery.c:1761:
+ ^I^I^I^I^Iprintk("lockres lvb=[");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2449: FILE: fs/ocfs2/dlm/dlmrecovery.c:1761:
+ ^I^I^I^I^Iprintk("lockres lvb=[");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2449: FILE: fs/ocfs2/dlm/dlmrecovery.c:1761:
+ 					printk("lockres lvb=[");

ERROR:CODE_INDENT: code indent should use tabs where possible
#2450: FILE: fs/ocfs2/dlm/dlmrecovery.c:1762:
+ ^I^I^I^I^Ifor (i=0; i<DLM_LVB_LEN; i++)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2450: FILE: fs/ocfs2/dlm/dlmrecovery.c:1762:
+ ^I^I^I^I^Ifor (i=0; i<DLM_LVB_LEN; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2450: FILE: fs/ocfs2/dlm/dlmrecovery.c:1762:
+ ^I^I^I^I^Ifor (i=0; i<DLM_LVB_LEN; i++)$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2450: FILE: fs/ocfs2/dlm/dlmrecovery.c:1762:
+ 					for (i=0; i<DLM_LVB_LEN; i++)
  					      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2450: FILE: fs/ocfs2/dlm/dlmrecovery.c:1762:
+ 					for (i=0; i<DLM_LVB_LEN; i++)
  					           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2451: FILE: fs/ocfs2/dlm/dlmrecovery.c:1763:
+ ^I^I^I^I^I^Iprintk("%02x", res->lvb[i]);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2451: FILE: fs/ocfs2/dlm/dlmrecovery.c:1763:
+ ^I^I^I^I^I^Iprintk("%02x", res->lvb[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2451: FILE: fs/ocfs2/dlm/dlmrecovery.c:1763:
+ ^I^I^I^I^I^Iprintk("%02x", res->lvb[i]);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2451: FILE: fs/ocfs2/dlm/dlmrecovery.c:1763:
+ 						printk("%02x", res->lvb[i]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2452: FILE: fs/ocfs2/dlm/dlmrecovery.c:1764:
+ ^I^I^I^I^Iprintk("]\nmigrated lvb=[");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2452: FILE: fs/ocfs2/dlm/dlmrecovery.c:1764:
+ ^I^I^I^I^Iprintk("]\nmigrated lvb=[");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2452: FILE: fs/ocfs2/dlm/dlmrecovery.c:1764:
+ ^I^I^I^I^Iprintk("]\nmigrated lvb=[");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2452: FILE: fs/ocfs2/dlm/dlmrecovery.c:1764:
+ 					printk("]\nmigrated lvb=[");

ERROR:CODE_INDENT: code indent should use tabs where possible
#2453: FILE: fs/ocfs2/dlm/dlmrecovery.c:1765:
+ ^I^I^I^I^Ifor (i=0; i<DLM_LVB_LEN; i++)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2453: FILE: fs/ocfs2/dlm/dlmrecovery.c:1765:
+ ^I^I^I^I^Ifor (i=0; i<DLM_LVB_LEN; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2453: FILE: fs/ocfs2/dlm/dlmrecovery.c:1765:
+ ^I^I^I^I^Ifor (i=0; i<DLM_LVB_LEN; i++)$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2453: FILE: fs/ocfs2/dlm/dlmrecovery.c:1765:
+ 					for (i=0; i<DLM_LVB_LEN; i++)
  					      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2453: FILE: fs/ocfs2/dlm/dlmrecovery.c:1765:
+ 					for (i=0; i<DLM_LVB_LEN; i++)
  					           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2454: FILE: fs/ocfs2/dlm/dlmrecovery.c:1766:
+ ^I^I^I^I^I^Iprintk("%02x", mres->lvb[i]);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2454: FILE: fs/ocfs2/dlm/dlmrecovery.c:1766:
+ ^I^I^I^I^I^Iprintk("%02x", mres->lvb[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2454: FILE: fs/ocfs2/dlm/dlmrecovery.c:1766:
+ ^I^I^I^I^I^Iprintk("%02x", mres->lvb[i]);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2454: FILE: fs/ocfs2/dlm/dlmrecovery.c:1766:
+ 						printk("%02x", mres->lvb[i]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2455: FILE: fs/ocfs2/dlm/dlmrecovery.c:1767:
+ ^I^I^I^I^Iprintk("]\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2455: FILE: fs/ocfs2/dlm/dlmrecovery.c:1767:
+ ^I^I^I^I^Iprintk("]\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2455: FILE: fs/ocfs2/dlm/dlmrecovery.c:1767:
+ ^I^I^I^I^Iprintk("]\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2455: FILE: fs/ocfs2/dlm/dlmrecovery.c:1767:
+ 					printk("]\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#2456: FILE: fs/ocfs2/dlm/dlmrecovery.c:1768:
+ ^I^I^I^I^Idlm_print_one_lock_resource(res);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2456: FILE: fs/ocfs2/dlm/dlmrecovery.c:1768:
+ ^I^I^I^I^Idlm_print_one_lock_resource(res);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2456: FILE: fs/ocfs2/dlm/dlmrecovery.c:1768:
+ ^I^I^I^I^Idlm_print_one_lock_resource(res);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2457: FILE: fs/ocfs2/dlm/dlmrecovery.c:1769:
+ ^I^I^I^I^IBUG();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2457: FILE: fs/ocfs2/dlm/dlmrecovery.c:1769:
+ ^I^I^I^I^IBUG();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2457: FILE: fs/ocfs2/dlm/dlmrecovery.c:1769:
+ ^I^I^I^I^IBUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2457: FILE: fs/ocfs2/dlm/dlmrecovery.c:1769:
+ 					BUG();

WARNING:LINE_SPACING: Missing a blank line after declarations
#2478: FILE: fs/ocfs2/dlm/dlmrecovery.c:1797:
+				u64 c = lock->ml.cookie;
+				mlog(ML_ERROR, "%s:%.*s: %u:%llu: lock already "

WARNING:SPLIT_STRING: quoted string split across lines
#2479: FILE: fs/ocfs2/dlm/dlmrecovery.c:1798:
+				mlog(ML_ERROR, "%s:%.*s: %u:%llu: lock already "
+				     "exists on this lockres!\n", dlm->name,

WARNING:SPLIT_STRING: quoted string split across lines
#2485: FILE: fs/ocfs2/dlm/dlmrecovery.c:1804:
+				mlog(ML_NOTICE, "sent lock: type=%d, conv=%d, "
+				     "node=%u, cookie=%u:%llu, queue=%d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#2486: FILE: fs/ocfs2/dlm/dlmrecovery.c:1805:
+^I      ^I^I^I     ml->type, ml->convert_type, ml->node,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2486: FILE: fs/ocfs2/dlm/dlmrecovery.c:1805:
+^I      ^I^I^I     ml->type, ml->convert_type, ml->node,$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2575: FILE: fs/ocfs2/dlm/dlmrecovery.c:2164:
+			 * is complete. */

WARNING:SPLIT_STRING: quoted string split across lines
#2577: FILE: fs/ocfs2/dlm/dlmrecovery.c:2166:
+			mlog(0, "%s: dead master %d had reached "
+			     "finalize1 state, clearing\n", dlm->name, idx);

WARNING:SPLIT_STRING: quoted string split across lines
#2621: FILE: fs/ocfs2/dlm/dlmrecovery.c:2468:
+			mlog(0, "%s: trying to start recovery of node "
+			     "%u, but node %u is waiting for last recovery "

WARNING:SPLIT_STRING: quoted string split across lines
#2622: FILE: fs/ocfs2/dlm/dlmrecovery.c:2469:
+			     "%u, but node %u is waiting for last recovery "
+			     "to complete, backoff for a bit\n", dlm->name,

WARNING:SPLIT_STRING: quoted string split across lines
#2639: FILE: fs/ocfs2/dlm/dlmrecovery.c:2492:
+		mlog(0, "%s: node %u wants to recover node %u (%u:%u) "
+		     "but this node is in finalize state, waiting on finalize2\n",

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -EAGAIN)
#2643: FILE: fs/ocfs2/dlm/dlmrecovery.c:2496:
+		return EAGAIN;

WARNING:SPLIT_STRING: quoted string split across lines
#2690: FILE: fs/ocfs2/dlm/dlmrecovery.c:2564:
+	mlog(0, "finishing recovery for node %s:%u, "
+	     "stage %d\n", dlm->name, dlm->reco.dead_node, stage);

WARNING:SPLIT_STRING: quoted string split across lines
#2753: FILE: fs/ocfs2/dlm/dlmrecovery.c:2622:
+	mlog(0, "%s: node %u finalizing recovery stage%d of "
+	     "node %u (%u:%u)\n", dlm->name, fr->node_idx, stage,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2755: FILE: fs/ocfs2/dlm/dlmrecovery.c:2624:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2755: FILE: fs/ocfs2/dlm/dlmrecovery.c:2624:
+ $

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#2766: FILE: fs/ocfs2/dlm/dlmrecovery.c:2640:
+	switch (stage) {
+		case 1:
[...]
+		case 2:
[...]
+		default:

WARNING:SPLIT_STRING: quoted string split across lines
#2771: FILE: fs/ocfs2/dlm/dlmrecovery.c:2645:
+				mlog(ML_ERROR, "%s: received finalize1 from "
+				     "new master %u for dead node %u, but "

WARNING:SPLIT_STRING: quoted string split across lines
#2772: FILE: fs/ocfs2/dlm/dlmrecovery.c:2646:
+				     "new master %u for dead node %u, but "
+				     "this node has already received it!\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2775: FILE: fs/ocfs2/dlm/dlmrecovery.c:2649:
+				BUG();

WARNING:SPLIT_STRING: quoted string split across lines
#2783: FILE: fs/ocfs2/dlm/dlmrecovery.c:2657:
+				mlog(ML_ERROR, "%s: received finalize2 from "
+				     "new master %u for dead node %u, but "

WARNING:SPLIT_STRING: quoted string split across lines
#2784: FILE: fs/ocfs2/dlm/dlmrecovery.c:2658:
+				     "new master %u for dead node %u, but "
+				     "this node did not have finalize1!\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2787: FILE: fs/ocfs2/dlm/dlmrecovery.c:2661:
+				BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2795: FILE: fs/ocfs2/dlm/dlmrecovery.c:2669:
+			BUG();

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2841: FILE: fs/ocfs2/dlm/dlmthread.c:110:
+		if (res->owner == dlm->node_num)
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#2845: FILE: fs/ocfs2/dlm/dlmthread.c:114:
+				mlog(0, "we master %s:%.*s, but it is on "
+				     "the purge list.  Removing\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2864: FILE: fs/ocfs2/dlm/dlmthread.c:133:
+			 * unhash it to avoid serious problems. */

WARNING:SPLIT_STRING: quoted string split across lines
#2867: FILE: fs/ocfs2/dlm/dlmthread.c:136:
+				mlog(0, "%s:%.*s: doing immediate "
+				     "purge of lockres owned by %u\n",

WARNING:SPLIT_STRING: quoted string split across lines
#2878: FILE: fs/ocfs2/dlm/dlmthread.c:145:
+		mlog(0, "removing lockres %.*s from purge list, "
+		     "owner=%u\n", res->lockname.len, res->lockname.name,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2897: FILE: fs/ocfs2/dlm/dlmthread.c:214:
+ * will not be found. kfree still happens on last put. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2904: FILE: fs/ocfs2/dlm/dlmthread.c:221:
+	BUG_ON(!__dlm_lockres_unused(lockres));

WARNING:SPLIT_STRING: quoted string split across lines
#2941: FILE: fs/ocfs2/dlm/dlmthread.c:699:
+			mlog(0, "calling dlm_shuffle_lists with dlm=%s, "
+			     "res=%.*s\n", dlm->name,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2975: FILE: fs/ocfs2/dlm/dlmunlock.c:325:
+		 * via a migration.  just retry it, now as local */

WARNING:SPLIT_STRING: quoted string split across lines
#2977: FILE: fs/ocfs2/dlm/dlmunlock.c:327:
+		mlog(0, "%s:%.*s: this node became the master due to a "
+		     "migration, re-evaluate now\n", dlm->name,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000067760.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 45 errors, 161 warnings, 19 checks, 2635 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000067760.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
