WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#39: FILE: include/linux/rio.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#72: FILE: include/linux/rio.h:34:
+#define RIO_GLOBAL_TABLE	0xff	/* Indicates access of a switch's
+					   global routing table if it

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#74: FILE: include/linux/rio.h:36:
+					   tables */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#77: FILE: include/linux/rio.h:39:
+#define RIO_INVALID_ROUTE	0xff	/* Indicates that a route table
+					   entry is invalid (no route

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#78: FILE: include/linux/rio.h:40:
+					   exists for the device ID) */

CHECK:BIT_MACRO: Prefer using the BIT macro
#81: FILE: include/linux/rio.h:43:
+#define RIO_MAX_ROUTE_ENTRIES	(1 << 8)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#83: FILE: include/linux/rio.h:45:
+#define RIO_MAX_ROUTE_ENTRIES	(1 << 16)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#171: FILE: include/linux/rio.h:133:
+	void (*mcback) (struct rio_mport * mport, int mbox, int slot);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#171: FILE: include/linux/rio.h:133:
+	void (*mcback) (struct rio_mport * mport, int mbox, int slot);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#183: FILE: include/linux/rio.h:145:
+	void (*dinb) (struct rio_mport * mport, u16 src, u16 dst, u16 info);

WARNING:SPACING: Unnecessary space before function pointer arguments
#183: FILE: include/linux/rio.h:145:
+	void (*dinb) (struct rio_mport * mport, u16 src, u16 dst, u16 info);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: include/linux/rio.h:150:
+ * @dbells: List of doorbell events $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#213: FILE: include/linux/rio.h:175:
+	unsigned char index;	/* port index, unique among all port
+				   interfaces of the same type */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#213: FILE: include/linux/rio.h:175:
+				   interfaces of the same type */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#249: FILE: include/linux/rio.h:211:
+	int (*add_entry) (struct rio_mport * mport, u16 destid, u8 hopcount,

WARNING:SPACING: Unnecessary space before function pointer arguments
#249: FILE: include/linux/rio.h:211:
+	int (*add_entry) (struct rio_mport * mport, u16 destid, u8 hopcount,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#251: FILE: include/linux/rio.h:213:
+	int (*get_entry) (struct rio_mport * mport, u16 destid, u8 hopcount,

WARNING:SPACING: Unnecessary space before function pointer arguments
#251: FILE: include/linux/rio.h:213:
+	int (*get_entry) (struct rio_mport * mport, u16 destid, u8 hopcount,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#252: FILE: include/linux/rio.h:214:
+			  u16 table, u16 route_destid, u8 * route_port);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#266: FILE: include/linux/rio.h:228:
+	int (*lcread) (int index, u32 offset, int len, u32 * data);

WARNING:SPACING: Unnecessary space before function pointer arguments
#266: FILE: include/linux/rio.h:228:
+	int (*lcread) (int index, u32 offset, int len, u32 * data);

WARNING:SPACING: Unnecessary space before function pointer arguments
#267: FILE: include/linux/rio.h:229:
+	int (*lcwrite) (int index, u32 offset, int len, u32 data);

WARNING:SPACING: Unnecessary space before function pointer arguments
#268: FILE: include/linux/rio.h:230:
+	int (*cread) (int index, u16 destid, u8 hopcount, u32 offset, int len,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#269: FILE: include/linux/rio.h:231:
+		      u32 * data);

WARNING:SPACING: Unnecessary space before function pointer arguments
#270: FILE: include/linux/rio.h:232:
+	int (*cwrite) (int index, u16 destid, u8 hopcount, u32 offset, int len,

WARNING:SPACING: Unnecessary space before function pointer arguments
#272: FILE: include/linux/rio.h:234:
+	int (*dsend) (int index, u16 destid, u16 data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#303: FILE: include/linux/rio.h:265:
+	int (*probe) (struct rio_dev * dev, const struct rio_device_id * id);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#303: FILE: include/linux/rio.h:265:
+	int (*probe) (struct rio_dev * dev, const struct rio_device_id * id);

WARNING:SPACING: Unnecessary space before function pointer arguments
#303: FILE: include/linux/rio.h:265:
+	int (*probe) (struct rio_dev * dev, const struct rio_device_id * id);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#304: FILE: include/linux/rio.h:266:
+	void (*remove) (struct rio_dev * dev);

WARNING:SPACING: Unnecessary space before function pointer arguments
#304: FILE: include/linux/rio.h:266:
+	void (*remove) (struct rio_dev * dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#305: FILE: include/linux/rio.h:267:
+	int (*suspend) (struct rio_dev * dev, u32 state);

WARNING:SPACING: Unnecessary space before function pointer arguments
#305: FILE: include/linux/rio.h:267:
+	int (*suspend) (struct rio_dev * dev, u32 state);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#306: FILE: include/linux/rio.h:268:
+	int (*resume) (struct rio_dev * dev);

WARNING:SPACING: Unnecessary space before function pointer arguments
#306: FILE: include/linux/rio.h:268:
+	int (*resume) (struct rio_dev * dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#307: FILE: include/linux/rio.h:269:
+	int (*enable_wake) (struct rio_dev * dev, u32 state, int enable);

WARNING:SPACING: Unnecessary space before function pointer arguments
#307: FILE: include/linux/rio.h:269:
+	int (*enable_wake) (struct rio_dev * dev, u32 state, int enable);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#311: FILE: include/linux/rio.h:273:
+#define	to_rio_driver(drv) container_of(drv,struct rio_driver, driver)
        	                                   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#340: FILE: include/linux/rio.h:302:
+	int (*add_hook) (struct rio_mport * mport, u16 destid, u8 hopcount,

WARNING:SPACING: Unnecessary space before function pointer arguments
#340: FILE: include/linux/rio.h:302:
+	int (*add_hook) (struct rio_mport * mport, u16 destid, u8 hopcount,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#342: FILE: include/linux/rio.h:304:
+	int (*get_hook) (struct rio_mport * mport, u16 destid, u8 hopcount,

WARNING:SPACING: Unnecessary space before function pointer arguments
#342: FILE: include/linux/rio.h:304:
+	int (*get_hook) (struct rio_mport * mport, u16 destid, u8 hopcount,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#343: FILE: include/linux/rio.h:305:
+			 u16 table, u16 route_destid, u8 * route_port);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#347: FILE: include/linux/rio.h:309:
+extern int rio_init_mports(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#348: FILE: include/linux/rio.h:310:
+extern void rio_register_mport(struct rio_mport *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#348: FILE: include/linux/rio.h:310:
+extern void rio_register_mport(struct rio_mport *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#349: FILE: include/linux/rio.h:311:
+extern int rio_hw_add_outb_message(struct rio_mport *, struct rio_dev *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#349: FILE: include/linux/rio.h:311:
+extern int rio_hw_add_outb_message(struct rio_mport *, struct rio_dev *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_dev *' should also have an identifier name
#349: FILE: include/linux/rio.h:311:
+extern int rio_hw_add_outb_message(struct rio_mport *, struct rio_dev *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#349: FILE: include/linux/rio.h:311:
+extern int rio_hw_add_outb_message(struct rio_mport *, struct rio_dev *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#349: FILE: include/linux/rio.h:311:
+extern int rio_hw_add_outb_message(struct rio_mport *, struct rio_dev *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#349: FILE: include/linux/rio.h:311:
+extern int rio_hw_add_outb_message(struct rio_mport *, struct rio_dev *, int,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#351: FILE: include/linux/rio.h:313:
+extern int rio_hw_add_inb_buffer(struct rio_mport *, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#351: FILE: include/linux/rio.h:313:
+extern int rio_hw_add_inb_buffer(struct rio_mport *, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#351: FILE: include/linux/rio.h:313:
+extern int rio_hw_add_inb_buffer(struct rio_mport *, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#351: FILE: include/linux/rio.h:313:
+extern int rio_hw_add_inb_buffer(struct rio_mport *, int, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#352: FILE: include/linux/rio.h:314:
+extern void *rio_hw_get_inb_message(struct rio_mport *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#352: FILE: include/linux/rio.h:314:
+extern void *rio_hw_get_inb_message(struct rio_mport *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#352: FILE: include/linux/rio.h:314:
+extern void *rio_hw_get_inb_message(struct rio_mport *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#353: FILE: include/linux/rio.h:315:
+extern int rio_open_inb_mbox(struct rio_mport *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#353: FILE: include/linux/rio.h:315:
+extern int rio_open_inb_mbox(struct rio_mport *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#353: FILE: include/linux/rio.h:315:
+extern int rio_open_inb_mbox(struct rio_mport *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#353: FILE: include/linux/rio.h:315:
+extern int rio_open_inb_mbox(struct rio_mport *, int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#354: FILE: include/linux/rio.h:316:
+extern void rio_close_inb_mbox(struct rio_mport *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#354: FILE: include/linux/rio.h:316:
+extern void rio_close_inb_mbox(struct rio_mport *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#354: FILE: include/linux/rio.h:316:
+extern void rio_close_inb_mbox(struct rio_mport *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#355: FILE: include/linux/rio.h:317:
+extern int rio_open_outb_mbox(struct rio_mport *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#355: FILE: include/linux/rio.h:317:
+extern int rio_open_outb_mbox(struct rio_mport *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#355: FILE: include/linux/rio.h:317:
+extern int rio_open_outb_mbox(struct rio_mport *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#355: FILE: include/linux/rio.h:317:
+extern int rio_open_outb_mbox(struct rio_mport *, int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#356: FILE: include/linux/rio.h:318:
+extern void rio_close_outb_mbox(struct rio_mport *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#356: FILE: include/linux/rio.h:318:
+extern void rio_close_outb_mbox(struct rio_mport *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#356: FILE: include/linux/rio.h:318:
+extern void rio_close_outb_mbox(struct rio_mport *, int);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#365: FILE: include/linux/rio_drv.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#390: FILE: include/linux/rio_drv.h:26:
+extern int __rio_local_read_config_32(struct rio_mport *port, u32 offset,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#391: FILE: include/linux/rio_drv.h:27:
+				      u32 * data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#392: FILE: include/linux/rio_drv.h:28:
+extern int __rio_local_write_config_32(struct rio_mport *port, u32 offset,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#394: FILE: include/linux/rio_drv.h:30:
+extern int __rio_local_read_config_16(struct rio_mport *port, u32 offset,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#395: FILE: include/linux/rio_drv.h:31:
+				      u16 * data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#396: FILE: include/linux/rio_drv.h:32:
+extern int __rio_local_write_config_16(struct rio_mport *port, u32 offset,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#398: FILE: include/linux/rio_drv.h:34:
+extern int __rio_local_read_config_8(struct rio_mport *port, u32 offset,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#399: FILE: include/linux/rio_drv.h:35:
+				     u8 * data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#400: FILE: include/linux/rio_drv.h:36:
+extern int __rio_local_write_config_8(struct rio_mport *port, u32 offset,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#403: FILE: include/linux/rio_drv.h:39:
+extern int rio_mport_read_config_32(struct rio_mport *port, u16 destid,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#404: FILE: include/linux/rio_drv.h:40:
+				    u8 hopcount, u32 offset, u32 * data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#405: FILE: include/linux/rio_drv.h:41:
+extern int rio_mport_write_config_32(struct rio_mport *port, u16 destid,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#407: FILE: include/linux/rio_drv.h:43:
+extern int rio_mport_read_config_16(struct rio_mport *port, u16 destid,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#408: FILE: include/linux/rio_drv.h:44:
+				    u8 hopcount, u32 offset, u16 * data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#409: FILE: include/linux/rio_drv.h:45:
+extern int rio_mport_write_config_16(struct rio_mport *port, u16 destid,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#411: FILE: include/linux/rio_drv.h:47:
+extern int rio_mport_read_config_8(struct rio_mport *port, u16 destid,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#412: FILE: include/linux/rio_drv.h:48:
+				   u8 hopcount, u32 offset, u8 * data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#413: FILE: include/linux/rio_drv.h:49:
+extern int rio_mport_write_config_8(struct rio_mport *port, u16 destid,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#421: FILE: include/linux/rio_drv.h:57:
+ * $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#426: FILE: include/linux/rio_drv.h:62:
+					   u32 * data)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#435: FILE: include/linux/rio_drv.h:71:
+ * @data: Data to be written $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#436: FILE: include/linux/rio_drv.h:72:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#451: FILE: include/linux/rio_drv.h:87:
+ * $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#456: FILE: include/linux/rio_drv.h:92:
+					   u16 * data)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#465: FILE: include/linux/rio_drv.h:101:
+ * @data: Data to be written $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#466: FILE: include/linux/rio_drv.h:102:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#482: FILE: include/linux/rio_drv.h:118:
+ * $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#487: FILE: include/linux/rio_drv.h:123:
+					  u8 * data)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#496: FILE: include/linux/rio_drv.h:132:
+ * @data: Data to be written $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#497: FILE: include/linux/rio_drv.h:133:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#512: FILE: include/linux/rio_drv.h:148:
+ * $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#517: FILE: include/linux/rio_drv.h:153:
+				     u32 * data)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#536: FILE: include/linux/rio_drv.h:172:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#560: FILE: include/linux/rio_drv.h:196:
+ * $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#565: FILE: include/linux/rio_drv.h:201:
+				     u16 * data)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: include/linux/rio_drv.h:220:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#608: FILE: include/linux/rio_drv.h:244:
+ * $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#612: FILE: include/linux/rio_drv.h:248:
+static inline int rio_read_config_8(struct rio_dev *rdev, u32 offset, u8 * data)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#631: FILE: include/linux/rio_drv.h:267:
+ * $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#649: FILE: include/linux/rio_drv.h:285:
+extern int rio_mport_send_doorbell(struct rio_mport *mport, u16 destid,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#656: FILE: include/linux/rio_drv.h:292:
+ * $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#710: FILE: include/linux/rio_drv.h:346:
+#define RIO_DEVICE(dev,ven) \
                       ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#715: FILE: include/linux/rio_drv.h:351:
+extern int rio_request_outb_mbox(struct rio_mport *, int, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#715: FILE: include/linux/rio_drv.h:351:
+extern int rio_request_outb_mbox(struct rio_mport *, int, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#715: FILE: include/linux/rio_drv.h:351:
+extern int rio_request_outb_mbox(struct rio_mport *, int, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#715: FILE: include/linux/rio_drv.h:351:
+extern int rio_request_outb_mbox(struct rio_mport *, int, int,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#717: FILE: include/linux/rio_drv.h:353:
+extern int rio_release_outb_mbox(struct rio_mport *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#717: FILE: include/linux/rio_drv.h:353:
+extern int rio_release_outb_mbox(struct rio_mport *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#717: FILE: include/linux/rio_drv.h:353:
+extern int rio_release_outb_mbox(struct rio_mport *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#737: FILE: include/linux/rio_drv.h:373:
+extern int rio_request_inb_mbox(struct rio_mport *, int, int,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#739: FILE: include/linux/rio_drv.h:375:
+extern int rio_release_inb_mbox(struct rio_mport *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#739: FILE: include/linux/rio_drv.h:375:
+extern int rio_release_inb_mbox(struct rio_mport *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#739: FILE: include/linux/rio_drv.h:375:
+extern int rio_release_inb_mbox(struct rio_mport *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#770: FILE: include/linux/rio_drv.h:406:
+extern int rio_request_inb_dbell(struct rio_mport *, u16, u16,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#772: FILE: include/linux/rio_drv.h:408:
+extern int rio_release_inb_dbell(struct rio_mport *, u16, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#772: FILE: include/linux/rio_drv.h:408:
+extern int rio_release_inb_dbell(struct rio_mport *, u16, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#772: FILE: include/linux/rio_drv.h:408:
+extern int rio_release_inb_dbell(struct rio_mport *, u16, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#772: FILE: include/linux/rio_drv.h:408:
+extern int rio_release_inb_dbell(struct rio_mport *, u16, u16);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#773: FILE: include/linux/rio_drv.h:409:
+extern struct resource *rio_request_outb_dbell(struct rio_dev *, u16, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_dev *' should also have an identifier name
#773: FILE: include/linux/rio_drv.h:409:
+extern struct resource *rio_request_outb_dbell(struct rio_dev *, u16, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#773: FILE: include/linux/rio_drv.h:409:
+extern struct resource *rio_request_outb_dbell(struct rio_dev *, u16, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#773: FILE: include/linux/rio_drv.h:409:
+extern struct resource *rio_request_outb_dbell(struct rio_dev *, u16, u16);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#774: FILE: include/linux/rio_drv.h:410:
+extern int rio_release_outb_dbell(struct rio_dev *, struct resource *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_dev *' should also have an identifier name
#774: FILE: include/linux/rio_drv.h:410:
+extern int rio_release_outb_dbell(struct rio_dev *, struct resource *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct resource *' should also have an identifier name
#774: FILE: include/linux/rio_drv.h:410:
+extern int rio_release_outb_dbell(struct rio_dev *, struct resource *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_dev *' should also have an identifier name
#777: FILE: include/linux/rio_drv.h:413:
+int rio_claim_resource(struct rio_dev *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#777: FILE: include/linux/rio_drv.h:413:
+int rio_claim_resource(struct rio_dev *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_dev *' should also have an identifier name
#778: FILE: include/linux/rio_drv.h:414:
+int rio_request_regions(struct rio_dev *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#778: FILE: include/linux/rio_drv.h:414:
+int rio_request_regions(struct rio_dev *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_dev *' should also have an identifier name
#779: FILE: include/linux/rio_drv.h:415:
+void rio_release_regions(struct rio_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_dev *' should also have an identifier name
#780: FILE: include/linux/rio_drv.h:416:
+int rio_request_region(struct rio_dev *, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#780: FILE: include/linux/rio_drv.h:416:
+int rio_request_region(struct rio_dev *, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#780: FILE: include/linux/rio_drv.h:416:
+int rio_request_region(struct rio_dev *, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_dev *' should also have an identifier name
#781: FILE: include/linux/rio_drv.h:417:
+void rio_release_region(struct rio_dev *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#781: FILE: include/linux/rio_drv.h:417:
+void rio_release_region(struct rio_dev *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_driver *' should also have an identifier name
#784: FILE: include/linux/rio_drv.h:420:
+int rio_register_driver(struct rio_driver *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_driver *' should also have an identifier name
#785: FILE: include/linux/rio_drv.h:421:
+void rio_unregister_driver(struct rio_driver *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_dev *' should also have an identifier name
#786: FILE: include/linux/rio_drv.h:422:
+struct rio_dev *rio_dev_get(struct rio_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_dev *' should also have an identifier name
#787: FILE: include/linux/rio_drv.h:423:
+void rio_dev_put(struct rio_dev *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#827: FILE: include/linux/rio_drv.h:463:
+extern u16 rio_local_get_device_id(struct rio_mport *port);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#828: FILE: include/linux/rio_drv.h:464:
+extern struct rio_dev *rio_get_device(u16 vid, u16 did, struct rio_dev *from);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#829: FILE: include/linux/rio_drv.h:465:
+extern struct rio_dev *rio_get_asm(u16 vid, u16 did, u16 asm_vid, u16 asm_did,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#839: FILE: include/linux/rio_ids.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#868: FILE: include/linux/rio_regs.h:1:
+/*

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#917: FILE: include/linux/rio_regs.h:50:
+#define  RIO_SWP_INFO_PORT_NUM_MASK	0x000000ff	/* [I] Maintenance transaction port number */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#918: FILE: include/linux/rio_regs.h:51:
+#define  RIO_GET_TOTAL_PORTS(x)		((x & RIO_SWP_INFO_PORT_TOTAL_MASK) >> 8)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1033: FILE: include/linux/rio_regs.h:166:
+#define RIO_GET_BLOCK_PTR(x)	((x & RIO_EFB_PTR_MASK) >> 16)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1034: FILE: include/linux/rio_regs.h:167:
+#define RIO_GET_BLOCK_ID(x)	(x & RIO_EFB_ID_MASK)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1062: FILE: include/linux/rio_regs.h:195:
+#define RIO_PORT_N_MNT_REQ_CSR(x)	(0x0040 + x*0x20)	/* 0x0002 */
                                  	           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1062: FILE: include/linux/rio_regs.h:195:
+#define RIO_PORT_N_MNT_REQ_CSR(x)	(0x0040 + x*0x20)	/* 0x0002 */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1063: FILE: include/linux/rio_regs.h:196:
+#define RIO_PORT_N_MNT_RSP_CSR(x)	(0x0044 + x*0x20)	/* 0x0002 */
                                  	           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1063: FILE: include/linux/rio_regs.h:196:
+#define RIO_PORT_N_MNT_RSP_CSR(x)	(0x0044 + x*0x20)	/* 0x0002 */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1064: FILE: include/linux/rio_regs.h:197:
+#define RIO_PORT_N_ACK_STS_CSR(x)	(0x0048 + x*0x20)	/* 0x0002 */
                                  	           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1064: FILE: include/linux/rio_regs.h:197:
+#define RIO_PORT_N_ACK_STS_CSR(x)	(0x0048 + x*0x20)	/* 0x0002 */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1065: FILE: include/linux/rio_regs.h:198:
+#define RIO_PORT_N_ERR_STS_CSR(x)	(0x58 + x*0x20)
                                  	         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1065: FILE: include/linux/rio_regs.h:198:
+#define RIO_PORT_N_ERR_STS_CSR(x)	(0x58 + x*0x20)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1067: FILE: include/linux/rio_regs.h:200:
+#define RIO_PORT_N_CTL_CSR(x)		(0x5c + x*0x20)
                              		         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1067: FILE: include/linux/rio_regs.h:200:
+#define RIO_PORT_N_CTL_CSR(x)		(0x5c + x*0x20)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000178926.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 47 errors, 77 warnings, 48 checks, 1016 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000178926.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
