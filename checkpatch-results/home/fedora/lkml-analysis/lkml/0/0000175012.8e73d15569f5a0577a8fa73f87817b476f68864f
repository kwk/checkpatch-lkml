Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#110: 
Modules linked in: HeavyLink parport_pc lp parport autofs4 rfcomm l2cap bluetooth nfsd exportfs lockd sunrpc e100 mii ipt_REJECT ipt_state ip_conntrack iptable_filter ip_tables floppy sg sr_mod microcode nls_cp437 msdos fat dm_mod uhci_hcd ehci_hcd video container button battery ac rtc ipv6 ext3 jbd ata_piix libata aic7xxx scsi_transport_spi sd_mod scsi_mod

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#110: 
Modules linked in: HeavyLink parport_pc lp parport autofs4 rfcomm l2cap bluetooth nfsd exportfs lockd sunrpc e100 mii ipt_REJECT ipt_state ip_conntrack iptable_filter ip_tables floppy sg sr_mod microcode nls_cp437 msdos fat dm_mod uhci_hcd ehci_hcd video container button battery ac rtc ipv6 ext3 jbd ata_piix libata aic7xxx scsi_transport_spi sd_mod scsi_mod
                                                                                                                                                                                                                      ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#191: 
--- /usr/src/linux-2.6.11.9/mm/memory.c	2005-05-11 18:41:52.000000000 -0400

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#213: FILE: usr/src/linux-2.6.12/mm/memory.c:91:
+void pgd_clear_bad(pgd_t *pgd)
  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#242: FILE: usr/src/linux-2.6.12/mm/memory.c:103:
+void pmd_clear_bad(pmd_t *pmd)
  {

WARNING:LINE_SPACING: Missing a blank line after declarations
#264: FILE: usr/src/linux-2.6.12/mm/memory.c:116:
+	struct page *page = pmd_page(*pmd);
+	pmd_clear(pmd);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: usr/src/linux-2.6.12/mm/memory.c:123:
+static inline void free_pmd_range(struct mmu_gather *tlb, pud_t *pud,
+				unsigned long addr, unsigned long end,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: usr/src/linux-2.6.12/mm/memory.c:156:
+static inline void free_pud_range(struct mmu_gather *tlb, pgd_t *pgd,
+				unsigned long addr, unsigned long end,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#381: FILE: usr/src/linux-2.6.12/mm/memory.c:193:
+void free_pgd_range(struct mmu_gather **tlb,
+			unsigned long addr, unsigned long end,
+			unsigned long floor, unsigned long ceiling)
  {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: usr/src/linux-2.6.12/mm/memory.c:194:
+void free_pgd_range(struct mmu_gather **tlb,
+			unsigned long addr, unsigned long end,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: usr/src/linux-2.6.12/mm/memory.c:257:
+void free_pgtables(struct mmu_gather **tlb, struct vm_area_struct *vma,
+		unsigned long floor, unsigned long ceiling)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#465: FILE: usr/src/linux-2.6.12/mm/memory.c:265:
+			hugetlb_free_pgd_range(tlb, addr, vma->vm_end,
+				floor, next? next->vm_start: ceiling);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#465: FILE: usr/src/linux-2.6.12/mm/memory.c:265:
+				floor, next? next->vm_start: ceiling);
 				           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#465: FILE: usr/src/linux-2.6.12/mm/memory.c:265:
+				floor, next? next->vm_start: ceiling);
 				                           ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#471: FILE: usr/src/linux-2.6.12/mm/memory.c:271:
+			while (next && next->vm_start <= vma->vm_end + PMD_SIZE
+			  && !is_hugepage_only_range(vma->vm_mm, next->vm_start,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: usr/src/linux-2.6.12/mm/memory.c:277:
+			free_pgd_range(tlb, addr, vma->vm_end,
+				floor, next? next->vm_start: ceiling);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#477: FILE: usr/src/linux-2.6.12/mm/memory.c:277:
+				floor, next? next->vm_start: ceiling);
 				           ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#477: FILE: usr/src/linux-2.6.12/mm/memory.c:277:
+				floor, next? next->vm_start: ceiling);
 				                           ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#484: FILE: usr/src/linux-2.6.12/mm/memory.c:283:
+pte_t fastcall *pte_alloc_map(struct mm_struct *mm, pmd_t *pmd,
+				unsigned long address)
  {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#485: FILE: usr/src/linux-2.6.12/mm/memory.c:284:
+pte_t fastcall *pte_alloc_map(struct mm_struct *mm, pmd_t *pmd,
+				unsigned long address)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: usr/src/linux-2.6.12/mm/memory.c:346:
+copy_one_pte(struct mm_struct *dst_mm, struct mm_struct *src_mm,
  		pte_t *dst_pte, pte_t *src_pte, unsigned long vm_flags,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#570: FILE: usr/src/linux-2.6.12/mm/memory.c:407:
+static int copy_pte_range(struct mm_struct *dst_mm, struct mm_struct *src_mm,
  		pmd_t *dst_pmd, pmd_t *src_pmd, struct vm_area_struct *vma,
  		unsigned long addr, unsigned long end)
  {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#571: FILE: usr/src/linux-2.6.12/mm/memory.c:408:
+static int copy_pte_range(struct mm_struct *dst_mm, struct mm_struct *src_mm,
  		pmd_t *dst_pmd, pmd_t *src_pmd, struct vm_area_struct *vma,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#597: FILE: usr/src/linux-2.6.12/mm/memory.c:429:
+		if (progress >= 32 && (need_resched() ||
+		    need_lockbreak(&src_mm->page_table_lock) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#623: FILE: usr/src/linux-2.6.12/mm/memory.c:450:
+static inline int copy_pmd_range(struct mm_struct *dst_mm, struct mm_struct *src_mm,
  		pud_t *dst_pud, pud_t *src_pud, struct vm_area_struct *vma,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#657: FILE: usr/src/linux-2.6.12/mm/memory.c:465:
+		if (copy_pte_range(dst_mm, src_mm, dst_pmd, src_pmd,
+						vma, addr, next))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#665: FILE: usr/src/linux-2.6.12/mm/memory.c:472:
+static inline int copy_pud_range(struct mm_struct *dst_mm, struct mm_struct *src_mm,
  		pgd_t *dst_pgd, pgd_t *src_pgd, struct vm_area_struct *vma,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#699: FILE: usr/src/linux-2.6.12/mm/memory.c:487:
+		if (copy_pmd_range(dst_mm, src_mm, dst_pud, src_pud,
+						vma, addr, next))

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#706: FILE: usr/src/linux-2.6.12/mm/memory.c:493:
+int copy_page_range(struct mm_struct *dst_mm, struct mm_struct *src_mm,
  		struct vm_area_struct *vma)
  {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#707: FILE: usr/src/linux-2.6.12/mm/memory.c:494:
+int copy_page_range(struct mm_struct *dst_mm, struct mm_struct *src_mm,
  		struct vm_area_struct *vma)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#756: FILE: usr/src/linux-2.6.12/mm/memory.c:511:
+		if (copy_pud_range(dst_mm, src_mm, dst_pgd, src_pgd,
+						vma, addr, next))

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#765: FILE: usr/src/linux-2.6.12/mm/memory.c:517:
+static void zap_pte_range(struct mmu_gather *tlb, pmd_t *pmd,
+				unsigned long addr, unsigned long end,
+				struct zap_details *details)
  {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#766: FILE: usr/src/linux-2.6.12/mm/memory.c:518:
+static void zap_pte_range(struct mmu_gather *tlb, pmd_t *pmd,
+				unsigned long addr, unsigned long end,

WARNING:LINE_SPACING: Missing a blank line after declarations
#793: FILE: usr/src/linux-2.6.12/mm/memory.c:526:
+		pte_t ptent = *pte;
+		if (pte_none(ptent))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#851: FILE: usr/src/linux-2.6.12/mm/memory.c:588:
+static inline void zap_pmd_range(struct mmu_gather *tlb, pud_t *pud,
+				unsigned long addr, unsigned long end,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#887: FILE: usr/src/linux-2.6.12/mm/memory.c:604:
+static inline void zap_pud_range(struct mmu_gather *tlb, pgd_t *pgd,
+				unsigned long addr, unsigned long end,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#918: FILE: usr/src/linux-2.6.12/mm/memory.c:619:
+static void unmap_page_range(struct mmu_gather *tlb, struct vm_area_struct *vma,
+				unsigned long addr, unsigned long end,
+				struct zap_details *details)
  {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#919: FILE: usr/src/linux-2.6.12/mm/memory.c:620:
+static void unmap_page_range(struct mmu_gather *tlb, struct vm_area_struct *vma,
+				unsigned long addr, unsigned long end,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#932: FILE: usr/src/linux-2.6.12/mm/memory.c:629:
+	BUG_ON(addr >= end);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#967: FILE: usr/src/linux-2.6.12/mm/memory.c:676:
+unsigned long unmap_vmas(struct mmu_gather **tlbp, struct mm_struct *mm,
  		struct vm_area_struct *vma, unsigned long start_addr,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1014: FILE: usr/src/linux-2.6.12/mm/memory.c:753:
+unsigned long zap_page_range(struct vm_area_struct *vma, unsigned long address,
  		unsigned long size, struct zap_details *details)
  {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1015: FILE: usr/src/linux-2.6.12/mm/memory.c:754:
+unsigned long zap_page_range(struct vm_area_struct *vma, unsigned long address,
  		unsigned long size, struct zap_details *details)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1044: FILE: usr/src/linux-2.6.12/mm/memory.c:1023:
+static int zeromap_pte_range(struct mm_struct *mm, pmd_t *pmd,
+			unsigned long addr, unsigned long end, pgprot_t prot)
  {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1045: FILE: usr/src/linux-2.6.12/mm/memory.c:1024:
+static int zeromap_pte_range(struct mm_struct *mm, pmd_t *pmd,
+			unsigned long addr, unsigned long end, pgprot_t prot)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1084: FILE: usr/src/linux-2.6.12/mm/memory.c:1041:
+static inline int zeromap_pmd_range(struct mm_struct *mm, pud_t *pud,
+			unsigned long addr, unsigned long end, pgprot_t prot)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1120: FILE: usr/src/linux-2.6.12/mm/memory.c:1058:
+static inline int zeromap_pud_range(struct mm_struct *mm, pgd_t *pgd,
+			unsigned long addr, unsigned long end, pgprot_t prot)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1149: FILE: usr/src/linux-2.6.12/mm/memory.c:1074:
+int zeromap_page_range(struct vm_area_struct *vma,
+			unsigned long addr, unsigned long size, pgprot_t prot)
  {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1150: FILE: usr/src/linux-2.6.12/mm/memory.c:1075:
+int zeromap_page_range(struct vm_area_struct *vma,
+			unsigned long addr, unsigned long size, pgprot_t prot)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1168: FILE: usr/src/linux-2.6.12/mm/memory.c:1083:
+	BUG_ON(addr >= end);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1209: FILE: usr/src/linux-2.6.12/mm/memory.c:1102:
+static int remap_pte_range(struct mm_struct *mm, pmd_t *pmd,
+			unsigned long addr, unsigned long end,
+			unsigned long pfn, pgprot_t prot)
  {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1210: FILE: usr/src/linux-2.6.12/mm/memory.c:1103:
+static int remap_pte_range(struct mm_struct *mm, pmd_t *pmd,
+			unsigned long addr, unsigned long end,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1241: FILE: usr/src/linux-2.6.12/mm/memory.c:1122:
+static inline int remap_pmd_range(struct mm_struct *mm, pud_t *pud,
+			unsigned long addr, unsigned long end,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1263: FILE: usr/src/linux-2.6.12/mm/memory.c:1135:
+		if (remap_pte_range(mm, pmd, addr, next,
+				pfn + (addr >> PAGE_SHIFT), prot))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1289: FILE: usr/src/linux-2.6.12/mm/memory.c:1142:
+static inline int remap_pud_range(struct mm_struct *mm, pgd_t *pgd,
+			unsigned long addr, unsigned long end,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1314: FILE: usr/src/linux-2.6.12/mm/memory.c:1155:
+		if (remap_pmd_range(mm, pud, addr, next,
+				pfn + (addr >> PAGE_SHIFT), prot))

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1322: FILE: usr/src/linux-2.6.12/mm/memory.c:1162:
+int remap_pfn_range(struct vm_area_struct *vma, unsigned long addr,
  		    unsigned long pfn, unsigned long size, pgprot_t prot)
  {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1323: FILE: usr/src/linux-2.6.12/mm/memory.c:1163:
+int remap_pfn_range(struct vm_area_struct *vma, unsigned long addr,
  		    unsigned long pfn, unsigned long size, pgprot_t prot)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1346: FILE: usr/src/linux-2.6.12/mm/memory.c:1181:
+	BUG_ON(addr >= end);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1365: FILE: usr/src/linux-2.6.12/mm/memory.c:1189:
+		err = remap_pud_range(mm, pgd, addr, next,
+				pfn + (addr >> PAGE_SHIFT), prot);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1447: FILE: usr/src/linux-2.6.12/mm/memory.c:1398:
+	restart_addr = zap_page_range(vma, start_addr,
+					end_addr - start_addr, details);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1678: FILE: usr/src/linux-2.6.12/mm/memory.c:2211:
+void update_mem_hiwater(struct task_struct *tsk)
  {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000175012.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 8 warnings, 35 checks, 1459 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000175012.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
