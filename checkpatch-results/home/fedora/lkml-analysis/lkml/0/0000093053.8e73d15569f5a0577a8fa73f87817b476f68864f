WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#49: FILE: include/linux/mm_inline.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#51: FILE: include/linux/mm_inline.h:3:
+ * ^I^I^IActive: pages which were accessed more frequently.$

ERROR:SPACING: space required before the open brace '{'
#87: FILE: include/linux/mm_inline.h:54:
+	if(PageWired(page)){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#87: FILE: include/linux/mm_inline.h:54:
+	if(PageWired(page)){

ERROR:SPACING: space required after that ',' (ctx:VxO)
#130: FILE: include/linux/page-flags.h:204:
+#define ClearPageWired(page) clear_bit(PG_wired,&(page)->flags)
                                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#130: FILE: include/linux/page-flags.h:204:
+#define ClearPageWired(page) clear_bit(PG_wired,&(page)->flags)
                                                 ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#148: FILE: include/linux/swap.h:168:
+extern void FASTCALL(wire_page(struct page *));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#148: FILE: include/linux/swap.h:168:
+extern void FASTCALL(wire_page(struct page *));

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#149: FILE: include/linux/swap.h:169:
+extern void FASTCALL(unwire_page(struct page *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#149: FILE: include/linux/swap.h:169:
+extern void FASTCALL(unwire_page(struct page *));

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#168: FILE: mm/swap.c:121:
+	page->wired_count ++;
 	                  ^

ERROR:SPACING: space required before the open brace '{'
#169: FILE: mm/swap.c:122:
+	if(!PageWired(page)){

ERROR:SPACING: space required before the open parenthesis '('
#169: FILE: mm/swap.c:122:
+	if(!PageWired(page)){

ERROR:SPACING: space required before the open brace '{'
#170: FILE: mm/swap.c:123:
+		if(PageLRU(page)){

ERROR:SPACING: space required before the open parenthesis '('
#170: FILE: mm/swap.c:123:
+		if(PageLRU(page)){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#172: FILE: mm/swap.c:125:
+			add_page_to_wired_list(zone,page);
 			                           ^

WARNING:TYPO_SPELLING: 'isnt' may be misspelled - perhaps 'isn't'?
#180: FILE: mm/swap.c:133:
+ * If it isnt wired by any process, try move it to active list.
          ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space prohibited before that '--' (ctx:WxO)
#187: FILE: mm/swap.c:140:
+	page->wired_count --;
 	                  ^

ERROR:SPACING: space required before the open brace '{'
#188: FILE: mm/swap.c:141:
+	if(!page->wired_count){

ERROR:SPACING: space required before the open parenthesis '('
#188: FILE: mm/swap.c:141:
+	if(!page->wired_count){

ERROR:SPACING: space required before the open brace '{'
#189: FILE: mm/swap.c:142:
+		if(PageLRU(page) && TestClearPageWired(page)){

ERROR:SPACING: space required before the open parenthesis '('
#189: FILE: mm/swap.c:142:
+		if(PageLRU(page) && TestClearPageWired(page)){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#190: FILE: mm/swap.c:143:
+			del_page_from_wired_list(zone,page);
 			                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#191: FILE: mm/swap.c:144:
+			add_page_to_active_list(zone,page);
 			                            ^

ERROR:SPACING: space required before the open parenthesis '('
#210: FILE: mm/swap.c:160:
+	if(!PageWired(page)) {

ERROR:SPACING: space required before the open parenthesis '('
#228: FILE: mm/swap.c:221:
+	if(!PageWired(page)) {

ERROR:SPACING: space required before the open parenthesis '('
#247: FILE: mm/swap.c:259:
+		if(PageWired(page))

ERROR:SPACING: space required before the open parenthesis '('
#257: FILE: mm/swap.c:347:
+		if(!page->wired_count)

CHECK:BRACES: braces {} should be used on all arms of this statement
#257: FILE: mm/swap.c:347:
+		if(!page->wired_count)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#259: FILE: mm/swap.c:349:
+		else {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#261: FILE: mm/swap.c:351:
+			add_page_to_wired_list(zone,page);
 			                           ^

ERROR:SPACING: space required before the open parenthesis '('
#271: FILE: mm/swap.c:381:
+		if(!page->wired_count)

CHECK:BRACES: braces {} should be used on all arms of this statement
#271: FILE: mm/swap.c:381:
+		if(!page->wired_count)
[...]
+		else{
[...]

ERROR:SPACING: space required before the open brace '{'
#273: FILE: mm/swap.c:383:
+		else{

CHECK:BRACES: Unbalanced braces around else statement
#273: FILE: mm/swap.c:383:
+		else{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#275: FILE: mm/swap.c:385:
+			add_page_to_wired_list(zone,page);
 			                           ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#289: FILE: mm/page_alloc.c:352:
+			1 << PG_wired )))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093053.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 5 warnings, 6 checks, 219 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093053.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
