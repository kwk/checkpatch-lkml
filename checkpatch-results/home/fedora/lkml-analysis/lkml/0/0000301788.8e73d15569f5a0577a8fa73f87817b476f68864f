WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
#	           ChangeSet	1.1656  -> 1.1657 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
#	include/asm-ia64/sn/pci/pcibr_private.h	1.21    -> 1.22   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
#	arch/ia64/sn/kernel/irq.c	1.18    -> 1.19   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
#	drivers/pci/hotplug/Kconfig	1.12    -> 1.13   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
#	arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c	1.18    -> 1.19   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#	arch/ia64/sn/io/machvec/pci_bus_cvlink.c	1.35    -> 1.36   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
#	include/asm-ia64/sn/pci/pcibr.h	1.13    -> 1.14   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#	include/asm-ia64/sn/sn_sal.h	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#	arch/ia64/sn/io/sn2/pcibr/pcibr_dvr.c	1.28    -> 1.29   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# 04/02/19	pfg@sgi.com	1.1657

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
# arch/ia64/sn/io/machvec/pci_bus_cvlink.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#     Interface functions for hot plug added:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#         sn_dma_flush_clear - called from sn_pci_unfixup_slot

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#         sn_pci_unfixup_slot - called from the sn hotplug driver

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
# arch/ia64/sn/io/sn2/pcibr/pcibr_dvr.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#     Add an ifdef for CONFIG_HOTPLUG_PCI_SGI in a couple of blocks.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#     The use of slot_status is hotplug only

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
# arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#     More hotplug support code : pcibr_slot_enable and pcibr_slot_disable are hotplug

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#     driver interfaces, the others are support funcs

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#     Made the use of slot_status hotplug only

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
# arch/ia64/sn/kernel/irq.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#     Added unregister_pcibr_intr - a hotplug support function

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
# drivers/pci/hotplug/Kconfig

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
#     config option to enabel SGI SN2 PCI hotplug

WARNING:TYPO_SPELLING: 'enabel' may be misspelled - perhaps 'enable'?
#67: 
#     config option to enabel SGI SN2 PCI hotplug
                       ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
# include/asm-ia64/sn/pci/pcibr.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
#     data structs and definitions needed for hotplug

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
#     removed some typedefs .....

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
# include/asm-ia64/sn/pci/pcibr_private.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
#     Added elements needed for hotplug

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
# include/asm-ia64/sn/sn_sal.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
#     Added sal call needed for hotplug - perform a 'generic' hotplug call

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#78: 
--- a/arch/ia64/sn/io/machvec/pci_bus_cvlink.c	Thu Feb 19 17:12:31 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:391:
+                   unsigned long start, unsigned long end)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:391:
+                   unsigned long start, unsigned long end)$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#90: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:393:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:394:
+        int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:394:
+        int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:396:
+        dma_flush_list->pin = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:396:
+        dma_flush_list->pin = -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:397:
+        dma_flush_list->bus = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:397:
+        dma_flush_list->bus = -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:398:
+        dma_flush_list->slot = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:398:
+        dma_flush_list->slot = -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:400:
+        for (i = 0; i < PCI_ROM_RESOURCE; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:400:
+        for (i = 0; i < PCI_ROM_RESOURCE; i++)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:401:
+                if ((dma_flush_list->bar_list[i].start == start) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:401:
+                if ((dma_flush_list->bar_list[i].start == start) &&$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dma_flush_list->bar_list[i].start == start'
#98: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:401:
+                if ((dma_flush_list->bar_list[i].start == start) &&
+                    (dma_flush_list->bar_list[i].end == end)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dma_flush_list->bar_list[i].end == end'
#98: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:401:
+                if ((dma_flush_list->bar_list[i].start == start) &&
+                    (dma_flush_list->bar_list[i].end == end)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:402:
+                    (dma_flush_list->bar_list[i].end == end)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:402:
+                    (dma_flush_list->bar_list[i].end == end)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:403:
+                        dma_flush_list->bar_list[i].start = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:403:
+                        dma_flush_list->bar_list[i].start = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:404:
+                        dma_flush_list->bar_list[i].end = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:404:
+                        dma_flush_list->bar_list[i].end = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:405:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:405:
+                        break;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:406:
+                }           $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:406:
+                }           $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:406:
+                }           $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#105: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:408:
+
+}

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#131: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:434:
+			if (size == 0) continue;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:437:
+^I^I^I^I   ^I   dev->resource[idx].start,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#134: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:437:
+^I^I^I^I   ^I   dev->resource[idx].start,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:437:
+			sn_dma_flush_clear(device_sysdata->dma_flush_list,
+				   	   dev->resource[idx].start,

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:438:
+^I^I^I^I   ^I   dev->resource[idx].end);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#135: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:438:
+^I^I^I^I   ^I   dev->resource[idx].end);$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#140: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:443:
+		extern void unregister_pcibr_intr(int, pcibr_intr_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#140: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:443:
+		extern void unregister_pcibr_intr(int, pcibr_intr_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pcibr_intr_t' should also have an identifier name
#140: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:443:
+		extern void unregister_pcibr_intr(int, pcibr_intr_t);

CHECK:SPACING: No space is necessary after a cast
#143: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:446:
+		unregister_pcibr_intr(irq, (pcibr_intr_t) intr_handle);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#150: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:453:
+			pciio_piomap_done (device_sysdata->pio_map[idx]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#151: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:454:
+			pciio_piomap_free (device_sysdata->pio_map[idx]);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#155: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:458:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#165: FILE: arch/ia64/sn/io/machvec/pci_bus_cvlink.c:611:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#249: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:73:
+struct sysctl_pci_error_s {
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#250: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:74:
+    int^I ^Ierror;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:74:
+    int^I ^Ierror;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:75:
+    char^I*msg;$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#254: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:78:
+} sysctl_pci_errors[] = {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:80:
+    { SYSCTL_PCI_UNINITIALIZED, "module not initialized" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:83:
+    { SYSCTL_PCI_UNSUPPORTED_BUS, "unsupported bus" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:86:
+    { SYSCTL_PCI_UNSUPPORTED_SLOT, "unsupported slot" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:89:
+    { SYSCTL_PCI_POWER_NOT_OKAY, "slot power not okay" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:92:
+    { SYSCTL_PCI_CARD_NOT_PRESENT, "card not present" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:95:
+    { SYSCTL_PCI_POWER_LIMIT, "power limit reached - some cards not powered up" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:98:
+    { SYSCTL_PCI_33MHZ_ON_66MHZ, "cannot add a 33 MHz card to an active 66 MHz bus" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:101:
+    { SYSCTL_PCI_INVALID_ORDER, "invalid reset order" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:104:
+    { SYSCTL_PCI_DOWN_33MHZ, "cannot power down a 33 MHz card on an active bus" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:107:
+    { SYSCTL_PCI_RESET_33MHZ, "cannot reset a 33 MHz card on an active bus" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:110:
+    { SYSCTL_PCI_SLOT_NOT_UP, "cannot reset a slot that is not powered up" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:113:
+    { SYSCTL_PCIX_UNINITIALIZED, "module not initialized" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:116:
+    { SYSCTL_PCIX_UNSUPPORTED_BUS, "unsupported bus" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:119:
+    { SYSCTL_PCIX_UNSUPPORTED_SLOT, "unsupported slot" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:122:
+    { SYSCTL_PCIX_POWER_NOT_OKAY, "slot power not okay" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:125:
+    { SYSCTL_PCIX_CARD_NOT_PRESENT, "card not present" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:128:
+    { SYSCTL_PCIX_POWER_LIMIT, "power limit reached - some cards not powered up" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:131:
+    { SYSCTL_PCIX_33MHZ_ON_66MHZ, "cannot add a 33 MHz card to an active 66 MHz bus" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:134:
+    { SYSCTL_PCIX_PCI_ON_PCIX, "cannot add a PCI card to an active PCIX bus" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:137:
+    { SYSCTL_PCIX_ANYTHING_ON_133MHZ, "cannot add any card to an active 133MHz PCIX bus" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:140:
+    { SYSCTL_PCIX_X66MHZ_ON_X100MHZ, "cannot add a PCIX 66MHz card to an active 100MHz PCIX bus" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:143:
+    { SYSCTL_PCIX_INVALID_ORDER, "invalid reset order" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:146:
+    { SYSCTL_PCIX_DOWN_33MHZ, "cannot power down a 33 MHz card on an active bus" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:149:
+    { SYSCTL_PCIX_RESET_33MHZ, "cannot reset a 33 MHz card on an active bus" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:152:
+    { SYSCTL_PCIX_SLOT_NOT_UP, "cannot reset a slot that is not powered up" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:155:
+    { SYSCTL_PCIX_INVALID_BUS_SETTING, "invalid bus type/speed selection (PCIX<66MHz, PCI>66MHz)" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:158:
+    { SYSCTL_PCIX_INVALID_DEPENDENT_SLOT, "invalid dependent slot in PCI slot configuration" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:161:
+    { SYSCTL_PCIX_SHARED_IDSELECT, "cannot enable two slots sharing the same IDSELECT" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:164:
+    { SYSCTL_PCIX_SLOT_DISABLED, "slot is disabled" },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:174:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:175:
+    struct sysctl_pci_error_s *e = sysctl_pci_errors;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:176:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:176:
+    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:177:
+    for (i = 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:177:
+    for (i = 0; $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#353: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:177:
+    for (i = 0; 
+	 i < (sizeof(sysctl_pci_errors) / sizeof(*e));
+	 i++, e++ )
+    {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#355: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:179:
+	 i++, e++ )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:180:
+    {$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#357: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:181:
+	if (e->error == error)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#357: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:181:
+	if (e->error == error)
+	{

WARNING:TABSTOP: Statements should start on a tabstop
#360: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:184:
+	    return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:186:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:188:
+    sprintf(err_msg, "unrecognized PCI error type");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#372: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:196:
+ * ^IPCI card on the bus.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:203:
+                  int         *sub_errorp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:203:
+                  int         *sub_errorp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:205:
+    pcibr_soft_t  pcibr_soft = pcibr_soft_get(pcibr_vhdl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:206:
+    int^I^I  error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:208:
+    if (!(pcibr_soft->bs_slot[slot].slot_status & PCI_SLOT_POWER_ON)) {$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#385: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:209:
+	uint64_t speed;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#386: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:210:
+	uint64_t mode;

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:212:
+        /* Power-up the slot */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:213:
+        error = pcibr_slot_pwr(pcibr_vhdl, slot, PCI_REQ_SLOT_POWER_ON, l1_msg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:213:
+        error = pcibr_slot_pwr(pcibr_vhdl, slot, PCI_REQ_SLOT_POWER_ON, l1_msg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:215:
+        if (error) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:215:
+        if (error) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#391: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:215:
+        if (error) {
+            if (sub_errorp)

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:216:
+            if (sub_errorp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:216:
+            if (sub_errorp)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:217:
+                *sub_errorp = error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:217:
+                *sub_errorp = error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:218:
+            return(PCI_L1_ERR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:218:
+            return(PCI_L1_ERR);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#394: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:218:
+            return(PCI_L1_ERR);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:219:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:219:
+        } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#395: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:219:
+        } else {
+            pcibr_soft->bs_slot[slot].slot_status &= ~PCI_SLOT_POWER_MASK;

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:220:
+            pcibr_soft->bs_slot[slot].slot_status &= ~PCI_SLOT_POWER_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:220:
+            pcibr_soft->bs_slot[slot].slot_status &= ~PCI_SLOT_POWER_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:221:
+            pcibr_soft->bs_slot[slot].slot_status |= PCI_SLOT_POWER_ON;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:221:
+            pcibr_soft->bs_slot[slot].slot_status |= PCI_SLOT_POWER_ON;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:222:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:222:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:229:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:230:
+         * Allow cards like the Alteon Gigabit Ethernet Adapter to complete$

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:231:
+         * on-card initialization following the slot reset$

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:232:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:233:
+        set_current_state (TASK_INTERRUPTIBLE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:233:
+        set_current_state (TASK_INTERRUPTIBLE);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#409: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:233:
+        set_current_state (TASK_INTERRUPTIBLE);

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:234:
+        schedule_timeout (HZ);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:234:
+        schedule_timeout (HZ);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#410: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:234:
+        schedule_timeout (HZ);

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:236:
+        /* Find out what is out there */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:237:
+        error = pcibr_slot_info_init(pcibr_vhdl, slot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:237:
+        error = pcibr_slot_info_init(pcibr_vhdl, slot);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#415: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:239:
+        if (error) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:239:
+        if (error) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#415: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:239:
+        if (error) {
+            if (sub_errorp)

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:240:
+            if (sub_errorp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:240:
+            if (sub_errorp)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:241:
+                *sub_errorp = error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:241:
+                *sub_errorp = error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:242:
+            return(PCI_SLOT_INFO_INIT_ERR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:242:
+            return(PCI_SLOT_INFO_INIT_ERR);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#418: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:242:
+            return(PCI_SLOT_INFO_INIT_ERR);

ERROR:CODE_INDENT: code indent should use tabs where possible
#419: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:243:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:243:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:245:
+        /* Set up the address space for this slot in the PCI land */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:247:
+        error = pcibr_slot_addr_space_init(pcibr_vhdl, slot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:247:
+        error = pcibr_slot_addr_space_init(pcibr_vhdl, slot);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#425: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:249:
+        if (error) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:249:
+        if (error) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#425: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:249:
+        if (error) {
+            if (sub_errorp)

ERROR:CODE_INDENT: code indent should use tabs where possible
#426: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:250:
+            if (sub_errorp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:250:
+            if (sub_errorp)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:251:
+                *sub_errorp = error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:251:
+                *sub_errorp = error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:252:
+            return(PCI_SLOT_ADDR_INIT_ERR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:252:
+            return(PCI_SLOT_ADDR_INIT_ERR);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#428: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:252:
+            return(PCI_SLOT_ADDR_INIT_ERR);

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:253:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:253:
+        }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#432: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:256:
+	if (IS_PCIX(pcibr_soft)) {
+	    int tmp_slot;

WARNING:TABSTOP: Statements should start on a tabstop
#433: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:257:
+	    int tmp_slot;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:264:
+^I    pcibr_soft->bs_pcix_rbar_percent_allowed = $

WARNING:TABSTOP: Statements should start on a tabstop
#442: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:266:
+	    for (tmp_slot = pcibr_soft->bs_min_slot;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#444: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:268:
+		if (tmp_slot == slot)
+		    continue;	/* skip this 'slot', we do it below */

WARNING:TABSTOP: Statements should start on a tabstop
#445: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:269:
+		    continue;	/* skip this 'slot', we do it below */

ERROR:CODE_INDENT: code indent should use tabs where possible
#446: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:270:
+                (void)pcibr_slot_pcix_rbar_init(pcibr_soft, tmp_slot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:270:
+                (void)pcibr_slot_pcix_rbar_init(pcibr_soft, tmp_slot);$

WARNING:TABSTOP: Statements should start on a tabstop
#447: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:271:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#450: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:274:
+	    if (error) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#451: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:275:
+		if (sub_errorp)
+		    *sub_errorp = error;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#453: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:277:
+		return(PCI_SLOT_RBAR_ALLOC_ERR);

WARNING:TABSTOP: Statements should start on a tabstop
#454: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:278:
+	    }

ERROR:CODE_INDENT: code indent should use tabs where possible
#457: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:281:
+        /* Setup the device register */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#458: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:282:
+        error = pcibr_slot_device_init(pcibr_vhdl, slot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:282:
+        error = pcibr_slot_device_init(pcibr_vhdl, slot);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#460: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:284:
+        if (error) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:284:
+        if (error) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#460: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:284:
+        if (error) {
+            if (sub_errorp)

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:285:
+            if (sub_errorp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:285:
+            if (sub_errorp)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:286:
+                *sub_errorp = error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:286:
+                *sub_errorp = error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:287:
+            return(PCI_SLOT_DEV_INIT_ERR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:287:
+            return(PCI_SLOT_DEV_INIT_ERR);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#463: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:287:
+            return(PCI_SLOT_DEV_INIT_ERR);

ERROR:CODE_INDENT: code indent should use tabs where possible
#464: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:288:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:288:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#466: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:290:
+        /* Setup host/guest relations */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:291:
+        error = pcibr_slot_guest_info_init(pcibr_vhdl, slot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:291:
+        error = pcibr_slot_guest_info_init(pcibr_vhdl, slot);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#469: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:293:
+        if (error) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:293:
+        if (error) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#469: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:293:
+        if (error) {
+            if (sub_errorp)

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:294:
+            if (sub_errorp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:294:
+            if (sub_errorp)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#471: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:295:
+                *sub_errorp = error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:295:
+                *sub_errorp = error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:296:
+            return(PCI_SLOT_GUEST_INIT_ERR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:296:
+            return(PCI_SLOT_GUEST_INIT_ERR);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#472: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:296:
+            return(PCI_SLOT_GUEST_INIT_ERR);

ERROR:CODE_INDENT: code indent should use tabs where possible
#473: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:297:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:297:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:299:
+        /* Initial RRB management */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:300:
+        error = pcibr_slot_initial_rrb_alloc(pcibr_vhdl, slot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:300:
+        error = pcibr_slot_initial_rrb_alloc(pcibr_vhdl, slot);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#478: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:302:
+        if (error) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:302:
+        if (error) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#478: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:302:
+        if (error) {
+            if (sub_errorp)

ERROR:CODE_INDENT: code indent should use tabs where possible
#479: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:303:
+            if (sub_errorp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:303:
+            if (sub_errorp)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#480: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:304:
+                *sub_errorp = error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:304:
+                *sub_errorp = error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#481: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:305:
+            return(PCI_SLOT_RRB_ALLOC_ERR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:305:
+            return(PCI_SLOT_RRB_ALLOC_ERR);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#481: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:305:
+            return(PCI_SLOT_RRB_ALLOC_ERR);

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:306:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:306:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:308:
+    }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#484: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:308:
+
+    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:311:
+    error = pcibr_slot_call_device_attach(pcibr_vhdl, slot, drv_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:313:
+    if (error) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:314:
+        if (sub_errorp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:314:
+        if (sub_errorp)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#490: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:314:
+        if (sub_errorp)
+            *sub_errorp = error;

ERROR:CODE_INDENT: code indent should use tabs where possible
#491: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:315:
+            *sub_errorp = error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:315:
+            *sub_errorp = error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#492: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:316:
+        if (error == EUNATCH)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:316:
+        if (error == EUNATCH)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#492: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:316:
+        if (error == EUNATCH)
+            return(PCI_NO_DRIVER);

ERROR:CODE_INDENT: code indent should use tabs where possible
#493: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:317:
+            return(PCI_NO_DRIVER);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:317:
+            return(PCI_NO_DRIVER);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#494: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:318:
+        else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:318:
+        else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#494: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:318:
+        else
+            return(PCI_SLOT_DRV_ATTACH_ERR);

ERROR:CODE_INDENT: code indent should use tabs where possible
#495: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:319:
+            return(PCI_SLOT_DRV_ATTACH_ERR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:319:
+            return(PCI_SLOT_DRV_ATTACH_ERR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:320:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:322:
+    return(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:332:
+    pcibr_soft_t                   pcibr_soft = pcibr_soft_get(pcibr_vhdl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:333:
+    pciio_slot_t                   slot = req_p->req_device;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:334:
+    int                            error = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:337:
+    if (!pcibr_soft) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#513: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:337:
+    if (!pcibr_soft) {
+        return(PCI_NOT_A_BRIDGE);
+    }

ERROR:CODE_INDENT: code indent should use tabs where possible
#514: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:338:
+        return(PCI_NOT_A_BRIDGE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:338:
+        return(PCI_NOT_A_BRIDGE);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#514: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:338:
+        return(PCI_NOT_A_BRIDGE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:339:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:341:
+    PCIBR_DEBUG_ALWAYS((PCIBR_DEBUG_HOTPLUG, pcibr_vhdl,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#518: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:342:
+                "pcibr_slot_enable: pcibr_soft=0x%lx, slot=%d, req_p=0x%lx\n",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:342:
+    PCIBR_DEBUG_ALWAYS((PCIBR_DEBUG_HOTPLUG, pcibr_vhdl,
+                "pcibr_slot_enable: pcibr_soft=0x%lx, slot=%d, req_p=0x%lx\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:342:
+                "pcibr_slot_enable: pcibr_soft=0x%lx, slot=%d, req_p=0x%lx\n",$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcibr_slot_enable', this function's name, in a string
#518: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:342:
+                "pcibr_slot_enable: pcibr_soft=0x%lx, slot=%d, req_p=0x%lx\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:CODE_INDENT: code indent should use tabs where possible
#519: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:343:
+                pcibr_soft, slot, req_p));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:343:
+                pcibr_soft, slot, req_p));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:346:
+    if (!PCIBR_VALID_SLOT(pcibr_soft, slot))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#523: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:347:
+        return(PCI_NOT_A_SLOT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:347:
+        return(PCI_NOT_A_SLOT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:349:
+    if (pcibr_soft->bs_slot[slot].slot_status & PCI_SLOT_ENABLE_CMPLT) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#526: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:350:
+        error = PCI_SLOT_ALREADY_UP;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:350:
+        error = PCI_SLOT_ALREADY_UP;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#527: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:351:
+        goto enable_unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:351:
+        goto enable_unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:352:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:354:
+    error = pcibr_slot_attach(pcibr_vhdl, slot, NULL,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#531: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:355:
+                              req_p->req_resp.resp_l1_msg,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:355:
+                              req_p->req_resp.resp_l1_msg,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:358:
+    req_p->req_resp.resp_l1_msg[PCI_L1_QSIZE] = '\0';$

WARNING:INDENTED_LABEL: labels should not be indented
#536: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:360:
+    enable_unlock:

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:362:
+    return(error);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:372:
+    pcibr_soft_t                   pcibr_soft = pcibr_soft_get(pcibr_vhdl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:373:
+    pciio_slot_t                   slot = req_p->req_device;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:374:
+    int                            error = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:375:
+    pciio_slot_t                   tmp_slot;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:378:
+    if (!pcibr_soft) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#554: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:378:
+    if (!pcibr_soft) {
+        return(PCI_NOT_A_BRIDGE);
+    }

ERROR:CODE_INDENT: code indent should use tabs where possible
#555: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:379:
+        return(PCI_NOT_A_BRIDGE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:379:
+        return(PCI_NOT_A_BRIDGE);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#555: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:379:
+        return(PCI_NOT_A_BRIDGE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:380:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:382:
+    PCIBR_DEBUG_ALWAYS((PCIBR_DEBUG_HOTPLUG, pcibr_vhdl,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:383:
+                "pcibr_slot_disable: pcibr_soft=0x%lx, slot=%d, req_p=0x%lx\n",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#559: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:383:
+    PCIBR_DEBUG_ALWAYS((PCIBR_DEBUG_HOTPLUG, pcibr_vhdl,
+                "pcibr_slot_disable: pcibr_soft=0x%lx, slot=%d, req_p=0x%lx\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:383:
+                "pcibr_slot_disable: pcibr_soft=0x%lx, slot=%d, req_p=0x%lx\n",$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcibr_slot_disable', this function's name, in a string
#559: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:383:
+                "pcibr_slot_disable: pcibr_soft=0x%lx, slot=%d, req_p=0x%lx\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#560: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:384:
+                pcibr_soft, slot, req_p));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:384:
+                pcibr_soft, slot, req_p));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:387:
+    if (!PCIBR_VALID_SLOT(pcibr_soft, slot))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#564: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:388:
+        return(PCI_NOT_A_SLOT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:388:
+        return(PCI_NOT_A_SLOT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:390:
+    if ((pcibr_soft->bs_slot[slot].slot_status & PCI_SLOT_DISABLE_CMPLT) ||$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#567: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:391:
+    if ((pcibr_soft->bs_slot[slot].slot_status & PCI_SLOT_DISABLE_CMPLT) ||
+       ((pcibr_soft->bs_slot[slot].slot_status & PCI_SLOT_STATUS_MASK) == 0)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:391:
+       ((pcibr_soft->bs_slot[slot].slot_status & PCI_SLOT_STATUS_MASK) == 0)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:392:
+        error = PCI_SLOT_ALREADY_DOWN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:392:
+        error = PCI_SLOT_ALREADY_DOWN;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#569: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:393:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#570: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:394:
+         * RJR - Should we invoke an L1 slot power-down command just in case$

ERROR:CODE_INDENT: code indent should use tabs where possible
#571: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:395:
+         *       a previous shut-down failed to power-down the slot?$

ERROR:CODE_INDENT: code indent should use tabs where possible
#572: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:396:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#573: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:397:
+        goto disable_unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:397:
+        goto disable_unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:398:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:401:
+    if (IS_33MHZ(pcibr_soft)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#578: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:402:
+        for (tmp_slot = pcibr_soft->bs_first_slot;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:402:
+        for (tmp_slot = pcibr_soft->bs_first_slot;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#578: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:402:
+        for (tmp_slot = pcibr_soft->bs_first_slot;
[...]
+            if (tmp_slot != slot)

ERROR:CODE_INDENT: code indent should use tabs where possible
#579: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:403:
+             tmp_slot <= pcibr_soft->bs_last_slot; tmp_slot++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:403:
+             tmp_slot <= pcibr_soft->bs_last_slot; tmp_slot++)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#580: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:404:
+            if (tmp_slot != slot)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:404:
+            if (tmp_slot != slot)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#581: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:405:
+                if (pcibr_soft->bs_slot[tmp_slot].slot_status & PCI_SLOT_POWER_ON) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:405:
+                if (pcibr_soft->bs_slot[tmp_slot].slot_status & PCI_SLOT_POWER_ON) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#581: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:405:
+                if (pcibr_soft->bs_slot[tmp_slot].slot_status & PCI_SLOT_POWER_ON) {
+                    error++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#582: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:406:
+                    error++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:406:
+                    error++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#583: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:407:
+                    break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:407:
+                    break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#584: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:408:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:408:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#585: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:409:
+        if (!error) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:409:
+        if (!error) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#585: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:409:
+        if (!error) {
+            error = PCI_EMPTY_33MHZ;

ERROR:CODE_INDENT: code indent should use tabs where possible
#586: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:410:
+            error = PCI_EMPTY_33MHZ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:410:
+            error = PCI_EMPTY_33MHZ;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#587: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:411:
+            goto disable_unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:411:
+            goto disable_unlock;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#588: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:412:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:412:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:413:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:415:
+    if (req_p->req_action == PCI_REQ_SLOT_ELIGIBLE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:418:
+    error = pcibr_slot_detach(pcibr_vhdl, slot, 1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#595: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:419:
+                              req_p->req_resp.resp_l1_msg,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:419:
+                              req_p->req_resp.resp_l1_msg,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:422:
+    req_p->req_resp.resp_l1_msg[PCI_L1_QSIZE] = '\0';$

WARNING:INDENTED_LABEL: labels should not be indented
#600: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:424:
+    disable_unlock:

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:426:
+    return(error);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#612: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:436:
+               pciio_slot_t slot,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:436:
+               pciio_slot_t slot,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#613: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:437:
+               int          up,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:437:
+               int          up,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:440:
+    pcibr_soft_t        pcibr_soft = pcibr_soft_get(pcibr_vhdl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:441:
+    nasid_t             nasid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:442:
+    u64^I^I^Iconnection_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:443:
+    int^I^I^Irv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:445:
+    nasid = NASID_GET(pcibr_soft->bs_base);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:446:
+    connection_type = SAL_SYSCTL_IO_XTALK;$

CHECK:SPACING: No space is necessary after a cast
#624: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:448:
+    rv = (int) ia64_sn_sysctl_iobrick_pci_op

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:448:
+    rv = (int) ia64_sn_sysctl_iobrick_pci_op$

CHECK:SPACING: No space is necessary after a cast
#627: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:451:
+	 (u64) pcibr_widget_to_bus(pcibr_vhdl),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:455:
+    if (!rv) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:458:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:459:
+    else {$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#635: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:459:
+    }
+    else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#635: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:459:
+    else {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:462:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:463:
+    return rv;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#691: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_slot.c:1531:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#704: FILE: arch/ia64/sn/kernel/irq.c:217:
+{
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sn_intr_list[irq]"
#709: FILE: arch/ia64/sn/kernel/irq.c:222:
+	if (sn_intr_list[irq] == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#724: FILE: arch/ia64/sn/kernel/irq.c:237:
+	if (curr)
+		kfree(curr);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#742: FILE: arch/ia64/sn/kernel/irq.c:255:
+
+}

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#755: FILE: drivers/pci/hotplug/Kconfig:125:
+config HOTPLUG_PCI_SGI
+	tristate "SGI PCI Hotplug Support"
+	depends on HOTPLUG_PCI && IA64_SGI_SN2
+	help
+	  Say Y here if you have an SGI IA64 Altix system.
+
+	  When in doubt, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'defintions' may be misspelled - perhaps 'definitions'?
#776: FILE: include/asm-ia64/sn/pci/pcibr.h:329:
+ * Bit defintions for variable slot_status in struct
        ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#782: FILE: include/asm-ia64/sn/pci/pcibr.h:335:
+#define PCI_SLOT_ENABLE_CMPLT       0x01    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#783: FILE: include/asm-ia64/sn/pci/pcibr.h:336:
+#define PCI_SLOT_ENABLE_INCMPLT     0x02    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#784: FILE: include/asm-ia64/sn/pci/pcibr.h:337:
+#define PCI_SLOT_DISABLE_CMPLT      0x04    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#785: FILE: include/asm-ia64/sn/pci/pcibr.h:338:
+#define PCI_SLOT_DISABLE_INCMPLT    0x08    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#786: FILE: include/asm-ia64/sn/pci/pcibr.h:339:
+#define PCI_SLOT_POWER_ON           0x10    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#787: FILE: include/asm-ia64/sn/pci/pcibr.h:340:
+#define PCI_SLOT_POWER_OFF          0x20    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#788: FILE: include/asm-ia64/sn/pci/pcibr.h:341:
+#define PCI_SLOT_IS_SYS_CRITICAL    0x40    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#789: FILE: include/asm-ia64/sn/pci/pcibr.h:342:
+#define PCI_SLOT_PCIBA_LOADED       0x80    $

ERROR:CODE_INDENT: code indent should use tabs where possible
#793: FILE: include/asm-ia64/sn/pci/pcibr.h:346:
+                                     PCI_SLOT_DISABLE_CMPLT | \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: include/asm-ia64/sn/pci/pcibr.h:346:
+                                     PCI_SLOT_DISABLE_CMPLT | \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#827: FILE: include/asm-ia64/sn/pci/pcibr.h:386:
+    PCI_REQ_SLOT_ELIGIBLE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#828: FILE: include/asm-ia64/sn/pci/pcibr.h:387:
+    PCI_REQ_SLOT_DISABLE$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#831: FILE: include/asm-ia64/sn/pci/pcibr.h:390:
 
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#841: FILE: include/asm-ia64/sn/pci/pcibr.h:460:
+    int                      req_slot;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#842: FILE: include/asm-ia64/sn/pci/pcibr.h:461:
+    union {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#843: FILE: include/asm-ia64/sn/pci/pcibr.h:462:
+        enum pcibr_slot_disable_action_e up;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: include/asm-ia64/sn/pci/pcibr.h:462:
+        enum pcibr_slot_disable_action_e up;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#844: FILE: include/asm-ia64/sn/pci/pcibr.h:463:
+        struct pcibr_slot_down_resp_s *down;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#844: FILE: include/asm-ia64/sn/pci/pcibr.h:463:
+        struct pcibr_slot_down_resp_s *down;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#845: FILE: include/asm-ia64/sn/pci/pcibr.h:464:
+        struct pcibr_slot_info_resp_s *query;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#845: FILE: include/asm-ia64/sn/pci/pcibr.h:464:
+        struct pcibr_slot_info_resp_s *query;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#846: FILE: include/asm-ia64/sn/pci/pcibr.h:465:
+        void                    *any;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#846: FILE: include/asm-ia64/sn/pci/pcibr.h:465:
+        void                    *any;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#847: FILE: include/asm-ia64/sn/pci/pcibr.h:466:
+    }                       req_respp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#848: FILE: include/asm-ia64/sn/pci/pcibr.h:467:
+    int                     req_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#852: FILE: include/asm-ia64/sn/pci/pcibr.h:471:
+    int                     resp_sub_errno;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#853: FILE: include/asm-ia64/sn/pci/pcibr.h:472:
+    char                    resp_l1_msg[PCI_L1_QSIZE + 1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#857: FILE: include/asm-ia64/sn/pci/pcibr.h:476:
+    int                     resp_sub_errno;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#858: FILE: include/asm-ia64/sn/pci/pcibr.h:477:
+    char                    resp_l1_msg[PCI_L1_QSIZE + 1];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#862: FILE: include/asm-ia64/sn/pci/pcibr.h:481:
+    pciio_slot_t              ^I     req_device;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#862: FILE: include/asm-ia64/sn/pci/pcibr.h:481:
+    pciio_slot_t              ^I     req_device;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#863: FILE: include/asm-ia64/sn/pci/pcibr.h:482:
+    struct pcibr_slot_enable_resp_s  req_resp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#867: FILE: include/asm-ia64/sn/pci/pcibr.h:486:
+    pciio_slot_t                     req_device;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#868: FILE: include/asm-ia64/sn/pci/pcibr.h:487:
+    enum pcibr_slot_disable_action_e req_action;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#869: FILE: include/asm-ia64/sn/pci/pcibr.h:488:
+    struct pcibr_slot_disable_resp_s req_resp;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#873: FILE: include/asm-ia64/sn/pci/pcibr.h:492:
+    pciio_slot_t              ^I     req_device;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#873: FILE: include/asm-ia64/sn/pci/pcibr.h:492:
+    pciio_slot_t              ^I     req_device;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#874: FILE: include/asm-ia64/sn/pci/pcibr.h:493:
+    struct pcibr_slot_info_resp_s    req_resp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#891: FILE: include/asm-ia64/sn/pci/pcibr_private.h:481:
+    struct pci_bus         *bs_pci_bus;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#950: FILE: include/asm-ia64/sn/sn_sal.h:660:
+ia64_sn_sysctl_iobrick_pci_op(nasid_t n, u64 connection_type, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#951: FILE: include/asm-ia64/sn/sn_sal.h:661:
+^I^I^I      u64 bus, slotid_t slot, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#957: FILE: include/asm-ia64/sn/sn_sal.h:667:
+	SAL_CALL_NOLOCK(rv, SN_SAL_SYSCTL_IOBRICK_PCI_OP, connection_type, n, action,
+		 bus, (u64) slot, 0, 0);

CHECK:SPACING: No space is necessary after a cast
#957: FILE: include/asm-ia64/sn/sn_sal.h:667:
+		 bus, (u64) slot, 0, 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#959: FILE: include/asm-ia64/sn/sn_sal.h:669:
+^I    ^Ireturn rv.v0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#959: FILE: include/asm-ia64/sn/sn_sal.h:669:
+^I    ^Ireturn rv.v0;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000301788.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 139 errors, 288 warnings, 26 checks, 838 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000301788.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
