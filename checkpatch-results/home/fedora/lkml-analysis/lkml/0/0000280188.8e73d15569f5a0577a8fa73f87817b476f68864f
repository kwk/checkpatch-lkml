WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
> > > > > That's a lot of hand-writing.  Thanks for doing that.  You can usually

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#67: 
> > hda: drive_cmd: status=0x51 { DriveReady SeekComplete Error }
    ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#68: 
> > hda: drive_cmd: error=0x04 { DriveStatusError }
    ^^^

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#69: 
> > end_request: I/O error, dev hda, sector 84667085
                                ^^^

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#72: 
> > hda: failed barrier write: sector=50beacd(good=0/bad=8)
    ^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#101: FILE: drivers/block/ll_rw_blk.c:2713:
+	 * extend uptodate bool to allow < 0 value to be direct io error
 	          ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#104: FILE: drivers/block/ll_rw_blk.c:2716:
+	if (end_io_error(uptodate))
 	                 ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#105: FILE: drivers/block/ll_rw_blk.c:2717:
+		error = !uptodate ? -EIO : uptodate;
 		         ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#105: FILE: drivers/block/ll_rw_blk.c:2717:
+		error = !uptodate ? -EIO : uptodate;
 		                           ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#124: FILE: drivers/block/ll_rw_blk.c:2809:
+ * @uptodate: 1 for success, 0 for I/O error, < 0 for specific error
     ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#133: FILE: drivers/block/ll_rw_blk.c:2830:
+ * @uptodate: 1 for success, 0 for I/O error, < 0 for specific error
     ^^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#175: FILE: drivers/ide/ide-disk.c:1733:
+	if (ide_id_has_flush_cache_ext(id))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#177: FILE: drivers/ide/ide-disk.c:1735:
+	else {

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#182: FILE: drivers/ide/ide-disk.c:1740:
+				printk("%s: drive is buggy, no support for FLUSH_CACHE_EXT with lba48\n", drive->name);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#182: FILE: drivers/ide/ide-disk.c:1740:
+				printk("%s: drive is buggy, no support for FLUSH_CACHE_EXT with lba48\n", drive->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#189: FILE: drivers/ide/ide-disk.c:1747:
+	printk("%s: cache flushes %ssupported\n", drive->name, barrier ? "" : "not ");

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#214: FILE: drivers/ide/ide-io.c:118:
+	if (blk_noretry_request(rq) && end_io_error(uptodate))
 	                                            ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#218: FILE: drivers/ide/ide-io.c:121:
+	if (!blk_fs_request(rq) && end_io_error(uptodate) && !rq->errors)
 	                                        ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#252: FILE: drivers/ide/ide-io.c:285:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#258: FILE: drivers/ide/ide-io.c:291:
+		printk(KERN_ERR "%s: barrier support doesn't work\n", drive->name);

CHECK:BRACES: braces {} should be used on all arms of this statement
#267: FILE: drivers/ide/ide-io.c:300:
+		if (blk_barrier_postflush(rq)) {
[...]
-	if (bad_sectors)
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sector >= real_rq->hard_sector'
#275: FILE: drivers/ide/ide-io.c:303:
+			if ((sector >= real_rq->hard_sector) &&
+			    (sector < real_rq->hard_sector + real_rq->hard_nr_sectors))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: Unbalanced braces around else statement
#278: FILE: drivers/ide/ide-io.c:306:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#287: FILE: drivers/ide/ide-io.c:315:
+		printk(KERN_ERR "%s: failed barrier write: "

WARNING:SPLIT_STRING: quoted string split across lines
#288: FILE: drivers/ide/ide-io.c:316:
+		printk(KERN_ERR "%s: failed barrier write: "
+				"sector=%Lx(good=%d/bad=%d)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#288: FILE: drivers/ide/ide-io.c:316:
+				"sector=%Lx(good=%d/bad=%d)\n",

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#310: FILE: include/linux/blkdev.h:575:
+ * end_that_request_first/chunk() takes an uptodate argument. we account
                                            ^^^^^^^^

WARNING:TYPO_SPELLING: 'compatability' may be misspelled - perhaps 'compatibility'?
#311: FILE: include/linux/blkdev.h:576:
+ * any value <= as an io error. 0 means -EIO for compatability reasons,
                                                  ^^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#312: FILE: include/linux/blkdev.h:577:
+ * any other < 0 value is the direct error type. An uptodate value of
                                                     ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#315: FILE: include/linux/blkdev.h:580:
+#define end_io_error(uptodate)	(unlikely((uptodate) <= 0))
                      ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#315: FILE: include/linux/blkdev.h:580:
+#define end_io_error(uptodate)	(unlikely((uptodate) <= 0))
                               	           ^^^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000280188.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 25 warnings, 5 checks, 218 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000280188.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
