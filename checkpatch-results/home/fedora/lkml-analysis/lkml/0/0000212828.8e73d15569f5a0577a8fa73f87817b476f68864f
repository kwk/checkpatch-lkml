WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
> A simplistic approach would be to add eight or so ulongs into struct page,

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#include <stdio.h>

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
#include <stdlib.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#include <sys/types.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
#include <sys/stat.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
#include <fcntl.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
#include <unistd.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
#include <string.h>

WARNING:IF_1: Consider removing the #if 1 and its #endif
#191: FILE: fs/proc/proc_misc.c:537:
+#if 1

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: fs/proc/proc_misc.c:551:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: fs/proc/proc_misc.c:562:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: fs/proc/proc_misc.c:570:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: fs/proc/proc_misc.c:575:
+^I^Iret += snprintf(kbuf + ret, count - ret, "[0x%lx] %s+%lu\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: fs/proc/proc_misc.c:578:
+^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#233: FILE: fs/proc/proc_misc.c:579:
+	ret += snprintf(kbuf + ret, count -ret, "\n");
 	                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: fs/proc/proc_misc.c:580:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: fs/proc/proc_misc.c:583:
+^I$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#242: FILE: fs/proc/proc_misc.c:588:
+static struct file_operations proc_page_owner_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:IF_1: Consider removing the #if 1 and its #endif
#256: FILE: fs/proc/proc_misc.c:671:
+#if 1

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#257: FILE: fs/proc/proc_misc.c:672:
+	entry = create_proc_entry("page_owner", S_IWUSR | S_IRUGO, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: include/linux/mm.h:263:
+#if 1 $

WARNING:IF_1: Consider removing the #if 1 and its #endif
#271: FILE: include/linux/mm.h:263:
+#if 1 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#285: FILE: mm/page_alloc.c:106:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: mm/page_alloc.c:694:
+^Istruct thread_info *tinfo = (struct thread_info *) $

CHECK:SPACING: No space is necessary after a cast
#303: FILE: mm/page_alloc.c:694:
+	struct thread_info *tinfo = (struct thread_info *) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: mm/page_alloc.c:696:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: mm/page_alloc.c:698:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: mm/page_alloc.c:707:
+#else^I$

CHECK:SPACING: No space is necessary after a cast
#343: FILE: mm/page_alloc.c:865:
+	page->order = (int) order;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: mm/page_alloc.c:872:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000212828.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 13 warnings, 4 checks, 168 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000212828.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
