WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
diff -urpN --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal .26895-linux-2.5.38/arch/i386/kernel/apm.c .26895-linux-2.5.38.updated/arch/i386/kernel/apm.c

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#97: FILE: arch/i386/kernel/apm.c:1985:
+PARAM(debug, bool, S_IWUSR|S_IRUGO);
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#97: FILE: arch/i386/kernel/apm.c:1985:
+PARAM(debug, bool, S_IWUSR|S_IRUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#100: FILE: arch/i386/kernel/apm.c:1987:
+PARAM(power_off, bool, S_IWUSR|S_IRUGO);
                               ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#100: FILE: arch/i386/kernel/apm.c:1987:
+PARAM(power_off, bool, S_IWUSR|S_IRUGO);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#106: FILE: arch/i386/kernel/apm.c:1989:
+PARAM(bounce_interval, int, S_IWUSR|S_IRUGO);
                                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#106: FILE: arch/i386/kernel/apm.c:1989:
+PARAM(bounce_interval, int, S_IWUSR|S_IRUGO);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#108: FILE: arch/i386/kernel/apm.c:1991:
+PARAM(allow_ints, bool, S_IWUSR|S_IRUGO);
                                ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#108: FILE: arch/i386/kernel/apm.c:1991:
+PARAM(allow_ints, bool, S_IWUSR|S_IRUGO);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#111: FILE: arch/i386/kernel/apm.c:1993:
+PARAM(broken_psr, bool, S_IWUSR|S_IRUGO);
                                ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#111: FILE: arch/i386/kernel/apm.c:1993:
+PARAM(broken_psr, bool, S_IWUSR|S_IRUGO);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#114: FILE: arch/i386/kernel/apm.c:1995:
+PARAM(realmode_power_off, bool, S_IWUSR|S_IRUGO);
                                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#114: FILE: arch/i386/kernel/apm.c:1995:
+PARAM(realmode_power_off, bool, S_IWUSR|S_IRUGO);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#118: FILE: arch/i386/kernel/apm.c:1998:
+PARAM(idle_threshold, int, S_IWUSR|S_IRUGO);
                                   ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#118: FILE: arch/i386/kernel/apm.c:1998:
+PARAM(idle_threshold, int, S_IWUSR|S_IRUGO);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#122: FILE: arch/i386/kernel/apm.c:2001:
+PARAM(idle_period, int, S_IWUSR|S_IRUGO);
                                ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#122: FILE: arch/i386/kernel/apm.c:2001:
+PARAM(idle_period, int, S_IWUSR|S_IRUGO);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#350: FILE: arch/i386/kernel/process.c:147:
+static int __init idle_setup (const char *str, struct kernel_param *kp)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#436: FILE: arch/i386/pci/common.c:141:
+char * __devinit  pcibios_setup(const char *str)

ERROR:POINTER_LOCATION: "foo * __devinit  bar" should be "foo * __devinit bar"
#436: FILE: arch/i386/pci/common.c:141:
+char * __devinit  pcibios_setup(const char *str)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#502: FILE: drivers/char/lp.c:763:
+static int __init lp_setup (const char *str, struct kernel_param *kp)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#564: FILE: drivers/ide/ide.c:2685:
+static int __init match_parm (const char *s, const char *keywords[], int vals[], int max_vals)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "keywords"
#584: FILE: drivers/ide/ide.c:2695:
+	if (keywords != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "keywords"
#585: FILE: drivers/ide/ide.c:2696:
+		for (i = 0; *keywords != NULL; ++i) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#587: FILE: drivers/ide/ide.c:2698:
+				return -(i+1);
 				          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#639: FILE: drivers/ide/ide.c:2805:
+int __init ide_setup (const char *s, struct kernel_param *kp)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#696: FILE: drivers/ide/ide.c:2848:
+	if (kp->name[0] == 'h' && kp->name[1] == 'd'
+	    && kp->name[2] >= 'a' && kp->name[2] <= max_drive) {

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#775: FILE: drivers/ide/ide.c:3102:
+				return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#787: FILE: drivers/ide/ide.c:3112:
+	return -ENOSYS;

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#833: FILE: drivers/ide/ide.c:3585:
+PARAM_CALL(hda, ide_setup, NULL, NULL, 000);
            ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#942: FILE: drivers/pci/pci.c:627:
+static int __devinit pci_setup(const char *str, struct kernel_param *kp)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1011: FILE: fs/devfs/base.c:2251:
+static int __init devfs_setup (const char *str, struct kernel_param *kp)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1020: FILE: fs/devfs/base.c:2307:
+    return 0;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1130: FILE: include/asm-i386/bugs.h:38:
 }
+PARAM_CALL(no_hlt, no_halt, NULL, NULL, 000);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1181: FILE: include/linux/netdevice.h:461:
+extern int			netdev_boot_setup_add(const char *name, struct ifmap *map);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1193: FILE: include/linux/pci.h:511:
+char *pcibios_setup (const char *str);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1254: FILE: init/do_mounts.c:67:
 }
+PARAM_CALL(load_ramdisk, load_ramdisk, NULL, NULL, 000);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1261: FILE: init/do_mounts.c:71:
+	if (str) return -EINVAL;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1272: FILE: init/do_mounts.c:78:
+	if (str) return -EINVAL;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1387: FILE: init/main.c:124:
 }
+PARAM_CALL(nosmp, nosmp, NULL, NULL, 000);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1420: FILE: init/main.c:132:
+extern struct kernel_param __setup_start, __setup_end;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1421: FILE: init/main.c:133:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1421: FILE: init/main.c:133:
+ $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430119.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 23 warnings, 16 checks, 1504 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430119.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
