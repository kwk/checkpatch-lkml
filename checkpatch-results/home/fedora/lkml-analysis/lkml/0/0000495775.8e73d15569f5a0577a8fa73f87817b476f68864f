WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#83: 
diff -Nru linux-2.5.0.vanilla/arch/i386/kernel/entry.S linux-2.5.0.chax/arch/i386/kernel/entry.S

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#122: FILE: arch/i386/kernel/init_task.c:23:
 	__attribute__((__section__(".data.init_task"))) =
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#124: FILE: arch/i386/kernel/init_task.c:25:
+				tskptr: (unsigned long) &init_task_union.x.task ,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#124: FILE: arch/i386/kernel/init_task.c:25:
+				tskptr: (unsigned long) &init_task_union.x.task ,
 				                                                ^

WARNING:INDENTED_LABEL: labels should not be indented
#124: FILE: arch/i386/kernel/init_task.c:25:
+				tskptr: (unsigned long) &init_task_union.x.task ,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#125: FILE: arch/i386/kernel/init_task.c:26:
+				__cachepad: { 0, },
 				          ^

WARNING:INDENTED_LABEL: labels should not be indented
#125: FILE: arch/i386/kernel/init_task.c:26:
+				__cachepad: { 0, },

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#126: FILE: arch/i386/kernel/init_task.c:27:
+				task: INIT_TASK(init_task_union.x.task)
 				    ^

WARNING:INDENTED_LABEL: labels should not be indented
#126: FILE: arch/i386/kernel/init_task.c:27:
+				task: INIT_TASK(init_task_union.x.task)

CHECK:SPACING: No space is necessary after a cast
#140: FILE: arch/i386/kernel/process.c:584:
+	childregs = ((struct pt_regs *) (THREAD_SIZE + ((unsigned long) p & ~8191UL))) - 1;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#149: FILE: arch/i386/kernel/process.c:825:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#153: FILE: arch/i386/kernel/process.c:829:
+	unsigned long tskb = __get_free_pages(GFP_KERNEL, 1), tsk;
+	tsk = tskb | ((tskb >> 13) & 0x00000060) | SMP_CACHE_BYTES;

CHECK:SPACING: No space is necessary after a cast
#154: FILE: arch/i386/kernel/process.c:830:
+	*(unsigned long *) tskb = tsk;

CHECK:SPACING: No space is necessary after a cast
#155: FILE: arch/i386/kernel/process.c:831:
+	return (struct task_struct *) tsk;

CHECK:SPACING: No space is necessary after a cast
#160: FILE: arch/i386/kernel/process.c:836:
+	free_pages((unsigned long) (p) & ~8191UL, 1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#201: FILE: include/asm-i386/current.h:9:
+	unsigned long *tskptr;
+	__asm__("andl %%esp,%0; ":"=r" (tskptr) : "0" (~8191UL));

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#201: FILE: include/asm-i386/current.h:9:
+	__asm__("andl %%esp,%0; ":"=r" (tskptr) : "0" (~8191UL));
 	                         ^

CHECK:SPACING: No space is necessary after a cast
#202: FILE: include/asm-i386/current.h:10:
+	return (struct task_struct *) *tskptr;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#236: FILE: include/asm-i386/processor.h:448:
+#define KSTK_EIP(tsk)	(((unsigned long *)(4096+(unsigned long)(tsk) & ~8191UL))[1019])
                      	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#237: FILE: include/asm-i386/processor.h:449:
+#define KSTK_ESP(tsk)	(((unsigned long *)(4096+(unsigned long)(tsk) & ~8191UL))[1022])
                      	                        ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#243: FILE: include/asm-i386/processor.h:453:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#244: FILE: include/asm-i386/processor.h:454:
+extern struct task_struct *alloc_task_struct(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#245: FILE: include/asm-i386/processor.h:455:
+extern void free_task_struct(struct task_struct *p);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#264: FILE: include/linux/sched.h:513:
+		unsigned long __cachepad[SMP_CACHE_BYTES/sizeof(long) - 1];
 		                                        ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000495775.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 6 warnings, 14 checks, 149 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000495775.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
