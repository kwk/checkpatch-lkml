WARNING:TYPO_SPELLING: 'asside' may be misspelled - perhaps 'aside'?
#49: 
No functionality or code changes asside from adding/removing
                                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'declartions' may be misspelled - perhaps 'declarations'?
#50: 
forward declartions are implemented in this patch.
        ^^^^^^^^^^^

ERROR:SPACING: space required before the open parenthesis '('
#235: FILE: fs/proc/base.c:985:
+	if(dumpable == 1)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#265: FILE: fs/proc/base.c:991:
+static struct inode *proc_pid_make_inode(struct super_block * sb, struct task_struct *task, int ino)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#267: FILE: fs/proc/base.c:993:
+	struct inode * inode;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: fs/proc/base.c:997:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#294: FILE: fs/proc/base.c:1004:
+	inode->i_mtime = inode->i_atime = inode->i_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#319: FILE: fs/proc/base.c:1026:
+	iput(inode);
 	^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#336: FILE: fs/proc/base.c:1040:
+static int pid_revalidate(struct dentry *dentry, struct nameidata *nd)
                                                                    ^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#412: FILE: fs/proc/base.c:1060:
+static int pid_delete_dentry(struct dentry * dentry)

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#426: FILE: fs/proc/base.c:1069:
+static struct dentry_operations pid_dentry_operations =

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#447: FILE: fs/proc/base.c:1077:
+static unsigned name_to_int(struct dentry *dentry)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#453: FILE: fs/proc/base.c:1081:
+	unsigned n = 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#480: FILE: fs/proc/base.c:1086:
+		unsigned c = *name++ - '0';

WARNING:LINE_SPACING: Missing a blank line after declarations
#481: FILE: fs/proc/base.c:1087:
+		unsigned c = *name++ - '0';
+		if (c > 9)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#483: FILE: fs/proc/base.c:1089:
+		if (n >= (~0U-9)/10)
 		             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#483: FILE: fs/proc/base.c:1089:
+		if (n >= (~0U-9)/10)
 		                ^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#617: FILE: fs/proc/base.c:1218:
+	iput(inode);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#621: FILE: fs/proc/base.c:1222:
+static int proc_readfd(struct file * filp, void * dirent, filldir_t filldir)
                                      ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#621: FILE: fs/proc/base.c:1222:
+static int proc_readfd(struct file * filp, void * dirent, filldir_t filldir)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#621: FILE: fs/proc/base.c:1222:
+static int proc_readfd(struct file * filp, void * dirent, filldir_t filldir)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#629: FILE: fs/proc/base.c:1230:
+	struct files_struct * files;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#639: FILE: fs/proc/base.c:1240:
+	switch (fd) {
+		case 0:
[...]
+		case 1:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#655: FILE: fs/proc/base.c:1256:
+			for (fd = filp->f_pos-2;
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#658: FILE: fs/proc/base.c:1259:
+				unsigned int i,j;
 				              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#673: FILE: fs/proc/base.c:1274:
+				if (filldir(dirent, buf+j, PROC_NUMBUF-j, fd+2, ino, DT_LNK) < 0) {
 				                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#673: FILE: fs/proc/base.c:1274:
+				if (filldir(dirent, buf+j, PROC_NUMBUF-j, fd+2, ino, DT_LNK) < 0) {
 				                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#673: FILE: fs/proc/base.c:1274:
+				if (filldir(dirent, buf+j, PROC_NUMBUF-j, fd+2, ino, DT_LNK) < 0) {
 				                                            ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#721: FILE: fs/proc/base.c:1301:
+static struct file_operations proc_task_operations;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#722: FILE: fs/proc/base.c:1302:
+static struct inode_operations proc_task_inode_operations;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#799: FILE: fs/proc/base.c:1305:
+static struct file_operations proc_pid_attr_operations;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#809: FILE: fs/proc/base.c:1513:
+static int proc_pident_readdir(struct file *filp,
                                             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#810: FILE: fs/proc/base.c:1514:
+static int proc_pident_readdir(struct file *filp,
+		void *dirent, filldir_t filldir,

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#837: FILE: fs/proc/base.c:1541:
+		/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#844: FILE: fs/proc/base.c:1548:
+		/* fall through */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#869: FILE: fs/proc/base.c:1571:
+static ssize_t proc_pid_attr_read(struct file * file, char __user * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#869: FILE: fs/proc/base.c:1571:
+static ssize_t proc_pid_attr_read(struct file * file, char __user * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#872: FILE: fs/proc/base.c:1574:
+	struct inode * inode = file->f_dentry->d_inode;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#884: FILE: fs/proc/base.c:1586:
+	if (!(page = __get_free_page(GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#887: FILE: fs/proc/base.c:1589:
+^Ilength = security_getprocattr(task, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#888: FILE: fs/proc/base.c:1590:
+^I^I^I^I      (char*)file->f_dentry->d_name.name, $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#888: FILE: fs/proc/base.c:1590:
+				      (char*)file->f_dentry->d_name.name, 

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#889: FILE: fs/proc/base.c:1591:
+				      (void*)page, count);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#903: FILE: fs/proc/base.c:1601:
+static ssize_t proc_pid_attr_write(struct file * file, const char __user * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#903: FILE: fs/proc/base.c:1601:
+static ssize_t proc_pid_attr_write(struct file * file, const char __user * buf,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#905: FILE: fs/proc/base.c:1603:
+{ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#906: FILE: fs/proc/base.c:1604:
+	struct inode * inode = file->f_dentry->d_inode;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#907: FILE: fs/proc/base.c:1605:
+^Ichar *page; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#908: FILE: fs/proc/base.c:1606:
+^Issize_t length; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#909: FILE: fs/proc/base.c:1607:
+^Istruct task_struct *task = get_proc_task(inode); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#918: FILE: fs/proc/base.c:1612:
+^Iif (count > PAGE_SIZE) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#919: FILE: fs/proc/base.c:1613:
+^I^Icount = PAGE_SIZE; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#929: FILE: fs/proc/base.c:1621:
+^Ipage = (char*)__get_free_page(GFP_USER); $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#929: FILE: fs/proc/base.c:1621:
+	page = (char*)__get_free_page(GFP_USER); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#930: FILE: fs/proc/base.c:1622:
+^Iif (!page) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#933: FILE: fs/proc/base.c:1625:
+^Ilength = -EFAULT; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#934: FILE: fs/proc/base.c:1626:
+^Iif (copy_from_user(page, buf, count)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#937: FILE: fs/proc/base.c:1629:
+^Ilength = security_setprocattr(task, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#938: FILE: fs/proc/base.c:1630:
+^I^I^I^I      (char*)file->f_dentry->d_name.name, $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#938: FILE: fs/proc/base.c:1630:
+				      (char*)file->f_dentry->d_name.name, 

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#939: FILE: fs/proc/base.c:1631:
+				      (void*)page, count);

CHECK:SPACING: No space is necessary after a cast
#941: FILE: fs/proc/base.c:1633:
+	free_page((unsigned long) page);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#946: FILE: fs/proc/base.c:1638:
+} $

WARNING:CONST_STRUCT: struct file_operations should normally be const
#948: FILE: fs/proc/base.c:1640:
+static struct file_operations proc_pid_attr_operations = {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#956: FILE: fs/proc/base.c:1646:
+	E(PROC_TGID_ATTR_CURRENT,  "current",  S_IFREG|S_IRUGO|S_IWUGO),
 	                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#956: FILE: fs/proc/base.c:1646:
+	E(PROC_TGID_ATTR_CURRENT,  "current",  S_IFREG|S_IRUGO|S_IWUGO),
 	                                                      ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#956: FILE: fs/proc/base.c:1646:
+	E(PROC_TGID_ATTR_CURRENT,  "current",  S_IFREG|S_IRUGO|S_IWUGO),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#957: FILE: fs/proc/base.c:1647:
+	E(PROC_TGID_ATTR_PREV,     "prev",     S_IFREG|S_IRUGO),
 	                                              ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#957: FILE: fs/proc/base.c:1647:
+	E(PROC_TGID_ATTR_PREV,     "prev",     S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#958: FILE: fs/proc/base.c:1648:
+	E(PROC_TGID_ATTR_EXEC,     "exec",     S_IFREG|S_IRUGO|S_IWUGO),
 	                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#958: FILE: fs/proc/base.c:1648:
+	E(PROC_TGID_ATTR_EXEC,     "exec",     S_IFREG|S_IRUGO|S_IWUGO),
 	                                                      ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#958: FILE: fs/proc/base.c:1648:
+	E(PROC_TGID_ATTR_EXEC,     "exec",     S_IFREG|S_IRUGO|S_IWUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#959: FILE: fs/proc/base.c:1649:
+	E(PROC_TGID_ATTR_FSCREATE, "fscreate", S_IFREG|S_IRUGO|S_IWUGO),
 	                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#959: FILE: fs/proc/base.c:1649:
+	E(PROC_TGID_ATTR_FSCREATE, "fscreate", S_IFREG|S_IRUGO|S_IWUGO),
 	                                                      ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#959: FILE: fs/proc/base.c:1649:
+	E(PROC_TGID_ATTR_FSCREATE, "fscreate", S_IFREG|S_IRUGO|S_IWUGO),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#960: FILE: fs/proc/base.c:1650:
+	{0,0,NULL,0}
 	  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#960: FILE: fs/proc/base.c:1650:
+	{0,0,NULL,0}
 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#960: FILE: fs/proc/base.c:1650:
+	{0,0,NULL,0}
 	         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#962: FILE: fs/proc/base.c:1652:
+};
+static struct pid_entry tid_attr_stuff[] = {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#963: FILE: fs/proc/base.c:1653:
+	E(PROC_TID_ATTR_CURRENT,   "current",  S_IFREG|S_IRUGO|S_IWUGO),
 	                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#963: FILE: fs/proc/base.c:1653:
+	E(PROC_TID_ATTR_CURRENT,   "current",  S_IFREG|S_IRUGO|S_IWUGO),
 	                                                      ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#963: FILE: fs/proc/base.c:1653:
+	E(PROC_TID_ATTR_CURRENT,   "current",  S_IFREG|S_IRUGO|S_IWUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#964: FILE: fs/proc/base.c:1654:
+	E(PROC_TID_ATTR_PREV,      "prev",     S_IFREG|S_IRUGO),
 	                                              ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#964: FILE: fs/proc/base.c:1654:
+	E(PROC_TID_ATTR_PREV,      "prev",     S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#965: FILE: fs/proc/base.c:1655:
+	E(PROC_TID_ATTR_EXEC,      "exec",     S_IFREG|S_IRUGO|S_IWUGO),
 	                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#965: FILE: fs/proc/base.c:1655:
+	E(PROC_TID_ATTR_EXEC,      "exec",     S_IFREG|S_IRUGO|S_IWUGO),
 	                                                      ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#965: FILE: fs/proc/base.c:1655:
+	E(PROC_TID_ATTR_EXEC,      "exec",     S_IFREG|S_IRUGO|S_IWUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#966: FILE: fs/proc/base.c:1656:
+	E(PROC_TID_ATTR_FSCREATE,  "fscreate", S_IFREG|S_IRUGO|S_IWUGO),
 	                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#966: FILE: fs/proc/base.c:1656:
+	E(PROC_TID_ATTR_FSCREATE,  "fscreate", S_IFREG|S_IRUGO|S_IWUGO),
 	                                                      ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#966: FILE: fs/proc/base.c:1656:
+	E(PROC_TID_ATTR_FSCREATE,  "fscreate", S_IFREG|S_IRUGO|S_IWUGO),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#967: FILE: fs/proc/base.c:1657:
+	{0,0,NULL,0}
 	  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#967: FILE: fs/proc/base.c:1657:
+	{0,0,NULL,0}
 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#967: FILE: fs/proc/base.c:1657:
+	{0,0,NULL,0}
 	         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#982: FILE: fs/proc/base.c:1732:
+	E(PROC_TGID_TASK,      "task",    S_IFDIR|S_IRUGO|S_IXUGO),
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#982: FILE: fs/proc/base.c:1732:
+	E(PROC_TGID_TASK,      "task",    S_IFDIR|S_IRUGO|S_IXUGO),
 	                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IXUGO' are not preferred. Consider using octal permissions '0555'.
#982: FILE: fs/proc/base.c:1732:
+	E(PROC_TGID_TASK,      "task",    S_IFDIR|S_IRUGO|S_IXUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#983: FILE: fs/proc/base.c:1733:
+	E(PROC_TGID_FD,        "fd",      S_IFDIR|S_IRUSR|S_IXUSR),
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#983: FILE: fs/proc/base.c:1733:
+	E(PROC_TGID_FD,        "fd",      S_IFDIR|S_IRUSR|S_IXUSR),
 	                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IXUSR' are not preferred. Consider using octal permissions '0500'.
#983: FILE: fs/proc/base.c:1733:
+	E(PROC_TGID_FD,        "fd",      S_IFDIR|S_IRUSR|S_IXUSR),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#984: FILE: fs/proc/base.c:1734:
+	E(PROC_TGID_ENVIRON,   "environ", S_IFREG|S_IRUSR),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#984: FILE: fs/proc/base.c:1734:
+	E(PROC_TGID_ENVIRON,   "environ", S_IFREG|S_IRUSR),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#985: FILE: fs/proc/base.c:1735:
+	E(PROC_TGID_AUXV,      "auxv",	  S_IFREG|S_IRUSR),
 	                              	         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#985: FILE: fs/proc/base.c:1735:
+	E(PROC_TGID_AUXV,      "auxv",	  S_IFREG|S_IRUSR),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#986: FILE: fs/proc/base.c:1736:
+	E(PROC_TGID_STATUS,    "status",  S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#986: FILE: fs/proc/base.c:1736:
+	E(PROC_TGID_STATUS,    "status",  S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#987: FILE: fs/proc/base.c:1737:
+	E(PROC_TGID_CMDLINE,   "cmdline", S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#987: FILE: fs/proc/base.c:1737:
+	E(PROC_TGID_CMDLINE,   "cmdline", S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#988: FILE: fs/proc/base.c:1738:
+	E(PROC_TGID_STAT,      "stat",    S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#988: FILE: fs/proc/base.c:1738:
+	E(PROC_TGID_STAT,      "stat",    S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#989: FILE: fs/proc/base.c:1739:
+	E(PROC_TGID_STATM,     "statm",   S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#989: FILE: fs/proc/base.c:1739:
+	E(PROC_TGID_STATM,     "statm",   S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#990: FILE: fs/proc/base.c:1740:
+	E(PROC_TGID_MAPS,      "maps",    S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#990: FILE: fs/proc/base.c:1740:
+	E(PROC_TGID_MAPS,      "maps",    S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#992: FILE: fs/proc/base.c:1742:
+	E(PROC_TGID_NUMA_MAPS, "numa_maps", S_IFREG|S_IRUGO),
 	                                           ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#992: FILE: fs/proc/base.c:1742:
+	E(PROC_TGID_NUMA_MAPS, "numa_maps", S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#994: FILE: fs/proc/base.c:1744:
+	E(PROC_TGID_MEM,       "mem",     S_IFREG|S_IRUSR|S_IWUSR),
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#994: FILE: fs/proc/base.c:1744:
+	E(PROC_TGID_MEM,       "mem",     S_IFREG|S_IRUSR|S_IWUSR),
 	                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#994: FILE: fs/proc/base.c:1744:
+	E(PROC_TGID_MEM,       "mem",     S_IFREG|S_IRUSR|S_IWUSR),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#996: FILE: fs/proc/base.c:1746:
+	E(PROC_TGID_SECCOMP,   "seccomp", S_IFREG|S_IRUSR|S_IWUSR),
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#996: FILE: fs/proc/base.c:1746:
+	E(PROC_TGID_SECCOMP,   "seccomp", S_IFREG|S_IRUSR|S_IWUSR),
 	                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#996: FILE: fs/proc/base.c:1746:
+	E(PROC_TGID_SECCOMP,   "seccomp", S_IFREG|S_IRUSR|S_IWUSR),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#998: FILE: fs/proc/base.c:1748:
+	E(PROC_TGID_CWD,       "cwd",     S_IFLNK|S_IRWXUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#998: FILE: fs/proc/base.c:1748:
+	E(PROC_TGID_CWD,       "cwd",     S_IFLNK|S_IRWXUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#999: FILE: fs/proc/base.c:1749:
+	E(PROC_TGID_ROOT,      "root",    S_IFLNK|S_IRWXUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#999: FILE: fs/proc/base.c:1749:
+	E(PROC_TGID_ROOT,      "root",    S_IFLNK|S_IRWXUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1000: FILE: fs/proc/base.c:1750:
+	E(PROC_TGID_EXE,       "exe",     S_IFLNK|S_IRWXUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#1000: FILE: fs/proc/base.c:1750:
+	E(PROC_TGID_EXE,       "exe",     S_IFLNK|S_IRWXUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1001: FILE: fs/proc/base.c:1751:
+	E(PROC_TGID_MOUNTS,    "mounts",  S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1001: FILE: fs/proc/base.c:1751:
+	E(PROC_TGID_MOUNTS,    "mounts",  S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1003: FILE: fs/proc/base.c:1753:
+	E(PROC_TGID_SMAPS,     "smaps",   S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1003: FILE: fs/proc/base.c:1753:
+	E(PROC_TGID_SMAPS,     "smaps",   S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1006: FILE: fs/proc/base.c:1756:
+	E(PROC_TGID_ATTR,      "attr",    S_IFDIR|S_IRUGO|S_IXUGO),
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1006: FILE: fs/proc/base.c:1756:
+	E(PROC_TGID_ATTR,      "attr",    S_IFDIR|S_IRUGO|S_IXUGO),
 	                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IXUGO' are not preferred. Consider using octal permissions '0555'.
#1006: FILE: fs/proc/base.c:1756:
+	E(PROC_TGID_ATTR,      "attr",    S_IFDIR|S_IRUGO|S_IXUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1009: FILE: fs/proc/base.c:1759:
+	E(PROC_TGID_WCHAN,     "wchan",   S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1009: FILE: fs/proc/base.c:1759:
+	E(PROC_TGID_WCHAN,     "wchan",   S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1012: FILE: fs/proc/base.c:1762:
+	E(PROC_TGID_SCHEDSTAT, "schedstat", S_IFREG|S_IRUGO),
 	                                           ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1012: FILE: fs/proc/base.c:1762:
+	E(PROC_TGID_SCHEDSTAT, "schedstat", S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1015: FILE: fs/proc/base.c:1765:
+	E(PROC_TGID_CPUSET,    "cpuset",  S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1015: FILE: fs/proc/base.c:1765:
+	E(PROC_TGID_CPUSET,    "cpuset",  S_IFREG|S_IRUGO),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1017: FILE: fs/proc/base.c:1767:
+	E(PROC_TGID_OOM_SCORE, "oom_score",S_IFREG|S_IRUGO),
 	                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1017: FILE: fs/proc/base.c:1767:
+	E(PROC_TGID_OOM_SCORE, "oom_score",S_IFREG|S_IRUGO),
 	                                          ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1017: FILE: fs/proc/base.c:1767:
+	E(PROC_TGID_OOM_SCORE, "oom_score",S_IFREG|S_IRUGO),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1018: FILE: fs/proc/base.c:1768:
+	E(PROC_TGID_OOM_ADJUST,"oom_adj", S_IFREG|S_IRUGO|S_IWUSR),
 	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1018: FILE: fs/proc/base.c:1768:
+	E(PROC_TGID_OOM_ADJUST,"oom_adj", S_IFREG|S_IRUGO|S_IWUSR),
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1018: FILE: fs/proc/base.c:1768:
+	E(PROC_TGID_OOM_ADJUST,"oom_adj", S_IFREG|S_IRUGO|S_IWUSR),
 	                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1018: FILE: fs/proc/base.c:1768:
+	E(PROC_TGID_OOM_ADJUST,"oom_adj", S_IFREG|S_IRUGO|S_IWUSR),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1020: FILE: fs/proc/base.c:1770:
+	E(PROC_TGID_LOGINUID, "loginuid", S_IFREG|S_IWUSR|S_IRUGO),
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1020: FILE: fs/proc/base.c:1770:
+	E(PROC_TGID_LOGINUID, "loginuid", S_IFREG|S_IWUSR|S_IRUGO),
 	                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#1020: FILE: fs/proc/base.c:1770:
+	E(PROC_TGID_LOGINUID, "loginuid", S_IFREG|S_IWUSR|S_IRUGO),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1022: FILE: fs/proc/base.c:1772:
+	{0,0,NULL,0}
 	  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1022: FILE: fs/proc/base.c:1772:
+	{0,0,NULL,0}
 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1022: FILE: fs/proc/base.c:1772:
+	{0,0,NULL,0}
 	         ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1025: FILE: fs/proc/base.c:1775:
+static int proc_tgid_base_readdir(struct file * filp,
                                                 ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1025: FILE: fs/proc/base.c:1775:
+static int proc_tgid_base_readdir(struct file * filp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1026: FILE: fs/proc/base.c:1776:
+static int proc_tgid_base_readdir(struct file * filp,
+			     void * dirent, filldir_t filldir)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1026: FILE: fs/proc/base.c:1776:
+			     void * dirent, filldir_t filldir)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1028: FILE: fs/proc/base.c:1778:
+	return proc_pident_readdir(filp,dirent,filldir,
 	                           ^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1028: FILE: fs/proc/base.c:1778:
+	return proc_pident_readdir(filp,dirent,filldir,
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1028: FILE: fs/proc/base.c:1778:
+	return proc_pident_readdir(filp,dirent,filldir,
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1029: FILE: fs/proc/base.c:1779:
+				   tgid_base_stuff,ARRAY_SIZE(tgid_base_stuff));
 				                  ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1032: FILE: fs/proc/base.c:1782:
+static struct file_operations proc_tgid_base_operations = {

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1037: FILE: fs/proc/base.c:1787:
+static struct dentry *proc_tgid_base_lookup(struct inode *dir, struct dentry *dentry, struct nameidata *nd){
                                                                                                         ^^

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1037: FILE: fs/proc/base.c:1787:
+static struct dentry *proc_tgid_base_lookup(struct inode *dir, struct dentry *dentry, struct nameidata *nd){

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1037: FILE: fs/proc/base.c:1787:
+static struct dentry *proc_tgid_base_lookup(struct inode *dir, struct dentry *dentry, struct nameidata *nd){

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#1037: FILE: fs/proc/base.c:1787:
+static struct dentry *proc_tgid_base_lookup(struct inode *dir, struct dentry *dentry, struct nameidata *nd){

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#1041: FILE: fs/proc/base.c:1791:
+static struct inode_operations proc_tgid_base_inode_operations = {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1118: FILE: fs/proc/base.c:2053:
+	E(PROC_TID_FD,         "fd",      S_IFDIR|S_IRUSR|S_IXUSR),
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1118: FILE: fs/proc/base.c:2053:
+	E(PROC_TID_FD,         "fd",      S_IFDIR|S_IRUSR|S_IXUSR),
 	                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IXUSR' are not preferred. Consider using octal permissions '0500'.
#1118: FILE: fs/proc/base.c:2053:
+	E(PROC_TID_FD,         "fd",      S_IFDIR|S_IRUSR|S_IXUSR),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1119: FILE: fs/proc/base.c:2054:
+	E(PROC_TID_ENVIRON,    "environ", S_IFREG|S_IRUSR),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#1119: FILE: fs/proc/base.c:2054:
+	E(PROC_TID_ENVIRON,    "environ", S_IFREG|S_IRUSR),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1120: FILE: fs/proc/base.c:2055:
+	E(PROC_TID_AUXV,       "auxv",	  S_IFREG|S_IRUSR),
 	                              	         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#1120: FILE: fs/proc/base.c:2055:
+	E(PROC_TID_AUXV,       "auxv",	  S_IFREG|S_IRUSR),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1121: FILE: fs/proc/base.c:2056:
+	E(PROC_TID_STATUS,     "status",  S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1121: FILE: fs/proc/base.c:2056:
+	E(PROC_TID_STATUS,     "status",  S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1122: FILE: fs/proc/base.c:2057:
+	E(PROC_TID_CMDLINE,    "cmdline", S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1122: FILE: fs/proc/base.c:2057:
+	E(PROC_TID_CMDLINE,    "cmdline", S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1123: FILE: fs/proc/base.c:2058:
+	E(PROC_TID_STAT,       "stat",    S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1123: FILE: fs/proc/base.c:2058:
+	E(PROC_TID_STAT,       "stat",    S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1124: FILE: fs/proc/base.c:2059:
+	E(PROC_TID_STATM,      "statm",   S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1124: FILE: fs/proc/base.c:2059:
+	E(PROC_TID_STATM,      "statm",   S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1125: FILE: fs/proc/base.c:2060:
+	E(PROC_TID_MAPS,       "maps",    S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1125: FILE: fs/proc/base.c:2060:
+	E(PROC_TID_MAPS,       "maps",    S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1127: FILE: fs/proc/base.c:2062:
+	E(PROC_TID_NUMA_MAPS,  "numa_maps",    S_IFREG|S_IRUGO),
 	                                              ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1127: FILE: fs/proc/base.c:2062:
+	E(PROC_TID_NUMA_MAPS,  "numa_maps",    S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1129: FILE: fs/proc/base.c:2064:
+	E(PROC_TID_MEM,        "mem",     S_IFREG|S_IRUSR|S_IWUSR),
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1129: FILE: fs/proc/base.c:2064:
+	E(PROC_TID_MEM,        "mem",     S_IFREG|S_IRUSR|S_IWUSR),
 	                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#1129: FILE: fs/proc/base.c:2064:
+	E(PROC_TID_MEM,        "mem",     S_IFREG|S_IRUSR|S_IWUSR),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1131: FILE: fs/proc/base.c:2066:
+	E(PROC_TID_SECCOMP,    "seccomp", S_IFREG|S_IRUSR|S_IWUSR),
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1131: FILE: fs/proc/base.c:2066:
+	E(PROC_TID_SECCOMP,    "seccomp", S_IFREG|S_IRUSR|S_IWUSR),
 	                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#1131: FILE: fs/proc/base.c:2066:
+	E(PROC_TID_SECCOMP,    "seccomp", S_IFREG|S_IRUSR|S_IWUSR),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1133: FILE: fs/proc/base.c:2068:
+	E(PROC_TID_CWD,        "cwd",     S_IFLNK|S_IRWXUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#1133: FILE: fs/proc/base.c:2068:
+	E(PROC_TID_CWD,        "cwd",     S_IFLNK|S_IRWXUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1134: FILE: fs/proc/base.c:2069:
+	E(PROC_TID_ROOT,       "root",    S_IFLNK|S_IRWXUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#1134: FILE: fs/proc/base.c:2069:
+	E(PROC_TID_ROOT,       "root",    S_IFLNK|S_IRWXUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1135: FILE: fs/proc/base.c:2070:
+	E(PROC_TID_EXE,        "exe",     S_IFLNK|S_IRWXUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#1135: FILE: fs/proc/base.c:2070:
+	E(PROC_TID_EXE,        "exe",     S_IFLNK|S_IRWXUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1136: FILE: fs/proc/base.c:2071:
+	E(PROC_TID_MOUNTS,     "mounts",  S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1136: FILE: fs/proc/base.c:2071:
+	E(PROC_TID_MOUNTS,     "mounts",  S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1138: FILE: fs/proc/base.c:2073:
+	E(PROC_TID_SMAPS,      "smaps",   S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1138: FILE: fs/proc/base.c:2073:
+	E(PROC_TID_SMAPS,      "smaps",   S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1141: FILE: fs/proc/base.c:2076:
+	E(PROC_TID_ATTR,       "attr",    S_IFDIR|S_IRUGO|S_IXUGO),
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1141: FILE: fs/proc/base.c:2076:
+	E(PROC_TID_ATTR,       "attr",    S_IFDIR|S_IRUGO|S_IXUGO),
 	                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IXUGO' are not preferred. Consider using octal permissions '0555'.
#1141: FILE: fs/proc/base.c:2076:
+	E(PROC_TID_ATTR,       "attr",    S_IFDIR|S_IRUGO|S_IXUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1144: FILE: fs/proc/base.c:2079:
+	E(PROC_TID_WCHAN,      "wchan",   S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1144: FILE: fs/proc/base.c:2079:
+	E(PROC_TID_WCHAN,      "wchan",   S_IFREG|S_IRUGO),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1147: FILE: fs/proc/base.c:2082:
+	E(PROC_TID_SCHEDSTAT, "schedstat",S_IFREG|S_IRUGO),
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1147: FILE: fs/proc/base.c:2082:
+	E(PROC_TID_SCHEDSTAT, "schedstat",S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1147: FILE: fs/proc/base.c:2082:
+	E(PROC_TID_SCHEDSTAT, "schedstat",S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1150: FILE: fs/proc/base.c:2085:
+	E(PROC_TID_CPUSET,     "cpuset",  S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1150: FILE: fs/proc/base.c:2085:
+	E(PROC_TID_CPUSET,     "cpuset",  S_IFREG|S_IRUGO),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1152: FILE: fs/proc/base.c:2087:
+	E(PROC_TID_OOM_SCORE,  "oom_score",S_IFREG|S_IRUGO),
 	                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1152: FILE: fs/proc/base.c:2087:
+	E(PROC_TID_OOM_SCORE,  "oom_score",S_IFREG|S_IRUGO),
 	                                          ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1152: FILE: fs/proc/base.c:2087:
+	E(PROC_TID_OOM_SCORE,  "oom_score",S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1153: FILE: fs/proc/base.c:2088:
+	E(PROC_TID_OOM_ADJUST, "oom_adj", S_IFREG|S_IRUGO|S_IWUSR),
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1153: FILE: fs/proc/base.c:2088:
+	E(PROC_TID_OOM_ADJUST, "oom_adj", S_IFREG|S_IRUGO|S_IWUSR),
 	                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1153: FILE: fs/proc/base.c:2088:
+	E(PROC_TID_OOM_ADJUST, "oom_adj", S_IFREG|S_IRUGO|S_IWUSR),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1155: FILE: fs/proc/base.c:2090:
+	E(PROC_TID_LOGINUID, "loginuid", S_IFREG|S_IWUSR|S_IRUGO),
 	                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1155: FILE: fs/proc/base.c:2090:
+	E(PROC_TID_LOGINUID, "loginuid", S_IFREG|S_IWUSR|S_IRUGO),
 	                                                ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#1155: FILE: fs/proc/base.c:2090:
+	E(PROC_TID_LOGINUID, "loginuid", S_IFREG|S_IWUSR|S_IRUGO),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1157: FILE: fs/proc/base.c:2092:
+	{0,0,NULL,0}
 	  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1157: FILE: fs/proc/base.c:2092:
+	{0,0,NULL,0}
 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1157: FILE: fs/proc/base.c:2092:
+	{0,0,NULL,0}
 	         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1160: FILE: fs/proc/base.c:2095:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1161: FILE: fs/proc/base.c:2096:
+static int proc_tid_base_readdir(struct file * filp,
                                                ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1161: FILE: fs/proc/base.c:2096:
+static int proc_tid_base_readdir(struct file * filp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1162: FILE: fs/proc/base.c:2097:
+static int proc_tid_base_readdir(struct file * filp,
+			     void * dirent, filldir_t filldir)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1162: FILE: fs/proc/base.c:2097:
+			     void * dirent, filldir_t filldir)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1164: FILE: fs/proc/base.c:2099:
+	return proc_pident_readdir(filp,dirent,filldir,
 	                           ^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1164: FILE: fs/proc/base.c:2099:
+	return proc_pident_readdir(filp,dirent,filldir,
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1164: FILE: fs/proc/base.c:2099:
+	return proc_pident_readdir(filp,dirent,filldir,
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1165: FILE: fs/proc/base.c:2100:
+				   tid_base_stuff,ARRAY_SIZE(tid_base_stuff));
 				                 ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1168: FILE: fs/proc/base.c:2103:
+static struct file_operations proc_tid_base_operations = {

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1173: FILE: fs/proc/base.c:2108:
+static struct dentry *proc_tid_base_lookup(struct inode *dir, struct dentry *dentry, struct nameidata *nd){
                                                                                                        ^^

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#1173: FILE: fs/proc/base.c:2108:
+static struct dentry *proc_tid_base_lookup(struct inode *dir, struct dentry *dentry, struct nameidata *nd){

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1173: FILE: fs/proc/base.c:2108:
+static struct dentry *proc_tid_base_lookup(struct inode *dir, struct dentry *dentry, struct nameidata *nd){

ERROR:SPACING: space required before the open brace '{'
#1173: FILE: fs/proc/base.c:2108:
+static struct dentry *proc_tid_base_lookup(struct inode *dir, struct dentry *dentry, struct nameidata *nd){

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#1177: FILE: fs/proc/base.c:2112:
+static struct inode_operations proc_tid_base_inode_operations = {

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1182: FILE: fs/proc/base.c:2117:
+static struct dentry *proc_task_lookup(struct inode *dir, struct dentry * dentry, struct nameidata *nd)
                                                                                                     ^^

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1182: FILE: fs/proc/base.c:2117:
+static struct dentry *proc_task_lookup(struct inode *dir, struct dentry * dentry, struct nameidata *nd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1182: FILE: fs/proc/base.c:2117:
+static struct dentry *proc_task_lookup(struct inode *dir, struct dentry * dentry, struct nameidata *nd)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1188: FILE: fs/proc/base.c:2123:
+	unsigned tid;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1209: FILE: fs/proc/base.c:2144:
+
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1212: FILE: fs/proc/base.c:2147:
+	inode->i_mode = S_IFDIR|S_IRUGO|S_IXUGO;
 	                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1212: FILE: fs/proc/base.c:2147:
+	inode->i_mode = S_IFDIR|S_IRUGO|S_IXUGO;
 	                               ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IXUGO' are not preferred. Consider using octal permissions '0555'.
#1212: FILE: fs/proc/base.c:2147:
+	inode->i_mode = S_IFDIR|S_IRUGO|S_IXUGO;

ERROR:SPACING: spaces required around that '|=' (ctx:VxV)
#1215: FILE: fs/proc/base.c:2150:
+	inode->i_flags|=S_IMMUTABLE;
 	              ^

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#1246: FILE: fs/proc/base.c:2325:
+static struct inode_operations proc_task_inode_operations = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1251: FILE: fs/proc/base.c:2330:
+static struct file_operations proc_task_operations = {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000101276.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 69 errors, 91 warnings, 90 checks, 1180 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000101276.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
