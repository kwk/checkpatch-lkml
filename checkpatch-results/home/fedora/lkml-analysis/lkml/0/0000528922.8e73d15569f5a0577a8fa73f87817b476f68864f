WARNING:TYPO_SPELLING: 'havn't' may be misspelled - perhaps 'haven't'?
#31: 
should apply cleanly to 2.4.5 too (I simply havn't yet checked
                                            ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'progams' may be misspelled - perhaps 'programs'?
#54: 
very useful, as most progams use read/write even on sockets.
                     ^^^^^^^

WARNING:TYPO_SPELLING: 'havn't' may be misspelled - perhaps 'haven't'?
#73: 
mips and alpha, but havn't tried that on them).
                    ^^^^^^

WARNING:TYPO_SPELLING: 'realy' may be misspelled - perhaps 'really'?
#74: 
I do not realy understand why should such things be arch specific.
         ^^^^^

WARNING:TYPO_SPELLING: 'didi' may be misspelled - perhaps 'did'?
#81: 
It will also be available from <http://www.cs.tau.ac.il/~didi>.
                                                         ^^^^

WARNING:TYPO_SPELLING: 'didi' may be misspelled - perhaps 'did'?
#86: 
	didi
	^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#89: 
diff -u -r linux-2.4.4-badmem/drivers/char/n_tty.c linux-2.4.4-badmem-ctrl-t/drivers/char/n_tty.c

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#106: FILE: drivers/char/n_tty.c:508:
+#define LOAD_FRAC(x) LOAD_INT(((x) & (FIXED_1-1)) * 100)
                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#118: FILE: drivers/char/n_tty.c:520:
+	struct task_struct *p, *task=0;
 	                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#128: FILE: drivers/char/n_tty.c:530:
+	a = avenrun[0] + (FIXED_1/200);
 	                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: drivers/char/n_tty.c:555:
+	sprintf(buf, " %ld.%02ldu", task->times.tms_utime / 100,
+			task->times.tms_utime % 100);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: drivers/char/n_tty.c:560:
+	sprintf(buf, " %ld.%02lds", task->times.tms_stime / 100,
+			task->times.tms_stime % 100);

WARNING:LINE_SPACING: Missing a blank line after declarations
#166: FILE: drivers/char/n_tty.c:568:
+		struct vm_area_struct *vma;
+		atomic_inc(&mm->mm_users);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#178: FILE: drivers/char/n_tty.c:580:
+	sprintf(buf, "  vsz%ldk rss%ldk", vsize >> 10, rss << (PAGE_SHIFT-10));
 	                                                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#191: FILE: drivers/char/n_tty.c:593:
+	unsigned char discarding=tty->discard;
 	                        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#207: FILE: drivers/char/n_tty.c:614:
+	if ( (c == STATUS_CHAR(tty)) && (tty->icanon) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#207: FILE: drivers/char/n_tty.c:614:
+	if ( (c == STATUS_CHAR(tty)) && (tty->icanon) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c == STATUS_CHAR(tty)'
#207: FILE: drivers/char/n_tty.c:614:
+	if ( (c == STATUS_CHAR(tty)) && (tty->icanon) ) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tty->icanon'
#207: FILE: drivers/char/n_tty.c:614:
+	if ( (c == STATUS_CHAR(tty)) && (tty->icanon) ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#222: FILE: drivers/char/tty_io.c:702:
+	if (tty->discard == 1) {
+		return count;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#235: FILE: fs/read_write.c:141:
+	current->rw_bytes+=ret;
 	                 ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#243: FILE: fs/read_write.c:169:
+	current->rw_bytes+=ret;
 	                 ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000528922.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 9 warnings, 7 checks, 192 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000528922.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
