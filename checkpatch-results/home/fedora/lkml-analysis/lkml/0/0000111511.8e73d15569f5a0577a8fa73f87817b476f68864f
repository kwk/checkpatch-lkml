WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#358: FILE: drivers/i2c/chips/m41txx.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#420: FILE: drivers/i2c/chips/m41txx.c:63:
+};
+static struct m41txx_chip_info *m41txx_chip;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#434: FILE: drivers/i2c/chips/m41txx.c:77:
+	sec = min = hour = day = mon = year = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#454: FILE: drivers/i2c/chips/m41txx.c:97:
+	} while ((++reads < m41txx_chip->read_limit) && ((sec != sec1)
+			|| (min != min1) || (hour != hour1) || (day != day1)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#455: FILE: drivers/i2c/chips/m41txx.c:98:
+			|| (min != min1) || (hour != hour1) || (day != day1)
+			|| (mon != mon1) || (year != year1)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'm41txx_chip->read_limit > 1'
#457: FILE: drivers/i2c/chips/m41txx.c:100:
+	if ((m41txx_chip->read_limit > 1) && ((sec != sec1) || (min != min1)
+			|| (hour != hour1) || (day != day1) || (mon != mon1)
+			|| (year != year1)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sec != sec1'
#457: FILE: drivers/i2c/chips/m41txx.c:100:
+	if ((m41txx_chip->read_limit > 1) && ((sec != sec1) || (min != min1)
+			|| (hour != hour1) || (day != day1) || (mon != mon1)
+			|| (year != year1)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'min != min1'
#457: FILE: drivers/i2c/chips/m41txx.c:100:
+	if ((m41txx_chip->read_limit > 1) && ((sec != sec1) || (min != min1)
+			|| (hour != hour1) || (day != day1) || (mon != mon1)
+			|| (year != year1)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hour != hour1'
#457: FILE: drivers/i2c/chips/m41txx.c:100:
+	if ((m41txx_chip->read_limit > 1) && ((sec != sec1) || (min != min1)
+			|| (hour != hour1) || (day != day1) || (mon != mon1)
+			|| (year != year1)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'day != day1'
#457: FILE: drivers/i2c/chips/m41txx.c:100:
+	if ((m41txx_chip->read_limit > 1) && ((sec != sec1) || (min != min1)
+			|| (hour != hour1) || (day != day1) || (mon != mon1)
+			|| (year != year1)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mon != mon1'
#457: FILE: drivers/i2c/chips/m41txx.c:100:
+	if ((m41txx_chip->read_limit > 1) && ((sec != sec1) || (min != min1)
+			|| (hour != hour1) || (day != day1) || (mon != mon1)
+			|| (year != year1)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'year != year1'
#457: FILE: drivers/i2c/chips/m41txx.c:100:
+	if ((m41txx_chip->read_limit > 1) && ((sec != sec1) || (min != min1)
+			|| (hour != hour1) || (day != day1) || (mon != mon1)
+			|| (year != year1)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#458: FILE: drivers/i2c/chips/m41txx.c:101:
+	if ((m41txx_chip->read_limit > 1) && ((sec != sec1) || (min != min1)
+			|| (hour != hour1) || (day != day1) || (mon != mon1)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#459: FILE: drivers/i2c/chips/m41txx.c:102:
+			|| (hour != hour1) || (day != day1) || (mon != mon1)
+			|| (year != year1)))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'm41txx_get_rtc_time', this function's name, in a string
#476: FILE: drivers/i2c/chips/m41txx.c:119:
+	dev_err(&save_client->dev, "m41txx_get_rtc_time: Read error\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'm41txx_set', this function's name, in a string
#504: FILE: drivers/i2c/chips/m41txx.c:147:
+		dev_err(&save_client->dev, "m41txx_set: Read error\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxW)
#511: FILE: drivers/i2c/chips/m41txx.c:154:
+	buf[m41txx_chip->hour] = (buf[m41txx_chip->hour]& ~0x3f) | (hour& 0x3f);
 	                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxW)
#511: FILE: drivers/i2c/chips/m41txx.c:154:
+	buf[m41txx_chip->hour] = (buf[m41txx_chip->hour]& ~0x3f) | (hour& 0x3f);
 	                                                                ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'm41txx_set', this function's name, in a string
#516: FILE: drivers/i2c/chips/m41txx.c:159:
+		dev_err(&save_client->dev, "m41txx_set: Write error\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#546: FILE: drivers/i2c/chips/m41txx.c:189:
+	if (pdev && (pdata = pdev->dev.platform_data)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#549: FILE: drivers/i2c/chips/m41txx.c:192:
+		for (i=0; i<ARRAY_SIZE(m41txx_chip_info_tbl); i++)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#549: FILE: drivers/i2c/chips/m41txx.c:192:
+		for (i=0; i<ARRAY_SIZE(m41txx_chip_info_tbl); i++)
 		           ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#592: FILE: drivers/i2c/chips/m41txx.c:235:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#596: FILE: drivers/i2c/chips/m41txx.c:239:
+	strlcpy(client->name, m41txx_driver.driver.name, I2C_NAME_SIZE);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#601: FILE: drivers/i2c/chips/m41txx.c:244:
+	if ((rc = i2c_attach_client(client)) != 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#611: FILE: drivers/i2c/chips/m41txx.c:254:
+			if ((rc = i2c_transfer(client->adapter, msgs, 2)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#616: FILE: drivers/i2c/chips/m41txx.c:259:
+			if ((rc = i2c_master_send(client, wbuf, 2)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#621: FILE: drivers/i2c/chips/m41txx.c:264:
+			if ((rc = i2c_master_send(client, wbuf, 2)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#626: FILE: drivers/i2c/chips/m41txx.c:269:
+			if ((rc = i2c_master_send(client, wbuf, 2)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#632: FILE: drivers/i2c/chips/m41txx.c:275:
+		if ((rc = i2c_transfer(client->adapter, msgs, 2)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#638: FILE: drivers/i2c/chips/m41txx.c:281:
+			if ((rc = i2c_master_send(client, wbuf, 2)) < 0)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'm41txx_probe', this function's name, in a string
#660: FILE: drivers/i2c/chips/m41txx.c:303:
+	dev_err(&client->dev, "m41txx_probe: Can't clear ST bit\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'm41txx_probe', this function's name, in a string
#663: FILE: drivers/i2c/chips/m41txx.c:306:
+	dev_err(&client->dev, "m41txx_probe: Can't clear HT bit\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'm41txx_probe', this function's name, in a string
#666: FILE: drivers/i2c/chips/m41txx.c:309:
+	dev_err(&client->dev, "m41txx_probe: Can't set SQW Frequency\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#683: FILE: drivers/i2c/chips/m41txx.c:326:
+	if ((rc = i2c_detach_client(client)) == 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#705: FILE: drivers/i2c/chips/m41txx.c:348:
+	if (!(rc = platform_driver_register(&m41txx_platform_driver)))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#758: FILE: include/linux/m41txx.h:1:
+/*

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#788: FILE: include/linux/m41txx.h:31:
+#define SQW_FREQ_32KHZ	(1<<4)		/* 32.768 KHz */
                       	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#788: FILE: include/linux/m41txx.h:31:
+#define SQW_FREQ_32KHZ	(1<<4)		/* 32.768 KHz */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#789: FILE: include/linux/m41txx.h:32:
+#define SQW_FREQ_8KHZ	(2<<4)		/* 8.192 KHz */
                      	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#790: FILE: include/linux/m41txx.h:33:
+#define SQW_FREQ_4KHZ	(3<<4)		/* 4.096 KHz */
                      	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#791: FILE: include/linux/m41txx.h:34:
+#define SQW_FREQ_2KHZ	(4<<4)		/* 2.048 KHz */
                      	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#792: FILE: include/linux/m41txx.h:35:
+#define SQW_FREQ_1KHZ	(5<<4)		/* 1.024 KHz */
                      	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#793: FILE: include/linux/m41txx.h:36:
+#define SQW_FREQ_512HZ	(6<<4)		/* 512 Hz */
                       	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#794: FILE: include/linux/m41txx.h:37:
+#define SQW_FREQ_256HZ	(7<<4)		/* 256 Hz */
                       	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#795: FILE: include/linux/m41txx.h:38:
+#define SQW_FREQ_128HZ	(8<<4)		/* 128 Hz */
                       	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#796: FILE: include/linux/m41txx.h:39:
+#define SQW_FREQ_64HZ	(9<<4)		/* 64 Hz */
                      	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#797: FILE: include/linux/m41txx.h:40:
+#define SQW_FREQ_32HZ	(10<<4)		/* 32 Hz */
                      	   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#798: FILE: include/linux/m41txx.h:41:
+#define SQW_FREQ_16HZ	(11<<4)		/* 16 Hz */
                      	   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#799: FILE: include/linux/m41txx.h:42:
+#define SQW_FREQ_8HZ	(12<<4)		/* 8 Hz */
                     	   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#800: FILE: include/linux/m41txx.h:43:
+#define SQW_FREQ_4HZ	(13<<4)		/* 4 Hz */
                     	   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#801: FILE: include/linux/m41txx.h:44:
+#define SQW_FREQ_2HZ	(14<<4)		/* 2 Hz */
                     	   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#802: FILE: include/linux/m41txx.h:45:
+#define SQW_FREQ_1HZ	(15<<4)		/* 1 Hz */
                     	   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000111511.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 9 warnings, 32 checks, 463 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000111511.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
