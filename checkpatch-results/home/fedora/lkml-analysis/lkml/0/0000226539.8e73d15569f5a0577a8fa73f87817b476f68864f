WARNING:SPACING: space prohibited between function name and open parenthesis '('
#94: FILE: arch/s390/mm/extmem.c:173:
+query_segment_type (struct dcss_segment *seg)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#127: FILE: arch/s390/mm/extmem.c:208:
+		/* multi-part segment. only one type supported here:
+		    - all parts are contiguous

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#129: FILE: arch/s390/mm/extmem.c:210:
+		    - maximum 6 parts allowed */

WARNING:LINE_SPACING: Missing a blank line after declarations
#131: FILE: arch/s390/mm/extmem.c:212:
+		unsigned long start = qout->segstart >> PAGE_SHIFT;
+		for (i=0; i<qout->segcnt; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#131: FILE: arch/s390/mm/extmem.c:212:
+		for (i=0; i<qout->segcnt; i++) {
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#131: FILE: arch/s390/mm/extmem.c:212:
+		for (i=0; i<qout->segcnt; i++) {
 		           ^

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#134: FILE: arch/s390/mm/extmem.c:215:
+				rc = -ENOTSUPP;

ENOTSUPP is not a standard error code and should be avoided in new patches.
EOPNOTSUPP should be used instead.

See: https://lore.kernel.org/netdev/20200510182252.GA411829@lunn.ch/

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#138: FILE: arch/s390/mm/extmem.c:219:
+				rc = -ENOTSUPP;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#151: FILE: arch/s390/mm/extmem.c:231:
+	memcpy (seg->range, qout->range, 6*sizeof(struct qrange));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#151: FILE: arch/s390/mm/extmem.c:231:
+	memcpy (seg->range, qout->range, 6*sizeof(struct qrange));
 	                                  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: arch/s390/mm/extmem.c:293:
+segment_exceeds_range (struct dcss_segment *seg)

WARNING:LINE_SPACING: Missing a blank line after declarations
#167: FILE: arch/s390/mm/extmem.c:296:
+	int seg_last_pfn = (seg->end) >> PAGE_SHIFT;
+	if (seg_last_pfn > max_pfn)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#181: FILE: arch/s390/mm/extmem.c:313:
+segment_type (char* name)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#181: FILE: arch/s390/mm/extmem.c:313:
+segment_type (char* name)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#190: FILE: arch/s390/mm/extmem.c:322:
+	rc = query_segment_type (&seg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#199: FILE: arch/s390/mm/extmem.c:343:
+	rc = query_segment_type (seg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#203: FILE: arch/s390/mm/extmem.c:347:
+		PRINT_WARN ("segment_load: not loading segment %s - exceeds"

ERROR:SPACING: space required after that ',' (ctx:VxV)
#204: FILE: arch/s390/mm/extmem.c:348:
+				" kernel mapping range\n",name);
 				                         ^

WARNING:SPLIT_STRING: quoted string split across lines
#204: FILE: arch/s390/mm/extmem.c:348:
+		PRINT_WARN ("segment_load: not loading segment %s - exceeds"
+				" kernel mapping range\n",name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#235: FILE: arch/s390/mm/extmem.c:463:
+segment_modify_shared (char *name, int do_nonshared)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#241: FILE: arch/s390/mm/extmem.c:469:
+	spin_lock (&dcss_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#242: FILE: arch/s390/mm/extmem.c:470:
+	seg = segment_by_name (name);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!seg"
#243: FILE: arch/s390/mm/extmem.c:471:
+	if (seg == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#248: FILE: arch/s390/mm/extmem.c:476:
+		PRINT_INFO ("segment_modify_shared: not reloading segment %s"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'segment_modify_shared', this function's name, in a string
#248: FILE: arch/s390/mm/extmem.c:476:
+		PRINT_INFO ("segment_modify_shared: not reloading segment %s"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#249: FILE: arch/s390/mm/extmem.c:477:
+				" - already in requested mode\n",name);
 				                                ^

WARNING:SPLIT_STRING: quoted string split across lines
#249: FILE: arch/s390/mm/extmem.c:477:
+		PRINT_INFO ("segment_modify_shared: not reloading segment %s"
+				" - already in requested mode\n",name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#253: FILE: arch/s390/mm/extmem.c:481:
+	if (atomic_read (&seg->ref_count) != 1) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&seg->ref_count'
#253: FILE: arch/s390/mm/extmem.c:481:
+	if (atomic_read (&seg->ref_count) != 1) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#254: FILE: arch/s390/mm/extmem.c:482:
+		PRINT_WARN ("segment_modify_shared: not reloading segment %s - "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'segment_modify_shared', this function's name, in a string
#254: FILE: arch/s390/mm/extmem.c:482:
+		PRINT_WARN ("segment_modify_shared: not reloading segment %s - "

ERROR:SPACING: space required after that ',' (ctx:VxV)
#255: FILE: arch/s390/mm/extmem.c:483:
+				"segment is in use by other driver(s)\n",name);
 				                                        ^

WARNING:SPLIT_STRING: quoted string split across lines
#255: FILE: arch/s390/mm/extmem.c:483:
+		PRINT_WARN ("segment_modify_shared: not reloading segment %s - "
+				"segment is in use by other driver(s)\n",name);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#263: FILE: arch/s390/mm/extmem.c:491:
+	else
+	dcss_command = DCSS_LOADNOLY;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: arch/s390/mm/extmem.c:494:
+	diag_cc = dcss_diag(dcss_command, seg->dcss_name,
+			&seg->start_addr, &seg->end);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#268: FILE: arch/s390/mm/extmem.c:496:
+		PRINT_WARN ("segment_modify_shared: could not reload segment %s"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'segment_modify_shared', this function's name, in a string
#268: FILE: arch/s390/mm/extmem.c:496:
+		PRINT_WARN ("segment_modify_shared: could not reload segment %s"

ERROR:SPACING: space required after that ',' (ctx:VxV)
#269: FILE: arch/s390/mm/extmem.c:497:
+				" - diag returned error (%ld)\n",name,seg->end);
 				                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#269: FILE: arch/s390/mm/extmem.c:497:
+				" - diag returned error (%ld)\n",name,seg->end);
 				                                     ^

WARNING:SPLIT_STRING: quoted string split across lines
#269: FILE: arch/s390/mm/extmem.c:497:
+		PRINT_WARN ("segment_modify_shared: could not reload segment %s"
+				" - diag returned error (%ld)\n",name,seg->end);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#270: FILE: arch/s390/mm/extmem.c:498:
+		rc = dcss_diag_translate_rc (seg->end);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#280: FILE: arch/s390/mm/extmem.c:508:
+	kfree (seg);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#312: FILE: arch/s390/mm/extmem.c:571:
+	for (i=0; i<seg->segcnt; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#312: FILE: arch/s390/mm/extmem.c:571:
+	for (i=0; i<seg->segcnt; i++) {
 	           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#313: FILE: arch/s390/mm/extmem.c:572:
+		sprintf(cmd1+strlen(cmd1), " %X-%X %s",
 		            ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#327: FILE: arch/s390/mm/extmem.c:587:
+EXPORT_SYMBOL(segment_modify_shared);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPLIT_STRING: quoted string split across lines
#346: FILE: drivers/s390/block/dcssblk.c:184:
+		PRINT_WARN("cannot load/query segment %s, exceeds kernel "
+			   "mapping range\n", seg_name);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#382: FILE: drivers/s390/block/dcssblk.c:229:
+			BUG_ON(rc == -EINVAL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#387: FILE: drivers/s390/block/dcssblk.c:234:
+			switch (dev_info->segment_type) {
+				case SEG_TYPE_SR:
+				case SEG_TYPE_ER:
+				case SEG_TYPE_SC:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required after that ',' (ctx:VxV)
#391: FILE: drivers/s390/block/dcssblk.c:238:
+					set_disk_ro(dev_info->gd,1);
 					                        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#415: FILE: drivers/s390/block/dcssblk.c:252:
+			BUG_ON(rc == -EINVAL);

WARNING:SPLIT_STRING: quoted string split across lines
#464: FILE: drivers/s390/char/monreader.c:160:
+		P_WARNING("cannot load/query segment %s, exceeds kernel "
+			  "mapping range\n", seg_name);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#494: FILE: include/asm-s390/extmem.h:28:
+extern int segment_type (char* name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#494: FILE: include/asm-s390/extmem.h:28:
+extern int segment_type (char* name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#494: FILE: include/asm-s390/extmem.h:28:
+extern int segment_type (char* name);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#495: FILE: include/asm-s390/extmem.h:29:
+extern int segment_modify_shared (char *name, int do_nonshared);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#495: FILE: include/asm-s390/extmem.h:29:
+extern int segment_modify_shared (char *name, int do_nonshared);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000226539.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 37 warnings, 7 checks, 418 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000226539.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
