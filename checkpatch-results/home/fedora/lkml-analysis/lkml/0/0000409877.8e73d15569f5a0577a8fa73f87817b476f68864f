CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#50: FILE: Documentation/video4linux/meye.txt:4:
+	Copyright (C) 2001-2002 Alcôve <www.alcove.com>
 	                           ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#73: FILE: include/linux/meye.h:6:
+ * Copyright (C) 2001-2002 Alcôve <www.alcove.com>
                               ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#87: FILE: drivers/media/video/meye.h:6:
+ * Copyright (C) 2001-2002 Alcôve <www.alcove.com>
                               ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#110: FILE: drivers/media/video/meye.c:6:
+ * Copyright (C) 2001-2002 Alcôve <www.alcove.com>
                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#132: FILE: drivers/media/video/meye.c:186:
+			int j;
+			pt = (u32 *)meye.mchip_ptable[MCHIP_NB_PAGES];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#165: FILE: drivers/media/video/meye.c:589:
+static void mchip_dma_setup(u32 dma_addr) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'meye.grab_buffer[*i].state != MEYE_BUF_USING'
#281: FILE: drivers/media/video/meye.c:987:
+			if (wait_event_interruptible(meye.grabq.proc_list,
+						     (meye.grab_buffer[*i].state != MEYE_BUF_USING)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#282: FILE: drivers/media/video/meye.c:988:
+						     (meye.grab_buffer[*i].state != MEYE_BUF_USING)))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'meye.grab_buffer[*i].state != MEYE_BUF_USING'
#311: FILE: drivers/media/video/meye.c:1115:
+			if (wait_event_interruptible(meye.grabq.proc_list,
+						     (meye.grab_buffer[*i].state != MEYE_BUF_USING)))

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#312: FILE: drivers/media/video/meye.c:1116:
+						     (meye.grab_buffer[*i].state != MEYE_BUF_USING)))

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#348: FILE: drivers/media/video/meye.c:1228:
 static int __devinit meye_probe(struct pci_dev *pcidev, 

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000409877.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 4 warnings, 6 checks, 380 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000409877.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
