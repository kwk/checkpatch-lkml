WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#56: 
diff -urN linux-2.5.34-base/Documentation/DocBook/kernel-api.tmpl linux-2.5.34-read_barrier_depends/Documentation/DocBook/kernel-api.tmpl

WARNING:TYPO_SPELLING: 'Iinclude' may be misspelled - perhaps 'Include'?
#67: FILE: Documentation/DocBook/kernel-api.tmpl:47:
+!Iinclude/asm-i386/system.h
  ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#79: FILE: include/asm-alpha/system.h:145:
+#define memory_barrier() \
 __asm__ __volatile__("mb": : :"memory")

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#83: FILE: include/asm-alpha/system.h:148:
+#define read_barrier() \
 __asm__ __volatile__("mb": : :"memory")

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#87: FILE: include/asm-alpha/system.h:151:
+#define read_barrier_depends() \
+__asm__ __volatile__("mb": : :"memory")

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#88: FILE: include/asm-alpha/system.h:152:
+__asm__ __volatile__("mb": : :"memory")
                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#88: FILE: include/asm-alpha/system.h:152:
+__asm__ __volatile__("mb": : :"memory")
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#90: FILE: include/asm-alpha/system.h:154:
+#define write_barrier() \
 __asm__ __volatile__("wmb": : :"memory")

WARNING:MEMORY_BARRIER: memory barrier without comment
#93: FILE: include/asm-alpha/system.h:157:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#94: FILE: include/asm-alpha/system.h:158:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#95: FILE: include/asm-alpha/system.h:159:
+#define wmb()	write_barrier()

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#119: FILE: include/asm-arm/system.h:52:
+#define memory_barrier() __asm__ __volatile__ ("" : : : "memory")

ERROR:SPACING: space required before the open parenthesis '('
#121: FILE: include/asm-arm/system.h:54:
+#define read_barrier_depends() do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#125: FILE: include/asm-arm/system.h:58:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#126: FILE: include/asm-arm/system.h:59:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#127: FILE: include/asm-arm/system.h:60:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#143: FILE: include/asm-arm/system.h:90:
+#define smp_read_barrier_depends()		do { } while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#157: FILE: include/asm-cris/system.h:150:
+#define memory_barrier() __asm__ __volatile__ ("" : : : "memory")

ERROR:SPACING: space required before the open parenthesis '('
#159: FILE: include/asm-cris/system.h:152:
+#define read_barrier_depends() do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#162: FILE: include/asm-cris/system.h:155:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#163: FILE: include/asm-cris/system.h:156:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#164: FILE: include/asm-cris/system.h:157:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#174: FILE: include/asm-cris/system.h:167:
+#define smp_read_barrier_depends()     do { } while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#242: FILE: include/asm-i386/system.h:339:
+#define memory_barrier() \
+		__asm__ __volatile__ ("lock; addl $0,0(%%esp)": : :"memory")

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#243: FILE: include/asm-i386/system.h:340:
+		__asm__ __volatile__ ("lock; addl $0,0(%%esp)": : :"memory")
 		                                              ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#243: FILE: include/asm-i386/system.h:340:
+		__asm__ __volatile__ ("lock; addl $0,0(%%esp)": : :"memory")
 		                                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#322: FILE: include/asm-i386/system.h:419:
+#define read_barrier_depends()	do { } while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#345: FILE: include/asm-i386/system.h:441:
+#define write_barrier() \
+		__asm__ __volatile__ ("lock; addl $0,0(%%esp)": : :"memory")

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#346: FILE: include/asm-i386/system.h:442:
+		__asm__ __volatile__ ("lock; addl $0,0(%%esp)": : :"memory")
 		                                              ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#346: FILE: include/asm-i386/system.h:442:
+		__asm__ __volatile__ ("lock; addl $0,0(%%esp)": : :"memory")
 		                                                  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#349: FILE: include/asm-i386/system.h:444:
+#define write_barrier() \
+		__asm__ __volatile__ ("": : :"memory")

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#350: FILE: include/asm-i386/system.h:445:
+		__asm__ __volatile__ ("": : :"memory")
 		                        ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#350: FILE: include/asm-i386/system.h:445:
+		__asm__ __volatile__ ("": : :"memory")
 		                            ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#353: FILE: include/asm-i386/system.h:448:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#354: FILE: include/asm-i386/system.h:449:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#355: FILE: include/asm-i386/system.h:450:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#365: FILE: include/asm-i386/system.h:460:
+#define smp_read_barrier_depends()	do { } while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#403: FILE: include/asm-ia64/system.h:88:
+#define memory_barrier()	__asm__ __volatile__ ("mf" ::: "memory")

ERROR:SPACING: space required before the open parenthesis '('
#405: FILE: include/asm-ia64/system.h:90:
+#define read_barrier_depends()	do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#408: FILE: include/asm-ia64/system.h:93:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#409: FILE: include/asm-ia64/system.h:94:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#410: FILE: include/asm-ia64/system.h:95:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#420: FILE: include/asm-ia64/system.h:105:
+# define smp_read_barrier_depends()	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#436: FILE: include/asm-m68k/system.h:80:
+#define read_barrier_depends()	do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#441: FILE: include/asm-m68k/system.h:85:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#442: FILE: include/asm-m68k/system.h:86:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#443: FILE: include/asm-m68k/system.h:87:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#447: FILE: include/asm-m68k/system.h:91:
+#define smp_read_barrier_depends()	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#461: FILE: include/asm-mips/system.h:146:
+#define read_barrier()		do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#462: FILE: include/asm-mips/system.h:147:
+#define read_barrier_depends()	do { } while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#469: FILE: include/asm-mips/system.h:153:
+#define memory_barrier()				\
 __asm__ __volatile__(					\
 	"# prevent instructions being moved around\n\t"	\
 	".set\tnoreorder\n\t"				\

ERROR:SPACING: space required before the open parenthesis '('
#480: FILE: include/asm-mips/system.h:164:
+#define read_barrier_depends()	do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#485: FILE: include/asm-mips/system.h:169:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#486: FILE: include/asm-mips/system.h:170:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#487: FILE: include/asm-mips/system.h:171:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#497: FILE: include/asm-mips/system.h:181:
+#define smp_read_barrier_depends()	do { } while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#509: FILE: include/asm-mips64/system.h:134:
+#define memory_barrier()				\
 __asm__ __volatile__(					\
 	"# prevent instructions being moved around\n\t"	\
 	".set\tnoreorder\n\t"				\

ERROR:SPACING: space required before the open parenthesis '('
#520: FILE: include/asm-mips64/system.h:144:
+#define read_barrier_depends()	do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#523: FILE: include/asm-mips64/system.h:147:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#524: FILE: include/asm-mips64/system.h:148:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#525: FILE: include/asm-mips64/system.h:149:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#535: FILE: include/asm-mips64/system.h:159:
+#define smp_read_barrier_depends()	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#546: FILE: include/asm-parisc/system.h:53:
+#define smp_read_barrier_depends()	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#554: FILE: include/asm-parisc/system.h:62:
+#define smp_read_barrier_depends()	do { } while(0)

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#564: FILE: include/asm-parisc/system.h:123:
+#define memory_barrier()  __asm__ __volatile__ ("sync" : : :"memory")
                                                            ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#564: FILE: include/asm-parisc/system.h:123:
+#define memory_barrier()  __asm__ __volatile__ ("sync" : : :"memory")

ERROR:SPACING: space required before the open parenthesis '('
#567: FILE: include/asm-parisc/system.h:126:
+#define read_barrier_depends()	do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#569: FILE: include/asm-parisc/system.h:128:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#570: FILE: include/asm-parisc/system.h:129:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#571: FILE: include/asm-parisc/system.h:130:
+#define wmb()	write_barrier()

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#598: FILE: include/asm-ppc/system.h:35:
+#define memory_barrier()  __asm__ __volatile__ ("sync" : : : "memory")

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#599: FILE: include/asm-ppc/system.h:36:
+#define read_barrier()  __asm__ __volatile__ ("sync" : : : "memory")

ERROR:SPACING: space required before the open parenthesis '('
#600: FILE: include/asm-ppc/system.h:37:
+#define read_barrier_depends()  do { } while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#601: FILE: include/asm-ppc/system.h:38:
+#define write_barrier()  __asm__ __volatile__ ("eieio" : : : "memory")

WARNING:MEMORY_BARRIER: memory barrier without comment
#603: FILE: include/asm-ppc/system.h:40:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#604: FILE: include/asm-ppc/system.h:41:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#605: FILE: include/asm-ppc/system.h:42:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#618: FILE: include/asm-ppc/system.h:55:
+#define smp_read_barrier_depends()	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#634: FILE: include/asm-s390/system.h:118:
+#define read_barrier_depends() do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#643: FILE: include/asm-s390/system.h:127:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#644: FILE: include/asm-s390/system.h:128:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#645: FILE: include/asm-s390/system.h:129:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#662: FILE: include/asm-s390x/system.h:131:
+#define read_barrier_depends()	do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#674: FILE: include/asm-s390x/system.h:143:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#675: FILE: include/asm-s390x/system.h:144:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#676: FILE: include/asm-s390x/system.h:145:
+#define wmb()	write_barrier()

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#691: FILE: include/asm-sh/system.h:89:
+#define memory_barrier()	__asm__ __volatile__ ("": : :"memory")
                         	                        ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#691: FILE: include/asm-sh/system.h:89:
+#define memory_barrier()	__asm__ __volatile__ ("": : :"memory")
                         	                            ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#691: FILE: include/asm-sh/system.h:89:
+#define memory_barrier()	__asm__ __volatile__ ("": : :"memory")

ERROR:SPACING: space required before the open parenthesis '('
#693: FILE: include/asm-sh/system.h:91:
+#define read_barrier_depends()	do { } while(0)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#694: FILE: include/asm-sh/system.h:92:
+#define write_barrier()		__asm__ __volatile__ ("": : :"memory")
                        		                        ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#694: FILE: include/asm-sh/system.h:92:
+#define write_barrier()		__asm__ __volatile__ ("": : :"memory")
                        		                            ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#694: FILE: include/asm-sh/system.h:92:
+#define write_barrier()		__asm__ __volatile__ ("": : :"memory")

WARNING:MEMORY_BARRIER: memory barrier without comment
#696: FILE: include/asm-sh/system.h:94:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#697: FILE: include/asm-sh/system.h:95:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#698: FILE: include/asm-sh/system.h:96:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#708: FILE: include/asm-sh/system.h:106:
+#define smp_read_barrier_depends()	do { } while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#722: FILE: include/asm-sparc/system.h:292:
+#define memory_barrier()	__asm__ __volatile__ ("" : : : "memory")

ERROR:SPACING: space required before the open parenthesis '('
#724: FILE: include/asm-sparc/system.h:294:
+#define read_barrier_depends()	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#730: FILE: include/asm-sparc/system.h:300:
+#define smp_read_barrier_depends()	do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#733: FILE: include/asm-sparc/system.h:303:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#734: FILE: include/asm-sparc/system.h:304:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#735: FILE: include/asm-sparc/system.h:305:
+#define wmb()	write_barrier()

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#748: FILE: include/asm-sparc64/system.h:83:
+#define memory_barrier()		\
 	membar("#LoadLoad | #LoadStore | #StoreStore | #StoreLoad");

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: space required before the open parenthesis '('
#753: FILE: include/asm-sparc64/system.h:86:
+#define read_barrier_depends()		do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#760: FILE: include/asm-sparc64/system.h:93:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#761: FILE: include/asm-sparc64/system.h:94:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#762: FILE: include/asm-sparc64/system.h:95:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#772: FILE: include/asm-sparc64/system.h:105:
+#define smp_read_barrier_depends()	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#783: FILE: include/asm-x86_64/system.h:216:
+#define smp_read_barrier_depends()	do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#788: FILE: include/asm-x86_64/system.h:221:
+#define smp_read_barrier_depends()	do {} while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#799: FILE: include/asm-x86_64/system.h:231:
+#define memory_barrier()	asm volatile("mfence":::"memory")

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#800: FILE: include/asm-x86_64/system.h:232:
+#define read_barrier()		asm volatile("lfence":::"memory")

ERROR:SPACING: space required before the open parenthesis '('
#801: FILE: include/asm-x86_64/system.h:233:
+#define read_barrier_depends()	do {} while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#802: FILE: include/asm-x86_64/system.h:234:
+#define write_barrier()		asm volatile("sfence":::"memory")

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#804: FILE: include/asm-x86_64/system.h:236:
+#define mb() ^Imemory_barrier()$

WARNING:MEMORY_BARRIER: memory barrier without comment
#804: FILE: include/asm-x86_64/system.h:236:
+#define mb() 	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#805: FILE: include/asm-x86_64/system.h:237:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#806: FILE: include/asm-x86_64/system.h:238:
+#define wmb()	write_barrier()

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000432829.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 67 errors, 52 warnings, 0 checks, 679 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000432829.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
