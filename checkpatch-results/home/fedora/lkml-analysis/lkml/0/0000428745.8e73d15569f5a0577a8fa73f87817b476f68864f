ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#45: 
--- a/include/sound/asequencer.h	Sun Sep 29 20:18:57 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#52: FILE: include/sound/asequencer.h:260:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#61: FILE: include/sound/asequencer.h:376:
+} __attribute__((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#78: FILE: include/sound/asequencer.h:498:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#106: FILE: include/sound/driver.h:53:
+#if defined(__i386__) || defined(__ppc__) || defined(__x86_64__)

Architecture specific defines should be avoided wherever
possible.

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#166: FILE: sound/core/ioctl32/ioctl32.c:98:
+static int _snd_ioctl32_ctl_elem_list(unsigned int fd, unsigned int cmd, unsigned long arg, struct file *file, unsigned int native_ctl)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#174: FILE: sound/core/ioctl32/ioctl32.c:106:
+	if (copy_from_user(&data32, (void*)arg, sizeof(data32))) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#193: FILE: sound/core/ioctl32/ioctl32.c:125:
+	if (copy_to_user((void*)arg, &data32, sizeof(data32))) {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#211: FILE: sound/core/ioctl32/ioctl32.c:166:
+} __attribute__((packed));

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#214: FILE: sound/core/ioctl32/ioctl32.c:168:
+static int _snd_ioctl32_ctl_elem_info(unsigned int fd, unsigned int cmd, unsigned long arg, struct file *file, unsigned int native_ctl)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#224: FILE: sound/core/ioctl32/ioctl32.c:176:
+	if (copy_from_user(&data32, (void*)arg, sizeof(data32))) {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#284: FILE: sound/core/ioctl32/ioctl32.c:248:
+} __attribute__((packed));

WARNING:LONG_LINE: line length of 136 exceeds 100 columns
#293: FILE: sound/core/ioctl32/ioctl32.c:276:
+static int _snd_ioctl32_ctl_elem_value(unsigned int fd, unsigned int cmd, unsigned long arg, struct file *file, unsigned int native_ctl)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#308: FILE: sound/core/ioctl32/ioctl32.c:289:
+	if (copy_from_user(&data32, (void*)arg, sizeof(data32))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#331: FILE: sound/core/ioctl32/ioctl32.c:326:
+			printk("unknown type %d\n", type);

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#429: FILE: sound/core/ioctl32/ioctl32.h:59:
+static int _snd_ioctl32_##type(unsigned int fd, unsigned int cmd, unsigned long arg, struct file *file, unsigned int native_ctl)\

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#438: FILE: sound/core/ioctl32/ioctl32.h:66:
+	if (copy_from_user(&data32, (void*)arg, sizeof(data32))) {\

ERROR:SPACING: space required after that close brace '}'
#441: FILE: sound/core/ioctl32/ioctl32.h:69:
+	}\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#455: FILE: sound/core/ioctl32/ioctl32.h:77:
+		if (copy_to_user((void*)arg, &data32, sizeof(data32))) {\

ERROR:SPACING: space required after that close brace '}'
#458: FILE: sound/core/ioctl32/ioctl32.h:80:
+		}\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#464: FILE: sound/core/ioctl32/ioctl32.h:86:
+#define DEFINE_ALSA_IOCTL_ENTRY(name,type,native_ctl) \
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#464: FILE: sound/core/ioctl32/ioctl32.h:86:
+#define DEFINE_ALSA_IOCTL_ENTRY(name,type,native_ctl) \
                                          ^

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#465: FILE: sound/core/ioctl32/ioctl32.h:87:
+static int snd_ioctl32_##name(unsigned int fd, unsigned int cmd, unsigned long arg, struct file *file) {\

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#465: FILE: sound/core/ioctl32/ioctl32.h:87:
+static int snd_ioctl32_##name(unsigned int fd, unsigned int cmd, unsigned long arg, struct file *file) {\

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE_COMMENT: line length of 127 exceeds 100 columns
#480: FILE: sound/core/ioctl32/pcm32.c:57:
+	struct sndrv_mask masks[SNDRV_PCM_HW_PARAM_LAST_MASK - SNDRV_PCM_HW_PARAM_FIRST_MASK + 1]; /* this must be identical */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#489: FILE: sound/core/ioctl32/pcm32.c:67:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#498: FILE: sound/core/ioctl32/pcm32.c:106:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#507: FILE: sound/core/ioctl32/pcm32.c:127:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#516: FILE: sound/core/ioctl32/pcm32.c:140:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#525: FILE: sound/core/ioctl32/pcm32.c:154:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#547: FILE: sound/core/ioctl32/pcm32.c:185:
+} __attribute__((packed));

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#554: FILE: sound/core/ioctl32/pcm32.c:187:
+static int _snd_ioctl32_xferi(unsigned int fd, unsigned int cmd, unsigned long arg, struct file *file, unsigned int native_ctl)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#562: FILE: sound/core/ioctl32/pcm32.c:195:
+	if (copy_from_user(&data32, (void*)arg, sizeof(data32))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#575: FILE: sound/core/ioctl32/pcm32.c:208:
+	if (copy_to_user((void*)arg, &data32, sizeof(data32))) {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#598: FILE: sound/core/ioctl32/pcm32.c:223:
+} __attribute__((packed));

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#607: FILE: sound/core/ioctl32/pcm32.c:231:
+static int _snd_ioctl32_xfern(unsigned int fd, unsigned int cmd, unsigned long arg, struct file *file, unsigned int native_ctl)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#654: FILE: sound/core/ioctl32/pcm32.c:268:
+	if ((ch = substream->runtime->channels) > 128) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#710: FILE: sound/core/ioctl32/pcm32.c:321:
+
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#761: FILE: sound/core/ioctl32/rawmidi32.c:35:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#770: FILE: sound/core/ioctl32/rawmidi32.c:48:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#779: FILE: sound/core/ioctl32/rawmidi32.c:56:
+} __attribute__((packed));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: sound/core/ioctl32/seq32.c:74:
+  SNDRV_SEQ_IOCTL_CREATE_PORT32 = _IOWR('S', 0x20, struct sndrv_seq_port_info32),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#844: FILE: sound/core/ioctl32/seq32.c:75:
+  SNDRV_SEQ_IOCTL_DELETE_PORT32 = _IOW ('S', 0x21, struct sndrv_seq_port_info32),$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#844: FILE: sound/core/ioctl32/seq32.c:75:
+  SNDRV_SEQ_IOCTL_DELETE_PORT32 = _IOW ('S', 0x21, struct sndrv_seq_port_info32),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#845: FILE: sound/core/ioctl32/seq32.c:76:
+  SNDRV_SEQ_IOCTL_GET_PORT_INFO32 = _IOWR('S', 0x22, struct sndrv_seq_port_info32),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#846: FILE: sound/core/ioctl32/seq32.c:77:
+  SNDRV_SEQ_IOCTL_SET_PORT_INFO32 = _IOW ('S', 0x23, struct sndrv_seq_port_info32),$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#846: FILE: sound/core/ioctl32/seq32.c:77:
+  SNDRV_SEQ_IOCTL_SET_PORT_INFO32 = _IOW ('S', 0x23, struct sndrv_seq_port_info32),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#847: FILE: sound/core/ioctl32/seq32.c:78:
+  SNDRV_SEQ_IOCTL_QUERY_NEXT_PORT32 = _IOWR('S', 0x52, struct sndrv_seq_port_info32),$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#905: FILE: sound/core/memory.c:442:
+		memcpy_fromio(buf, (void*)src, c);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#914: FILE: sound/core/memory.c:465:
+		memcpy_toio((void*)dst, buf, c);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#947: FILE: sound/core/seq/seq_clientmgr.c:1027:
+				void *ptr = (void*)A(event.data.raw32.d[1]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#948: FILE: sound/core/seq/seq_clientmgr.c:1028:
+				void *ptr = (void*)A(event.data.raw32.d[1]);
+				event.data.ext.ptr = ptr;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#965: FILE: sound/core/seq/seq_clientmgr.c:1112:
+	if (copy_from_user(&info, (void*)arg, sizeof(info)))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cptr"
#970: FILE: sound/core/seq/seq_clientmgr.c:1117:
+	if (cptr == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#974: FILE: sound/core/seq/seq_clientmgr.c:1121:
+	if (! info.big_endian) {
 	    ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428745.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 31 warnings, 4 checks, 917 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428745.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
