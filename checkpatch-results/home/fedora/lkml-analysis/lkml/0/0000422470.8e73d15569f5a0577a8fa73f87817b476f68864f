WARNING:TYPO_SPELLING: 'ather' may be misspelled - perhaps 'other'?
#31: 
 I hope this may be base for ather multi-byte languege support.
                             ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'languege' may be misspelled - perhaps 'language'?
#31: 
 I hope this may be base for ather multi-byte languege support.
                                              ^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#117: FILE: drivers/char/console_macros.h:1:
+#include <linux/config.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#169: FILE: drivers/char/console_pc9800.h:1:
+#ifndef __CONSOLE_PC9800_H

CHECK:CAMELCASE: Avoid CamelCase: <Addr>
#173: FILE: drivers/char/console_pc9800.h:5:
+static inline unsigned long __pc9800_attr_offset(unsigned long Addr, unsigned long vss)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space required before the open parenthesis '('
#175: FILE: drivers/char/console_pc9800.h:7:
+	if(Addr >= (unsigned long)__va(0xa0000)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#176: FILE: drivers/char/console_pc9800.h:8:
+	if(Addr >= (unsigned long)__va(0xa0000)
+	   && Addr < (unsigned long)__va(0xa2000)) {

ERROR:SPACING: space required before the open brace '{'
#178: FILE: drivers/char/console_pc9800.h:10:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#178: FILE: drivers/char/console_pc9800.h:10:
+	}else{

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#183: FILE: drivers/char/console_pc9800.h:15:
+}
+#define pc9800_attr_offset(x) \

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#184: FILE: drivers/char/console_pc9800.h:16:
+	((typeof(x))__pc9800_attr_offset((unsigned long)(x),(vc_cons[currcons].d->vc_screenbuf_size)))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#184: FILE: drivers/char/console_pc9800.h:16:
+	((typeof(x))__pc9800_attr_offset((unsigned long)(x),(vc_cons[currcons].d->vc_screenbuf_size)))
 	                                                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/char/consolemap.c:170:
+  },$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#223: FILE: drivers/char/consolemap.c:174:
+  /* code marked with ** is not defined in JIS X0201.
+	 So 0x00 - 0x1f are mapped to same to Laten1,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'directry' may be misspelled - perhaps 'directory'?
#224: FILE: drivers/char/consolemap.c:175:
+	 and others are mapped to PC-9800 internal font# directry */
 	                                                 ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#224: FILE: drivers/char/consolemap.c:175:
+	 and others are mapped to PC-9800 internal font# directry */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/char/consolemap.c:176:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: drivers/char/consolemap.c:177:
+    0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/char/consolemap.c:179:
+    0x0008, 0x0009, 0x000a, 0x000b, 0x000c, 0x000d, 0x000e, 0x000f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: drivers/char/consolemap.c:181:
+    0x0010, 0x0011, 0x0012, 0x0013, 0x0014, 0x0015, 0x0016, 0x0017,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: drivers/char/consolemap.c:183:
+    0x0018, 0x0019, 0x001a, 0x001b, 0x001c, 0x001d, 0x001e, 0x001f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: drivers/char/consolemap.c:185:
+    0x0020, 0x0021, 0x0022, 0x0023, 0x0024, 0x0025, 0x0026, 0x0027,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: drivers/char/consolemap.c:186:
+    0x0028, 0x0029, 0x002a, 0x002b, 0x002c, 0x002d, 0x002e, 0x002f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/char/consolemap.c:187:
+    0x0030, 0x0031, 0x0032, 0x0033, 0x0034, 0x0035, 0x0036, 0x0037,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: drivers/char/consolemap.c:188:
+    0x0038, 0x0039, 0x003a, 0x003b, 0x003c, 0x003d, 0x003e, 0x003f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/char/consolemap.c:189:
+    0x0040, 0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: drivers/char/consolemap.c:190:
+    0x0048, 0x0049, 0x004a, 0x004b, 0x004c, 0x004d, 0x004e, 0x004f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: drivers/char/consolemap.c:191:
+    0x0050, 0x0051, 0x0052, 0x0053, 0x0054, 0x0055, 0x0056, 0x0057,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: drivers/char/consolemap.c:192:
+    0x0058, 0x0059, 0x005a, 0x005b, 0x00a5, 0x005d, 0x005e, 0x005f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: drivers/char/consolemap.c:193:
+    0x0060, 0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/char/consolemap.c:194:
+    0x0068, 0x0069, 0x006a, 0x006b, 0x006c, 0x006d, 0x006e, 0x006f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: drivers/char/consolemap.c:195:
+    0x0070, 0x0071, 0x0072, 0x0073, 0x0074, 0x0075, 0x0076, 0x0077,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: drivers/char/consolemap.c:196:
+    0x0078, 0x0079, 0x007a, 0x007b, 0x007c, 0x007d, 0x203e, 0xf07f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: drivers/char/consolemap.c:198:
+    0xf080, 0xf081, 0xf082, 0xf083, 0xf084, 0xf085, 0xf086, 0xf087,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: drivers/char/consolemap.c:200:
+    0xf088, 0xf089, 0xf08a, 0xf08b, 0xf08c, 0xf08d, 0xf08e, 0xf08f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: drivers/char/consolemap.c:202:
+    0xf090, 0xf091, 0xf092, 0xf093, 0xf094, 0xf095, 0xf096, 0xf097,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: drivers/char/consolemap.c:204:
+    0xf098, 0xf099, 0xf09a, 0xf09b, 0xf09c, 0xf09d, 0xf09e, 0xf09f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: drivers/char/consolemap.c:206:
+    0xf0a0, 0xff61, 0xff62, 0xff63, 0xff64, 0xff65, 0xff66, 0xff67,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: drivers/char/consolemap.c:208:
+    0xff68, 0xff69, 0xff6a, 0xff6b, 0xff6c, 0xff6d, 0xff6e, 0xff6f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: drivers/char/consolemap.c:209:
+    0xff70, 0xff71, 0xff72, 0xff73, 0xff74, 0xff75, 0xff76, 0xff77,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: drivers/char/consolemap.c:210:
+    0xff78, 0xff79, 0xff7a, 0xff7b, 0xff7c, 0xff7d, 0xff7e, 0xff7f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: drivers/char/consolemap.c:211:
+    0xff80, 0xff81, 0xff82, 0xff83, 0xff84, 0xff85, 0xff86, 0xff87,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: drivers/char/consolemap.c:212:
+    0xff88, 0xff89, 0xff8a, 0xff8b, 0xff8c, 0xff8d, 0xff8e, 0xff8f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: drivers/char/consolemap.c:213:
+    0xff90, 0xff91, 0xff92, 0xff93, 0xff94, 0xff95, 0xff96, 0xff97,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: drivers/char/consolemap.c:214:
+    0xff98, 0xff99, 0xff9a, 0xff9b, 0xff9c, 0xff9d, 0xff9e, 0xff9f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: drivers/char/consolemap.c:215:
+    0xf0e0, 0xf0e1, 0xf0e2, 0xf0e3, 0xf0e4, 0xf0e5, 0xf0e6, 0xf0e7,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: drivers/char/consolemap.c:217:
+    0xf0e8, 0xf0e9, 0xf0ea, 0xf0eb, 0xf0ec, 0xf0ed, 0xf0ee, 0xf0ef,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/char/consolemap.c:219:
+    0xf0f0, 0xf0f1, 0xf0f2, 0xf0f3, 0xf0f4, 0xf0f5, 0xf0f6, 0xf0f7,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: drivers/char/consolemap.c:221:
+    0xf0f8, 0xf0f9, 0xf0fa, 0xf0fb, 0xf0fc, 0xf0fd, 0xf0fe, 0xf0ff$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: drivers/char/consolemap.c:223:
+  },$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#304: FILE: drivers/char/pc9800.uni:12:
+0x00^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#586: FILE: drivers/char/vc_screen.c:244:
+						| ((vcs_scr_readw(currcons, pc9800_attr_offset(org)) & 0xff) << 8);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#630: FILE: drivers/char/vc_screen.c:446:
+					       pc9800_attr_offset (org));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#693: FILE: drivers/char/vt.c:272:
+	scr_memcpyw(pc9800_attr_offset(d), pc9800_attr_offset(s), (b-t-nr) * video_size_row);
 	                                                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#693: FILE: drivers/char/vt.c:272:
+	scr_memcpyw(pc9800_attr_offset(d), pc9800_attr_offset(s), (b-t-nr) * video_size_row);
 	                                                              ^

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#694: FILE: drivers/char/vt.c:273:
+	scr_memsetw(pc9800_attr_offset(d + (b - t - nr) * video_num_columns), video_erase_attr, video_size_row * nr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#705: FILE: drivers/char/vt.c:295:
+	scr_memmovew(pc9800_attr_offset(s + step), pc9800_attr_offset(s),
+			(b - t - nr) * video_size_row);

WARNING:LINE_SPACING: Missing a blank line after declarations
#724: FILE: drivers/char/vt.c:325:
+		unsigned long	egc_attr_offset;
+		if (p >= vc_cons[currcons].d->vc_screenbuf

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vc_cons[currcons].d->vc_screenbuf'
#724: FILE: drivers/char/vt.c:325:
+		if (p >= vc_cons[currcons].d->vc_screenbuf
+			&& (unsigned long)p <
+			(unsigned long)(vc_cons[currcons].d->vc_screenbuf)
+				+ vc_cons[currcons].d->vc_screenbuf_size)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#725: FILE: drivers/char/vt.c:326:
+		if (p >= vc_cons[currcons].d->vc_screenbuf
+			&& (unsigned long)p <

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#729: FILE: drivers/char/vt.c:330:
+			egc_attr_offset
+				= vc_cons[currcons].d->vc_screenbuf_size;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vc_cons[currcons].d->vc_screenbuf'
#858: FILE: drivers/char/vt.c:565:
+		if (p >= vc_cons[currcons].d->vc_screenbuf
+			&& (unsigned long)p <
+			(unsigned long)(vc_cons[currcons].d->vc_screenbuf)
+				+ vc_cons[currcons].d->vc_screenbuf_size)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#859: FILE: drivers/char/vt.c:566:
+		if (p >= vc_cons[currcons].d->vc_screenbuf
+			&& (unsigned long)p <

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#863: FILE: drivers/char/vt.c:570:
+			egc_attr_offset
+				= vc_cons[currcons].d->vc_screenbuf_size;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#927: FILE: drivers/char/vt.c:635:
+				     y,x+nr);
 				      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#927: FILE: drivers/char/vt.c:635:
+				     y,x+nr);
 				        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#938: FILE: drivers/char/vt.c:650:
+		scr_writew(scr_readw(pc9800_attr_offset(p+nr)), pc9800_attr_offset(p));
 		                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1033: FILE: drivers/char/vt.c:851:
+        complement_mask = 0x0004;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1033: FILE: drivers/char/vt.c:851:
+        complement_mask = 0x0004;$

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1057: FILE: drivers/char/vt.c:933:
+			unsigned short *p = (unsigned short *)kmalloc(ss * 2, GFP_USER);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1068: FILE: drivers/char/vt.c:950:
+	printk(KERN_DEBUG "vc_resize: %ux%u -> %ux%u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1069: FILE: drivers/char/vt.c:951:
+	printk(KERN_DEBUG "vc_resize: %ux%u -> %ux%u\n",
+		video_num_columns, video_num_lines, cc, ll);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1082: FILE: drivers/char/vt.c:964:
+		printk(KERN_DEBUG "vc_resize: #%d: %p+%u -> %p+%u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1083: FILE: drivers/char/vt.c:965:
+		printk(KERN_DEBUG "vc_resize: #%d: %p+%u -> %p+%u\n",
+			currcons + 1, screenbuf, screenbuf_size,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1112: FILE: drivers/char/vt.c:1002:
+			int i, j;
+			printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1112: FILE: drivers/char/vt.c:1002:
+			printk(KERN_DEBUG

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1113: FILE: drivers/char/vt.c:1003:
+				__FUNCTION__ ": scr_memcpyw(%p, %p, %u)"

CHECK:SPACING: No space is necessary after a cast
#1118: FILE: drivers/char/vt.c:1008:
+				(void *) nl, (void *) ol, rlth

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1121: FILE: drivers/char/vt.c:1011:
+#endif^I^I^I^I$

CHECK:SPACING: No space is necessary after a cast
#1123: FILE: drivers/char/vt.c:1013:
+			for (j = cc - 1; j >= 0 && ((u16 *) ol)[j] == ' '; j--)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1126: FILE: drivers/char/vt.c:1016:
+				printk(KERN_DEBUG __FUNCTION__	": %p \"",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1126: FILE: drivers/char/vt.c:1016:
+				printk(KERN_DEBUG __FUNCTION__	": %p \"",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1127: FILE: drivers/char/vt.c:1017:
+				printk(KERN_DEBUG __FUNCTION__	": %p \"",
+					(void *) ol);

CHECK:SPACING: No space is necessary after a cast
#1127: FILE: drivers/char/vt.c:1017:
+					(void *) ol);

CHECK:SPACING: No space is necessary after a cast
#1129: FILE: drivers/char/vt.c:1019:
+					u16 ch = ((u16 *) ol)[i];

WARNING:LINE_SPACING: Missing a blank line after declarations
#1130: FILE: drivers/char/vt.c:1020:
+					u16 ch = ((u16 *) ol)[i];
+					printk("%c",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1130: FILE: drivers/char/vt.c:1020:
+					printk("%c",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1131: FILE: drivers/char/vt.c:1021:
+					printk("%c",
+						(' ' <= ch && ch <= '~')

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1134: FILE: drivers/char/vt.c:1024:
+				printk("\"\n");

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1141: FILE: drivers/char/vt.c:1030:
+			scr_memcpyw((unsigned short *)(nl + ss), (unsigned short *)(ol + oaoff), rlth);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1158: FILE: drivers/char/vt.c:1046:
+		printk(KERN_DEBUG __FUNCTION__ ":%u: nl=%#x, nlend=%#x\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1158: FILE: drivers/char/vt.c:1046:
+		printk(KERN_DEBUG __FUNCTION__ ":%u: nl=%#x, nlend=%#x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1159: FILE: drivers/char/vt.c:1047:
+		printk(KERN_DEBUG __FUNCTION__ ":%u: nl=%#x, nlend=%#x\n",
+			__LINE__, nl, nlend);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1236: FILE: drivers/char/vt.c:1566:
+	if (sw->con_setterm_command
+	    && sw->con_setterm_command(vc_cons[currcons].d))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1272: FILE: drivers/char/vt.c:1714:
+        s_kanji_mode = kanji_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1272: FILE: drivers/char/vt.c:1714:
+        s_kanji_mode = kanji_mode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1273: FILE: drivers/char/vt.c:1715:
+        s_kanji_jis_mode = kanji_jis_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1273: FILE: drivers/char/vt.c:1715:
+        s_kanji_jis_mode = kanji_jis_mode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1278: FILE: drivers/char/vt.c:1720:
+        kanji_mode = s_kanji_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1278: FILE: drivers/char/vt.c:1720:
+        kanji_mode = s_kanji_mode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1279: FILE: drivers/char/vt.c:1721:
+        kanji_jis_mode = s_kanji_jis_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1279: FILE: drivers/char/vt.c:1721:
+        kanji_jis_mode = s_kanji_jis_mode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1280: FILE: drivers/char/vt.c:1722:
+        kanji_char1 = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1280: FILE: drivers/char/vt.c:1722:
+        kanji_char1 = 0;$

CHECK:CAMELCASE: Avoid CamelCase: <ESsetJIS>
#1287: FILE: drivers/char/vt.c:1729:
+	ESsetJIS, ESsetJIS2,

CHECK:CAMELCASE: Avoid CamelCase: <ESsetJIS2>
#1287: FILE: drivers/char/vt.c:1729:
+	ESsetJIS, ESsetJIS2,

ERROR:SPACING: space required before the open brace '{'
#1374: FILE: drivers/char/vt.c:2161:
+		} else if (c == 'I'){

ERROR:SPACING: space required before the open brace '{'
#1408: FILE: drivers/char/vt.c:2195:
+		} else if (c == 'I'){

CHECK:BRACES: braces {} should be used on all arms of this statement
#1439: FILE: drivers/char/vt.c:2226:
+		if (c == '@')
[...]
+		else if (c == 'B')
[...]
+		else if (c == '('){
[...]
+		} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#1443: FILE: drivers/char/vt.c:2230:
+		else if (c == '('){

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1446: FILE: drivers/char/vt.c:2233:
+			return;
+		} else {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#1446: FILE: drivers/char/vt.c:2233:
+		} else {
+		vc_state = ESnormal;

CHECK:CAMELCASE: Avoid CamelCase: <ESnormal>
#1447: FILE: drivers/char/vt.c:2234:
+		vc_state = ESnormal;

ERROR:SPACING: space required before the open brace '{'
#1454: FILE: drivers/char/vt.c:2241:
+		if (c == 'D'){

ERROR:CODE_INDENT: code indent should use tabs where possible
#1500: FILE: drivers/char/vt.c:2359:
+                        (((unsigned int)c) & 0x007f);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1500: FILE: drivers/char/vt.c:2359:
+                        (((unsigned int)c) & 0x007f);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1506: FILE: drivers/char/vt.c:2365:
+^I^I^I^I} $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 24)
#1512: FILE: drivers/char/vt.c:2371:
+					if (kanji_char1) {
+                        if ((0x40 <= c && c <= 0x7E) ||

ERROR:CODE_INDENT: code indent should use tabs where possible
#1513: FILE: drivers/char/vt.c:2372:
+                        if ((0x40 <= c && c <= 0x7E) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1513: FILE: drivers/char/vt.c:2372:
+                        if ((0x40 <= c && c <= 0x7E) ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 56)
#1513: FILE: drivers/char/vt.c:2372:
+                        if ((0x40 <= c && c <= 0x7E) ||
[...]
+							realkanji = 1;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1513: FILE: drivers/char/vt.c:2372:
+                        if ((0x40 <= c && c <= 0x7E) ||

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1514: FILE: drivers/char/vt.c:2373:
+                            (0x80 <= c && c <= 0xFC)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1514: FILE: drivers/char/vt.c:2373:
+                            (0x80 <= c && c <= 0xFC)) {$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1514: FILE: drivers/char/vt.c:2373:
+                            (0x80 <= c && c <= 0xFC)) {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#1522: FILE: drivers/char/vt.c:2381:
+							if (!(c & 0x80)) {

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#1523: FILE: drivers/char/vt.c:2382:
+								if (c < 0x61)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1533: FILE: drivers/char/vt.c:2392:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1533: FILE: drivers/char/vt.c:2392:
+                        }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 24)
#1534: FILE: drivers/char/vt.c:2393:
+					} else {
+                        if ((0x81 <= c && c <= 0x9f) ||

ERROR:CODE_INDENT: code indent should use tabs where possible
#1535: FILE: drivers/char/vt.c:2394:
+                        if ((0x81 <= c && c <= 0x9f) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1535: FILE: drivers/char/vt.c:2394:
+                        if ((0x81 <= c && c <= 0x9f) ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 56)
#1535: FILE: drivers/char/vt.c:2394:
+                        if ((0x81 <= c && c <= 0x9f) ||
[...]
+							realkanji = 1;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1535: FILE: drivers/char/vt.c:2394:
+                        if ((0x81 <= c && c <= 0x9f) ||

ERROR:CODE_INDENT: code indent should use tabs where possible
#1536: FILE: drivers/char/vt.c:2395:
+                            (0xE0 <= c && c <= 0xEF)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1536: FILE: drivers/char/vt.c:2395:
+                            (0xE0 <= c && c <= 0xEF)) {$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1536: FILE: drivers/char/vt.c:2395:
+                            (0xE0 <= c && c <= 0xEF)) {

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1540: FILE: drivers/char/vt.c:2399:
+#if 1 /* hankaku kana patch */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1541: FILE: drivers/char/vt.c:2400:
+                        } else if (0xA1 <= c && c <= 0xDF) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1541: FILE: drivers/char/vt.c:2400:
+                        } else if (0xA1 <= c && c <= 0xDF) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 56)
#1541: FILE: drivers/char/vt.c:2400:
+                        } else if (0xA1 <= c && c <= 0xDF) {
+							tc = (unsigned int)translations[JP_MAP][c];

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1541: FILE: drivers/char/vt.c:2400:
+                        } else if (0xA1 <= c && c <= 0xDF) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1545: FILE: drivers/char/vt.c:2404:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1545: FILE: drivers/char/vt.c:2404:
+                        }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 24)
#1549: FILE: drivers/char/vt.c:2408:
+					if (utf)
+                        break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1550: FILE: drivers/char/vt.c:2409:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1550: FILE: drivers/char/vt.c:2409:
+                        break;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 24)
#1551: FILE: drivers/char/vt.c:2410:
+					if (c <= 0x7f) {
+                        kanji_char1 = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1552: FILE: drivers/char/vt.c:2411:
+                        kanji_char1 = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1552: FILE: drivers/char/vt.c:2411:
+                        kanji_char1 = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1553: FILE: drivers/char/vt.c:2412:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1553: FILE: drivers/char/vt.c:2412:
+                        break;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 24)
#1555: FILE: drivers/char/vt.c:2414:
+					if (kanji_char1) {
+                        if (kanji_char1 == 0x8e) {  /* SS2 */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1556: FILE: drivers/char/vt.c:2415:
+                        if (kanji_char1 == 0x8e) {  /* SS2 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1556: FILE: drivers/char/vt.c:2415:
+                        if (kanji_char1 == 0x8e) {  /* SS2 */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 56)
#1556: FILE: drivers/char/vt.c:2415:
+                        if (kanji_char1 == 0x8e) {  /* SS2 */
[...]
+							tc = (unsigned int)translations[JP_MAP][c];

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1560: FILE: drivers/char/vt.c:2419:
+#if 1 /* hankaku kana patch */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1563: FILE: drivers/char/vt.c:2422:
+                        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1563: FILE: drivers/char/vt.c:2422:
+                        } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 56)
#1563: FILE: drivers/char/vt.c:2422:
+                        } else {
+							tc = (((unsigned int)kanji_char1) << 8) |

ERROR:CODE_INDENT: code indent should use tabs where possible
#1568: FILE: drivers/char/vt.c:2427:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1568: FILE: drivers/char/vt.c:2427:
+                        }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 24)
#1569: FILE: drivers/char/vt.c:2428:
+					} else {
+                        kanji_char1 = (unsigned int)c;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1570: FILE: drivers/char/vt.c:2429:
+                        kanji_char1 = (unsigned int)c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1570: FILE: drivers/char/vt.c:2429:
+                        kanji_char1 = (unsigned int)c;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1571: FILE: drivers/char/vt.c:2430:
+                        continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1571: FILE: drivers/char/vt.c:2430:
+                        continue;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#1581: FILE: drivers/char/vt.c:2440:
+		if (!realkanji) {
[...]
 		if (utf) {

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1598: FILE: drivers/char/vt.c:2485:
+#if 1 /* hankaku kana patch */

WARNING:INDENTED_LABEL: labels should not be indented
#1599: FILE: drivers/char/vt.c:2486:
+	hankana_skip:

ERROR:CODE_INDENT: code indent should use tabs where possible
#1610: FILE: drivers/char/vt.c:2506:
+                ok = realkanji || ok;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1610: FILE: drivers/char/vt.c:2506:
+                ok = realkanji || ok;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#1615: FILE: drivers/char/vt.c:2511:
+			if (!realkanji) {
[...]
 			tc = conv_uni_to_pc(vc_cons[currcons].d, tc);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1650: FILE: drivers/char/vt.c:2557:
+^I^I^I^Itc = ((tc >> 8) & 0xff) | ((tc << 8) & 0xff00); $

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1653: FILE: drivers/char/vt.c:2560:
+				x ++;
 				  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1666: FILE: drivers/char/vt.c:2573:
+				if ( realkanji ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1666: FILE: drivers/char/vt.c:2573:
+				if ( realkanji ) {

ERROR:SPACING: space prohibited before that '--' (ctx:WxO)
#1667: FILE: drivers/char/vt.c:2574:
+					draw_x --;
 					       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1700: FILE: drivers/char/vt.c:2746:
+		scr_writew( c, (unsigned short *)pos);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1742: FILE: drivers/char/vt.c:3047:
+	printk(KERN_DEBUG __FUNCTION__ ": (#%u) %ux%u, %p+%u\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1742: FILE: drivers/char/vt.c:3047:
+	printk(KERN_DEBUG __FUNCTION__ ": (#%u) %ux%u, %p+%u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1743: FILE: drivers/char/vt.c:3048:
+	printk(KERN_DEBUG __FUNCTION__ ": (#%u) %ux%u, %p+%u\n",
+		cons_num + 1, video_num_columns, video_num_lines,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1755: FILE: drivers/char/vt.c:3091:
+		screenbuf
+			= (unsigned short *) alloc_bootmem(screenbuf_size * 2);

CHECK:SPACING: No space is necessary after a cast
#1755: FILE: drivers/char/vt.c:3091:
+			= (unsigned short *) alloc_bootmem(screenbuf_size * 2);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1794: FILE: drivers/char/vt.c:3201:
+		need_clear_attr = ((conswitchp == &gdc_con
+				    && csw == &fb_con)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1795: FILE: drivers/char/vt.c:3202:
+				    && csw == &fb_con)
+				   || (conswitchp == &fb_con

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1796: FILE: drivers/char/vt.c:3203:
+				   || (conswitchp == &fb_con
+				       && csw == &gdc_con));

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1810: FILE: drivers/char/vt.c:3231:
+#if defined CONFIG_PC9800 && defined CONFIG_FB
+		    || need_clear_attr

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1899: FILE: drivers/char/vt_ioctl.c:646:
+^I^I^Ireturn -EPERM; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1904: FILE: drivers/char/vt_ioctl.c:651:
+#endif $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1923: FILE: drivers/char/vt_ioctl.c:871:
+#ifndef CONFIG_PC9800^I^I    $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vc_data *' should also have an identifier name
#1950: FILE: include/linux/console.h:51:
+	int	(*con_setterm_command)(struct vc_data *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422470.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 44 errors, 113 warnings, 35 checks, 1936 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422470.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
