WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#75: FILE: arch/ia64/kernel/mspec.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#125: FILE: arch/ia64/kernel/mspec.c:51:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/atomic.h> instead of <asm/atomic.h>
#126: FILE: arch/ia64/kernel/mspec.c:52:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#137: FILE: arch/ia64/kernel/mspec.c:63:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'mmaped' may be misspelled - perhaps 'mapped'?
#154: FILE: arch/ia64/kernel/mspec.c:80:
+ * One of these structures is allocated when an mspec region is mmaped. The
                                                                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#181: FILE: arch/ia64/kernel/mspec.c:107:
+			for (i=0; i < SH2_AMO_CACHE_ENTRIES; i++) {
 			      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#189: FILE: arch/ia64/kernel/mspec.c:115:
+		memset((char *) addr, 0, len);

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#237: FILE: arch/ia64/kernel/mspec.c:163:
+			uncached_free_page(vdata-> maddr[i]);
 			                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#239: FILE: arch/ia64/kernel/mspec.c:165:
+			printk(KERN_WARNING "mspec_close(): "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mspec_close', this function's name, in a string
#239: FILE: arch/ia64/kernel/mspec.c:165:
+			printk(KERN_WARNING "mspec_close(): "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#240: FILE: arch/ia64/kernel/mspec.c:166:
+			printk(KERN_WARNING "mspec_close(): "
+			       "failed to zero page %i\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#263: FILE: arch/ia64/kernel/mspec.c:189:
+	maddr = (volatile unsigned long) vdata->maddr[index];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#263: FILE: arch/ia64/kernel/mspec.c:189:
+	maddr = (volatile unsigned long) vdata->maddr[index];

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page_table"
#282: FILE: arch/ia64/kernel/mspec.c:208:
+	if (page_table != NULL && !pte_present(*page_table)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#298: FILE: arch/ia64/kernel/mspec.c:224:
+static struct vm_operations_struct mspec_vm_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:ALLOC_SIZEOF_STRUCT: Prefer vmalloc(sizeof(*vdata)...) over vmalloc(sizeof(struct vma_data)...)
#324: FILE: arch/ia64/kernel/mspec.c:250:
+	vdata = vmalloc(sizeof(struct vma_data) + pages * sizeof(long));

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:CONST_STRUCT: struct file_operations should normally be const
#360: FILE: arch/ia64/kernel/mspec.c:286:
+static struct file_operations fetchop_fops = {

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#368: FILE: arch/ia64/kernel/mspec.c:294:
+	.fops &fetchop_fops
 	      ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#371: FILE: arch/ia64/kernel/mspec.c:297:
+static struct file_operations cached_fops = {

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#379: FILE: arch/ia64/kernel/mspec.c:305:
+	.fops &cached_fops
 	      ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#382: FILE: arch/ia64/kernel/mspec.c:308:
+static struct file_operations uncached_fops = {

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#390: FILE: arch/ia64/kernel/mspec.c:316:
+	.fops &uncached_fops
 	      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#415: FILE: arch/ia64/kernel/mspec.c:341:
+			printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#423: FILE: arch/ia64/kernel/mspec.c:349:
+		printk(KERN_ERR "%s: failed to register device %i\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#430: FILE: arch/ia64/kernel/mspec.c:356:
+		printk(KERN_ERR "%s: failed to register device %i\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#437: FILE: arch/ia64/kernel/mspec.c:363:
+	printk(KERN_INFO "%s %s initialized devices: %s %s %s\n",

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000143495.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 14 warnings, 10 checks, 411 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000143495.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
