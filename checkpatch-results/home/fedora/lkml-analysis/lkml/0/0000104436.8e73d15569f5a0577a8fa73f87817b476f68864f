WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
The attached patch makes the FRV arch use virtual interrupt disablement because

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#92: 
Signed-Off-By: David Howells <dhowells@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#284: FILE: arch/frv/kernel/entry.S:320:
+	.size		__entry_kernel_external_interrupt_virtually_disabled,.-__entry_kernel_external_interrupt_virtually_disabled

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#304: FILE: arch/frv/kernel/entry.S:340:
+	.size		__entry_kernel_external_interrupt_virtual_reenable,.-__entry_kernel_external_interrupt_virtual_reenable

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#370: FILE: arch/frv/kernel/entry-table.S:285:
+	# trap #2 in kernel - reenable interrupts
 	                      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Futhermore' may be misspelled - perhaps 'Furthermore'?
#636: FILE: Documentation/fujitsu/frv/kernel-ABI.txt:144:
+Futhermore, break.S is so complicated because single-step mode does not switch off on entry to an
 ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#752: FILE: include/asm-frv/system.h:50:
+ * - uses TIHI (TRAP if Z==0 && C==0) #2 to really reenable interrupts
                                                    ^^^^^^^^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#758: FILE: include/asm-frv/system.h:55:
+#define local_irq_disable()					\
+do {								\
+	/* set Z flag, but don't change the C flag */		\
+	asm volatile("	andcc	gr0,gr0,gr0,icc2	\n"	\
+		     :						\
+		     :						\
+		     : "memory", "icc2"				\
+		     );						\
+} while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#761: FILE: include/asm-frv/system.h:58:
+	asm volatile("	andcc	gr0,gr0,gr0,icc2	\n"	\

ERROR:SPACING: space required before the open parenthesis '('
#766: FILE: include/asm-frv/system.h:63:
+} while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#768: FILE: include/asm-frv/system.h:65:
+#define local_irq_enable()					\
+do {								\
+	/* clear Z flag and then test the C flag */		\
+	asm volatile("  oricc	gr0,#1,gr0,icc2		\n"	\
+		     "	tihi	icc2,gr0,#2		\n"	\
+		     :						\
+		     :						\
+		     : "memory", "icc2"				\
+		     );						\
+} while(0)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#771: FILE: include/asm-frv/system.h:68:
+	asm volatile("  oricc	gr0,#1,gr0,icc2		\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#772: FILE: include/asm-frv/system.h:69:
+		     "	tihi	icc2,gr0,#2		\n"	\

ERROR:SPACING: space required before the open parenthesis '('
#777: FILE: include/asm-frv/system.h:74:
+} while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'flags' - possible side-effects?
#779: FILE: include/asm-frv/system.h:76:
+#define local_save_flags(flags)					\
+do {								\
+	typecheck(unsigned long, flags);			\
+	asm volatile("movsg ccr,%0"				\
+		     : "=r"(flags)				\
+		     :						\
+		     : "memory");				\
+								\
+	/* shift ICC2.Z to bit 0 */				\
+	flags >>= 26;						\
+								\
+	/* make flags 1 if interrupts disabled, 0 otherwise */	\
+	flags &= 1UL;						\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#792: FILE: include/asm-frv/system.h:89:
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#802: FILE: include/asm-frv/system.h:99:
+} while(0)

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#804: FILE: include/asm-frv/system.h:101:
+#define	local_irq_restore(flags)					\
+do {									\
+	typecheck(unsigned long, flags);				\
+									\
+	/* load the Z flag by turning 1 if disabled into 0 if disabled	\

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#809: FILE: include/asm-frv/system.h:106:
+	 * and thus setting the Z flag but not the C flag */		\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#810: FILE: include/asm-frv/system.h:107:
+	asm volatile("  xoricc	%0,#1,gr0,icc2		\n"		\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#812: FILE: include/asm-frv/system.h:109:
+		     "	tihi	icc2,gr0,#2		\n"		\

ERROR:SPACING: space required before the open parenthesis '('
#818: FILE: include/asm-frv/system.h:115:
+} while(0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000104436.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 16 warnings, 1 checks, 713 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000104436.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
