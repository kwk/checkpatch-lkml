WARNING:TYPO_SPELLING: 'garuanteed' may be misspelled - perhaps 'guaranteed'?
#50: 
	- in this way, the reclaims for aging are garuanteed to be more than
	                                          ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'shrinked' may be misspelled - perhaps 'shrunk'?
#66: 
	- the slabs are shrinked more if vm pressure is high;
	                ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#132: FILE: mm/page_alloc.c:1471:
 			" present:%lukB"
+			" aging:%lukB"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#133: FILE: mm/page_alloc.c:1472:
+			" aging:%lukB"
+			" age:%lu"

WARNING:SPLIT_STRING: quoted string split across lines
#164: FILE: mm/page_alloc.c:2249:
 			   "\n        inactive %lu"
+			   "\n        aging    %lu"

WARNING:SPLIT_STRING: quoted string split across lines
#165: FILE: mm/page_alloc.c:2250:
+			   "\n        aging    %lu"
+			   "\n        age      %lu"

WARNING:SPLIT_STRING: quoted string split across lines
#166: FILE: mm/page_alloc.c:2251:
+			   "\n        age      %lu"
+			   "\n        scanned  %lu (a: %lu)"

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#205: FILE: mm/vmscan.c:143:
+#define pages_more_aged(a, b) ^I^I^I^I^I^I\$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#205: FILE: mm/vmscan.c:143:
+#define pages_more_aged(a, b) 						\
+	((b->page_age - a->page_age) & PAGE_AGE_MASK) >			\
+			PAGE_AGE_MASK - (1 << (PAGE_AGE_SHIFT - 3))	\
+

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#205: FILE: mm/vmscan.c:143:
+#define pages_more_aged(a, b) 						\
+	((b->page_age - a->page_age) & PAGE_AGE_MASK) >			\
+			PAGE_AGE_MASK - (1 << (PAGE_AGE_SHIFT - 3))	\
+

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#205: FILE: mm/vmscan.c:143:
+#define pages_more_aged(a, b) 						\
+	((b->page_age - a->page_age) & PAGE_AGE_MASK) >			\
+			PAGE_AGE_MASK - (1 << (PAGE_AGE_SHIFT - 3))	\
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: mm/vmscan.c:165:
+static inline void update_slab_age(struct shrinker *s,
+					unsigned long len, int nr_scan)

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: mm/vmscan.c:187:
+^I        shrinker->aging_total = 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: mm/vmscan.c:188:
+^I        shrinker->aging_milestone = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: mm/vmscan.c:189:
+^I        shrinker->page_age = 0;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#353: FILE: mm/vmscan.c:272:
+			update_slab_age(shrinker, nr_before * DEF_PRIORITY,
+						SHRINK_BATCH * shrinker->seeks *

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#425: FILE: mm/vmscan.c:1205:
+				cpumask_t cpu = node_to_cpumask(

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#479: FILE: mm/vmscan.c:1349:
+	youngest_zone = oldest_zone = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#487: FILE: mm/vmscan.c:1357:
+			youngest_zone = oldest_zone = zone;

CHECK:BRACES: braces {} should be used on all arms of this statement
#512: FILE: mm/vmscan.c:1395:
+				if (!zone_watermark_ok(zone, order,
[...]
+				} else if (zone == youngest_zone &&
[...]
+				} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#513: FILE: mm/vmscan.c:1396:
+				if (!zone_watermark_ok(zone, order,
+							zone->pages_high,

CHECK:BRACES: Unbalanced braces around else statement
#521: FILE: mm/vmscan.c:1404:
+				} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000130958.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 8 warnings, 10 checks, 426 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000130958.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
