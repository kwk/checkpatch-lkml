WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
This patch is the first of 4 experimental pnp patches.  It is against a clean

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#44: 
--- a/drivers/pnp/base.h	Fri Jan 31 16:59:56 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#50: FILE: drivers/pnp/base.h:7:
+extern int pnp_configure_device(struct pnp_dev *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TYPO_SPELLING: 'ohter' may be misspelled - perhaps 'other'?
#61: FILE: drivers/pnp/base.h:18:
+#define CONFLICT_TYPE_INTERNAL	0x0010	/* resources within the device conflict with each ohter */
                               	      	                                                  ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#72: FILE: drivers/pnp/card.c:25:
+static const struct pnp_card_id * match_card(struct pnpc_driver *drv, struct pnp_card *card)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#92: FILE: drivers/pnp/card.c:223:
+			if(pnp_activate_dev(dev)<0) {
 			                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#92: FILE: drivers/pnp/card.c:223:
+			if(pnp_activate_dev(dev)<0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#156: FILE: drivers/pnp/core.c:173:
+	printk(KERN_INFO "Linux Plug and Play Support v0.95 (c) Adam Belay\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#180: FILE: drivers/pnp/interface.c:221:
+	struct pnp_resources * res = dev->possible;

WARNING:LONG_LINE_STRING: line length of 108 exceeds 100 columns
#354: FILE: drivers/pnp/isapnp/core.c:1086:
+			printk(KERN_INFO "isapnp: Card '%s'\n", card->dev.name[0]?card->dev.name:"Unknown");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#354: FILE: drivers/pnp/isapnp/core.c:1086:
+			printk(KERN_INFO "isapnp: Card '%s'\n", card->dev.name[0]?card->dev.name:"Unknown");

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#354: FILE: drivers/pnp/isapnp/core.c:1086:
+			printk(KERN_INFO "isapnp: Card '%s'\n", card->dev.name[0]?card->dev.name:"Unknown");
 			                                                         ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#354: FILE: drivers/pnp/isapnp/core.c:1086:
+			printk(KERN_INFO "isapnp: Card '%s'\n", card->dev.name[0]?card->dev.name:"Unknown");
 			                                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#359: FILE: drivers/pnp/isapnp/core.c:1089:
+			card_for_each_dev(card,dev) {
 			                      ^

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#360: FILE: drivers/pnp/isapnp/core.c:1090:
+				printk(KERN_INFO "isapnp:   Device '%s'\n", dev->dev.name[0]?dev->dev.name:"Unknown");

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#360: FILE: drivers/pnp/isapnp/core.c:1090:
+				printk(KERN_INFO "isapnp:   Device '%s'\n", dev->dev.name[0]?dev->dev.name:"Unknown");

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#360: FILE: drivers/pnp/isapnp/core.c:1090:
+				printk(KERN_INFO "isapnp:   Device '%s'\n", dev->dev.name[0]?dev->dev.name:"Unknown");
 				                                                            ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#360: FILE: drivers/pnp/isapnp/core.c:1090:
+				printk(KERN_INFO "isapnp:   Device '%s'\n", dev->dev.name[0]?dev->dev.name:"Unknown");
 				                                                                          ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#388: FILE: drivers/pnp/pnpbios/core.c:674:
+	while (pnp_irq_valid(dev, i) && i < PNP_MAX_IRQ) i++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: No space is necessary after a cast
#391: FILE: drivers/pnp/pnpbios/core.c:677:
+		dev->resources.irq_resource[i].end = (unsigned long) irq;

CHECK:SPACING: No space is necessary after a cast
#406: FILE: drivers/pnp/pnpbios/core.c:688:
+		dev->resources.dma_resource[i].end = (unsigned long) dma;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#419: FILE: drivers/pnp/pnpbios/core.c:696:
+	while (pnp_port_valid(dev, i) && i < PNP_MAX_PORT) i++;

CHECK:SPACING: No space is necessary after a cast
#421: FILE: drivers/pnp/pnpbios/core.c:698:
+		dev->resources.port_resource[i].start = (unsigned long) io;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#435: FILE: drivers/pnp/pnpbios/core.c:707:
+	while (pnp_mem_valid(dev, i) && i < PNP_MAX_MEM) i++;

CHECK:SPACING: No space is necessary after a cast
#437: FILE: drivers/pnp/pnpbios/core.c:709:
+		dev->resources.mem_resource[i].start = (unsigned long) mem;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#451: FILE: drivers/pnp/pnpbios/core.c:723:
+	for (i=0;i<PNP_MAX_PORT;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#451: FILE: drivers/pnp/pnpbios/core.c:723:
+	for (i=0;i<PNP_MAX_PORT;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#451: FILE: drivers/pnp/pnpbios/core.c:723:
+	for (i=0;i<PNP_MAX_PORT;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#451: FILE: drivers/pnp/pnpbios/core.c:723:
+	for (i=0;i<PNP_MAX_PORT;i++) {
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#460: FILE: drivers/pnp/pnpbios/core.c:728:
+	for (i=0;i<PNP_MAX_MEM;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#460: FILE: drivers/pnp/pnpbios/core.c:728:
+	for (i=0;i<PNP_MAX_MEM;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#460: FILE: drivers/pnp/pnpbios/core.c:728:
+	for (i=0;i<PNP_MAX_MEM;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#460: FILE: drivers/pnp/pnpbios/core.c:728:
+	for (i=0;i<PNP_MAX_MEM;i++) {
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#469: FILE: drivers/pnp/pnpbios/core.c:733:
+	for (i=0;i<PNP_MAX_IRQ;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#469: FILE: drivers/pnp/pnpbios/core.c:733:
+	for (i=0;i<PNP_MAX_IRQ;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#469: FILE: drivers/pnp/pnpbios/core.c:733:
+	for (i=0;i<PNP_MAX_IRQ;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#469: FILE: drivers/pnp/pnpbios/core.c:733:
+	for (i=0;i<PNP_MAX_IRQ;i++) {
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#478: FILE: drivers/pnp/pnpbios/core.c:738:
+	for (i=0;i<PNP_MAX_DMA;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#478: FILE: drivers/pnp/pnpbios/core.c:738:
+	for (i=0;i<PNP_MAX_DMA;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#478: FILE: drivers/pnp/pnpbios/core.c:738:
+	for (i=0;i<PNP_MAX_DMA;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#478: FILE: drivers/pnp/pnpbios/core.c:738:
+	for (i=0;i<PNP_MAX_DMA;i++) {
 	                      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#532: FILE: drivers/pnp/pnpbios/core.c:1304:
+	if(node_set_resources(node, &dev->config->rule)<0){
 	                                               ^

ERROR:SPACING: space required before the open brace '{'
#532: FILE: drivers/pnp/pnpbios/core.c:1304:
+	if(node_set_resources(node, &dev->config->rule)<0){

ERROR:SPACING: space required before the open parenthesis '('
#532: FILE: drivers/pnp/pnpbios/core.c:1304:
+	if(node_set_resources(node, &dev->config->rule)<0){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#532: FILE: drivers/pnp/pnpbios/core.c:1304:
+	if(node_set_resources(node, &dev->config->rule)<0){
 		return -1;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#541: FILE: drivers/pnp/pnpbios/core.c:1313:
+	struct pnp_rule_table * config = kmalloc(sizeof(struct pnp_rule_table), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*config)...) over kmalloc(sizeof(struct pnp_rule_table)...)
#541: FILE: drivers/pnp/pnpbios/core.c:1313:
+	struct pnp_rule_table * config = kmalloc(sizeof(struct pnp_rule_table), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#717: FILE: drivers/pnp/resource.c:319:
+ * condition 3: check if b is engulfed by a */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'starta' - possible side-effects?
#719: FILE: drivers/pnp/resource.c:321:
+#define ranged_conflict(starta, enda, startb, endb) \
+((*(starta) >= *(startb) && *(starta) <= *(endb)) || \
+ (*(enda) >= *(startb) && *(enda) <= *(endb)) || \
+ (*(starta) < *(startb) && *(enda) > *(endb)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'enda' - possible side-effects?
#719: FILE: drivers/pnp/resource.c:321:
+#define ranged_conflict(starta, enda, startb, endb) \
+((*(starta) >= *(startb) && *(starta) <= *(endb)) || \
+ (*(enda) >= *(startb) && *(enda) <= *(endb)) || \
+ (*(starta) < *(startb) && *(enda) > *(endb)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'startb' - possible side-effects?
#719: FILE: drivers/pnp/resource.c:321:
+#define ranged_conflict(starta, enda, startb, endb) \
+((*(starta) >= *(startb) && *(starta) <= *(endb)) || \
+ (*(enda) >= *(startb) && *(enda) <= *(endb)) || \
+ (*(starta) < *(startb) && *(enda) > *(endb)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'endb' - possible side-effects?
#719: FILE: drivers/pnp/resource.c:321:
+#define ranged_conflict(starta, enda, startb, endb) \
+((*(starta) >= *(startb) && *(starta) <= *(endb)) || \
+ (*(enda) >= *(startb) && *(enda) <= *(endb)) || \
+ (*(starta) < *(startb) && *(enda) > *(endb)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: drivers/pnp/resource.c:323:
+ (*(enda) >= *(startb) && *(enda) <= *(endb)) || \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: drivers/pnp/resource.c:324:
+ (*(starta) < *(startb) && *(enda) > *(endb)))$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#727: FILE: drivers/pnp/resource.c:329:
+static struct pnp_dev * pnp_check_port_conflicts(struct pnp_dev * dev, int idx, int mode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#727: FILE: drivers/pnp/resource.c:329:
+static struct pnp_dev * pnp_check_port_conflicts(struct pnp_dev * dev, int idx, int mode)

WARNING:LINE_SPACING: Missing a blank line after declarations
#732: FILE: drivers/pnp/resource.c:334:
+	struct pnp_dev *tdev;
+	port = &dev->res.port_resource[idx].start;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#759: FILE: drivers/pnp/resource.c:350:
+				if (ranged_conflict(port,end,tport,tend))
 				                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#759: FILE: drivers/pnp/resource.c:350:
+				if (ranged_conflict(port,end,tport,tend))
 				                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#759: FILE: drivers/pnp/resource.c:350:
+				if (ranged_conflict(port,end,tport,tend))
 				                                  ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#776: FILE: drivers/pnp/resource.c:358:
+static int pnp_check_port(struct pnp_dev * dev, int idx)

WARNING:LINE_SPACING: Missing a blank line after declarations
#780: FILE: drivers/pnp/resource.c:362:
+	unsigned long *port, *end, *tport, *tend;
+	port = &dev->res.port_resource[idx].start;

WARNING:LONG_LINE_COMMENT: line length of 115 exceeds 100 columns
#787: FILE: drivers/pnp/resource.c:369:
+	/* check if the resource is already in use, skip if the device is active because it itself may be in use */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required before the open parenthesis '('
#788: FILE: drivers/pnp/resource.c:370:
+	if(!dev->active) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#789: FILE: drivers/pnp/resource.c:371:
+		if (check_region(*port, length(port,end)))
 		                                   ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#797: FILE: drivers/pnp/resource.c:379:
+		int rend = pnp_reserve_io[(tmp << 1) + 1] + rport - 1;
+		if (ranged_conflict(port,end,&rport,&rend))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#797: FILE: drivers/pnp/resource.c:379:
+		if (ranged_conflict(port,end,&rport,&rend))
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#797: FILE: drivers/pnp/resource.c:379:
+		if (ranged_conflict(port,end,&rport,&rend))
 		                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#797: FILE: drivers/pnp/resource.c:379:
+		if (ranged_conflict(port,end,&rport,&rend))
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#797: FILE: drivers/pnp/resource.c:379:
+		if (ranged_conflict(port,end,&rport,&rend))
 		                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#797: FILE: drivers/pnp/resource.c:379:
+		if (ranged_conflict(port,end,&rport,&rend))
 		                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#806: FILE: drivers/pnp/resource.c:388:
+			if (ranged_conflict(port,end,tport,tend))
 			                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#806: FILE: drivers/pnp/resource.c:388:
+			if (ranged_conflict(port,end,tport,tend))
 			                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#806: FILE: drivers/pnp/resource.c:388:
+			if (ranged_conflict(port,end,tport,tend))
 			                                  ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#819: FILE: drivers/pnp/resource.c:400:
+static struct pnp_dev * pnp_check_mem_conflicts(struct pnp_dev * dev, int idx, int mode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#819: FILE: drivers/pnp/resource.c:400:
+static struct pnp_dev * pnp_check_mem_conflicts(struct pnp_dev * dev, int idx, int mode)

WARNING:LINE_SPACING: Missing a blank line after declarations
#849: FILE: drivers/pnp/resource.c:405:
+	struct pnp_dev *tdev;
+	addr = &dev->res.mem_resource[idx].start;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#865: FILE: drivers/pnp/resource.c:421:
+				if (ranged_conflict(addr,end,taddr,tend))
 				                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#865: FILE: drivers/pnp/resource.c:421:
+				if (ranged_conflict(addr,end,taddr,tend))
 				                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#865: FILE: drivers/pnp/resource.c:421:
+				if (ranged_conflict(addr,end,taddr,tend))
 				                                  ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#882: FILE: drivers/pnp/resource.c:429:
+static int pnp_check_mem(struct pnp_dev * dev, int idx)

WARNING:LINE_SPACING: Missing a blank line after declarations
#886: FILE: drivers/pnp/resource.c:433:
+	unsigned long *addr, *end, *taddr, *tend;
+	addr = &dev->res.mem_resource[idx].start;

WARNING:LONG_LINE_COMMENT: line length of 115 exceeds 100 columns
#893: FILE: drivers/pnp/resource.c:440:
+	/* check if the resource is already in use, skip if the device is active because it itself may be in use */

ERROR:SPACING: space required before the open parenthesis '('
#894: FILE: drivers/pnp/resource.c:441:
+	if(!dev->active) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#895: FILE: drivers/pnp/resource.c:442:
+		if (__check_region(&iomem_resource, *addr, length(addr,end)))
 		                                                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#903: FILE: drivers/pnp/resource.c:450:
+		int rend = pnp_reserve_mem[(tmp << 1) + 1] + raddr - 1;
+		if (ranged_conflict(addr,end,&raddr,&rend))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#903: FILE: drivers/pnp/resource.c:450:
+		if (ranged_conflict(addr,end,&raddr,&rend))
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#903: FILE: drivers/pnp/resource.c:450:
+		if (ranged_conflict(addr,end,&raddr,&rend))
 		                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#903: FILE: drivers/pnp/resource.c:450:
+		if (ranged_conflict(addr,end,&raddr,&rend))
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#903: FILE: drivers/pnp/resource.c:450:
+		if (ranged_conflict(addr,end,&raddr,&rend))
 		                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#903: FILE: drivers/pnp/resource.c:450:
+		if (ranged_conflict(addr,end,&raddr,&rend))
 		                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#912: FILE: drivers/pnp/resource.c:459:
+			if (ranged_conflict(addr,end,taddr,tend))
 			                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#912: FILE: drivers/pnp/resource.c:459:
+			if (ranged_conflict(addr,end,taddr,tend))
 			                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#912: FILE: drivers/pnp/resource.c:459:
+			if (ranged_conflict(addr,end,taddr,tend))
 			                                  ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#924: FILE: drivers/pnp/resource.c:471:
+static struct pnp_dev * pnp_check_irq_conflicts(struct pnp_dev * dev, int idx, int mode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#924: FILE: drivers/pnp/resource.c:471:
+static struct pnp_dev * pnp_check_irq_conflicts(struct pnp_dev * dev, int idx, int mode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#927: FILE: drivers/pnp/resource.c:474:
+	struct pnp_dev * tdev;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#928: FILE: drivers/pnp/resource.c:475:
+	unsigned long * irq = &dev->res.irq_resource[idx].start;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tdev->res.irq_resource[tmp].start == *irq'
#941: FILE: drivers/pnp/resource.c:488:
+				if ((tdev->res.irq_resource[tmp].start == *irq))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:UNNECESSARY_PARENTHESES: Unnecessary parentheses - maybe == should be = ?
#941: FILE: drivers/pnp/resource.c:488:
+				if ((tdev->res.irq_resource[tmp].start == *irq))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#954: FILE: drivers/pnp/resource.c:500:
+static int pnp_check_irq(struct pnp_dev * dev, int idx)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#964: FILE: drivers/pnp/resource.c:503:
+	unsigned long * irq = &dev->res.irq_resource[idx].start;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1005: FILE: drivers/pnp/resource.c:530:
+		struct pci_dev * pci;

WARNING:LONG_LINE_COMMENT: line length of 115 exceeds 100 columns
#1018: FILE: drivers/pnp/resource.c:538:
+	/* check if the resource is already in use, skip if the device is active because it itself may be in use */

ERROR:SPACING: space required before the open parenthesis '('
#1019: FILE: drivers/pnp/resource.c:539:
+	if(!dev->active) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1033: FILE: drivers/pnp/resource.c:552:
 
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1034: FILE: drivers/pnp/resource.c:553:
+static struct pnp_dev * pnp_check_dma_conflicts(struct pnp_dev * dev, int idx, int mode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1034: FILE: drivers/pnp/resource.c:553:
+static struct pnp_dev * pnp_check_dma_conflicts(struct pnp_dev * dev, int idx, int mode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1041: FILE: drivers/pnp/resource.c:556:
+	struct pnp_dev * tdev;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1042: FILE: drivers/pnp/resource.c:557:
+	unsigned long * dma = &dev->res.dma_resource[idx].start;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tdev->res.dma_resource[tmp].start == *dma'
#1055: FILE: drivers/pnp/resource.c:570:
+				if ((tdev->res.dma_resource[tmp].start == *dma))

WARNING:UNNECESSARY_PARENTHESES: Unnecessary parentheses - maybe == should be = ?
#1055: FILE: drivers/pnp/resource.c:570:
+				if ((tdev->res.dma_resource[tmp].start == *dma))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1063: FILE: drivers/pnp/resource.c:578:
+static int pnp_check_dma(struct pnp_dev * dev, int idx)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1066: FILE: drivers/pnp/resource.c:581:
+	unsigned long * dma = &dev->res.dma_resource[idx].start;

WARNING:LONG_LINE_COMMENT: line length of 115 exceeds 100 columns
#1109: FILE: drivers/pnp/resource.c:607:
+	/* check if the resource is already in use, skip if the device is active because it itself may be in use */

ERROR:SPACING: space required before the open parenthesis '('
#1110: FILE: drivers/pnp/resource.c:608:
+	if(!dev->active) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1129: FILE: drivers/pnp/resource.c:625:
+static int pnp_next_port(struct pnp_dev * dev, int idx)

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1157: FILE: drivers/pnp/resource.c:642:
+		*value2 = *value1 + port->size -1;
 		                               ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1177: FILE: drivers/pnp/resource.c:658:
+static int pnp_next_mem(struct pnp_dev * dev, int idx)

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1213: FILE: drivers/pnp/resource.c:675:
+		*value2 = *value1 + mem->size -1;
 		                              ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1241: FILE: drivers/pnp/resource.c:699:
+static int pnp_next_irq(struct pnp_dev * dev, int idx)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1255: FILE: drivers/pnp/resource.c:704:
+	int i, mask;
+	if (!dev || idx < 0 || idx >= PNP_MAX_IRQ)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1279: FILE: drivers/pnp/resource.c:723:
+	for (i = *value1; i < 16; i++, mask=mask>>1)
 	                                   ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1279: FILE: drivers/pnp/resource.c:723:
+	for (i = *value1; i < 16; i++, mask=mask>>1)
 	                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#1285: FILE: drivers/pnp/resource.c:725:
+		if(mask & 0x01) {

ERROR:SPACING: space required before the open parenthesis '('
#1287: FILE: drivers/pnp/resource.c:727:
+			if(!pnp_check_irq(dev, idx))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1296: FILE: drivers/pnp/resource.c:734:
+static int pnp_next_dma(struct pnp_dev * dev, int idx)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1308: FILE: drivers/pnp/resource.c:740:
+	int i, mask;
+	if (!dev || idx < 0 || idx >= PNP_MAX_DMA)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1335: FILE: drivers/pnp/resource.c:761:
+	for (i = *value1; i < 8; i++, mask=mask>>1)
 	                                  ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1335: FILE: drivers/pnp/resource.c:761:
+	for (i = *value1; i < 8; i++, mask=mask>>1)
 	                                       ^

ERROR:SPACING: space required before the open parenthesis '('
#1341: FILE: drivers/pnp/resource.c:763:
+		if(mask & 0x01) {

ERROR:SPACING: space required before the open parenthesis '('
#1343: FILE: drivers/pnp/resource.c:765:
+			if(!pnp_check_dma(dev, idx))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1411: FILE: drivers/pnp/resource.c:807:
+	struct pnp_dev * dev;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1414: FILE: drivers/pnp/resource.c:810:
+static void pnp_free_changes(struct pnp_change * parent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1441: FILE: drivers/pnp/resource.c:812:
+	struct list_head * pos, * temp;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#1441: FILE: drivers/pnp/resource.c:812:
+	struct list_head * pos, * temp;
 	                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1442: FILE: drivers/pnp/resource.c:813:
+	struct list_head * pos, * temp;
+	list_for_each_safe(pos, temp, &parent->changes) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1443: FILE: drivers/pnp/resource.c:814:
+		struct pnp_change * change = list_entry(pos, struct pnp_change, change_list);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1444: FILE: drivers/pnp/resource.c:815:
+		struct pnp_change * change = list_entry(pos, struct pnp_change, change_list);
+		list_del(&change->change_list);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1475: FILE: drivers/pnp/resource.c:820:
+static void pnp_undo_changes(struct pnp_change * parent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1477: FILE: drivers/pnp/resource.c:822:
+	struct list_head * pos, * temp;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#1477: FILE: drivers/pnp/resource.c:822:
+	struct list_head * pos, * temp;
 	                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1478: FILE: drivers/pnp/resource.c:823:
+	struct list_head * pos, * temp;
+	list_for_each_safe(pos, temp, &parent->changes) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1479: FILE: drivers/pnp/resource.c:824:
+		struct pnp_change * change = list_entry(pos, struct pnp_change, change_list);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1488: FILE: drivers/pnp/resource.c:832:
+static struct pnp_change * pnp_add_change(struct pnp_change * parent, struct pnp_dev * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1488: FILE: drivers/pnp/resource.c:832:
+static struct pnp_change * pnp_add_change(struct pnp_change * parent, struct pnp_dev * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1488: FILE: drivers/pnp/resource.c:832:
+static struct pnp_change * pnp_add_change(struct pnp_change * parent, struct pnp_dev * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1490: FILE: drivers/pnp/resource.c:834:
+	struct pnp_change * change = pnp_alloc(sizeof(struct pnp_change));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1491: FILE: drivers/pnp/resource.c:835:
+	struct pnp_change * change = pnp_alloc(sizeof(struct pnp_change));
+	change->res_bak = dev->res;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1500: FILE: drivers/pnp/resource.c:844:
+static void pnp_commit_changes(struct pnp_change * parent, struct pnp_change * change)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1500: FILE: drivers/pnp/resource.c:844:
+static void pnp_commit_changes(struct pnp_change * parent, struct pnp_change * change)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1526: FILE: drivers/pnp/resource.c:861:
+	struct pnp_rule_table * rule = dev->rule;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1621: FILE: drivers/pnp/resource.c:940:
+        int max = pnp_get_max_depnum(dev);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1621: FILE: drivers/pnp/resource.c:940:
+        int max = pnp_get_max_depnum(dev);$

ERROR:SPACING: space required before the open parenthesis '('
#1624: FILE: drivers/pnp/resource.c:943:
+	if(depnum > 0) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1625: FILE: drivers/pnp/resource.c:944:
+		struct pnp_resources * res = pnp_find_resources(dev, depnum);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1626: FILE: drivers/pnp/resource.c:945:
+		struct pnp_resources * res = pnp_find_resources(dev, depnum);
+		priority = res->priority;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1629: FILE: drivers/pnp/resource.c:948:
+	for (; priority <= PNP_RES_PRIORITY_FUNCTIONAL; priority++, depnum=0) {
 	                                                                  ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1632: FILE: drivers/pnp/resource.c:951:
+			struct pnp_resources * res = pnp_find_resources(dev, depnum);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1633: FILE: drivers/pnp/resource.c:952:
+			struct pnp_resources * res = pnp_find_resources(dev, depnum);
+			if (res->priority == priority) {

ERROR:SPACING: space required before the open parenthesis '('
#1634: FILE: drivers/pnp/resource.c:953:
+				if(pnp_generate_rule(dev, depnum)) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1645: FILE: drivers/pnp/resource.c:963:
+static int pnp_next_config(struct pnp_dev * dev, int move, struct pnp_change * parent);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1645: FILE: drivers/pnp/resource.c:963:
+static int pnp_next_config(struct pnp_dev * dev, int move, struct pnp_change * parent);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#1647: FILE: drivers/pnp/resource.c:965:
+static int pnp_next_request(struct pnp_dev * dev, int move, struct pnp_change * parent, struct pnp_change * change)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1647: FILE: drivers/pnp/resource.c:965:
+static int pnp_next_request(struct pnp_dev * dev, int move, struct pnp_change * parent, struct pnp_change * change)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1647: FILE: drivers/pnp/resource.c:965:
+static int pnp_next_request(struct pnp_dev * dev, int move, struct pnp_change * parent, struct pnp_change * change)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1647: FILE: drivers/pnp/resource.c:965:
+static int pnp_next_request(struct pnp_dev * dev, int move, struct pnp_change * parent, struct pnp_change * change)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1650: FILE: drivers/pnp/resource.c:968:
+	struct pnp_dev * cdev;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1654: FILE: drivers/pnp/resource.c:972:
+			if (!pnp_next_port(dev,i))
 			                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1658: FILE: drivers/pnp/resource.c:976:
+			cdev = pnp_check_port_conflicts(dev,i,SEARCH_COLD);
 			                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1658: FILE: drivers/pnp/resource.c:976:
+			cdev = pnp_check_port_conflicts(dev,i,SEARCH_COLD);
 			                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1659: FILE: drivers/pnp/resource.c:977:
+			if (cdev && (!move || !pnp_next_config(cdev,move,change))) {
 			                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1659: FILE: drivers/pnp/resource.c:977:
+			if (cdev && (!move || !pnp_next_config(cdev,move,change))) {
 			                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1661: FILE: drivers/pnp/resource.c:979:
+				if (!pnp_next_port(dev,i))
 				                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1669: FILE: drivers/pnp/resource.c:987:
+			if (!pnp_next_mem(dev,i))
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1673: FILE: drivers/pnp/resource.c:991:
+			cdev = pnp_check_mem_conflicts(dev,i,SEARCH_COLD);
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1673: FILE: drivers/pnp/resource.c:991:
+			cdev = pnp_check_mem_conflicts(dev,i,SEARCH_COLD);
 			                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1674: FILE: drivers/pnp/resource.c:992:
+			if (cdev && (!move || !pnp_next_config(cdev,move,change))) {
 			                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1674: FILE: drivers/pnp/resource.c:992:
+			if (cdev && (!move || !pnp_next_config(cdev,move,change))) {
 			                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1676: FILE: drivers/pnp/resource.c:994:
+				if (!pnp_next_mem(dev,i))
 				                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1684: FILE: drivers/pnp/resource.c:1002:
+			if (!pnp_next_irq(dev,i))
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1688: FILE: drivers/pnp/resource.c:1006:
+			cdev = pnp_check_irq_conflicts(dev,i,SEARCH_COLD);
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1688: FILE: drivers/pnp/resource.c:1006:
+			cdev = pnp_check_irq_conflicts(dev,i,SEARCH_COLD);
 			                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1689: FILE: drivers/pnp/resource.c:1007:
+			if (cdev && (!move || !pnp_next_config(cdev,move,change))) {
 			                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1689: FILE: drivers/pnp/resource.c:1007:
+			if (cdev && (!move || !pnp_next_config(cdev,move,change))) {
 			                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1691: FILE: drivers/pnp/resource.c:1009:
+				if (!pnp_next_irq(dev,i))
 				                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1699: FILE: drivers/pnp/resource.c:1017:
+			if (!pnp_next_dma(dev,i))
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1703: FILE: drivers/pnp/resource.c:1021:
+			cdev = pnp_check_dma_conflicts(dev,i,SEARCH_COLD);
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1703: FILE: drivers/pnp/resource.c:1021:
+			cdev = pnp_check_dma_conflicts(dev,i,SEARCH_COLD);
 			                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1704: FILE: drivers/pnp/resource.c:1022:
+			if (cdev && (!move || !pnp_next_config(cdev,move,change))) {
 			                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1704: FILE: drivers/pnp/resource.c:1022:
+			if (cdev && (!move || !pnp_next_config(cdev,move,change))) {
 			                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1706: FILE: drivers/pnp/resource.c:1024:
+				if (!pnp_next_dma(dev,i))
 				                     ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1715: FILE: drivers/pnp/resource.c:1033:
+static int pnp_next_config(struct pnp_dev * dev, int move, struct pnp_change * parent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1715: FILE: drivers/pnp/resource.c:1033:
+static int pnp_next_config(struct pnp_dev * dev, int move, struct pnp_change * parent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1717: FILE: drivers/pnp/resource.c:1035:
+	struct pnp_change * change = pnp_add_change(parent,dev);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1717: FILE: drivers/pnp/resource.c:1035:
+	struct pnp_change * change = pnp_add_change(parent,dev);
 	                                                  ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1718: FILE: drivers/pnp/resource.c:1036:
+	struct pnp_change * change = pnp_add_change(parent,dev);
+	move--;

ERROR:SPACING: space required before the open parenthesis '('
#1726: FILE: drivers/pnp/resource.c:1044:
+		if(!pnp_next_rule(dev))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1742: FILE: drivers/pnp/resource.c:1060:
+static int pnp_generate_config(struct pnp_dev * dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1745: FILE: drivers/pnp/resource.c:1063:
+	int move;
+	if (!dev->rule) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1753: FILE: drivers/pnp/resource.c:1071:
+		if (pnp_next_config(dev,move,NULL))
 		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1753: FILE: drivers/pnp/resource.c:1071:
+		if (pnp_next_config(dev,move,NULL))
 		                            ^

WARNING:LONG_LINE: line length of 142 exceeds 100 columns
#1759: FILE: drivers/pnp/resource.c:1077:
+	printk (KERN_ERR "pnp: Unable to resolve resource conflicts for the device '%s', this device will not be usable.\n", dev->dev.bus_id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1759: FILE: drivers/pnp/resource.c:1077:
+	printk (KERN_ERR "pnp: Unable to resolve resource conflicts for the device '%s', this device will not be usable.\n", dev->dev.bus_id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1759: FILE: drivers/pnp/resource.c:1077:
+	printk (KERN_ERR "pnp: Unable to resolve resource conflicts for the device '%s', this device will not be usable.\n", dev->dev.bus_id);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1766: FILE: drivers/pnp/resource.c:1084:
+	struct pnp_dev * cdev;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1768: FILE: drivers/pnp/resource.c:1086:
+	for (i = 0; i < PNP_MAX_PORT; i++)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1771: FILE: drivers/pnp/resource.c:1089:
+			cdev = pnp_check_port_conflicts(dev,i,SEARCH_COLD);
 			                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1771: FILE: drivers/pnp/resource.c:1089:
+			cdev = pnp_check_port_conflicts(dev,i,SEARCH_COLD);
 			                                     ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1776: FILE: drivers/pnp/resource.c:1094:
+	for (i = 0; i < PNP_MAX_MEM; i++)
+	{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1779: FILE: drivers/pnp/resource.c:1097:
+			cdev = pnp_check_mem_conflicts(dev,i,SEARCH_COLD);
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1779: FILE: drivers/pnp/resource.c:1097:
+			cdev = pnp_check_mem_conflicts(dev,i,SEARCH_COLD);
 			                                    ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1784: FILE: drivers/pnp/resource.c:1102:
+	for (i = 0; i < PNP_MAX_IRQ; i++)
+	{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1787: FILE: drivers/pnp/resource.c:1105:
+			cdev = pnp_check_irq_conflicts(dev,i,SEARCH_COLD);
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1787: FILE: drivers/pnp/resource.c:1105:
+			cdev = pnp_check_irq_conflicts(dev,i,SEARCH_COLD);
 			                                    ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1792: FILE: drivers/pnp/resource.c:1110:
+	for (i = 0; i < PNP_MAX_DMA; i++)
+	{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1795: FILE: drivers/pnp/resource.c:1113:
+			cdev = pnp_check_dma_conflicts(dev,i,SEARCH_COLD);
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1795: FILE: drivers/pnp/resource.c:1113:
+			cdev = pnp_check_dma_conflicts(dev,i,SEARCH_COLD);
 			                                    ^

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#1804: FILE: drivers/pnp/resource.c:1122:
+ * pnp_configure_device - determines the best possible resource configuration based on available information

WARNING:LINE_SPACING: Missing a blank line after declarations
#1811: FILE: drivers/pnp/resource.c:1129:
+	int error;
+	if(!dev)

ERROR:SPACING: space required before the open parenthesis '('
#1811: FILE: drivers/pnp/resource.c:1129:
+	if(!dev)

ERROR:SPACING: space required before the open parenthesis '('
#1813: FILE: drivers/pnp/resource.c:1131:
+	if(dev->active)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1820: FILE: drivers/pnp/resource.c:1138:
+
+

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1843: FILE: drivers/pnp/resource.c:1157:
+		printk(KERN_INFO "pnp: Activation failed because the PnP device '%s' is busy\n", dev->dev.bus_id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1843: FILE: drivers/pnp/resource.c:1157:
+		printk(KERN_INFO "pnp: Activation failed because the PnP device '%s' is busy\n", dev->dev.bus_id);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1951: FILE: drivers/pnp/resource.c:1238:
+	get_option(&str,&pnp_max_moves);
 	               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1951: FILE: drivers/pnp/resource.c:1238:
+	get_option(&str,&pnp_max_moves);
 	                ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#1955: FILE: drivers/pnp/resource.c:1242:
+__setup("pnp_max_moves=", pnp_setup_max_moves);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1967: FILE: drivers/pnp/system.c:56:
+	for (i=0;i<PNP_MAX_PORT;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1967: FILE: drivers/pnp/system.c:56:
+	for (i=0;i<PNP_MAX_PORT;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1967: FILE: drivers/pnp/system.c:56:
+	for (i=0;i<PNP_MAX_PORT;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1967: FILE: drivers/pnp/system.c:56:
+	for (i=0;i<PNP_MAX_PORT;i++) {
 	                       ^

WARNING:SPACING: Unnecessary space before function pointer arguments
#2210: FILE: include/linux/pnp.h:71:
+	int  (*probe)  (struct pnp_card *card, const struct pnp_card_id *card_id);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2226: FILE: include/linux/pnp.h:84:
+#define pnp_port_start(dev,bar)   ((dev)->res.port_resource[(bar)].start)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2227: FILE: include/linux/pnp.h:85:
+#define pnp_port_end(dev,bar)     ((dev)->res.port_resource[(bar)].end)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2228: FILE: include/linux/pnp.h:86:
+#define pnp_port_flags(dev,bar)   ((dev)->res.port_resource[(bar)].flags)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2229: FILE: include/linux/pnp.h:87:
+#define pnp_port_valid(dev,bar)   (pnp_port_flags((dev),(bar)) & IORESOURCE_IO)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2229: FILE: include/linux/pnp.h:87:
+#define pnp_port_valid(dev,bar)   (pnp_port_flags((dev),(bar)) & IORESOURCE_IO)
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2241: FILE: include/linux/pnp.h:96:
+#define pnp_mem_start(dev,bar)   ((dev)->res.mem_resource[(bar)].start)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2242: FILE: include/linux/pnp.h:97:
+#define pnp_mem_end(dev,bar)     ((dev)->res.mem_resource[(bar)].end)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2243: FILE: include/linux/pnp.h:98:
+#define pnp_mem_flags(dev,bar)   ((dev)->res.mem_resource[(bar)].flags)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2244: FILE: include/linux/pnp.h:99:
+#define pnp_mem_valid(dev,bar)   (pnp_mem_flags((dev),(bar)) & IORESOURCE_MEM)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2244: FILE: include/linux/pnp.h:99:
+#define pnp_mem_valid(dev,bar)   (pnp_mem_flags((dev),(bar)) & IORESOURCE_MEM)
                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2259: FILE: include/linux/pnp.h:108:
+#define pnp_irq(dev,bar)	 ((dev)->res.irq_resource[(bar)].start)
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2260: FILE: include/linux/pnp.h:109:
+#define pnp_irq_flags(dev,bar)	 ((dev)->res.irq_resource[(bar)].flags)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2261: FILE: include/linux/pnp.h:110:
+#define pnp_irq_valid(dev,bar)   (pnp_irq_flags((dev),(bar)) & IORESOURCE_IRQ)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2261: FILE: include/linux/pnp.h:110:
+#define pnp_irq_valid(dev,bar)   (pnp_irq_flags((dev),(bar)) & IORESOURCE_IRQ)
                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2263: FILE: include/linux/pnp.h:112:
+#define pnp_dma(dev,bar)	 ((dev)->res.dma_resource[(bar)].start)
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2264: FILE: include/linux/pnp.h:113:
+#define pnp_dma_flags(dev,bar)	 ((dev)->res.dma_resource[(bar)].flags)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2265: FILE: include/linux/pnp.h:114:
+#define pnp_dma_valid(dev,bar)   (pnp_dma_flags((dev),(bar)) & IORESOURCE_DMA)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2265: FILE: include/linux/pnp.h:114:
+#define pnp_dma_valid(dev,bar)   (pnp_dma_flags((dev),(bar)) & IORESOURCE_DMA)
                                                      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2330: FILE: include/linux/pnp.h:189:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2344: FILE: include/linux/pnp.h:203:
+	struct pnp_protocol * protocol;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2345: FILE: include/linux/pnp.h:204:
+	struct pnpc_driver * driver;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2346: FILE: include/linux/pnp.h:205:
+	struct pnp_id * id;		/* contains supported EISA IDs*/

ERROR:POINTER_LOCATION: "foo	      * bar" should be "foo	      *bar"
#2348: FILE: include/linux/pnp.h:207:
+	void	      * protocol_data;	/* Used to store protocol specific data */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'card' - possible side-effects?
#2359: FILE: include/linux/pnp.h:218:
+#define pnp_for_each_card(card) \
+	for((card) = global_to_pnp_card(pnp_cards.next); \
+	(card) != global_to_pnp_card(&pnp_cards); \
+	(card) = global_to_pnp_card((card)->global_list.next))

ERROR:SPACING: space required before the open parenthesis '('
#2360: FILE: include/linux/pnp.h:219:
+	for((card) = global_to_pnp_card(pnp_cards.next); \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2364: FILE: include/linux/pnp.h:223:
+static inline void *pnpc_get_drvdata (struct pnp_card *pcard)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2369: FILE: include/linux/pnp.h:228:
+static inline void pnpc_set_drvdata (struct pnp_card *pcard, void *data)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2374: FILE: include/linux/pnp.h:233:
+static inline void *pnpc_get_protodata (struct pnp_card *pcard)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2379: FILE: include/linux/pnp.h:238:
+static inline void pnpc_set_protodata (struct pnp_card *pcard, void *data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2396: FILE: include/linux/pnp.h:255:
+	struct pnp_protocol * protocol;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2397: FILE: include/linux/pnp.h:256:
+	struct pnp_card * card;		/* card the device is attached to, none if NULL */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2398: FILE: include/linux/pnp.h:257:
+	struct pnp_driver * driver;

ERROR:POINTER_LOCATION: "foo		      * bar" should be "foo		      *bar"
#2400: FILE: include/linux/pnp.h:259:
+	struct pnp_id		      * id;		/* supported EISA IDs*/

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#2401: FILE: include/linux/pnp.h:260:
+	struct pnp_resource_table	res;		/* contains the currently chosen resources */

ERROR:POINTER_LOCATION: "foo	      * bar" should be "foo	      *bar"
#2402: FILE: include/linux/pnp.h:261:
+	struct pnp_resources	      * possible;	/* a list of possible resources */

ERROR:POINTER_LOCATION: "foo	      * bar" should be "foo	      *bar"
#2403: FILE: include/linux/pnp.h:262:
+	struct pnp_rule_table	      * rule;		/* the current possible resource set */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2404: FILE: include/linux/pnp.h:263:
+^Iint ^I^I^I^Ilock_resources;^I/* resources are locked */$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2406: FILE: include/linux/pnp.h:265:
+	void * protocol_data;		/* Used to store protocol specific data */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2408: FILE: include/linux/pnp.h:267:
+^Iint ^I^Iflags;^I^I/* used by protocols */$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dev' - possible side-effects?
#2422: FILE: include/linux/pnp.h:275:
+#define pnp_for_each_dev(dev) \
+	for((dev) = global_to_pnp_dev(pnp_global.next); \
+	(dev) != global_to_pnp_dev(&pnp_global); \
+	(dev) = global_to_pnp_dev((dev)->global_list.next))

ERROR:SPACING: space required before the open parenthesis '('
#2423: FILE: include/linux/pnp.h:276:
+	for((dev) = global_to_pnp_dev(pnp_global.next); \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2426: FILE: include/linux/pnp.h:279:
+#define card_for_each_dev(card,dev) \
                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'card' - possible side-effects?
#2426: FILE: include/linux/pnp.h:279:
+#define card_for_each_dev(card,dev) \
+	for((dev) = card_to_pnp_dev((card)->devices.next); \
+	(dev) != card_to_pnp_dev(&(card)->devices); \
+	(dev) = card_to_pnp_dev((dev)->card_list.next))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dev' - possible side-effects?
#2426: FILE: include/linux/pnp.h:279:
+#define card_for_each_dev(card,dev) \
+	for((dev) = card_to_pnp_dev((card)->devices.next); \
+	(dev) != card_to_pnp_dev(&(card)->devices); \
+	(dev) = card_to_pnp_dev((dev)->card_list.next))

ERROR:SPACING: space required before the open parenthesis '('
#2427: FILE: include/linux/pnp.h:280:
+	for((dev) = card_to_pnp_dev((card)->devices.next); \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2430: FILE: include/linux/pnp.h:283:
+#define pnp_dev_name(dev) (dev)->dev.name

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dev' - possible side-effects?
#2430: FILE: include/linux/pnp.h:283:
+#define pnp_dev_name(dev) (dev)->dev.name

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2432: FILE: include/linux/pnp.h:285:
+static inline void *pnp_get_drvdata (struct pnp_dev *pdev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2437: FILE: include/linux/pnp.h:290:
+static inline void pnp_set_drvdata (struct pnp_dev *pdev, void *data)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2442: FILE: include/linux/pnp.h:295:
+static inline void *pnp_get_protodata (struct pnp_dev *pdev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2447: FILE: include/linux/pnp.h:300:
+static inline void pnp_set_protodata (struct pnp_dev *pdev, void *data)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dev' - possible side-effects?
#2464: FILE: include/linux/pnp.h:317:
+#define pnp_can_read(dev)	(((dev)->protocol) && ((dev)->protocol->get) && \
+				 ((dev)->capabilities & PNP_READ))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dev' - possible side-effects?
#2466: FILE: include/linux/pnp.h:319:
+#define pnp_can_write(dev)	(((dev)->protocol) && ((dev)->protocol->set) && \
+				 ((dev)->capabilities & PNP_WRITE))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dev' - possible side-effects?
#2468: FILE: include/linux/pnp.h:321:
+#define pnp_can_disable(dev)	(((dev)->protocol) && ((dev)->protocol->disable) && \
+				 ((dev)->capabilities & PNP_DISABLE))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dev' - possible side-effects?
#2470: FILE: include/linux/pnp.h:323:
+#define pnp_can_configure(dev)	((!(dev)->active) && (!(dev)->lock_resources) && \
+				 ((dev)->capabilities & PNP_CONFIGURABLE))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2480: FILE: include/linux/pnp.h:332:
+
+

ERROR:POINTER_LOCATION: "foo		      * bar" should be "foo		      *bar"
#2488: FILE: include/linux/pnp.h:339:
+	char		      * name;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2585: FILE: include/linux/pnp.h:462:
+#define pnp_err(format, arg...) printk(KERN_ERR "pnp: " format "\n" , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2585: FILE: include/linux/pnp.h:462:
+#define pnp_err(format, arg...) printk(KERN_ERR "pnp: " format "\n" , ## arg)
                                                                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2586: FILE: include/linux/pnp.h:463:
+#define pnp_info(format, arg...) printk(KERN_INFO "pnp: " format "\n" , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2586: FILE: include/linux/pnp.h:463:
+#define pnp_info(format, arg...) printk(KERN_INFO "pnp: " format "\n" , ## arg)
                                                                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2587: FILE: include/linux/pnp.h:464:
+#define pnp_warn(format, arg...) printk(KERN_WARNING "pnp: " format "\n" , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2587: FILE: include/linux/pnp.h:464:
+#define pnp_warn(format, arg...) printk(KERN_WARNING "pnp: " format "\n" , ## arg)
                                                                          ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000396161.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 205 errors, 57 warnings, 34 checks, 2439 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000396161.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
