WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#21: 
diff -u --new-file --recursive --exclude-from /usr/src/exclude linux-2.6.0-test1/sound/oss/hal2.c linux-2.6.0-test1-ac2/sound/oss/hal2.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#25: FILE: sound/oss/hal2.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#28: FILE: sound/oss/hal2.c:4:
+ *  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#32: FILE: sound/oss/hal2.c:8:
+ *  it under the terms of the GNU General Public License version 2 as $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#41: FILE: sound/oss/hal2.c:17:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#42: FILE: sound/oss/hal2.c:18:
+ *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#61: FILE: sound/oss/hal2.c:37:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#62: FILE: sound/oss/hal2.c:38:
+#include <asm/uaccess.h>

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#67: FILE: sound/oss/hal2.c:43:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#68: FILE: sound/oss/hal2.c:44:
+#define DEBUG(args...)		printk(args)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#73: FILE: sound/oss/hal2.c:49:
+#if 0 $

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#73: FILE: sound/oss/hal2.c:49:
+#if 0 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#74: FILE: sound/oss/hal2.c:50:
+#define DEBUG_MIX(args...)	printk(args)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#79: FILE: sound/oss/hal2.c:55:
+#define H2_INDIRECT_WAIT(regs)	while (regs->isr & H2_ISR_TSTATUS);

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'regs' may be better as '(regs)' to avoid precedence issues
#79: FILE: sound/oss/hal2.c:55:
+#define H2_INDIRECT_WAIT(regs)	while (regs->isr & H2_ISR_TSTATUS);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#79: FILE: sound/oss/hal2.c:55:
+#define H2_INDIRECT_WAIT(regs)	while (regs->isr & H2_ISR_TSTATUS);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#81: FILE: sound/oss/hal2.c:57:
+#define H2_READ_ADDR(addr)	(addr | (1<<7))
                           	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'addr' may be better as '(addr)' to avoid precedence issues
#81: FILE: sound/oss/hal2.c:57:
+#define H2_READ_ADDR(addr)	(addr | (1<<7))

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#93: FILE: sound/oss/hal2.c:69:
+static hal2_card_t* hal2_card[MAXCARDS];

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#119: FILE: sound/oss/hal2.c:95:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#212: FILE: sound/oss/hal2.c:188:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#233: FILE: sound/oss/hal2.c:209:
+	printk("isr: %08hx ", hal2_isr_look(hal2));

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%08hx' is unnecessary
#233: FILE: sound/oss/hal2.c:209:
+	printk("isr: %08hx ", hal2_isr_look(hal2));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#234: FILE: sound/oss/hal2.c:210:
+	printk("rev: %08hx\n", hal2_rev_look(hal2));

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%08hx' is unnecessary
#234: FILE: sound/oss/hal2.c:210:
+	printk("rev: %08hx\n", hal2_rev_look(hal2));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#235: FILE: sound/oss/hal2.c:211:
+	printk("relay: %04hx\n", hal2_i_look16(hal2, H2I_RELAY_C));

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%04hx' is unnecessary
#235: FILE: sound/oss/hal2.c:211:
+	printk("relay: %04hx\n", hal2_i_look16(hal2, H2I_RELAY_C));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#236: FILE: sound/oss/hal2.c:212:
+	printk("port en: %04hx ", hal2_i_look16(hal2, H2I_DMA_PORT_EN));

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%04hx' is unnecessary
#236: FILE: sound/oss/hal2.c:212:
+	printk("port en: %04hx ", hal2_i_look16(hal2, H2I_DMA_PORT_EN));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#237: FILE: sound/oss/hal2.c:213:
+	printk("dma end: %04hx ", hal2_i_look16(hal2, H2I_DMA_END));

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%04hx' is unnecessary
#237: FILE: sound/oss/hal2.c:213:
+	printk("dma end: %04hx ", hal2_i_look16(hal2, H2I_DMA_END));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#238: FILE: sound/oss/hal2.c:214:
+	printk("dma drv: %04hx\n", hal2_i_look16(hal2, H2I_DMA_DRV));

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%04hx' is unnecessary
#238: FILE: sound/oss/hal2.c:214:
+	printk("dma drv: %04hx\n", hal2_i_look16(hal2, H2I_DMA_DRV));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#239: FILE: sound/oss/hal2.c:215:
+	printk("syn ctl: %04hx ", hal2_i_look16(hal2, H2I_SYNTH_C));

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%04hx' is unnecessary
#239: FILE: sound/oss/hal2.c:215:
+	printk("syn ctl: %04hx ", hal2_i_look16(hal2, H2I_SYNTH_C));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#240: FILE: sound/oss/hal2.c:216:
+	printk("aesrx ctl: %04hx ", hal2_i_look16(hal2, H2I_AESRX_C));

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%04hx' is unnecessary
#240: FILE: sound/oss/hal2.c:216:
+	printk("aesrx ctl: %04hx ", hal2_i_look16(hal2, H2I_AESRX_C));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#241: FILE: sound/oss/hal2.c:217:
+	printk("aestx ctl: %04hx ", hal2_i_look16(hal2, H2I_AESTX_C));

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%04hx' is unnecessary
#241: FILE: sound/oss/hal2.c:217:
+	printk("aestx ctl: %04hx ", hal2_i_look16(hal2, H2I_AESTX_C));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#242: FILE: sound/oss/hal2.c:218:
+	printk("dac ctl1: %04hx ", hal2_i_look16(hal2, H2I_ADC_C1));

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%04hx' is unnecessary
#242: FILE: sound/oss/hal2.c:218:
+	printk("dac ctl1: %04hx ", hal2_i_look16(hal2, H2I_ADC_C1));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#243: FILE: sound/oss/hal2.c:219:
+	printk("dac ctl2: %08lx ", hal2_i_look32(hal2, H2I_ADC_C2));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#244: FILE: sound/oss/hal2.c:220:
+	printk("adc ctl1: %04hx ", hal2_i_look16(hal2, H2I_DAC_C1));

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%04hx' is unnecessary
#244: FILE: sound/oss/hal2.c:220:
+	printk("adc ctl1: %04hx ", hal2_i_look16(hal2, H2I_DAC_C1));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#245: FILE: sound/oss/hal2.c:221:
+	printk("adc ctl2: %08lx ", hal2_i_look32(hal2, H2I_DAC_C2));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#246: FILE: sound/oss/hal2.c:222:
+	printk("syn map: %04hx\n", hal2_i_look16(hal2, H2I_SYNTH_MAP_C));

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%04hx' is unnecessary
#246: FILE: sound/oss/hal2.c:222:
+	printk("syn map: %04hx\n", hal2_i_look16(hal2, H2I_SYNTH_MAP_C));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#247: FILE: sound/oss/hal2.c:223:
+	printk("bres1 ctl1: %04hx ", hal2_i_look16(hal2, H2I_BRES1_C1));

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%04hx' is unnecessary
#247: FILE: sound/oss/hal2.c:223:
+	printk("bres1 ctl1: %04hx ", hal2_i_look16(hal2, H2I_BRES1_C1));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#248: FILE: sound/oss/hal2.c:224:
+	printk("bres1 ctl2: %04lx ", hal2_i_look32(hal2, H2I_BRES1_C2));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#249: FILE: sound/oss/hal2.c:225:
+	printk("bres2 ctl1: %04hx ", hal2_i_look16(hal2, H2I_BRES2_C1));

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%04hx' is unnecessary
#249: FILE: sound/oss/hal2.c:225:
+	printk("bres2 ctl1: %04hx ", hal2_i_look16(hal2, H2I_BRES2_C1));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#250: FILE: sound/oss/hal2.c:226:
+	printk("bres2 ctl2: %04lx ", hal2_i_look32(hal2, H2I_BRES2_C2));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#251: FILE: sound/oss/hal2.c:227:
+	printk("bres3 ctl1: %04hx ", hal2_i_look16(hal2, H2I_BRES3_C1));

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%04hx' is unnecessary
#251: FILE: sound/oss/hal2.c:227:
+	printk("bres3 ctl1: %04hx ", hal2_i_look16(hal2, H2I_BRES3_C1));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#252: FILE: sound/oss/hal2.c:228:
+	printk("bres3 ctl2: %04lx\n", hal2_i_look32(hal2, H2I_BRES3_C2));

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#256: FILE: sound/oss/hal2.c:232:
+static hal2_card_t* hal2_dsp_find_card(int minor)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "hal2_card[i]"
#261: FILE: sound/oss/hal2.c:237:
+		if (hal2_card[i] != NULL && hal2_card[i]->dev_dsp == minor)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#266: FILE: sound/oss/hal2.c:242:
+static hal2_card_t* hal2_mixer_find_card(int minor)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "hal2_card[i]"
#271: FILE: sound/oss/hal2.c:247:
+		if (hal2_card[i] != NULL && hal2_card[i]->dev_mixer == minor)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#276: FILE: sound/oss/hal2.c:252:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: sound/oss/hal2.c:258:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#284: FILE: sound/oss/hal2.c:260:
+	 * stopped */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: No space is necessary after a cast
#288: FILE: sound/oss/hal2.c:264:
+	dma_cache_wback_inv((unsigned long) dac->tail,

WARNING:TYPO_SPELLING: 'proccessed' may be misspelled - perhaps 'processed'?
#290: FILE: sound/oss/hal2.c:266:
+	/* we just proccessed empty buffer, don't update tail pointer */
 	           ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: sound/oss/hal2.c:278:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#306: FILE: sound/oss/hal2.c:282:
+	 * stopped */

CHECK:SPACING: No space is necessary after a cast
#310: FILE: sound/oss/hal2.c:286:
+	dma_cache_wback_inv((unsigned long) adc->head,

WARNING:TYPO_SPELLING: 'proccessed' may be misspelled - perhaps 'processed'?
#312: FILE: sound/oss/hal2.c:288:
+	/* we just proccessed empty buffer, don't update head pointer */
 	           ^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#314: FILE: sound/oss/hal2.c:290:
+		dma_cache_inv((unsigned long) adc->head->data, H2_BUFFER_SIZE);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#325: FILE: sound/oss/hal2.c:301:
+	hal2_card_t *hal2 = (hal2_card_t*)dev_id;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: sound/oss/hal2.c:314:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: sound/oss/hal2.c:320:
+^I$

WARNING:TYPO_SPELLING: 'accidently' may be misspelled - perhaps 'accidentally'?
#355: FILE: sound/oss/hal2.c:331:
+	 * I accidently discovered this method while I was testing and it seems
 	     ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: sound/oss/hal2.c:335:
+^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#362: FILE: sound/oss/hal2.c:338:
+		if (inc < 1) inc = 1;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#366: FILE: sound/oss/hal2.c:342:
+		if (inc < 1) inc = 1;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#372: FILE: sound/oss/hal2.c:348:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: sound/oss/hal2.c:361:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#397: FILE: sound/oss/hal2.c:373:
+^I$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hal2_setup_dac', this function's name, in a string
#407: FILE: sound/oss/hal2.c:383:
+	DEBUG("hal2_setup_dac\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: sound/oss/hal2.c:384:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#417: FILE: sound/oss/hal2.c:393:
+	 * should be set to two samples. */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hal2_setup_adc', this function's name, in a string
#440: FILE: sound/oss/hal2.c:416:
+	DEBUG("hal2_setup_adc\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: sound/oss/hal2.c:417:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#447: FILE: sound/oss/hal2.c:423:
+^Ipbus->ctrl = HPC3_PDMACTRL_RT | HPC3_PDMACTRL_RCV | HPC3_PDMACTRL_LD | $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hal2_start_dac', this function's name, in a string
#464: FILE: sound/oss/hal2.c:440:
+	DEBUG("hal2_start_dac\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#465: FILE: sound/oss/hal2.c:441:
+^I$

WARNING:TYPO_SPELLING: 'endianess' may be misspelled - perhaps 'endianness'?
#469: FILE: sound/oss/hal2.c:445:
+	/* set endianess */
 	       ^^^^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hal2_start_adc', this function's name, in a string
#484: FILE: sound/oss/hal2.c:460:
+	DEBUG("hal2_start_adc\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: sound/oss/hal2.c:461:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#488: FILE: sound/oss/hal2.c:464:
+^I$

WARNING:TYPO_SPELLING: 'endianess' may be misspelled - perhaps 'endianness'?
#489: FILE: sound/oss/hal2.c:465:
+	/* set endianess */
 	       ^^^^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hal2_stop_dac', this function's name, in a string
#502: FILE: sound/oss/hal2.c:478:
+	DEBUG("hal2_stop_dac\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#503: FILE: sound/oss/hal2.c:479:
+^I$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hal2_stop_adc', this function's name, in a string
#510: FILE: sound/oss/hal2.c:486:
+	DEBUG("hal2_stop_adc\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#511: FILE: sound/oss/hal2.c:487:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#532: FILE: sound/oss/hal2.c:508:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#534: FILE: sound/oss/hal2.c:510:
+^I$

CHECK:SPACING: No space is necessary after a cast
#535: FILE: sound/oss/hal2.c:511:
+	buf = (hal2_buf_t*) get_zeroed_page(GFP_KERNEL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#535: FILE: sound/oss/hal2.c:511:
+	buf = (hal2_buf_t*) get_zeroed_page(GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#540: FILE: sound/oss/hal2.c:516:
+^I$

CHECK:SPACING: No space is necessary after a cast
#546: FILE: sound/oss/hal2.c:522:
+		buf = (hal2_buf_t*) get_zeroed_page(GFP_KERNEL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#546: FILE: sound/oss/hal2.c:522:
+		buf = (hal2_buf_t*) get_zeroed_page(GFP_KERNEL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#548: FILE: sound/oss/hal2.c:524:
+			printk("HAL2: Not enough memory for DMA buffer.\n");

CHECK:SPACING: No space is necessary after a cast
#552: FILE: sound/oss/hal2.c:528:
+				free_page((unsigned long) buf);

CHECK:SPACING: No space is necessary after a cast
#562: FILE: sound/oss/hal2.c:538:
+		dma_cache_wback_inv((unsigned long) prev, PAGE_SIZE);

CHECK:SPACING: No space is necessary after a cast
#569: FILE: sound/oss/hal2.c:545:
+	dma_cache_wback_inv((unsigned long) buf, PAGE_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#570: FILE: sound/oss/hal2.c:546:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#583: FILE: sound/oss/hal2.c:559:
+^I$

CHECK:SPACING: No space is necessary after a cast
#588: FILE: sound/oss/hal2.c:564:
+		free_page((unsigned long) buf);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#591: FILE: sound/oss/hal2.c:567:
+	codec->head = codec->tail = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#594: FILE: sound/oss/hal2.c:570:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: sound/oss/hal2.c:579:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#605: FILE: sound/oss/hal2.c:581:
+^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#619: FILE: sound/oss/hal2.c:595:
+		if (copy_to_user(buffer, &adc->tail->data[H2_BUFFER_SIZE-size],
 		                                                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#626: FILE: sound/oss/hal2.c:602:
+^I^I$

CHECK:SPACING: No space is necessary after a cast
#632: FILE: sound/oss/hal2.c:608:
+			dma_cache_wback_inv((unsigned long) adc->tail,

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#639: FILE: sound/oss/hal2.c:615:
+
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#647: FILE: sound/oss/hal2.c:623:
+out:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#649: FILE: sound/oss/hal2.c:625:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#651: FILE: sound/oss/hal2.c:627:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#653: FILE: sound/oss/hal2.c:629:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#662: FILE: sound/oss/hal2.c:638:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#664: FILE: sound/oss/hal2.c:640:
+^I$

WARNING:MINMAX: min() should probably be min_t(int, H2_BUFFER_SIZE, count)
#668: FILE: sound/oss/hal2.c:644:
+		size = min((int)H2_BUFFER_SIZE, count);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#670: FILE: sound/oss/hal2.c:646:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#679: FILE: sound/oss/hal2.c:655:
+^I^Idma_cache_wback_inv((unsigned long) dac->head, $

CHECK:SPACING: No space is necessary after a cast
#679: FILE: sound/oss/hal2.c:655:
+		dma_cache_wback_inv((unsigned long) dac->head, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#690: FILE: sound/oss/hal2.c:666:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#692: FILE: sound/oss/hal2.c:668:
+out:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#694: FILE: sound/oss/hal2.c:670:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#703: FILE: sound/oss/hal2.c:679:
+^I$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hal2_reset_pointer', this function's name, in a string
#704: FILE: sound/oss/hal2.c:680:
+	DEBUG("hal2_reset_pointer\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#708: FILE: sound/oss/hal2.c:684:
+^I^Icodec->tail->info.desc.cntinfo = HPCDMA_XIE | (is_dac) ? $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#711: FILE: sound/oss/hal2.c:687:
+^I^Idma_cache_wback_inv((unsigned long) codec->tail, $

CHECK:SPACING: No space is necessary after a cast
#711: FILE: sound/oss/hal2.c:687:
+		dma_cache_wback_inv((unsigned long) codec->tail, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#726: FILE: sound/oss/hal2.c:702:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#731: FILE: sound/oss/hal2.c:707:
+^I^I^I/* We may get bogus timeout when system is $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#732: FILE: sound/oss/hal2.c:708:
+			 * heavily loaded */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#734: FILE: sound/oss/hal2.c:710:
+				printk("HAL2: timeout...\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#747: FILE: sound/oss/hal2.c:723:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#756: FILE: sound/oss/hal2.c:732:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#766: FILE: sound/oss/hal2.c:742:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#771: FILE: sound/oss/hal2.c:747:
+	case H2_MIX_OUTPUT_ATT: {
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#774: FILE: sound/oss/hal2.c:750:
+		if (r | l) {
[...]
+		} else 
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#775: FILE: sound/oss/hal2.c:751:
+^I^I^Iunsigned int tmp = hal2_i_look32(hal2, H2I_DAC_C2); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#776: FILE: sound/oss/hal2.c:752:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#782: FILE: sound/oss/hal2.c:758:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#788: FILE: sound/oss/hal2.c:764:
+^I^I} else $

CHECK:BRACES: Unbalanced braces around else statement
#788: FILE: sound/oss/hal2.c:764:
+		} else 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#804: FILE: sound/oss/hal2.c:780:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#805: FILE: sound/oss/hal2.c:781:
+		
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#807: FILE: sound/oss/hal2.c:783:
+static int hal2_mixer_ioctl(hal2_card_t *hal2, unsigned int cmd, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#812: FILE: sound/oss/hal2.c:788:
+        if (cmd == SOUND_MIXER_INFO) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: sound/oss/hal2.c:788:
+        if (cmd == SOUND_MIXER_INFO) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#814: FILE: sound/oss/hal2.c:790:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#824: FILE: sound/oss/hal2.c:800:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#835: FILE: sound/oss/hal2.c:811:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#835: FILE: sound/oss/hal2.c:811:
+                return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#837: FILE: sound/oss/hal2.c:813:
+        if (_IOC_DIR(cmd) == _IOC_READ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#837: FILE: sound/oss/hal2.c:813:
+        if (_IOC_DIR(cmd) == _IOC_READ) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#838: FILE: sound/oss/hal2.c:814:
+                switch (_IOC_NR(cmd)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#838: FILE: sound/oss/hal2.c:814:
+                switch (_IOC_NR(cmd)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#844: FILE: sound/oss/hal2.c:820:
+                case SOUND_MIXER_DEVMASK:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#844: FILE: sound/oss/hal2.c:820:
+                case SOUND_MIXER_DEVMASK:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#845: FILE: sound/oss/hal2.c:821:
+                case SOUND_MIXER_STEREODEVS: {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#845: FILE: sound/oss/hal2.c:821:
+                case SOUND_MIXER_STEREODEVS: {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#847: FILE: sound/oss/hal2.c:823:
+^I^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#854: FILE: sound/oss/hal2.c:830:
+                case SOUND_MIXER_RECMASK:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#854: FILE: sound/oss/hal2.c:830:
+                case SOUND_MIXER_RECMASK:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#857: FILE: sound/oss/hal2.c:833:
+                case SOUND_MIXER_CAPS:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#857: FILE: sound/oss/hal2.c:833:
+                case SOUND_MIXER_CAPS:$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#863: FILE: sound/oss/hal2.c:839:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#872: FILE: sound/oss/hal2.c:848:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#873: FILE: sound/oss/hal2.c:849:
+        if (_IOC_DIR(cmd) != (_IOC_WRITE|_IOC_READ))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#873: FILE: sound/oss/hal2.c:849:
+        if (_IOC_DIR(cmd) != (_IOC_WRITE|_IOC_READ))$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#873: FILE: sound/oss/hal2.c:849:
+        if (_IOC_DIR(cmd) != (_IOC_WRITE|_IOC_READ))
                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#875: FILE: sound/oss/hal2.c:851:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#914: FILE: sound/oss/hal2.c:890:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#915: FILE: sound/oss/hal2.c:891:
+static int hal2_ioctl(struct inode *inode, struct file *file, $

CHECK:SPACING: No space is necessary after a cast
#919: FILE: sound/oss/hal2.c:895:
+	hal2_card_t *hal2 = (hal2_card_t *) file->private_data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#924: FILE: sound/oss/hal2.c:900:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#929: FILE: sound/oss/hal2.c:905:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#935: FILE: sound/oss/hal2.c:911:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#947: FILE: sound/oss/hal2.c:923:
+ ^Icase SNDCTL_DSP_SPEED:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#947: FILE: sound/oss/hal2.c:923:
+ ^Icase SNDCTL_DSP_SPEED:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#947: FILE: sound/oss/hal2.c:923:
+ ^Icase SNDCTL_DSP_SPEED:$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#963: FILE: sound/oss/hal2.c:939:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#976: FILE: sound/oss/hal2.c:952:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#976: FILE: sound/oss/hal2.c:952:
+                }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1000: FILE: sound/oss/hal2.c:976:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1002: FILE: sound/oss/hal2.c:978:
+                return put_user(H2_SUPPORTED_FORMATS, (int *)arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1002: FILE: sound/oss/hal2.c:978:
+                return put_user(H2_SUPPORTED_FORMATS, (int *)arg);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1003: FILE: sound/oss/hal2.c:979:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1028: FILE: sound/oss/hal2.c:1004:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1037: FILE: sound/oss/hal2.c:1013:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1040: FILE: sound/oss/hal2.c:1016:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1049: FILE: sound/oss/hal2.c:1025:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1052: FILE: sound/oss/hal2.c:1028:
+                info.bytes = info.fragsize * info.fragments;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1052: FILE: sound/oss/hal2.c:1028:
+                info.bytes = info.fragsize * info.fragments;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1056: FILE: sound/oss/hal2.c:1032:
+^I^I^I   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1062: FILE: sound/oss/hal2.c:1038:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1065: FILE: sound/oss/hal2.c:1041:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1079: FILE: sound/oss/hal2.c:1055:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1086: FILE: sound/oss/hal2.c:1062:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1089: FILE: sound/oss/hal2.c:1065:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1113: FILE: sound/oss/hal2.c:1089:
+^I$

CHECK:SPACING: No space is necessary after a cast
#1121: FILE: sound/oss/hal2.c:1097:
+	hal2_card_t *hal2 = (hal2_card_t *) file->private_data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1128: FILE: sound/oss/hal2.c:1104:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1130: FILE: sound/oss/hal2.c:1106:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1141: FILE: sound/oss/hal2.c:1117:
+^I^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1154: FILE: sound/oss/hal2.c:1130:
+				 * buffer filled ;) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1157: FILE: sound/oss/hal2.c:1133:
+					 * is heavily loaded */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1159: FILE: sound/oss/hal2.c:1135:
+						printk("HAL2: timeout...\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1169: FILE: sound/oss/hal2.c:1145:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1170: FILE: sound/oss/hal2.c:1146:
+	
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1171: FILE: sound/oss/hal2.c:1147:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1173: FILE: sound/oss/hal2.c:1149:
+^I$

CHECK:SPACING: No space is necessary after a cast
#1181: FILE: sound/oss/hal2.c:1157:
+	char *buf = (char*) buffer;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1181: FILE: sound/oss/hal2.c:1157:
+	char *buf = (char*) buffer;

CHECK:SPACING: No space is necessary after a cast
#1182: FILE: sound/oss/hal2.c:1158:
+	hal2_card_t *hal2 = (hal2_card_t *) file->private_data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1202: FILE: sound/oss/hal2.c:1178:
+^I^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1215: FILE: sound/oss/hal2.c:1191:
+				 * buffer free ;) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1218: FILE: sound/oss/hal2.c:1194:
+					 * is heavily loaded */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1220: FILE: sound/oss/hal2.c:1196:
+						printk("HAL2: timeout...\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1231: FILE: sound/oss/hal2.c:1207:
+^I$

CHECK:SPACING: No space is necessary after a cast
#1241: FILE: sound/oss/hal2.c:1217:
+	hal2_card_t *hal2 = (hal2_card_t *) file->private_data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1245: FILE: sound/oss/hal2.c:1221:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1252: FILE: sound/oss/hal2.c:1228:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1255: FILE: sound/oss/hal2.c:1231:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1262: FILE: sound/oss/hal2.c:1238:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1274: FILE: sound/oss/hal2.c:1250:
+		printk("HAL2: Whee?! Open door and go away!\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1282: FILE: sound/oss/hal2.c:1258:
+^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1284: FILE: sound/oss/hal2.c:1260:
+		 * but HAL2 can't do 8bit audio */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1313: FILE: sound/oss/hal2.c:1289:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1316: FILE: sound/oss/hal2.c:1292:
+^I$

CHECK:SPACING: No space is necessary after a cast
#1322: FILE: sound/oss/hal2.c:1298:
+	hal2_card_t *hal2 = (hal2_card_t *) file->private_data;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1339: FILE: sound/oss/hal2.c:1315:
+static struct file_operations hal2_audio_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#1340: FILE: sound/oss/hal2.c:1316:
+	owner:		THIS_MODULE,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1341: FILE: sound/oss/hal2.c:1317:
+	llseek:		no_llseek,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#1341: FILE: sound/oss/hal2.c:1317:
+	llseek:		no_llseek,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1342: FILE: sound/oss/hal2.c:1318:
+	read:		hal2_read,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1342: FILE: sound/oss/hal2.c:1318:
+	read:		hal2_read,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1343: FILE: sound/oss/hal2.c:1319:
+	write:		hal2_write,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#1343: FILE: sound/oss/hal2.c:1319:
+	write:		hal2_write,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1344: FILE: sound/oss/hal2.c:1320:
+	poll:		hal2_poll,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1344: FILE: sound/oss/hal2.c:1320:
+	poll:		hal2_poll,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1345: FILE: sound/oss/hal2.c:1321:
+	ioctl:		hal2_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#1345: FILE: sound/oss/hal2.c:1321:
+	ioctl:		hal2_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1346: FILE: sound/oss/hal2.c:1322:
+	open:		hal2_open,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1346: FILE: sound/oss/hal2.c:1322:
+	open:		hal2_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1347: FILE: sound/oss/hal2.c:1323:
+	release:	hal2_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#1347: FILE: sound/oss/hal2.c:1323:
+	release:	hal2_release,

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1350: FILE: sound/oss/hal2.c:1326:
+static struct file_operations hal2_mixer_fops = {

WARNING:INDENTED_LABEL: labels should not be indented
#1351: FILE: sound/oss/hal2.c:1327:
+	owner:		THIS_MODULE,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1352: FILE: sound/oss/hal2.c:1328:
+	llseek:		no_llseek,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#1352: FILE: sound/oss/hal2.c:1328:
+	llseek:		no_llseek,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1353: FILE: sound/oss/hal2.c:1329:
+	ioctl:		hal2_ioctl_mixdev,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#1353: FILE: sound/oss/hal2.c:1329:
+	ioctl:		hal2_ioctl_mixdev,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1354: FILE: sound/oss/hal2.c:1330:
+	open:		hal2_open_mixdev,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1354: FILE: sound/oss/hal2.c:1330:
+	open:		hal2_open_mixdev,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1355: FILE: sound/oss/hal2.c:1331:
+	release:	hal2_release_mixdev,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#1355: FILE: sound/oss/hal2.c:1331:
+	release:	hal2_release_mixdev,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1365: FILE: sound/oss/hal2.c:1341:
+		printk(KERN_ERR "HAL2: Can't get irq %d\n", irq);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1380: FILE: sound/oss/hal2.c:1356:
+	 * does 8 bit DMA, not 16 bit even if it generates 16 bit audio. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1414: FILE: sound/oss/hal2.c:1390:
+^Ihal2_i_write16(hal2, H2I_RELAY_C, H2I_RELAY_C_STATE); $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1416: FILE: sound/oss/hal2.c:1392:
+	if ((rev = hal2_rev_look(hal2)) & H2_REV_AUDIO_PRESENT) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1425: FILE: sound/oss/hal2.c:1401:
+	printk("SGI HAL2 Processor revision %i.%i.%i detected\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1428: FILE: sound/oss/hal2.c:1404:
+^Iif (board != 4 || major != 1 || minor != 0) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1429: FILE: sound/oss/hal2.c:1405:
+		printk( "Other revision than 4.1.0 detected. "

ERROR:SPACING: space prohibited after that open parenthesis '('
#1429: FILE: sound/oss/hal2.c:1405:
+		printk( "Other revision than 4.1.0 detected. "

WARNING:SPLIT_STRING: quoted string split across lines
#1430: FILE: sound/oss/hal2.c:1406:
+		printk( "Other revision than 4.1.0 detected. "
+			"Your card is probably unsupported\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1440: FILE: sound/oss/hal2.c:1416:
+^I$

CHECK:SPACING: No space is necessary after a cast
#1441: FILE: sound/oss/hal2.c:1417:
+	hal2 = (hal2_card_t *) kmalloc(sizeof(hal2_card_t), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1441: FILE: sound/oss/hal2.c:1417:
+	hal2 = (hal2_card_t *) kmalloc(sizeof(hal2_card_t), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#1446: FILE: sound/oss/hal2.c:1422:
+	hal2->ctl_regs = (hal2_ctl_regs_t *) KSEG1ADDR(hpc3_base + H2_CTL_PIO);

CHECK:SPACING: No space is necessary after a cast
#1447: FILE: sound/oss/hal2.c:1423:
+	hal2->aes_regs = (hal2_aes_regs_t *) KSEG1ADDR(hpc3_base + H2_AES_PIO);

CHECK:SPACING: No space is necessary after a cast
#1448: FILE: sound/oss/hal2.c:1424:
+	hal2->vol_regs = (hal2_vol_regs_t *) KSEG1ADDR(hpc3_base + H2_VOL_PIO);

CHECK:SPACING: No space is necessary after a cast
#1449: FILE: sound/oss/hal2.c:1425:
+	hal2->syn_regs = (hal2_syn_regs_t *) KSEG1ADDR(hpc3_base + H2_SYN_PIO);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1452: FILE: sound/oss/hal2.c:1428:
+		printk("HAL2 audio processor not found\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1463: FILE: sound/oss/hal2.c:1439:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1477: FILE: sound/oss/hal2.c:1453:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1486: FILE: sound/oss/hal2.c:1462:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1490: FILE: sound/oss/hal2.c:1466:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1507: FILE: sound/oss/hal2.c:1483:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1527: FILE: sound/oss/hal2.h:1:
+#ifndef __HAL2_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1536: FILE: sound/oss/hal2.h:10:
+ *  it under the terms of the GNU General Public License version 2 as $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1545: FILE: sound/oss/hal2.h:19:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1546: FILE: sound/oss/hal2.h:20:
+ *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:TYPO_SPELLING: 'blockin' may be misspelled - perhaps 'blocking'?
#1592: FILE: sound/oss/hal2.h:66:
+					/* blockin which the indirect */
 					   ^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1647: FILE: sound/oss/hal2.h:121:
+#define H2I_DMA_END^I^I0x9108 ^I^I/* global dma endian select */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1655: FILE: sound/oss/hal2.h:129:
+#define H2I_DMA_DRV^I^I0x910C  ^I/* global PBUS DMA enable */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1659: FILE: sound/oss/hal2.h:133:
+#define H2I_AESRX_C^I^I0x1204^I ^I/* AES RX dma control */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1675: FILE: sound/oss/hal2.h:149:
+#define H2I_DAC_C1^I^I0x1404 ^I^I/* DAC DMA control, 16 bit */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1677: FILE: sound/oss/hal2.h:151:
+#define H2I_ADC_C1^I^I0x1504 ^I^I/* ADC DMA control, 16 bit */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1691: FILE: sound/oss/hal2.h:165:
+#define H2I_C2_R_GAIN_SHIFT^I0^I^I/* right a/d input gain */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1692: FILE: sound/oss/hal2.h:166:
+#define H2I_C2_R_GAIN_M^I^I0xf^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1715: FILE: sound/oss/hal2.h:189:
+^I^I^I^I$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1736: FILE: sound/oss/hal2.h:210:
+typedef volatile u32 hal2_reg_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1738: FILE: sound/oss/hal2.h:212:
+typedef struct stru_hal2_ctl_regs hal2_ctl_regs_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1756: FILE: sound/oss/hal2.h:230:
+typedef struct stru_hal2_aes_regs hal2_aes_regs_t;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1762: FILE: sound/oss/hal2.h:236:
+^I$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1769: FILE: sound/oss/hal2.h:243:
+typedef struct stru_hal2_vol_regs hal2_vol_regs_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1775: FILE: sound/oss/hal2.h:249:
+typedef struct stru_hal2_syn_regs hal2_syn_regs_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1788: FILE: sound/oss/hal2.h:262:
+typedef struct stru_hal2_pbus hal2_pbus_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1795: FILE: sound/oss/hal2.h:269:
+typedef struct stru_hal2_binfo hal2_binfo_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1796: FILE: sound/oss/hal2.h:270:
+typedef struct stru_hal2_buffer hal2_buf_t;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1798: FILE: sound/oss/hal2.h:272:
+	volatile struct hpc_dma_desc desc;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1802: FILE: sound/oss/hal2.h:276:
+};
+#define H2_BUFFER_SIZE	(PAGE_SIZE - \

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#1806: FILE: sound/oss/hal2.h:280:
+	char data[H2_BUFFER_SIZE] __attribute__((aligned(8)));

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1809: FILE: sound/oss/hal2.h:283:
+typedef struct stru_hal2_codec hal2_codec_t;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1812: FILE: sound/oss/hal2.h:286:
+^Ihal2_buf_t *tail; $

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1822: FILE: sound/oss/hal2.h:296:
+	spinlock_t lock;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1825: FILE: sound/oss/hal2.h:299:
+^Iint usecount;^I^I^I/* recording and playback are $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1826: FILE: sound/oss/hal2.h:300:
+					 * independent */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1832: FILE: sound/oss/hal2.h:306:
+typedef struct stru_hal2_mixer hal2_mixer_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1838: FILE: sound/oss/hal2.h:312:
+typedef struct stru_hal2_card hal2_card_t;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1843: FILE: sound/oss/hal2.h:317:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000353376.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 148 errors, 130 warnings, 41 checks, 1826 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000353376.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
