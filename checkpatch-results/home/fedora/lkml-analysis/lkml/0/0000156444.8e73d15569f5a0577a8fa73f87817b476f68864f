WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
specifically for the MIPS Malta and SiByte 1250-SWARM (32 and 64bit), all from

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/kgdb.h> instead of <asm/kgdb.h>
#1564: FILE: arch/mips/kernel/irq.c:29:
+#include <asm/kgdb.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1621: FILE: arch/mips/kernel/kgdb.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1622: FILE: arch/mips/kernel/kgdb.c:2:
+ * arch/mips/kernel/kgdb.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#1658: FILE: arch/mips/kernel/kgdb.c:38:
+#include <asm/cacheflush.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/kdebug.h> instead of <asm/kdebug.h>
#1659: FILE: arch/mips/kernel/kgdb.c:39:
+#include <asm/kdebug.h>

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1681: FILE: arch/mips/kernel/kgdb.c:61:
+extern void trap_low(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1682: FILE: arch/mips/kernel/kgdb.c:62:
+extern void breakinst(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1683: FILE: arch/mips/kernel/kgdb.c:63:
+extern void init_IRQ(void);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1715: FILE: arch/mips/kernel/kgdb.c:95:
+	if (fixup_exception(regs)) {
+		return;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'trap == 9'
#1723: FILE: arch/mips/kernel/kgdb.c:103:
+		if ((trap == 9) && (regs->cp0_epc == (unsigned long)breakinst))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'regs->cp0_epc == (unsigned long)breakinst'
#1723: FILE: arch/mips/kernel/kgdb.c:103:
+		if ((trap == 9) && (regs->cp0_epc == (unsigned long)breakinst))

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1745: FILE: arch/mips/kernel/kgdb.c:125:
+#if 0

WARNING:RETURN_VOID: void function return statements are not generally useful
#1777: FILE: arch/mips/kernel/kgdb.c:157:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#1795: FILE: arch/mips/kernel/kgdb.c:175:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#1831: FILE: arch/mips/kernel/kgdb.c:211:
+	return;
+}

WARNING:TYPO_SPELLING: 'Userpace' may be misspelled - perhaps 'Userspace'?
#1846: FILE: arch/mips/kernel/kgdb.c:226:
+		/* Userpace events, ignore. */
 		   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONST_STRUCT: struct kgdb_arch should normally be const
#1887: FILE: arch/mips/kernel/kgdb.c:267:
+struct kgdb_arch arch_kgdb_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1911: FILE: arch/mips/kernel/kgdb.c:291:
+	 * a before/after in kgdb_handle_exception(...) -- Tom */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1921: FILE: arch/mips/kernel/kgdb_handler.S:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1922: FILE: arch/mips/kernel/kgdb_handler.S:2:
+ * arch/mips/kernel/kgdb_handler.S

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1983: FILE: arch/mips/kernel/kgdb-jmp.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1984: FILE: arch/mips/kernel/kgdb-jmp.c:2:
+ * arch/mips/kernel/kgdb-jmp.c

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2049: FILE: arch/mips/kernel/kgdb-jmp.c:67:
+	for (;;);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2096: FILE: arch/mips/kernel/kgdb-jmp.c:114:
+	for (;;);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2103: FILE: arch/mips/kernel/kgdb-setjmp.S:1:
+/*

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/kdebug.h> instead of <asm/kdebug.h>
#2167: FILE: arch/mips/kernel/traps.c:43:
+#include <asm/kdebug.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/kgdb.h> instead of <asm/kgdb.h>
#2398: FILE: arch/mips/sibyte/sb1250/irq.c:34:
+#include <asm/kgdb.h>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2493: FILE: arch/mips/sibyte/sb1250/kgdb_sibyte.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2494: FILE: arch/mips/sibyte/sb1250/kgdb_sibyte.c:2:
+ * arch/mips/sibyte/sb1250/kgdb_sibyte.c

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#2517: FILE: arch/mips/sibyte/sb1250/kgdb_sibyte.c:25:
+#include <asm/io.h>

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2527: FILE: arch/mips/sibyte/sb1250/kgdb_sibyte.c:35:
+extern char sb1250_duart_present[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2528: FILE: arch/mips/sibyte/sb1250/kgdb_sibyte.c:36:
+extern int sb1250_steal_irq(int irq);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2535: FILE: arch/mips/sibyte/sb1250/kgdb_sibyte.c:43:
+#define	duart_out(reg, val)	csr_out32(val, IOADDR(A_DUART_CHANREG(kgdb_port,reg)))
        	                   	                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2536: FILE: arch/mips/sibyte/sb1250/kgdb_sibyte.c:44:
+#define duart_in(reg)		csr_in32(IOADDR(A_DUART_CHANREG(kgdb_port,reg)))
                      		                                         ^

WARNING:SPACING: space prohibited before semicolon
#2540: FILE: arch/mips/sibyte/sb1250/kgdb_sibyte.c:48:
+	while ((duart_in(R_DUART_STATUS) & M_DUART_TX_RDY) == 0) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2540: FILE: arch/mips/sibyte/sb1250/kgdb_sibyte.c:48:
+	while ((duart_in(R_DUART_STATUS) & M_DUART_TX_RDY) == 0) ;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2550: FILE: arch/mips/sibyte/sb1250/kgdb_sibyte.c:58:
+	while ((status & M_DUART_RX_RDY) == 0) {
+		status = duart_in(R_DUART_STATUS);
+	}

CHECK:BRACES: braces {} should be used on all arms of this statement
#2580: FILE: arch/mips/sibyte/sb1250/kgdb_sibyte.c:88:
+	if (kgdb_io_ops.init != kgdb_init_io) {
[...]
+	} else
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2587: FILE: arch/mips/sibyte/sb1250/kgdb_sibyte.c:95:
+		while ((status & M_DUART_RX_RDY) == 0) {
+			status = duart_in(R_DUART_STATUS);
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2593: FILE: arch/mips/sibyte/sb1250/kgdb_sibyte.c:101:
+		if (status & M_DUART_FRM_ERR) {
+			kgdbsibyte_init_duart();
+		}

CHECK:BRACES: Unbalanced braces around else statement
#2597: FILE: arch/mips/sibyte/sb1250/kgdb_sibyte.c:105:
+	} else

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2600: FILE: arch/mips/sibyte/sb1250/kgdb_sibyte.c:108:
+
+}

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#2649: FILE: arch/mips/sibyte/sb1250/kgdb_sibyte.c:157:
+struct kgdb_io kgdb_io_ops = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2758: FILE: include/asm-mips/kdebug.h:1:
+/*

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2798: FILE: include/asm-mips/kdebug.h:41:
+static inline int notify_die(enum die_val val,char *str,struct pt_regs *regs,long err)
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2798: FILE: include/asm-mips/kdebug.h:41:
+static inline int notify_die(enum die_val val,char *str,struct pt_regs *regs,long err)
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2798: FILE: include/asm-mips/kdebug.h:41:
+static inline int notify_die(enum die_val val,char *str,struct pt_regs *regs,long err)
                                                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2800: FILE: include/asm-mips/kdebug.h:43:
+	struct die_args args = { .regs=regs, .str=str, .err=err };
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2800: FILE: include/asm-mips/kdebug.h:43:
+	struct die_args args = { .regs=regs, .str=str, .err=err };
 	                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2800: FILE: include/asm-mips/kdebug.h:43:
+	struct die_args args = { .regs=regs, .str=str, .err=err };
 	                                                   ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2801: FILE: include/asm-mips/kdebug.h:44:
+	struct die_args args = { .regs=regs, .str=str, .err=err };
+	return notifier_call_chain(&mips_die_chain, val, &args);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2809: FILE: include/asm-mips/kgdb.h:1:
+#ifdef __KERNEL__

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2814: FILE: include/asm-mips/kgdb.h:6:
+#define NUMREGBYTES		(90*sizeof(long))
                    		   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2815: FILE: include/asm-mips/kgdb.h:7:
+#define NUMCRITREGBYTES		(12*sizeof(long))
                        		   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2817: FILE: include/asm-mips/kgdb.h:9:
+#define BREAKPOINT()		__asm__ __volatile__(		\
+					".globl breakinst\n\t"	\
+					".set\tnoreorder\n\t"	\
+					"nop\n"			\
+					"breakinst:\tbreak\n\t"	\
+					"nop\n\t"		\
+					".set\treorder")

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#2855: FILE: lib/Kconfig.debug:226:
+config KGDB_SIBYTE
+	bool "KGDB: On the Broadcom SWARM serial port"
+	depends on MIPS && SIBYTE_SB1xxx_SOC
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000156444.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 32 warnings, 13 checks, 1128 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000156444.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
