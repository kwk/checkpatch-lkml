WARNING:TYPO_SPELLING: 'stram' may be misspelled - perhaps 'steam'?
#85: 
- remove old delete_from_swap_cache (only used by arch/m68k/atari/stram.c!
                                                                  ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#148: FILE: include/linux/swap.h:131:
+extern void __delete_from_swap_cache(struct page *page);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#149: FILE: include/linux/swap.h:132:
+extern void delete_from_swap_cache(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#150: FILE: include/linux/swap.h:133:
+extern void free_page_and_swap_cache(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#173: FILE: include/linux/swap.h:147:
+extern swp_entry_t get_swap_page(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#182: FILE: include/linux/swap.h:153:
+extern void swap_free(swp_entry_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'swp_entry_t' should also have an identifier name
#182: FILE: include/linux/swap.h:153:
+extern void swap_free(swp_entry_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:CAMELCASE: Avoid CamelCase: <Page_Uptodate>
#315: FILE: mm/shmem.c:350:
+			if (!Page_Uptodate(page) && entry->val == swap.val) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <TryLockPage>
#435: FILE: mm/swap_state.c:206:
+	if (TryLockPage(new_page))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#436: FILE: mm/swap_state.c:207:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:CAMELCASE: Avoid CamelCase: <UnlockPage>
#471: FILE: mm/swap_state.c:239:
+	UnlockPage(new_page);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#490: FILE: mm/swapfile.c:98:
+		si->lowest_bit = offset+1;
 		                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->swap_map[offset]'
#573: FILE: mm/swapfile.c:196:
+		if (!--(p->swap_map[offset])) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#775: FILE: mm/swapfile.c:972:
 			switch (swap_info[i].swap_map[j]) {
+				case 0:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#829: FILE: mm/swapfile.c:1011:
+				printk(KERN_WARNING "swap_dup: swap entry overflow\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513453.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 4 warnings, 10 checks, 822 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513453.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
