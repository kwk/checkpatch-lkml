WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#343: FILE: include/asm-i386/no_paravirt.h:1:
+#ifndef __ASM_NO_PARAVIRT_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#346: FILE: include/asm-i386/no_paravirt.h:4:
+ * instruction wrappers. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#367: FILE: include/asm-i386/no_paravirt.h:25:
+			:"=r" (var))
 			^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#371: FILE: include/asm-i386/no_paravirt.h:29:
+			:"r" (value))
 			^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#376: FILE: include/asm-i386/no_paravirt.h:34:
+static inline void set_iopl_mask(unsigned mask)

WARNING:LINE_SPACING: Missing a blank line after declarations
#379: FILE: include/asm-i386/no_paravirt.h:37:
+	unsigned int reg;
+	__asm__ __volatile__ ("pushfl;"

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#393: FILE: include/asm-i386/no_paravirt.h:51:
+	unsigned int eax = 1, ebx, ecx, edx;
+	__cpuid(&eax, &ebx, &ecx, &edx);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#399: FILE: include/asm-i386/no_paravirt.h:57:
+#define clts() __asm__ __volatile__ ("clts")

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#404: FILE: include/asm-i386/no_paravirt.h:62:
+		:"=r" (__dummy)); \
 		^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#407: FILE: include/asm-i386/no_paravirt.h:65:
+#define write_cr0(x) \
+	__asm__ __volatile__("movl %0,%%cr0": :"r" (x));

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#407: FILE: include/asm-i386/no_paravirt.h:65:
+#define write_cr0(x) \
+	__asm__ __volatile__("movl %0,%%cr0": :"r" (x));

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#408: FILE: include/asm-i386/no_paravirt.h:66:
+	__asm__ __volatile__("movl %0,%%cr0": :"r" (x));
 	                                    ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#408: FILE: include/asm-i386/no_paravirt.h:66:
+	__asm__ __volatile__("movl %0,%%cr0": :"r" (x));
 	                                      ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#414: FILE: include/asm-i386/no_paravirt.h:72:
+		:"=r" (__dummy)); \
 		^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#417: FILE: include/asm-i386/no_paravirt.h:75:
+#define write_cr2(x) \
+	__asm__ __volatile__("movl %0,%%cr2": :"r" (x));

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#417: FILE: include/asm-i386/no_paravirt.h:75:
+#define write_cr2(x) \
+	__asm__ __volatile__("movl %0,%%cr2": :"r" (x));

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#418: FILE: include/asm-i386/no_paravirt.h:76:
+	__asm__ __volatile__("movl %0,%%cr2": :"r" (x));
 	                                    ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#418: FILE: include/asm-i386/no_paravirt.h:76:
+	__asm__ __volatile__("movl %0,%%cr2": :"r" (x));
 	                                      ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#424: FILE: include/asm-i386/no_paravirt.h:82:
+		:"=r" (__dummy)); \
 		^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#427: FILE: include/asm-i386/no_paravirt.h:85:
+#define write_cr3(x) \
+	__asm__ __volatile__("movl %0,%%cr3": :"r" (x));

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#427: FILE: include/asm-i386/no_paravirt.h:85:
+#define write_cr3(x) \
+	__asm__ __volatile__("movl %0,%%cr3": :"r" (x));

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#428: FILE: include/asm-i386/no_paravirt.h:86:
+	__asm__ __volatile__("movl %0,%%cr3": :"r" (x));
 	                                    ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#428: FILE: include/asm-i386/no_paravirt.h:86:
+	__asm__ __volatile__("movl %0,%%cr3": :"r" (x));
 	                                      ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#434: FILE: include/asm-i386/no_paravirt.h:92:
+		:"=r" (__dummy)); \
 		^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#441: FILE: include/asm-i386/no_paravirt.h:99:
+	__asm__("1: movl %%cr4, %0		\n"   \

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#442: FILE: include/asm-i386/no_paravirt.h:100:
+		"2:				\n"   \

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#443: FILE: include/asm-i386/no_paravirt.h:101:
+		".section __ex_table,\"a\"	\n"   \

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#444: FILE: include/asm-i386/no_paravirt.h:102:
+		".long 1b,2b			\n"   \

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#445: FILE: include/asm-i386/no_paravirt.h:103:
+		".previous			\n"   \

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#446: FILE: include/asm-i386/no_paravirt.h:104:
+		: "=r" (__dummy): "0" (0));	      \
 		                ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#450: FILE: include/asm-i386/no_paravirt.h:108:
+#define write_cr4(x) \
+	__asm__ __volatile__("movl %0,%%cr4": :"r" (x));

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#450: FILE: include/asm-i386/no_paravirt.h:108:
+#define write_cr4(x) \
+	__asm__ __volatile__("movl %0,%%cr4": :"r" (x));

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#451: FILE: include/asm-i386/no_paravirt.h:109:
+	__asm__ __volatile__("movl %0,%%cr4": :"r" (x));
 	                                    ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#451: FILE: include/asm-i386/no_paravirt.h:109:
+	__asm__ __volatile__("movl %0,%%cr4": :"r" (x));
 	                                      ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#457: FILE: include/asm-i386/no_paravirt.h:115:
+	__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#468: FILE: include/asm-i386/no_paravirt.h:126:
+	__asm__ __volatile__(

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#471: FILE: include/asm-i386/no_paravirt.h:129:
+		:"g" (flags)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#472: FILE: include/asm-i386/no_paravirt.h:130:
+		:"memory", "cc"
 		^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#510: FILE: include/asm-i386/no_paravirt.h:168:
+	__asm__ __volatile__("hlt": : :"memory");
 	                          ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#510: FILE: include/asm-i386/no_paravirt.h:168:
+	__asm__ __volatile__("hlt": : :"memory");
 	                              ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#515: FILE: include/asm-i386/no_paravirt.h:173:
+	__asm__ __volatile__("wbinvd": : :"memory");
 	                             ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#515: FILE: include/asm-i386/no_paravirt.h:173:
+	__asm__ __volatile__("wbinvd": : :"memory");
 	                                 ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#527: FILE: include/asm-i386/no_paravirt.h:185:
+#define ENABLE_INTERRUPTS_SYSEXIT	sti; sysexit

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#528: FILE: include/asm-i386/no_paravirt.h:186:
+#define GET_CR0_INTO_EAX		mov %cr0, %eax
                         		    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#528: FILE: include/asm-i386/no_paravirt.h:186:
+#define GET_CR0_INTO_EAX		mov %cr0, %eax
                         		          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#528: FILE: include/asm-i386/no_paravirt.h:186:
+#define GET_CR0_INTO_EAX		mov %cr0, %eax

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#536: FILE: include/asm-i386/paravirt.h:1:
+#ifndef __ASM_PARAVIRT_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#539: FILE: include/asm-i386/paravirt.h:4:
+ * para-virtualization: those hooks are defined here. */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000050782.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 28 errors, 16 warnings, 4 checks, 464 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000050782.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
