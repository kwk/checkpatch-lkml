WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
diff -urN -X /usr/share/dontdiff linux-2.5.60.vanilla/include/asm-i386/mach-visws/cobalt.h linux-2.5.60/include/asm-i386/mach-visws/cobalt.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#50: FILE: include/asm-i386/mach-visws/cobalt.h:1:
+#ifndef __I386_SGI_COBALT_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#57: FILE: include/asm-i386/mach-visws/cobalt.h:8:
+ */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'wierd' may be misspelled - perhaps 'weird'?
#112: FILE: include/asm-i386/mach-visws/cobalt.h:63:
+#define	CO_APIC_PIIX4_USB	7		/* this one is wierd */
        	                 	 		               ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INLINE: plain inline is preferred over __inline
#146: FILE: include/asm-i386/mach-visws/cobalt.h:97:
+extern __inline void co_cpu_write(unsigned long reg, unsigned long v)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#148: FILE: include/asm-i386/mach-visws/cobalt.h:99:
+	*((volatile unsigned long *)(CO_CPU_VADDR+reg))=v;
 	                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#148: FILE: include/asm-i386/mach-visws/cobalt.h:99:
+	*((volatile unsigned long *)(CO_CPU_VADDR+reg))=v;
 	                                               ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#148: FILE: include/asm-i386/mach-visws/cobalt.h:99:
+	*((volatile unsigned long *)(CO_CPU_VADDR+reg))=v;

WARNING:INLINE: plain inline is preferred over __inline
#151: FILE: include/asm-i386/mach-visws/cobalt.h:102:
+extern __inline unsigned long co_cpu_read(unsigned long reg)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#153: FILE: include/asm-i386/mach-visws/cobalt.h:104:
+	return *((volatile unsigned long *)(CO_CPU_VADDR+reg));
 	                                                ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#153: FILE: include/asm-i386/mach-visws/cobalt.h:104:
+	return *((volatile unsigned long *)(CO_CPU_VADDR+reg));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: include/asm-i386/mach-visws/cobalt.h:105:
+}            $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: include/asm-i386/mach-visws/cobalt.h:106:
+             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: include/asm-i386/mach-visws/cobalt.h:106:
+             $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: include/asm-i386/mach-visws/cobalt.h:106:
+             $

WARNING:INLINE: plain inline is preferred over __inline
#156: FILE: include/asm-i386/mach-visws/cobalt.h:107:
+extern __inline void co_apic_write(unsigned long reg, unsigned long v)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#158: FILE: include/asm-i386/mach-visws/cobalt.h:109:
+	*((volatile unsigned long *)(CO_APIC_VADDR+reg))=v;
 	                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#158: FILE: include/asm-i386/mach-visws/cobalt.h:109:
+	*((volatile unsigned long *)(CO_APIC_VADDR+reg))=v;
 	                                                ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#158: FILE: include/asm-i386/mach-visws/cobalt.h:109:
+	*((volatile unsigned long *)(CO_APIC_VADDR+reg))=v;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: include/asm-i386/mach-visws/cobalt.h:110:
+}            $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: include/asm-i386/mach-visws/cobalt.h:111:
+             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: include/asm-i386/mach-visws/cobalt.h:111:
+             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: include/asm-i386/mach-visws/cobalt.h:111:
+             $

WARNING:INLINE: plain inline is preferred over __inline
#161: FILE: include/asm-i386/mach-visws/cobalt.h:112:
+extern __inline unsigned long co_apic_read(unsigned long reg)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#163: FILE: include/asm-i386/mach-visws/cobalt.h:114:
+	return *((volatile unsigned long *)(CO_APIC_VADDR+reg));
 	                                                 ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#163: FILE: include/asm-i386/mach-visws/cobalt.h:114:
+	return *((volatile unsigned long *)(CO_APIC_VADDR+reg));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#179: FILE: include/asm-i386/mach-visws/lithium.h:1:
+#ifndef __I386_SGI_LITHIUM_H

WARNING:INLINE: plain inline is preferred over __inline
#210: FILE: include/asm-i386/mach-visws/lithium.h:32:
+extern __inline void li_pcia_write16(unsigned long reg, unsigned short v)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#212: FILE: include/asm-i386/mach-visws/lithium.h:34:
+	*((volatile unsigned short *)(LI_PCIA_VADDR+reg))=v;
 	                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#212: FILE: include/asm-i386/mach-visws/lithium.h:34:
+	*((volatile unsigned short *)(LI_PCIA_VADDR+reg))=v;
 	                                                 ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#212: FILE: include/asm-i386/mach-visws/lithium.h:34:
+	*((volatile unsigned short *)(LI_PCIA_VADDR+reg))=v;

WARNING:INLINE: plain inline is preferred over __inline
#215: FILE: include/asm-i386/mach-visws/lithium.h:37:
+extern __inline unsigned short li_pcia_read16(unsigned long reg)

WARNING:TABSTOP: Statements should start on a tabstop
#217: FILE: include/asm-i386/mach-visws/lithium.h:39:
+	 return *((volatile unsigned short *)(LI_PCIA_VADDR+reg));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#217: FILE: include/asm-i386/mach-visws/lithium.h:39:
+	 return *((volatile unsigned short *)(LI_PCIA_VADDR+reg));
 	                                                   ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#217: FILE: include/asm-i386/mach-visws/lithium.h:39:
+	 return *((volatile unsigned short *)(LI_PCIA_VADDR+reg));

WARNING:INLINE: plain inline is preferred over __inline
#220: FILE: include/asm-i386/mach-visws/lithium.h:42:
+extern __inline void li_pcib_write16(unsigned long reg, unsigned short v)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#222: FILE: include/asm-i386/mach-visws/lithium.h:44:
+	*((volatile unsigned short *)(LI_PCIB_VADDR+reg))=v;
 	                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#222: FILE: include/asm-i386/mach-visws/lithium.h:44:
+	*((volatile unsigned short *)(LI_PCIB_VADDR+reg))=v;
 	                                                 ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#222: FILE: include/asm-i386/mach-visws/lithium.h:44:
+	*((volatile unsigned short *)(LI_PCIB_VADDR+reg))=v;

WARNING:INLINE: plain inline is preferred over __inline
#225: FILE: include/asm-i386/mach-visws/lithium.h:47:
+extern __inline unsigned short li_pcib_read16(unsigned long reg)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#227: FILE: include/asm-i386/mach-visws/lithium.h:49:
+	return *((volatile unsigned short *)(LI_PCIB_VADDR+reg));
 	                                                  ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#227: FILE: include/asm-i386/mach-visws/lithium.h:49:
+	return *((volatile unsigned short *)(LI_PCIB_VADDR+reg));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#236: FILE: include/asm-i386/mach-visws/piix4.h:1:
+#ifndef __I386_SGI_PIIX_H

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#250: FILE: include/asm-i386/mach-visws/piix4.h:15:
+#define	GPIREG0			(PMBASE+0x30)
        	       			       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#251: FILE: include/asm-i386/mach-visws/piix4.h:16:
+#define	GPIREG(x)		(GPIREG0+((x)/8))
        	         		        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#251: FILE: include/asm-i386/mach-visws/piix4.h:16:
+#define	GPIREG(x)		(GPIREG0+((x)/8))
        	         		             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#252: FILE: include/asm-i386/mach-visws/piix4.h:17:
+#define	GPIBIT(x)		(1 << ((x)%8))
        	         		          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#262: FILE: include/asm-i386/mach-visws/piix4.h:27:
+				GPIBIT(PIIX_GPI_BD_ID4) )

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#277: FILE: include/asm-i386/mach-visws/piix4.h:42:
+#define	SIO_GP_MSB		(SIO_GP_BASE>>8)
        	          		            ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#278: FILE: include/asm-i386/mach-visws/piix4.h:43:
+#define	SIO_GP_LSB		(SIO_GP_BASE&0xff)
        	          		            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#280: FILE: include/asm-i386/mach-visws/piix4.h:45:
+#define	SIO_GP_DATA1		(SIO_GP_BASE+0)
        	            		            ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#285: FILE: include/asm-i386/mach-visws/piix4.h:50:
+#define	SIO_PM_MSB		(SIO_PM_BASE>>8)
        	          		            ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#286: FILE: include/asm-i386/mach-visws/piix4.h:51:
+#define	SIO_PM_LSB		(SIO_PM_BASE&0xff)
        	          		            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#287: FILE: include/asm-i386/mach-visws/piix4.h:52:
+#define	SIO_PM_INDEX		(SIO_PM_BASE+0)
        	            		            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#288: FILE: include/asm-i386/mach-visws/piix4.h:53:
+#define	SIO_PM_DATA		(SIO_PM_BASE+1)
        	           		            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#294: FILE: include/asm-i386/mach-visws/piix4.h:59:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#324: FILE: include/asm-i386/mach-visws/piix4.h:89:
+#define PM_STS_RSM		(1<<15)	// Resume Status
                   		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#324: FILE: include/asm-i386/mach-visws/piix4.h:89:
+#define PM_STS_RSM		(1<<15)	// Resume Status

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#325: FILE: include/asm-i386/mach-visws/piix4.h:90:
+#define PM_STS_PWRBTNOR		(1<<11)	// Power Button Override
                        		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#325: FILE: include/asm-i386/mach-visws/piix4.h:90:
+#define PM_STS_PWRBTNOR		(1<<11)	// Power Button Override

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#326: FILE: include/asm-i386/mach-visws/piix4.h:91:
+#define PM_STS_RTC		(1<<10)	// RTC status
                   		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#326: FILE: include/asm-i386/mach-visws/piix4.h:91:
+#define PM_STS_RTC		(1<<10)	// RTC status

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#327: FILE: include/asm-i386/mach-visws/piix4.h:92:
+#define PM_STS_PWRBTN		(1<<8)	// Power Button Pressed?
                      		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#327: FILE: include/asm-i386/mach-visws/piix4.h:92:
+#define PM_STS_PWRBTN		(1<<8)	// Power Button Pressed?

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#328: FILE: include/asm-i386/mach-visws/piix4.h:93:
+#define PM_STS_GBL		(1<<5)	// Global Status
                   		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#328: FILE: include/asm-i386/mach-visws/piix4.h:93:
+#define PM_STS_GBL		(1<<5)	// Global Status

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#329: FILE: include/asm-i386/mach-visws/piix4.h:94:
+#define PM_STS_BM		(1<<4)	// Bus Master Status
                  		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#329: FILE: include/asm-i386/mach-visws/piix4.h:94:
+#define PM_STS_BM		(1<<4)	// Bus Master Status

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#330: FILE: include/asm-i386/mach-visws/piix4.h:95:
+#define PM_STS_TMROF		(1<<0)	// Timer Overflow Status.
                     		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#330: FILE: include/asm-i386/mach-visws/piix4.h:95:
+#define PM_STS_TMROF		(1<<0)	// Timer Overflow Status.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000393541.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 24 warnings, 34 checks, 285 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000393541.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
