ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_SMP_BALANCE' is wrong - use Kconfig variables or standard guards instead
#61: FILE: include/asm-i386/processor.h:491:
+#define ARCH_HAS_SMP_BALANCE

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#68: FILE: include/asm-i386/smp_balance.h:1:
+#ifndef _ASM_SMP_BALANCE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#91: FILE: include/asm-i386/smp_balance.h:24:
+	for (i = (this_cpu + 1) % NR_CPUS;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#93: FILE: include/asm-i386/smp_balance.h:26:
+	     i = (i + 1) % NR_CPUS) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: include/asm-i386/smp_balance.h:38:
+       if (unlikely(smp_num_siblings > 1 && idle && !idle_cpu(cpu_sibling_map[this_cpu]))) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#105: FILE: include/asm-i386/smp_balance.h:38:
+       if (unlikely(smp_num_siblings > 1 && idle && !idle_cpu(cpu_sibling_map[this_cpu]))) {
+               int found;

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: include/asm-i386/smp_balance.h:39:
+               int found;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: include/asm-i386/smp_balance.h:39:
+               int found;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: include/asm-i386/smp_balance.h:40:
+               struct runqueue *rq_target;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: include/asm-i386/smp_balance.h:40:
+               struct runqueue *rq_target;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: include/asm-i386/smp_balance.h:42:
+               if ((found = find_idle_package(this_cpu)) >= 0 ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: include/asm-i386/smp_balance.h:42:
+               if ((found = find_idle_package(this_cpu)) >= 0 ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#109: FILE: include/asm-i386/smp_balance.h:42:
+               if ((found = find_idle_package(this_cpu)) >= 0 ) {
+                       rq_target = cpu_rq(found);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#109: FILE: include/asm-i386/smp_balance.h:42:
+               if ((found = find_idle_package(this_cpu)) >= 0 ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#109: FILE: include/asm-i386/smp_balance.h:42:
+               if ((found = find_idle_package(this_cpu)) >= 0 ) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: include/asm-i386/smp_balance.h:43:
+                       rq_target = cpu_rq(found);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: include/asm-i386/smp_balance.h:43:
+                       rq_target = cpu_rq(found);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: include/asm-i386/smp_balance.h:44:
+                       resched_task(rq_target->idle);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: include/asm-i386/smp_balance.h:44:
+                       resched_task(rq_target->idle);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: include/asm-i386/smp_balance.h:45:
+                       return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: include/asm-i386/smp_balance.h:45:
+                       return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: include/asm-i386/smp_balance.h:46:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: include/asm-i386/smp_balance.h:46:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: include/asm-i386/smp_balance.h:47:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: include/asm-i386/smp_balance.h:48:
+       return 0;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000437183.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 15 warnings, 0 checks, 68 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000437183.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
