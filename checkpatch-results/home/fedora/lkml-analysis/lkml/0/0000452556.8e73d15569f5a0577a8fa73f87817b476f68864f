WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
   permanently present in device->staus field, so there is not need to pass it

WARNING:TYPO_SPELLING: 'staus' may be misspelled - perhaps 'status'?
#32: 
   permanently present in device->staus field, so there is not need to pass it
                                  ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#64: FILE: arch/i386/pci/fixup.c:102:
+static void __devinit pci_fixup_ide_exbar(struct pci_dev *d)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#72: FILE: arch/i386/pci/fixup.c:110:
+	d->resource[5].start = d->resource[5].end = d->resource[5].flags = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#75: FILE: arch/i386/pci/fixup.c:113:
 static void __devinit  pci_fixup_latency(struct pci_dev *d)

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#82: FILE: arch/i386/pci/fixup.c:188:
+ 	{ PCI_FIXUP_HEADER,	PCI_VENDOR_ID_INTEL,	PCI_DEVICE_ID_INTEL_82801CA_10,	pci_fixup_ide_exbar },

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: arch/i386/pci/fixup.c:188:
+ ^I{ PCI_FIXUP_HEADER,^IPCI_VENDOR_ID_INTEL,^IPCI_DEVICE_ID_INTEL_82801CA_10,^Ipci_fixup_ide_exbar },$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#82: FILE: arch/i386/pci/fixup.c:188:
+ ^I{ PCI_FIXUP_HEADER,^IPCI_VENDOR_ID_INTEL,^IPCI_DEVICE_ID_INTEL_82801CA_10,^Ipci_fixup_ide_exbar },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: arch/i386/pci/fixup.c:188:
+ ^I{ PCI_FIXUP_HEADER,^IPCI_VENDOR_ID_INTEL,^IPCI_DEVICE_ID_INTEL_82801CA_10,^Ipci_fixup_ide_exbar },$

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#83: FILE: arch/i386/pci/fixup.c:189:
+ 	{ PCI_FIXUP_HEADER,	PCI_VENDOR_ID_INTEL,	PCI_DEVICE_ID_INTEL_82801CA_11,	pci_fixup_ide_exbar },

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: arch/i386/pci/fixup.c:189:
+ ^I{ PCI_FIXUP_HEADER,^IPCI_VENDOR_ID_INTEL,^IPCI_DEVICE_ID_INTEL_82801CA_11,^Ipci_fixup_ide_exbar },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#83: FILE: arch/i386/pci/fixup.c:189:
+ ^I{ PCI_FIXUP_HEADER,^IPCI_VENDOR_ID_INTEL,^IPCI_DEVICE_ID_INTEL_82801CA_11,^Ipci_fixup_ide_exbar },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: arch/i386/pci/fixup.c:189:
+ ^I{ PCI_FIXUP_HEADER,^IPCI_VENDOR_ID_INTEL,^IPCI_DEVICE_ID_INTEL_82801CA_11,^Ipci_fixup_ide_exbar },$

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#84: FILE: arch/i386/pci/fixup.c:190:
+ 	{ PCI_FIXUP_HEADER,	PCI_VENDOR_ID_INTEL,	PCI_DEVICE_ID_INTEL_82801DB_9,	pci_fixup_ide_exbar },

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: arch/i386/pci/fixup.c:190:
+ ^I{ PCI_FIXUP_HEADER,^IPCI_VENDOR_ID_INTEL,^IPCI_DEVICE_ID_INTEL_82801DB_9,^Ipci_fixup_ide_exbar },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#84: FILE: arch/i386/pci/fixup.c:190:
+ ^I{ PCI_FIXUP_HEADER,^IPCI_VENDOR_ID_INTEL,^IPCI_DEVICE_ID_INTEL_82801DB_9,^Ipci_fixup_ide_exbar },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: arch/i386/pci/fixup.c:190:
+ ^I{ PCI_FIXUP_HEADER,^IPCI_VENDOR_ID_INTEL,^IPCI_DEVICE_ID_INTEL_82801DB_9,^Ipci_fixup_ide_exbar },$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: drivers/ide/Config.help:417:
+  expect any help. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#144: FILE: drivers/ide/device.c:175:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#154: FILE: drivers/ide/hpt34x.c:256:
+	if (!(count = udma_new_table(drive, rq)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#247: FILE: drivers/ide/ide.c:445:
+	{ ICRC_ERR|ABRT_ERR,	ABRT_ERR,		"drive status error"	},
 	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#248: FILE: drivers/ide/ide.c:446:
+	{ ICRC_ERR|ABRT_ERR,	ICRC_ERR,		"bad sectorr"		},
 	          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#249: FILE: drivers/ide/ide.c:447:
+	{ ICRC_ERR|ABRT_ERR,	ICRC_ERR|ABRT_ERR,	"invalid checksum"	},
 	          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#249: FILE: drivers/ide/ide.c:447:
+	{ ICRC_ERR|ABRT_ERR,	ICRC_ERR|ABRT_ERR,	"invalid checksum"	},
 	                    	        ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#262: FILE: drivers/ide/ide.c:458:
+	printk(" [ ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#269: FILE: drivers/ide/ide.c:464:
+	printk("] ");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#273: FILE: drivers/ide/ide.c:467:
+# define dump_bits(msgs,nr,bits) do { } while (0)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#273: FILE: drivers/ide/ide.c:467:
+# define dump_bits(msgs,nr,bits) do { } while (0)
                           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#280: FILE: drivers/ide/ide.c:473:
+u8 ata_dump(struct ata_device *drive, struct request * rq, const char *msg)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#290: FILE: drivers/ide/ide.c:481:
+	printk("%s: %s: status=0x%02x", drive->name, msg, drive->status);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#295: FILE: drivers/ide/ide.c:485:
+	if ((drive->status & (BUSY_STAT|ERR_STAT)) == ERR_STAT) {
 	                               ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#408: FILE: drivers/ide/pcidma.c:323:
+	ch->sg_nents = i = build_sglist(drive, rq);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#419: FILE: drivers/ide/piix.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#450: FILE: drivers/ide/piix.c:88:
+	{ PCI_DEVICE_ID_INTEL_82801DB_9,	PIIX_UDMA_100 | PIIX_PINGPONG },			/* Intel 82801DB ICH4 */

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#451: FILE: drivers/ide/piix.c:89:
+	{ PCI_DEVICE_ID_INTEL_82801CA_11,	PIIX_UDMA_100 | PIIX_PINGPONG },			/* Intel 82801CA ICH3/ICH3-S */

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#452: FILE: drivers/ide/piix.c:90:
+	{ PCI_DEVICE_ID_INTEL_82801CA_10,	PIIX_UDMA_100 | PIIX_PINGPONG },			/* Intel 82801CAM ICH3-M */

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#453: FILE: drivers/ide/piix.c:91:
+	{ PCI_DEVICE_ID_INTEL_82801E_9,		PIIX_UDMA_100 | PIIX_PINGPONG },			/* Intel 82801E C-ICH */

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#454: FILE: drivers/ide/piix.c:92:
+	{ PCI_DEVICE_ID_INTEL_82801BA_9,	PIIX_UDMA_100 | PIIX_PINGPONG },			/* Intel 82801BA ICH2 */

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#455: FILE: drivers/ide/piix.c:93:
+	{ PCI_DEVICE_ID_INTEL_82801BA_8,	PIIX_UDMA_100 | PIIX_PINGPONG },			/* Intel 82801BAM ICH2-M */

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#456: FILE: drivers/ide/piix.c:94:
+	{ PCI_DEVICE_ID_INTEL_82801AB_1,	PIIX_UDMA_33  | PIIX_PINGPONG},				/* Intel 82801AB ICH0 */

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#457: FILE: drivers/ide/piix.c:95:
+	{ PCI_DEVICE_ID_INTEL_82801AA_1,	PIIX_UDMA_66  | PIIX_PINGPONG },			/* Intel 82801AA ICH */

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#458: FILE: drivers/ide/piix.c:96:
+	{ PCI_DEVICE_ID_INTEL_82372FB_1,	PIIX_UDMA_66 },						/* Intel 82372FB PIIX5 */

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#459: FILE: drivers/ide/piix.c:97:
+	{ PCI_DEVICE_ID_INTEL_82443MX_1,	PIIX_UDMA_33 },						/* Intel 82443MX MPIIX4 */

WARNING:LONG_LINE: line length of 139 exceeds 100 columns
#460: FILE: drivers/ide/piix.c:98:
+	{ PCI_DEVICE_ID_INTEL_82371AB,		PIIX_UDMA_33 },						/* Intel 82371AB/EB PIIX4/PIIX4E */

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#461: FILE: drivers/ide/piix.c:99:
+	{ PCI_DEVICE_ID_INTEL_82371SB_1,	PIIX_UDMA_NONE },					/* Intel 82371SB PIIX3 */

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#462: FILE: drivers/ide/piix.c:100:
+	{ PCI_DEVICE_ID_INTEL_82371FB_1,	PIIX_UDMA_NONE | PIIX_NO_SITRE | PIIX_CHECK_REV },	/* Intel 82371FB PIIX */

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#463: FILE: drivers/ide/piix.c:101:
+	{ PCI_DEVICE_ID_EFAR_SLC90E66_1,	PIIX_UDMA_66 | PIIX_VICTORY },				/* Efar Victory66 */

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#469: FILE: drivers/ide/piix.c:123:
 	switch (dn & 1) {
[...]
+		case 1:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#535: FILE: drivers/ide/piix.c:304:
+			printk(KERN_INFO "PIIX: Found buggy old PIIX rev %#x, disabling DMA\n", t);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#560: FILE: drivers/ide/piix.c:309:
+	if ((orion = pci_find_device(PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82454GX, NULL))) {

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#563: FILE: drivers/ide/piix.c:312:
+			printk(KERN_INFO "PIIX: Found buggy 82454GX Orion bridge rev %#x, disabling DMA\n", t);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#563: FILE: drivers/ide/piix.c:312:
+			printk(KERN_INFO "PIIX: Found buggy 82454GX Orion bridge rev %#x, disabling DMA\n", t);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#636: FILE: drivers/ide/piix.c:399:
+	if (((piix_enabled >> ch->unit) & 1)
[...]
+			ata_init_dma(ch, dmabase);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#683: FILE: drivers/ide/tcq.c:330:
+		ata_dump(drive, rq, __FUNCTION__);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#713: FILE: drivers/ide/trm290.c:220:
+	if (!(count = udma_new_table(drive, rq))) {

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#724: FILE: drivers/scsi/ide-scsi.c:232:
+static inline idescsi_scsi_t *idescsi_private(struct Scsi_Host *host)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#726: FILE: drivers/scsi/ide-scsi.c:234:
+	return (idescsi_scsi_t*) &host[1];

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#726: FILE: drivers/scsi/ide-scsi.c:234:
+	return (idescsi_scsi_t*) &host[1];

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#830: FILE: include/linux/ide.h:613:
+extern u8 ata_dump(struct ata_device *, struct request *, const char *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#830: FILE: include/linux/ide.h:613:
+extern u8 ata_dump(struct ata_device *, struct request *, const char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#830: FILE: include/linux/ide.h:613:
+extern u8 ata_dump(struct ata_device *, struct request *, const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#830: FILE: include/linux/ide.h:613:
+extern u8 ata_dump(struct ata_device *, struct request *, const char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#839: FILE: include/linux/ide.h:798:
+extern int udma_new_table(struct ata_device *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#839: FILE: include/linux/ide.h:798:
+extern int udma_new_table(struct ata_device *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#839: FILE: include/linux/ide.h:798:
+extern int udma_new_table(struct ata_device *, struct request *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#847: FILE: include/linux/ide.h:833:
+extern void ata_in_regfile(struct ata_device *, struct hd_drive_task_hdr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#847: FILE: include/linux/ide.h:833:
+extern void ata_in_regfile(struct ata_device *, struct hd_drive_task_hdr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hd_drive_task_hdr *' should also have an identifier name
#847: FILE: include/linux/ide.h:833:
+extern void ata_in_regfile(struct ata_device *, struct hd_drive_task_hdr *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452556.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 43 warnings, 13 checks, 695 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452556.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
