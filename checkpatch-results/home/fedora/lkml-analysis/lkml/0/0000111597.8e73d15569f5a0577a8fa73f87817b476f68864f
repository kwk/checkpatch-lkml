CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#66: FILE: arch/x86_64/kernel/kprobes.c:275:
+		extern struct task_struct *__switch_to(

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#66: FILE: arch/x86_64/kernel/kprobes.c:275:
+		extern struct task_struct *__switch_to(

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: No space is necessary after a cast
#70: FILE: arch/x86_64/kernel/kprobes.c:278:
+		if (unlikely(rp->kp.addr == (kprobe_opcode_t*) __switch_to)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#70: FILE: arch/x86_64/kernel/kprobes.c:278:
+		if (unlikely(rp->kp.addr == (kprobe_opcode_t*) __switch_to)) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#70: FILE: arch/x86_64/kernel/kprobes.c:278:
+		if (unlikely(rp->kp.addr == (kprobe_opcode_t*) __switch_to)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#78: FILE: arch/x86_64/kernel/kprobes.c:286:
+			ri->task = (struct task_struct *) regs->rsi;

CHECK:BRACES: Unbalanced braces around else statement
#79: FILE: arch/x86_64/kernel/kprobes.c:287:
+		} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000111597.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 1 warnings, 5 checks, 21 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000111597.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
