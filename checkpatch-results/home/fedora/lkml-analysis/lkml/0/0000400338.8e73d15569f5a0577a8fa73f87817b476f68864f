WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
diff -urpN --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal .5517-linux-2.5-bk/include/linux/module.h .5517-linux-2.5-bk.updated/include/linux/module.h

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "module_text_address"
#135: FILE: kernel/extable.c:41:
+	return module_text_address(addr) != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#154: FILE: kernel/module.c:78:
+extern const struct kernel_symbol __start___ksymtab[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#155: FILE: kernel/module.c:79:
+extern const struct kernel_symbol __stop___ksymtab[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#156: FILE: kernel/module.c:80:
+extern const struct kernel_symbol __start___gpl_ksymtab[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#157: FILE: kernel/module.c:81:
+extern const struct kernel_symbol __stop___gpl_ksymtab[];

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#172: FILE: kernel/module.c:92:
+	for (i = 0; __start___ksymtab+i < __stop___ksymtab; i++)
 	                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#184: FILE: kernel/module.c:97:
+		for (i = 0; __start___gpl_ksymtab+i<__stop___gpl_ksymtab; i++)
 		                                 ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#184: FILE: kernel/module.c:97:
+		for (i = 0; __start___gpl_ksymtab+i<__stop___gpl_ksymtab; i++)
 		                                   ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#185: FILE: kernel/module.c:98:
+			if (strcmp(__start___gpl_ksymtab[i].name, name) == 0)
+			return __start___gpl_ksymtab[i].value;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#229: FILE: kernel/module.c:552:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '/' (ctx:VxW)
#325: FILE: kernel/module.c:1188:
+	mod->num_ksyms = (sechdrs[exportindex].sh_size/ sizeof(*mod->syms));
 	                                              ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000400338.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 7 warnings, 4 checks, 321 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000400338.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
