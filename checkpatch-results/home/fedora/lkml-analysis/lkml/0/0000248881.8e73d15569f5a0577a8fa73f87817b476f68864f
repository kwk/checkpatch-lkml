WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
> > I'm testing a hotplug driver. In my test, I will hot add/remove an e1000

WARNING:TYPO_SPELLING: 'maxium' may be misspelled - perhaps 'maximum'?
#38: 
> >  e1000_adapter->bd_number has maxium limitation of 32, and it increased
                                  ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#61: FILE: drivers/net/e1000/e1000_main.c:183:
+extern void e1000_init_boards(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#62: FILE: drivers/net/e1000/e1000_main.c:184:
+extern int e1000_alloc_bd_number(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#63: FILE: drivers/net/e1000/e1000_main.c:185:
+extern void e1000_free_bd_number(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#63: FILE: drivers/net/e1000/e1000_main.c:185:
+extern void e1000_free_bd_number(int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#123: FILE: drivers/net/e1000/e1000_param.c:58:
\

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#124: FILE: drivers/net/e1000/e1000_param.c:59:
+static int __devinitdata X[E1000_MAX_NIC + 1] = E1000_PARAM_INIT; \

WARNING:MISPLACED_INIT: __devinitdata should be placed after X[E1000_MAX_NIC + 1]
#124: FILE: drivers/net/e1000/e1000_param.c:59:
+static int __devinitdata X[E1000_MAX_NIC + 1] = E1000_PARAM_INIT; \

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#142: FILE: drivers/net/e1000/e1000_param.c:716:
+	if ((ret = net_boards_alloc(&board)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bd_number < 0'
#149: FILE: drivers/net/e1000/e1000_param.c:723:
+	if ((bd_number < 0) || (bd_number > E1000_MAX_NIC))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bd_number > E1000_MAX_NIC'
#149: FILE: drivers/net/e1000/e1000_param.c:723:
+	if ((bd_number < 0) || (bd_number > E1000_MAX_NIC))

CHECK:CAMELCASE: Avoid CamelCase: <TxDescriptors>
#151: FILE: drivers/net/e1000/e1000_param.c:725:
+	TxDescriptors[bd_number] = OPTION_UNSET;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <RxDescriptors>
#152: FILE: drivers/net/e1000/e1000_param.c:726:
+	RxDescriptors[bd_number] = OPTION_UNSET;

CHECK:CAMELCASE: Avoid CamelCase: <Speed>
#153: FILE: drivers/net/e1000/e1000_param.c:727:
+	Speed[bd_number] = OPTION_UNSET;

CHECK:CAMELCASE: Avoid CamelCase: <Duplex>
#154: FILE: drivers/net/e1000/e1000_param.c:728:
+	Duplex[bd_number] = OPTION_UNSET;

CHECK:CAMELCASE: Avoid CamelCase: <AutoNeg>
#155: FILE: drivers/net/e1000/e1000_param.c:729:
+	AutoNeg[bd_number] = OPTION_UNSET;

CHECK:CAMELCASE: Avoid CamelCase: <FlowControl>
#156: FILE: drivers/net/e1000/e1000_param.c:730:
+	FlowControl[bd_number] = OPTION_UNSET;

CHECK:CAMELCASE: Avoid CamelCase: <XsumRX>
#157: FILE: drivers/net/e1000/e1000_param.c:731:
+	XsumRX[bd_number] = OPTION_UNSET;

CHECK:CAMELCASE: Avoid CamelCase: <TxIntDelay>
#158: FILE: drivers/net/e1000/e1000_param.c:732:
+	TxIntDelay[bd_number] = OPTION_UNSET;

CHECK:CAMELCASE: Avoid CamelCase: <TxAbsIntDelay>
#159: FILE: drivers/net/e1000/e1000_param.c:733:
+	TxAbsIntDelay[bd_number] = OPTION_UNSET;

CHECK:CAMELCASE: Avoid CamelCase: <RxIntDelay>
#160: FILE: drivers/net/e1000/e1000_param.c:734:
+	RxIntDelay[bd_number] = OPTION_UNSET;

CHECK:CAMELCASE: Avoid CamelCase: <RxAbsIntDelay>
#161: FILE: drivers/net/e1000/e1000_param.c:735:
+	RxAbsIntDelay[bd_number] = OPTION_UNSET;

CHECK:CAMELCASE: Avoid CamelCase: <InterruptThrottleRate>
#162: FILE: drivers/net/e1000/e1000_param.c:736:
+	InterruptThrottleRate[bd_number] = OPTION_UNSET;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#179: FILE: drivers/net/e1000/e1000_main.c:183:
+extern void e1000_init_boards(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#180: FILE: drivers/net/e1000/e1000_main.c:184:
+extern int e1000_alloc_bd_number(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#181: FILE: drivers/net/e1000/e1000_main.c:185:
+extern void e1000_free_bd_number(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#181: FILE: drivers/net/e1000/e1000_main.c:185:
+extern void e1000_free_bd_number(int);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#241: FILE: drivers/net/e1000/e1000_param.c:59:
+static int __devinitdata X[E1000_MAX_NIC + 1] = E1000_PARAM_INIT; \

WARNING:MISPLACED_INIT: __devinitdata should be placed after X[E1000_MAX_NIC + 1]
#241: FILE: drivers/net/e1000/e1000_param.c:59:
+static int __devinitdata X[E1000_MAX_NIC + 1] = E1000_PARAM_INIT; \

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#259: FILE: drivers/net/e1000/e1000_param.c:716:
+	if ((ret = net_boards_alloc(&board)) < 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bd_number < 0'
#266: FILE: drivers/net/e1000/e1000_param.c:723:
+	if ((bd_number < 0) || (bd_number > E1000_MAX_NIC))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bd_number > E1000_MAX_NIC'
#266: FILE: drivers/net/e1000/e1000_param.c:723:
+	if ((bd_number < 0) || (bd_number > E1000_MAX_NIC))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000248881.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 14 warnings, 16 checks, 193 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000248881.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
