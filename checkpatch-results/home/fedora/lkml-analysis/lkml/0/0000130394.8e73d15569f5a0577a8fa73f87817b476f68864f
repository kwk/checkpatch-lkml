CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: fs/select.c:376:
+asmlinkage long sys_select(int n, fd_set __user *inp, fd_set __user *outp,
+			fd_set __user *exp, struct timeval __user *tvp)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#171: FILE: fs/select.c:378:
+	int64_t timeout = -1;

CHECK:BRACES: Unbalanced braces around else statement
#185: FILE: fs/select.c:392:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#186: FILE: fs/select.c:393:
+			timeout = ROUND_UP(tv.tv_sec, 1000000/HZ);
 			                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#196: FILE: fs/select.c:403:
+		tv.tv_usec = jiffies_to_usecs(do_div((*(uint64_t*)&timeout), HZ));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#199: FILE: fs/select.c:406:
+		sticky:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: fs/select.c:425:
+asmlinkage long sys_pselect7(int n, fd_set __user *inp, fd_set __user *outp,
+		fd_set __user *exp, struct timespec __user *tsp,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#221: FILE: fs/select.c:428:
+	int64_t timeout = MAX_SCHEDULE_TIMEOUT;

CHECK:BRACES: Unbalanced braces around else statement
#236: FILE: fs/select.c:443:
+		else {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#237: FILE: fs/select.c:444:
+			timeout = ROUND_UP(ts.tv_sec, 1000000000/HZ);
 			                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#249: FILE: fs/select.c:456:
+		sigdelsetmask(&ksigmask, sigmask(SIGKILL)|sigmask(SIGSTOP));
 		                                         ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#258: FILE: fs/select.c:465:
+		ts.tv_nsec = jiffies_to_usecs(do_div((*(uint64_t*)&timeout), HZ)) * 1000;

WARNING:INDENTED_LABEL: labels should not be indented
#261: FILE: fs/select.c:468:
+		sticky:

CHECK:BRACES: braces {} should be used on all arms of this statement
#275: FILE: fs/select.c:482:
+	if (ret == -ERESTARTNOHAND) {
[...]
+	} else if (sigmask)
[...]

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#277: FILE: fs/select.c:484:
+		/* Don't restore the signal mask yet. Let do_signal() deliver the signal
+		   on the way back to userspace, before the signal mask is restored. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#277: FILE: fs/select.c:484:
+		   on the way back to userspace, before the signal mask is restored. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: fs/select.c:502:
+asmlinkage long sys_pselect6(int n, fd_set __user *inp, fd_set __user *outp,
+	fd_set __user *exp, struct timespec __user *tsp, void __user *sig)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#301: FILE: fs/select.c:508:
+		if (!access_ok(VERIFY_READ, sig, sizeof(void *)+sizeof(size_t))
 		                                               ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#302: FILE: fs/select.c:509:
+		if (!access_ok(VERIFY_READ, sig, sizeof(void *)+sizeof(size_t))
+		    || __get_user(up, (sigset_t * __user *)sig)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#303: FILE: fs/select.c:510:
+		    || __get_user(up, (sigset_t * __user *)sig)
+		    || __get_user(sigsetsize,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#304: FILE: fs/select.c:511:
+				(size_t * __user)(sig+sizeof(void *))))
 				                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#403: FILE: fs/select.c:684:
+asmlinkage long sys_poll(struct pollfd __user *ufds, unsigned int nfds,
+			long timeout_msecs)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#405: FILE: fs/select.c:686:
+	int64_t timeout_jiffies = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: fs/select.c:703:
+asmlinkage long sys_ppoll(struct pollfd __user *ufds, unsigned int nfds,
+	struct timespec __user *tsp, const sigset_t __user *sigmask,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#427: FILE: fs/select.c:708:
+	int64_t timeout = -1;

CHECK:BRACES: Unbalanced braces around else statement
#437: FILE: fs/select.c:718:
+		else {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#438: FILE: fs/select.c:719:
+			timeout = ROUND_UP(ts.tv_sec, 1000000000/HZ);
 			                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#450: FILE: fs/select.c:731:
+		sigdelsetmask(&ksigmask, sigmask(SIGKILL)|sigmask(SIGSTOP));
 		                                         ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#457: FILE: fs/select.c:738:
+	if (ret == -EINTR) {
[...]
+	} else if (sigmask)
[...]

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#459: FILE: fs/select.c:740:
+		/* Don't restore the signal mask yet. Let do_signal() deliver the signal
+		   on the way back to userspace, before the signal mask is restored. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#459: FILE: fs/select.c:740:
+		   on the way back to userspace, before the signal mask is restored. */

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#472: FILE: fs/select.c:753:
+		ts.tv_nsec = jiffies_to_usecs(do_div((*(uint64_t*)&timeout), HZ)) * 1000;

WARNING:INDENTED_LABEL: labels should not be indented
#475: FILE: fs/select.c:756:
+		sticky:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#511: FILE: fs/compat.c:1613:
+int compat_core_sys_select(int n, compat_ulong_t __user *inp,
+	compat_ulong_t __user *outp, compat_ulong_t __user *exp, int64_t *timeout)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#568: FILE: fs/compat.c:1678:
+asmlinkage long compat_sys_select(int n, compat_ulong_t __user *inp,
+	compat_ulong_t __user *outp, compat_ulong_t __user *exp,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#571: FILE: fs/compat.c:1681:
+	int64_t timeout = -1;

CHECK:BRACES: Unbalanced braces around else statement
#585: FILE: fs/compat.c:1695:
+		else {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#586: FILE: fs/compat.c:1696:
+			timeout = ROUND_UP(tv.tv_sec, 1000000/HZ);
 			                                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#596: FILE: fs/compat.c:1706:
+		tv.tv_usec = jiffies_to_usecs(do_div((*(uint64_t*)&timeout), HZ));

WARNING:INDENTED_LABEL: labels should not be indented
#599: FILE: fs/compat.c:1709:
+		sticky:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#618: FILE: fs/compat.c:1728:
+asmlinkage long compat_sys_pselect7(int n, compat_ulong_t __user *inp,
+	compat_ulong_t __user *outp, compat_ulong_t __user *exp,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#643: FILE: fs/compat.c:1753:
+		sigdelsetmask(&ksigmask, sigmask(SIGKILL)|sigmask(SIGSTOP));
 		                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#650: FILE: fs/compat.c:1760:
+				timeout = ROUND_UP(ts.tv_nsec, 1000000000/HZ);
 				                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#666: FILE: fs/compat.c:1776:
+		ts.tv_nsec += (timeout % HZ) * (1000000000/HZ);
 		                                          ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#674: FILE: fs/compat.c:1784:
+	if (ret == -ERESTARTNOHAND) {
[...]
+	} else if (sigmask)
[...]

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#676: FILE: fs/compat.c:1786:
+		/* Don't restore the signal mask yet. Let do_signal() deliver the signal
+		   on the way back to userspace, before the signal mask is restored. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#676: FILE: fs/compat.c:1786:
+		   on the way back to userspace, before the signal mask is restored. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#688: FILE: fs/compat.c:1798:
+asmlinkage long compat_sys_pselect6(int n, compat_ulong_t __user *inp,
+	compat_ulong_t __user *outp, compat_ulong_t __user *exp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#696: FILE: fs/compat.c:1806:
+		if (!access_ok(VERIFY_READ, sig,
+				sizeof(compat_uptr_t)+sizeof(compat_size_t)) ||

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#696: FILE: fs/compat.c:1806:
+				sizeof(compat_uptr_t)+sizeof(compat_size_t)) ||
 				                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#697: FILE: fs/compat.c:1807:
+^I^I    ^I__get_user(up, (compat_uptr_t __user *)sig) ||$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#697: FILE: fs/compat.c:1807:
+^I^I    ^I__get_user(up, (compat_uptr_t __user *)sig) ||$

ERROR:CODE_INDENT: code indent should use tabs where possible
#698: FILE: fs/compat.c:1808:
+^I^I    ^I__get_user(sigsetsize,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#698: FILE: fs/compat.c:1808:
+^I^I    ^I__get_user(sigsetsize,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#699: FILE: fs/compat.c:1809:
+		    	__get_user(sigsetsize,
+				(compat_size_t __user *)(sig+sizeof(up))))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#699: FILE: fs/compat.c:1809:
+				(compat_size_t __user *)(sig+sizeof(up))))
 				                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#707: FILE: fs/compat.c:1817:
+asmlinkage long compat_sys_ppoll(struct pollfd __user *ufds,
+	unsigned int nfds, struct compat_timespec __user *tsp,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#713: FILE: fs/compat.c:1823:
+	int64_t timeout = -1;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#721: FILE: fs/compat.c:1831:
+		/* We assume that ts.tv_sec is always lower than
+		   the number of seconds that can be expressed in

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#722: FILE: fs/compat.c:1832:
+		   an int64_t. Otherwise the compiler bitches at us */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#723: FILE: fs/compat.c:1833:
+		timeout = ROUND_UP(ts.tv_sec, 1000000000/HZ);
 		                                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#728: FILE: fs/compat.c:1838:
+		if (sigsetsize |= sizeof(compat_sigset_t))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#734: FILE: fs/compat.c:1844:
+		sigdelsetmask(&ksigmask, sigmask(SIGKILL)|sigmask(SIGSTOP));
 		                                         ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#741: FILE: fs/compat.c:1851:
+	if (ret == -EINTR) {
[...]
+	} else if (sigmask)
[...]

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#743: FILE: fs/compat.c:1853:
+		/* Don't restore the signal mask yet. Let do_signal() deliver the signal
+		   on the way back to userspace, before the signal mask is restored. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#743: FILE: fs/compat.c:1853:
+		   on the way back to userspace, before the signal mask is restored. */

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#756: FILE: fs/compat.c:1866:
+		ts.tv_nsec = jiffies_to_usecs(do_div((*(uint64_t*)&timeout), HZ)) * 1000;

WARNING:INDENTED_LABEL: labels should not be indented
#759: FILE: fs/compat.c:1869:
+		sticky:

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#789: FILE: include/linux/poll.h:95:
+#define MAX_INT64_SECONDS (((int64_t)(~((uint64_t)0)>>1)/HZ)-1)
                                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#789: FILE: include/linux/poll.h:95:
+#define MAX_INT64_SECONDS (((int64_t)(~((uint64_t)0)>>1)/HZ)-1)
                                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#789: FILE: include/linux/poll.h:95:
+#define MAX_INT64_SECONDS (((int64_t)(~((uint64_t)0)>>1)/HZ)-1)
                                                             ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#791: FILE: include/linux/poll.h:97:
+extern int do_select(int n, fd_set_bits *fds, int64_t *timeout);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#792: FILE: include/linux/poll.h:98:
+extern int do_sys_poll(struct pollfd __user * ufds, unsigned int nfds,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#792: FILE: include/linux/poll.h:98:
+extern int do_sys_poll(struct pollfd __user * ufds, unsigned int nfds,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000130394.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 17 warnings, 48 checks, 743 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000130394.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
