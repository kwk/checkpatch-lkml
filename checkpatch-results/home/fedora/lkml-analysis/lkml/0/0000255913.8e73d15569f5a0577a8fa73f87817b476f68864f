WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#109: 
Content-Disposition: attachment; filename=interrupt-driven_hvc_console_draft3.patch

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#132: FILE: include/asm-ppc64/hvconsole.h:32:
+extern int hvc_get_chars(uint32_t vtermno, char *buf, int count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#132: FILE: include/asm-ppc64/hvconsole.h:32:
+extern int hvc_get_chars(uint32_t vtermno, char *buf, int count);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#133: FILE: include/asm-ppc64/hvconsole.h:33:
+extern int hvc_put_chars(uint32_t vtermno, const char *buf, int count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#133: FILE: include/asm-ppc64/hvconsole.h:33:
+extern int hvc_put_chars(uint32_t vtermno, const char *buf, int count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#136: FILE: include/asm-ppc64/hvconsole.h:36:
+extern int hvc_find_vtys(void);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#139: FILE: include/asm-ppc64/hvconsole.h:39:
+extern int hvc_instantiate(uint32_t vtermno, int index);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#139: FILE: include/asm-ppc64/hvconsole.h:39:
+extern int hvc_instantiate(uint32_t vtermno, int index);

WARNING:TYPO_SPELLING: 'adatper' may be misspelled - perhaps 'adapter'?
#164: FILE: arch/ppc64/kernel/hvconsole.c:33:
+ * hvc_get_chars - retrieve characters from firmware for denoted vterm adatper
                                                                        ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#171: FILE: arch/ppc64/kernel/hvconsole.c:40:
+int hvc_get_chars(uint32_t vtermno, char *buf, int count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: arch/ppc64/kernel/hvconsole.c:45:
+	if (plpar_hcall(H_GET_TERM_CHAR, vtermno, 0, 0, 0, &got,
 		(unsigned long *)buf, (unsigned long *)buf+1) == H_Success) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#193: FILE: arch/ppc64/kernel/hvconsole.c:76:
+int hvc_put_chars(uint32_t vtermno, const char *buf, int count)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "vty"
#234: FILE: arch/ppc64/kernel/hvconsole.c:101:
+	for (vty = of_find_node_by_name(NULL, "vty"); vty != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#236: FILE: arch/ppc64/kernel/hvconsole.c:103:
+		uint32_t *vtermno;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#239: FILE: arch/ppc64/kernel/hvconsole.c:106:
+		 * console adapters. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#269: FILE: drivers/char/hvc_console.c:22:
  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#296: FILE: drivers/char/hvc_console.c:40:
+#include <asm/uaccess.h>

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#311: FILE: drivers/char/hvc_console.c:53:
+#define HVC_CLOSE_WAIT (HZ/100) /* 1/10 of a second */
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#336: FILE: drivers/char/hvc_console.c:81:
+	uint32_t vtermno;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#361: FILE: drivers/char/hvc_console.c:104:
+static uint32_t vtermnos[MAX_NR_HVC_CONSOLES];

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#364: FILE: drivers/char/hvc_console.c:107:
+static int num_vterms = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#433: FILE: drivers/char/hvc_console.c:174:
+static int hvc_open(struct tty_struct *tty, struct file * filp)
                                                           ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#433: FILE: drivers/char/hvc_console.c:174:
+static int hvc_open(struct tty_struct *tty, struct file * filp)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#442: FILE: drivers/char/hvc_console.c:183:
+	if (!(hp = hvc_get_by_index(tty->index))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#443: FILE: drivers/char/hvc_console.c:184:
+		printk(KERN_WARNING "hvc_console: tty open failed, no vty associated with tty.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#544: FILE: drivers/char/hvc_console.c:275:
+			printk(KERN_ERR "hvc_close %X: oops, count is %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#545: FILE: drivers/char/hvc_console.c:276:
+			printk(KERN_ERR "hvc_close %X: oops, count is %d\n",
+				hp->vtermno, hp->count);

ERROR:SPACING: space required before the open parenthesis '('
#573: FILE: drivers/char/hvc_console.c:304:
+	while(temp_open_count) {

WARNING:MINMAX: min() should probably be min_t(int, count, PAGE_SIZE)
#642: FILE: drivers/char/hvc_console.c:340:
+	tbsize = min(count, (int)PAGE_SIZE);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#643: FILE: drivers/char/hvc_console.c:341:
+	if (!(tbuf = kmalloc(tbsize, GFP_KERNEL)))

WARNING:LINE_SPACING: Missing a blank line after declarations
#650: FILE: drivers/char/hvc_console.c:346:
+		int wsize;
+		if (rsize > tbsize)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#704: FILE: drivers/char/hvc_console.c:390:
+static inline int __hvc_write_kernel(struct hvc_struct *hp,
+				   const unsigned char *buf, int count)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#729: FILE: drivers/char/hvc_console.c:415:
+}
+static int hvc_write(struct tty_struct *tty, int from_user,

WARNING:TYPO_SPELLING: 'guarentee' may be misspelled - perhaps 'guarantee'?
#753: FILE: drivers/char/hvc_console.c:439:
+ * how much write room the driver can guarentee will be sent OR BUFFERED.  This
                                       ^^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tty"
#821: FILE: drivers/char/hvc_console.c:484:
+	if (tty == NULL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#837: FILE: drivers/char/hvc_console.c:500:
+		int count = N_INBUF;
+		if (count > (TTY_FLIPBUF_SIZE - tty->flip.count))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#845: FILE: drivers/char/hvc_console.c:508:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#897: FILE: drivers/char/hvc_console.c:553:
+		if ((tty->flags & (1 << TTY_DO_WRITE_WAKEUP))
+		    && tty->ldisc.write_wakeup)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (tty->ldisc.write_wakeup)
#898: FILE: drivers/char/hvc_console.c:554:
+			(tty->ldisc.write_wakeup)(tty);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:MEMORY_BARRIER: memory barrier without comment
#931: FILE: drivers/char/hvc_console.c:583:
+		wmb();

CHECK:BRACES: Unbalanced braces around else statement
#941: FILE: drivers/char/hvc_console.c:591:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#946: FILE: drivers/char/hvc_console.c:596:
+			yield();

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#977: FILE: drivers/char/hvc_console.c:624:
+static struct vio_device_id hvc_driver_table[] __devinitdata= {

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#977: FILE: drivers/char/hvc_console.c:624:
+static struct vio_device_id hvc_driver_table[] __devinitdata= {
                                                             ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hp->next
#997: FILE: drivers/char/hvc_console.c:639:
+	list_del(&(hp->next));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1009: FILE: drivers/char/hvc_console.c:651:
+static int __devinit hvc_probe(

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1009: FILE: drivers/char/hvc_console.c:651:
+static int __devinit hvc_probe(

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hp->next
#1035: FILE: drivers/char/hvc_console.c:677:
+	list_add_tail(&(hp->next), &hvc_structs);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1041: FILE: drivers/char/hvc_console.c:683:
+static int __devexit hvc_remove(struct vio_dev *dev)

WARNING:TYPO_SPELLING: 'intialized' may be misspelled - perhaps 'initialized'?
#1061: FILE: drivers/char/hvc_console.c:703:
+	 * was intialized using kobject_init().  Let the last holder of this
 	       ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1085: FILE: drivers/char/hvc_console.c:727:
+ * interfaces start to become available. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1111: FILE: drivers/char/hvc_console.c:753:
+	 * added later. */

WARNING:TYPO_SPELLING: 'particularily' may be misspelled - perhaps 'particularly'?
#1126: FILE: drivers/char/hvc_console.c:767:
+/* This isn't particularily necessary due to this being a console driver but it
               ^^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1127: FILE: drivers/char/hvc_console.c:768:
+ * is nice to be thorough */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1148: FILE: drivers/char/hvc_console.c:789:
+int hvc_instantiate(uint32_t vtermno, int index)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1164: FILE: drivers/char/hvc_console.c:804:
+	unsigned i, n = 0;

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#1172: FILE: drivers/char/hvc_console.c:811:
+	/* This console adapter was removed so it is not useable. */
 	                                                 ^^^^^^^

WARNING:TYPO_SPELLING: 'Preceeds' may be misspelled - perhaps 'Precedes'?
#1202: FILE: drivers/char/hvc_console.c:859:
+/* Early console initialization.  Preceeds driver initialization. */
                                   ^^^^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1207: FILE: drivers/char/hvc_console.c:864:
+	for (i=0; i<MAX_NR_HVC_CONSOLES; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1207: FILE: drivers/char/hvc_console.c:864:
+	for (i=0; i<MAX_NR_HVC_CONSOLES; i++)
 	           ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000255913.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 24 warnings, 26 checks, 1077 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000255913.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
