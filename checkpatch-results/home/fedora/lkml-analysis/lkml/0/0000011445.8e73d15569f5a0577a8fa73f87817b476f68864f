WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
This patch introduces a new structure called ktimed (Kernel Time Data), where 

WARNING:TYPO_SPELLING: 'endianess' may be misspelled - perhaps 'endianness'?
#48: 
because of jiffies aliasing (and endianess), but it could be done.
                                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#89: FILE: include/linux/time.h:101:
+};
+extern struct ktimed_struct ktimed;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#113: FILE: kernel/timer.c:578:
+EXPORT_SYMBOL(ktimed);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#184: FILE: include/asm-x86_64/vsyscall.h:23:
+#define __section_ktimed __attribute__ ((unused, __section__ (".ktimed"), aligned(16)))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#184: FILE: include/asm-x86_64/vsyscall.h:23:
+#define __section_ktimed __attribute__ ((unused, __section__ (".ktimed"), aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".ktimed") over __attribute__((__section__(".ktimed")))
#184: FILE: include/asm-x86_64/vsyscall.h:23:
+#define __section_ktimed __attribute__ ((unused, __section__ (".ktimed"), aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(16) over __attribute__((aligned(16)))
#184: FILE: include/asm-x86_64/vsyscall.h:23:
+#define __section_ktimed __attribute__ ((unused, __section__ (".ktimed"), aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#184: FILE: include/asm-x86_64/vsyscall.h:23:
+#define __section_ktimed __attribute__ ((unused, __section__ (".ktimed"), aligned(16)))

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAVE_KTIMED' is wrong - use Kconfig variables or standard guards instead
#210: FILE: include/asm-x86_64/vsyscall.h:59:
+#define ARCH_HAVE_KTIMED 1

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000011445.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 7 warnings, 1 checks, 166 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000011445.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
