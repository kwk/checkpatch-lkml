ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#56: 
--- a/include/sound/ac97_codec.h	Sun Sep 29 20:20:29 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:TYPO_SPELLING: 'Conexant' may be misspelled - perhaps 'Connexant'?
#62: FILE: include/sound/ac97_codec.h:130:
+/* specific - Conexant */
               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#64: FILE: include/sound/ac97_codec.h:132:
+#define AC97_CXR_SPDIFEN	(1<<3)
                         	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#64: FILE: include/sound/ac97_codec.h:132:
+#define AC97_CXR_SPDIFEN	(1<<3)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#65: FILE: include/sound/ac97_codec.h:133:
+#define AC97_CXR_COPYRGT	(1<<2)
                         	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#65: FILE: include/sound/ac97_codec.h:133:
+#define AC97_CXR_COPYRGT	(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#66: FILE: include/sound/ac97_codec.h:134:
+#define AC97_CXR_SPDIF_MASK	(3<<0)
                            	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#77: FILE: include/sound/ac97_codec.h:146:
+#define AC97_CX_SPDIF		(1<<3)	/* Conexant's spdif interface */
                      		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#77: FILE: include/sound/ac97_codec.h:146:
+#define AC97_CX_SPDIF		(1<<3)	/* Conexant's spdif interface */

WARNING:LONG_LINE: line length of 145 exceeds 100 columns
#90: FILE: include/sound/info.h:154:
+static inline snd_info_entry_t *snd_info_create_module_entry(struct module * module, const char *name, snd_info_entry_t *parent) { return NULL; }

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#90: FILE: include/sound/info.h:154:
+static inline snd_info_entry_t *snd_info_create_module_entry(struct module * module, const char *name, snd_info_entry_t *parent) { return NULL; }

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 138 exceeds 100 columns
#91: FILE: include/sound/info.h:155:
+static inline snd_info_entry_t *snd_info_create_card_entry(snd_card_t * card, const char *name, snd_info_entry_t *parent) { return NULL; }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#91: FILE: include/sound/info.h:155:
+static inline snd_info_entry_t *snd_info_create_card_entry(snd_card_t * card, const char *name, snd_info_entry_t *parent) { return NULL; }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#149: FILE: sound/pci/ac97/ac97_codec.c:64:
+static int patch_conexant(ac97_t * ac97);

WARNING:LONG_LINE: line length of 140 exceeds 100 columns
#167: FILE: sound/pci/ac97/ac97_codec.c:773:
+		v = ucontrol->value.iec958.status[0] & (IEC958_AES0_CON_EMPHASIS_5015|IEC958_AES0_CON_NOT_COPYRIGHT) ? 0 : AC97_CXR_COPYRGT;

WARNING:LINE_SPACING: Missing a blank line after declarations
#167: FILE: sound/pci/ac97/ac97_codec.c:773:
+		int v;
+		v = ucontrol->value.iec958.status[0] & (IEC958_AES0_CON_EMPHASIS_5015|IEC958_AES0_CON_NOT_COPYRIGHT) ? 0 : AC97_CXR_COPYRGT;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#167: FILE: sound/pci/ac97/ac97_codec.c:773:
+		v = ucontrol->value.iec958.status[0] & (IEC958_AES0_CON_EMPHASIS_5015|IEC958_AES0_CON_NOT_COPYRIGHT) ? 0 : AC97_CXR_COPYRGT;
 		                                                                     ^

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#168: FILE: sound/pci/ac97/ac97_codec.c:774:
+		v |= ucontrol->value.iec958.status[0] & IEC958_AES0_NONAUDIO ? AC97_CXR_SPDIF_AC3 : AC97_CXR_SPDIF_PCM;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: sound/pci/ac97/ac97_codec.c:775:
+^I^Ichange = snd_ac97_update_bits(ac97, AC97_CXR_AUDIO_MISC, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: sound/pci/ac97/ac97_codec.c:821:
+    AC97_SINGLE(SNDRV_CTL_NAME_IEC958("",PLAYBACK,SWITCH), AC97_CXR_AUDIO_MISC, 3, 1, 0),$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#180: FILE: sound/pci/ac97/ac97_codec.c:821:
+    AC97_SINGLE(SNDRV_CTL_NAME_IEC958("",PLAYBACK,SWITCH), AC97_CXR_AUDIO_MISC, 3, 1, 0),
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#180: FILE: sound/pci/ac97/ac97_codec.c:821:
+    AC97_SINGLE(SNDRV_CTL_NAME_IEC958("",PLAYBACK,SWITCH), AC97_CXR_AUDIO_MISC, 3, 1, 0),
                                                  ^

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#192: FILE: sound/pci/ac97/ac97_codec.c:1360:
+				if ((err = snd_ctl_add(card, snd_ac97_cnew(&snd_ac97_controls_spdif[idx], ac97))) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#192: FILE: sound/pci/ac97/ac97_codec.c:1360:
+				if ((err = snd_ctl_add(card, snd_ac97_cnew(&snd_ac97_controls_spdif[idx], ac97))) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#194: FILE: sound/pci/ac97/ac97_codec.c:1362:
+			if ((err = snd_ctl_add(card, snd_ac97_cnew(&snd_ac97_conexant_controls_spdif[0], ac97))) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#194: FILE: sound/pci/ac97/ac97_codec.c:1362:
+			if ((err = snd_ctl_add(card, snd_ac97_cnew(&snd_ac97_conexant_controls_spdif[0], ac97))) < 0)

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#197: FILE: sound/pci/ac97/ac97_codec.c:1365:
+			/* consumer,PCM audio,no copyright,no preemphasis,PCM coder,original,48000Hz */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 146 exceeds 100 columns
#199: FILE: sound/pci/ac97/ac97_codec.c:1367:
+					     snd_ac97_read(ac97, AC97_CXR_AUDIO_MISC) & ~(AC97_CXR_SPDIFEN|AC97_CXR_COPYRGT|AC97_CXR_SPDIF_MASK));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#199: FILE: sound/pci/ac97/ac97_codec.c:1367:
+					     snd_ac97_read(ac97, AC97_CXR_AUDIO_MISC) & ~(AC97_CXR_SPDIFEN|AC97_CXR_COPYRGT|AC97_CXR_SPDIF_MASK));
 					                                                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#199: FILE: sound/pci/ac97/ac97_codec.c:1367:
+					     snd_ac97_read(ac97, AC97_CXR_AUDIO_MISC) & ~(AC97_CXR_SPDIFEN|AC97_CXR_COPYRGT|AC97_CXR_SPDIF_MASK));
 					                                                                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: sound/pci/ac97/ac97_codec.c:1368:
+^I^I^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#210: FILE: sound/pci/ac97/ac97_codec.c:1997:
+static int patch_conexant(ac97_t * ac97)

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: sound/pci/ac97/ac97_codec.c:2000:
+        ac97->ext_id |= AC97_EA_SPDIF;^I/* force the detection of spdif */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: sound/pci/ac97/ac97_codec.c:2000:
+        ac97->ext_id |= AC97_EA_SPDIF;^I/* force the detection of spdif */$

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#226: FILE: sound/pci/es1968.c:1132:
+	outw(inw(chip->io_port + ESM_PORT_HOST_IRQ) | ESM_HIRQ_DSIE, chip->io_port + ESM_PORT_HOST_IRQ);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#235: FILE: sound/pci/es1968.c:1263:
+	outw(inw(chip->io_port + ESM_PORT_HOST_IRQ) | ESM_HIRQ_DSIE, chip->io_port + ESM_PORT_HOST_IRQ);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#244: FILE: sound/pci/es1968.c:1824:
+	outw(inw(chip->io_port + ESM_PORT_HOST_IRQ) | ESM_HIRQ_DSIE, chip->io_port + ESM_PORT_HOST_IRQ); /* enable WP ints */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#256: FILE: sound/pci/es1968.c:2334:
 
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#276: FILE: sound/pci/via8233.c:367:
+		case 1: slots = (1<<0) | (1<<4); break;
 		                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#276: FILE: sound/pci/via8233.c:367:
+		case 1: slots = (1<<0) | (1<<4); break;
 		                           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#276: FILE: sound/pci/via8233.c:367:
+		case 1: slots = (1<<0) | (1<<4); break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#299: FILE: sound/pci/ymfpci/ymfpci.c:70:
 static struct pci_device_id snd_ymfpci_ids[] __devinitdata = {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#306: FILE: sound/pci/ymfpci/ymfpci.c:196:
+	if ((err = snd_ymfpci_mixer(chip, snd_rear_switch[dev])) < 0) {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#367: FILE: sound/pci/ymfpci/ymfpci_main.c:1648:
+int __devinit snd_ymfpci_mixer(ymfpci_t *chip, int rear_switch)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#380: FILE: sound/pci/ymfpci/ymfpci_main.c:1684:
+		if ((err = snd_ctl_add(chip->card, snd_ctl_new1(&snd_ymfpci_rear_shared, chip))) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#380: FILE: sound/pci/ymfpci/ymfpci_main.c:1684:
+		if ((err = snd_ctl_add(chip->card, snd_ctl_new1(&snd_ymfpci_rear_shared, chip))) < 0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428738.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 18 warnings, 13 checks, 273 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428738.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
