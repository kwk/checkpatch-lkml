WARNING:TYPO_SPELLING: 'compatability' may be misspelled - perhaps 'compatibility'?
#33: 
After seeing the ugliness required for the 32-bit ioctl compatability 
                                                        ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#73: FILE: include/linux/socket.h:180:
+#define AF_IPMI^I^I32^I/* IPMI sockers ^I^I*/$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: include/net/af_ipmi.h:1:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#91: FILE: include/net/af_ipmi.h:1:
+/* 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#110: FILE: include/net/af_ipmi.h:20:
+};
+#define SOCKADDR_IPMI_OVERHEAD (sizeof(struct sockaddr_ipmi) \

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: include/net/af_ipmi.h:26:
+/* $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#129: FILE: include/net/af_ipmi.h:39:
+#define IPMI_MAX_SOCK_MSG_LENGTH (sizeof(struct ipmi_sock_msg)+IPMI_MAX_MSG_LENGTH)
                                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#132: FILE: include/net/af_ipmi.h:42:
+/* Register/unregister to receive specific commands.  Uses struct
+   ipmi_cmdspec from linux/ipmi.h */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#132: FILE: include/net/af_ipmi.h:42:
+   ipmi_cmdspec from linux/ipmi.h */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#140: FILE: include/net/af_ipmi.h:50:
+/* Set the default timing parameters for the socket.  Takes a struct
+   ipmi_timing_parms from linux/ipmi.h */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#140: FILE: include/net/af_ipmi.h:50:
+   ipmi_timing_parms from linux/ipmi.h */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#145: FILE: include/net/af_ipmi.h:55:
+/* Set/Get the IPMB address of the MC we are connected to, takes an
+   unsigned int. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#145: FILE: include/net/af_ipmi.h:55:
+   unsigned int. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: net/ipmi/af_ipmi.c:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#155: FILE: net/ipmi/af_ipmi.c:1:
+/* 

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#178: FILE: net/ipmi/af_ipmi.c:24:
+#include <asm/uaccess.h>

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#194: FILE: net/ipmi/af_ipmi.c:40:
+static int debug = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: net/ipmi/af_ipmi.c:42:
+        do {                                                    \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: net/ipmi/af_ipmi.c:42:
+        do {                                                    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: net/ipmi/af_ipmi.c:43:
+                if(debug)                                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: net/ipmi/af_ipmi.c:43:
+                if(debug)                                    \$

ERROR:SPACING: space required before the open parenthesis '('
#197: FILE: net/ipmi/af_ipmi.c:43:
+                if(debug)                                    \

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: net/ipmi/af_ipmi.c:44:
+                        printk (KERN_DEBUG "%s: " format "\n",  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: net/ipmi/af_ipmi.c:44:
+                        printk (KERN_DEBUG "%s: " format "\n",  \$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#198: FILE: net/ipmi/af_ipmi.c:44:
+                        printk (KERN_DEBUG "%s: " format "\n",  \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#198: FILE: net/ipmi/af_ipmi.c:44:
+                        printk (KERN_DEBUG "%s: " format "\n",  \

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: net/ipmi/af_ipmi.c:45:
+                                __FUNCTION__, ## arg);          \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: net/ipmi/af_ipmi.c:45:
+                                __FUNCTION__, ## arg);          \$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#199: FILE: net/ipmi/af_ipmi.c:45:
+                                __FUNCTION__, ## arg);          \

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: net/ipmi/af_ipmi.c:46:
+        } while(0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: net/ipmi/af_ipmi.c:46:
+        } while(0)$

ERROR:SPACING: space required before the open parenthesis '('
#200: FILE: net/ipmi/af_ipmi.c:46:
+        } while(0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: net/ipmi/af_ipmi.c:52:
+                printk(KERN_ERR "%s: " format "\n", \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: net/ipmi/af_ipmi.c:52:
+                printk(KERN_ERR "%s: " format "\n", \$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#206: FILE: net/ipmi/af_ipmi.c:52:
+                printk(KERN_ERR "%s: " format "\n", \

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: net/ipmi/af_ipmi.c:53:
+                       __FUNCTION__ , ## arg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: net/ipmi/af_ipmi.c:53:
+                       __FUNCTION__ , ## arg)$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#207: FILE: net/ipmi/af_ipmi.c:53:
+                       __FUNCTION__ , ## arg)
                                     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#207: FILE: net/ipmi/af_ipmi.c:53:
+                       __FUNCTION__ , ## arg)

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: net/ipmi/af_ipmi.c:55:
+                printk(KERN_INFO "%s: " format "\n", \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: net/ipmi/af_ipmi.c:55:
+                printk(KERN_INFO "%s: " format "\n", \$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#209: FILE: net/ipmi/af_ipmi.c:55:
+                printk(KERN_INFO "%s: " format "\n", \

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: net/ipmi/af_ipmi.c:56:
+                       __FUNCTION__ , ## arg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: net/ipmi/af_ipmi.c:56:
+                       __FUNCTION__ , ## arg)$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#210: FILE: net/ipmi/af_ipmi.c:56:
+                       __FUNCTION__ , ## arg)
                                     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#210: FILE: net/ipmi/af_ipmi.c:56:
+                       __FUNCTION__ , ## arg)

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: net/ipmi/af_ipmi.c:58:
+                printk(KERN_WARNING "%s: " format "\n", \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: net/ipmi/af_ipmi.c:58:
+                printk(KERN_WARNING "%s: " format "\n", \$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#212: FILE: net/ipmi/af_ipmi.c:58:
+                printk(KERN_WARNING "%s: " format "\n", \

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: net/ipmi/af_ipmi.c:59:
+                       __FUNCTION__ , ## arg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: net/ipmi/af_ipmi.c:59:
+                       __FUNCTION__ , ## arg)$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#213: FILE: net/ipmi/af_ipmi.c:59:
+                       __FUNCTION__ , ## arg)
                                     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#213: FILE: net/ipmi/af_ipmi.c:59:
+                       __FUNCTION__ , ## arg)

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: net/ipmi/af_ipmi.c:61:
+                printk(KERN_INFO "%s(" format ")\n", \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: net/ipmi/af_ipmi.c:61:
+                printk(KERN_INFO "%s(" format ")\n", \$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#215: FILE: net/ipmi/af_ipmi.c:61:
+                printk(KERN_INFO "%s(" format ")\n", \

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: net/ipmi/af_ipmi.c:62:
+                       __FUNCTION__ , ## arg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: net/ipmi/af_ipmi.c:62:
+                       __FUNCTION__ , ## arg)$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#216: FILE: net/ipmi/af_ipmi.c:62:
+                       __FUNCTION__ , ## arg)
                                     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#216: FILE: net/ipmi/af_ipmi.c:62:
+                       __FUNCTION__ , ## arg)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: net/ipmi/af_ipmi.c:71:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#226: FILE: net/ipmi/af_ipmi.c:72:
+^Iwait_queue_head_t wait;^I$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#227: FILE: net/ipmi/af_ipmi.c:73:
+	spinlock_t lock;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#233: FILE: net/ipmi/af_ipmi.c:79:
+static kmem_cache_t *ipmi_sk_cachep = NULL;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#237: FILE: net/ipmi/af_ipmi.c:83:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#240: FILE: net/ipmi/af_ipmi.c:86:
+/*
+ * utility functions

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: net/ipmi/af_ipmi.c:88:
+static inline struct ipmi_sock *to_ipmi_sock(struct sock *sk) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: net/ipmi/af_ipmi.c:97:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#261: FILE: net/ipmi/af_ipmi.c:107:
+	while((skb=skb_dequeue(&sk->sk_receive_queue))!=NULL)
 	          ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#261: FILE: net/ipmi/af_ipmi.c:107:
+	while((skb=skb_dequeue(&sk->sk_receive_queue))!=NULL)
 	                                              ^

ERROR:SPACING: space required before the open parenthesis '('
#261: FILE: net/ipmi/af_ipmi.c:107:
+	while((skb=skb_dequeue(&sk->sk_receive_queue))!=NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: net/ipmi/af_ipmi.c:113:
+static inline long ipmi_wait_for_queue(struct ipmi_sock *i, long timeo) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: net/ipmi/af_ipmi.c:115:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#269: FILE: net/ipmi/af_ipmi.c:115:
+{
+	

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: net/ipmi/af_ipmi.c:117:
+^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#280: FILE: net/ipmi/af_ipmi.c:126:
+/*
+ * IPMI operation functions

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: net/ipmi/af_ipmi.c:133:
+^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#296: FILE: net/ipmi/af_ipmi.c:142:
+/*
+ * protocol operation functions

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: net/ipmi/af_ipmi.c:147:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#305: FILE: net/ipmi/af_ipmi.c:151:
+	sock->sk=NULL;
 	        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: net/ipmi/af_ipmi.c:165:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "i->user"
#320: FILE: net/ipmi/af_ipmi.c:166:
+	if (i->user != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: net/ipmi/af_ipmi.c:170:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#338: FILE: net/ipmi/af_ipmi.c:184:
+	struct ipmi_sock *i = to_ipmi_sock(sock->sk);
+	memcpy(uaddr, &i->addr, sizeof(i->addr));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#342: FILE: net/ipmi/af_ipmi.c:188:
+static unsigned int ipmi_poll(struct file * file, struct socket *sock, poll_table *wait)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: net/ipmi/af_ipmi.c:193:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: net/ipmi/af_ipmi.c:208:
+^Istruct ipmi_cmdspec val; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: net/ipmi/af_ipmi.c:212:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#368: FILE: net/ipmi/af_ipmi.c:214:
+	switch(cmd) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: net/ipmi/af_ipmi.c:222:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#380: FILE: net/ipmi/af_ipmi.c:226:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: net/ipmi/af_ipmi.c:234:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: net/ipmi/af_ipmi.c:238:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: net/ipmi/af_ipmi.c:246:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#403: FILE: net/ipmi/af_ipmi.c:249:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: net/ipmi/af_ipmi.c:257:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#414: FILE: net/ipmi/af_ipmi.c:260:
+^I^I^I$

CHECK:SPACING: No space is necessary after a cast
#418: FILE: net/ipmi/af_ipmi.c:264:
+		if (copy_to_user((void *) arg, &uival, sizeof(uival))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#424: FILE: net/ipmi/af_ipmi.c:270:
+^I^I^I$

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#427: FILE: net/ipmi/af_ipmi.c:273:
+		struct ipmi_timing_parms parms;
 		                         ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#429: FILE: net/ipmi/af_ipmi.c:275:
+		if (copy_from_user(&parms, (void *) arg, sizeof(parms))) {
 		                    ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#429: FILE: net/ipmi/af_ipmi.c:275:
+		if (copy_from_user(&parms, (void *) arg, sizeof(parms))) {
 		                                                ^^^^^

CHECK:SPACING: No space is necessary after a cast
#429: FILE: net/ipmi/af_ipmi.c:275:
+		if (copy_from_user(&parms, (void *) arg, sizeof(parms))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#433: FILE: net/ipmi/af_ipmi.c:279:
+^I^I$

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#434: FILE: net/ipmi/af_ipmi.c:280:
+		i->default_retries = parms.retries;
 		                     ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#435: FILE: net/ipmi/af_ipmi.c:281:
+		i->default_retry_time_ms = parms.retry_time_ms;
 		                           ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#442: FILE: net/ipmi/af_ipmi.c:288:
+		struct ipmi_timing_parms parms;
 		                         ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#444: FILE: net/ipmi/af_ipmi.c:290:
+		parms.retries = i->default_retries;
 		^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#445: FILE: net/ipmi/af_ipmi.c:291:
+		parms.retry_time_ms = i->default_retry_time_ms;
 		^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#447: FILE: net/ipmi/af_ipmi.c:293:
+		if (copy_to_user((void *) arg, &parms, sizeof(parms))) {
 		                                ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#447: FILE: net/ipmi/af_ipmi.c:293:
+		if (copy_to_user((void *) arg, &parms, sizeof(parms))) {
 		                                              ^^^^^

CHECK:SPACING: No space is necessary after a cast
#447: FILE: net/ipmi/af_ipmi.c:293:
+		if (copy_to_user((void *) arg, &parms, sizeof(parms))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: net/ipmi/af_ipmi.c:306:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: net/ipmi/af_ipmi.c:319:
+^Istruct ipmi_sock_msg *smsg = (struct ipmi_sock_msg *)buf; $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#477: FILE: net/ipmi/af_ipmi.c:323:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#482: FILE: net/ipmi/af_ipmi.c:328:
+^I^Iif (!list_empty(&i->msg_list)) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#487: FILE: net/ipmi/af_ipmi.c:333:
+		} else if (signal_pending (current)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#491: FILE: net/ipmi/af_ipmi.c:337:
+^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#496: FILE: net/ipmi/af_ipmi.c:342:
+^Ilist_del(&rcvmsg->link);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#512: FILE: net/ipmi/af_ipmi.c:358:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#514: FILE: net/ipmi/af_ipmi.c:360:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#515: FILE: net/ipmi/af_ipmi.c:361:
+^Ierr = memcpy_toiovec(msg->msg_iov, (void *)smsg, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#521: FILE: net/ipmi/af_ipmi.c:367:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: net/ipmi/af_ipmi.c:371:
+^Idbg("netfn=%#02x, cmd=%#02x, data=%p, data_len=%x", $

CHECK:SPACING: No space is necessary after a cast
#538: FILE: net/ipmi/af_ipmi.c:384:
+	struct ipmi_sock_msg     *smsg = (struct ipmi_sock_msg *) buf;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: net/ipmi/af_ipmi.c:401:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#567: FILE: net/ipmi/af_ipmi.c:413:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#568: FILE: net/ipmi/af_ipmi.c:414:
+	if (len < smsg->data_len+sizeof(struct ipmi_sock_msg)) {
 	                        ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#578: FILE: net/ipmi/af_ipmi.c:424:
+	for (cmsg=CMSG_FIRSTHDR(msg);
+	     cmsg;
+	     cmsg = CMSG_NXTHDR(msg, cmsg))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#578: FILE: net/ipmi/af_ipmi.c:424:
+	for (cmsg=CMSG_FIRSTHDR(msg);
 	         ^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#596: FILE: net/ipmi/af_ipmi.c:442:
+				dbg("timing parms cmsg not right size: %p",
 				            ^^^^^

CHECK:SPACING: No space is necessary after a cast
#600: FILE: net/ipmi/af_ipmi.c:446:
+			pparms = (struct ipmi_timing_parms *) CMSG_DATA(cmsg);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#605: FILE: net/ipmi/af_ipmi.c:451:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#606: FILE: net/ipmi/af_ipmi.c:452:
+^Iimsg.netfn ^I= smsg->netfn;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#608: FILE: net/ipmi/af_ipmi.c:454:
+^Iimsg.data ^I= smsg->data;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#609: FILE: net/ipmi/af_ipmi.c:455:
+^Iimsg.data_len ^I= smsg->data_len;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#614: FILE: net/ipmi/af_ipmi.c:460:
+^Idbg("netfn=%#02x, cmd=%#02x, data=%p, data_len=%x", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#623: FILE: net/ipmi/af_ipmi.c:469:
+^I$

WARNING:CONST_STRUCT: struct proto_ops should normally be const
#628: FILE: net/ipmi/af_ipmi.c:474:
+static struct proto_ops ipmi_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#649: FILE: net/ipmi/af_ipmi.c:495:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#658: FILE: net/ipmi/af_ipmi.c:504:
+		printk("Attempt to release alive ipmi socket: %p\n", sk);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#666: FILE: net/ipmi/af_ipmi.c:512:
+/*
+ * net protocol functions

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#672: FILE: net/ipmi/af_ipmi.c:518:
+	if (atomic_read(&ipmi_nr_socks) >= 2*files_stat.max_files)
 	                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#675: FILE: net/ipmi/af_ipmi.c:521:
+^Ii = (struct ipmi_sock *)sk_alloc(PF_IPMI, GFP_KERNEL, $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#677: FILE: net/ipmi/af_ipmi.c:523:
+	if (!i) {
+		return NULL;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#680: FILE: net/ipmi/af_ipmi.c:526:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#681: FILE: net/ipmi/af_ipmi.c:527:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#681: FILE: net/ipmi/af_ipmi.c:527:
+	
+	

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#685: FILE: net/ipmi/af_ipmi.c:531:
+	i->sk.sk_rcvtimeo = 5*HZ;
 	                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#709: FILE: net/ipmi/af_ipmi.c:555:
+^I^Isock->type=SOCK_DGRAM;^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#709: FILE: net/ipmi/af_ipmi.c:555:
+		sock->type=SOCK_DGRAM;	
 		          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#716: FILE: net/ipmi/af_ipmi.c:562:
+^I$

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#717: FILE: net/ipmi/af_ipmi.c:563:
+	return ipmi_socket_create1(sock)? 0 : -ENOMEM;
 	                                ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#726: FILE: net/ipmi/af_ipmi.c:572:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#727: FILE: net/ipmi/af_ipmi.c:573:
+/* $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#728: FILE: net/ipmi/af_ipmi.c:574:
+/* 
+ * init/exit functions

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#732: FILE: net/ipmi/af_ipmi.c:578:
+{
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#733: FILE: net/ipmi/af_ipmi.c:579:
+	int err=0;
 	       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#734: FILE: net/ipmi/af_ipmi.c:580:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#735: FILE: net/ipmi/af_ipmi.c:581:
+	printk(KERN_INFO "ipmi socket interface version "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#742: FILE: net/ipmi/af_ipmi.c:588:
+		printk(KERN_CRIT "%s: Unable to create ipmi_sock SLAB cache!\n", __func__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#746: FILE: net/ipmi/af_ipmi.c:592:
+^I$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#781: FILE: net/Kconfig:74:
+config IPMI_SOCKET
+	tristate "IPMI sockets"
+	depends on IPMI_HANDLER
+	---help---
+	  If you say Y here, you will include support for IPMI sockets;
+	  This way you don't have to use devices to access IPMI.  You
+	  must also enable the IPMI message handler and a low-level
+	  driver in the Character Drivers if you enable this.
+	  
+	  If unsure, say N.
+
 config NET_KEY
 	tristate "PF_KEY sockets"
 	select XFRM

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#789: FILE: net/Kconfig:82:
+^I  $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000230116.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 83 errors, 62 warnings, 19 checks, 720 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000230116.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
