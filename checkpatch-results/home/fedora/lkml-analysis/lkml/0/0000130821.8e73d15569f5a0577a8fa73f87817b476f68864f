WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#89: FILE: arch/i386/kernel/tsc.c:31:
+	printk(KERN_WARNING "notsc: Kernel compiled with CONFIG_X86_TSC, "

WARNING:SPLIT_STRING: quoted string split across lines
#90: FILE: arch/i386/kernel/tsc.c:32:
+	printk(KERN_WARNING "notsc: Kernel compiled with CONFIG_X86_TSC, "
+				"cannot disable TSC.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#192: FILE: arch/i386/kernel/tsc.c:171:
+	if (delta64 > (1ULL<<32))
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#206: FILE: arch/i386/kernel/tsc.c:203:
+EXPORT_SYMBOL(recalibrate_cpu_khz);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#255: FILE: arch/i386/kernel/tsc.c:258:
+static unsigned int ref_freq = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#343: FILE: arch/i386/kernel/tsc.c:355:
+		printk("BUG in read_tsc(): TSC went backward!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_tsc', this function's name, in a string
#343: FILE: arch/i386/kernel/tsc.c:355:
+		printk("BUG in read_tsc(): TSC went backward!\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#345: FILE: arch/i386/kernel/tsc.c:357:
+			printk("... Unsynced TSCs?\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#368: FILE: arch/i386/kernel/tsc.c:383:
+		printk("BUG in read_tsc_c3(): TSC went backward!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_tsc_c3', this function's name, in a string
#368: FILE: arch/i386/kernel/tsc.c:383:
+		printk("BUG in read_tsc_c3(): TSC went backward!\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#370: FILE: arch/i386/kernel/tsc.c:385:
+			printk("... Unsynced TSCs?\n");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#515: FILE: include/asm-i386/tsc.h:47:
+extern void tsc_c3_compensate(unsigned long usecs);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000130821.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 9 warnings, 2 checks, 438 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000130821.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
