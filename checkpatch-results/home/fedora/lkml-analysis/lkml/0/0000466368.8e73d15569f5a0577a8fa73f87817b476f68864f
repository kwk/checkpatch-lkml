WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#157: FILE: arch/i386/kernel/setup.c:702:
+			printk("only %luMB highmem pages available, ignoring highmem size of %uMB.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: arch/i386/kernel/setup.c:703:
+			printk("only %luMB highmem pages available, ignoring highmem size of %uMB.\n",
+				pages_to_mb(max_pfn - MAXMEM_PFN), pages_to_mb(highmem_pages));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#171: FILE: arch/i386/kernel/setup.c:730:
+			printk(KERN_ERR "highmem size specified (%uMB) is bigger than pages available (%luMB)!.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: arch/i386/kernel/setup.c:731:
+			printk(KERN_ERR "highmem size specified (%uMB) is bigger than pages available (%luMB)!.\n",
+				pages_to_mb(highmem_pages), pages_to_mb(max_pfn));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#178: FILE: arch/i386/kernel/setup.c:735:
+			if ((*max_low_pfn)-highmem_pages < 64*1024*1024/PAGE_SIZE){
 			                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#178: FILE: arch/i386/kernel/setup.c:735:
+			if ((*max_low_pfn)-highmem_pages < 64*1024*1024/PAGE_SIZE){
 			                                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#178: FILE: arch/i386/kernel/setup.c:735:
+			if ((*max_low_pfn)-highmem_pages < 64*1024*1024/PAGE_SIZE){
 			                                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#178: FILE: arch/i386/kernel/setup.c:735:
+			if ((*max_low_pfn)-highmem_pages < 64*1024*1024/PAGE_SIZE){
 			                                               ^

ERROR:SPACING: space required before the open brace '{'
#178: FILE: arch/i386/kernel/setup.c:735:
+			if ((*max_low_pfn)-highmem_pages < 64*1024*1024/PAGE_SIZE){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#179: FILE: arch/i386/kernel/setup.c:736:
+				printk(KERN_ERR "highmem size %uMB results in smaller than 64MB lowmem, ignoring it.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: arch/i386/kernel/setup.c:737:
+				printk(KERN_ERR "highmem size %uMB results in smaller than 64MB lowmem, ignoring it.\n",
+					pages_to_mb(highmem_pages));

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#243: FILE: arch/i386/kernel/setup.c:806:
+	highstart_pfn = highend_pfn = max_pfn;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#244: FILE: arch/i386/kernel/setup.c:807:
+	if (max_pfn > *max_low_pfn) {
+		highstart_pfn = *max_low_pfn;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#247: FILE: arch/i386/kernel/setup.c:810:
+	printk(KERN_NOTICE "%ldMB HIGHMEM available.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: arch/i386/kernel/setup.c:811:
+	printk(KERN_NOTICE "%ldMB HIGHMEM available.\n",
+		pages_to_mb(highend_pfn - highstart_pfn));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#250: FILE: arch/i386/kernel/setup.c:813:
+	printk(KERN_NOTICE "%ldMB LOWMEM available.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: arch/i386/kernel/setup.c:814:
+	printk(KERN_NOTICE "%ldMB LOWMEM available.\n",
+			pages_to_mb(*max_low_pfn));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: arch/i386/kernel/setup.c:845:
+}     $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: arch/i386/kernel/setup.c:922:
+ ^IROOT_DEV = to_kdev_t(ORIG_ROOT_DEV);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#350: FILE: arch/i386/kernel/setup.c:922:
+ ^IROOT_DEV = to_kdev_t(ORIG_ROOT_DEV);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: arch/i386/kernel/setup.c:922:
+ ^IROOT_DEV = to_kdev_t(ORIG_ROOT_DEV);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: arch/i386/kernel/setup.c:923:
+ ^Idrive_info = DRIVE_INFO;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#351: FILE: arch/i386/kernel/setup.c:923:
+ ^Idrive_info = DRIVE_INFO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: arch/i386/kernel/setup.c:923:
+ ^Idrive_info = DRIVE_INFO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: arch/i386/kernel/setup.c:924:
+ ^Iscreen_info = SCREEN_INFO;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#352: FILE: arch/i386/kernel/setup.c:924:
+ ^Iscreen_info = SCREEN_INFO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: arch/i386/kernel/setup.c:924:
+ ^Iscreen_info = SCREEN_INFO;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#354: FILE: arch/i386/kernel/setup.c:926:
+	if( SYS_DESC_TABLE.length != 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#354: FILE: arch/i386/kernel/setup.c:926:
+	if( SYS_DESC_TABLE.length != 0 ) {

ERROR:SPACING: space required before the open parenthesis '('
#354: FILE: arch/i386/kernel/setup.c:926:
+	if( SYS_DESC_TABLE.length != 0 ) {

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#355: FILE: arch/i386/kernel/setup.c:927:
+		MCA_bus = SYS_DESC_TABLE.table[3] &0x2;
 		                                  ^

CHECK:SPACING: No space is necessary after a cast
#371: FILE: arch/i386/kernel/setup.c:943:
+	init_mm.start_code = (unsigned long) &_text;

CHECK:SPACING: No space is necessary after a cast
#372: FILE: arch/i386/kernel/setup.c:944:
+	init_mm.end_code = (unsigned long) &_etext;

CHECK:SPACING: No space is necessary after a cast
#373: FILE: arch/i386/kernel/setup.c:945:
+	init_mm.end_data = (unsigned long) &_edata;

CHECK:SPACING: No space is necessary after a cast
#374: FILE: arch/i386/kernel/setup.c:946:
+	init_mm.brk = (unsigned long) &_end;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#377: FILE: arch/i386/kernel/setup.c:949:
+	code_resource.end = virt_to_phys(&_etext)-1;
 	                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#379: FILE: arch/i386/kernel/setup.c:951:
+	data_resource.end = virt_to_phys(&_edata)-1;
 	                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#442: FILE: include/asm-i386/setup.h:4:
+#define PFN_UP(x)	(((x) + PAGE_SIZE-1) >> PAGE_SHIFT)
                  	                 ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#450: FILE: include/asm-i386/setup.h:12:
+#define MAX_NONPAE_PFN	(1 << 20)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000466368.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 12 warnings, 19 checks, 390 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000466368.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
