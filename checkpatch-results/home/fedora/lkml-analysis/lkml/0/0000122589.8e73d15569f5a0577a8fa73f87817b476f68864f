WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
been included. It is about that hitting the keys <Compose><o><e> for example

ERROR:TRAILING_WHITESPACE: trailing whitespace
#50: FILE: drivers/char/consolemap.c:212:
+static void set_inverse_trans_unicode(struct vc_data *conp, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: drivers/char/consolemap.c:218:
+^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#59: FILE: drivers/char/consolemap.c:221:
+		q = p->inverse_trans_unicode =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: drivers/char/consolemap.c:238:
+^I^I^I^Iif (glyph >= 0 && glyph < MAX_GLYPH $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#77: FILE: drivers/char/consolemap.c:239:
+				if (glyph >= 0 && glyph < MAX_GLYPH 
+					       && q[glyph] < 32)

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: drivers/char/consolemap.c:240:
+^I^I  ^I^I^Iq[glyph] = (i << 11) + (j << 6) + k;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#78: FILE: drivers/char/consolemap.c:240:
+^I^I  ^I^I^Iq[glyph] = (i << 11) + (j << 6) + k;$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#104: FILE: drivers/char/consolemap.c:265:
+	else if (!(p = (struct uni_pagedir *)*conp->vc_uni_pagedir_loc))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#128: FILE: drivers/char/consolemap.c:403:
+	if (p->inverse_trans_unicode) {
+		kfree(p->inverse_trans_unicode);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: drivers/char/consolemap.c:675:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: drivers/char/consolemap.c:678:
+^I * If the user map still contains default values, i.e. the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: drivers/char/keyboard.c:359:
+^Iif (kbd->kbdmode != VC_UNICODE || c < 32 || c == 127) $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#251: FILE: drivers/char/selection.c:59:
+static u16 sel_pos(int n) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: drivers/char/selection.c:60:
+    return inverse_translate(sel_cons, screen_glyph(sel_cons, n), use_unicode);$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#262: FILE: drivers/char/selection.c:89:
+static inline int inword(const u16 c) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: drivers/char/selection.c:90:
+    return c > 0xff || ((inwordLut[c >> 5] >> (c & 0x1F)) & 1);$

CHECK:CAMELCASE: Avoid CamelCase: <inwordLut>
#263: FILE: drivers/char/selection.c:90:
+    return c > 0xff || ((inwordLut[c >> 5] >> (c & 0x1F)) & 1);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#272: FILE: drivers/char/selection.c:112:
+int store_utf8(u16 c, char *p)  {

ERROR:CODE_INDENT: code indent should use tabs where possible
#282: FILE: drivers/char/selection.c:122:
+ ^I} else {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#282: FILE: drivers/char/selection.c:122:
+ ^I} else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: drivers/char/selection.c:122:
+ ^I} else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: drivers/char/selection.c:128:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#288: FILE: drivers/char/selection.c:128:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: drivers/char/selection.c:128:
+ ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: drivers/char/selection.c:137:
+        int i, ps, pe, multiplier;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: drivers/char/selection.c:137:
+        int i, ps, pe, multiplier;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: drivers/char/selection.c:138:
+        u16 c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: drivers/char/selection.c:138:
+        u16 c;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: drivers/char/selection.c:139:
+        struct kbd_struct *kbd = kbd_table + fg_console;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: drivers/char/selection.c:139:
+        struct kbd_struct *kbd = kbd_table + fg_console;$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#318: FILE: drivers/char/selection.c:267:
+	bp = kmalloc((sel_end-sel_start)/2*multiplier+1, GFP_KERNEL);
 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#318: FILE: drivers/char/selection.c:267:
+	bp = kmalloc((sel_end-sel_start)/2*multiplier+1, GFP_KERNEL);
 	                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#318: FILE: drivers/char/selection.c:267:
+	bp = kmalloc((sel_end-sel_start)/2*multiplier+1, GFP_KERNEL);
 	                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#318: FILE: drivers/char/selection.c:267:
+	bp = kmalloc((sel_end-sel_start)/2*multiplier+1, GFP_KERNEL);
 	                                             ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#345: FILE: include/linux/consolemap.h:13:
+extern u16 inverse_translate(struct vc_data *conp, int glyph, int use_unicode);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#348: FILE: include/linux/consolemap.h:16:
+extern u32 conv_8bit_to_uni(unsigned char c);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000122589.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 12 warnings, 9 checks, 281 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000122589.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
