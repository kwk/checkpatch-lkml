WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#50: 
Signed-Off-By: Phillip Lougher (phillip@lougher.demon.co.uk)

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Phillip Lougher (phillip@lougher.demon.co.uk)'
#50: 
Signed-Off-By: Phillip Lougher (phillip@lougher.demon.co.uk)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#65: FILE: fs/squashfs/inode.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#82: FILE: fs/squashfs/inode.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#83: FILE: fs/squashfs/inode.c:19:
+ * Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#102: FILE: fs/squashfs/inode.c:38:
+#include <asm/uaccess.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: fs/squashfs/inode.c:58:
+static struct dentry *squashfs_lookup(struct inode *, struct dentry *,
+				struct nameidata *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: fs/squashfs/inode.c:61:
+static unsigned int read_blocklist(struct inode *inode, int index,
+				int readahead_blks, char *block_list,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: fs/squashfs/inode.c:64:
+static struct super_block *squashfs_get_sb(struct file_system_type *, int,
+				const char *, void *);

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#153: FILE: fs/squashfs/inode.c:89:
+struct address_space_operations squashfs_symlink_aops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#157: FILE: fs/squashfs/inode.c:93:
+struct address_space_operations squashfs_aops = {

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#161: FILE: fs/squashfs/inode.c:97:
+struct address_space_operations squashfs_aops_4K = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#165: FILE: fs/squashfs/inode.c:101:
+struct file_operations squashfs_dir_ops = {

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#170: FILE: fs/squashfs/inode.c:106:
+struct inode_operations squashfs_dir_inode_ops = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#174: FILE: fs/squashfs/inode.c:110:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: fs/squashfs/inode.c:112:
+static struct buffer_head *get_block_length(struct super_block *s,
+				int *cur_index, int *offset, int *c_byte)

CHECK:CAMELCASE: Avoid CamelCase: <msBlk>
#178: FILE: fs/squashfs/inode.c:114:
+	squashfs_sb_info *msBlk = (squashfs_sb_info *)s->s_fs_info;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#182: FILE: fs/squashfs/inode.c:118:
+	if (!(bh = sb_bread(s, *cur_index)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#187: FILE: fs/squashfs/inode.c:123:
+			((unsigned char *) &temp)[1] = *((unsigned char *)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#190: FILE: fs/squashfs/inode.c:126:
+			((unsigned char *) &temp)[0] = *((unsigned char *)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#193: FILE: fs/squashfs/inode.c:129:
+		if (!(bh = sb_bread(s, ++(*cur_index))))

CHECK:SPACING: No space is necessary after a cast
#196: FILE: fs/squashfs/inode.c:132:
+			((unsigned char *) &temp)[0] = *((unsigned char *)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: fs/squashfs/inode.c:133:
+^I^I^I^Ibh->b_data); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#199: FILE: fs/squashfs/inode.c:135:
+			((unsigned char *) &temp)[1] = *((unsigned char *)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: fs/squashfs/inode.c:136:
+^I^I^I^Ibh->b_data); $

CHECK:SPACING: No space is necessary after a cast
#205: FILE: fs/squashfs/inode.c:141:
+			((unsigned char *) &temp)[1] = *((unsigned char *)

CHECK:SPACING: No space is necessary after a cast
#207: FILE: fs/squashfs/inode.c:143:
+			((unsigned char *) &temp)[0] = *((unsigned char *)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: fs/squashfs/inode.c:144:
+^I^I^I^I(bh->b_data + *offset + 1)); $

CHECK:SPACING: No space is necessary after a cast
#210: FILE: fs/squashfs/inode.c:146:
+			((unsigned char *) &temp)[0] = *((unsigned char *)

CHECK:SPACING: No space is necessary after a cast
#212: FILE: fs/squashfs/inode.c:148:
+			((unsigned char *) &temp)[1] = *((unsigned char *)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: fs/squashfs/inode.c:149:
+^I^I^I^I(bh->b_data + *offset + 1)); $

CHECK:CAMELCASE: Avoid CamelCase: <sBlk>
#219: FILE: fs/squashfs/inode.c:155:
+	if (SQUASHFS_CHECK_DATA(msBlk->sBlk.flags)) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#222: FILE: fs/squashfs/inode.c:158:
+			if (!(bh = sb_bread(s, ++(*cur_index))))

CHECK:SPACING: No space is necessary after a cast
#226: FILE: fs/squashfs/inode.c:162:
+		if (*((unsigned char *) (bh->b_data + *offset)) !=

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: fs/squashfs/inode.c:165:
+			ERROR("Metadata block marker corrupt @ %x\n",
+						*cur_index);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#233: FILE: fs/squashfs/inode.c:169:
+		(*offset) ++;
 		          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#238: FILE: fs/squashfs/inode.c:174:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: fs/squashfs/inode.c:176:
+unsigned int squashfs_read_data(struct super_block *s, char *buffer,
+			unsigned int index, unsigned int length,

CHECK:SPACING: No space is necessary after a cast
#260: FILE: fs/squashfs/inode.c:196:
+					? "" : "un", (unsigned int) c_byte);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#262: FILE: fs/squashfs/inode.c:198:
+		if (!(bh[0] = sb_getblk(s, cur_index)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#266: FILE: fs/squashfs/inode.c:202:
+			if (!(bh[b] = sb_getblk(s, ++cur_index)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#272: FILE: fs/squashfs/inode.c:208:
+		if (!(bh[0] = get_block_length(s, &cur_index, &offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: fs/squashfs/inode.c:209:
+		if (!(bh[0] = get_block_length(s, &cur_index, &offset,
+								&c_byte)))

CHECK:SPACING: No space is necessary after a cast
#282: FILE: fs/squashfs/inode.c:218:
+					? "" : "un", (unsigned int) c_byte);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#285: FILE: fs/squashfs/inode.c:221:
+			if (!(bh[b] = sb_getblk(s, ++cur_index)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#319: FILE: fs/squashfs/inode.c:255:
+		if (((zlib_err = zlib_inflateInit(&stream)) != Z_OK) ||

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateInit>
#319: FILE: fs/squashfs/inode.c:255:
+		if (((zlib_err = zlib_inflateInit(&stream)) != Z_OK) ||

CHECK:BRACES: braces {} should be used on all arms of this statement
#319: FILE: fs/squashfs/inode.c:255:
+		if (((zlib_err = zlib_inflateInit(&stream)) != Z_OK) ||
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: fs/squashfs/inode.c:256:
+		if (((zlib_err = zlib_inflateInit(&stream)) != Z_OK) ||
+				((zlib_err = zlib_inflate(&stream, Z_FINISH))

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateEnd>
#322: FILE: fs/squashfs/inode.c:258:
+				zlib_inflateEnd(&stream)) != Z_OK)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#324: FILE: fs/squashfs/inode.c:260:
+			ERROR("zlib_fs returned unexpected result 0x%x\n",
+				zlib_err);

CHECK:BRACES: Unbalanced braces around else statement
#326: FILE: fs/squashfs/inode.c:262:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: fs/squashfs/inode.c:264:
+^I^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#339: FILE: fs/squashfs/inode.c:275:
+	while (--b >= 0) brelse(bh[b]);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#346: FILE: fs/squashfs/inode.c:282:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: fs/squashfs/inode.c:284:
+int squashfs_get_cached_block(struct super_block *s, char *buffer,
+				unsigned int block, unsigned int offset,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_get_cached_block', this function's name, in a string
#356: FILE: fs/squashfs/inode.c:292:
+	TRACE("Entered squashfs_get_cached_block [%x:%x]\n", block, offset);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: fs/squashfs/inode.c:295:
+^I^Ifor (i = 0; i < SQUASHFS_CACHED_BLKS; i++) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: fs/squashfs/inode.c:297:
+^I^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: fs/squashfs/inode.c:298:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: fs/squashfs/inode.c:316:
+ ^I^I^I^Iup(&msBlk->block_cache_mutex);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#380: FILE: fs/squashfs/inode.c:316:
+ ^I^I^I^Iup(&msBlk->block_cache_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: fs/squashfs/inode.c:316:
+ ^I^I^I^Iup(&msBlk->block_cache_mutex);$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#390: FILE: fs/squashfs/inode.c:326:
+				if (!(msBlk->block_cache[i].data =

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#393: FILE: fs/squashfs/inode.c:329:
+						kmalloc(SQUASHFS_METADATA_SIZE,
+						GFP_KERNEL))) {

WARNING:SPLIT_STRING: quoted string split across lines
#395: FILE: fs/squashfs/inode.c:331:
+					ERROR("Failed to allocate cache"
+							"block\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#395: FILE: fs/squashfs/inode.c:331:
+					ERROR("Failed to allocate cache"
+							"block\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: fs/squashfs/inode.c:336:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#404: FILE: fs/squashfs/inode.c:340:
+			if (!(msBlk->block_cache[i].length =

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#406: FILE: fs/squashfs/inode.c:342:
+						squashfs_read_data(s,
+						msBlk->block_cache[i].data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#409: FILE: fs/squashfs/inode.c:345:
+				ERROR("Unable to read cache block [%x:%x]\n",
+						block, offset);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#425: FILE: fs/squashfs/inode.c:361:
+		if ((bytes = msBlk->block_cache[i].length - offset) >= length) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#438: FILE: fs/squashfs/inode.c:374:
+			return return_length;
+		} else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#452: FILE: fs/squashfs/inode.c:388:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: fs/squashfs/inode.c:390:
+static int get_fragment_location(struct super_block *s, unsigned int fragment,
+				unsigned int *fragment_start_block,

CHECK:SPACING: No space is necessary after a cast
#466: FILE: fs/squashfs/inode.c:402:
+		if (!squashfs_get_cached_block(s, (char *) &sfragment_entry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#467: FILE: fs/squashfs/inode.c:403:
+		if (!squashfs_get_cached_block(s, (char *) &sfragment_entry,
+					start_block, offset,

CHECK:BRACES: Unbalanced braces around else statement
#472: FILE: fs/squashfs/inode.c:408:
+	} else

CHECK:SPACING: No space is necessary after a cast
#473: FILE: fs/squashfs/inode.c:409:
+		if (!squashfs_get_cached_block(s, (char *) &fragment_entry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#474: FILE: fs/squashfs/inode.c:410:
+		if (!squashfs_get_cached_block(s, (char *) &fragment_entry,
+					start_block, offset,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#485: FILE: fs/squashfs/inode.c:421:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#487: FILE: fs/squashfs/inode.c:423:
+					squashfs_fragment_cache *fragment)
 					                        ^

ERROR:SPACING: space prohibited before that '--' (ctx:WxO)
#490: FILE: fs/squashfs/inode.c:426:
+	fragment->locked --;
 	                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#495: FILE: fs/squashfs/inode.c:431:
+
+

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#506: FILE: fs/squashfs/inode.c:442:
+		for (i = 0; i < SQUASHFS_CACHED_FRAGMENTS &&
+				msBlk->fragment[i].block != start_block; i++);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#507: FILE: fs/squashfs/inode.c:443:
+		for (i = 0; i < SQUASHFS_CACHED_FRAGMENTS &&
+				msBlk->fragment[i].block != start_block; i++);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#510: FILE: fs/squashfs/inode.c:446:
+			for (i = msBlk->next_fragment, n =
[...]
+				SQUASHFS_CACHED_FRAGMENTS);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: fs/squashfs/inode.c:456:
+				add_wait_queue(&msBlk->fragment_wait_queue,
+									&wait);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#526: FILE: fs/squashfs/inode.c:462:
+				remove_wait_queue(&msBlk->fragment_wait_queue,
+									&wait);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#531: FILE: fs/squashfs/inode.c:467:
+^I^I^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!msBlk->fragment[i].data"
#532: FILE: fs/squashfs/inode.c:468:
+			if (msBlk->fragment[i].data == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#533: FILE: fs/squashfs/inode.c:469:
+				if (!(msBlk->fragment[i].data =

CHECK:SPACING: No space is necessary after a cast
#534: FILE: fs/squashfs/inode.c:470:
+						(unsigned char *) kmalloc

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#534: FILE: fs/squashfs/inode.c:470:
+						(unsigned char *) kmalloc

WARNING:SPLIT_STRING: quoted string split across lines
#538: FILE: fs/squashfs/inode.c:474:
+					ERROR("Failed to allocate fragment "
+							"cache block\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#547: FILE: fs/squashfs/inode.c:483:
+			if (!(msBlk->fragment[i].length = squashfs_read_data(s,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: fs/squashfs/inode.c:484:
+			if (!(msBlk->fragment[i].length = squashfs_read_data(s,
+						msBlk->fragment[i].data,

WARNING:SPLIT_STRING: quoted string split across lines
#551: FILE: fs/squashfs/inode.c:487:
+				ERROR("Unable to read fragment cache block "
+							"[%x]\n", start_block);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#558: FILE: fs/squashfs/inode.c:494:
+			TRACE("New fragment %d, start block %d, locked %d\n",
+						i, msBlk->fragment[i].block,

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#563: FILE: fs/squashfs/inode.c:499:
+		msBlk->fragment[i].locked ++;
 		                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#566: FILE: fs/squashfs/inode.c:502:
+		TRACE("Got fragment %d, start block %d, locked %d\n", i,
+						msBlk->fragment[i].block,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#572: FILE: fs/squashfs/inode.c:508:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#574: FILE: fs/squashfs/inode.c:510:
+static struct inode *squashfs_new_inode(struct super_block *s,
+		squashfs_base_inode_header *inodeb, unsigned int ino)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#598: FILE: fs/squashfs/inode.c:534:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_iget', this function's name, in a string
#612: FILE: fs/squashfs/inode.c:548:
+	TRACE("Entered squashfs_iget\n");

CHECK:SPACING: No space is necessary after a cast
#617: FILE: fs/squashfs/inode.c:553:
+		if (!squashfs_get_cached_block(s, (char *) &sinodeb, block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#618: FILE: fs/squashfs/inode.c:554:
+		if (!squashfs_get_cached_block(s, (char *) &sinodeb, block,
+					offset, sizeof(sinodeb), &next_block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#622: FILE: fs/squashfs/inode.c:558:
+		SQUASHFS_SWAP_BASE_INODE_HEADER(&inodeb, &sinodeb,
+					sizeof(sinodeb));

CHECK:BRACES: Unbalanced braces around else statement
#623: FILE: fs/squashfs/inode.c:559:
+	} else

CHECK:SPACING: No space is necessary after a cast
#624: FILE: fs/squashfs/inode.c:560:
+		if (!squashfs_get_cached_block(s, (char *) &inodeb, block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#625: FILE: fs/squashfs/inode.c:561:
+		if (!squashfs_get_cached_block(s, (char *) &inodeb, block,
+					offset, sizeof(inodeb), &next_block,

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#629: FILE: fs/squashfs/inode.c:565:
+	switch(inodeb.inode_type) {
[...]
+		 case SQUASHFS_BLKDEV_TYPE:
[...]
+		 case SQUASHFS_FIFO_TYPE:
[...]
+		 default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#629: FILE: fs/squashfs/inode.c:565:
+	switch(inodeb.inode_type) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#633: FILE: fs/squashfs/inode.c:569:
+^I^I^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#643: FILE: fs/squashfs/inode.c:579:
+				SQUASHFS_SWAP_REG_INODE_HEADER(&inodep,
+								&sinodep);

CHECK:BRACES: Unbalanced braces around else statement
#644: FILE: fs/squashfs/inode.c:580:
+			} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#653: FILE: fs/squashfs/inode.c:589:
+			if (inodep.fragment != SQUASHFS_INVALID_BLK &&
+					!get_fragment_location(s,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#656: FILE: fs/squashfs/inode.c:592:
+^I^I^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#657: FILE: fs/squashfs/inode.c:593:
+			if((i = squashfs_new_inode(s, &inodeb, ino)) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#657: FILE: fs/squashfs/inode.c:593:
+			if((i = squashfs_new_inode(s, &inodeb, ino)) == NULL)

WARNING:SPLIT_STRING: quoted string split across lines
#680: FILE: fs/squashfs/inode.c:616:
+			TRACE("File inode %x:%x, start_block %x, "
+					"block_list_start %x, offset %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#698: FILE: fs/squashfs/inode.c:634:
+				SQUASHFS_SWAP_DIR_INODE_HEADER(&inodep,
+								&sinodep);

CHECK:BRACES: Unbalanced braces around else statement
#699: FILE: fs/squashfs/inode.c:635:
+			} else

ERROR:SPACING: space required before the open parenthesis '('
#706: FILE: fs/squashfs/inode.c:642:
+			if((i = squashfs_new_inode(s, &inodeb, ino)) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#706: FILE: fs/squashfs/inode.c:642:
+			if((i = squashfs_new_inode(s, &inodeb, ino)) == NULL)

WARNING:SPLIT_STRING: quoted string split across lines
#721: FILE: fs/squashfs/inode.c:657:
+			TRACE("Directory inode %x:%x, start_block %x, offset "
+					"%x\n", SQUASHFS_INODE_BLK(inode),

CHECK:BRACES: Unbalanced braces around else statement
#739: FILE: fs/squashfs/inode.c:675:
+			} else

ERROR:SPACING: space required before the open parenthesis '('
#746: FILE: fs/squashfs/inode.c:682:
+			if((i = squashfs_new_inode(s, &inodeb, ino)) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#746: FILE: fs/squashfs/inode.c:682:
+			if((i = squashfs_new_inode(s, &inodeb, ino)) == NULL)

WARNING:SPLIT_STRING: quoted string split across lines
#765: FILE: fs/squashfs/inode.c:701:
+			TRACE("Long directory inode %x:%x, start_block %x, "
+					"offset %x\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#772: FILE: fs/squashfs/inode.c:708:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#782: FILE: fs/squashfs/inode.c:718:
+				SQUASHFS_SWAP_SYMLINK_INODE_HEADER(&inodep,
+								&sinodep);

CHECK:BRACES: Unbalanced braces around else statement
#783: FILE: fs/squashfs/inode.c:719:
+			} else

ERROR:SPACING: space required before the open parenthesis '('
#790: FILE: fs/squashfs/inode.c:726:
+			if((i = squashfs_new_inode(s, &inodeb, ino)) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#790: FILE: fs/squashfs/inode.c:726:
+			if((i = squashfs_new_inode(s, &inodeb, ino)) == NULL)

WARNING:SPLIT_STRING: quoted string split across lines
#801: FILE: fs/squashfs/inode.c:737:
+			TRACE("Symbolic link inode %x:%x, start_block %x, "
+					"offset %x\n",

WARNING:TABSTOP: Statements should start on a tabstop
#805: FILE: fs/squashfs/inode.c:741:
+		 }

WARNING:TABSTOP: Statements should start on a tabstop
#806: FILE: fs/squashfs/inode.c:742:
+		 case SQUASHFS_BLKDEV_TYPE:

WARNING:TABSTOP: Statements should start on a tabstop
#807: FILE: fs/squashfs/inode.c:743:
+		 case SQUASHFS_CHRDEV_TYPE: {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#819: FILE: fs/squashfs/inode.c:755:
+				SQUASHFS_SWAP_DEV_INODE_HEADER(&inodep,
+					&sinodep);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#820: FILE: fs/squashfs/inode.c:756:
+^I^I^I} else^I$

CHECK:BRACES: Unbalanced braces around else statement
#820: FILE: fs/squashfs/inode.c:756:
+			} else	

ERROR:SPACING: space required before the open parenthesis '('
#827: FILE: fs/squashfs/inode.c:763:
+			if((i = squashfs_new_inode(s, &inodeb, ino)) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#827: FILE: fs/squashfs/inode.c:763:
+			if((i = squashfs_new_inode(s, &inodeb, ino)) == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#834: FILE: fs/squashfs/inode.c:770:
+			init_special_inode(i, i->i_mode,
+					old_decode_dev(inodep.rdev));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#837: FILE: fs/squashfs/inode.c:773:
+			TRACE("Device inode %x:%x, rdev %x\n",
+					SQUASHFS_INODE_BLK(inode), offset,

WARNING:TABSTOP: Statements should start on a tabstop
#840: FILE: fs/squashfs/inode.c:776:
+		 }

WARNING:TABSTOP: Statements should start on a tabstop
#841: FILE: fs/squashfs/inode.c:777:
+		 case SQUASHFS_FIFO_TYPE:

WARNING:TABSTOP: Statements should start on a tabstop
#842: FILE: fs/squashfs/inode.c:778:
+		 case SQUASHFS_SOCKET_TYPE: {

ERROR:SPACING: space required before the open parenthesis '('
#843: FILE: fs/squashfs/inode.c:779:
+			if((i = squashfs_new_inode(s, &inodeb, ino)) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#843: FILE: fs/squashfs/inode.c:779:
+			if((i = squashfs_new_inode(s, &inodeb, ino)) == NULL)

WARNING:TABSTOP: Statements should start on a tabstop
#849: FILE: fs/squashfs/inode.c:785:
+		 }

WARNING:TABSTOP: Statements should start on a tabstop
#850: FILE: fs/squashfs/inode.c:786:
+		 default:

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_iget', this function's name, in a string
#851: FILE: fs/squashfs/inode.c:787:
+			ERROR("Unknown inode type %d in squashfs_iget!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#852: FILE: fs/squashfs/inode.c:788:
+			ERROR("Unknown inode type %d in squashfs_iget!\n",
+					inodeb.inode_type);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#855: FILE: fs/squashfs/inode.c:791:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#866: FILE: fs/squashfs/inode.c:802:
+
+

WARNING:SPLIT_STRING: quoted string split across lines
#874: FILE: fs/squashfs/inode.c:810:
+			SERROR("Major/Minor mismatch, Squashfs 1.0 filesystems "
+				"are unsupported\n");

WARNING:SPLIT_STRING: quoted string split across lines
#876: FILE: fs/squashfs/inode.c:812:
+			SERROR("Please recompile with "
+				"Squashfs 1.0 support enabled\n");

ERROR:SPACING: space required before the open parenthesis '('
#879: FILE: fs/squashfs/inode.c:815:
+	} else if(sBlk->s_major != SQUASHFS_MAJOR || sBlk->s_minor >

WARNING:SPLIT_STRING: quoted string split across lines
#882: FILE: fs/squashfs/inode.c:818:
+		SERROR("Major/Minor mismatch, trying to mount newer %d.%d "
+				"filesystem\n", sBlk->s_major, sBlk->s_minor);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#885: FILE: fs/squashfs/inode.c:821:
+		return 0;
+	} else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#893: FILE: fs/squashfs/inode.c:829:
+
+

CHECK:SPACING: No space is necessary after a cast
#904: FILE: fs/squashfs/inode.c:840:
+	if (!(s->s_fs_info = (void *) kmalloc(sizeof(squashfs_sb_info),

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#904: FILE: fs/squashfs/inode.c:840:
+	if (!(s->s_fs_info = (void *) kmalloc(sizeof(squashfs_sb_info),

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#904: FILE: fs/squashfs/inode.c:840:
+	if (!(s->s_fs_info = (void *) kmalloc(sizeof(squashfs_sb_info),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#905: FILE: fs/squashfs/inode.c:841:
+	if (!(s->s_fs_info = (void *) kmalloc(sizeof(squashfs_sb_info),
+						GFP_KERNEL))) {

CHECK:SPACING: No space is necessary after a cast
#910: FILE: fs/squashfs/inode.c:846:
+	msBlk = (squashfs_sb_info *) s->s_fs_info;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#912: FILE: fs/squashfs/inode.c:848:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#919: FILE: fs/squashfs/inode.c:855:
+^I$

CHECK:SPACING: No space is necessary after a cast
#923: FILE: fs/squashfs/inode.c:859:
+	if (!squashfs_read_data(s, (char *) sBlk, SQUASHFS_START,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#924: FILE: fs/squashfs/inode.c:860:
+	if (!squashfs_read_data(s, (char *) sBlk, SQUASHFS_START,
+					sizeof(squashfs_super_block) |

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#932: FILE: fs/squashfs/inode.c:868:
+	if ((s->s_magic = sBlk->s_magic) != SQUASHFS_MAGIC) {

WARNING:SPLIT_STRING: quoted string split across lines
#937: FILE: fs/squashfs/inode.c:873:
+			WARNING("Mounting a different endian SQUASHFS "
+				"filesystem on %s\n", bdevname(s->s_bdev, b));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#944: FILE: fs/squashfs/inode.c:880:
+			SERROR("Can't find a SQUASHFS superblock on %s\n",
+							bdevname(s->s_bdev, b));

ERROR:SPACING: space required before the open parenthesis '('
#950: FILE: fs/squashfs/inode.c:886:
+	if(!supported_squashfs_filesystem(msBlk, silent))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#955: FILE: fs/squashfs/inode.c:891:
+	TRACE("Inodes are %scompressed\n",
+					SQUASHFS_UNCOMPRESSED_INODES

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#958: FILE: fs/squashfs/inode.c:894:
+	TRACE("Data is %scompressed\n",
+					SQUASHFS_UNCOMPRESSED_DATA(sBlk->flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#961: FILE: fs/squashfs/inode.c:897:
+	TRACE("Check data is %s present in the filesystem\n",
+					SQUASHFS_CHECK_DATA(sBlk->flags) ?

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#974: FILE: fs/squashfs/inode.c:910:
+		TRACE("sBlk->fragment_table_start %x\n",
+					sBlk->fragment_table_start);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#981: FILE: fs/squashfs/inode.c:917:
+	if (!(msBlk->block_cache = (squashfs_cache *)

CHECK:SPACING: No space is necessary after a cast
#998: FILE: fs/squashfs/inode.c:934:
+	if (!(msBlk->read_data = (char *) kmalloc(msBlk->read_size,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#998: FILE: fs/squashfs/inode.c:934:
+	if (!(msBlk->read_data = (char *) kmalloc(msBlk->read_size,

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#998: FILE: fs/squashfs/inode.c:934:
+	if (!(msBlk->read_data = (char *) kmalloc(msBlk->read_size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#999: FILE: fs/squashfs/inode.c:935:
+	if (!(msBlk->read_data = (char *) kmalloc(msBlk->read_size,
+					GFP_KERNEL))) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1005: FILE: fs/squashfs/inode.c:941:
+	if (sBlk->block_size > PAGE_CACHE_SIZE) {
[...]
+	} else
[...]

CHECK:SPACING: No space is necessary after a cast
#1006: FILE: fs/squashfs/inode.c:942:
+		if (!(msBlk->read_page = (char *) kmalloc(sBlk->block_size,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1006: FILE: fs/squashfs/inode.c:942:
+		if (!(msBlk->read_page = (char *) kmalloc(sBlk->block_size,

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1006: FILE: fs/squashfs/inode.c:942:
+		if (!(msBlk->read_page = (char *) kmalloc(sBlk->block_size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1007: FILE: fs/squashfs/inode.c:943:
+		if (!(msBlk->read_page = (char *) kmalloc(sBlk->block_size,
+					GFP_KERNEL))) {

CHECK:BRACES: Unbalanced braces around else statement
#1011: FILE: fs/squashfs/inode.c:947:
+	} else

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1015: FILE: fs/squashfs/inode.c:951:
+	if (!(msBlk->uid = (squashfs_uid *) kmalloc((sBlk->no_uids +

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1015: FILE: fs/squashfs/inode.c:951:
+	if (!(msBlk->uid = (squashfs_uid *) kmalloc((sBlk->no_uids +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1022: FILE: fs/squashfs/inode.c:958:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1022: FILE: fs/squashfs/inode.c:958:
+   $

CHECK:SPACING: No space is necessary after a cast
#1026: FILE: fs/squashfs/inode.c:962:
+		if (!squashfs_read_data(s, (char *) &suid, sBlk->uid_start,

CHECK:BRACES: Unbalanced braces around else statement
#1036: FILE: fs/squashfs/inode.c:972:
+	} else

CHECK:SPACING: No space is necessary after a cast
#1037: FILE: fs/squashfs/inode.c:973:
+		if (!squashfs_read_data(s, (char *) msBlk->uid, sBlk->uid_start,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1045: FILE: fs/squashfs/inode.c:981:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1049: FILE: fs/squashfs/inode.c:985:
+	if (!(msBlk->fragment = (struct squashfs_fragment_cache *)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sBlk->fragments'
#1067: FILE: fs/squashfs/inode.c:1003:
+	if (!(msBlk->fragment_index = (squashfs_fragment_index *)
+					kmalloc(SQUASHFS_FRAGMENT_INDEX_BYTES
+					(sBlk->fragments), GFP_KERNEL))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1067: FILE: fs/squashfs/inode.c:1003:
+	if (!(msBlk->fragment_index = (squashfs_fragment_index *)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1073: FILE: fs/squashfs/inode.c:1009:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1073: FILE: fs/squashfs/inode.c:1009:
+   $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sBlk->fragments'
#1074: FILE: fs/squashfs/inode.c:1010:
+	if (SQUASHFS_FRAGMENT_INDEX_BYTES(sBlk->fragments) &&
+					!squashfs_read_data(s, (char *)
+					msBlk->fragment_index,
+					sBlk->fragment_table_start,
+					SQUASHFS_FRAGMENT_INDEX_BYTES
+					(sBlk->fragments) |
+					SQUASHFS_COMPRESSED_BIT_BLOCK, NULL)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1075: FILE: fs/squashfs/inode.c:1011:
+	if (SQUASHFS_FRAGMENT_INDEX_BYTES(sBlk->fragments) &&
+					!squashfs_read_data(s, (char *)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1092: FILE: fs/squashfs/inode.c:1028:
+			SQUASHFS_SWAP_FRAGMENT_INDEXES((&fragment),
+						&msBlk->fragment_index[i], 1);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (msBlk->iget)
#1098: FILE: fs/squashfs/inode.c:1034:
+	if ((root = (msBlk->iget)(s, sBlk->root_inode)) == NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msBlk->iget'
#1098: FILE: fs/squashfs/inode.c:1034:
+	if ((root = (msBlk->iget)(s, sBlk->root_inode)) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1098: FILE: fs/squashfs/inode.c:1034:
+	if ((root = (msBlk->iget)(s, sBlk->root_inode)) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1101: FILE: fs/squashfs/inode.c:1037:
+	if ((s->s_root = d_alloc_root(root)) == NULL) {

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1103: FILE: fs/squashfs/inode.c:1039:
+		iput(root);
 		^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1122: FILE: fs/squashfs/inode.c:1058:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_statfs', this function's name, in a string
#1127: FILE: fs/squashfs/inode.c:1063:
+	TRACE("Entered squashfs_statfs\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1132: FILE: fs/squashfs/inode.c:1068:
+	buf->f_bfree = buf->f_bavail = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1140: FILE: fs/squashfs/inode.c:1076:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_symlink_readpage', this function's name, in a string
#1149: FILE: fs/squashfs/inode.c:1085:
+	TRACE("Entered squashfs_symlink_readpage, page index %d, start block "

WARNING:SPLIT_STRING: quoted string split across lines
#1150: FILE: fs/squashfs/inode.c:1086:
+	TRACE("Entered squashfs_symlink_readpage, page index %d, start block "
+				"%x, offset %x\n", page->index,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1155: FILE: fs/squashfs/inode.c:1091:
+		if (!(bytes = squashfs_get_cached_block(inode->i_sb, NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1156: FILE: fs/squashfs/inode.c:1092:
+		if (!(bytes = squashfs_get_cached_block(inode->i_sb, NULL,
+				block, offset, PAGE_CACHE_SIZE, &block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1159: FILE: fs/squashfs/inode.c:1095:
+			ERROR("Unable to read symbolic link [%x:%x]\n", block,
+					offset);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_symlink_readpage', this function's name, in a string
#1165: FILE: fs/squashfs/inode.c:1101:
+		ERROR("(squashfs_symlink_readpage) length != index\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1173: FILE: fs/squashfs/inode.c:1109:
+	if (!(bytes = squashfs_get_cached_block(inode->i_sb, pageaddr, block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1174: FILE: fs/squashfs/inode.c:1110:
+	if (!(bytes = squashfs_get_cached_block(inode->i_sb, pageaddr, block,
+					offset, bytes, &block, &offset)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1187: FILE: fs/squashfs/inode.c:1123:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1191: FILE: fs/squashfs/inode.c:1127:
+static unsigned int read_blocklist(struct inode *inode, int index,
+				int readahead_blks, char *block_list,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1203: FILE: fs/squashfs/inode.c:1139:
+		int blocks = (index + readahead_blks - i);
+		if (blocks > (SIZE >> 2)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1218: FILE: fs/squashfs/inode.c:1154:
+				ERROR("Unable to read block list [%d:%x]\n",
+					block_ptr, offset);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1222: FILE: fs/squashfs/inode.c:1158:
+			SQUASHFS_SWAP_INTS(((unsigned int *)block_list),
+					((unsigned int *)sblock_list), blocks);

CHECK:BRACES: Unbalanced braces around else statement
#1223: FILE: fs/squashfs/inode.c:1159:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1229: FILE: fs/squashfs/inode.c:1165:
+				ERROR("Unable to read block list [%d:%x]\n",
+					block_ptr, offset);

CHECK:SPACING: No space is necessary after a cast
#1233: FILE: fs/squashfs/inode.c:1169:
+		for (block_listp = (unsigned int *) block_list; i < index &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1234: FILE: fs/squashfs/inode.c:1170:
+		for (block_listp = (unsigned int *) block_list; i < index &&
+					blocks; i ++, block_listp ++, blocks --)

ERROR:SPACING: space prohibited before that '--' (ctx:WxB)
#1234: FILE: fs/squashfs/inode.c:1170:
+					blocks; i ++, block_listp ++, blocks --)
 					                                     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1245: FILE: fs/squashfs/inode.c:1181:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1254: FILE: fs/squashfs/inode.c:1190:
+ ^Ivoid *pageaddr = kmap(page);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1254: FILE: fs/squashfs/inode.c:1190:
+ ^Ivoid *pageaddr = kmap(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1254: FILE: fs/squashfs/inode.c:1190:
+ ^Ivoid *pageaddr = kmap(page);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1257: FILE: fs/squashfs/inode.c:1193:
+^I$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_readpage', this function's name, in a string
#1262: FILE: fs/squashfs/inode.c:1198:
+	TRACE("Entered squashfs_readpage, page index %x, start block %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1263: FILE: fs/squashfs/inode.c:1199:
+	TRACE("Entered squashfs_readpage, page index %x, start block %x\n",
+					(unsigned int) page->index,

CHECK:SPACING: No space is necessary after a cast
#1263: FILE: fs/squashfs/inode.c:1199:
+					(unsigned int) page->index,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1272: FILE: fs/squashfs/inode.c:1208:
+	if (SQUASHFS_I(inode)->u.s1.fragment_start_block == SQUASHFS_INVALID_BLK
+					|| index < (inode->i_size >>

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (msBlk->read_blocklist)
#1274: FILE: fs/squashfs/inode.c:1210:
+		if ((block = (msBlk->read_blocklist)(inode, index, 1,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msBlk->read_blocklist'
#1274: FILE: fs/squashfs/inode.c:1210:
+		if ((block = (msBlk->read_blocklist)(inode, index, 1,
+					block_list, NULL, &bsize)) == 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1274: FILE: fs/squashfs/inode.c:1210:
+		if ((block = (msBlk->read_blocklist)(inode, index, 1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1275: FILE: fs/squashfs/inode.c:1211:
+		if ((block = (msBlk->read_blocklist)(inode, index, 1,
+					block_list, NULL, &bsize)) == 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1279: FILE: fs/squashfs/inode.c:1215:
+^I^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1280: FILE: fs/squashfs/inode.c:1216:
+		if (!(bytes = squashfs_read_data(inode->i_sb, msBlk->read_page,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1281: FILE: fs/squashfs/inode.c:1217:
+		if (!(bytes = squashfs_read_data(inode->i_sb, msBlk->read_page,
+					block, bsize, NULL))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1283: FILE: fs/squashfs/inode.c:1219:
+			ERROR("Unable to read page, block %x, size %x\n", block,
+					bsize);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1288: FILE: fs/squashfs/inode.c:1224:
+		if ((fragment = get_cached_fragment(inode->i_sb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1289: FILE: fs/squashfs/inode.c:1225:
+		if ((fragment = get_cached_fragment(inode->i_sb,
+					SQUASHFS_I(inode)->

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1294: FILE: fs/squashfs/inode.c:1230:
+			ERROR("Unable to read page, block %x, size %x\n",
+					SQUASHFS_I(inode)->

CHECK:SPACING: No space is necessary after a cast
#1296: FILE: fs/squashfs/inode.c:1232:
+					(int) SQUASHFS_I(inode)->

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1314: FILE: fs/squashfs/inode.c:1250:
+		TRACE("bytes %d, i %d, byte_offset %d, available_bytes %d\n",
+					bytes, i, byte_offset, available_bytes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1318: FILE: fs/squashfs/inode.c:1254:
+			memcpy(pageaddr, data_ptr + byte_offset,
+					available_bytes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1320: FILE: fs/squashfs/inode.c:1256:
+			memset(pageaddr + available_bytes, 0,
+					PAGE_CACHE_SIZE - available_bytes);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1325: FILE: fs/squashfs/inode.c:1261:
+		} else if ((push_page =

ERROR:CODE_INDENT: code indent should use tabs where possible
#1327: FILE: fs/squashfs/inode.c:1263:
+ ^I^I^Ivoid *pageaddr = kmap(push_page);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1327: FILE: fs/squashfs/inode.c:1263:
+ ^I^I^Ivoid *pageaddr = kmap(push_page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1327: FILE: fs/squashfs/inode.c:1263:
+ ^I^I^Ivoid *pageaddr = kmap(push_page);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1330: FILE: fs/squashfs/inode.c:1266:
+			memcpy(pageaddr, data_ptr + byte_offset,
+					available_bytes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1332: FILE: fs/squashfs/inode.c:1268:
+			memset(pageaddr + available_bytes, 0,
+					PAGE_CACHE_SIZE - available_bytes);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1342: FILE: fs/squashfs/inode.c:1278:
+	if (SQUASHFS_I(inode)->u.s1.fragment_start_block == SQUASHFS_INVALID_BLK
+					|| index < (inode->i_size >>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1360: FILE: fs/squashfs/inode.c:1296:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1368: FILE: fs/squashfs/inode.c:1304:
+ ^Ivoid *pageaddr = kmap(page);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1368: FILE: fs/squashfs/inode.c:1304:
+ ^Ivoid *pageaddr = kmap(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1368: FILE: fs/squashfs/inode.c:1304:
+ ^Ivoid *pageaddr = kmap(page);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1369: FILE: fs/squashfs/inode.c:1305:
+^I$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_readpage4K', this function's name, in a string
#1370: FILE: fs/squashfs/inode.c:1306:
+	TRACE("Entered squashfs_readpage4K, page index %x, start block %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1371: FILE: fs/squashfs/inode.c:1307:
+	TRACE("Entered squashfs_readpage4K, page index %x, start block %x\n",
+					(unsigned int) page->index,

CHECK:SPACING: No space is necessary after a cast
#1371: FILE: fs/squashfs/inode.c:1307:
+					(unsigned int) page->index,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1380: FILE: fs/squashfs/inode.c:1316:
+	if (SQUASHFS_I(inode)->u.s1.fragment_start_block == SQUASHFS_INVALID_BLK
+					|| page->index < (inode->i_size >>

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (msBlk->read_blocklist)
#1382: FILE: fs/squashfs/inode.c:1318:
+		block = (msBlk->read_blocklist)(inode, page->index, 1,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1385: FILE: fs/squashfs/inode.c:1321:
+		if (!(bytes = squashfs_read_data(inode->i_sb, pageaddr, block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1386: FILE: fs/squashfs/inode.c:1322:
+		if (!(bytes = squashfs_read_data(inode->i_sb, pageaddr, block,
+					bsize, NULL)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1388: FILE: fs/squashfs/inode.c:1324:
+			ERROR("Unable to read page, block %x, size %x\n",
+					block, bsize);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1392: FILE: fs/squashfs/inode.c:1328:
+		if ((fragment = get_cached_fragment(inode->i_sb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1393: FILE: fs/squashfs/inode.c:1329:
+		if ((fragment = get_cached_fragment(inode->i_sb,
+					SQUASHFS_I(inode)->

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#1395: FILE: fs/squashfs/inode.c:1331:
+					SQUASHFS_I(inode)-> u.s1.fragment_size))
 					                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1398: FILE: fs/squashfs/inode.c:1334:
+			ERROR("Unable to read page, block %x, size %x\n",
+					SQUASHFS_I(inode)->

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#1400: FILE: fs/squashfs/inode.c:1336:
+					SQUASHFS_I(inode)-> u.s1.fragment_size);
 					                 ^

CHECK:BRACES: Unbalanced braces around else statement
#1401: FILE: fs/squashfs/inode.c:1337:
+		else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1419: FILE: fs/squashfs/inode.c:1355:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_dir_index_using_offset', this function's name, in a string
#1431: FILE: fs/squashfs/inode.c:1367:
+	TRACE("Entered get_dir_index_using_offset, i_count %d, f_pos %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1432: FILE: fs/squashfs/inode.c:1368:
+	TRACE("Entered get_dir_index_using_offset, i_count %d, f_pos %d\n",
+					i_count, (unsigned int) f_pos);

CHECK:SPACING: No space is necessary after a cast
#1432: FILE: fs/squashfs/inode.c:1368:
+					i_count, (unsigned int) f_pos);

CHECK:SPACING: No space is necessary after a cast
#1440: FILE: fs/squashfs/inode.c:1376:
+			squashfs_get_cached_block(s, (char *) &sindex,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1440: FILE: fs/squashfs/inode.c:1376:
+			squashfs_dir_index sindex;
+			squashfs_get_cached_block(s, (char *) &sindex,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1441: FILE: fs/squashfs/inode.c:1377:
+			squashfs_get_cached_block(s, (char *) &sindex,
+					index_start, index_offset,

CHECK:BRACES: Unbalanced braces around else statement
#1445: FILE: fs/squashfs/inode.c:1381:
+		} else

CHECK:SPACING: No space is necessary after a cast
#1446: FILE: fs/squashfs/inode.c:1382:
+			squashfs_get_cached_block(s, (char *) &index,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1447: FILE: fs/squashfs/inode.c:1383:
+			squashfs_get_cached_block(s, (char *) &index,
+					index_start, index_offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1455: FILE: fs/squashfs/inode.c:1391:
+		squashfs_get_cached_block(s, NULL, index_start, index_offset,
+					index.size + 1, &index_start,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1466: FILE: fs/squashfs/inode.c:1402:
+
+

CHECK:SPACING: No space is necessary after a cast
#1477: FILE: fs/squashfs/inode.c:1413:
+	squashfs_dir_index *index = (squashfs_dir_index *) buffer;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_dir_index_using_name', this function's name, in a string
#1480: FILE: fs/squashfs/inode.c:1416:
+	TRACE("Entered get_dir_index_using_name, i_count %d\n", i_count);

CHECK:SPACING: No space is necessary after a cast
#1488: FILE: fs/squashfs/inode.c:1424:
+			squashfs_get_cached_block(s, (char *) &sindex,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1488: FILE: fs/squashfs/inode.c:1424:
+			squashfs_dir_index sindex;
+			squashfs_get_cached_block(s, (char *) &sindex,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1489: FILE: fs/squashfs/inode.c:1425:
+			squashfs_get_cached_block(s, (char *) &sindex,
+					index_start, index_offset,

CHECK:BRACES: Unbalanced braces around else statement
#1493: FILE: fs/squashfs/inode.c:1429:
+		} else

CHECK:SPACING: No space is necessary after a cast
#1494: FILE: fs/squashfs/inode.c:1430:
+			squashfs_get_cached_block(s, (char *) index,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1495: FILE: fs/squashfs/inode.c:1431:
+			squashfs_get_cached_block(s, (char *) index,
+					index_start, index_offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1500: FILE: fs/squashfs/inode.c:1436:
+		squashfs_get_cached_block(s, index->name, index_start,
+					index_offset, index->size + 1,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1516: FILE: fs/squashfs/inode.c:1452:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1516: FILE: fs/squashfs/inode.c:1452:
+
+		

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_readdir', this function's name, in a string
#1530: FILE: fs/squashfs/inode.c:1466:
+	TRACE("Entered squashfs_readdir [%x:%x]\n", next_block, next_offset);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1533: FILE: fs/squashfs/inode.c:1469:
+	length = get_dir_index_using_offset(i->i_sb, &next_block, &next_offset,
+				SQUASHFS_I(i)->u.s2.directory_index_start,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1542: FILE: fs/squashfs/inode.c:1478:
+^I^I^I$

CHECK:SPACING: No space is necessary after a cast
#1543: FILE: fs/squashfs/inode.c:1479:
+			if (!squashfs_get_cached_block(i->i_sb, (char *) &sdirh,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1544: FILE: fs/squashfs/inode.c:1480:
+			if (!squashfs_get_cached_block(i->i_sb, (char *) &sdirh,
+					next_block, next_offset, sizeof(sdirh),

CHECK:SPACING: No space is necessary after a cast
#1551: FILE: fs/squashfs/inode.c:1487:
+			if (!squashfs_get_cached_block(i->i_sb, (char *) &dirh,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1552: FILE: fs/squashfs/inode.c:1488:
+			if (!squashfs_get_cached_block(i->i_sb, (char *) &dirh,
+					next_block, next_offset, sizeof(dirh),

WARNING:LINE_SPACING: Missing a blank line after declarations
#1563: FILE: fs/squashfs/inode.c:1499:
+				squashfs_dir_entry sdire;
+				if (!squashfs_get_cached_block(i->i_sb, (char *)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1568: FILE: fs/squashfs/inode.c:1504:
+^I^I^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1582: FILE: fs/squashfs/inode.c:1518:
+			if (!squashfs_get_cached_block(i->i_sb, dire->name,
+						next_block, next_offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1595: FILE: fs/squashfs/inode.c:1531:
+			TRACE("Calling filldir(%x, %s, %d, %d, %x:%x, %d)\n",
+					(unsigned int) dirent, dire->name,

CHECK:SPACING: No space is necessary after a cast
#1595: FILE: fs/squashfs/inode.c:1531:
+					(unsigned int) dirent, dire->name,

CHECK:SPACING: No space is necessary after a cast
#1596: FILE: fs/squashfs/inode.c:1532:
+					dire->size + 1, (int) file->f_pos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1601: FILE: fs/squashfs/inode.c:1537:
+			if (filldir(dirent, dire->name, dire->size + 1,
+					file->f_pos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1603: FILE: fs/squashfs/inode.c:1539:
+					SQUASHFS_MK_VFS_INODE(dirh.start_block,
+					dire->offset),

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1610: FILE: fs/squashfs/inode.c:1546:
+			dirs_read ++;
 			          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1618: FILE: fs/squashfs/inode.c:1554:
+	ERROR("Unable to read directory block [%x:%x]\n", next_block,
+		next_offset);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1622: FILE: fs/squashfs/inode.c:1558:
+
+

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1624: FILE: fs/squashfs/inode.c:1560:
+				struct nameidata *nd)
 				                  ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1624: FILE: fs/squashfs/inode.c:1560:
+static struct dentry *squashfs_lookup(struct inode *i, struct dentry *dentry,
+				struct nameidata *nd)

CHECK:SPACING: No space is necessary after a cast
#1637: FILE: fs/squashfs/inode.c:1573:
+	squashfs_dir_entry *dire = (squashfs_dir_entry *) buffer;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_lookup', this function's name, in a string
#1640: FILE: fs/squashfs/inode.c:1576:
+	TRACE("Entered squashfs_lookup [%x:%x]\n", next_block, next_offset);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1643: FILE: fs/squashfs/inode.c:1579:
+	length = get_dir_index_using_name(i->i_sb, &next_block, &next_offset,
+				SQUASHFS_I(i)->u.s2.directory_index_start,

CHECK:SPACING: No space is necessary after a cast
#1652: FILE: fs/squashfs/inode.c:1588:
+			if (!squashfs_get_cached_block(i->i_sb, (char *) &sdirh,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1652: FILE: fs/squashfs/inode.c:1588:
+			squashfs_dir_header sdirh;
+			if (!squashfs_get_cached_block(i->i_sb, (char *) &sdirh,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1653: FILE: fs/squashfs/inode.c:1589:
+			if (!squashfs_get_cached_block(i->i_sb, (char *) &sdirh,
+					next_block, next_offset, sizeof(sdirh),

CHECK:SPACING: No space is necessary after a cast
#1660: FILE: fs/squashfs/inode.c:1596:
+			if (!squashfs_get_cached_block(i->i_sb, (char *) &dirh,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1661: FILE: fs/squashfs/inode.c:1597:
+			if (!squashfs_get_cached_block(i->i_sb, (char *) &dirh,
+					next_block, next_offset, sizeof(dirh),

WARNING:LINE_SPACING: Missing a blank line after declarations
#1672: FILE: fs/squashfs/inode.c:1608:
+				squashfs_dir_entry sdire;
+				if (!squashfs_get_cached_block(i->i_sb, (char *)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1673: FILE: fs/squashfs/inode.c:1609:
+						&sdire, next_block,next_offset,
 						                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1677: FILE: fs/squashfs/inode.c:1613:
+^I^I^I^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1682: FILE: fs/squashfs/inode.c:1618:
+						dire, next_block,next_offset,
 						                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1691: FILE: fs/squashfs/inode.c:1627:
+			if (!squashfs_get_cached_block(i->i_sb, dire->name,
+					next_block, next_offset, dire->size + 1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1701: FILE: fs/squashfs/inode.c:1637:
+			if ((len == dire->size + 1) && !strncmp(name,
+						dire->name, len)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1704: FILE: fs/squashfs/inode.c:1640:
+					SQUASHFS_MKINODE(dirh.start_block,
+					dire->offset);

WARNING:SPLIT_STRING: quoted string split across lines
#1707: FILE: fs/squashfs/inode.c:1643:
+				TRACE("calling squashfs_iget for directory "
+					"entry %s, inode %x:%x\n", name,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (msBlk->iget)
#1710: FILE: fs/squashfs/inode.c:1646:
+				inode = (msBlk->iget)(i->i_sb, ino);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1723: FILE: fs/squashfs/inode.c:1659:
+	ERROR("Unable to read directory block [%x:%x]\n", next_block,
+		next_offset);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1727: FILE: fs/squashfs/inode.c:1663:
+
+

CHECK:SPACING: No space is necessary after a cast
#1733: FILE: fs/squashfs/inode.c:1669:
+		squashfs_sb_info *sbi = (squashfs_sb_info *) s->s_fs_info;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1734: FILE: fs/squashfs/inode.c:1670:
+		squashfs_sb_info *sbi = (squashfs_sb_info *) s->s_fs_info;
+		if (sbi->block_cache)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1740: FILE: fs/squashfs/inode.c:1676:
+^I^I^Ifor (i = 0; i < SQUASHFS_CACHED_FRAGMENTS; i++) $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1753: FILE: fs/squashfs/inode.c:1689:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1755: FILE: fs/squashfs/inode.c:1691:
+static struct super_block *squashfs_get_sb(struct file_system_type *fs_type,
+				int flags, const char *dev_name, void *data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1760: FILE: fs/squashfs/inode.c:1696:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1764: FILE: fs/squashfs/inode.c:1700:
+	int err = init_inodecache();
+	if (err)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1767: FILE: fs/squashfs/inode.c:1703:
+	printk(KERN_INFO "squashfs: version 2.1 (2005/03/14) "

WARNING:SPLIT_STRING: quoted string split across lines
#1768: FILE: fs/squashfs/inode.c:1704:
+	printk(KERN_INFO "squashfs: version 2.1 (2005/03/14) "
+		"Phillip Lougher\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1770: FILE: fs/squashfs/inode.c:1706:
+	if (!(stream.workspace = (char *)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1777: FILE: fs/squashfs/inode.c:1713:
+	if ((err = register_filesystem(&squashfs_fs_type))) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1785: FILE: fs/squashfs/inode.c:1721:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1793: FILE: fs/squashfs/inode.c:1729:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1794: FILE: fs/squashfs/inode.c:1730:
+static kmem_cache_t * squashfs_inode_cachep;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1796: FILE: fs/squashfs/inode.c:1732:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1800: FILE: fs/squashfs/inode.c:1736:
+	struct squashfs_inode_info *ei;
+	ei = (struct squashfs_inode_info *)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1807: FILE: fs/squashfs/inode.c:1743:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1813: FILE: fs/squashfs/inode.c:1749:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1814: FILE: fs/squashfs/inode.c:1750:
+static void init_once(void * foo, kmem_cache_t * cachep, unsigned long flags)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1814: FILE: fs/squashfs/inode.c:1750:
+static void init_once(void * foo, kmem_cache_t * cachep, unsigned long flags)

CHECK:SPACING: No space is necessary after a cast
#1816: FILE: fs/squashfs/inode.c:1752:
+	struct squashfs_inode_info *ei = (struct squashfs_inode_info *) foo;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1818: FILE: fs/squashfs/inode.c:1754:
+	if ((flags & (SLAB_CTOR_VERIFY|SLAB_CTOR_CONSTRUCTOR)) ==
 	                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1822: FILE: fs/squashfs/inode.c:1758:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1822: FILE: fs/squashfs/inode.c:1758:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1823: FILE: fs/squashfs/inode.c:1759:
+ 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1827: FILE: fs/squashfs/inode.c:1763:
+	squashfs_inode_cachep = kmem_cache_create("squashfs_inode_cache",
+	     sizeof(struct squashfs_inode_info),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1828: FILE: fs/squashfs/inode.c:1764:
+	     0, SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT,
 	                          ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!squashfs_inode_cachep"
#1830: FILE: fs/squashfs/inode.c:1766:
+	if (squashfs_inode_cachep == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1835: FILE: fs/squashfs/inode.c:1771:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1839: FILE: fs/squashfs/inode.c:1775:
+		printk(KERN_INFO "squashfs_inode_cache: not all structures "

WARNING:SPLIT_STRING: quoted string split across lines
#1840: FILE: fs/squashfs/inode.c:1776:
+		printk(KERN_INFO "squashfs_inode_cache: not all structures "
+			"were freed\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1843: FILE: fs/squashfs/inode.c:1779:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000199208.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 99 errors, 75 warnings, 204 checks, 1784 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000199208.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
