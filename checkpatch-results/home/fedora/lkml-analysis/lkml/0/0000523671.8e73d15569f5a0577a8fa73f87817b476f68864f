WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
I think corrects the problems identified earlier and should serve as the base

WARNING:TYPO_SPELLING: 'atached' may be misspelled - perhaps 'attached'?
#55: 
this (and that's in the atached whole patch)
                        ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#57: 
@@ -229,8 +233,11 @@

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#138: FILE: Makefile:4:
+EXTRAVERSION = -ca
 ^^^^^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#149: FILE: kernel/sched.c:100:
+		struct task_struct * resched;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#154: FILE: kernel/sched.c:104:
+} aligned_data [NR_CPUS] __cacheline_aligned = { {{&init_task,0,0}}};

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: kernel/sched.c:104:
+} aligned_data [NR_CPUS] __cacheline_aligned = { {{&init_task,0,0}}};
                                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: kernel/sched.c:104:
+} aligned_data [NR_CPUS] __cacheline_aligned = { {{&init_task,0,0}}};
                                                                ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#154: FILE: kernel/sched.c:104:
+} aligned_data [NR_CPUS] __cacheline_aligned = { {{&init_task,0,0}}};

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#175: FILE: kernel/sched.c:224:
+		if ((cpu_curr(best_cpu) == tsk) &&
+		    (cpu_resched(best_cpu) == NULL))
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cpu_resched"
#176: FILE: kernel/sched.c:225:
+		    (cpu_resched(best_cpu) == NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'best_cpu != this_cpu'
#186: FILE: kernel/sched.c:236:
+			if ((best_cpu != this_cpu) && !need_resched) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#213: FILE: kernel/sched.c:269:
+		if (tsk == NULL)
 		tsk = cpu_curr(cpu);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tsk"
#213: FILE: kernel/sched.c:269:
+		if (tsk == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: kernel/sched.c:309:
+^I^I^Ip->has_cpu  = 1; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000523671.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 5 warnings, 3 checks, 131 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000523671.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
