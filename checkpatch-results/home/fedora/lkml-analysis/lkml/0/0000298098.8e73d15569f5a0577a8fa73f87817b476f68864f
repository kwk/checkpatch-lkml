WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#87: 
//  EXTRAVERSION =-rc1-mm2
    ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space prohibited before that close parenthesis ')'
#203: FILE: ipc/mqueue.c:309:
+			(info->notify.sigev_notify == SIGEV_SIGNAL ) ?

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: ipc/mqueue.c:338:
+	if (info->notify.sigev_notify != SIGEV_NONE &&
+			current->tgid == info->notify_owner)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#236: FILE: ipc/mqueue.c:473:
+	if (info->notify.sigev_notify != SIGEV_NONE &&
+			info->attr.mq_curmsgs == 1) {

ERROR:SPACING: space required before the open parenthesis '('
#294: FILE: ipc/mqueue.c:592:
+	while(count && !list_empty(&info->pending)) {

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#309: FILE: ipc/mqueue.c:607:
+			count -=len;
 			      ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#326: FILE: ipc/mqueue.c:618:
+static void wait_notify_free(struct file *filp)
                                           ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: ipc/mqueue.c:1032:
+        return 1;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: ipc/mqueue.c:1032:
+        return 1;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#411: FILE: ipc/mqueue.c:1034:
+}
+static struct dentry_operations mqueue_notify_dops = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#411: FILE: ipc/mqueue.c:1034:
+static struct dentry_operations mqueue_notify_dops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#421: FILE: ipc/mqueue.c:1044:
+	struct inode * inode;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#422: FILE: ipc/mqueue.c:1045:
+	struct file *filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#431: FILE: ipc/mqueue.c:1054:
+	filp = get_empty_filp();
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#432: FILE: ipc/mqueue.c:1055:
+	if (!filp)
 	     ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#440: FILE: ipc/mqueue.c:1063:
+        inode->i_fop = &mqueue_notify_fops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: ipc/mqueue.c:1063:
+        inode->i_fop = &mqueue_notify_fops;$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#448: FILE: ipc/mqueue.c:1071:
+	inode->i_mode = S_IFIFO | S_IRUSR | S_IWUSR;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#451: FILE: ipc/mqueue.c:1074:
+	inode->i_atime = inode->i_mtime = inode->i_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#476: FILE: ipc/mqueue.c:1099:
+	fd_install(fd, filp);
 	               ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#478: FILE: ipc/mqueue.c:1101:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#480: FILE: ipc/mqueue.c:1103:
+	iput(inode);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#482: FILE: ipc/mqueue.c:1105:
+	put_filp(filp);
 	         ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!notification.sigev_value.sival_ptr"
#513: FILE: ipc/mqueue.c:1145:
+			if (notification.sigev_value.sival_ptr == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: ipc/mqueue.c:1164:
+				if (copy_from_user(nc->cookie,
+						notification.sigev_value.sival_ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#577: FILE: ipc/mqueue.c:1187:
+		if (info->notify.sigev_notify != SIGEV_NONE &&
+				info->notify_owner == current->tgid) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000298098.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 12 warnings, 7 checks, 534 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000298098.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
