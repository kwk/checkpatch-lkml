WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
--- ../linux.20rc1/drivers/sound/i810_audio.c	2002-11-10 17:09:55.000000000 +0000

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#35: FILE: sound/i810_audio.c:72:
+ *      The ICH4 has the feature, that the codec ID doesn't have to be $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#37: FILE: sound/i810_audio.c:74:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#40: FILE: sound/i810_audio.c:77:
+ *   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#41: FILE: sound/i810_audio.c:78:
+ *      Juergen "George" Sawinski (jsaw) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: sound/i810_audio.c:187:
+ * ICH4 has 6 dma engines, pcm in, pcm out, mic, pcm in 2, $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#79: FILE: sound/i810_audio.c:215:
+ENUM_ENGINE(MC2,4);     /* Mic In 2 */
                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#80: FILE: sound/i810_audio.c:216:
+ENUM_ENGINE(PI2,5);     /* PCM In 2 */
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#81: FILE: sound/i810_audio.c:217:
+ENUM_ENGINE(SP,6);      /* S/PDIF */
               ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's16' over 'int16_t'
#115: FILE: sound/i810_audio.c:288:
+	int16_t      nr_ac97;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#118: FILE: sound/i810_audio.c:291:
+	u_int16_t flags;

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: sound/i810_audio.c:298:
+        {  3, 0x0003 }, /* INTELICH4 */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: sound/i810_audio.c:298:
+        {  3, 0x0003 }, /* INTELICH4 */$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'u_int8_t'
#173: FILE: sound/i810_audio.c:441:
+	u_int8_t *ac97base_mmio;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'u_int8_t'
#174: FILE: sound/i810_audio.c:442:
+	u_int8_t *iobase_mmio;

CHECK:SPACING: No space is necessary after a cast
#185: FILE: sound/i810_audio.c:458:
+#define IO_REG_OFF(codec) (((struct i810_card *) codec->private_data)->ac97_id_map[codec->id])

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'codec' - possible side-effects?
#185: FILE: sound/i810_audio.c:458:
+#define IO_REG_OFF(codec) (((struct i810_card *) codec->private_data)->ac97_id_map[codec->id])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'codec' may be better as '(codec)' to avoid precedence issues
#185: FILE: sound/i810_audio.c:458:
+#define IO_REG_OFF(codec) (((struct i810_card *) codec->private_data)->ac97_id_map[codec->id])

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#188: FILE: sound/i810_audio.c:461:
+#define CIV_TO_LVI(port, off) outb((inb(port+OFF_CIV)+off) & 31, port+OFF_LVI)
                                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#188: FILE: sound/i810_audio.c:461:
+#define CIV_TO_LVI(port, off) outb((inb(port+OFF_CIV)+off) & 31, port+OFF_LVI)
                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#188: FILE: sound/i810_audio.c:461:
+#define CIV_TO_LVI(port, off) outb((inb(port+OFF_CIV)+off) & 31, port+OFF_LVI)
                                                                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'port' - possible side-effects?
#188: FILE: sound/i810_audio.c:461:
+#define CIV_TO_LVI(port, off) outb((inb(port+OFF_CIV)+off) & 31, port+OFF_LVI)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'port' may be better as '(port)' to avoid precedence issues
#188: FILE: sound/i810_audio.c:461:
+#define CIV_TO_LVI(port, off) outb((inb(port+OFF_CIV)+off) & 31, port+OFF_LVI)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'off' may be better as '(off)' to avoid precedence issues
#188: FILE: sound/i810_audio.c:461:
+#define CIV_TO_LVI(port, off) outb((inb(port+OFF_CIV)+off) & 31, port+OFF_LVI)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#229: FILE: sound/i810_audio.c:1028:
+			sg->busaddr=(u32)dmabuf->dma_handle+dmabuf->fragsize*i;
 			           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#229: FILE: sound/i810_audio.c:1028:
+			sg->busaddr=(u32)dmabuf->dma_handle+dmabuf->fragsize*i;
 			                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#229: FILE: sound/i810_audio.c:1028:
+			sg->busaddr=(u32)dmabuf->dma_handle+dmabuf->fragsize*i;
 			                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#240: FILE: sound/i810_audio.c:1043:
+		while( inb(state->card->iobase+c->port+OFF_CR) & 0x02 ) ;
 		                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#240: FILE: sound/i810_audio.c:1043:
+		while( inb(state->card->iobase+c->port+OFF_CR) & 0x02 ) ;
 		                                      ^

WARNING:SPACING: space prohibited before semicolon
#240: FILE: sound/i810_audio.c:1043:
+		while( inb(state->card->iobase+c->port+OFF_CR) & 0x02 ) ;

ERROR:SPACING: space prohibited after that open parenthesis '('
#240: FILE: sound/i810_audio.c:1043:
+		while( inb(state->card->iobase+c->port+OFF_CR) & 0x02 ) ;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#240: FILE: sound/i810_audio.c:1043:
+		while( inb(state->card->iobase+c->port+OFF_CR) & 0x02 ) ;

ERROR:SPACING: space required before the open parenthesis '('
#240: FILE: sound/i810_audio.c:1043:
+		while( inb(state->card->iobase+c->port+OFF_CR) & 0x02 ) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#240: FILE: sound/i810_audio.c:1043:
+		while( inb(state->card->iobase+c->port+OFF_CR) & 0x02 ) ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#242: FILE: sound/i810_audio.c:1045:
+		    c->num*sizeof(struct i810_channel),
 		          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#243: FILE: sound/i810_audio.c:1046:
+		    state->card->iobase+c->port+OFF_BDBAR);
 		                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#243: FILE: sound/i810_audio.c:1046:
+		    state->card->iobase+c->port+OFF_BDBAR);
 		                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#244: FILE: sound/i810_audio.c:1047:
+		CIV_TO_LVI(state->card->iobase+c->port, 0);
 		                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#279: FILE: sound/i810_audio.c:1812:
+			while ( inb(state->card->iobase+c->port+OFF_CR) & 2 );
 			                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#279: FILE: sound/i810_audio.c:1812:
+			while ( inb(state->card->iobase+c->port+OFF_CR) & 2 );
 			                                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#279: FILE: sound/i810_audio.c:1812:
+			while ( inb(state->card->iobase+c->port+OFF_CR) & 2 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#279: FILE: sound/i810_audio.c:1812:
+			while ( inb(state->card->iobase+c->port+OFF_CR) & 2 );

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#279: FILE: sound/i810_audio.c:1812:
+			while ( inb(state->card->iobase+c->port+OFF_CR) & 2 );

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#281: FILE: sound/i810_audio.c:1814:
+			    c->num*sizeof(struct i810_channel),
 			          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#282: FILE: sound/i810_audio.c:1815:
+			    state->card->iobase+c->port+OFF_BDBAR);
 			                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#282: FILE: sound/i810_audio.c:1815:
+			    state->card->iobase+c->port+OFF_BDBAR);
 			                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#283: FILE: sound/i810_audio.c:1816:
+			CIV_TO_LVI(state->card->iobase+c->port, 0);
 			                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: sound/i810_audio.c:1938:
+^I^Iif ( state->card->pci_id == PCI_DEVICE_ID_INTEL_82801 $

ERROR:SPACING: space prohibited after that open parenthesis '('
#292: FILE: sound/i810_audio.c:1938:
+		if ( state->card->pci_id == PCI_DEVICE_ID_INTEL_82801 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: sound/i810_audio.c:1939:
+^I^I     || state->card->pci_id == PCI_DEVICE_ID_INTEL_82901) $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#293: FILE: sound/i810_audio.c:1939:
+		if ( state->card->pci_id == PCI_DEVICE_ID_INTEL_82801 
+		     || state->card->pci_id == PCI_DEVICE_ID_INTEL_82901) 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: sound/i810_audio.c:1965:
+					outl((i_glob_cnt & 0xffcfffff) | 0x100000,
+					      state->card->iobase + GLOB_CNT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: sound/i810_audio.c:1974:
+					outl((i_glob_cnt & 0xffcfffff) | 0x200000,
+					      state->card->iobase + GLOB_CNT);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#344: FILE: sound/i810_audio.c:2563:
+	u16 reg_set = IO_REG_OFF(dev) | (reg&0x7f);
 	                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: sound/i810_audio.c:2564:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: sound/i810_audio.c:2565:
+^Iwhile(count-- && (readb(card->iobase_mmio + CAS) & 1)) $

ERROR:SPACING: space required before the open parenthesis '('
#346: FILE: sound/i810_audio.c:2565:
+	while(count-- && (readb(card->iobase_mmio + CAS) & 1)) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: sound/i810_audio.c:2567:
+^I$

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#352: FILE: sound/i810_audio.c:2571:
+		printk(KERN_DEBUG "i810_audio: ac97_get_mmio(%d) -> 0x%04X\n", ((int) reg_set) & 0xffff, (u32) ans);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#352: FILE: sound/i810_audio.c:2571:
+		printk(KERN_DEBUG "i810_audio: ac97_get_mmio(%d) -> 0x%04X\n", ((int) reg_set) & 0xffff, (u32) ans);

WARNING:LINE_SPACING: Missing a blank line after declarations
#352: FILE: sound/i810_audio.c:2571:
+		u16 ans = readw(card->ac97base_mmio + reg_set);
+		printk(KERN_DEBUG "i810_audio: ac97_get_mmio(%d) -> 0x%04X\n", ((int) reg_set) & 0xffff, (u32) ans);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#352: FILE: sound/i810_audio.c:2571:
+		printk(KERN_DEBUG "i810_audio: ac97_get_mmio(%d) -> 0x%04X\n", ((int) reg_set) & 0xffff, (u32) ans);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#364: FILE: sound/i810_audio.c:2583:
+	u16 reg_set = IO_REG_OFF(dev) | (reg&0x7f);
 	                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: sound/i810_audio.c:2584:
+^I$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#378: FILE: sound/i810_audio.c:2595:
+	u16 reg_set = IO_REG_OFF(dev) | (reg&0x7f);
 	                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: sound/i810_audio.c:2596:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#380: FILE: sound/i810_audio.c:2597:
+^Iwhile(count-- && (readb(card->iobase_mmio + CAS) & 1)) $

ERROR:SPACING: space required before the open parenthesis '('
#380: FILE: sound/i810_audio.c:2597:
+	while(count-- && (readb(card->iobase_mmio + CAS) & 1)) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: sound/i810_audio.c:2599:
+^I$

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#386: FILE: sound/i810_audio.c:2603:
+	printk(KERN_DEBUG "i810_audio: ac97_set_mmio(0x%04X, %d)\n", (u32) data, ((int) reg_set) & 0xffff);

CHECK:SPACING: No space is necessary after a cast
#386: FILE: sound/i810_audio.c:2603:
+	printk(KERN_DEBUG "i810_audio: ac97_set_mmio(0x%04X, %d)\n", (u32) data, ((int) reg_set) & 0xffff);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#386: FILE: sound/i810_audio.c:2603:
+	printk(KERN_DEBUG "i810_audio: ac97_set_mmio(0x%04X, %d)\n", (u32) data, ((int) reg_set) & 0xffff);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#394: FILE: sound/i810_audio.c:2611:
+	u16 reg_set = IO_REG_OFF(dev) | (reg&0x7f);
 	                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: sound/i810_audio.c:2612:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#399: FILE: sound/i810_audio.c:2615:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: sound/i810_audio.c:2616:
+        outw(data, card->ac97base + reg_set);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: sound/i810_audio.c:2616:
+        outw(data, card->ac97base + reg_set);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#406: FILE: sound/i810_audio.c:2622:
+	struct i810_card *card = dev->private_data;
+	if (card->use_mmio) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#406: FILE: sound/i810_audio.c:2622:
+	if (card->use_mmio) {
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#409: FILE: sound/i810_audio.c:2625:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#409: FILE: sound/i810_audio.c:2625:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#417: FILE: sound/i810_audio.c:2633:
+	struct i810_card *card = dev->private_data;
+	if (card->use_mmio) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#417: FILE: sound/i810_audio.c:2633:
+	if (card->use_mmio) {
[...]
+	else {
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#420: FILE: sound/i810_audio.c:2636:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#420: FILE: sound/i810_audio.c:2636:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#431: FILE: sound/i810_audio.c:2663:
+^I^Ifor (i = 0; i < NR_AC97 && card && !card->initializing; i++) $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#446: FILE: sound/i810_audio.c:2696:
+		return reg & (1<<8);
 		               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#447: FILE: sound/i810_audio.c:2697:
+^Icase 1: $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#448: FILE: sound/i810_audio.c:2698:
+		return reg & (1<<9);
 		               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#450: FILE: sound/i810_audio.c:2700:
+		return reg & (1<<28);
 		               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#465: FILE: sound/i810_audio.c:2727:
+	for (i=10; i && ((i810_ac97_get(codec, AC97_POWER_CONTROL) & 0xf) != 0xf); i--)
 	      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#481: FILE: sound/i810_audio.c:2741:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: sound/i810_audio.c:2741:
+ $

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#497: FILE: sound/i810_audio.c:2756:
+	outl(reg , card->iobase + GLOB_CNT);
 	         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#500: FILE: sound/i810_audio.c:2759:
+	/* We must now allow time for the Codec initialisation.
+	   600mS is the specified time */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#500: FILE: sound/i810_audio.c:2759:
+	   600mS is the specified time */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#501: FILE: sound/i810_audio.c:2760:
+^I   ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#501: FILE: sound/i810_audio.c:2760:
+^I   ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#514: FILE: sound/i810_audio.c:2781:
+^I */^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'card->pci_id == PCI_DEVICE_ID_INTEL_ICH4'
#517: FILE: sound/i810_audio.c:2784:
+	if ((card->pci_id == PCI_DEVICE_ID_INTEL_ICH4)
+	    && (card->use_mmio)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'card->use_mmio'
#517: FILE: sound/i810_audio.c:2784:
+	if ((card->pci_id == PCI_DEVICE_ID_INTEL_ICH4)
+	    && (card->use_mmio)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#518: FILE: sound/i810_audio.c:2785:
+	if ((card->pci_id == PCI_DEVICE_ID_INTEL_ICH4)
+	    && (card->use_mmio)) {

CHECK:SPACING: No space is necessary after a cast
#519: FILE: sound/i810_audio.c:2786:
+		primary_codec_id = (int) readl(card->iobase_mmio + SDM) & 0x3;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#520: FILE: sound/i810_audio.c:2787:
+		printk(KERN_INFO "i810_audio: Primary codec has ID %d\n",

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#524: FILE: sound/i810_audio.c:2791:
+	if(! i810_ac97_exists(card, primary_codec_id))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#524: FILE: sound/i810_audio.c:2791:
+	if(! i810_ac97_exists(card, primary_codec_id))
 	   ^

ERROR:SPACING: space required before the open parenthesis '('
#524: FILE: sound/i810_audio.c:2791:
+	if(! i810_ac97_exists(card, primary_codec_id))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#526: FILE: sound/i810_audio.c:2793:
+		printk(KERN_INFO "i810_audio: Codec not ready.. wait.. ");

ERROR:SPACING: space required before the open parenthesis '('
#530: FILE: sound/i810_audio.c:2797:
+		if(i810_ac97_exists(card, primary_codec_id))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#531: FILE: sound/i810_audio.c:2798:
+			printk("OK\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#532: FILE: sound/i810_audio.c:2799:
+^I^Ielse $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#533: FILE: sound/i810_audio.c:2800:
+			printk("no response.\n");

ERROR:SPACING: space required before the open parenthesis '('
#550: FILE: sound/i810_audio.c:2816:
+	if(!i810_ac97_power_up_bus(card)) return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#550: FILE: sound/i810_audio.c:2816:
+	if(!i810_ac97_power_up_bus(card)) return 0;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#559: FILE: sound/i810_audio.c:2832:
+	printk(KERN_INFO "i810_audio: Audio Controller supports %d channels.\n", card->channels);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#560: FILE: sound/i810_audio.c:2833:
+	printk(KERN_INFO "i810_audio: Defaulting to base 2 channel mode.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#565: FILE: sound/i810_audio.c:2837:
+^Ifor (num_ac97 = 0; num_ac97 < NR_AC97; num_ac97++) $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nr_ac97_max > 2'
#570: FILE: sound/i810_audio.c:2841:
+	if ((nr_ac97_max > 2) && !card->use_mmio) nr_ac97_max = 2;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#570: FILE: sound/i810_audio.c:2841:
+	if ((nr_ac97_max > 2) && !card->use_mmio) nr_ac97_max = 2;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#577: FILE: sound/i810_audio.c:2845:
+		printk(KERN_INFO "i810_audio: Resetting connection %d\n", num_ac97);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#578: FILE: sound/i810_audio.c:2846:
+		if (card->use_mmio) readw(card->ac97base_mmio + 0x80*num_ac97);
 		                                                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#578: FILE: sound/i810_audio.c:2846:
+		if (card->use_mmio) readw(card->ac97base_mmio + 0x80*num_ac97);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#579: FILE: sound/i810_audio.c:2847:
+		else inw(card->ac97base + 0x80*num_ac97);
 		                              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#579: FILE: sound/i810_audio.c:2847:
+		else inw(card->ac97base + 0x80*num_ac97);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#582: FILE: sound/i810_audio.c:2850:
+^I^I   do not loop thru all possible codec IDs but thru all $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#582: FILE: sound/i810_audio.c:2850:
+		/* If we have the SDATA_IN Map Register, as on ICH4, we
+		   do not loop thru all possible codec IDs but thru all 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#583: FILE: sound/i810_audio.c:2851:
+^I^I   possible IO channels. Bit 0:1 of SDM then holds the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: sound/i810_audio.c:2852:
+^I^I   last codec ID spoken to. $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'card->pci_id == PCI_DEVICE_ID_INTEL_ICH4'
#586: FILE: sound/i810_audio.c:2854:
+		if ((card->pci_id == PCI_DEVICE_ID_INTEL_ICH4)
+		    && (card->use_mmio)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'card->use_mmio'
#586: FILE: sound/i810_audio.c:2854:
+		if ((card->pci_id == PCI_DEVICE_ID_INTEL_ICH4)
+		    && (card->use_mmio)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#587: FILE: sound/i810_audio.c:2855:
+		if ((card->pci_id == PCI_DEVICE_ID_INTEL_ICH4)
+		    && (card->use_mmio)) {

CHECK:SPACING: No space is necessary after a cast
#588: FILE: sound/i810_audio.c:2856:
+			ac97_id = (int) readl(card->iobase_mmio + SDM) & 0x3;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#589: FILE: sound/i810_audio.c:2857:
+			printk(KERN_INFO "i810_audio: Connection %d with codec id %d\n",

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#592: FILE: sound/i810_audio.c:2860:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#592: FILE: sound/i810_audio.c:2860:
+		else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#607: FILE: sound/i810_audio.c:2872:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#621: FILE: sound/i810_audio.c:2883:
+^I^Iif (card->use_mmio) {^I$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#625: FILE: sound/i810_audio.c:2887:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#625: FILE: sound/i810_audio.c:2887:
+		else {

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#632: FILE: sound/i810_audio.c:2893:
+			printk(KERN_ERR "i810_audio: timed out waiting for codec %d analog ready.\n", ac97_id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#632: FILE: sound/i810_audio.c:2893:
+			printk(KERN_ERR "i810_audio: timed out waiting for codec %d analog ready.\n", ac97_id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#650: FILE: sound/i810_audio.c:2911:
+^I^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#651: FILE: sound/i810_audio.c:2912:
+		if(codec->codec_read(codec, AC97_RESET) & 2)
+		{

ERROR:SPACING: space required before the open parenthesis '('
#651: FILE: sound/i810_audio.c:2912:
+		if(codec->codec_read(codec, AC97_RESET) & 2)

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#653: FILE: sound/i810_audio.c:2914:
+			printk(KERN_WARNING "i810_audio: codec %d is an AC97 1.0 softmodem - skipping.\n", ac97_id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#653: FILE: sound/i810_audio.c:2914:
+			printk(KERN_WARNING "i810_audio: codec %d is an AC97 1.0 softmodem - skipping.\n", ac97_id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#657: FILE: sound/i810_audio.c:2918:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#659: FILE: sound/i810_audio.c:2920:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#662: FILE: sound/i810_audio.c:2922:
+		if(codec->codec_read(codec, AC97_EXTENDED_MODEM_ID) & 1)

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#665: FILE: sound/i810_audio.c:2924:
+			printk(KERN_WARNING "i810_audio: codec %d is an AC97 2.x softmodem - skipping.\n", ac97_id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#665: FILE: sound/i810_audio.c:2924:
+			printk(KERN_WARNING "i810_audio: codec %d is an AC97 2.x softmodem - skipping.\n", ac97_id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#682: FILE: sound/i810_audio.c:2946:
+^I^Icodec->codec_write(codec, AC97_POWER_CONTROL, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#684: FILE: sound/i810_audio.c:2948:
+^I^I^I^I$

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#693: FILE: sound/i810_audio.c:2974:
+			printk("i810_audio: AC'97 codec %d supports AMAP, total channels = %d\n", ac97_id, total_channels);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#693: FILE: sound/i810_audio.c:2974:
+			printk("i810_audio: AC'97 codec %d supports AMAP, total channels = %d\n", ac97_id, total_channels);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#702: FILE: sound/i810_audio.c:2996:
+			printk("i810_audio: AC'97 codec %d, new EID value = 0x%04x\n", ac97_id, eid);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#702: FILE: sound/i810_audio.c:2996:
+			printk("i810_audio: AC'97 codec %d, new EID value = 0x%04x\n", ac97_id, eid);

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#708: FILE: sound/i810_audio.c:3001:
+			printk("i810_audio: AC'97 codec %d, DAC map configured, total channels = %d\n", ac97_id, total_channels);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#708: FILE: sound/i810_audio.c:3001:
+			printk("i810_audio: AC'97 codec %d, DAC map configured, total channels = %d\n", ac97_id, total_channels);

WARNING:LONG_LINE: line length of 161 exceeds 100 columns
#711: FILE: sound/i810_audio.c:3003:
+			printk("i810_audio: AC'97 codec %d Unable to map surround DAC's (or DAC's not present), total channels = %d\n", ac97_id, total_channels);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#711: FILE: sound/i810_audio.c:3003:
+			printk("i810_audio: AC'97 codec %d Unable to map surround DAC's (or DAC's not present), total channels = %d\n", ac97_id, total_channels);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#729: FILE: sound/i810_audio.c:3062:
+		CIV_TO_LVI(card->iobase+dmabuf->write_channel->port, 31);
 		                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#753: FILE: sound/i810_audio.c:3116:
+	card->ac97base = pci_resource_start (pci_dev, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#754: FILE: sound/i810_audio.c:3117:
+	card->iobase = pci_resource_start (pci_dev, 1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#756: FILE: sound/i810_audio.c:3119:
+^I/* if chipset could have mmio capability, check it */ $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#758: FILE: sound/i810_audio.c:3121:
+		card->ac97base_mmio_phys = pci_resource_start (pci_dev, 2);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#759: FILE: sound/i810_audio.c:3122:
+		card->iobase_mmio_phys = pci_resource_start (pci_dev, 3);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'card->ac97base_mmio_phys'
#761: FILE: sound/i810_audio.c:3124:
+		if ((card->ac97base_mmio_phys) && (card->iobase_mmio_phys)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'card->iobase_mmio_phys'
#761: FILE: sound/i810_audio.c:3124:
+		if ((card->ac97base_mmio_phys) && (card->iobase_mmio_phys)) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#764: FILE: sound/i810_audio.c:3127:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#764: FILE: sound/i810_audio.c:3127:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#779: FILE: sound/i810_audio.c:3144:
+	printk(KERN_INFO "i810: %s found at IO 0x%04lx and 0x%04lx, "

WARNING:SPLIT_STRING: quoted string split across lines
#780: FILE: sound/i810_audio.c:3145:
+	printk(KERN_INFO "i810: %s found at IO 0x%04lx and 0x%04lx, "
+	       "MEM 0x%04lx and 0x%04lx, IRQ %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#781: FILE: sound/i810_audio.c:3146:
+^I       card_names[pci_id->driver_data], $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#782: FILE: sound/i810_audio.c:3147:
+^I       card->iobase, card->ac97base, $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#800: FILE: sound/i810_audio.c:3156:
+	if ((card->channel = pci_alloc_consistent(pci_dev,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#801: FILE: sound/i810_audio.c:3157:
+	if ((card->channel = pci_alloc_consistent(pci_dev,
+	    sizeof(struct i810_channel)*NR_HW_CH, &card->chandma)) == NULL) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#801: FILE: sound/i810_audio.c:3157:
+	    sizeof(struct i810_channel)*NR_HW_CH, &card->chandma)) == NULL) {
 	                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#802: FILE: sound/i810_audio.c:3158:
+		printk(KERN_ERR "i810: cannot allocate channel DMA memory\n");

WARNING:LONG_LINE_COMMENT: line length of 141 exceeds 100 columns
#835: FILE: sound/i810_audio.c:3188:
+			if ((card->ac97base_mmio = ioremap(card->ac97base_mmio_phys, 512))) { /*@FIXME can ioremap fail? don't know (jsaw) */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#835: FILE: sound/i810_audio.c:3188:
+			if ((card->ac97base_mmio = ioremap(card->ac97base_mmio_phys, 512))) { /*@FIXME can ioremap fail? don't know (jsaw) */

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#836: FILE: sound/i810_audio.c:3189:
+				if (request_mem_region(card->iobase_mmio_phys, 256, "ich_audio MBBAR")) {

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#837: FILE: sound/i810_audio.c:3190:
+					if ((card->iobase_mmio = ioremap(card->iobase_mmio_phys, 256))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#837: FILE: sound/i810_audio.c:3190:
+					if ((card->iobase_mmio = ioremap(card->iobase_mmio_phys, 256))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#838: FILE: sound/i810_audio.c:3191:
+						printk(KERN_INFO "i810: %s mmio at 0x%04lx and 0x%04lx\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#839: FILE: sound/i810_audio.c:3192:
+^I^I^I^I^I^I       card_names[pci_id->driver_data], $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#840: FILE: sound/i810_audio.c:3193:
+^I^I^I^I^I^I       (unsigned long) card->ac97base_mmio, $

CHECK:SPACING: No space is necessary after a cast
#840: FILE: sound/i810_audio.c:3193:
+						       (unsigned long) card->ac97base_mmio, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#841: FILE: sound/i810_audio.c:3194:
+^I^I^I^I^I^I       (unsigned long) card->iobase_mmio); $

CHECK:SPACING: No space is necessary after a cast
#841: FILE: sound/i810_audio.c:3194:
+						       (unsigned long) card->iobase_mmio); 

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#843: FILE: sound/i810_audio.c:3196:
+					}
+					else {

CHECK:BRACES: Unbalanced braces around else statement
#843: FILE: sound/i810_audio.c:3196:
+					else {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#850: FILE: sound/i810_audio.c:3203:
+				}
+				else {

CHECK:BRACES: Unbalanced braces around else statement
#850: FILE: sound/i810_audio.c:3203:
+				else {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#857: FILE: sound/i810_audio.c:3210:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#857: FILE: sound/i810_audio.c:3210:
+		else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#900: FILE: sound/i810_audio.c:3250:
+out_pio:^I$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#904: FILE: sound/i810_audio.c:3254:
+	pci_free_consistent(pci_dev, sizeof(struct i810_channel)*NR_HW_CH,
 	                                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#905: FILE: sound/i810_audio.c:3255:
+	pci_free_consistent(pci_dev, sizeof(struct i810_channel)*NR_HW_CH,
+	    card->channel, card->chandma);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#911: FILE: sound/i810_audio.c:3261:
 static void __devexit i810_remove(struct pci_dev *pci_dev)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000414883.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 81 errors, 53 warnings, 67 checks, 859 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000414883.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
