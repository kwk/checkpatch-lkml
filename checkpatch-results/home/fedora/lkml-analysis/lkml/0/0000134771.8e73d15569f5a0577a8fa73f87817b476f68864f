WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
The attached patch adds a generic core to which both networking filesystems and

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#47: 
Signed-Off-By: David Howells <dhowells@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#100: FILE: include/linux/fscache-cache.h:1:
+/* fscache-cache.h: general filesystem caching backing cache interface

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#149: FILE: include/linux/fscache-cache.h:50:
+extern void fscache_init_cache(struct fscache_cache *cache,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#152: FILE: include/linux/fscache-cache.h:53:
+			       ...) __attribute__ ((format (printf,3,4)));
 			                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#152: FILE: include/linux/fscache-cache.h:53:
+			       ...) __attribute__ ((format (printf,3,4)));
 			                                            ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3,4) over __attribute__((format(printf,3,4)))
#152: FILE: include/linux/fscache-cache.h:53:
+			       ...) __attribute__ ((format (printf,3,4)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#154: FILE: include/linux/fscache-cache.h:55:
+extern int fscache_add_cache(struct fscache_cache *cache,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#157: FILE: include/linux/fscache-cache.h:58:
+extern void fscache_withdraw_cache(struct fscache_cache *cache);

WARNING:TYPO_SPELLING: 'auxilliary' may be misspelled - perhaps 'auxiliary'?
#187: FILE: include/linux/fscache-cache.h:88:
+	/* store the updated auxilliary data on an object */
 	                     ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#203: FILE: include/linux/fscache-cache.h:104:
+	 * cache */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#211: FILE: include/linux/fscache-cache.h:112:
+	 * the cache */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#215: FILE: include/linux/fscache-cache.h:116:
+				   unsigned *nr_pages,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#221: FILE: include/linux/fscache-cache.h:122:
+	 * it can be written directly */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: include/linux/fscache-cache.h:143:
+	void (*uncache_pages)(struct fscache_object *object,
+			     struct pagevec *pagevec);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#320: FILE: include/linux/fscache.h:1:
+/* fscache.h: general filesystem caching interface

CHECK:SPACING: No space is necessary after a cast
#350: FILE: include/linux/fscache.h:31:
+#define FSCACHE_NEGATIVE_COOKIE ((struct fscache_cookie *) NULL)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#357: FILE: include/linux/fscache.h:38:
+typedef enum {

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#368: FILE: include/linux/fscache.h:49:
+struct fscache_cookie_def
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#373: FILE: include/linux/fscache.h:54:
+	uint8_t type;

WARNING:TYPO_SPELLING: 'auxilliary' may be misspelled - perhaps 'auxiliary'?
#405: FILE: include/linux/fscache.h:86:
+	/* get the auxilliary data from netfs data
 	           ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'auxilliary' may be misspelled - perhaps 'auxiliary'?
#407: FILE: include/linux/fscache.h:88:
+	 * - should store the auxilliary data in the buffer
 	                      ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'auxilliary' may be misspelled - perhaps 'auxiliary'?
#420: FILE: include/linux/fscache.h:101:
+	 *   presented, as is the auxilliary data
 	                          ^^^^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#447: FILE: include/linux/fscache.h:128:
+extern struct fscache_cookie *__fscache_acquire_cookie(struct fscache_cookie *parent,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#451: FILE: include/linux/fscache.h:132:
+extern void __fscache_relinquish_cookie(struct fscache_cookie *cookie,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#454: FILE: include/linux/fscache.h:135:
+extern void __fscache_update_cookie(struct fscache_cookie *cookie);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#494: FILE: include/linux/fscache.h:175:
+extern int __fscache_pin_cookie(struct fscache_cookie *cookie);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#495: FILE: include/linux/fscache.h:176:
+extern void __fscache_unpin_cookie(struct fscache_cookie *cookie);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#524: FILE: include/linux/fscache.h:205:
+struct fscache_netfs
+{

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#525: FILE: include/linux/fscache.h:206:
+	uint32_t			version;	/* indexing version */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#533: FILE: include/linux/fscache.h:214:
+struct fscache_netfs_operations
+{

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#537: FILE: include/linux/fscache.h:218:
+extern int __fscache_register_netfs(struct fscache_netfs *netfs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#538: FILE: include/linux/fscache.h:219:
+extern void __fscache_unregister_netfs(struct fscache_netfs *netfs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#565: FILE: include/linux/fscache.h:246:
+extern struct fscache_cache_tag *__fscache_lookup_cache_tag(const char *name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#566: FILE: include/linux/fscache.h:247:
+extern void __fscache_release_cache_tag(struct fscache_cache_tag *tag);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#596: FILE: include/linux/fscache.h:277:
+extern int __fscache_set_i_size(struct fscache_cookie *cookie, loff_t i_size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#617: FILE: include/linux/fscache.h:298:
+extern int __fscache_reserve_space(struct fscache_cookie *cookie, loff_t size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#642: FILE: include/linux/fscache.h:323:
+extern int __fscache_read_or_alloc_page(struct fscache_cookie *cookie,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#665: FILE: include/linux/fscache.h:346:
+extern int __fscache_read_or_alloc_pages(struct fscache_cookie *cookie,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#668: FILE: include/linux/fscache.h:349:
+					 unsigned *nr_pages,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#678: FILE: include/linux/fscache.h:359:
+				unsigned *nr_pages,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#701: FILE: include/linux/fscache.h:382:
+extern int __fscache_alloc_page(struct fscache_cookie *cookie,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#729: FILE: include/linux/fscache.h:410:
+extern int __fscache_write_page(struct fscache_cookie *cookie,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#735: FILE: include/linux/fscache.h:416:
+extern int __fscache_write_pages(struct fscache_cookie *cookie,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#777: FILE: include/linux/fscache.h:458:
+extern void __fscache_uncache_page(struct fscache_cookie *cookie,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#779: FILE: include/linux/fscache.h:460:
+extern void __fscache_uncache_pages(struct fscache_cookie *cookie,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#808: FILE: fs/fscache/cookie.c:1:
+/* cookie.c: general filesystem cache cookie management

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#838: FILE: fs/fscache/cookie.c:31:
+	BUG_ON((atomic_read(&cookie->usage) & 0xffff0000) == 0x6b6b0000);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#841: FILE: fs/fscache/cookie.c:34:
+	BUG_ON(atomic_read(&cookie->usage) <= 0);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#846: FILE: fs/fscache/cookie.c:39:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#970: FILE: fs/fscache/cookie.c:163:
+	printk("FS-Cache: netfs '%s' registered for caching\n", netfs->name);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#986: FILE: fs/fscache/cookie.c:179:
+EXPORT_SYMBOL(__fscache_register_netfs);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1004: FILE: fs/fscache/cookie.c:197:
+	printk("FS-Cache: netfs '%s' unregistered from caching\n",

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1011: FILE: fs/fscache/cookie.c:204:
+EXPORT_SYMBOL(__fscache_unregister_netfs);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1039: FILE: fs/fscache/cookie.c:232:
+EXPORT_SYMBOL(fscache_init_cache);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1051: FILE: fs/fscache/cookie.c:244:
+	BUG_ON(!cache->ops);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1052: FILE: fs/fscache/cookie.c:245:
+	BUG_ON(!ifsdef);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1057: FILE: fs/fscache/cookie.c:250:
+	BUG_ON(!tagname[0]);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1062: FILE: fs/fscache/cookie.c:255:
+		BUG();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1074: FILE: fs/fscache/cookie.c:267:
+				printk(KERN_ERR

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1104: FILE: fs/fscache/cookie.c:297:
+	 * list */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1110: FILE: fs/fscache/cookie.c:303:
+	 * cookie as a known backing object */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1122: FILE: fs/fscache/cookie.c:315:
+	printk(KERN_NOTICE

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1131: FILE: fs/fscache/cookie.c:324:
+EXPORT_SYMBOL(fscache_add_cache);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1143: FILE: fs/fscache/cookie.c:336:
+	printk(KERN_NOTICE

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1163: FILE: fs/fscache/cookie.c:356:
+	 * written to disc */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1167: FILE: fs/fscache/cookie.c:360:
+	 * mappings in the cache */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1171: FILE: fs/fscache/cookie.c:364:
+	 * cache */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1183: FILE: fs/fscache/cookie.c:376:
+		 * of it */

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1198: FILE: fs/fscache/cookie.c:391:
+EXPORT_SYMBOL(fscache_withdraw_cache);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1286: FILE: fs/fscache/cookie.c:479:
+	 * cache */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1311: FILE: fs/fscache/cookie.c:504:
+	tag = cookie->parent->def->select_cache(

CHECK:SPACING: No space is necessary after a cast
#1355: FILE: fs/fscache/cookie.c:548:
+	       cookie->def ? (char *) cookie->def->name : "<file>");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1373: FILE: fs/fscache/cookie.c:566:
+	BUG_ON(!parent); /* FSDEF entries don't have a parent */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1404: FILE: fs/fscache/cookie.c:597:
+		BUG_ON(pobject->cookie != parent);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1423: FILE: fs/fscache/cookie.c:616:
+	BUG_ON(!hlist_unhashed(&object->cookie_link));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1469: FILE: fs/fscache/cookie.c:662:
+	BUG_ON(!def);

CHECK:SPACING: No space is necessary after a cast
#1472: FILE: fs/fscache/cookie.c:665:
+	       parent ? (char *) parent->def->name : "<no-parent>",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1482: FILE: fs/fscache/cookie.c:675:
+	BUG_ON(!def->get_key);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1483: FILE: fs/fscache/cookie.c:676:
+	BUG_ON(!def->name[0]);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1485: FILE: fs/fscache/cookie.c:678:
+	BUG_ON(def->type == FSCACHE_COOKIE_TYPE_INDEX &&

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1507: FILE: fs/fscache/cookie.c:700:
+	 * exist, if not there'll be nothing to search */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1518: FILE: fs/fscache/cookie.c:711:
+	 * multiple caches */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1523: FILE: fs/fscache/cookie.c:716:
+		 * store it */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1529: FILE: fs/fscache/cookie.c:722:
+		 * indexes required to find it again later */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1546: FILE: fs/fscache/cookie.c:739:
+	printk(KERN_ERR "FS-Cache: error from cache: %d\n", ret);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1558: FILE: fs/fscache/cookie.c:751:
+EXPORT_SYMBOL(__fscache_acquire_cookie);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1581: FILE: fs/fscache/cookie.c:774:
+		printk("FS-Cache: cookie still has children\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1582: FILE: fs/fscache/cookie.c:775:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1619: FILE: fs/fscache/cookie.c:812:
+			BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1632: FILE: fs/fscache/cookie.c:825:
+		BUG_ON((atomic_read(&cookie->parent->children) & 0xffff0000) == 0x6b6b0000);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1644: FILE: fs/fscache/cookie.c:837:
+EXPORT_SYMBOL(__fscache_relinquish_cookie);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1662: FILE: fs/fscache/cookie.c:855:
+	BUG_ON(!cookie->def->get_aux);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1680: FILE: fs/fscache/cookie.c:873:
+EXPORT_SYMBOL(__fscache_update_cookie);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1694: FILE: fs/fscache/cookie.c:887:
+		BUG_ON(!hlist_empty(&cookie->backing_objects));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1701: FILE: fs/fscache/cookie.c:894:
+		BUG_ON(atomic_read(&cookie->usage) <= 0);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1719: FILE: fs/fscache/cookie.c:912:
+	if ((flags & (SLAB_CTOR_VERIFY|SLAB_CTOR_CONSTRUCTOR)) ==
 	                              ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1745: FILE: fs/fscache/cookie.c:938:
+	BUG_ON(cookie->def->type == FSCACHE_COOKIE_TYPE_INDEX);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1783: FILE: fs/fscache/cookie.c:976:
+EXPORT_SYMBOL(__fscache_pin_cookie);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1802: FILE: fs/fscache/cookie.c:995:
+	BUG_ON(cookie->def->type == FSCACHE_COOKIE_TYPE_INDEX);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1837: FILE: fs/fscache/cookie.c:1030:
+EXPORT_SYMBOL(__fscache_unpin_cookie);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1842: FILE: fs/fscache/fscache-int.h:1:
+/* fscache-int.h: internal definitions

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1865: FILE: fs/fscache/fscache-int.h:24:
+extern void fscache_cookie_init_once(void *_cookie, kmem_cache_t *cachep, unsigned long flags);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1871: FILE: fs/fscache/fscache-int.h:30:
+#define dbgprintk(FMT,...) \
                      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1872: FILE: fs/fscache/fscache-int.h:31:
+	printk("[%-6.6s] "FMT"\n",current->comm ,##__VA_ARGS__)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1872: FILE: fs/fscache/fscache-int.h:31:
+	printk("[%-6.6s] "FMT"\n",current->comm ,##__VA_ARGS__)
 	                         ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#1872: FILE: fs/fscache/fscache-int.h:31:
+	printk("[%-6.6s] "FMT"\n",current->comm ,##__VA_ARGS__)
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#1872: FILE: fs/fscache/fscache-int.h:31:
+	printk("[%-6.6s] "FMT"\n",current->comm ,##__VA_ARGS__)
 	                                        ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1872: FILE: fs/fscache/fscache-int.h:31:
+	printk("[%-6.6s] "FMT"\n",current->comm ,##__VA_ARGS__)

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1873: FILE: fs/fscache/fscache-int.h:32:
+#define _dbprintk(FMT,...) do { } while(0)
                      ^

ERROR:SPACING: space required before the open parenthesis '('
#1873: FILE: fs/fscache/fscache-int.h:32:
+#define _dbprintk(FMT,...) do { } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1875: FILE: fs/fscache/fscache-int.h:34:
+#define kenter(FMT,...)	dbgprintk("==> %s("FMT")",__FUNCTION__ ,##__VA_ARGS__)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1875: FILE: fs/fscache/fscache-int.h:34:
+#define kenter(FMT,...)	dbgprintk("==> %s("FMT")",__FUNCTION__ ,##__VA_ARGS__)
                        	                         ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#1875: FILE: fs/fscache/fscache-int.h:34:
+#define kenter(FMT,...)	dbgprintk("==> %s("FMT")",__FUNCTION__ ,##__VA_ARGS__)
                        	                                       ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#1875: FILE: fs/fscache/fscache-int.h:34:
+#define kenter(FMT,...)	dbgprintk("==> %s("FMT")",__FUNCTION__ ,##__VA_ARGS__)
                        	                                       ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1875: FILE: fs/fscache/fscache-int.h:34:
+#define kenter(FMT,...)	dbgprintk("==> %s("FMT")",__FUNCTION__ ,##__VA_ARGS__)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1875: FILE: fs/fscache/fscache-int.h:34:
+#define kenter(FMT,...)	dbgprintk("==> %s("FMT")",__FUNCTION__ ,##__VA_ARGS__)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1876: FILE: fs/fscache/fscache-int.h:35:
+#define kleave(FMT,...)	dbgprintk("<== %s()"FMT"",__FUNCTION__ ,##__VA_ARGS__)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1876: FILE: fs/fscache/fscache-int.h:35:
+#define kleave(FMT,...)	dbgprintk("<== %s()"FMT"",__FUNCTION__ ,##__VA_ARGS__)
                        	                         ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#1876: FILE: fs/fscache/fscache-int.h:35:
+#define kleave(FMT,...)	dbgprintk("<== %s()"FMT"",__FUNCTION__ ,##__VA_ARGS__)
                        	                                       ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#1876: FILE: fs/fscache/fscache-int.h:35:
+#define kleave(FMT,...)	dbgprintk("<== %s()"FMT"",__FUNCTION__ ,##__VA_ARGS__)
                        	                                       ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1876: FILE: fs/fscache/fscache-int.h:35:
+#define kleave(FMT,...)	dbgprintk("<== %s()"FMT"",__FUNCTION__ ,##__VA_ARGS__)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1876: FILE: fs/fscache/fscache-int.h:35:
+#define kleave(FMT,...)	dbgprintk("<== %s()"FMT"",__FUNCTION__ ,##__VA_ARGS__)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1877: FILE: fs/fscache/fscache-int.h:36:
+#define kdebug(FMT,...)	dbgprintk(FMT ,##__VA_ARGS__)
                   ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#1877: FILE: fs/fscache/fscache-int.h:36:
+#define kdebug(FMT,...)	dbgprintk(FMT ,##__VA_ARGS__)
                        	              ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#1877: FILE: fs/fscache/fscache-int.h:36:
+#define kdebug(FMT,...)	dbgprintk(FMT ,##__VA_ARGS__)
                        	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1879: FILE: fs/fscache/fscache-int.h:38:
+#define kjournal(FMT,...) _dbprintk(FMT ,##__VA_ARGS__)
                     ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#1879: FILE: fs/fscache/fscache-int.h:38:
+#define kjournal(FMT,...) _dbprintk(FMT ,##__VA_ARGS__)
                                         ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#1879: FILE: fs/fscache/fscache-int.h:38:
+#define kjournal(FMT,...) _dbprintk(FMT ,##__VA_ARGS__)
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1881: FILE: fs/fscache/fscache-int.h:40:
+#define dbgfree(ADDR)  _dbprintk("%p:%d: FREEING %p",__FILE__,__LINE__,ADDR)
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1881: FILE: fs/fscache/fscache-int.h:40:
+#define dbgfree(ADDR)  _dbprintk("%p:%d: FREEING %p",__FILE__,__LINE__,ADDR)
                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1881: FILE: fs/fscache/fscache-int.h:40:
+#define dbgfree(ADDR)  _dbprintk("%p:%d: FREEING %p",__FILE__,__LINE__,ADDR)
                                                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'PAGE' - possible side-effects?
#1883: FILE: fs/fscache/fscache-int.h:42:
+#define dbgpgalloc(PAGE)						\
+do {									\
+	_dbprintk("PGALLOC %s:%d: %p {%lx,%lu}\n",			\
+		  __FILE__,__LINE__,					\
+		  (PAGE),(PAGE)->mapping->host->i_ino,(PAGE)->index	\
+		  );							\
+} while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1883: FILE: fs/fscache/fscache-int.h:42:
+#define dbgpgalloc(PAGE)						\
+do {									\
+	_dbprintk("PGALLOC %s:%d: %p {%lx,%lu}\n",			\
+		  __FILE__,__LINE__,					\
+		  (PAGE),(PAGE)->mapping->host->i_ino,(PAGE)->index	\
+		  );							\
+} while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1886: FILE: fs/fscache/fscache-int.h:45:
+		  __FILE__,__LINE__,					\
 		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1887: FILE: fs/fscache/fscache-int.h:46:
+		  (PAGE),(PAGE)->mapping->host->i_ino,(PAGE)->index	\
 		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1887: FILE: fs/fscache/fscache-int.h:46:
+		  (PAGE),(PAGE)->mapping->host->i_ino,(PAGE)->index	\
 		                                     ^

ERROR:SPACING: space required before the open parenthesis '('
#1889: FILE: fs/fscache/fscache-int.h:48:
+} while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'PAGE' - possible side-effects?
#1891: FILE: fs/fscache/fscache-int.h:50:
+#define dbgpgfree(PAGE)						\
+do {								\
+	if ((PAGE))						\
+		_dbprintk("PGFREE %s:%d: %p {%lx,%lu}\n",	\
+			  __FILE__,__LINE__,			\
+			  (PAGE),				\
+			  (PAGE)->mapping->host->i_ino,		\
+			  (PAGE)->index				\
+			  );					\
+} while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1895: FILE: fs/fscache/fscache-int.h:54:
+			  __FILE__,__LINE__,			\
 			          ^

ERROR:SPACING: space required before the open parenthesis '('
#1900: FILE: fs/fscache/fscache-int.h:59:
+} while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1903: FILE: fs/fscache/fscache-int.h:62:
+#define _enter(FMT,...)	kenter(FMT,##__VA_ARGS__)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1903: FILE: fs/fscache/fscache-int.h:62:
+#define _enter(FMT,...)	kenter(FMT,##__VA_ARGS__)
                        	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1904: FILE: fs/fscache/fscache-int.h:63:
+#define _leave(FMT,...)	kleave(FMT,##__VA_ARGS__)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1904: FILE: fs/fscache/fscache-int.h:63:
+#define _leave(FMT,...)	kleave(FMT,##__VA_ARGS__)
                        	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1905: FILE: fs/fscache/fscache-int.h:64:
+#define _debug(FMT,...)	kdebug(FMT,##__VA_ARGS__)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1905: FILE: fs/fscache/fscache-int.h:64:
+#define _debug(FMT,...)	kdebug(FMT,##__VA_ARGS__)
                        	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1907: FILE: fs/fscache/fscache-int.h:66:
+#define _enter(FMT,...)	do { } while(0)
                   ^

ERROR:SPACING: space required before the open parenthesis '('
#1907: FILE: fs/fscache/fscache-int.h:66:
+#define _enter(FMT,...)	do { } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1908: FILE: fs/fscache/fscache-int.h:67:
+#define _leave(FMT,...)	do { } while(0)
                   ^

ERROR:SPACING: space required before the open parenthesis '('
#1908: FILE: fs/fscache/fscache-int.h:67:
+#define _leave(FMT,...)	do { } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1909: FILE: fs/fscache/fscache-int.h:68:
+#define _debug(FMT,...)	do { } while(0)
                   ^

ERROR:SPACING: space required before the open parenthesis '('
#1909: FILE: fs/fscache/fscache-int.h:68:
+#define _debug(FMT,...)	do { } while(0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1917: FILE: fs/fscache/fsdef.c:1:
+/* fsdef.c: filesystem index definition

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1956: FILE: fs/fscache/fsdef.c:40:
+EXPORT_SYMBOL(fscache_fsdef_index);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1966: FILE: fs/fscache/fsdef.c:50:
+	unsigned klen;

WARNING:TYPO_SPELLING: 'auxilliary' may be misspelled - perhaps 'auxiliary'?
#1981: FILE: fs/fscache/fsdef.c:65:
+ * get the auxilliary data for an FSDEF index record
            ^^^^^^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1987: FILE: fs/fscache/fsdef.c:71:
+	unsigned dlen;

WARNING:TYPO_SPELLING: 'auxilliary' may be misspelled - perhaps 'auxiliary'?
#2002: FILE: fs/fscache/fsdef.c:86:
+ * check that the version stored in the auxilliary data is correct
                                         ^^^^^^^^^^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2009: FILE: fs/fscache/fsdef.c:93:
+	uint32_t version;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2034: FILE: fs/fscache/main.c:1:
+/* main.c: general filesystem caching manager

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#2052: FILE: fs/fscache/main.c:19:
+int fscache_debug = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#2079: FILE: fs/fscache/main.c:46:
+		printk(KERN_NOTICE

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#2084: FILE: fs/fscache/main.c:51:
+	printk(KERN_NOTICE "FS-Cache: Loaded\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#2098: FILE: fs/fscache/main.c:65:
+	printk(KERN_NOTICE "FS-Cache: unloaded\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2107: FILE: fs/fscache/main.c:74:
+#if 0

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2108: FILE: fs/fscache/main.c:75:
+void __cyg_profile_func_enter (void *this_fn, void *call_site)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2111: FILE: fs/fscache/main.c:78:
+void __cyg_profile_func_enter (void *this_fn, void *call_site)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2113: FILE: fs/fscache/main.c:80:
+       asm volatile("  movl    %%esp,%%edi     \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2113: FILE: fs/fscache/main.c:80:
+       asm volatile("  movl    %%esp,%%edi     \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#2114: FILE: fs/fscache/main.c:81:
+                    "  andl    %0,%%edi        \n"$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2114: FILE: fs/fscache/main.c:81:
+                    "  andl    %0,%%edi        \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2114: FILE: fs/fscache/main.c:81:
+                    "  andl    %0,%%edi        \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#2115: FILE: fs/fscache/main.c:82:
+                    "  addl    %1,%%edi        \n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2115: FILE: fs/fscache/main.c:82:
+                    "  addl    %1,%%edi        \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2115: FILE: fs/fscache/main.c:82:
+                    "  addl    %1,%%edi        \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#2116: FILE: fs/fscache/main.c:83:
+                    "  movl    %%esp,%%ecx     \n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2116: FILE: fs/fscache/main.c:83:
+                    "  movl    %%esp,%%ecx     \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2116: FILE: fs/fscache/main.c:83:
+                    "  movl    %%esp,%%ecx     \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#2117: FILE: fs/fscache/main.c:84:
+                    "  subl    %%edi,%%ecx     \n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2117: FILE: fs/fscache/main.c:84:
+                    "  subl    %%edi,%%ecx     \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2117: FILE: fs/fscache/main.c:84:
+                    "  subl    %%edi,%%ecx     \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#2118: FILE: fs/fscache/main.c:85:
+                    "  shrl    $2,%%ecx        \n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2118: FILE: fs/fscache/main.c:85:
+                    "  shrl    $2,%%ecx        \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2118: FILE: fs/fscache/main.c:85:
+                    "  shrl    $2,%%ecx        \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#2119: FILE: fs/fscache/main.c:86:
+                    "  movl    $0xedededed,%%eax     \n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2119: FILE: fs/fscache/main.c:86:
+                    "  movl    $0xedededed,%%eax     \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2119: FILE: fs/fscache/main.c:86:
+                    "  movl    $0xedededed,%%eax     \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#2120: FILE: fs/fscache/main.c:87:
+                    "  rep stosl               \n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2120: FILE: fs/fscache/main.c:87:
+                    "  rep stosl               \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2120: FILE: fs/fscache/main.c:87:
+                    "  rep stosl               \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#2121: FILE: fs/fscache/main.c:88:
+                    :$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2121: FILE: fs/fscache/main.c:88:
+                    :$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2122: FILE: fs/fscache/main.c:89:
+                    : "i"(~(THREAD_SIZE-1)), "i"(sizeof(struct thread_info))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2122: FILE: fs/fscache/main.c:89:
+                    : "i"(~(THREAD_SIZE-1)), "i"(sizeof(struct thread_info))$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2122: FILE: fs/fscache/main.c:89:
+                    : "i"(~(THREAD_SIZE-1)), "i"(sizeof(struct thread_info))
                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2123: FILE: fs/fscache/main.c:90:
+                    : "eax", "ecx", "edi", "memory", "cc"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2123: FILE: fs/fscache/main.c:90:
+                    : "eax", "ecx", "edi", "memory", "cc"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2124: FILE: fs/fscache/main.c:91:
+                    );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2124: FILE: fs/fscache/main.c:91:
+                    );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2132: FILE: fs/fscache/main.c:99:
+       asm volatile("  movl    %%esp,%%edi     \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2132: FILE: fs/fscache/main.c:99:
+       asm volatile("  movl    %%esp,%%edi     \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#2133: FILE: fs/fscache/main.c:100:
+                    "  andl    %0,%%edi        \n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2133: FILE: fs/fscache/main.c:100:
+                    "  andl    %0,%%edi        \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2133: FILE: fs/fscache/main.c:100:
+                    "  andl    %0,%%edi        \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#2134: FILE: fs/fscache/main.c:101:
+                    "  addl    %1,%%edi        \n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2134: FILE: fs/fscache/main.c:101:
+                    "  addl    %1,%%edi        \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2134: FILE: fs/fscache/main.c:101:
+                    "  addl    %1,%%edi        \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#2135: FILE: fs/fscache/main.c:102:
+                    "  movl    %%esp,%%ecx     \n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2135: FILE: fs/fscache/main.c:102:
+                    "  movl    %%esp,%%ecx     \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2135: FILE: fs/fscache/main.c:102:
+                    "  movl    %%esp,%%ecx     \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#2136: FILE: fs/fscache/main.c:103:
+                    "  subl    %%edi,%%ecx     \n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2136: FILE: fs/fscache/main.c:103:
+                    "  subl    %%edi,%%ecx     \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2136: FILE: fs/fscache/main.c:103:
+                    "  subl    %%edi,%%ecx     \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#2137: FILE: fs/fscache/main.c:104:
+                    "  shrl    $2,%%ecx        \n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2137: FILE: fs/fscache/main.c:104:
+                    "  shrl    $2,%%ecx        \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2137: FILE: fs/fscache/main.c:104:
+                    "  shrl    $2,%%ecx        \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#2138: FILE: fs/fscache/main.c:105:
+                    "  movl    $0xdadadada,%%eax     \n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2138: FILE: fs/fscache/main.c:105:
+                    "  movl    $0xdadadada,%%eax     \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2138: FILE: fs/fscache/main.c:105:
+                    "  movl    $0xdadadada,%%eax     \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#2139: FILE: fs/fscache/main.c:106:
+                    "  rep stosl               \n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2139: FILE: fs/fscache/main.c:106:
+                    "  rep stosl               \n"$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2139: FILE: fs/fscache/main.c:106:
+                    "  rep stosl               \n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#2140: FILE: fs/fscache/main.c:107:
+                    :$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2140: FILE: fs/fscache/main.c:107:
+                    :$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2141: FILE: fs/fscache/main.c:108:
+                    : "i"(~(THREAD_SIZE-1)), "i"(sizeof(struct thread_info))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2141: FILE: fs/fscache/main.c:108:
+                    : "i"(~(THREAD_SIZE-1)), "i"(sizeof(struct thread_info))$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2141: FILE: fs/fscache/main.c:108:
+                    : "i"(~(THREAD_SIZE-1)), "i"(sizeof(struct thread_info))
                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2142: FILE: fs/fscache/main.c:109:
+                    : "eax", "ecx", "edi", "memory", "cc"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2142: FILE: fs/fscache/main.c:109:
+                    : "eax", "ecx", "edi", "memory", "cc"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2143: FILE: fs/fscache/main.c:110:
+                    );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2143: FILE: fs/fscache/main.c:110:
+                    );$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2167: FILE: fs/fscache/page.c:1:
+/* page.c: general filesystem cache cookie management

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2201: FILE: fs/fscache/page.c:35:
+	BUG_ON(cookie->def->type == FSCACHE_COOKIE_TYPE_INDEX);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2236: FILE: fs/fscache/page.c:70:
+EXPORT_SYMBOL(__fscache_set_i_size);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2255: FILE: fs/fscache/page.c:89:
+	BUG_ON(cookie->def->type == FSCACHE_COOKIE_TYPE_INDEX);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2294: FILE: fs/fscache/page.c:128:
+EXPORT_SYMBOL(__fscache_reserve_space);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2323: FILE: fs/fscache/page.c:157:
+	BUG_ON(cookie->def->type == FSCACHE_COOKIE_TYPE_INDEX);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2338: FILE: fs/fscache/page.c:172:
+				ret = object->cache->ops->read_or_alloc_page(

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2358: FILE: fs/fscache/page.c:192:
+EXPORT_SYMBOL(__fscache_read_or_alloc_page);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#2382: FILE: fs/fscache/page.c:216:
+				  unsigned *nr_pages,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2398: FILE: fs/fscache/page.c:232:
+	BUG_ON(cookie->def->type == FSCACHE_COOKIE_TYPE_INDEX);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2399: FILE: fs/fscache/page.c:233:
+	BUG_ON(list_empty(pages));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2400: FILE: fs/fscache/page.c:234:
+	BUG_ON(*nr_pages <= 0);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2415: FILE: fs/fscache/page.c:249:
+				ret = object->cache->ops->read_or_alloc_pages(

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2437: FILE: fs/fscache/page.c:271:
+EXPORT_SYMBOL(__fscache_read_or_alloc_pages);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2463: FILE: fs/fscache/page.c:297:
+	BUG_ON(cookie->def->type == FSCACHE_COOKIE_TYPE_INDEX);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2495: FILE: fs/fscache/page.c:329:
+EXPORT_SYMBOL(__fscache_alloc_page);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2518: FILE: fs/fscache/page.c:352:
+	BUG_ON(cookie->def->type == FSCACHE_COOKIE_TYPE_INDEX);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2546: FILE: fs/fscache/page.c:380:
+EXPORT_SYMBOL(__fscache_write_page);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2569: FILE: fs/fscache/page.c:403:
+	BUG_ON(cookie->def->type == FSCACHE_COOKIE_TYPE_INDEX);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2597: FILE: fs/fscache/page.c:431:
+EXPORT_SYMBOL(__fscache_write_pages);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2611: FILE: fs/fscache/page.c:445:
+	BUG_ON(cookie->def->type == FSCACHE_COOKIE_TYPE_INDEX);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2642: FILE: fs/fscache/page.c:476:
+EXPORT_SYMBOL(__fscache_uncache_page);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2655: FILE: fs/fscache/page.c:489:
+	BUG_ON(pagevec->nr <= 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2656: FILE: fs/fscache/page.c:490:
+	BUG_ON(!pagevec->pages[0]);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2659: FILE: fs/fscache/page.c:493:
+	BUG_ON(cookie->def->type == FSCACHE_COOKIE_TYPE_INDEX);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2687: FILE: fs/fscache/page.c:521:
+EXPORT_SYMBOL(__fscache_uncache_pages);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134771.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 69 errors, 148 warnings, 41 checks, 2586 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134771.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
