WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
>>>>> On Tue, 25 Jan 2005 10:03:01 +1100, Keith Owens <kaos@ocs.com.au> said:

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#60: FILE: usr/src/nv/Makefile.kbuild:76:
+EXTRA_CFLAGS += -Wall -Wimplicit -Wreturn-type -Wswitch -Wformat -Wchar-subscripts -Wparentheses -Wno-multichar  -Werror -O2 -MD $(DEFINES) $(INCLUDES) -Wno-cast-qual -Wno-error

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#93: FILE: usr/src/nv/nv-linux.h:27:
+#elif LINUX_VERSION_CODE < KERNEL_VERSION(2, 7, 0)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#93: FILE: usr/src/nv/nv-linux.h:27:
+#elif LINUX_VERSION_CODE < KERNEL_VERSION(2, 7, 0)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: usr/src/nv/nv-linux.h:296:
+        (ptr) = __vmalloc(size, GFP_KERNEL|GFP_DMA, PAGE_KERNEL); \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: usr/src/nv/nv-linux.h:296:
+        (ptr) = __vmalloc(size, GFP_KERNEL|GFP_DMA, PAGE_KERNEL); \$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#102: FILE: usr/src/nv/nv-linux.h:296:
+        (ptr) = __vmalloc(size, GFP_KERNEL|GFP_DMA, PAGE_KERNEL); \
                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: usr/src/nv/nv-linux.h:302:
+        (ptr) = vmalloc_32(size); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: usr/src/nv/nv-linux.h:302:
+        (ptr) = vmalloc_32(size); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: usr/src/nv/nv-linux.h:336:
+        (ptr) = kmalloc(size, GFP_KERNEL); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: usr/src/nv/nv-linux.h:336:
+        (ptr) = kmalloc(size, GFP_KERNEL); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: usr/src/nv/nv-linux.h:342:
+        (ptr) = kmalloc(size, GFP_ATOMIC); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: usr/src/nv/nv-linux.h:342:
+        (ptr) = kmalloc(size, GFP_ATOMIC); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: usr/src/nv/nv-linux.h:355:
+        (ptr) = __get_free_pages(NV_GFP_HW, order); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: usr/src/nv/nv-linux.h:355:
+        (ptr) = __get_free_pages(NV_GFP_HW, order); \$

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#144: FILE: usr/src/nv/nv-linux.h:457:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 11)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#144: FILE: usr/src/nv/nv-linux.h:457:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 11)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#145: FILE: usr/src/nv/nv-linux.h:458:
+#define NV_REMAP_PFN_RANGE(a,b,c,d)	remap_pfn_range(vma, a, b, c, d)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#145: FILE: usr/src/nv/nv-linux.h:458:
+#define NV_REMAP_PFN_RANGE(a,b,c,d)	remap_pfn_range(vma, a, b, c, d)
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#145: FILE: usr/src/nv/nv-linux.h:458:
+#define NV_REMAP_PFN_RANGE(a,b,c,d)	remap_pfn_range(vma, a, b, c, d)
                                 ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#147: FILE: usr/src/nv/nv-linux.h:460:
+#define NV_REMAP_PFN_RANGE(a, b...)    remap_page_range(vma, a << PAGE_SHIFT, ## b)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#150: FILE: usr/src/nv/nv-linux.h:462:
+#define NV_REMAP_PFN_RANGE(a, b...)    remap_page_range(a << PAGE_SHIFT, ## b)

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#155: FILE: usr/src/nv/nv-linux.h:467:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 11)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#155: FILE: usr/src/nv/nv-linux.h:467:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 11)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#156: FILE: usr/src/nv/nv-linux.h:468:
+typedef pgd_t pud_t;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#157: FILE: usr/src/nv/nv-linux.h:469:
+# define pud_offset(pg_dir, address)	(pg_dir);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: usr/src/nv/nv.c:215:
+    dev = pci_get_class(PCI_CLASS_DISPLAY_VGA << 8, dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: usr/src/nv/nv.c:309:
+        dev = pci_get_class(PCI_CLASS_DISPLAY_VGA << 8, dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: usr/src/nv/nv.c:309:
+        dev = pci_get_class(PCI_CLASS_DISPLAY_VGA << 8, dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: usr/src/nv/nv.c:626:
+    dev = pci_get_class(class << 8, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: usr/src/nv/nv.c:637:
+        dev = pci_get_class(class << 8, dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: usr/src/nv/nv.c:637:
+        dev = pci_get_class(class << 8, dev);$

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#234: FILE: usr/src/nv/nv.c:1076:
+struct page *nv_kern_vma_nopage(struct vm_area_struct *vma, unsigned long address, int *write_accessp)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: usr/src/nv/nv.c:1207:
+    nv_file_private_t *nv_private;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: usr/src/nv/nv.c:1236:
+    nv_private = file->private_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: usr/src/nv/nv.c:1237:
+    nv_private->nvptr = nvl;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: usr/src/nv/nv.c:1413:
+        if (NV_REMAP_PFN_RANGE(vma->vm_start,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: usr/src/nv/nv.c:1413:
+        if (NV_REMAP_PFN_RANGE(vma->vm_start,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#262: FILE: usr/src/nv/nv.c:1413:
+        if (NV_REMAP_PFN_RANGE(vma->vm_start,
[...]
             return -EAGAIN;

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: usr/src/nv/nv.c:1414:
+                             NV_VMA_OFFSET(vma) >> PAGE_SHIFT,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: usr/src/nv/nv.c:1414:
+        if (NV_REMAP_PFN_RANGE(vma->vm_start,
+                             NV_VMA_OFFSET(vma) >> PAGE_SHIFT,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: usr/src/nv/nv.c:1414:
+                             NV_VMA_OFFSET(vma) >> PAGE_SHIFT,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: usr/src/nv/nv.c:1432:
+        if (NV_REMAP_PFN_RANGE(vma->vm_start,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: usr/src/nv/nv.c:1432:
+        if (NV_REMAP_PFN_RANGE(vma->vm_start,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#273: FILE: usr/src/nv/nv.c:1432:
+        if (NV_REMAP_PFN_RANGE(vma->vm_start,
[...]
             return -EAGAIN;

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: usr/src/nv/nv.c:1433:
+                             NV_VMA_OFFSET(vma) >> PAGE_SHIFT,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: usr/src/nv/nv.c:1433:
+        if (NV_REMAP_PFN_RANGE(vma->vm_start,
+                             NV_VMA_OFFSET(vma) >> PAGE_SHIFT,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: usr/src/nv/nv.c:1433:
+                             NV_VMA_OFFSET(vma) >> PAGE_SHIFT,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: usr/src/nv/nv.c:1520:
+            if (NV_REMAP_PFN_RANGE(start, page >> PAGE_SHIFT, PAGE_SIZE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: usr/src/nv/nv.c:1520:
+            if (NV_REMAP_PFN_RANGE(start, page >> PAGE_SHIFT, PAGE_SIZE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: usr/src/nv/nv.c:1872:
+    nv_file_private_t *nv_private;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: usr/src/nv/nv.c:1887:
+    nv_private = file->private_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: usr/src/nv/nv.c:1888:
+    nv_private->nvptr = nvl;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: usr/src/nv/nv.c:2319:
+    pud_t *pud_dir;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: usr/src/nv/nv.c:2330:
+    pud_dir = pud_offset(pg_dir, address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: usr/src/nv/nv.c:2331:
+    if (pud_none(*pud_dir))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#320: FILE: usr/src/nv/nv.c:2331:
+    if (pud_none(*pud_dir))
+	    goto failed;

WARNING:TABSTOP: Statements should start on a tabstop
#321: FILE: usr/src/nv/nv.c:2332:
+	    goto failed;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: usr/src/nv/nv.c:2334:
+    pg_mid_dir = pmd_offset(pud_dir, address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: usr/src/nv/os-agp.c:77:
+    request_module("%s", "agpgart");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: usr/src/nv/os-agp.c:85:
+    if (agp_backend_acquire())$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: usr/src/nv/os-agp.c:110:
+    agp_copy_info(&agpinfo);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: usr/src/nv/os-agp.c:112:
+    if (agp_copy_info(&agpinfo)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: usr/src/nv/os-agp.c:113:
+        agp_backend_release();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: usr/src/nv/os-agp.c:113:
+        agp_backend_release();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: usr/src/nv/os-agp.c:131:
+        agp_backend_release();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: usr/src/nv/os-agp.c:131:
+        agp_backend_release();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: usr/src/nv/os-agp.c:148:
+        agp_backend_release();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: usr/src/nv/os-agp.c:148:
+        agp_backend_release();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: usr/src/nv/os-agp.c:160:
+        agp_backend_release();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: usr/src/nv/os-agp.c:160:
+        agp_backend_release();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: usr/src/nv/os-agp.c:172:
+        agp_backend_release();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: usr/src/nv/os-agp.c:172:
+        agp_backend_release();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: usr/src/nv/os-agp.c:183:
+    agp_enable(agpinfo.mode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: usr/src/nv/os-agp.c:218:
+    agp_backend_release();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: usr/src/nv/os-agp.c:267:
+    ptr = agp_allocate_memory(PageCount, AGP_NORMAL_MEMORY);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: usr/src/nv/os-agp.c:275:
+    err = agp_bind_memory(ptr, *Offset);$

CHECK:CAMELCASE: Avoid CamelCase: <Offset>
#443: FILE: usr/src/nv/os-agp.c:275:
+    err = agp_bind_memory(ptr, *Offset);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#452: FILE: usr/src/nv/os-agp.c:292:
+        agp_unbind_memory(ptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: usr/src/nv/os-agp.c:292:
+        agp_unbind_memory(ptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: usr/src/nv/os-agp.c:307:
+    agp_free_memory(ptr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: usr/src/nv/os-agp.c:347:
+        agp_unbind_memory(agp_data->ptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: usr/src/nv/os-agp.c:347:
+        agp_unbind_memory(agp_data->ptr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#480: FILE: usr/src/nv/os-agp.c:446:
+        agp_unbind_memory(ptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: usr/src/nv/os-agp.c:446:
+        agp_unbind_memory(ptr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#481: FILE: usr/src/nv/os-agp.c:447:
+        agp_free_memory(ptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: usr/src/nv/os-agp.c:447:
+        agp_free_memory(ptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: usr/src/nv/os-interface.c:916:
+    if (NV_REMAP_PFN_RANGE(vma->vm_start,$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000212472.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 58 warnings, 6 checks, 389 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000212472.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
