WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#71: 
--- working-2.6.orig/arch/ppc64/mm/hugetlbpage.c	2004-04-07 13:49:56.000000000 +1000

ERROR:SPACING: space required after that ',' (ctx:VxV)
#78: FILE: arch/ppc64/mm/hugetlbpage.c:121:
+#define hugepte_same(A,B) \
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: arch/ppc64/mm/hugetlbpage.c:359:
+^I^I^Ientry = __hugepte(hugepte_update(src_pte, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#153: FILE: arch/ppc64/mm/hugetlbpage.c:585:
+			 * write. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#192: FILE: arch/ppc64/mm/hugetlbpage.c:1000:
+	BUG_ON(!pfn_valid(hugepte_pfn(*ptep)));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#202: FILE: arch/ppc64/mm/hugetlbpage.c:1010:
+	 * and just make the page writable */

WARNING:LINE_SPACING: Missing a blank line after declarations
#205: FILE: arch/ppc64/mm/hugetlbpage.c:1013:
+		int avoidcopy = (page_count(old_page) == 1);
+		unlock_page(old_page);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#208: FILE: arch/ppc64/mm/hugetlbpage.c:1016:
+				set_hugepte(ptep+i, hugepte_mkwrite(pte));
 				                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: arch/ppc64/mm/hugetlbpage.c:1017:
+^I^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#210: FILE: arch/ppc64/mm/hugetlbpage.c:1018:
+			
+

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#225: FILE: arch/ppc64/mm/hugetlbpage.c:1033:
+	if (! new_page) {
 	    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#231: FILE: arch/ppc64/mm/hugetlbpage.c:1039:
+		 * at all (?) */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#235: FILE: arch/ppc64/mm/hugetlbpage.c:1043:
+	for (i = 0; i < HPAGE_SIZE/PAGE_SIZE; i++)
 	                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#236: FILE: arch/ppc64/mm/hugetlbpage.c:1044:
+		copy_user_highpage(new_page + i, old_page + i, address + i*PAGE_SIZE);
 		                                                          ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#265: FILE: arch/ppc64/mm/hugetlbpage.c:1073:
+int handle_hugetlb_mm_fault(struct mm_struct *mm, struct vm_area_struct * vma,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#275: FILE: arch/ppc64/mm/hugetlbpage.c:1083:
+	if ( (! ptep) || hugepte_none(*ptep))
 	      ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#275: FILE: arch/ppc64/mm/hugetlbpage.c:1083:
+	if ( (! ptep) || hugepte_none(*ptep))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '! ptep'
#275: FILE: arch/ppc64/mm/hugetlbpage.c:1083:
+	if ( (! ptep) || hugepte_none(*ptep))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#279: FILE: arch/ppc64/mm/hugetlbpage.c:1087:
+	BUG_ON(hugepte_bad(*ptep));

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#283: FILE: arch/ppc64/mm/hugetlbpage.c:1091:
+	if (! (write_access && !hugepte_write(*ptep))) {
 	    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#284: FILE: arch/ppc64/mm/hugetlbpage.c:1092:
+		printk(KERN_WARNING "Unexpected hugepte fault (wr=%d hugepte=%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: arch/ppc64/mm/hugetlbpage.c:1093:
+		printk(KERN_WARNING "Unexpected hugepte fault (wr=%d hugepte=%08x\n",
+		     write_access, hugepte_val(*ptep));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: arch/ppc64/mm/hugetlbpage.c:1096:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: arch/ppc64/mm/hugetlbpage.c:1099:
+^Ireturn hugepage_cow(mm, vma, address, ptep, *ptep); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: arch/ppc64/mm/hugetlbpage.c:1100:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#325: FILE: include/linux/hugetlb.h:56:
+int handle_hugetlb_mm_fault(struct mm_struct *mm, struct vm_area_struct * vma,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000290009.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 8 warnings, 6 checks, 251 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000290009.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
