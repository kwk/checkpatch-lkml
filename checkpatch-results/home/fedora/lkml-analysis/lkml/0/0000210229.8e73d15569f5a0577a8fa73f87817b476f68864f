ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#66: 
--- a/arch/i386/pci/fixup.c	2005-01-27 04:01:08 -05:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#74: FILE: arch/i386/pci/fixup.c:378:
IORESOURCE_VGA_ACTIVE;

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#84: FILE: drivers/pci/Kconfig:50:
+config VGA_CONTROL
+	bool "VGA Control"
+	depends on PCI
+	---help---
+	  Provides sysfs attributes for ensuring that only a single VGA
+	  device can be enabled per PCI domain. If a VGA device is removed
+	  via hotplug, display is routed to another VGA device if available.
+
+	  If you have more than one VGA device, say Y.
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#125: FILE: drivers/pci/pci.h:14:
+extern int pci_vga_add_device(struct pci_dev *pdev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: drivers/pci/pci.h:15:
+extern int pci_vga_remove_device(struct pci_dev *pdev);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#161: FILE: drivers/pci/vga.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#162: FILE: drivers/pci/vga.c:2:
+ * linux/drivers/pci/vga.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#175: FILE: drivers/pci/vga.c:15:
+static int vga_initialized = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#176: FILE: drivers/pci/vga.c:16:
+static struct pci_dev *vga_active = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: drivers/pci/vga.c:22:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: drivers/pci/vga.c:39:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: drivers/pci/vga.c:55:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: drivers/pci/vga.c:70:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: drivers/pci/vga.c:73:
+^I$

CHECK:CAMELCASE: Avoid CamelCase: <eEnable>
#247: FILE: drivers/pci/vga.c:86:
+enum eEnable {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#251: FILE: drivers/pci/vga.c:89:
+	VGA_ENABLE_THIS = 1,	/* Disable all VGAs then enable this VGA, mark
+	/* Used while resetting a board, board being reset may not be the

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#253: FILE: drivers/pci/vga.c:90:
+	/* Used while resetting a board, board being reset may not be the
+	VGA_DISABLE_ALL = 2,	/* Remember active VGA then disable all VGAa

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#255: FILE: drivers/pci/vga.c:91:
+	VGA_DISABLE_ALL = 2,	/* Remember active VGA then disable all VGAa
+	VGA_ENABLE_ACTIVE = 3,	/* Make sure all VGAs are disabled, then

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#257: FILE: drivers/pci/vga.c:92:
+	VGA_ENABLE_ACTIVE = 3,	/* Make sure all VGAs are disabled, then
+};

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: drivers/pci/vga.c:102:
+^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: drivers/pci/vga.c:107:
+	while ((pcidev = pci_get_subsys(PCI_ANY_ID, PCI_ANY_ID, PCI_ANY_ID,
+		class = pcidev->class >> 8;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: drivers/pci/vga.c:115:
+	while ((pcidev = pci_get_subsys(PCI_ANY_ID, PCI_ANY_ID, PCI_ANY_ID,
+		class = pcidev->class >> 8;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#288: FILE: drivers/pci/vga.c:121:
+	switch (enable) {
+		case VGA_DISABLE_THIS:
+		case VGA_DISABLE_ALL:
[...]
+		case VGA_ENABLE_THIS:
[...]
+		case VGA_ENABLE_ACTIVE:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#297: FILE: drivers/pci/vga.c:130:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: drivers/pci/vga.c:140:
+static ssize_t vga_device_store(struct device *dev, const char *buf,
+{

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#314: FILE: drivers/pci/vga.c:146:
+	enable = simple_strtoul(buf, &last, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'enable < VGA_DISABLE_THIS'
#318: FILE: drivers/pci/vga.c:150:
+	if ((enable < VGA_DISABLE_THIS) || (enable > VGA_ENABLE_ACTIVE))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'enable > VGA_ENABLE_ACTIVE'
#318: FILE: drivers/pci/vga.c:150:
+	if ((enable < VGA_DISABLE_THIS) || (enable > VGA_ENABLE_ACTIVE))

WARNING:LINE_SPACING: Missing a blank line after declarations
#330: FILE: drivers/pci/vga.c:162:
+	struct pci_dev *pdev = to_pci_dev(dev);
+	return sprintf(buf, "%d\n", (pdev->resource[PCI_ROM_RESOURCE].flags

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#349: FILE: drivers/pci/vga.c:179:
+static struct device_attribute vga_bridge_attr = __ATTR(vga, S_IRUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'class == PCI_CLASS_BRIDGE_PCI'
#369: FILE: drivers/pci/vga.c:198:
+	if ((class == PCI_CLASS_BRIDGE_PCI) || (class == PCI_CLASS_BRIDGE_CARDBUS)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'class == PCI_CLASS_BRIDGE_CARDBUS'
#369: FILE: drivers/pci/vga.c:198:
+	if ((class == PCI_CLASS_BRIDGE_PCI) || (class == PCI_CLASS_BRIDGE_CARDBUS)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#369: FILE: drivers/pci/vga.c:198:
+	if ((class == PCI_CLASS_BRIDGE_PCI) || (class == PCI_CLASS_BRIDGE_CARDBUS)) {
+		device_create_file(&pdev->dev, &vga_bridge_attr);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#391: FILE: drivers/pci/vga.c:219:
+			while ((pcidev = pci_get_subsys(PCI_ANY_ID, PCI_ANY_ID,
+				class = pcidev->class >> 8;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pcidev"
#399: FILE: drivers/pci/vga.c:227:
+			if (pcidev == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: drivers/pci/vga.c:229:
+^I^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#402: FILE: drivers/pci/vga.c:230:
+			
+		}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'class == PCI_CLASS_BRIDGE_PCI'
#406: FILE: drivers/pci/vga.c:234:
+	if ((class == PCI_CLASS_BRIDGE_PCI) || (class == PCI_CLASS_BRIDGE_CARDBUS))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'class == PCI_CLASS_BRIDGE_CARDBUS'
#406: FILE: drivers/pci/vga.c:234:
+	if ((class == PCI_CLASS_BRIDGE_PCI) || (class == PCI_CLASS_BRIDGE_CARDBUS))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: drivers/pci/vga.c:248:
+	while ((pdev = pci_get_subsys(PCI_ANY_ID, PCI_ANY_ID, PCI_ANY_ID,
+		pci_vga_add_device(pdev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: drivers/pci/vga.c:249:
+^I^I$

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#426: FILE: drivers/pci/vga.c:253:
+__initcall(vga_init);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210229.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 12 warnings, 16 checks, 347 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210229.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
