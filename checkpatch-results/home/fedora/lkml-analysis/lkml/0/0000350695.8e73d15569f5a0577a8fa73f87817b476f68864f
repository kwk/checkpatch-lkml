WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
diff -Nru linux-2.6.0-test2/arch/h8300/platform/h8300h/Rules.make linux-2.6.0-test2-h8300/arch/h8300/platform/h8300h/Rules.make

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: arch/h8300/platform/h8300h/aki3068net/crt0_ram.S:25:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: arch/h8300/platform/h8300h/aki3068net/crt0_ram.S:45:
+^Ijsr^I@__move_romfs^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: arch/h8300/platform/h8300h/aki3068net/crt0_ram.S:47:
+^I$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#306: FILE: arch/h8300/platform/h8300h/aki3068net/timer.c:28:
+extern int request_irq_boot(unsigned int,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#306: FILE: arch/h8300/platform/h8300h/aki3068net/timer.c:28:
+extern int request_irq_boot(unsigned int,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#306: FILE: arch/h8300/platform/h8300h/aki3068net/timer.c:28:
+extern int request_irq_boot(unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#306: FILE: arch/h8300/platform/h8300h/aki3068net/timer.c:28:
+extern int request_irq_boot(unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#306: FILE: arch/h8300/platform/h8300h/aki3068net/timer.c:28:
+extern int request_irq_boot(unsigned int,

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: arch/h8300/platform/h8300h/aki3068net/timer.c:29:
+^I^I             irqreturn_t (*handler)(int, void *, struct pt_regs *),$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: arch/h8300/platform/h8300h/aki3068net/timer.c:29:
+extern int request_irq_boot(unsigned int,
+		             irqreturn_t (*handler)(int, void *, struct pt_regs *),

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: arch/h8300/platform/h8300h/aki3068net/timer.c:30:
+^I^I             unsigned long, const char *, void *);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#316: FILE: arch/h8300/platform/h8300h/aki3068net/timer.c:34:
+	outb(H8300_TIMER_COUNT_DATA,TCORA2);
 	                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#317: FILE: arch/h8300/platform/h8300h/aki3068net/timer.c:35:
+	outb(0x00,_8TCSR2);
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: arch/h8300/platform/h8300h/aki3068net/timer.c:36:
+	request_irq_boot(40,timer_int,0,"timer",0);
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: arch/h8300/platform/h8300h/aki3068net/timer.c:36:
+	request_irq_boot(40,timer_int,0,"timer",0);
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: arch/h8300/platform/h8300h/aki3068net/timer.c:36:
+	request_irq_boot(40,timer_int,0,"timer",0);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: arch/h8300/platform/h8300h/aki3068net/timer.c:36:
+	request_irq_boot(40,timer_int,0,"timer",0);
 	                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#319: FILE: arch/h8300/platform/h8300h/aki3068net/timer.c:37:
+	outb(0x40|0x08|0x03,_8TCR2);
 	         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#319: FILE: arch/h8300/platform/h8300h/aki3068net/timer.c:37:
+	outb(0x40|0x08|0x03,_8TCR2);
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#319: FILE: arch/h8300/platform/h8300h/aki3068net/timer.c:37:
+	outb(0x40|0x08|0x03,_8TCR2);
 	                   ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#325: FILE: arch/h8300/platform/h8300h/aki3068net/timer.c:42:
+	*(volatile unsigned char *)_8TCSR2 &= ~(1 << CMFA);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: arch/h8300/platform/h8300h/entry.S:60:
+^Isub.l^I#(LRET-LORIG),sp^I^I/* allocate LORIG - LRET */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#452: FILE: arch/h8300/platform/h8300h/entry.S:114:
+^Iadd.l^I#(LRET-LORIG),sp^I^I/* remove LORIG - LRET */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#490: FILE: arch/h8300/platform/h8300h/entry.S:127:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#509: FILE: arch/h8300/platform/h8300h/entry.S:143:
+INTERRUPTS = 64^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: arch/h8300/platform/h8300h/entry.S:196:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#679: FILE: arch/h8300/platform/h8300h/entry.S:260:
+3:^I $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#692: FILE: arch/h8300/platform/h8300h/entry.S:275:
+^Ijmp^I@SYMBOL_NAME_LABEL(ret_from_exception)^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#786: FILE: arch/h8300/platform/h8300h/generic/crt0_ram.S:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#787: FILE: arch/h8300/platform/h8300h/generic/crt0_ram.S:2:
+ *  linux/arch/h8300/platform/h8300h/generic/crt0_ram.S

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'Archtecture' may be misspelled - perhaps 'Architecture'?
#792: FILE: arch/h8300/platform/h8300h/generic/crt0_ram.S:7:
+ *  Target Archtecture:	AE-3068 (aka. aki3068net)
            ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#800: FILE: arch/h8300/platform/h8300h/generic/crt0_ram.S:15:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#810: FILE: arch/h8300/platform/h8300h/generic/crt0_ram.S:25:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#815: FILE: arch/h8300/platform/h8300h/generic/crt0_ram.S:30:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#827: FILE: arch/h8300/platform/h8300h/generic/crt0_ram.S:42:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#830: FILE: arch/h8300/platform/h8300h/generic/crt0_ram.S:45:
+^Ijsr^I@__move_romfs^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#832: FILE: arch/h8300/platform/h8300h/generic/crt0_ram.S:47:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#840: FILE: arch/h8300/platform/h8300h/generic/crt0_ram.S:55:
+1:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#864: FILE: arch/h8300/platform/h8300h/generic/crt0_ram.S:79:
+__platform_gpio_table:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#892: FILE: arch/h8300/platform/h8300h/generic/crt0_ram.S:107:
+__target_name:^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1171: FILE: arch/h8300/platform/h8300h/generic/timer.c:26:
+^I^I             irqreturn_t (*handler)(int, void *, struct pt_regs *),$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1171: FILE: arch/h8300/platform/h8300h/generic/timer.c:26:
+extern int request_irq_boot(unsigned int,
+		             irqreturn_t (*handler)(int, void *, struct pt_regs *),

ERROR:CODE_INDENT: code indent should use tabs where possible
#1172: FILE: arch/h8300/platform/h8300h/generic/timer.c:27:
+^I^I             unsigned long, const char *, void *);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1174: FILE: arch/h8300/platform/h8300h/generic/timer.c:29:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1186: FILE: arch/h8300/platform/h8300h/generic/timer.c:37:
+	request_irq_boot(40,timer_int,0,"timer",0);
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1186: FILE: arch/h8300/platform/h8300h/generic/timer.c:37:
+	request_irq_boot(40,timer_int,0,"timer",0);
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1186: FILE: arch/h8300/platform/h8300h/generic/timer.c:37:
+	request_irq_boot(40,timer_int,0,"timer",0);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1186: FILE: arch/h8300/platform/h8300h/generic/timer.c:37:
+	request_irq_boot(40,timer_int,0,"timer",0);
 	                                       ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1194: FILE: arch/h8300/platform/h8300h/generic/timer.c:44:
+	*(volatile unsigned char *)_8TCSR2 &= ~(1 << CMFA);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1208: FILE: arch/h8300/platform/h8300h/generic/timer.c:70:
+	request_timer_irq(26,timer_int,0,"timer",0);
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1208: FILE: arch/h8300/platform/h8300h/generic/timer.c:70:
+	request_timer_irq(26,timer_int,0,"timer",0);
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1208: FILE: arch/h8300/platform/h8300h/generic/timer.c:70:
+	request_timer_irq(26,timer_int,0,"timer",0);
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1208: FILE: arch/h8300/platform/h8300h/generic/timer.c:70:
+	request_timer_irq(26,timer_int,0,"timer",0);
 	                                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1250: FILE: arch/h8300/platform/h8300h/h8max/crt0_ram.S:25:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1266: FILE: arch/h8300/platform/h8300h/h8max/crt0_ram.S:45:
+^Ijsr^I@__move_romfs^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1268: FILE: arch/h8300/platform/h8300h/h8max/crt0_ram.S:47:
+^I$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1430: FILE: arch/h8300/platform/h8300h/h8max/timer.c:28:
+extern int request_irq_boot(unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1430: FILE: arch/h8300/platform/h8300h/h8max/timer.c:28:
+extern int request_irq_boot(unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1430: FILE: arch/h8300/platform/h8300h/h8max/timer.c:28:
+extern int request_irq_boot(unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1430: FILE: arch/h8300/platform/h8300h/h8max/timer.c:28:
+extern int request_irq_boot(unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1430: FILE: arch/h8300/platform/h8300h/h8max/timer.c:28:
+extern int request_irq_boot(unsigned int,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1431: FILE: arch/h8300/platform/h8300h/h8max/timer.c:29:
+^I^I             irqreturn_t (*handler)(int, void *, struct pt_regs *),$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1431: FILE: arch/h8300/platform/h8300h/h8max/timer.c:29:
+extern int request_irq_boot(unsigned int,
+		             irqreturn_t (*handler)(int, void *, struct pt_regs *),

ERROR:CODE_INDENT: code indent should use tabs where possible
#1432: FILE: arch/h8300/platform/h8300h/h8max/timer.c:30:
+^I^I             unsigned long, const char *, void *);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1440: FILE: arch/h8300/platform/h8300h/h8max/timer.c:34:
+	outb(H8300_TIMER_COUNT_DATA,TCORA2);
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1441: FILE: arch/h8300/platform/h8300h/h8max/timer.c:35:
+	outb(0x00,_8TCSR2);
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1442: FILE: arch/h8300/platform/h8300h/h8max/timer.c:36:
+	request_irq_boot(40,timer_int,0,"timer",0);
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1442: FILE: arch/h8300/platform/h8300h/h8max/timer.c:36:
+	request_irq_boot(40,timer_int,0,"timer",0);
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1442: FILE: arch/h8300/platform/h8300h/h8max/timer.c:36:
+	request_irq_boot(40,timer_int,0,"timer",0);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1442: FILE: arch/h8300/platform/h8300h/h8max/timer.c:36:
+	request_irq_boot(40,timer_int,0,"timer",0);
 	                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1443: FILE: arch/h8300/platform/h8300h/h8max/timer.c:37:
+	outb(0x40|0x08|0x03,_8TCR2);
 	         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1443: FILE: arch/h8300/platform/h8300h/h8max/timer.c:37:
+	outb(0x40|0x08|0x03,_8TCR2);
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1443: FILE: arch/h8300/platform/h8300h/h8max/timer.c:37:
+	outb(0x40|0x08|0x03,_8TCR2);
 	                   ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1449: FILE: arch/h8300/platform/h8300h/h8max/timer.c:42:
+	*(volatile unsigned char *)_8TCSR2 &= ~(1 << CMFA);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1489: FILE: arch/h8300/platform/h8300h/ints.c:47:
+typedef struct irq_handler {

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1490: FILE: arch/h8300/platform/h8300h/ints.c:48:
+	irqreturn_t (*handler)(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1490: FILE: arch/h8300/platform/h8300h/ints.c:48:
+	irqreturn_t (*handler)(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#1490: FILE: arch/h8300/platform/h8300h/ints.c:48:
+	irqreturn_t (*handler)(int, void *, struct pt_regs *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1503: FILE: arch/h8300/platform/h8300h/ints.c:57:
+extern unsigned long *interrupt_redirect_table;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1511: FILE: arch/h8300/platform/h8300h/ints.c:62:
+	unsigned long base,tmp;
 	                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1518: FILE: arch/h8300/platform/h8300h/ints.c:66:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1521: FILE: arch/h8300/platform/h8300h/ints.c:69:
+		if ((base+(vec_no - EXT_IRQ0)*4) != rom_vector[vec_no])
 		         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1521: FILE: arch/h8300/platform/h8300h/ints.c:69:
+		if ((base+(vec_no - EXT_IRQ0)*4) != rom_vector[vec_no])
 		                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1530: FILE: arch/h8300/platform/h8300h/ints.c:74:
+	base -= EXT_IRQ0*4;
 	                ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1533: FILE: arch/h8300/platform/h8300h/ints.c:77:
+	tmp = ~(*(volatile unsigned long *)base);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1534: FILE: arch/h8300/platform/h8300h/ints.c:78:
+	(*(volatile unsigned long *)base) = tmp;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1535: FILE: arch/h8300/platform/h8300h/ints.c:79:
+	if ((*(volatile unsigned long *)base) != tmp)

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1546: FILE: arch/h8300/platform/h8300h/ints.c:88:
+	unsigned long *ramvec,*ramvec_p;
 	                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#1546: FILE: arch/h8300/platform/h8300h/ints.c:88:
+	unsigned long *ramvec,*ramvec_p;
 	                      ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ramvec"
#1561: FILE: arch/h8300/platform/h8300h/ints.c:98:
+	if (ramvec == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1564: FILE: arch/h8300/platform/h8300h/ints.c:101:
+		printk("virtual vector at 0x%08lx\n",(unsigned long)ramvec);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1564: FILE: arch/h8300/platform/h8300h/ints.c:101:
+		printk("virtual vector at 0x%08lx\n",(unsigned long)ramvec);
 		                                    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1576: FILE: arch/h8300/platform/h8300h/ints.c:113:
+			printk("\n%p: ",ramvec_p);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1576: FILE: arch/h8300/platform/h8300h/ints.c:113:
+			printk("\n%p: ",ramvec_p);
 			               ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1577: FILE: arch/h8300/platform/h8300h/ints.c:114:
+		printk("%p ",*ramvec_p);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1577: FILE: arch/h8300/platform/h8300h/ints.c:114:
+		printk("%p ",*ramvec_p);
 		            ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#1577: FILE: arch/h8300/platform/h8300h/ints.c:114:
+		printk("%p ",*ramvec_p);
 		             ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1580: FILE: arch/h8300/platform/h8300h/ints.c:117:
+	printk("\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1585: FILE: arch/h8300/platform/h8300h/ints.c:122:
+void __init request_irq_boot(unsigned int irq, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1586: FILE: arch/h8300/platform/h8300h/ints.c:123:
+  ^I                     irqreturn_t (*handler)(int, void *, struct pt_regs *),$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1586: FILE: arch/h8300/platform/h8300h/ints.c:123:
+  ^I                     irqreturn_t (*handler)(int, void *, struct pt_regs *),$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1586: FILE: arch/h8300/platform/h8300h/ints.c:123:
+void __init request_irq_boot(unsigned int irq, 
+  	                     irqreturn_t (*handler)(int, void *, struct pt_regs *),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1586: FILE: arch/h8300/platform/h8300h/ints.c:123:
+  ^I                     irqreturn_t (*handler)(int, void *, struct pt_regs *),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1587: FILE: arch/h8300/platform/h8300h/ints.c:124:
+                             unsigned long flags, const char *devname, void *dev_id)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1587: FILE: arch/h8300/platform/h8300h/ints.c:124:
+                             unsigned long flags, const char *devname, void *dev_id)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1590: FILE: arch/h8300/platform/h8300h/ints.c:127:
+	irq_handler_t *irq_handle;
+	irq_handle = alloc_bootmem(sizeof(irq_handler_t));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1600: FILE: arch/h8300/platform/h8300h/ints.c:136:
+int request_irq(unsigned int irq, $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1605: FILE: arch/h8300/platform/h8300h/ints.c:141:
+	irq_handler_t *irq_handle;
+	if (irq < 0 || irq >= NR_IRQS) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1606: FILE: arch/h8300/platform/h8300h/ints.c:142:
+		printk("Incorrect IRQ %d from %s\n", irq, devname);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1629: FILE: arch/h8300/platform/h8300h/ints.c:157:
+	irq_handle = (irq_handler_t *)kmalloc(sizeof(irq_handler_t), GFP_ATOMIC);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!irq_handle"
#1630: FILE: arch/h8300/platform/h8300h/ints.c:158:
+	if (irq_handle == NULL)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1647: FILE: arch/h8300/platform/h8300h/ints.c:172:
+	if (irq >= NR_IRQS) {
+		return;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1651: FILE: arch/h8300/platform/h8300h/ints.c:176:
+		printk("Removing probably wrong IRQ %d from %s\n",

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1747: FILE: arch/h8300/platform/h8300h/ints.c:200:
+		*(volatile unsigned char *)IER |= (1 << (irq - EXT_IRQ0));

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1748: FILE: arch/h8300/platform/h8300h/ints.c:201:
+		*(volatile unsigned char *)ISR &= ~(1 << (irq - EXT_IRQ0));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1767: FILE: arch/h8300/platform/h8300h/ints.c:207:
+	if (irq >= EXT_IRQ0 && irq <= EXT_IRQ5) {
+		*(volatile unsigned char *)IER &= ~(1 << (irq - EXT_IRQ0));
 	}

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1768: FILE: arch/h8300/platform/h8300h/ints.c:208:
+		*(volatile unsigned char *)IER &= ~(1 << (irq - EXT_IRQ0));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1791: FILE: arch/h8300/platform/h8300h/ints.c:225:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1803: FILE: arch/h8300/platform/h8300h/ints.c:236:
+			seq_printf(p, "%3d: %10u ",i,irq_list[i]->count);
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1803: FILE: arch/h8300/platform/h8300h/ints.c:236:
+			seq_printf(p, "%3d: %10u ",i,irq_list[i]->count);
 			                            ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000350695.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 64 errors, 43 warnings, 14 checks, 1310 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000350695.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
