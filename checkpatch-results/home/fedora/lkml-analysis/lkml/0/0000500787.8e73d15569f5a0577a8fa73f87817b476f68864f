WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
diff -u --recursive --new-file --exclude=CVS --exclude=.cvsignore vanilla/linux/arch/alpha/mm/init.c linux/arch/alpha/mm/init.c

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: arch/s390x/mm/init.c:201:
+        page_cache_init(count_free_bootmem());$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: arch/s390x/mm/init.c:201:
+        page_cache_init(count_free_bootmem());$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#341: FILE: arch/sparc/mm/init.c:1:
+/*  $Id: init.c,v 1.101 2001/11/10 13:30:31 davem Exp $

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#341: FILE: arch/sparc/mm/init.c:1:
+/*  $Id: init.c,v 1.101 2001/11/10 13:30:31 davem Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#367: FILE: arch/sparc64/mm/init.c:1:
+/*  $Id: init.c,v 1.201 2001/11/10 13:30:31 davem Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#367: FILE: arch/sparc64/mm/init.c:1:
+/*  $Id: init.c,v 1.201 2001/11/10 13:30:31 davem Exp $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#404: FILE: include/linux/bootmem.h:46:
+extern unsigned long __init count_free_bootmem (void);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#404: FILE: include/linux/bootmem.h:46:
+extern unsigned long __init count_free_bootmem (void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#410: FILE: include/linux/bootmem.h:52:
+extern unsigned long __init count_free_bootmem_node (pg_data_t *pgdat);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#410: FILE: include/linux/bootmem.h:52:
+extern unsigned long __init count_free_bootmem_node (pg_data_t *pgdat);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#464: FILE: mm/bootmem.c:284:
+	if (!bdata->node_bootmem_map) BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#464: FILE: mm/bootmem.c:284:
+	if (!bdata->node_bootmem_map) BUG();

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#476: FILE: mm/bootmem.c:296:
+	total += ((bdata->node_low_pfn-(bdata->node_boot_start >> PAGE_SHIFT))/8 + PAGE_SIZE-1)/PAGE_SIZE;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#476: FILE: mm/bootmem.c:296:
+	total += ((bdata->node_low_pfn-(bdata->node_boot_start >> PAGE_SHIFT))/8 + PAGE_SIZE-1)/PAGE_SIZE;
 	                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#476: FILE: mm/bootmem.c:296:
+	total += ((bdata->node_low_pfn-(bdata->node_boot_start >> PAGE_SHIFT))/8 + PAGE_SIZE-1)/PAGE_SIZE;
 	                                                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#476: FILE: mm/bootmem.c:296:
+	total += ((bdata->node_low_pfn-(bdata->node_boot_start >> PAGE_SHIFT))/8 + PAGE_SIZE-1)/PAGE_SIZE;
 	                                                                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#476: FILE: mm/bootmem.c:296:
+	total += ((bdata->node_low_pfn-(bdata->node_boot_start >> PAGE_SHIFT))/8 + PAGE_SIZE-1)/PAGE_SIZE;
 	                                                                                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#488: FILE: mm/bootmem.c:321:
+unsigned long __init count_free_bootmem_node (pg_data_t *pgdat)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#490: FILE: mm/bootmem.c:323:
+	return(count_free_bootmem_core(pgdat));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#502: FILE: mm/bootmem.c:348:
+unsigned long __init count_free_bootmem (void)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#504: FILE: mm/bootmem.c:350:
+	return(count_free_bootmem_core(&contig_page_data));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#552: FILE: mm/filemap.c:2959:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page_hash_table"
#561: FILE: mm/filemap.c:2968:
+		if (page_hash_table == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page_hash_table"
#563: FILE: mm/filemap.c:2970:
+	} while (page_hash_table == NULL &&

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#572: FILE: mm/filemap.c:2973:
+	printk("Page-cache hash table entries: %d (%ld bytes)\n",

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000500787.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 13 warnings, 8 checks, 439 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000500787.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
