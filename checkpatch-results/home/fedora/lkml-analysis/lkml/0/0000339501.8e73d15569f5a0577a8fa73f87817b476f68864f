WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#93: 
D: kernel/futex.c         |  368 +++++++++++++++++++++++++------------------------

WARNING:TYPO_SPELLING: 'adress' may be misspelled - perhaps 'address'?
#116: 
D: wake a futex at the same adress.
                            ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'noticably' may be misspelled - perhaps 'noticeably'?
#154: 
D: 	   table.  So they should be noticably faster.
   	                             ^^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#298: FILE: kernel/futex.c:92:
+static int __get_page_keys(unsigned long addr, unsigned long * keys)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#332: FILE: kernel/futex.c:119:
+	if (unlikely((vma->vm_flags & (VM_IO|VM_READ)) != VM_READ))
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#340: FILE: kernel/futex.c:126:
+		keys[0] = (unsigned long) mm;

CHECK:SPACING: No space is necessary after a cast
#351: FILE: kernel/futex.c:134:
+	keys[0] = (unsigned long) vma->vm_file->f_dentry->d_inode;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page"
#379: FILE: kernel/futex.c:153:
+	if (likely(page != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#398: FILE: kernel/futex.c:171:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#432: FILE: kernel/futex.c:195:
+		if (this->keys[0] == keys[0] && this->keys[1] == keys[1]
+		    && this->offset == offset) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#433: FILE: kernel/futex.c:196:
+		    && this->offset == offset) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#515: FILE: kernel/futex.c:241:
+		if (this->keys[0] == keys1[0] && this->keys[1] == keys1[1]
+		    && this->offset == offset1) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#516: FILE: kernel/futex.c:242:
+		    && this->offset == offset1) {
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#558: FILE: kernel/futex.c:268:
+			    int fd, struct file *filp)
 			                         ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#651: FILE: kernel/futex.c:335:
+^I */^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#771: FILE: kernel/futex.c:484:
+	queue_me(q, keys, uaddr, offset, ret, filp);
 	                                      ^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#814: FILE: mm/fremap.c:162:
+				end <= vma->vm_end) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#817: FILE: mm/fremap.c:165:
+		if (start == vma->vm_start && end == vma->vm_end &&
+				pgoff == vma->vm_pgoff)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#984: FILE: kernel/futex.c:50:
+struct private_key
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#990: FILE: kernel/futex.c:56:
+struct shared_key
+{

ERROR:OPEN_BRACE: open brace '{' following union go on the same line
#996: FILE: kernel/futex.c:62:
+union hash_key
+{

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1036: FILE: kernel/futex.c:98:
+	u32 hash = jhash2((u32*)key, sizeof(*key)/sizeof(u32), offset);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1036: FILE: kernel/futex.c:98:
+	u32 hash = jhash2((u32*)key, sizeof(*key)/sizeof(u32), offset);
 	                                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1040: FILE: kernel/futex.c:102:
+	return &futex_queues[hash & ((1<<FUTEX_HASHBITS)-1)];
 	                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1040: FILE: kernel/futex.c:102:
+	return &futex_queues[hash & ((1<<FUTEX_HASHBITS)-1)];
 	                                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1082: FILE: kernel/futex.c:133:
+	if (unlikely((vma->vm_flags & (VM_IO|VM_READ|VM_WRITE))
 	                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1082: FILE: kernel/futex.c:133:
+	if (unlikely((vma->vm_flags & (VM_IO|VM_READ|VM_WRITE))
 	                                            ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1106: FILE: kernel/futex.c:152:
+		key->shared.page_index
+			= (((addr - vma->vm_start) >> PAGE_SHIFT)

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1160: FILE: kernel/futex.c:211:
+		if (this->key.raw[0] == key.raw[0]
+		    && this->key.raw[1] == key.raw[1]

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1196: FILE: kernel/futex.c:257:
+		if (this->key.raw[0] == key1.raw[0]
+		    && this->key.raw[1] == key1.raw[1]

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1289: FILE: kernel/futex.c:389:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1322: FILE: kernel/futex.c:490:
+	queue_me(q, &key, uaddr, offset, ret, filp);
 	                                      ^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000339501.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 7 warnings, 19 checks, 971 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000339501.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
