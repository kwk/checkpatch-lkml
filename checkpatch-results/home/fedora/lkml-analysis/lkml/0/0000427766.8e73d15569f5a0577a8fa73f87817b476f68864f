WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#46: FILE: include/linux/sched.h:700:
+#define __wait_event_timeout(wq, condition, ret) ^I^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'wq' - possible side-effects?
#46: FILE: include/linux/sched.h:700:
+#define __wait_event_timeout(wq, condition, ret) 			\
+do {									\
+	wait_queue_t __wait;						\
+	init_waitqueue_entry(&__wait, current);				\
+									\
+	add_wait_queue(&wq, &__wait);					\
+	for (;;) {							\
+		set_current_state(TASK_UNINTERRUPTIBLE);		\
+		if (condition)						\
+			break;						\
+		if(ret = schedule_timeout(ret))				\
+			continue;					\
+		ret = -ETIME;						\
+		break;							\
+	}								\
+	current->state = TASK_RUNNING;					\
+	remove_wait_queue(&wq, &__wait);				\
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'wq' may be better as '(wq)' to avoid precedence issues
#46: FILE: include/linux/sched.h:700:
+#define __wait_event_timeout(wq, condition, ret) 			\
+do {									\
+	wait_queue_t __wait;						\
+	init_waitqueue_entry(&__wait, current);				\
+									\
+	add_wait_queue(&wq, &__wait);					\
+	for (;;) {							\
+		set_current_state(TASK_UNINTERRUPTIBLE);		\
+		if (condition)						\
+			break;						\
+		if(ret = schedule_timeout(ret))				\
+			continue;					\
+		ret = -ETIME;						\
+		break;							\
+	}								\
+	current->state = TASK_RUNNING;					\
+	remove_wait_queue(&wq, &__wait);				\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ret' - possible side-effects?
#46: FILE: include/linux/sched.h:700:
+#define __wait_event_timeout(wq, condition, ret) 			\
+do {									\
+	wait_queue_t __wait;						\
+	init_waitqueue_entry(&__wait, current);				\
+									\
+	add_wait_queue(&wq, &__wait);					\
+	for (;;) {							\
+		set_current_state(TASK_UNINTERRUPTIBLE);		\
+		if (condition)						\
+			break;						\
+		if(ret = schedule_timeout(ret))				\
+			continue;					\
+		ret = -ETIME;						\
+		break;							\
+	}								\
+	current->state = TASK_RUNNING;					\
+	remove_wait_queue(&wq, &__wait);				\
+} while (0)

ERROR:SPACING: space required before the open parenthesis '('
#56: FILE: include/linux/sched.h:710:
+		if(ret = schedule_timeout(ret))				\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#56: FILE: include/linux/sched.h:710:
+		if(ret = schedule_timeout(ret))				\

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'condition' - possible side-effects?
#65: FILE: include/linux/sched.h:719:
+#define wait_event_timeout(wq, condition, timeout)			\
+({									\
+ 	long __ret = timeout;						\
+	if (!(condition))						\
+		__wait_event_timeout(wq, condition, __ret);		\
+	__ret;								\
+})

ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: include/linux/sched.h:721:
+ ^Ilong __ret = timeout;^I^I^I^I^I^I\$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#67: FILE: include/linux/sched.h:721:
+ ^Ilong __ret = timeout;^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: include/linux/sched.h:721:
+ ^Ilong __ret = timeout;^I^I^I^I^I^I\$

ERROR:SPACING: space required before the open parenthesis '('
#93: FILE: include/linux/sched.h:767:
+			if(tout = schedule_timeout(tout))		\

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#93: FILE: include/linux/sched.h:767:
+			if(tout = schedule_timeout(tout))		\

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000427766.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 3 warnings, 4 checks, 68 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000427766.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
