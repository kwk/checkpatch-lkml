WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
> the card is not detected by pnp, that problem stays. is that a problem of the pnp layer or is

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: core.c:1433:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: core.c:1441:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: core.c:1482:
+		memcpy(dev_id->id,id,sizeof(dev_id->id));
 		                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: core.c:1482:
+		memcpy(dev_id->id,id,sizeof(dev_id->id));
 		                    ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#140: FILE: core.c:1501:
+		if(insert_device(card, dev)<0) {
 		                           ^

ERROR:SPACING: space required before the open parenthesis '('
#140: FILE: core.c:1501:
+		if(insert_device(card, dev)<0) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#179: FILE: opl3sa2.c:167:
+	{.id = "YMH0020", .driver_data = 0, .devs = { {.id="YMH0021"}, } },
 	                                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#182: FILE: opl3sa2.c:169:
+	{.id = "YMH0030", .driver_data = 0, .devs = { {.id="YMH0021"}, } },
 	                                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#185: FILE: opl3sa2.c:171:
+	{.id = "YMH0800", .driver_data = 0, .devs = { {.id="YMH0021"}, } },
 	                                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#188: FILE: opl3sa2.c:173:
+	{.id = "NMX2200", .driver_data = 0, .devs = { {.id="NMX2210"}, } },
 	                                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#190: FILE: opl3sa2.c:175:
+	{.id = "PnPbios", .driver_data = 0, .devs = { {.id="YMH0021"}, } },
 	                                                  ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#205: FILE: opl3sa2.c:628:
+static int __devinit snd_opl3sa2_isapnp(int dev, opl3sa2_t *chip,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#217: FILE: opl3sa2.c:636:
+	pdev = chip->dev = pnp_request_card_device(card, id->devs[0].id, NULL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#270: FILE: opl3sa2.c:680:
+static int __devinit snd_opl3sa2_isapnp(int dev, opl3sa2_t *chip,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#292: FILE: opl3sa2.c:711:
+static int __devinit snd_opl3sa2_probe(int dev, int _isapnp,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#329: FILE: opl3sa2.c:757:
+	if (_isapnp && (err = snd_opl3sa2_isapnp(dev, chip, pcard, pid)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#350: FILE: opl3sa2.c:846:
+static int __devinit snd_opl3sa2_isapnp_detect(struct pnp_card *card,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: opl3sa2.c:847:
+static int __devinit snd_opl3sa2_isapnp_detect(struct pnp_card *card,
+					    const struct pnp_card_device_id *id)

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: opl3sa2.c:853:
+                if (!enable[dev] || !isapnp[dev])$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: opl3sa2.c:853:
+                if (!enable[dev] || !isapnp[dev])$

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: opl3sa2.c:855:
+                res = snd_opl3sa2_probe(dev, 1, card, id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: opl3sa2.c:855:
+                res = snd_opl3sa2_probe(dev, 1, card, id);$

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#372: FILE: opl3sa2.c:864:
+static void __devexit snd_opl3sa2_isapnp_remove(struct pnp_card * pcard)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#372: FILE: opl3sa2.c:864:
+static void __devexit snd_opl3sa2_isapnp_remove(struct pnp_card * pcard)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#375: FILE: opl3sa2.c:866:
+	snd_card_t * card = (snd_card_t *) pnpc_get_drvdata(pcard);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#375: FILE: opl3sa2.c:866:
+	snd_card_t * card = (snd_card_t *) pnpc_get_drvdata(pcard);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: opl3sa2.c:867:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: opl3sa2.c:912:
+        int dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: opl3sa2.c:912:
+        int dev;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000398206.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 9 warnings, 3 checks, 345 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000398206.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
