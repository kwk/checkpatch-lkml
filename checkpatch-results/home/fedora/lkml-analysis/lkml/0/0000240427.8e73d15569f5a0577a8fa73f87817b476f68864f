WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
   NTFS: Splitt runlist related functions off from attrib.[hc] to runlist.[hc].

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#36: 
   Signed-off-by: Anton Altaparmakov <aia21@cantab.net>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1122: FILE: fs/ntfs/runlist.c:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1140: FILE: fs/ntfs/runlist.c:19:
+ * distribution in the file COPYING); if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1141: FILE: fs/ntfs/runlist.c:20:
+ * Foundation,Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1153: FILE: fs/ntfs/runlist.c:32:
+static inline void ntfs_rl_mm(runlist_element *base, int dst, int src,
+		int size)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dst != src'
#1155: FILE: fs/ntfs/runlist.c:34:
+	if (likely((dst != src) && (size > 0)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size > 0'
#1155: FILE: fs/ntfs/runlist.c:34:
+	if (likely((dst != src) && (size > 0)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1156: FILE: fs/ntfs/runlist.c:35:
+		memmove(base + dst, base + src, size * sizeof (*base));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1166: FILE: fs/ntfs/runlist.c:45:
+static inline void ntfs_rl_mc(runlist_element *dstbase, int dst,
+		runlist_element *srcbase, int src, int size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1193: FILE: fs/ntfs/runlist.c:72:
+static inline runlist_element *ntfs_rl_realloc(runlist_element *rl,
+		int old_size, int new_size)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rl"
#1206: FILE: fs/ntfs/runlist.c:85:
+	if (likely(rl != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1229: FILE: fs/ntfs/runlist.c:108:
+static inline BOOL ntfs_are_rl_mergeable(runlist_element *dst,
+		runlist_element *src)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1231: FILE: fs/ntfs/runlist.c:110:
+	BUG_ON(!dst);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1232: FILE: fs/ntfs/runlist.c:111:
+	BUG_ON(!src);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dst->lcn < 0'
#1234: FILE: fs/ntfs/runlist.c:113:
+	if ((dst->lcn < 0) || (src->lcn < 0))     /* Are we merging holes? */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'src->lcn < 0'
#1234: FILE: fs/ntfs/runlist.c:113:
+	if ((dst->lcn < 0) || (src->lcn < 0))     /* Are we merging holes? */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1309: FILE: fs/ntfs/runlist.c:188:
+static inline runlist_element *ntfs_rl_append(runlist_element *dst,
+		int dsize, runlist_element *src, int ssize, int loc)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1314: FILE: fs/ntfs/runlist.c:193:
+	BUG_ON(!dst);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1315: FILE: fs/ntfs/runlist.c:194:
+	BUG_ON(!src);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1374: FILE: fs/ntfs/runlist.c:253:
+static inline runlist_element *ntfs_rl_insert(runlist_element *dst,
+		int dsize, runlist_element *src, int ssize, int loc)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1381: FILE: fs/ntfs/runlist.c:260:
+	BUG_ON(!dst);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1382: FILE: fs/ntfs/runlist.c:261:
+	BUG_ON(!src);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1387: FILE: fs/ntfs/runlist.c:266:
+	 *	   extend to match the discontinuity. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BRACES: braces {} should be used on all arms of this statement
#1388: FILE: fs/ntfs/runlist.c:267:
+	if (loc == 0)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1390: FILE: fs/ntfs/runlist.c:269:
+	else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1405: FILE: fs/ntfs/runlist.c:284:
+	 * one if there was a discontinuity, less one for a trailing hole. */

CHECK:BRACES: braces {} should be used on all arms of this statement
#1432: FILE: fs/ntfs/runlist.c:311:
+		if (hole)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1434: FILE: fs/ntfs/runlist.c:313:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1480: FILE: fs/ntfs/runlist.c:359:
+static inline runlist_element *ntfs_rl_replace(runlist_element *dst,
+		int dsize, runlist_element *src, int ssize, int loc)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1486: FILE: fs/ntfs/runlist.c:365:
+	BUG_ON(!dst);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1487: FILE: fs/ntfs/runlist.c:366:
+	BUG_ON(!src);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1495: FILE: fs/ntfs/runlist.c:374:
+	 * ends were merged. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1546: FILE: fs/ntfs/runlist.c:425:
+static inline runlist_element *ntfs_rl_split(runlist_element *dst, int dsize,
+		runlist_element *src, int ssize, int loc)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1548: FILE: fs/ntfs/runlist.c:427:
+	BUG_ON(!dst);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1549: FILE: fs/ntfs/runlist.c:428:
+	BUG_ON(!src);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1565: FILE: fs/ntfs/runlist.c:444:
+	dst[loc].length		= dst[loc+1].vcn       - dst[loc].vcn;
 	               		         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1566: FILE: fs/ntfs/runlist.c:445:
+	dst[loc+ssize+1].vcn    = dst[loc+ssize].vcn   + dst[loc+ssize].length;
 	       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1566: FILE: fs/ntfs/runlist.c:445:
+	dst[loc+ssize+1].vcn    = dst[loc+ssize].vcn   + dst[loc+ssize].length;
 	             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1566: FILE: fs/ntfs/runlist.c:445:
+	dst[loc+ssize+1].vcn    = dst[loc+ssize].vcn   + dst[loc+ssize].length;
 	                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1566: FILE: fs/ntfs/runlist.c:445:
+	dst[loc+ssize+1].vcn    = dst[loc+ssize].vcn   + dst[loc+ssize].length;
 	                                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1567: FILE: fs/ntfs/runlist.c:446:
+	dst[loc+ssize+1].length = dst[loc+ssize+2].vcn - dst[loc+ssize+1].vcn;
 	       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1567: FILE: fs/ntfs/runlist.c:446:
+	dst[loc+ssize+1].length = dst[loc+ssize+2].vcn - dst[loc+ssize+1].vcn;
 	             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1567: FILE: fs/ntfs/runlist.c:446:
+	dst[loc+ssize+1].length = dst[loc+ssize+2].vcn - dst[loc+ssize+1].vcn;
 	                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1567: FILE: fs/ntfs/runlist.c:446:
+	dst[loc+ssize+1].length = dst[loc+ssize+2].vcn - dst[loc+ssize+1].vcn;
 	                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1567: FILE: fs/ntfs/runlist.c:446:
+	dst[loc+ssize+1].length = dst[loc+ssize+2].vcn - dst[loc+ssize+1].vcn;
 	                                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1567: FILE: fs/ntfs/runlist.c:446:
+	dst[loc+ssize+1].length = dst[loc+ssize+2].vcn - dst[loc+ssize+1].vcn;
 	                                                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1607: FILE: fs/ntfs/runlist.c:486:
+runlist_element *ntfs_merge_runlists(runlist_element *drl,
+		runlist_element *srl)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1614: FILE: fs/ntfs/runlist.c:493:
+	int dfinal, sfinal;	/* The last index into @[ds]rl with
+				   lcn >= LCN_HOLE. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1614: FILE: fs/ntfs/runlist.c:493:
+				   lcn >= LCN_HOLE. */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1651: FILE: fs/ntfs/runlist.c:530:
+	si = di = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1658: FILE: fs/ntfs/runlist.c:537:
+	BUG_ON(!srl[si].length);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drl[di].vcn == srl[si].vcn'
#1675: FILE: fs/ntfs/runlist.c:554:
+	if ((drl[di].vcn == srl[si].vcn) && (drl[di].lcn >= 0) &&
+			(srl[si].lcn >= 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drl[di].lcn >= 0'
#1675: FILE: fs/ntfs/runlist.c:554:
+	if ((drl[di].vcn == srl[si].vcn) && (drl[di].lcn >= 0) &&
+			(srl[si].lcn >= 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'srl[si].lcn >= 0'
#1675: FILE: fs/ntfs/runlist.c:554:
+	if ((drl[di].vcn == srl[si].vcn) && (drl[di].lcn >= 0) &&
+			(srl[si].lcn >= 0)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1676: FILE: fs/ntfs/runlist.c:555:
+	if ((drl[di].vcn == srl[si].vcn) && (drl[di].lcn >= 0) &&
+			(srl[si].lcn >= 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drl[dins].length == 0'
#1709: FILE: fs/ntfs/runlist.c:588:
+	if (start && finish && (drl[dins].length == 0))

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1713: FILE: fs/ntfs/runlist.c:592:
+#if 0

WARNING:SPLIT_STRING: quoted string split across lines
#1745: FILE: fs/ntfs/runlist.c:624:
+				ntfs_debug("Old marker = 0x%llx, replacing "
+						"with LCN_ENOENT.",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1764: FILE: fs/ntfs/runlist.c:643:
+					 * extra memory already! (AIA) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1784: FILE: fs/ntfs/runlist.c:663:
+				 * memory already! (AIA) */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1837: FILE: fs/ntfs/runlist.c:716:
+runlist_element *decompress_mapping_pairs(const ntfs_volume *vol,
+		const ATTR_RECORD *attr, runlist_element *old_rl)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1847: FILE: fs/ntfs/runlist.c:726:
+	u16 rlpos;		/* Current runlist position in units of
+				   runlist_elements. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1847: FILE: fs/ntfs/runlist.c:726:
+				   runlist_elements. */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1852: FILE: fs/ntfs/runlist.c:731:
+	if (!attr || !attr->non_resident || sle64_to_cpu(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1862: FILE: fs/ntfs/runlist.c:741:
+	buf = (u8*)attr + le16_to_cpu(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1862: FILE: fs/ntfs/runlist.c:741:
+	buf = (u8*)attr + le16_to_cpu(

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1864: FILE: fs/ntfs/runlist.c:743:
+	attr_end = (u8*)attr + le32_to_cpu(attr->length);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1865: FILE: fs/ntfs/runlist.c:744:
+	if (unlikely(buf < (u8*)attr || buf > attr_end)) {

WARNING:SPLIT_STRING: quoted string split across lines
#1918: FILE: fs/ntfs/runlist.c:797:
+			ntfs_error(vol->sb, "Missing length entry in mapping "
+					"pairs array.");

WARNING:SPLIT_STRING: quoted string split across lines
#1927: FILE: fs/ntfs/runlist.c:806:
+			ntfs_error(vol->sb, "Invalid length in mapping pairs "
+					"array.");

CHECK:BRACES: braces {} should be used on all arms of this statement
#1942: FILE: fs/ntfs/runlist.c:821:
+		if (!(*buf & 0xf0))
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1944: FILE: fs/ntfs/runlist.c:823:
+		else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1947: FILE: fs/ntfs/runlist.c:826:
+			u8 b2 = *buf & 0xf;
+			b = b2 + ((*buf >> 4) & 0xf);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#1972: FILE: fs/ntfs/runlist.c:851:
+				ntfs_error(vol->sb, "Invalid LCN < -1 in "
+						"mapping pairs array.");

WARNING:SPLIT_STRING: quoted string split across lines
#1993: FILE: fs/ntfs/runlist.c:872:
+		ntfs_error(vol->sb, "Corrupt mapping pairs array in "
+				"non-resident attribute.");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2000: FILE: fs/ntfs/runlist.c:879:
+		max_cluster = (sle64_to_cpu(

WARNING:SPLIT_STRING: quoted string split across lines
#2011: FILE: fs/ntfs/runlist.c:890:
+			ntfs_debug("More extents to follow; deltaxcn = 0x%llx, "
+					"max_cluster = 0x%llx",

WARNING:SPLIT_STRING: quoted string split across lines
#2020: FILE: fs/ntfs/runlist.c:899:
+			ntfs_error(vol->sb, "Corrupt attribute. deltaxcn = "
+					"0x%llx, max_cluster = 0x%llx",

CHECK:BRACES: Unbalanced braces around else statement
#2026: FILE: fs/ntfs/runlist.c:905:
+	} else /* Not the base extent. There may be more extents to follow. */

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#2040: FILE: fs/ntfs/runlist.c:919:
+	if (likely(!IS_ERR(old_rl)))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2079: FILE: fs/ntfs/runlist.c:958:
+	BUG_ON(vcn < 0);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2093: FILE: fs/ntfs/runlist.c:972:
+		if (unlikely(vcn < rl[i+1].vcn)) {
 		                       ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2112: FILE: fs/ntfs/runlist.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2131: FILE: fs/ntfs/runlist.h:20:
+ * distribution in the file COPYING); if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2132: FILE: fs/ntfs/runlist.h:21:
+ * Foundation,Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2148: FILE: fs/ntfs/runlist.h:37:
+typedef enum {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2154: FILE: fs/ntfs/runlist.h:43:
+extern runlist_element *decompress_mapping_pairs(const ntfs_volume *vol,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2155: FILE: fs/ntfs/runlist.h:44:
+extern runlist_element *decompress_mapping_pairs(const ntfs_volume *vol,
+		const ATTR_RECORD *attr, runlist_element *old_rl);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2157: FILE: fs/ntfs/runlist.h:46:
+extern LCN ntfs_vcn_to_lcn(const runlist_element *rl, const VCN vcn);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240427.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 37 warnings, 46 checks, 2083 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240427.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
