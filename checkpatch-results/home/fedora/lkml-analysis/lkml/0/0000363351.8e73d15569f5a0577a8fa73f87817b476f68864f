ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: drivers/block/ll_rw_blk.c:447:
+void blk_print_stats(kdev_t dev) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: drivers/block/ll_rw_blk.c:462:
+^Iif (q->num_wait) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: drivers/block/ll_rw_blk.c:466:
+^Iprintk("device %s: num_req %lu, total jiffies waited %lu\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#108: FILE: drivers/block/ll_rw_blk.c:466:
+	printk("device %s: num_req %lu, total jiffies waited %lu\n", 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#110: FILE: drivers/block/ll_rw_blk.c:468:
+	printk("\t%lu forced to wait\n", q->num_wait);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#111: FILE: drivers/block/ll_rw_blk.c:469:
+	printk("\t%lu min wait, %lu max wait\n", min_wait, q->max_wait);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#112: FILE: drivers/block/ll_rw_blk.c:470:
+	printk("\t%lu average wait\n", avg_wait);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#114: FILE: drivers/block/ll_rw_blk.c:472:
+	printk("\t%lu < 100, %lu < 200, %lu < 300, %lu < 400, %lu < 500\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: drivers/block/ll_rw_blk.c:473:
+               d[0], d[1], d[2], d[3], d[4]);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: drivers/block/ll_rw_blk.c:473:
+	printk("\t%lu < 100, %lu < 200, %lu < 300, %lu < 400, %lu < 500\n",
+               d[0], d[1], d[2], d[3], d[4]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: drivers/block/ll_rw_blk.c:473:
+               d[0], d[1], d[2], d[3], d[4]);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#118: FILE: drivers/block/ll_rw_blk.c:476:
+	printk("\t%lu waits longer than 500 jiffies\n", high_wait);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: drivers/block/ll_rw_blk.c:488:
+void blk_reset_stats(kdev_t dev) $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#130: FILE: drivers/block/ll_rw_blk.c:488:
+}
+void blk_reset_stats(kdev_t dev) 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#133: FILE: drivers/block/ll_rw_blk.c:491:
+	request_queue_t *q;
+	q = blk_get_queue(dev);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#134: FILE: drivers/block/ll_rw_blk.c:492:
+	if (!q)
+	    return;

WARNING:TABSTOP: Statements should start on a tabstop
#135: FILE: drivers/block/ll_rw_blk.c:493:
+	    return;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#136: FILE: drivers/block/ll_rw_blk.c:494:
+	printk("reset latency stats on device %s\n", kdevname(dev));

CHECK:BRACES: Unbalanced braces around else statement
#166: FILE: drivers/block/ll_rw_blk.c:579:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: drivers/block/ll_rw_blk.c:595:
+/* $

WARNING:MEMORY_BARRIER: memory barrier without comment
#190: FILE: drivers/block/ll_rw_blk.c:602:
+	mb();

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#191: FILE: drivers/block/ll_rw_blk.c:603:
+	if (unlikely(waitqueue_active(&q->wait_for_requests[rw])))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: drivers/block/ll_rw_blk.c:617:
+ * number of requests once it has woken up.  But, there's no way to $

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#298: FILE: drivers/block/ll_rw_blk.c:676:
+	if (!waitqueue_active(&q->wait_for_requests[rw]))

WARNING:BRACES: braces {} are not necessary for single statement blocks
#308: FILE: drivers/block/ll_rw_blk.c:686:
+	if (time_waited < 500) {
+		q->deviation[time_waited/100]++;
+	}

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#309: FILE: drivers/block/ll_rw_blk.c:687:
+		q->deviation[time_waited/100]++;
 		                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#337: FILE: drivers/block/ll_rw_blk.c:930:
+			smp_mb();

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#338: FILE: drivers/block/ll_rw_blk.c:931:
+			if (waitqueue_active(&q->wait_for_requests[rw]))

WARNING:TYPO_SPELLING: 'suprious' may be misspelled - perhaps 'spurious'?
#414: FILE: fs/buffer.c:167:
+		 * don't do a suprious unplug if we get a racy
 		              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#548: FILE: include/linux/blkdev.h:261:
+extern void blk_print_stats(kdev_t dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#558: FILE: include/linux/pagemap.h:100:
+extern void FASTCALL(wakeup_page_waiters(struct page * page));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#558: FILE: include/linux/pagemap.h:100:
+extern void FASTCALL(wakeup_page_waiters(struct page * page));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#584: FILE: mm/filemap.c:820:
+void wakeup_page_waiters(struct page * page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#586: FILE: mm/filemap.c:822:
+	wait_queue_head_t * head;

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#589: FILE: mm/filemap.c:825:
+	if (waitqueue_active(head))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000363351.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 19 warnings, 6 checks, 487 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000363351.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
