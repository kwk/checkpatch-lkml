WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#110: FILE: arch/arm/mach-pxa/akita-ioexp.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#132: FILE: arch/arm/mach-pxa/akita-ioexp.c:23:
+int max7310_set_ouputs(struct device *dev, int outputs);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:RETURN_VOID: void function return statements are not generally useful
#147: FILE: arch/arm/mach-pxa/akita-ioexp.c:38:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#156: FILE: arch/arm/mach-pxa/akita-ioexp.c:47:
+	return;
+}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#158: FILE: arch/arm/mach-pxa/akita-ioexp.c:49:
+EXPORT_SYMBOL(akita_set_ioexp);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#159: FILE: arch/arm/mach-pxa/akita-ioexp.c:50:
+EXPORT_SYMBOL(akita_reset_ioexp);

WARNING:LINE_SPACING: Missing a blank line after declarations
#164: FILE: arch/arm/mach-pxa/akita-ioexp.c:55:
+	struct i2c_client *client = to_i2c_client(dev);
+	return (strncmp(client->name, "max7310", 7) == 0);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#170: FILE: arch/arm/mach-pxa/akita-ioexp.c:61:
+		akita_ioexp_device = bus_find_device(&i2c_bus_type, NULL, NULL, is_akita_ioexp_device);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: arch/arm/mach-pxa/akita-ioexp.c:68:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#184: FILE: arch/arm/mach-pxa/akita-ioexp.c:75:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#188: FILE: arch/arm/mach-pxa/akita-ioexp.c:79:
+	if (level == SUSPEND_POWER_DOWN) {
+		flush_scheduled_work();
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: arch/arm/mach-pxa/akita-ioexp.c:83:
+}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: arch/arm/mach-pxa/akita-ioexp.c:84:
+^I^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#196: FILE: arch/arm/mach-pxa/akita-ioexp.c:87:
+	if (level == RESUME_POWER_ON) {
+		schedule_work(&akita_ioexp);
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#206: FILE: arch/arm/mach-pxa/akita-ioexp.c:97:
+
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#221: FILE: arch/arm/mach-pxa/akita-ioexp.c:112:
+static int __devinit akita_ioexp_init(void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: drivers/i2c/chips/max7310.c:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#235: FILE: drivers/i2c/chips/max7310.c:1:
+/* 

WARNING:TYPO_SPELLING: 'Regiser' may be misspelled - perhaps 'Register'?
#254: FILE: drivers/i2c/chips/max7310.c:20:
+/* MAX7310 Regiser Map */
            ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#262: FILE: drivers/i2c/chips/max7310.c:28:
+static unsigned short normal_i2c[] = { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: drivers/i2c/chips/max7310.c:29:
+^I0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#264: FILE: drivers/i2c/chips/max7310.c:30:
+^I0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: drivers/i2c/chips/max7310.c:31:
+^I0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: drivers/i2c/chips/max7310.c:32:
+^I0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: drivers/i2c/chips/max7310.c:33:
+^I0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: drivers/i2c/chips/max7310.c:34:
+^I0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: drivers/i2c/chips/max7310.c:36:
+^II2C_CLIENT_END $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: drivers/i2c/chips/max7310.c:46:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: drivers/i2c/chips/max7310.c:54:
+^Iret = max7310_write(client, MAX7310_POLINV, polarity); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: drivers/i2c/chips/max7310.c:57:
+^Iret = max7310_write(client, MAX7310_IODIR, iomode); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: drivers/i2c/chips/max7310.c:65:
+^Ireturn max7310_write(client, MAX7310_OUTPUT, outputs); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: drivers/i2c/chips/max7310.c:72:
+^Ireturn max7310_read(client, MAX7310_INPUT); $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#309: FILE: drivers/i2c/chips/max7310.c:75:
+EXPORT_SYMBOL(max7310_config);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#310: FILE: drivers/i2c/chips/max7310.c:76:
+EXPORT_SYMBOL(max7310_set_ouputs);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#311: FILE: drivers/i2c/chips/max7310.c:77:
+EXPORT_SYMBOL(max7310_read_inputs);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#313: FILE: drivers/i2c/chips/max7310.c:79:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: drivers/i2c/chips/max7310.c:80:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#315: FILE: drivers/i2c/chips/max7310.c:81:
+ * Sysfs Functions $

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#322: FILE: drivers/i2c/chips/max7310.c:88:
+static ssize_t set_gpio(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#324: FILE: drivers/i2c/chips/max7310.c:90:
+	unsigned long val = simple_strtoul(buf, NULL, 16);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_gpio' to 'gpio_show' 'set_gpio' to 'gpio_store'
#332: FILE: drivers/i2c/chips/max7310.c:98:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#334: FILE: drivers/i2c/chips/max7310.c:100:
+static DEVICE_ATTR(gpio, S_IWUSR | S_IRUGO, show_gpio, set_gpio);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#336: FILE: drivers/i2c/chips/max7310.c:102:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#358: FILE: drivers/i2c/chips/max7310.c:124:
+	if (i2c_master_recv(client, data, 1) == 1) {
+		return data[0];
+	}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#369: FILE: drivers/i2c/chips/max7310.c:135:
+	if (!(new_client = kmalloc(sizeof(struct i2c_client), GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_client)...) over kmalloc(sizeof(struct i2c_client)...)
#369: FILE: drivers/i2c/chips/max7310.c:135:
+	if (!(new_client = kmalloc(sizeof(struct i2c_client), GFP_KERNEL)))

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: drivers/i2c/chips/max7310.c:140:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#377: FILE: drivers/i2c/chips/max7310.c:143:
+	if ((err = i2c_attach_client(new_client))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#381: FILE: drivers/i2c/chips/max7310.c:147:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#398: FILE: drivers/i2c/chips/max7310.c:164:
+	if ((err = i2c_detach_client(client)))

WARNING:INDENTED_LABEL: labels should not be indented
#415: FILE: drivers/i2c/chips/max7310.c:181:
+	name:   "max7310",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#416: FILE: drivers/i2c/chips/max7310.c:182:
+	flags:  I2C_CLIENT_ALLOW_USE,
 	     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#416: FILE: drivers/i2c/chips/max7310.c:182:
+	flags:  I2C_CLIENT_ALLOW_USE,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#417: FILE: drivers/i2c/chips/max7310.c:183:
+	driver: &max7310_i2c_driver,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#417: FILE: drivers/i2c/chips/max7310.c:183:
+	driver: &max7310_i2c_driver,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#449: FILE: drivers/i2c/chips/Kconfig:134:
+^I  8 Port IO Exander. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#453: FILE: drivers/i2c/chips/Kconfig:138:
+^I  $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000140744.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 28 errors, 24 warnings, 5 checks, 343 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000140744.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
