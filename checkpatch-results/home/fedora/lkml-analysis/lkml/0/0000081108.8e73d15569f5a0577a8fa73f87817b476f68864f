CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#53: FILE: arch/i386/kernel/ptrace.c:675:
+			audit_syscall_exit(AUDITSC_RESULT(regs->eax),
 						regs->eax);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#139: FILE: arch/powerpc/kernel/ptrace.c:541:
+		audit_syscall_entry(

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#149: FILE: arch/powerpc/kernel/ptrace.c:559:
+		audit_syscall_exit((regs->ccr&0x1000)?AUDITSC_FAILURE:AUDITSC_SUCCESS,
 		                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#149: FILE: arch/powerpc/kernel/ptrace.c:559:
+		audit_syscall_exit((regs->ccr&0x1000)?AUDITSC_FAILURE:AUDITSC_SUCCESS,
 		                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#149: FILE: arch/powerpc/kernel/ptrace.c:559:
+		audit_syscall_exit((regs->ccr&0x1000)?AUDITSC_FAILURE:AUDITSC_SUCCESS,
 		                                                     ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#172: FILE: arch/s390/kernel/ptrace.c:764:
+		audit_syscall_entry(test_thread_flag(TIF_31BIT)?AUDIT_ARCH_S390:AUDIT_ARCH_S390X,
 		                                               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#172: FILE: arch/s390/kernel/ptrace.c:764:
+		audit_syscall_entry(test_thread_flag(TIF_31BIT)?AUDIT_ARCH_S390:AUDIT_ARCH_S390X,
 		                                                               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#217: FILE: arch/um/kernel/ptrace.c:284:
+		else audit_syscall_exit(AUDITSC_RESULT(UPT_SYSCALL_RET(regs)),

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#258: FILE: include/linux/audit.h:290:
+extern void audit_syscall_entry(int arch,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#262: FILE: include/linux/audit.h:293:
+extern void audit_syscall_exit(int failed, long return_code);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#272: FILE: include/linux/audit.h:326:
+#define audit_syscall_entry(ta,a,b,c,d,e) do { ; } while (0)
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#272: FILE: include/linux/audit.h:326:
+#define audit_syscall_entry(ta,a,b,c,d,e) do { ; } while (0)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#272: FILE: include/linux/audit.h:326:
+#define audit_syscall_entry(ta,a,b,c,d,e) do { ; } while (0)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#272: FILE: include/linux/audit.h:326:
+#define audit_syscall_entry(ta,a,b,c,d,e) do { ; } while (0)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#272: FILE: include/linux/audit.h:326:
+#define audit_syscall_entry(ta,a,b,c,d,e) do { ; } while (0)
                                       ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#272: FILE: include/linux/audit.h:326:
+#define audit_syscall_entry(ta,a,b,c,d,e) do { ; } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#273: FILE: include/linux/audit.h:327:
+#define audit_syscall_exit(f,r) do { ; } while (0)
                             ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#273: FILE: include/linux/audit.h:327:
+#define audit_syscall_exit(f,r) do { ; } while (0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000081108.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 2 warnings, 9 checks, 202 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000081108.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
