WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#68: 
diff -Naur -X dontdiff linux-cvs/arch/alpha/oprofile/op_model_ev4.c linux-me/arch/alpha/oprofile/op_model_ev4.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#143: FILE: arch/i386/oprofile/backtrace.c:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: arch/i386/oprofile/backtrace.c:15:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: arch/i386/oprofile/backtrace.c:15:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#159: FILE: arch/i386/oprofile/backtrace.c:17:
+	struct frame_head * ebp;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#161: FILE: arch/i386/oprofile/backtrace.c:19:
+} __attribute__((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#163: FILE: arch/i386/oprofile/backtrace.c:21:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#164: FILE: arch/i386/oprofile/backtrace.c:22:
+static struct frame_head * dump_backtrace(struct frame_head * head)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#164: FILE: arch/i386/oprofile/backtrace.c:22:
+static struct frame_head * dump_backtrace(struct frame_head * head)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#169: FILE: arch/i386/oprofile/backtrace.c:27:
+	 * (towards higher addresses) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#176: FILE: arch/i386/oprofile/backtrace.c:34:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#178: FILE: arch/i386/oprofile/backtrace.c:36:
+static int pages_present(struct frame_head * head)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#180: FILE: arch/i386/oprofile/backtrace.c:38:
+	struct mm_struct * mm = current->mm;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#189: FILE: arch/i386/oprofile/backtrace.c:47:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#209: FILE: arch/i386/oprofile/backtrace.c:67:
+static int valid_kernel_stack(struct frame_head * head, struct pt_regs * regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#209: FILE: arch/i386/oprofile/backtrace.c:67:
+static int valid_kernel_stack(struct frame_head * head, struct pt_regs * regs)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#218: FILE: arch/i386/oprofile/backtrace.c:76:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#221: FILE: arch/i386/oprofile/backtrace.c:79:
+	struct frame_head * head = (struct frame_head *)regs->ebp;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#248: FILE: arch/i386/oprofile/init.c:21:
+extern void

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: arch/i386/oprofile/op_model_athlon.c:94:
+                             struct op_msrs const * const msrs)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: arch/i386/oprofile/op_model_athlon.c:94:
+                             struct op_msrs const * const msrs)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: arch/i386/oprofile/op_model_p4.c:596:
+                         struct op_msrs const * const msrs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: arch/i386/oprofile/op_model_p4.c:596:
+                         struct op_msrs const * const msrs)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: arch/i386/oprofile/op_model_ppro.c:88:
+                           struct op_msrs const * const msrs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: arch/i386/oprofile/op_model_ppro.c:88:
+                           struct op_msrs const * const msrs)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#398: FILE: arch/i386/oprofile/op_x86_model.h:43:
+	int (*check_ctrs)(struct pt_regs * const regs,
+		struct op_msrs const * const msrs);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#415: FILE: drivers/oprofile/buffer_sync.c:303:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#422: FILE: drivers/oprofile/buffer_sync.c:310:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#432: FILE: drivers/oprofile/buffer_sync.c:342:
+add_sample(struct mm_struct * mm, struct op_sample * s, int in_kernel)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#432: FILE: drivers/oprofile/buffer_sync.c:342:
+add_sample(struct mm_struct * mm, struct op_sample * s, int in_kernel)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#482: FILE: drivers/oprofile/buffer_sync.c:469:
+			struct mm_struct * oldmm = mm;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#524: FILE: drivers/oprofile/cpu_buffer.c:85:
+void cpu_buffer_reset(struct oprofile_cpu_buffer * cpu_buf)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#536: FILE: drivers/oprofile/cpu_buffer.c:97:
+
+

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#544: FILE: drivers/oprofile/cpu_buffer.c:126:
+inline static void

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#545: FILE: drivers/oprofile/cpu_buffer.c:127:
+add_sample(struct oprofile_cpu_buffer * cpu_buf,

ERROR:CODE_INDENT: code indent should use tabs where possible
#546: FILE: drivers/oprofile/cpu_buffer.c:128:
+           unsigned long pc, unsigned long event)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: drivers/oprofile/cpu_buffer.c:128:
+           unsigned long pc, unsigned long event)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#548: FILE: drivers/oprofile/cpu_buffer.c:130:
+	struct op_sample * entry = &cpu_buf->buffer[cpu_buf->head_pos];

WARNING:LINE_SPACING: Missing a blank line after declarations
#549: FILE: drivers/oprofile/cpu_buffer.c:131:
+	struct op_sample * entry = &cpu_buf->buffer[cpu_buf->head_pos];
+	entry->eip = pc;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#554: FILE: drivers/oprofile/cpu_buffer.c:136:
+
+

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#555: FILE: drivers/oprofile/cpu_buffer.c:137:
+inline static void

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#556: FILE: drivers/oprofile/cpu_buffer.c:138:
+add_code(struct oprofile_cpu_buffer * buffer, unsigned long value)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#561: FILE: drivers/oprofile/cpu_buffer.c:143:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#574: FILE: drivers/oprofile/cpu_buffer.c:153:
+static int log_sample(struct oprofile_cpu_buffer * cpu_buf, unsigned long pc,

ERROR:CODE_INDENT: code indent should use tabs where possible
#575: FILE: drivers/oprofile/cpu_buffer.c:154:
+                      int is_kernel, unsigned long event)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: drivers/oprofile/cpu_buffer.c:154:
+                      int is_kernel, unsigned long event)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#631: FILE: drivers/oprofile/cpu_buffer.c:196:
+static int oprofile_begin_trace(struct oprofile_cpu_buffer * cpu_buf)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#649: FILE: drivers/oprofile/cpu_buffer.c:208:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#650: FILE: drivers/oprofile/cpu_buffer.c:209:
+static void oprofile_end_trace(struct oprofile_cpu_buffer * cpu_buf)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#663: FILE: drivers/oprofile/cpu_buffer.c:222:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#666: FILE: drivers/oprofile/cpu_buffer.c:225:
+	struct oprofile_cpu_buffer * cpu_buf = &cpu_buffer[smp_processor_id()];

CHECK:LINE_SPACING: Please don't use multiple blank lines
#683: FILE: drivers/oprofile/cpu_buffer.c:242:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#686: FILE: drivers/oprofile/cpu_buffer.c:245:
+	struct oprofile_cpu_buffer * cpu_buf = &cpu_buffer[smp_processor_id()];

WARNING:LINE_SPACING: Missing a blank line after declarations
#687: FILE: drivers/oprofile/cpu_buffer.c:246:
+	struct oprofile_cpu_buffer * cpu_buf = &cpu_buffer[smp_processor_id()];
+	log_sample(cpu_buf, pc, is_kernel, event);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#690: FILE: drivers/oprofile/cpu_buffer.c:249:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#693: FILE: drivers/oprofile/cpu_buffer.c:252:
+	struct oprofile_cpu_buffer * cpu_buf = &cpu_buffer[smp_processor_id()];

CHECK:LINE_SPACING: Please don't use multiple blank lines
#777: FILE: drivers/oprofile/oprof.c:153:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#788: FILE: drivers/oprofile/oprof.c:168:
+		printk(KERN_INFO "oprofile: using timer interrupt.\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#838: FILE: drivers/oprofile/oprofile_files.c:21:
+static ssize_t depth_read(struct file * file, char * buf, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#838: FILE: drivers/oprofile/oprofile_files.c:21:
+static ssize_t depth_read(struct file * file, char * buf, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#838: FILE: drivers/oprofile/oprofile_files.c:21:
+static ssize_t depth_read(struct file * file, char * buf, size_t count, loff_t * offset)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#843: FILE: drivers/oprofile/oprofile_files.c:26:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#843: FILE: drivers/oprofile/oprofile_files.c:26:
+
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: drivers/oprofile/oprofile_files.c:26:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#844: FILE: drivers/oprofile/oprofile_files.c:27:
+static ssize_t depth_write(struct file * file, char const * buf, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#844: FILE: drivers/oprofile/oprofile_files.c:27:
+static ssize_t depth_write(struct file * file, char const * buf, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#844: FILE: drivers/oprofile/oprofile_files.c:27:
+static ssize_t depth_write(struct file * file, char const * buf, size_t count, loff_t * offset)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#863: FILE: drivers/oprofile/oprofile_files.c:46:
+
+

WARNING:CONST_STRUCT: struct file_operations should normally be const
#864: FILE: drivers/oprofile/oprofile_files.c:47:
+static struct file_operations depth_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#869: FILE: drivers/oprofile/oprofile_files.c:52:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#878: FILE: drivers/oprofile/oprofile_files.c:70:
+static ssize_t enable_write(struct file * file, char const * buf, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#878: FILE: drivers/oprofile/oprofile_files.c:70:
+static ssize_t enable_write(struct file * file, char const * buf, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#878: FILE: drivers/oprofile/oprofile_files.c:70:
+static ssize_t enable_write(struct file * file, char const * buf, size_t count, loff_t * offset)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#950: FILE: include/linux/oprofile.h:65:
+ * backtrace. */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000361557.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 39 errors, 17 warnings, 18 checks, 790 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000361557.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
