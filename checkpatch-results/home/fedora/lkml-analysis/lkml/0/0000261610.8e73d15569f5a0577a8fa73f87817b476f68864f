ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#57: FILE: security/Kconfig:45:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#84: FILE: security/seclvl.c:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#139: FILE: security/seclvl.c:55:
+static int initlvl =3D 1;
                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#150: FILE: security/seclvl.c:66:
+MODULE_PARM_DESC(verbosity, "Initial verbosity level (0 or 1; defaults to "
+		 "0, which is Quiet)");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#167: FILE: security/seclvl.c:83:
+		 "Plaintext of password that sets seclvl=3D0 when written to "
+		 "(sysfs mount point)/seclvl/passwd\n");

WARNING:SPLIT_STRING: quoted string split across lines
#184: FILE: security/seclvl.c:100:
+		 "SHA1 hash (40 hexadecimal characters) of password that "
+		 "sets seclvl=3D0 when plaintext password is written to "

WARNING:SPLIT_STRING: quoted string split across lines
#185: FILE: security/seclvl.c:101:
+		 "sets seclvl=3D0 when plaintext password is written to "
+		 "(sysfs mount point)/seclvl/passwd\n");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#187: FILE: security/seclvl.c:103:
+static int hideHash =3D 1;
                     ^

CHECK:CAMELCASE: Avoid CamelCase: <hideHash>
#187: FILE: security/seclvl.c:103:
+static int hideHash =3D 1;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#191: FILE: security/seclvl.c:106:
+		 "will return the SHA1-hashed value of the password that "
 		                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: security/seclvl.c:112:
+ * This time-limits log writes to one per second.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: security/seclvl.c:113:
+ */$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#205: FILE: security/seclvl.c:120:
+				printk(type "%s: %s: " fmt,	\
 				             ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#205: FILE: security/seclvl.c:120:
+				printk(type "%s: %s: " fmt,	\
 				               ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#205: FILE: security/seclvl.c:120:
+				printk(type "%s: %s: " fmt,	\
 				                 ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#205: FILE: security/seclvl.c:120:
+				printk(type "%s: %s: " fmt,	\
 				                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: security/seclvl.c:129:
+ * kobject stuff$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: security/seclvl.c:130:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: security/seclvl.c:141:
+ * There is a seclvl_attribute struct for each file in sysfs.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: security/seclvl.c:142:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: security/seclvl.c:143:
+ * In our case, we have one of these structs for "passwd" and another$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: security/seclvl.c:144:
+ * for "seclvl".$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: security/seclvl.c:145:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: security/seclvl.c:153:
+ * When this function is called, one of the files in sysfs is being$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: security/seclvl.c:154:
+ * written to.  attribute->store is a function pointer to whatever the$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: security/seclvl.c:155:
+ * struct seclvl_attribute store function pointer points to.  It is$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: security/seclvl.c:156:
+ * unique for "passwd" and "seclvl".$

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#241: FILE: security/seclvl.c:156:
+ * unique for "passwd" and "seclvl".

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: security/seclvl.c:157:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: security/seclvl.c:178:
+ * Callback function pointers for show and store$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: security/seclvl.c:179:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: security/seclvl.c:192:
+ * The actual security level.  Ranges between -1 and 2 inclusive.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: security/seclvl.c:193:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: security/seclvl.c:197:
+ * flag to keep track of how we were registered$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: security/seclvl.c:198:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: security/seclvl.c:202:
+ * Verifies that the requested secure level is valid, given the current$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: security/seclvl.c:203:
+ * secure level.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: security/seclvl.c:204:
+ */$

CHECK:CAMELCASE: Avoid CamelCase: <Attempt>
#293: FILE: security/seclvl.c:208:
+		seclvl_printk(1, KERN_WARNING, "Attempt to set seclvl out of "

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#294: FILE: security/seclvl.c:209:
+			      "range: [%d]\n", reqlvl);
 			            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#294: FILE: security/seclvl.c:209:
+			      "range: [%d]\n", reqlvl);
 			               ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#301: FILE: security/seclvl.c:216:
+			      "[%d]\n", reqlvl);
 			        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: security/seclvl.c:223:
+ * Called whenever the user reads the sysfs handle to this kernel$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: security/seclvl.c:224:
+ * object$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: security/seclvl.c:225:
+ */$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#313: FILE: security/seclvl.c:228:
+	return snprintf(buff, PAGE_SIZE, "%d\n", seclvl);
 	                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: security/seclvl.c:232:
+ * security level advancement rules:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: security/seclvl.c:233:
+ *   Valid levels are -1 through 2, inclusive.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: security/seclvl.c:234:
+ *   From -1, stuck.  [ in case compiled into kernel ]$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: security/seclvl.c:235:
+ *   From 0 or above, can only increment.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: security/seclvl.c:236:
+ */$

CHECK:CAMELCASE: Avoid CamelCase: <Cannot>
#325: FILE: security/seclvl.c:240:
+		seclvl_printk(1, KERN_WARNING, "Cannot advance to seclvl "

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#326: FILE: security/seclvl.c:241:
+			      "[%d]\n", newlvl);
 			        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#331: FILE: security/seclvl.c:246:
+			      "[%d]\n", newlvl);
 			        ^

CHECK:CAMELCASE: Avoid CamelCase: <Not>
#335: FILE: security/seclvl.c:250:
+		seclvl_printk(1, KERN_WARNING, "Not allowed to advance to "

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#336: FILE: security/seclvl.c:251:
+			      "seclvl [%d]\n", seclvl);

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#336: FILE: security/seclvl.c:251:
+			      "seclvl [%d]\n", seclvl);
 			               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: security/seclvl.c:259:
+ * Called whenever the user writes to the sysfs handle to this kernel$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: security/seclvl.c:260:
+ * object (seclvl/seclvl).  It expects a single-digit number.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: security/seclvl.c:261:
+ */$

CHECK:CAMELCASE: Avoid CamelCase: <Invalid>
#352: FILE: security/seclvl.c:267:
+		seclvl_printk(1, KERN_WARNING, "Invalid value passed to "

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#353: FILE: security/seclvl.c:268:
+			      "seclvl: [%s]\n", buff);
 			             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#353: FILE: security/seclvl.c:268:
+			      "seclvl: [%s]\n", buff);
 			                ^

CHECK:CAMELCASE: Avoid CamelCase: <Illegal>
#358: FILE: security/seclvl.c:273:
+		seclvl_printk(1, KERN_WARNING, "Illegal secure level "

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#359: FILE: security/seclvl.c:274:
+			      "requested: [%d]\n", (int)val);
 			                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#359: FILE: security/seclvl.c:274:
+			      "requested: [%d]\n", (int)val);
 			                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Failure>
#363: FILE: security/seclvl.c:278:
+		seclvl_printk(0, KERN_ERR, "Failure advancing security level "

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#364: FILE: security/seclvl.c:279:
+			      "to %lu\n", val);
 			          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: security/seclvl.c:287:
+       seclvl_write_file);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: security/seclvl.c:292:
+ * Called whenever the user reads the sysfs passwd handle.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: security/seclvl.c:293:
+ */$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#390: FILE: security/seclvl.c:305:
+		snprintf(tmp, 3, "%02x", hashedPassword[i]);
 		                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: security/seclvl.c:314:
+ * Converts a block of plaintext of into its SHA1 hashed value.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: security/seclvl.c:315:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: security/seclvl.c:316:
+ * It would be nice if crypto had a wrapper to do this for us linear$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: security/seclvl.c:317:
+ * people...$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: security/seclvl.c:318:
+ */$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#411: FILE: security/seclvl.c:326:
+		seclvl_printk(0, KERN_ERR, "Plaintext password too large (%d "

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#411: FILE: security/seclvl.c:326:
+		seclvl_printk(0, KERN_ERR, "Plaintext password too large (%d "
 		                                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <Plaintext>
#411: FILE: security/seclvl.c:326:
+		seclvl_printk(0, KERN_ERR, "Plaintext password too large (%d "

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#412: FILE: security/seclvl.c:327:
+			      "characters).  Largest possible is %lu "
 			                                         ^

CHECK:CAMELCASE: Avoid CamelCase: <Largest>
#412: FILE: security/seclvl.c:327:
+			      "characters).  Largest possible is %lu "

CHECK:CAMELCASE: Avoid CamelCase: <Failed>
#419: FILE: security/seclvl.c:334:
+			      "Failed to load transform for SHA1\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: security/seclvl.c:353:
+ * Called whenever the user writes to the sysfs passwd handle to this kern=$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: security/seclvl.c:354:
+ * object.  It hashes the password and compares the hashed results.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: security/seclvl.c:355:
+ */$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#450: FILE: security/seclvl.c:364:
+		seclvl_printk(0, KERN_ERR, "Attempt to password-unlock the "
 		                                               ^

ERROR:SPACING: space required before that '!' (ctx:VxW)
#453: FILE: security/seclvl.c:367:
+			      "passed in as a module parameter!  This is a "
 			                                      ^

ERROR:SPACING: space prohibited after that '!' (ctx:VxW)
#453: FILE: security/seclvl.c:367:
+			      "passed in as a module parameter!  This is a "
 			                                      ^

CHECK:CAMELCASE: Avoid CamelCase: <This>
#453: FILE: security/seclvl.c:367:
+			      "passed in as a module parameter!  This is a "

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#466: FILE: security/seclvl.c:380:
+		seclvl_printk(0, KERN_ERR, "Error hashing password: rc =3D "
 		                                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#466: FILE: security/seclvl.c:380:
+		seclvl_printk(0, KERN_ERR, "Error hashing password: rc =3D "
 		                                                       ^

CHECK:CAMELCASE: Avoid CamelCase: <Error>
#466: FILE: security/seclvl.c:380:
+		seclvl_printk(0, KERN_ERR, "Error hashing password: rc =3D "

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#467: FILE: security/seclvl.c:381:
+			      "[%d]\n", rc);
 			        ^

CHECK:CAMELCASE: Avoid CamelCase: <Password>
#476: FILE: security/seclvl.c:390:
+		      "Password accepted; seclvl reduced to 0.\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: security/seclvl.c:398:
+       seclvl_write_passwd);$

WARNING:TYPO_SPELLING: 'Explicitely' may be misspelled - perhaps 'Explicitly'?
#487: FILE: security/seclvl.c:401:
+ * Explicitely disallow ptrace'ing the init process.
    ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: security/seclvl.c:401:
+ * Explicitely disallow ptrace'ing the init process.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: security/seclvl.c:402:
+ */$

WARNING:TYPO_SPELLING: 'dissallowed' may be misspelled - perhaps 'disallowed'?
#495: FILE: security/seclvl.c:408:
+				      "the init process dissallowed in "
 				                        ^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#496: FILE: security/seclvl.c:409:
+				      "secure level %d\n", seclvl);
 				                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: security/seclvl.c:417:
+ * Capability checks for seclvl.  The majority of the policy$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: security/seclvl.c:418:
+ * enforcement for seclvl takes place here.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: security/seclvl.c:419:
+ */$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#519: FILE: security/seclvl.c:432:
+				      "the IMMUTABLE and/or APPEND extended "
 				                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#521: FILE: security/seclvl.c:434:
+				      "and/or APPEND extended attribute set "
 				          ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#522: FILE: security/seclvl.c:435:
+				      "denied in seclvl [%d]\n", seclvl);

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#522: FILE: security/seclvl.c:435:
+				      "denied in seclvl [%d]\n", seclvl);
 				                         ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#526: FILE: security/seclvl.c:439:
+				      "raw I/O while in secure level [%d] "

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#526: FILE: security/seclvl.c:439:
+				      "raw I/O while in secure level [%d] "
 				            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#526: FILE: security/seclvl.c:439:
+				      "raw I/O while in secure level [%d] "
 				                                      ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#532: FILE: security/seclvl.c:445:
+				      "in secure level [%d] denied\n", seclvl);

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#532: FILE: security/seclvl.c:445:
+				      "in secure level [%d] denied\n", seclvl);
 				                        ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#536: FILE: security/seclvl.c:449:
+				      "while in secure level [%d] denied\n",

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#536: FILE: security/seclvl.c:449:
+				      "while in secure level [%d] denied\n",
 				                              ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#541: FILE: security/seclvl.c:454:
+				      "while in secure level [%d] denied\n",

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#541: FILE: security/seclvl.c:454:
+				      "while in secure level [%d] denied\n",
 				                              ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#546: FILE: security/seclvl.c:459:
+				      "level [%d] denied\n", seclvl);

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#546: FILE: security/seclvl.c:459:
+				      "level [%d] denied\n", seclvl);
 				              ^

CHECK:CAMELCASE: Avoid CamelCase: <Capability>
#556: FILE: security/seclvl.c:469:
+	seclvl_printk(1, KERN_WARNING, "Capability denied\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: security/seclvl.c:474:
+ * Disallow reversing the clock in seclvl > 1$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: security/seclvl.c:475:
+ */$

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#571: FILE: security/seclvl.c:484:
+				      "time in secure level %d denied: "
 				                            ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#571: FILE: security/seclvl.c:484:
+				      "time in secure level %d denied: "
 				                                     ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#572: FILE: security/seclvl.c:485:
+				      "current->pid =3D [%d], "

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#572: FILE: security/seclvl.c:485:
+				      "current->pid =3D [%d], "
 				                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#572: FILE: security/seclvl.c:485:
+				      "current->pid =3D [%d], "
 				                         ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#573: FILE: security/seclvl.c:486:
+				      "current->group_leader->pid =3D [%d]\n",

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#573: FILE: security/seclvl.c:486:
+				      "current->group_leader->pid =3D [%d]\n",
 				                                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#573: FILE: security/seclvl.c:486:
+				      "current->group_leader->pid =3D [%d]\n",
 				                                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: security/seclvl.c:527:
+ * Security for writes to block devices is regulated by this seclvl$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: security/seclvl.c:528:
+ * function.  Deny all writes to block devices in seclvl 2.  In$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: security/seclvl.c:529:
+ * seclvl 1, we only deny writes to *mounted* block devices.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: security/seclvl.c:530:
+ */$

CHECK:CAMELCASE: Avoid CamelCase: <Write>
#625: FILE: security/seclvl.c:537:
+			seclvl_printk(1, KERN_WARNING, "Write to block device "

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#626: FILE: security/seclvl.c:538:
+				      "denied in secure level [%d]\n", seclvl);

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#626: FILE: security/seclvl.c:538:
+				      "denied in secure level [%d]\n", seclvl);
 				                               ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#632: FILE: security/seclvl.c:544:
+					      "denied in secure level [%d]\n",

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#632: FILE: security/seclvl.c:544:
+					      "denied in secure level [%d]\n",
 					                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: security/seclvl.c:554:
+ * The SUID and SGID bits cannot be set in seclvl >=3D 1$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: security/seclvl.c:555:
+ */$

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#652: FILE: security/seclvl.c:564:
+					      "denied in seclvl [%d]\n",

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#652: FILE: security/seclvl.c:564:
+					      "denied in seclvl [%d]\n",
 					                         ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#661: FILE: security/seclvl.c:573:
+static void seclvl_file_free_security(struct file *filp)
                                                    ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: security/seclvl.c:585:
+ * Cannot unmount in secure level 2$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: security/seclvl.c:586:
+ */$

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#682: FILE: security/seclvl.c:594:
+			      "level %d\n", seclvl);
 			             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: security/seclvl.c:611:
+ * Process the password-related module parameters$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: security/seclvl.c:612:
+ */$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#707: FILE: security/seclvl.c:619:
+			seclvl_printk(0, KERN_ERR, "Error: Both "
 			                                 ^

CHECK:CAMELCASE: Avoid CamelCase: <Both>
#707: FILE: security/seclvl.c:619:
+			seclvl_printk(0, KERN_ERR, "Error: Both "

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#715: FILE: security/seclvl.c:627:
+			seclvl_printk(0, KERN_ERR, "Error: SHA1 support not "
 			                                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#720: FILE: security/seclvl.c:632:
+		 * plaintext password out for us. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#725: FILE: security/seclvl.c:637:
+			seclvl_printk(0, KERN_ERR, "Received [%d] bytes; "

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#725: FILE: security/seclvl.c:637:
+			seclvl_printk(0, KERN_ERR, "Received [%d] bytes; "
 			                                      ^

CHECK:CAMELCASE: Avoid CamelCase: <Received>
#725: FILE: security/seclvl.c:637:
+			seclvl_printk(0, KERN_ERR, "Received [%d] bytes; "

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#726: FILE: security/seclvl.c:638:
+				      "expected [%d] for the hexadecimal "

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#726: FILE: security/seclvl.c:638:
+				      "expected [%d] for the hexadecimal "
 				                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: security/seclvl.c:657:
+ * Sysfs registrations$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#746: FILE: security/seclvl.c:658:
+ */$

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#752: FILE: security/seclvl.c:664:
+			      "Error [%d] registering seclvl subsystem\n", rc);

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#752: FILE: security/seclvl.c:664:
+			      "Error [%d] registering seclvl subsystem\n", rc);
 			              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#764: FILE: security/seclvl.c:676:
+ * Initialize the seclvl module.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#765: FILE: security/seclvl.c:677:
+ */$

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#770: FILE: security/seclvl.c:682:
+		printk(KERN_ERR "Error: bad verbosity [%d]; only 0 or 1 "

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#770: FILE: security/seclvl.c:682:
+		printk(KERN_ERR "Error: bad verbosity [%d]; only 0 or 1 "
 		                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#770: FILE: security/seclvl.c:682:
+		printk(KERN_ERR "Error: bad verbosity [%d]; only 0 or 1 "
 		                                       ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#778: FILE: security/seclvl.c:690:
+		seclvl_printk(0, KERN_ERR, "Error: bad initial securelevel "
 		                                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#779: FILE: security/seclvl.c:691:
+			      "[%d].\n", initlvl);
 			        ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#786: FILE: security/seclvl.c:698:
+			      "module parameter(s): rc =3D [%d]\n", rc);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#786: FILE: security/seclvl.c:698:
+			      "module parameter(s): rc =3D [%d]\n", rc);
 			                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#786: FILE: security/seclvl.c:698:
+			      "module parameter(s): rc =3D [%d]\n", rc);
 			                               ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#786: FILE: security/seclvl.c:698:
+			      "module parameter(s): rc =3D [%d]\n", rc);
 			                                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#792: FILE: security/seclvl.c:704:
+			      "seclvl: Failure registering with the "
 			             ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#796: FILE: security/seclvl.c:708:
+			seclvl_printk(0, KERN_ERR, "seclvl: Failure "
 			                                  ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#807: FILE: security/seclvl.c:719:
+	seclvl_printk(0, KERN_INFO, "seclvl: Successfully initialized.\n");
 	                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Successfully>
#807: FILE: security/seclvl.c:719:
+	seclvl_printk(0, KERN_INFO, "seclvl: Successfully initialized.\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#808: FILE: security/seclvl.c:720:
+ exit:$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#810: FILE: security/seclvl.c:722:
+		printk(KERN_ERR "seclvl: Error during initialization: rc =3D "
 		                       ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#810: FILE: security/seclvl.c:722:
+		printk(KERN_ERR "seclvl: Error during initialization: rc =3D "
 		                                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#810: FILE: security/seclvl.c:722:
+		printk(KERN_ERR "seclvl: Error during initialization: rc =3D "
 		                                                         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#811: FILE: security/seclvl.c:723:
+		       "[%d]\n", rc);
 		         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#817: FILE: security/seclvl.c:729:
+ * Remove the seclvl module.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: security/seclvl.c:730:
+ */$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#829: FILE: security/seclvl.c:741:
+			      "seclvl: Failure unregistering with the "
 			             ^

CHECK:CAMELCASE: Avoid CamelCase: <Michael>
#837: FILE: security/seclvl.c:749:
+MODULE_AUTHOR("Michael A. Halcrow <mike@halcrow.us>");

CHECK:CAMELCASE: Avoid CamelCase: <Halcrow>
#837: FILE: security/seclvl.c:749:
+MODULE_AUTHOR("Michael A. Halcrow <mike@halcrow.us>");

CHECK:CAMELCASE: Avoid CamelCase: <Secure>
#838: FILE: security/seclvl.c:750:
+MODULE_DESCRIPTION("LSM implementation of the BSD Secure Levels");

CHECK:CAMELCASE: Avoid CamelCase: <Levels>
#838: FILE: security/seclvl.c:750:
+MODULE_DESCRIPTION("LSM implementation of the BSD Secure Levels");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000261610.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 45 errors, 80 warnings, 64 checks, 779 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000261610.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
