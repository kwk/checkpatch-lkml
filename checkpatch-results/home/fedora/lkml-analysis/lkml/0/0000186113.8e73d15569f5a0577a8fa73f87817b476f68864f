WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#81: 
> > Using local APIC NMI watchdog using perfctr0 enabled ExtINT 
                                                         ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#103: 
> > masked ExtINT on CPU#1
           ^^^^^^

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#110: 
> > 6000 rsp ffff81013ffa3f58 Initializing CPU#2 masked ExtINT on CPU#2
                                                        ^^^^^^

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#117: 
> > 6000 rsp ffff81007ff49f58 Initializing CPU#3 masked ExtINT on CPU#3
                                                        ^^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#140: FILE: setup.c:734:
+	cpu_core_id[cpu] =3D cpu%c->x86_num_cores;=0A=
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#140: FILE: setup.c:734:
+	cpu_core_id[cpu] =3D cpu%c->x86_num_cores;=0A=
 	                        ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#140: FILE: setup.c:734:
+	cpu_core_id[cpu] =3D cpu%c->x86_num_cores;=0A=
 	                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#140: FILE: setup.c:734:
+	cpu_core_id[cpu] =3D cpu%c->x86_num_cores;=0A=
 	                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#140: FILE: setup.c:734:
+	cpu_core_id[cpu] =3D cpu%c->x86_num_cores;=0A=
 	                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#147: FILE: setup.c:740:
+		node =3D cpu >> hweight32(c->x86_num_cores - 1);=0A=
 		     ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#147: FILE: setup.c:740:
+		node =3D cpu >> hweight32(c->x86_num_cores - 1);=0A=
 		                                               ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#147: FILE: setup.c:740:
+		node =3D cpu >> hweight32(c->x86_num_cores - 1);=0A=
 		                                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#147: FILE: setup.c:740:
+		node =3D cpu >> hweight32(c->x86_num_cores - 1);=0A=
 		                                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#154: FILE: setup.c:747:
+	phys_proc_id[cpu] =3D node;=0A=
 	                  ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#154: FILE: setup.c:747:
+	phys_proc_id[cpu] =3D node;=0A=
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#154: FILE: setup.c:747:
+	phys_proc_id[cpu] =3D node;=0A=
 	                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#154: FILE: setup.c:747:
+	phys_proc_id[cpu] =3D node;=0A=
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#165: FILE: smpboot.c:655:
+				if (cpu_to_node[cpu] =3D=3D cpu_to_node[i]) {=0A=
 				                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#165: FILE: smpboot.c:655:
+				if (cpu_to_node[cpu] =3D=3D cpu_to_node[i]) {=0A=
 				                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#165: FILE: smpboot.c:655:
+				if (cpu_to_node[cpu] =3D=3D cpu_to_node[i]) {=0A=
 				                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#165: FILE: smpboot.c:655:
+				if (cpu_to_node[cpu] =3D=3D cpu_to_node[i]) {=0A=
 				                                                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#165: FILE: smpboot.c:655:
+				if (cpu_to_node[cpu] =3D=3D cpu_to_node[i]) {=0A=

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#165: FILE: smpboot.c:655:
+				if (cpu_to_node[cpu] =3D=3D cpu_to_node[i]) {=0A=

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000186113.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 4 warnings, 1 checks, 30 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000186113.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
