WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
I also removed some un-necessary diffs from the patch. The updated patch is as 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: fs/file.c:20:
+^Istruct file **array;   $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: fs/file.c:64:
+static void fd_array_callback(void *arg) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: fs/file.c:66:
+^Istruct rcu_fd_array *a = (struct rcu_fd_array *) arg; $

CHECK:SPACING: No space is necessary after a cast
#208: FILE: fs/file.c:66:
+	struct rcu_fd_array *a = (struct rcu_fd_array *) arg; 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#209: FILE: fs/file.c:67:
+	struct rcu_fd_array *a = (struct rcu_fd_array *) arg; 
+	free_fd_array(a->array, a->nfds);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: fs/file.c:68:
+^Ikfree(arg); $

CHECK:SPACING: No space is necessary after a cast
#239: FILE: fs/file.c:112:
+	arg = (struct rcu_fd_array *) kmalloc(sizeof(arg), GFP_ATOMIC);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#239: FILE: fs/file.c:112:
+	arg = (struct rcu_fd_array *) kmalloc(sizeof(arg), GFP_ATOMIC);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: fs/file.c:137:
+^I^I$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#277: FILE: fs/file.c:143:
+		}
+		else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#277: FILE: fs/file.c:143:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#295: FILE: fs/file.c:191:
+static void fd_set_callback (void *arg)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#297: FILE: fs/file.c:193:
+^Istruct rcu_fd_set *a = (struct rcu_fd_set *) arg; $

CHECK:SPACING: No space is necessary after a cast
#297: FILE: fs/file.c:193:
+	struct rcu_fd_set *a = (struct rcu_fd_set *) arg; 

WARNING:LINE_SPACING: Missing a blank line after declarations
#298: FILE: fs/file.c:194:
+	struct rcu_fd_set *a = (struct rcu_fd_set *) arg; 
+	free_fdset(a->openset, a->nfds);

CHECK:SPACING: No space is necessary after a cast
#328: FILE: fs/file.c:230:
+	arg = (struct rcu_fd_set *) kmalloc(sizeof(arg), GFP_ATOMIC);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#328: FILE: fs/file.c:230:
+	arg = (struct rcu_fd_set *) kmalloc(sizeof(arg), GFP_ATOMIC);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#339: FILE: fs/file.c:239:
+		fd_set * old_openset = files->open_fds;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#340: FILE: fs/file.c:240:
+		fd_set * old_execset = files->close_on_exec;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#352: FILE: fs/file.c:250:
+			memcpy (new_openset, old_openset, old_nfds/8);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#352: FILE: fs/file.c:250:
+			memcpy (new_openset, old_openset, old_nfds/8);
 			                                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#353: FILE: fs/file.c:251:
+			memcpy (new_execset, old_execset, old_nfds/8);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#353: FILE: fs/file.c:251:
+			memcpy (new_execset, old_execset, old_nfds/8);
 			                                          ^

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#389: FILE: fs/file.c:278:
+	if (arg)
+		kfree(arg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: fs/file_table.c:137:
+        ^I/* before returning check again if someone (as of now sys_close)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#410: FILE: fs/file_table.c:137:
+        ^I/* before returning check again if someone (as of now sys_close)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: fs/file_table.c:137:
+        ^I/* before returning check again if someone (as of now sys_close)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: fs/file_table.c:138:
+                 * has nullified the fd_array entry, if yes then we might have $

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: fs/file_table.c:138:
+                 * has nullified the fd_array entry, if yes then we might have $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: fs/file_table.c:139:
+                 * failed fput call for him by doing get_file() so do the $

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: fs/file_table.c:139:
+                 * failed fput call for him by doing get_file() so do the $

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: fs/file_table.c:140:
+                 * favour of doing fput for him.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#414: FILE: fs/file_table.c:141:
+                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: fs/file_table.c:143:
+        ^Iif (!(fcheck(fd))) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#416: FILE: fs/file_table.c:143:
+        ^Iif (!(fcheck(fd))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: fs/file_table.c:143:
+        ^Iif (!(fcheck(fd))) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#417: FILE: fs/file_table.c:144:
+                ^Ifput(file);      $

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: fs/file_table.c:144:
+                ^Ifput(file);      $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#417: FILE: fs/file_table.c:144:
+                ^Ifput(file);      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: fs/file_table.c:144:
+                ^Ifput(file);      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#420: FILE: fs/file_table.c:147:
+^I}                                               $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#575: FILE: include/linux/sched.h:189:
+^Ifile_lock:^ISPIN_LOCK_UNLOCKED, ^I^I\$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#575: FILE: include/linux/sched.h:189:
+	file_lock:	SPIN_LOCK_UNLOCKED, 		\
 	         ^

WARNING:INDENTED_LABEL: labels should not be indented
#575: FILE: include/linux/sched.h:189:
+	file_lock:	SPIN_LOCK_UNLOCKED, 		\

ERROR:TRAILING_WHITESPACE: trailing whitespace
#587: FILE: kernel/fork.c:443:
+^Inewf->file_lock     = SPIN_LOCK_UNLOCKED; $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000506182.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 17 warnings, 7 checks, 529 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000506182.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
