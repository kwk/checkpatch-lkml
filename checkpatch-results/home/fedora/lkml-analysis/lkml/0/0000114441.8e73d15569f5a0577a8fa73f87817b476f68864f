WARNING:TYPO_SPELLING: 'seperately' may be misspelled - perhaps 'separately'?
#12: 
Subject: PATCH: (For review) Teach libata to tune master/slave seperately
                                                               ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#55: FILE: drivers/scsi/libata-core.c:71:
+static unsigned int ata_get_mode_mask(const struct ata_port *ap, struct ata_device *adev, int shift);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#82: FILE: drivers/scsi/libata-core.c:1844:
+		printk(KERN_WARNING "ata%u: no PIO support for device %d.\n", ap->id, adev->devno);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: drivers/scsi/libata-core.c:1863:
+static void ata_host_set_dma(struct ata_port *ap, struct ata_device *adev, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: drivers/scsi/libata-core.c:1895:
+^I   speed configuration it can see all the intended device state in $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#157: FILE: drivers/scsi/libata-core.c:1895:
+	/* Compute the timings first so that when we ask the device to do
+	   speed configuration it can see all the intended device state in 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#158: FILE: drivers/scsi/libata-core.c:1896:
+	   full */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#163: FILE: drivers/scsi/libata-core.c:1901:
+		xfer_mode[i] = xfer_shift[i] = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#168: FILE: drivers/scsi/libata-core.c:1906:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: drivers/scsi/libata-core.c:1907:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: drivers/scsi/libata-core.c:1920:
+                /* In some cases the DMA mode will cause the driver to $

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: drivers/scsi/libata-core.c:1920:
+                /* In some cases the DMA mode will cause the driver to $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: drivers/scsi/libata-core.c:1921:
+                   update the pio mode to match chip limits. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#190: FILE: drivers/scsi/libata-core.c:1921:
+                /* In some cases the DMA mode will cause the driver to 
+                   update the pio mode to match chip limits. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#190: FILE: drivers/scsi/libata-core.c:1921:
+                   update the pio mode to match chip limits. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: drivers/scsi/libata-core.c:1922:
+                   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: drivers/scsi/libata-core.c:1922:
+                   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/scsi/libata-core.c:1922:
+                   $

ERROR:SPACING: space required before the open parenthesis '('
#289: FILE: drivers/scsi/libata-core.c:2311:
+	if(ap->ops->mode_filter)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#326: FILE: include/linux/libata.h:374:
+	unsigned int (*mode_filter) (const struct ata_port *, struct ata_device *, unsigned int, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#326: FILE: include/linux/libata.h:374:
+	unsigned int (*mode_filter) (const struct ata_port *, struct ata_device *, unsigned int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct ata_port *' should also have an identifier name
#326: FILE: include/linux/libata.h:374:
+	unsigned int (*mode_filter) (const struct ata_port *, struct ata_device *, unsigned int, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#326: FILE: include/linux/libata.h:374:
+	unsigned int (*mode_filter) (const struct ata_port *, struct ata_device *, unsigned int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#326: FILE: include/linux/libata.h:374:
+	unsigned int (*mode_filter) (const struct ata_port *, struct ata_device *, unsigned int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#326: FILE: include/linux/libata.h:374:
+	unsigned int (*mode_filter) (const struct ata_port *, struct ata_device *, unsigned int, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000114441.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 14 warnings, 2 checks, 268 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000114441.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
