WARNING:TYPO_SPELLING: 'procedes' may be misspelled - perhaps 'proceeds'?
#42: 
it procedes to look for an SD card. This is incorrect acording to SD 
   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'acording' may be misspelled - perhaps 'according'?
#42: 
it procedes to look for an SD card. This is incorrect acording to SD 
                                                      ^^^^^^^^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#72: FILE: include/linux/mmc/card.h:50:
+#define MMC_STATE_SDCARD	(1<<3)		/* is an SD card */
                         	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#72: FILE: include/linux/mmc/card.h:50:
+#define MMC_STATE_SDCARD	(1<<3)		/* is an SD card */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#97: FILE: include/linux/mmc/mmc.h:91:
+extern int mmc_wait_for_app_cmd(struct mmc_host *, unsigned int,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mmc_host *' should also have an identifier name
#97: FILE: include/linux/mmc/mmc.h:91:
+extern int mmc_wait_for_app_cmd(struct mmc_host *, unsigned int,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#97: FILE: include/linux/mmc/mmc.h:91:
+extern int mmc_wait_for_app_cmd(struct mmc_host *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mmc_command *' should also have an identifier name
#97: FILE: include/linux/mmc/mmc.h:91:
+extern int mmc_wait_for_app_cmd(struct mmc_host *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#97: FILE: include/linux/mmc/mmc.h:91:
+extern int mmc_wait_for_app_cmd(struct mmc_host *, unsigned int,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#98: FILE: include/linux/mmc/mmc.h:92:
+extern int mmc_wait_for_app_cmd(struct mmc_host *, unsigned int,
+	struct mmc_command *, int);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: include/linux/mmc/host.h:82:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: drivers/mmc/mmc.c:177:
+ ^I^I^I       completion$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#127: FILE: drivers/mmc/mmc.c:177:
+ ^I^I^I       completion$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: drivers/mmc/mmc.c:189:
+int mmc_wait_for_app_cmd(struct mmc_host *host, unsigned int rca,
+	struct mmc_command *cmd, int retries)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: drivers/mmc/mmc.c:193:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#146: FILE: drivers/mmc/mmc.c:196:
+	BUG_ON(host->card_busy == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!host->card_busy"
#146: FILE: drivers/mmc/mmc.c:196:
+	BUG_ON(host->card_busy == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#147: FILE: drivers/mmc/mmc.c:197:
+	BUG_ON(retries < 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: drivers/mmc/mmc.c:198:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: drivers/mmc/mmc.c:200:
+^I$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#155: FILE: drivers/mmc/mmc.c:205:
+	for (i = 0;i <= retries;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#155: FILE: drivers/mmc/mmc.c:205:
+	for (i = 0;i <= retries;i++) {
 	                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: drivers/mmc/mmc.c:214:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: drivers/mmc/mmc.c:217:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: drivers/mmc/mmc.c:219:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: drivers/mmc/mmc.c:224:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: drivers/mmc/mmc.c:238:
+^I^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#197: FILE: drivers/mmc/mmc.c:247:
+EXPORT_SYMBOL(mmc_wait_for_app_cmd);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#261: FILE: drivers/mmc/mmc.c:417:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#261: FILE: drivers/mmc/mmc.c:417:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#305: FILE: drivers/mmc/mmc.c:456:
+			printk("%s: card has unknown MMCA version %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: drivers/mmc/mmc.c:457:
+			printk("%s: card has unknown MMCA version %d\n",
+				card->host->host_name, card->csd.mmca_vsn);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#317: FILE: drivers/mmc/mmc.c:472:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#321: FILE: drivers/mmc/mmc.c:476:
+			printk("%s: unrecognised CSD structure version %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: drivers/mmc/mmc.c:477:
+			printk("%s: unrecognised CSD structure version %d\n",
+				card->host->host_name, csd_struct);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: drivers/mmc/mmc.c:481:
+^I^I$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#353: FILE: drivers/mmc/mmc.c:498:
 	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#353: FILE: drivers/mmc/mmc.c:498:
+	else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#360: FILE: drivers/mmc/mmc.c:505:
+			printk("%s: unrecognised CSD structure version %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: drivers/mmc/mmc.c:506:
+			printk("%s: unrecognised CSD structure version %d\n",
+				card->host->host_name, csd_struct);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#438: FILE: drivers/mmc/mmc.c:718:
+^I^I$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#458: FILE: drivers/mmc/mmc.c:732:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#458: FILE: drivers/mmc/mmc.c:732:
+		else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#474: FILE: drivers/mmc/mmc.c:823:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#481: FILE: drivers/mmc/mmc.c:830:
+^I^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#486: FILE: drivers/mmc/mmc.c:835:
 		if (err != MMC_ERR_NONE)
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#492: FILE: drivers/mmc/mmc.c:840:
+^I^I^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000201840.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 13 warnings, 12 checks, 419 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000201840.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
