WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#53: FILE: drivers/message/i2o/i2o_block.c:945:
+			if (add_delayed_work_to_q(i2o_block_driver.event_queue,
 						&dreq->work,

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#89: FILE: drivers/scsi/scsi_transport_fc.c:37:
+static void fc_queue_work(struct Scsi_Host *, struct work_struct *);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: drivers/connector/connector.c:146:
+				if (add_work_to_q(dev->cbdev->cn_queue,
+						&__cbq->work) == 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: drivers/connector/connector.c:169:
+					if (add_work_to_q(dev->cbdev->cn_queue,
+							w) == 0)

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: kernel/workqueue.c:84:
+static void __add_work_to_q(struct cpu_workqueue_struct *cwq,
 			 struct work_struct *work)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: kernel/workqueue.c:107:
+int fastcall add_work_to_q(struct workqueue_struct *wq,
+		struct work_struct *work)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: kernel/workqueue.c:144:
+int fastcall add_delayed_work_to_q(struct workqueue_struct *wq,
 			struct work_struct *work, unsigned long delay)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#291: FILE: kernel/workqueue.c:175:
+int add_delayed_work_to_q_on(int cpu, struct workqueue_struct *wq,
 			struct work_struct *work, unsigned long delay)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#353: FILE: kernel/workqueue.c:507:
+void fastcall queue_delayed_work(struct workqueue_struct *wq,
+		struct work_struct *work, unsigned long delay)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: kernel/workqueue.c:517:
+void queue_delayed_work_on(int cpu, struct workqueue_struct *wq,
+		struct work_struct *work, unsigned long delay)

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#416: FILE: include/scsi/scsi_host.h:669:
+extern void scsi_queue_work(struct Scsi_Host *, struct work_struct *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#432: FILE: include/linux/workqueue.h:64:
+extern int FASTCALL(add_work_to_q(struct workqueue_struct *wq,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#433: FILE: include/linux/workqueue.h:65:
+extern int FASTCALL(add_work_to_q(struct workqueue_struct *wq,
+		struct work_struct *work));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#434: FILE: include/linux/workqueue.h:66:
+extern int FASTCALL(add_delayed_work_to_q(struct workqueue_struct *wq,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#435: FILE: include/linux/workqueue.h:67:
+extern int FASTCALL(add_delayed_work_to_q(struct workqueue_struct *wq,
+		struct work_struct *work, unsigned long delay));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#436: FILE: include/linux/workqueue.h:68:
+extern int add_delayed_work_to_q_on(int cpu, struct workqueue_struct *wq,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#437: FILE: include/linux/workqueue.h:69:
+extern int add_delayed_work_to_q_on(int cpu, struct workqueue_struct *wq,
+		struct work_struct *work, unsigned long delay);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#449: FILE: include/linux/workqueue.h:107:
+extern void FASTCALL(queue_work(struct workqueue_struct *wq,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#450: FILE: include/linux/workqueue.h:108:
+extern void FASTCALL(queue_work(struct workqueue_struct *wq,
+		struct work_struct *work));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#451: FILE: include/linux/workqueue.h:109:
+extern void FASTCALL(queue_delayed_work(struct workqueue_struct *wq,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: include/linux/workqueue.h:110:
+extern void FASTCALL(queue_delayed_work(struct workqueue_struct *wq,
+		struct work_struct *work, unsigned long delay));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#453: FILE: include/linux/workqueue.h:111:
+extern void queue_delayed_work_on(int cpu, struct workqueue_struct *wq,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: include/linux/workqueue.h:112:
+extern void queue_delayed_work_on(int cpu, struct workqueue_struct *wq,
+		struct work_struct *work, unsigned long delay);

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000043234.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 13 warnings, 23 checks, 419 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000043234.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
