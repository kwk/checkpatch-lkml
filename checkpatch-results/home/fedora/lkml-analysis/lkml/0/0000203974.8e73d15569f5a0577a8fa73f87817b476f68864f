CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/topology.h> instead of <asm/topology.h>
#46: FILE: arch/i386/kernel/srat.c:33:
+#include <asm/topology.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:TYPO_SPELLING: 'memroy' may be misspelled - perhaps 'memory'?
#64: FILE: arch/i386/kernel/srat.c:276:
+			 * Only add present memroy to node_end/start_pfn
 			                    ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#69: FILE: arch/i386/kernel/srat.c:281:
+				printk (KERN_INFO "Ignoring chunk of memory reported in the SRAT (could be hot-add zone?)\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#69: FILE: arch/i386/kernel/srat.c:281:
+				printk (KERN_INFO "Ignoring chunk of memory reported in the SRAT (could be hot-add zone?)\n");

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#70: FILE: arch/i386/kernel/srat.c:282:
+				printk (KERN_INFO "chunk is reported from pfn %04x to %04x\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#70: FILE: arch/i386/kernel/srat.c:282:
+				printk (KERN_INFO "chunk is reported from pfn %04x to %04x\n",

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#71: FILE: arch/i386/kernel/srat.c:283:
+					node_memory_chunk[j].start_pfn, node_memory_chunk[j].end_pfn);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required before the open brace '{'
#104: FILE: arch/i386/mm/discontig.c:305:
+		if (node_has_online_mem(nid)){

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#109: FILE: arch/i386/mm/discontig.c:308:
+				BUG_ON(start > high);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#121: FILE: arch/i386/mm/discontig.c:312:
+				if (low < max_dma)
[...]
+				else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#123: FILE: arch/i386/mm/discontig.c:314:
+				else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#124: FILE: arch/i386/mm/discontig.c:315:
+					BUG_ON(max_dma > low);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#125: FILE: arch/i386/mm/discontig.c:316:
+					BUG_ON(low > high);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nid' - possible side-effects?
#150: FILE: include/asm-i386/topology.h:95:
+#define node_has_online_mem(nid) (node_start_pfn[nid] != node_end_pfn[nid])

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/topology.h> instead of <asm/topology.h>
#182: FILE: arch/i386/kernel/numaq.c:33:
+#include <asm/topology.h>

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000203974.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 9 warnings, 5 checks, 123 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000203974.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
