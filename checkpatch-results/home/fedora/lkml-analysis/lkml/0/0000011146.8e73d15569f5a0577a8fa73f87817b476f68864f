ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#37: FILE: drivers/net/cxgb3/cxgb3_main.c

There is no reason for source files to be executable.  The executable
bit can be removed safely.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#37: 
new file mode 100755

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: drivers/net/cxgb3/cxgb3_main.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#66: FILE: drivers/net/cxgb3/cxgb3_main.c:25:
+#include <asm/uaccess.h>

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#129: FILE: drivers/net/cxgb3/cxgb3_main.c:88:
+/*
+ * The driver uses the best interrupt scheme available on a platform in the

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#143: FILE: drivers/net/cxgb3/cxgb3_main.c:102:
+/*
+ * The driver enables offload as a default.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#147: FILE: drivers/net/cxgb3/cxgb3_main.c:106:
+static int ofld_disable = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#153: FILE: drivers/net/cxgb3/cxgb3_main.c:112:
+/*
+ * We have work elements that we need to cancel when an interface is taken

CHECK:BRACES: braces {} should be used on all arms of this statement
#170: FILE: drivers/net/cxgb3/cxgb3_main.c:129:
+	if (!netif_carrier_ok(dev))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#171: FILE: drivers/net/cxgb3/cxgb3_main.c:130:
+		printk(KERN_INFO "%s: link down\n", dev->name);

CHECK:BRACES: Unbalanced braces around else statement
#172: FILE: drivers/net/cxgb3/cxgb3_main.c:131:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#188: FILE: drivers/net/cxgb3/cxgb3_main.c:147:
+		printk(KERN_INFO "%s: link up, %s, %s-duplex\n", dev->name, s,

WARNING:TYPO_SPELLING: 'limk' may be misspelled - perhaps 'link'?
#196: FILE: drivers/net/cxgb3/cxgb3_main.c:155:
+ *	@port_id: the port index whose limk status has changed
   	                               ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#266: FILE: drivers/net/cxgb3/cxgb3_main.c:225:
+/*
+ * Interrupt handler for asynchronous events used with MSI-X.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#275: FILE: drivers/net/cxgb3/cxgb3_main.c:234:
+/*
+ * Name the MSI-X interrupts.

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: drivers/net/cxgb3/cxgb3_main.c:252:
+ ^I}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#293: FILE: drivers/net/cxgb3/cxgb3_main.c:252:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: drivers/net/cxgb3/cxgb3_main.c:252:
+ ^I}$

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'adap->sge.qs[qidx].rspq.polling'
#307: FILE: drivers/net/cxgb3/cxgb3_main.c:266:
+							  adap->sge.qs[qidx].
+							  rspq.polling), 0,

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#356: FILE: drivers/net/cxgb3/cxgb3_main.c:315:
+/*
+ * If we have multiple receive queues per port serviced by NAPI we need one

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#366: FILE: drivers/net/cxgb3/cxgb3_main.c:325:
+	struct net_device *nd;
 	                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#374: FILE: drivers/net/cxgb3/cxgb3_main.c:333:
+				nd = alloc_netdev(0, "", ether_setup);
 				^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#375: FILE: drivers/net/cxgb3/cxgb3_main.c:334:
+				if (!nd)
 				     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#381: FILE: drivers/net/cxgb3/cxgb3_main.c:340:
+				adap->dummy_netdev[dummy_idx] = nd;
 				                                ^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#398: FILE: drivers/net/cxgb3/cxgb3_main.c:357:
+/*
+ * Wait until all NAPI handlers are descheduled.  This includes the handlers of

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#410: FILE: drivers/net/cxgb3/cxgb3_main.c:369:
+			msleep(1);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#417: FILE: drivers/net/cxgb3/cxgb3_main.c:376:
+				msleep(1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#443: FILE: drivers/net/cxgb3/cxgb3_main.c:402:
+			err = t3_sge_alloc_qset(adap, qset_idx, 1,
+				(adap->flags & USING_MSIX) ? qset_idx + 1 :

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#447: FILE: drivers/net/cxgb3/cxgb3_main.c:406:
+					 adap-> dummy_netdev[dummy_dev_idx++]);
 					     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: missing space after return type
#459: FILE: drivers/net/cxgb3/cxgb3_main.c:418:
+			 ssize_t(*format) (struct adapter *, char *))

WARNING:SPACING: Unnecessary space before function pointer arguments
#459: FILE: drivers/net/cxgb3/cxgb3_main.c:418:
+			 ssize_t(*format) (struct adapter *, char *))

WARNING:SPACING: missing space after return type
#472: FILE: drivers/net/cxgb3/cxgb3_main.c:431:
+			  ssize_t(*set) (struct adapter *, unsigned int),

WARNING:SPACING: Unnecessary space before function pointer arguments
#472: FILE: drivers/net/cxgb3/cxgb3_main.c:431:
+			  ssize_t(*set) (struct adapter *, unsigned int),

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#483: FILE: drivers/net/cxgb3/cxgb3_main.c:442:
+	val = simple_strtoul(buf, &endp, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#539: FILE: drivers/net/cxgb3/cxgb3_main.c:498:
+#define CXGB3_ATTR_R(name, val_expr) \
+CXGB3_SHOW(name, val_expr) \
+static CLASS_DEVICE_ATTR(name, S_IRUGO, show_##name, NULL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#539: FILE: drivers/net/cxgb3/cxgb3_main.c:498:
+#define CXGB3_ATTR_R(name, val_expr) \
+CXGB3_SHOW(name, val_expr) \
+static CLASS_DEVICE_ATTR(name, S_IRUGO, show_##name, NULL)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#541: FILE: drivers/net/cxgb3/cxgb3_main.c:500:
+static CLASS_DEVICE_ATTR(name, S_IRUGO, show_##name, NULL)

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#543: FILE: drivers/net/cxgb3/cxgb3_main.c:502:
+#define CXGB3_ATTR_RW(name, val_expr, store_method) \
+CXGB3_SHOW(name, val_expr) \
+static CLASS_DEVICE_ATTR(name, S_IRUGO | S_IWUSR, show_##name, store_method)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#543: FILE: drivers/net/cxgb3/cxgb3_main.c:502:
+#define CXGB3_ATTR_RW(name, val_expr, store_method) \
+CXGB3_SHOW(name, val_expr) \
+static CLASS_DEVICE_ATTR(name, S_IRUGO | S_IWUSR, show_##name, store_method)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#545: FILE: drivers/net/cxgb3/cxgb3_main.c:504:
+static CLASS_DEVICE_ATTR(name, S_IRUGO | S_IWUSR, show_##name, store_method)

CHECK:BRACES: braces {} should be used on all arms of this statement
#574: FILE: drivers/net/cxgb3/cxgb3_main.c:533:
+	if (!cpt)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#576: FILE: drivers/net/cxgb3/cxgb3_main.c:535:
+	else {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#595: FILE: drivers/net/cxgb3/cxgb3_main.c:554:
+	val = simple_strtoul(buf, &endp, 0);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sched' - possible side-effects?
#607: FILE: drivers/net/cxgb3/cxgb3_main.c:566:
+#define TM_ATTR(name, sched) \
+static ssize_t show_##name(struct class_device *cd, char *buf) \
+{ \
+	return tm_attr_show(cd, buf, sched); \
+} \
+static ssize_t store_##name(struct class_device *cd, const char *buf, size_t len) \
+{ \
+	return tm_attr_store(cd, buf, len, sched); \
+} \
+static CLASS_DEVICE_ATTR(name, S_IRUGO | S_IWUSR, show_##name, store_##name)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#616: FILE: drivers/net/cxgb3/cxgb3_main.c:575:
+static CLASS_DEVICE_ATTR(name, S_IRUGO | S_IWUSR, show_##name, store_##name)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#642: FILE: drivers/net/cxgb3/cxgb3_main.c:601:
+/*
+ * Sends an sk_buff to an offload queue driver

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#679: FILE: drivers/net/cxgb3/cxgb3_main.c:638:
+	for_each_port(adapter, i)
+	    write_smt_entry(adapter, i);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#745: FILE: drivers/net/cxgb3/cxgb3_main.c:704:
+	} else if ((err = request_irq(adap->pdev->irq,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'adap->sge.qs[0].rspq.polling'
#748: FILE: drivers/net/cxgb3/cxgb3_main.c:707:
+						      adap->sge.qs[0].rspq.
+						      polling),

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#763: FILE: drivers/net/cxgb3/cxgb3_main.c:722:
+/*
+ * Release resources when all the ports and offloading have been stopped.

CHECK:BRACES: braces {} should be used on all arms of this statement
#772: FILE: drivers/net/cxgb3/cxgb3_main.c:731:
+	if (adapter->flags & USING_MSIX) {
[...]
+	} else
[...]

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#776: FILE: drivers/net/cxgb3/cxgb3_main.c:735:
+		for_each_port(adapter, i)
+		    n += adap2pinfo(adapter, i)->nqsets;

CHECK:BRACES: Unbalanced braces around else statement
#782: FILE: drivers/net/cxgb3/cxgb3_main.c:741:
+	} else

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#810: FILE: drivers/net/cxgb3/cxgb3_main.c:769:
+	if (!adap_up && (err = cxgb_up(adapter)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#873: FILE: drivers/net/cxgb3/cxgb3_main.c:832:
+	if (!adapter->open_device_map && (err = cxgb_up(adapter)) < 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#880: FILE: drivers/net/cxgb3/cxgb3_main.c:839:
+			printk(KERN_WARNING

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -EEPROMSIZE)
#1031: FILE: drivers/net/cxgb3/cxgb3_main.c:990:
+	return EEPROMSIZE;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1052: FILE: drivers/net/cxgb3/cxgb3_main.c:1011:
+static void get_strings(struct net_device *dev, u32 stringset, u8 * data)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1070: FILE: drivers/net/cxgb3/cxgb3_main.c:1029:
+		      u64 * data)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1141: FILE: drivers/net/cxgb3/cxgb3_main.c:1100:
+	/*
+	 * Version scheme:

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1149: FILE: drivers/net/cxgb3/cxgb3_main.c:1108:
+	/*
+	 * We skip the MAC statistics registers because they are clear-on-read.

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_10baseT_Full>
#1227: FILE: drivers/net/cxgb3/cxgb3_main.c:1186:
+			cap = SUPPORTED_10baseT_Full;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_10baseT_Half>
#1229: FILE: drivers/net/cxgb3/cxgb3_main.c:1188:
+			cap = SUPPORTED_10baseT_Half;

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_100baseT_Full>
#1233: FILE: drivers/net/cxgb3/cxgb3_main.c:1192:
+			cap = SUPPORTED_100baseT_Full;

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_100baseT_Half>
#1235: FILE: drivers/net/cxgb3/cxgb3_main.c:1194:
+			cap = SUPPORTED_100baseT_Half;

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_1000baseT_Full>
#1239: FILE: drivers/net/cxgb3/cxgb3_main.c:1198:
+			cap = SUPPORTED_1000baseT_Full;

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_1000baseT_Half>
#1241: FILE: drivers/net/cxgb3/cxgb3_main.c:1200:
+			cap = SUPPORTED_1000baseT_Half;

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_10000baseT_Full>
#1245: FILE: drivers/net/cxgb3/cxgb3_main.c:1204:
+			cap = SUPPORTED_10000baseT_Full;

CHECK:CAMELCASE: Avoid CamelCase: <ADVERTISED_10baseT_Half>
#1250: FILE: drivers/net/cxgb3/cxgb3_main.c:1209:
+#define ADVERTISED_MASK (ADVERTISED_10baseT_Half | ADVERTISED_10baseT_Full | \

CHECK:CAMELCASE: Avoid CamelCase: <ADVERTISED_10baseT_Full>
#1250: FILE: drivers/net/cxgb3/cxgb3_main.c:1209:
+#define ADVERTISED_MASK (ADVERTISED_10baseT_Half | ADVERTISED_10baseT_Full | \

CHECK:CAMELCASE: Avoid CamelCase: <ADVERTISED_100baseT_Half>
#1251: FILE: drivers/net/cxgb3/cxgb3_main.c:1210:
+		      ADVERTISED_100baseT_Half | ADVERTISED_100baseT_Full | \

CHECK:CAMELCASE: Avoid CamelCase: <ADVERTISED_100baseT_Full>
#1251: FILE: drivers/net/cxgb3/cxgb3_main.c:1210:
+		      ADVERTISED_100baseT_Half | ADVERTISED_100baseT_Full | \

CHECK:CAMELCASE: Avoid CamelCase: <ADVERTISED_1000baseT_Half>
#1252: FILE: drivers/net/cxgb3/cxgb3_main.c:1211:
+		      ADVERTISED_1000baseT_Half | ADVERTISED_1000baseT_Full | \

CHECK:CAMELCASE: Avoid CamelCase: <ADVERTISED_1000baseT_Full>
#1252: FILE: drivers/net/cxgb3/cxgb3_main.c:1211:
+		      ADVERTISED_1000baseT_Half | ADVERTISED_1000baseT_Full | \

CHECK:CAMELCASE: Avoid CamelCase: <ADVERTISED_10000baseT_Full>
#1253: FILE: drivers/net/cxgb3/cxgb3_main.c:1212:
+		      ADVERTISED_10000baseT_Full)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1409: FILE: drivers/net/cxgb3/cxgb3_main.c:1368:
+		      u8 * data)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1415: FILE: drivers/net/cxgb3/cxgb3_main.c:1374:
+	u8 *buf = kmalloc(EEPROMSIZE, GFP_KERNEL);
+	if (!buf)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#1420: FILE: drivers/net/cxgb3/cxgb3_main.c:1379:
+		err = t3_seeprom_read(adapter, i, (u32 *) & buf[i]);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#1420: FILE: drivers/net/cxgb3/cxgb3_main.c:1379:
+		err = t3_seeprom_read(adapter, i, (u32 *) & buf[i]);
 		                                          ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1429: FILE: drivers/net/cxgb3/cxgb3_main.c:1388:
+		      u8 * data)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1442: FILE: drivers/net/cxgb3/cxgb3_main.c:1401:
+	if (aligned_offset != eeprom->offset || aligned_len != eeprom->len) {
[...]
+	} else
[...]

CHECK:SPACING: No space is necessary after a cast
#1446: FILE: drivers/net/cxgb3/cxgb3_main.c:1405:
+		err = t3_seeprom_read(adapter, aligned_offset, (u32 *) buf);

CHECK:SPACING: No space is necessary after a cast
#1450: FILE: drivers/net/cxgb3/cxgb3_main.c:1409:
+					      (u32 *) & buf[aligned_len - 4]);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#1450: FILE: drivers/net/cxgb3/cxgb3_main.c:1409:
+					      (u32 *) & buf[aligned_len - 4]);
 					              ^

CHECK:BRACES: Unbalanced braces around else statement
#1454: FILE: drivers/net/cxgb3/cxgb3_main.c:1413:
+	} else

CHECK:SPACING: No space is necessary after a cast
#1461: FILE: drivers/net/cxgb3/cxgb3_main.c:1420:
+	for (p = (u32 *) buf; !err && aligned_len; aligned_len -= 4, p++) {

WARNING:CONST_STRUCT: struct ethtool_ops should normally be const
#1481: FILE: drivers/net/cxgb3/cxgb3_main.c:1440:
+static struct ethtool_ops cxgb_ethtool_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1523: FILE: drivers/net/cxgb3/cxgb3_main.c:1482:
+static int cxgb_extension_ioctl(struct net_device *dev, void __user * useraddr)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1541: FILE: drivers/net/cxgb3/cxgb3_main.c:1500:
+		if ((edata.addr & 3) != 0
+			|| edata.addr >= adapter->mmio_len)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1552: FILE: drivers/net/cxgb3/cxgb3_main.c:1511:
+		if ((edata.addr & 3) != 0
+			|| edata.addr >= adapter->mmio_len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1571: FILE: drivers/net/cxgb3/cxgb3_main.c:1530:
+		if (!in_range(t.intr_lat, 0, M_NEWTIMER) ||
+			!in_range(t.cong_thres, 0, 255) ||

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1580: FILE: drivers/net/cxgb3/cxgb3_main.c:1539:
+				MAX_RX_BUFFERS)
+			|| !in_range(t.fl_size[1], MIN_FL_ENTRIES,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1582: FILE: drivers/net/cxgb3/cxgb3_main.c:1541:
+					MAX_RX_JUMBO_BUFFERS)
+			|| !in_range(t.rspq_size, MIN_RSPQ_ENTRIES,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1586: FILE: drivers/net/cxgb3/cxgb3_main.c:1545:
+		if ((adapter->flags & FULL_INIT_DONE) &&
+			(t.rspq_size >= 0 || t.fl_size[0] >= 0 ||

CHECK:BRACES: braces {} should be used on all arms of this statement
#1616: FILE: drivers/net/cxgb3/cxgb3_main.c:1575:
+			if (adapter->flags & USING_MSIX)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1618: FILE: drivers/net/cxgb3/cxgb3_main.c:1577:
+			else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1621: FILE: drivers/net/cxgb3/cxgb3_main.c:1580:
+				if (adapter->params.rev == 0 &&
+					!(adapter->flags & USING_MSI))

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'adapter->params.sge.qset[i]'
#1626: FILE: drivers/net/cxgb3/cxgb3_main.c:1585:
+					q = &adapter->params.sge.
+						qset[i];

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1669: FILE: drivers/net/cxgb3/cxgb3_main.c:1628:
+		if (edata.val < 1 ||
+			(edata.val > 1 && !(adapter->flags & USING_MSIX)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1747: FILE: drivers/net/cxgb3/cxgb3_main.c:1706:
+		memcpy(adapter->params.mtus, m.mtus,
+			sizeof(adapter->params.mtus));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1778: FILE: drivers/net/cxgb3/cxgb3_main.c:1737:
+		if (!m.rx_pg_sz || (m.rx_pg_sz & (m.rx_pg_sz - 1)) ||
+			!m.tx_pg_sz || (m.tx_pg_sz & (m.tx_pg_sz - 1)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1791: FILE: drivers/net/cxgb3/cxgb3_main.c:1750:
+		if (m.rx_num_pg * m.rx_pg_sz > p->chan_rx_size ||
+			m.tx_num_pg * m.tx_pg_sz > p->chan_tx_size)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1822: FILE: drivers/net/cxgb3/cxgb3_main.c:1781:
+		/*
+			* Version scheme:

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1822: FILE: drivers/net/cxgb3/cxgb3_main.c:1781:
+		/*
+			* Version scheme:

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1831: FILE: drivers/net/cxgb3/cxgb3_main.c:1790:
+		/*
+		 * Read 256 bytes at a time as len can be large and we don't

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1841: FILE: drivers/net/cxgb3/cxgb3_main.c:1800:
+				t3_mc7_bd_read(mem, t.addr / 8, chunk / 8,
+						buf);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1866: FILE: drivers/net/cxgb3/cxgb3_main.c:1825:
+			t3_config_trace_filter(adapter, tp, 0,
+						t.invert_match,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1870: FILE: drivers/net/cxgb3/cxgb3_main.c:1829:
+			t3_config_trace_filter(adapter, tp, 1,
+						t.invert_match,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1896: FILE: drivers/net/cxgb3/cxgb3_main.c:1855:
+		printk(KERN_INFO

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1920: FILE: drivers/net/cxgb3/cxgb3_main.c:1879:
+		/* FALLTHRU */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:BRACES: Unbalanced braces around else statement
#1937: FILE: drivers/net/cxgb3/cxgb3_main.c:1896:
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#1965: FILE: drivers/net/cxgb3/cxgb3_main.c:1924:
+		} else

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1989: FILE: drivers/net/cxgb3/cxgb3_main.c:1948:
+	if ((ret = t3_mac_set_mtu(&pi->mac, new_mtu)))

CHECK:BRACES: braces {} should be used on all arms of this statement
#2043: FILE: drivers/net/cxgb3/cxgb3_main.c:2002:
+	if (adapter->params.rev > 0)
[...]
+	else {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "grp"
#2044: FILE: drivers/net/cxgb3/cxgb3_main.c:2003:
+		t3_set_vlan_accel(adapter, 1 << pi->port_id, grp != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Unbalanced braces around else statement
#2045: FILE: drivers/net/cxgb3/cxgb3_main.c:2004:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#2048: FILE: drivers/net/cxgb3/cxgb3_main.c:2007:
+		unsigned int i, have_vlans = 0;
+		for_each_port(adapter, i)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#2048: FILE: drivers/net/cxgb3/cxgb3_main.c:2007:
+		for_each_port(adapter, i)
+		    have_vlans |= adap2pinfo(adapter, i)->vlan_grp != NULL;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "vlan_grp"
#2049: FILE: drivers/net/cxgb3/cxgb3_main.c:2008:
+		    have_vlans |= adap2pinfo(adapter, i)->vlan_grp != NULL;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2073: FILE: drivers/net/cxgb3/cxgb3_main.c:2032:
+/*
+ * Periodic accumulation of MAC statistics.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2132: FILE: drivers/net/cxgb3/cxgb3_main.c:2091:
+/*
+ * Processes external (PHY) interrupts in process context.

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#2141: FILE: drivers/net/cxgb3/cxgb3_main.c:2100:
+	/* Now reenable external interrupts */
 	       ^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2153: FILE: drivers/net/cxgb3/cxgb3_main.c:2112:
+/*
+ * Interrupt-context handler for external (PHY) interrupts.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2158: FILE: drivers/net/cxgb3/cxgb3_main.c:2117:
+	/*
+	 * Schedule a task to handle external interrupts as they may be slow

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#2160: FILE: drivers/net/cxgb3/cxgb3_main.c:2119:
+	 * interrupts in the meantime and let the task reenable them when
 	                                               ^^^^^^^^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2188: FILE: drivers/net/cxgb3/cxgb3_main.c:2147:
+
+}

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2190: FILE: drivers/net/cxgb3/cxgb3_main.c:2149:
+static int __devinit cxgb_enable_msix(struct adapter *adap)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2203: FILE: drivers/net/cxgb3/cxgb3_main.c:2162:
+		printk(KERN_INFO

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2209: FILE: drivers/net/cxgb3/cxgb3_main.c:2168:
+static void __devinit print_port_info(struct adapter *adap,

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#2212: FILE: drivers/net/cxgb3/cxgb3_main.c:2171:
+	static const char *pci_variant[] = {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2234: FILE: drivers/net/cxgb3/cxgb3_main.c:2193:
+		printk(KERN_INFO "%s: %s %s RNIC (rev %d) %s%s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2240: FILE: drivers/net/cxgb3/cxgb3_main.c:2199:
+			printk(KERN_INFO "%s: %uMB CM, %uMB PMTX, %uMB PMRX\n",

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2247: FILE: drivers/net/cxgb3/cxgb3_main.c:2206:
+static int __devinit init_one(struct pci_dev *pdev,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2259: FILE: drivers/net/cxgb3/cxgb3_main.c:2218:
+		printk(KERN_INFO "%s - version %s\n", DRV_DESC, DRV_VERSION);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2266: FILE: drivers/net/cxgb3/cxgb3_main.c:2225:
+			printk(KERN_ERR PFX "cannot initialize work queue\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2278: FILE: drivers/net/cxgb3/cxgb3_main.c:2237:
+	/*
+	 * Can't use pci_request_regions() here because some kernels want to

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2286: FILE: drivers/net/cxgb3/cxgb3_main.c:2245:
+		/*
+		 * Some other driver may have already claimed the device.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2289: FILE: drivers/net/cxgb3/cxgb3_main.c:2248:
+		printk(KERN_INFO "%s: cannot obtain PCI resources\n",

WARNING:SPLIT_STRING: quoted string split across lines
#2299: FILE: drivers/net/cxgb3/cxgb3_main.c:2258:
+			CH_ERR("%s: unable to obtain 64-bit DMA for "
+			       "coherent allocations\n", pci_name(pdev));

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2302: FILE: drivers/net/cxgb3/cxgb3_main.c:2261:
+	} else if ((err = pci_set_dma_mask(pdev, DMA_32BIT_MASK)) != 0) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2395: FILE: drivers/net/cxgb3/cxgb3_main.c:2354:
+	/*
+	 * The card is now ready to go.  If any errors occur during device

CHECK:BRACES: Unbalanced braces around else statement
#2406: FILE: drivers/net/cxgb3/cxgb3_main.c:2365:
+		else {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2408: FILE: drivers/net/cxgb3/cxgb3_main.c:2367:
+			/*
+			 * Change the name we use for messages to the name of

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#2458: FILE: drivers/net/cxgb3/cxgb3_main.c:2417:
+static void __devexit remove_one(struct pci_dev *pdev)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#2470: FILE: drivers/net/cxgb3/cxgb3_main.c:2429:
+		for_each_port(adapter, i)
+		    if (test_bit(i, &adapter->registered_device_map))

WARNING:TABSTOP: Statements should start on a tabstop
#2471: FILE: drivers/net/cxgb3/cxgb3_main.c:2430:
+		    if (test_bit(i, &adapter->registered_device_map))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000011146.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 74 warnings, 54 checks, 2486 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000011146.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
