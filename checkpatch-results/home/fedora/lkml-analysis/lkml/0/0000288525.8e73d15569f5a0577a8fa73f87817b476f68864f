WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#87: 
diff -Nurp --exclude-from=/home/mcd/.dontdiff linux-2.6.5-mm4/include/linux/mempolicy.h linux-2.6.5-mcd_numa_api/include/linux/mempolicy.h

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#109: FILE: include/linux/mempolicy.h:22:
+#define MPOL_F_NODE	(1<<4)	/* return next IL mode instead of node mask */
                    	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#109: FILE: include/linux/mempolicy.h:22:
+#define MPOL_F_NODE	(1<<4)	/* return next IL mode instead of node mask */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#110: FILE: include/linux/mempolicy.h:23:
+#define MPOL_F_ADDR	(1<<5)	/* look up vma using address */
                    	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#110: FILE: include/linux/mempolicy.h:23:
+#define MPOL_F_ADDR	(1<<5)	/* look up vma using address */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#114: FILE: include/linux/mempolicy.h:26:
+#define MPOL_MF_STRICT	(1<<6)	/* Verify existing pages in the mapping */
                       	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#114: FILE: include/linux/mempolicy.h:26:
+#define MPOL_MF_STRICT	(1<<6)	/* Verify existing pages in the mapping */

WARNING:LINE_SPACING: Missing a blank line after declarations
#191: FILE: mm/mempolicy.c:131:
+	int mode = flags & MPOL_MODE_MASK;
+	flags &= ~MPOL_MODE_MASK;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: mm/mempolicy.c:240:
+mpol_check_range(struct mm_struct *mm, unsigned long start, unsigned long end,
 	    unsigned long *nodes, unsigned long flags)

CHECK:CAMELCASE: Avoid CamelCase: <PDprintk>
#275: FILE: mm/mempolicy.c:354:
+	PDprintk("mbind %lx-%lx mode:%ld nodes:%lx\n", start, end, mode, nodes[0]);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288525.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 2 warnings, 8 checks, 221 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288525.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
