ERROR:TRAILING_WHITESPACE: trailing whitespace
#40: FILE: lib/cmdline.c:35:
+ *      $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#48: FILE: lib/cmdline.c:51:
+	if (**str == '-') {
+	    int x,inc_counter= 0, upper_range = 0;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#49: FILE: lib/cmdline.c:52:
+	    int x,inc_counter= 0, upper_range = 0;
 	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#49: FILE: lib/cmdline.c:52:
+	    int x,inc_counter= 0, upper_range = 0;
 	                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#52: FILE: lib/cmdline.c:55:
+	    upper_range = simple_strtol ((*str), NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#52: FILE: lib/cmdline.c:55:
+	    upper_range = simple_strtol ((*str), NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:SPACING: space prohibited before semicolon
#53: FILE: lib/cmdline.c:56:
+	    inc_counter = upper_range - *pint ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#54: FILE: lib/cmdline.c:57:
+^I    for (x=*pint; x < upper_range; x++) $

WARNING:TABSTOP: Statements should start on a tabstop
#54: FILE: lib/cmdline.c:57:
+	    for (x=*pint; x < upper_range; x++) 

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#54: FILE: lib/cmdline.c:57:
+	    for (x=*pint; x < upper_range; x++) 
+		    *pint++ = x;

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#54: FILE: lib/cmdline.c:57:
+	    for (x=*pint; x < upper_range; x++) 
 	          ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#54: FILE: lib/cmdline.c:57:
+	    for (x=*pint; x < upper_range; x++) 
 	           ^

WARNING:TABSTOP: Statements should start on a tabstop
#56: FILE: lib/cmdline.c:59:
+	    return -inc_counter;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: lib/cmdline.c:92:
+^I^Iif (res < 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: lib/cmdline.c:93:
+^I^I        /* Decrement the result by one to leave out the $

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: lib/cmdline.c:93:
+^I^I        /* Decrement the result by one to leave out the $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: lib/cmdline.c:94:
+^I^I^I   last number in the range.  The next iteration $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#77: FILE: lib/cmdline.c:94:
+		        /* Decrement the result by one to leave out the 
+			   last number in the range.  The next iteration 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#78: FILE: lib/cmdline.c:95:
+			   will handle the upper number in the range */

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: lib/cmdline.c:96:
+^I^I        i += ((-res) - 1);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000022922.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 9 warnings, 0 checks, 46 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000022922.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
