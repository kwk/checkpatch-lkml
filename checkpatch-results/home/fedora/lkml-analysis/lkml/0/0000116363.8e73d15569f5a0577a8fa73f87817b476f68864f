WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#36: 
Signed-off-by:	Duncan Sands <baldrick@free.fr>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#62: FILE: drivers/usb/atm/cxacru.c:366:
+		atm_err(usbatm_instance, "cxacru_atm_start: CARD_GET_MAC_ADDRESS returned %d\n", ret);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#70: FILE: drivers/usb/atm/cxacru.c:373:
+		atm_err(usbatm_instance, "cxacru_atm_start: CHIP_ADSL_LINE_START returned %d\n", ret);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: drivers/usb/atm/cxacru.c:430:
+		atm_info(usbatm, "ADSL line: up (%d kb/s down | %d kb/s up)\n",
 		     buf[CXINF_DOWNSTREAM_RATE], buf[CXINF_UPSTREAM_RATE]);

WARNING:TYPO_SPELLING: 'Conexant' may be misspelled - perhaps 'Connexant'?
#298: FILE: drivers/usb/atm/cxacru.c:792:
+	{ /* V = Conexant			P = ADSL modem (Well PTI-800) */
 	         ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#299: FILE: drivers/usb/atm/cxacru.c:793:
+		USB_DEVICE(0x0572, 0xcb02),	.driver_info = (unsigned long) &cxacru_cb00

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#312: FILE: drivers/usb/atm/speedtch.c:208:
+			usb_warn(usbatm, "%s: read BLOCK0 from modem failed (%d)!\n", __func__, ret);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#382: FILE: drivers/usb/atm/speedtch.c:309:
+				usb_err(usbatm, "%s: no stage %d firmware found!\n", __func__, phase);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#399: FILE: drivers/usb/atm/speedtch.c:326:
+	if ((ret = speedtch_find_firmware(usbatm, intf, 1, &fw1)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#403: FILE: drivers/usb/atm/speedtch.c:329:
+	if ((ret = speedtch_find_firmware(usbatm, intf, 2, &fw2)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#409: FILE: drivers/usb/atm/speedtch.c:334:
+	if ((ret = speedtch_upload_firmware(instance, fw1, fw2)) < 0)

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#453: FILE: drivers/usb/atm/speedtch.c:699:
+		usb_err(usbatm, "%s: wrong device class %d\n", __func__, usb_dev->descriptor.bDeviceClass);

CHECK:CAMELCASE: Avoid CamelCase: <bDeviceClass>
#453: FILE: drivers/usb/atm/speedtch.c:699:
+		usb_err(usbatm, "%s: wrong device class %d\n", __func__, usb_dev->descriptor.bDeviceClass);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#462: FILE: drivers/usb/atm/speedtch.c:712:
+				usb_err(usbatm, "%s: failed to claim interface %2d (%d)!\n", __func__, i, ret);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#480: FILE: drivers/usb/atm/speedtch.c:762:
+		if ((ret = usb_reset_device(usb_dev)) < 0) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#499: FILE: drivers/usb/atm/usbatm.c:172:
+static int usbatm_atm_ioctl(struct atm_dev *atm_dev, unsigned int cmd, void __user * arg);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#509: FILE: drivers/usb/atm/usbatm.c:237:
+		if (printk_ratelimit())

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#511: FILE: drivers/usb/atm/usbatm.c:239:
+			atm_warn(channel->usbatm, "%s: urb 0x%p submission failed (%d)!\n",
+				__func__, urb, ret);

CHECK:BRACES: braces {} should be used on all arms of this statement
#520: FILE: drivers/usb/atm/usbatm.c:273:
+	if (unlikely(urb->status)) {
[...]
-	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#521: FILE: drivers/usb/atm/usbatm.c:274:
+		if (printk_ratelimit())

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#523: FILE: drivers/usb/atm/usbatm.c:276:
+			atm_warn(channel->usbatm, "%s: urb 0x%p failed (%d)!\n",
+				__func__, urb, urb->status);

CHECK:BRACES: Unbalanced braces around else statement
#527: FILE: drivers/usb/atm/usbatm.c:279:
+	} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vcc_data->vci == vci'
#542: FILE: drivers/usb/atm/usbatm.c:294:
+		if ((vcc_data->vci == vci) && (vcc_data->vpi == vpi))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vcc_data->vpi == vpi'
#542: FILE: drivers/usb/atm/usbatm.c:294:
+		if ((vcc_data->vci == vci) && (vcc_data->vpi == vpi))

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#552: FILE: drivers/usb/atm/usbatm.c:324:
+				atm_rldbg(instance, "%s: unknown vpi/vci (%hd/%d)!\n", __func__, vpi, vci);

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#561: FILE: drivers/usb/atm/usbatm.c:334:
+			if (printk_ratelimit())

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: drivers/usb/atm/usbatm.c:336:
+				atm_warn(instance, "%s: OAM not supported (vpi %d, vci %d)!\n",
+					__func__, vpi, vci);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#573: FILE: drivers/usb/atm/usbatm.c:345:
+			atm_rldbg(instance, "%s: buffer overrun (sarb->len %u, vcc: 0x%p)!\n",
 					__func__, sarb->len, vcc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#582: FILE: drivers/usb/atm/usbatm.c:364:
+				atm_rldbg(instance, "%s: bogus length %u (vcc: 0x%p)!\n",
 						__func__, length, vcc);

WARNING:LONG_LINE_STRING: line length of 108 exceeds 100 columns
#590: FILE: drivers/usb/atm/usbatm.c:372:
+				atm_rldbg(instance, "%s: bogus pdu_length %u (sarb->len: %u, vcc: 0x%p)!\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#591: FILE: drivers/usb/atm/usbatm.c:373:
+				atm_rldbg(instance, "%s: bogus pdu_length %u (sarb->len: %u, vcc: 0x%p)!\n",
 						__func__, pdu_length, sarb->len, vcc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#599: FILE: drivers/usb/atm/usbatm.c:380:
+				atm_rldbg(instance, "%s: packet failed crc check (vcc: 0x%p)!\n",
 						__func__, vcc);

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#607: FILE: drivers/usb/atm/usbatm.c:388:
+				if (printk_ratelimit())

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#609: FILE: drivers/usb/atm/usbatm.c:390:
+					atm_err(instance, "%s: no memory for skb (length: %u)!\n",
+							__func__, length);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#619: FILE: drivers/usb/atm/usbatm.c:399:
+				atm_rldbg(instance, "%s: failed atm_charge (skb->truesize: %u)!\n",
+						__func__, skb->truesize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#636: FILE: drivers/usb/atm/usbatm.c:619:
+		atm_rldbg(instance, "%s: packet too long (%d vs %d)!\n",
 				__func__, skb->len, ATM_MAX_AAL5_PDU);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vcc->qos.aal != ATM_AAL5'
#666: FILE: drivers/usb/atm/usbatm.c:747:
+	if ((vcc->qos.aal != ATM_AAL5)) {

WARNING:UNNECESSARY_PARENTHESES: Unnecessary parentheses
#666: FILE: drivers/usb/atm/usbatm.c:747:
+	if ((vcc->qos.aal != ATM_AAL5)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vcc->qos.rxtp.max_sdu < 0'
#672: FILE: drivers/usb/atm/usbatm.c:753:
+	if ((vcc->qos.rxtp.max_sdu < 0) || (vcc->qos.rxtp.max_sdu > ATM_MAX_AAL5_PDU)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vcc->qos.rxtp.max_sdu > ATM_MAX_AAL5_PDU'
#672: FILE: drivers/usb/atm/usbatm.c:753:
+	if ((vcc->qos.rxtp.max_sdu < 0) || (vcc->qos.rxtp.max_sdu > ATM_MAX_AAL5_PDU)) {

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#673: FILE: drivers/usb/atm/usbatm.c:754:
+		atm_dbg(instance, "%s: max_sdu %d out of range!\n", __func__, vcc->qos.rxtp.max_sdu);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#696: FILE: drivers/usb/atm/usbatm.c:779:
 	if (!new->sarb) {
+		atm_err(instance, "%s: no memory for SAR buffer!\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#715: FILE: drivers/usb/atm/usbatm.c:847:
+static int usbatm_atm_ioctl(struct atm_dev *atm_dev, unsigned int cmd,
 			  void __user * arg)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#726: FILE: drivers/usb/atm/usbatm.c:865:
+	 * abort if atm_dev->dev_data is NULL. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#765: FILE: drivers/usb/atm/usbatm.c:975:
+	dev_dbg(dev, "%s: trying driver %s with vendor=%04x, product=%04x, ifnum %2d\n",
 			__func__, driver->driver_name,

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#773: FILE: drivers/usb/atm/usbatm.c:983:
 	if (!instance) {
+		dev_err(dev, "%s: no memory for instance data!\n", __func__);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#780: FILE: drivers/usb/atm/usbatm.c:1018:
 	if (driver->bind && (error = driver->bind(instance, intf, id, &need_heavy)) < 0) {
+			dev_err(dev, "%s: bind failed: %d!\n", __func__, error);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#800: FILE: drivers/usb/atm/usbatm.c:1073:
 		if (!buffer) {
+			dev_err(dev, "%s: no memory for buffer %d!\n", __func__, i);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#832: FILE: drivers/usb/atm/usbatm.h:39:
+/*
+#define VERBOSE_DEBUG

ERROR:CODE_INDENT: code indent should use tabs where possible
#844: FILE: drivers/usb/atm/usbatm.h:56:
+        dev_printk(KERN_DEBUG , &(instance)->usb_intf->dev , format , ## arg)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#844: FILE: drivers/usb/atm/usbatm.h:56:
+        dev_printk(KERN_DEBUG , &(instance)->usb_intf->dev , format , ## arg)$

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#844: FILE: drivers/usb/atm/usbatm.h:56:
+        dev_printk(KERN_DEBUG , &(instance)->usb_intf->dev , format , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#844: FILE: drivers/usb/atm/usbatm.h:56:
+        dev_printk(KERN_DEBUG , &(instance)->usb_intf->dev , format , ## arg)
                               ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#844: FILE: drivers/usb/atm/usbatm.h:56:
+        dev_printk(KERN_DEBUG , &(instance)->usb_intf->dev , format , ## arg)
                                                            ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#844: FILE: drivers/usb/atm/usbatm.h:56:
+        dev_printk(KERN_DEBUG , &(instance)->usb_intf->dev , format , ## arg)
                                                                     ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#857: FILE: drivers/usb/atm/usbatm.h:76:
+#define atm_rldbg(instance, format, arg...)	\
+	if (printk_ratelimit())				\
+		atm_printk(KERN_DEBUG, instance , format , ## arg)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#858: FILE: drivers/usb/atm/usbatm.h:77:
+	if (printk_ratelimit())				\

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#859: FILE: drivers/usb/atm/usbatm.h:78:
+		atm_printk(KERN_DEBUG, instance , format , ## arg)
 		                                ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#859: FILE: drivers/usb/atm/usbatm.h:78:
+		atm_printk(KERN_DEBUG, instance , format , ## arg)
 		                                         ^

WARNING:SPLIT_STRING: quoted string split across lines
#896: FILE: drivers/usb/atm/xusbatm.c:76:
+	usb_dbg(usbatm, "%s: binding driver %d: vendor %04x product %04x"
+		" rx: ep %02x padd %d tx: ep %02x padd %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#935: FILE: drivers/usb/atm/xusbatm.c:115:
+	usb_dbg(usbatm, "%s entered\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#948: FILE: drivers/usb/atm/xusbatm.c:127:
+	atm_dbg(usbatm, "%s entered\n", __func__);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000116363.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 28 warnings, 22 checks, 826 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000116363.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
