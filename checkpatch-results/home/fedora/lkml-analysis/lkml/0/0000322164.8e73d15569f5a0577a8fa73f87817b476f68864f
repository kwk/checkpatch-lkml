WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#49: FILE: fs/proc/task_mmu.c:7:
+/**
+* Allan Bezerra (ajsb@dcc.fua.br) &

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#56: FILE: fs/proc/task_mmu.c:14:
+void resident_mem_size(struct mm_struct *mm, unsigned long start_address,
unsigned long end_address, unsigned long *size) {
+  pgd_t *my_pgd;
+  pmd_t *my_pmd;
+  pte_t *my_pte;
+  unsigned long page;
+
+  for (page = start_address; page < end_address; page += PAGE_SIZE) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#57: FILE: fs/proc/task_mmu.c:14:
unsigned long end_address, unsigned long *size) {

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#58: FILE: fs/proc/task_mmu.c:15:
+void resident_mem_size(struct mm_struct *mm, unsigned long start_address,
+  pgd_t *my_pgd;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: fs/proc/task_mmu.c:15:
+  pgd_t *my_pgd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: fs/proc/task_mmu.c:16:
+  pmd_t *my_pmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: fs/proc/task_mmu.c:17:
+  pte_t *my_pte;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: fs/proc/task_mmu.c:18:
+  unsigned long page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: fs/proc/task_mmu.c:20:
+  for (page = start_address; page < end_address; page += PAGE_SIZE) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#63: FILE: fs/proc/task_mmu.c:20:
+  for (page = start_address; page < end_address; page += PAGE_SIZE) {
+    my_pgd = pgd_offset(mm, page);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: fs/proc/task_mmu.c:21:
+    my_pgd = pgd_offset(mm, page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: fs/proc/task_mmu.c:22:
+    if (pgd_none(*my_pgd) || pgd_bad(*my_pgd)) continue;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#65: FILE: fs/proc/task_mmu.c:22:
+    if (pgd_none(*my_pgd) || pgd_bad(*my_pgd)) continue;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: fs/proc/task_mmu.c:23:
+    my_pmd = pmd_offset(my_pgd, page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: fs/proc/task_mmu.c:24:
+    if (pmd_none(*my_pmd) || pmd_bad(*my_pmd)) continue;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#67: FILE: fs/proc/task_mmu.c:24:
+    if (pmd_none(*my_pmd) || pmd_bad(*my_pmd)) continue;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: fs/proc/task_mmu.c:25:
+    my_pte = pte_offset_map(my_pmd, page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: fs/proc/task_mmu.c:26:
+    if (pte_present(*my_pte)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#69: FILE: fs/proc/task_mmu.c:26:
+    if (pte_present(*my_pte)) {
+      *size += PAGE_SIZE;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#69: FILE: fs/proc/task_mmu.c:26:
+    if (pte_present(*my_pte)) {
+      *size += PAGE_SIZE;
+    }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: fs/proc/task_mmu.c:27:
+      *size += PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: fs/proc/task_mmu.c:28:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: fs/proc/task_mmu.c:29:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: fs/proc/task_mmu.c:34:
+  unsigned long data = 0, stack = 0, exec = 0, lib = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: fs/proc/task_mmu.c:35:
+  unsigned long phys_data = 0, phys_stack = 0, phys_exec = 0, phys_lib = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: fs/proc/task_mmu.c:36:
+  unsigned long phys_brk = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: fs/proc/task_mmu.c:37:
+  struct vm_area_struct *vma;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#117: FILE: fs/proc/task_mmu.c:38:
+  struct vm_area_struct *vma;
+  down_read(&mm->mmap_sem);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: fs/proc/task_mmu.c:38:
+  down_read(&mm->mmap_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: fs/proc/task_mmu.c:39:
+  for (vma = mm->mmap; vma; vma = vma->vm_next) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#118: FILE: fs/proc/task_mmu.c:39:
+  for (vma = mm->mmap; vma; vma = vma->vm_next) {
+    unsigned long len = (vma->vm_end - vma->vm_start) >> 10;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: fs/proc/task_mmu.c:40:
+    unsigned long len = (vma->vm_end - vma->vm_start) >> 10;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: fs/proc/task_mmu.c:42:
+    if (!vma->vm_file) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#121: FILE: fs/proc/task_mmu.c:42:
+    if (!vma->vm_file) {
+      resident_mem_size(mm, vma->vm_start, vma->vm_end, &phys_data);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: fs/proc/task_mmu.c:43:
+      resident_mem_size(mm, vma->vm_start, vma->vm_end, &phys_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: fs/proc/task_mmu.c:44:
+      if (vma->vm_flags & VM_GROWSDOWN) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 7)
#123: FILE: fs/proc/task_mmu.c:44:
+      if (vma->vm_flags & VM_GROWSDOWN) {
+       stack += len;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: fs/proc/task_mmu.c:45:
+       stack += len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: fs/proc/task_mmu.c:46:
+       resident_mem_size(mm, vma->vm_start, vma->vm_end, &phys_stack);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: fs/proc/task_mmu.c:47:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: fs/proc/task_mmu.c:48:
+      else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 7)
#127: FILE: fs/proc/task_mmu.c:48:
+      else {
+       data += len;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#127: FILE: fs/proc/task_mmu.c:48:
+      }
+      else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#127: FILE: fs/proc/task_mmu.c:48:
+      else {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: fs/proc/task_mmu.c:49:
+       data += len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: fs/proc/task_mmu.c:50:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: fs/proc/task_mmu.c:51:
+      continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: fs/proc/task_mmu.c:52:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: fs/proc/task_mmu.c:54:
+    if (vma->vm_flags & VM_WRITE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#133: FILE: fs/proc/task_mmu.c:54:
+    if (vma->vm_flags & VM_WRITE)
+      continue;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: fs/proc/task_mmu.c:55:
+      continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: fs/proc/task_mmu.c:57:
+    if (vma->vm_flags & VM_EXEC) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#136: FILE: fs/proc/task_mmu.c:57:
+    if (vma->vm_flags & VM_EXEC) {
+      exec += len;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: fs/proc/task_mmu.c:58:
+      exec += len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: fs/proc/task_mmu.c:59:
+      resident_mem_size(mm, vma->vm_start, vma->vm_end, &phys_exec);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: fs/proc/task_mmu.c:60:
+      if (vma->vm_flags & VM_EXECUTABLE) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 15)
#139: FILE: fs/proc/task_mmu.c:60:
+      if (vma->vm_flags & VM_EXECUTABLE) {
+               continue;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#139: FILE: fs/proc/task_mmu.c:60:
+      if (vma->vm_flags & VM_EXECUTABLE) {
+               continue;
+      }

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: fs/proc/task_mmu.c:61:
+               continue;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: fs/proc/task_mmu.c:61:
+               continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: fs/proc/task_mmu.c:62:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: fs/proc/task_mmu.c:63:
+      lib += len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: fs/proc/task_mmu.c:64:
+      resident_mem_size(mm, vma->vm_start, vma->vm_end, &phys_lib);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: fs/proc/task_mmu.c:65:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: fs/proc/task_mmu.c:66:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: fs/proc/task_mmu.c:67:
+  resident_mem_size(mm, mm->start_brk, mm->brk, &phys_brk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: fs/proc/task_mmu.c:68:
+  buffer += sprintf(buffer,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: fs/proc/task_mmu.c:69:
+                   "VmSize:\t%8lu kB\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: fs/proc/task_mmu.c:69:
+                   "VmSize:\t%8lu kB\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: fs/proc/task_mmu.c:70:
+                   "VmLck:\t%8lu kB\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: fs/proc/task_mmu.c:70:
+                   "VmLck:\t%8lu kB\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: fs/proc/task_mmu.c:71:
+                   "VmRSS:\t%8lu kB\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: fs/proc/task_mmu.c:71:
+                   "VmRSS:\t%8lu kB\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: fs/proc/task_mmu.c:72:
+                   "VmData:\t%8lu kB\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: fs/proc/task_mmu.c:72:
+                   "VmData:\t%8lu kB\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: fs/proc/task_mmu.c:73:
+                   "RssData:\t%8lu kB\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: fs/proc/task_mmu.c:73:
+                   "RssData:\t%8lu kB\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: fs/proc/task_mmu.c:74:
+                   "VmStk:\t%8lu kB\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: fs/proc/task_mmu.c:74:
+                   "VmStk:\t%8lu kB\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: fs/proc/task_mmu.c:75:
+                   "RssStk:\t%8lu kB\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: fs/proc/task_mmu.c:75:
+                   "RssStk:\t%8lu kB\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: fs/proc/task_mmu.c:76:
+                   "VmExe:\t%8lu kB\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: fs/proc/task_mmu.c:76:
+                   "VmExe:\t%8lu kB\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: fs/proc/task_mmu.c:77:
+                   "RssExe:\t%8lu kB\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: fs/proc/task_mmu.c:77:
+                   "RssExe:\t%8lu kB\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: fs/proc/task_mmu.c:78:
+                   "VmLib:\t%8lu kB\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: fs/proc/task_mmu.c:78:
+                   "VmLib:\t%8lu kB\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: fs/proc/task_mmu.c:79:
+                   "RssLib:\t%8lu kB\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: fs/proc/task_mmu.c:79:
+                   "RssLib:\t%8lu kB\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: fs/proc/task_mmu.c:80:
+                   "VmHeap:\t%8lu KB\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: fs/proc/task_mmu.c:80:
+                   "VmHeap:\t%8lu KB\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: fs/proc/task_mmu.c:81:
+                   "RssHeap:\t%8lu KB\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: fs/proc/task_mmu.c:81:
+                   "RssHeap:\t%8lu KB\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: fs/proc/task_mmu.c:82:
+                   mm->total_vm << (PAGE_SHIFT-10),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: fs/proc/task_mmu.c:82:
+                   mm->total_vm << (PAGE_SHIFT-10),$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#161: FILE: fs/proc/task_mmu.c:82:
+                   mm->total_vm << (PAGE_SHIFT-10),
                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: fs/proc/task_mmu.c:83:
+                   mm->locked_vm << (PAGE_SHIFT-10),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: fs/proc/task_mmu.c:83:
+                   mm->locked_vm << (PAGE_SHIFT-10),$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#162: FILE: fs/proc/task_mmu.c:83:
+                   mm->locked_vm << (PAGE_SHIFT-10),
                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: fs/proc/task_mmu.c:84:
+                   mm->rss << (PAGE_SHIFT-10),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: fs/proc/task_mmu.c:84:
+                   mm->rss << (PAGE_SHIFT-10),$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#163: FILE: fs/proc/task_mmu.c:84:
+                   mm->rss << (PAGE_SHIFT-10),
                                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: fs/proc/task_mmu.c:85:
+                   data, (phys_data - phys_stack) >> 10,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: fs/proc/task_mmu.c:85:
+                   data, (phys_data - phys_stack) >> 10,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: fs/proc/task_mmu.c:86:
+                   stack, phys_stack >> 10,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: fs/proc/task_mmu.c:86:
+                   stack, phys_stack >> 10,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: fs/proc/task_mmu.c:87:
+                   exec - lib, (phys_exec - phys_lib) >> 10,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: fs/proc/task_mmu.c:87:
+                   exec - lib, (phys_exec - phys_lib) >> 10,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: fs/proc/task_mmu.c:88:
+                   lib, phys_lib >> 10,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: fs/proc/task_mmu.c:88:
+                   lib, phys_lib >> 10,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: fs/proc/task_mmu.c:89:
+                   (mm->brk - mm->start_brk) >> 10,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: fs/proc/task_mmu.c:89:
+                   (mm->brk - mm->start_brk) >> 10,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: fs/proc/task_mmu.c:90:
+                   phys_brk >> 10$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: fs/proc/task_mmu.c:90:
+                   phys_brk >> 10$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: fs/proc/task_mmu.c:91:
+                   );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: fs/proc/task_mmu.c:91:
+                   );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: fs/proc/task_mmu.c:92:
+  up_read(&mm->mmap_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: fs/proc/task_mmu.c:93:
+  return buffer;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000322164.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 84 warnings, 5 checks, 131 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000322164.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
