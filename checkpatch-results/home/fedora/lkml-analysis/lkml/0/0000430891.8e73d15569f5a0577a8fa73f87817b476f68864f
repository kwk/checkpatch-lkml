WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
diff -urpN linux-2.5.38/arch/mips/baget/irq.c linux-2.5.38-ltt/arch/mips/baget/irq.c

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#111: FILE: arch/mips/ddb5476/irq.c:193:
+		TRACE_IRQ_ENTRY(nile4_to_irq(NILE4_INT_GPT), ((regs->cp0_status & ST0_KSU) == KSU_KERNEL));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#119: FILE: arch/mips/ddb5476/irq.c:203:
+				TRACE_IRQ_ENTRY(i8259_irq, ((regs->cp0_status & ST0_KSU) == KSU_KERNEL));

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#122: FILE: arch/mips/ddb5476/irq.c:206:
+			        TRACE_IRQ_ENTRY(nile4_to_irq(nile4_irq), ((regs->cp0_status & ST0_KSU) == KSU_KERNEL));

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: arch/mips/ddb5476/irq.c:206:
+^I^I^I        TRACE_IRQ_ENTRY(nile4_to_irq(nile4_irq), ((regs->cp0_status & ST0_KSU) == KSU_KERNEL));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: arch/mips/ddb5476/irq.c:216:
+        TRACE_IRQ_EXIT();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: arch/mips/ddb5476/irq.c:216:
+        TRACE_IRQ_EXIT();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: arch/mips/dec/irq.c:132:
+    TRACE_IRQ_ENTRY(irq, !user_mode(regs));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: arch/mips/dec/irq.c:157:
+    TRACE_IRQ_EXIT();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: arch/mips/kernel/scall_o32.S:8:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: arch/mips/kernel/scall_o32.S:64:
+#endif /* (CONFIG_TRACE || CONFIG_TRACE_MODULE) */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: arch/mips/kernel/scall_o32.S:83:
+#endif /* (CONFIG_TRACE || CONFIG_TRACE_MODULE) */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: arch/mips/kernel/scall_o32.S:142:
+#endif /* (CONFIG_TRACE || CONFIG_TRACE_MODULE) */^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: arch/mips/kernel/traps.c:334:
+^I        return;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#533: FILE: arch/mips/kernel/traps.c:993:
+asmlinkage void trace_real_syscall_entry(struct pt_regs * regs)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#551: FILE: arch/mips/kernel/traps.c:1011:
+	trace_syscall_event.syscall_id = (uint8_t) (regs->regs[2] - __NR_Linux);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <__NR_Linux>
#551: FILE: arch/mips/kernel/traps.c:1011:
+	trace_syscall_event.syscall_id = (uint8_t) (regs->regs[2] - __NR_Linux);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#561: FILE: arch/mips/kernel/traps.c:1021:
+			     (void*)&lower_bound,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#562: FILE: arch/mips/kernel/traps.c:1022:
+			     (void*)&upper_bound) < 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'use_depth == 1'
#573: FILE: arch/mips/kernel/traps.c:1033:
+	if ((use_depth == 1) || (use_bounds == 1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'use_bounds == 1'
#573: FILE: arch/mips/kernel/traps.c:1033:
+	if ((use_depth == 1) || (use_bounds == 1)) {

CHECK:SPACING: No space is necessary after a cast
#574: FILE: arch/mips/kernel/traps.c:1034:
+		stack       = (unsigned long*) regs->regs[29];

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#574: FILE: arch/mips/kernel/traps.c:1034:
+		stack       = (unsigned long*) regs->regs[29];

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr > start_code'
#580: FILE: arch/mips/kernel/traps.c:1040:
+			if ((addr > start_code) && (addr < end_code)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr < end_code'
#580: FILE: arch/mips/kernel/traps.c:1040:
+			if ((addr > start_code) && (addr < end_code)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'use_depth  == 1'
#581: FILE: arch/mips/kernel/traps.c:1041:
+				if (((use_depth  == 1) && (depth == seek_depth)) ||
+				    ((use_bounds == 1) && (addr > lower_bound) && (addr < upper_bound))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'depth == seek_depth'
#581: FILE: arch/mips/kernel/traps.c:1041:
+				if (((use_depth  == 1) && (depth == seek_depth)) ||
+				    ((use_bounds == 1) && (addr > lower_bound) && (addr < upper_bound))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'use_bounds == 1'
#581: FILE: arch/mips/kernel/traps.c:1041:
+				if (((use_depth  == 1) && (depth == seek_depth)) ||
+				    ((use_bounds == 1) && (addr > lower_bound) && (addr < upper_bound))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr > lower_bound'
#581: FILE: arch/mips/kernel/traps.c:1041:
+				if (((use_depth  == 1) && (depth == seek_depth)) ||
+				    ((use_bounds == 1) && (addr > lower_bound) && (addr < upper_bound))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr < upper_bound'
#581: FILE: arch/mips/kernel/traps.c:1041:
+				if (((use_depth  == 1) && (depth == seek_depth)) ||
+				    ((use_bounds == 1) && (addr > lower_bound) && (addr < upper_bound))) {

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#582: FILE: arch/mips/kernel/traps.c:1042:
+				    ((use_bounds == 1) && (addr > lower_bound) && (addr < upper_bound))) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#599: FILE: arch/mips/kernel/traps.c:1059:
+        trace_event(TRACE_EV_SYSCALL_EXIT, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: arch/mips/kernel/traps.c:1059:
+        trace_event(TRACE_EV_SYSCALL_EXIT, NULL);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#727: FILE: include/asm-mips/trace.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#728: FILE: include/asm-mips/trace.h:2:
+ * linux/include/asm-mips/trace.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430891.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 11 warnings, 12 checks, 604 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430891.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
