WARNING:BAD_SIGN_OFF: Duplicate signature
#42: 
Signed-off-by: John Stultz <johnstul@us.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#71: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#76: FILE: arch/i386/kernel/hpet.c:1:
+#include <linux/clocksource.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#82: FILE: arch/i386/kernel/hpet.c:7:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#110: FILE: arch/i386/kernel/hpet.c:35:
+	void __iomem* hpet_base;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#118: FILE: arch/i386/kernel/hpet.c:43:
+		(void __iomem*)ioremap_nocache(hpet_address, HPET_MMAP_SIZE);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#188: FILE: arch/i386/kernel/i8253.c:63:
+	count = (LATCH-1) - count;
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/delay.h> instead of <asm/delay.h>
#240: FILE: arch/i386/kernel/tsc.c:14:
+#include <asm/delay.h>

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#251: FILE: arch/i386/kernel/tsc.c:324:
+static unsigned long current_tsc_khz = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: arch/i386/kernel/tsc.c:362:
+		clocksource_tsc.mult = clocksource_khz2mult(current_tsc_khz,
+							clocksource_tsc.shift);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#298: FILE: arch/i386/kernel/tsc.c:371:
+	printk(KERN_NOTICE "%s detected: marking TSC unstable.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: arch/i386/kernel/tsc.c:372:
+	printk(KERN_NOTICE "%s detected: marking TSC unstable.\n",
+		       d->ident);

WARNING:MISPLACED_INIT: __initdata should be placed after bad_tsc_dmi_table[]
#305: FILE: arch/i386/kernel/tsc.c:378:
+static struct dmi_system_id __initdata bad_tsc_dmi_table[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#317: FILE: arch/i386/kernel/tsc.c:390:
+#define TSC_FREQ_CHECK_INTERVAL (10*MSEC_PER_SEC) /* 10sec in MS */
                                    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#329: FILE: arch/i386/kernel/tsc.c:402:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#336: FILE: arch/i386/kernel/tsc.c:409:
+	if (!last_jiffies) {
+		goto out;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#343: FILE: arch/i386/kernel/tsc.c:416:
+	do_div(interval_tsc, cpu_khz*1000);
 	                            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#346: FILE: arch/i386/kernel/tsc.c:419:
+		printk("TSC appears to be running slowly. "

WARNING:SPLIT_STRING: quoted string split across lines
#347: FILE: arch/i386/kernel/tsc.c:420:
+		printk("TSC appears to be running slowly. "
+			"Marking it as unstable\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#357: FILE: arch/i386/kernel/tsc.c:430:
+	mod_timer(&verfiy_tsc_freq_timer,
+		jiffies + msecs_to_jiffies(TSC_FREQ_CHECK_INTERVAL));

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: arch/i386/kernel/tsc.c:444:
+ ^I^Ireturn 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#371: FILE: arch/i386/kernel/tsc.c:444:
+ ^I^Ireturn 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: arch/i386/kernel/tsc.c:444:
+ ^I^Ireturn 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: arch/i386/kernel/tsc.c:447:
+ ^Ireturn num_possible_cpus() > 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#374: FILE: arch/i386/kernel/tsc.c:447:
+ ^Ireturn num_possible_cpus() > 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: arch/i386/kernel/tsc.c:447:
+ ^Ireturn num_possible_cpus() > 1;$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#379: FILE: arch/i386/kernel/tsc.c:452:
+{
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#388: FILE: arch/i386/kernel/tsc.c:461:
+		clocksource_tsc.mult = clocksource_khz2mult(current_tsc_khz,
+							clocksource_tsc.shift);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#429: FILE: drivers/clocksource/acpi_pm.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#430: FILE: drivers/clocksource/acpi_pm.c:2:
+ * linux/drivers/clocksource/acpi_pm.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#450: FILE: drivers/clocksource/acpi_pm.c:22:
+#include <asm/io.h>

WARNING:TYPO_SPELLING: 'caluclated' may be misspelled - perhaps 'calculated'?
#480: FILE: drivers/clocksource/acpi_pm.c:52:
+	.mult		= 0, /*to be caluclated*/
 	     		             ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#494: FILE: drivers/clocksource/acpi_pm.c:66:
+	clocksource_acpi_pm.mult = clocksource_hz2mult(PMTMR_TICKS_PER_SEC,
+						clocksource_acpi_pm.shift);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'value2 < value1'
#504: FILE: drivers/clocksource/acpi_pm.c:76:
+		if ((value2 < value1) && ((value2) < 0xFFF))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#506: FILE: drivers/clocksource/acpi_pm.c:78:
+		printk(KERN_INFO "PM-Timer had inconsistent results: 0x%#x, 0x%#x - aborting.\n", value1, value2);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#506: FILE: drivers/clocksource/acpi_pm.c:78:
+		printk(KERN_INFO "PM-Timer had inconsistent results: 0x%#x, 0x%#x - aborting.\n", value1, value2);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#509: FILE: drivers/clocksource/acpi_pm.c:81:
+	printk(KERN_INFO "PM-Timer had no reasonable result: 0x%#x - aborting.\n", value1);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#524: FILE: drivers/clocksource/cyclone.c:1:
+#include <linux/clocksource.h>

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#530: FILE: drivers/clocksource/cyclone.c:7:
+#include <asm/pgtable.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#531: FILE: drivers/clocksource/cyclone.c:8:
+#include <asm/io.h>

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#542: FILE: drivers/clocksource/cyclone.c:19:
+int use_cyclone = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:POINTER_LOCATION: "foo* volatile bar" should be "foo * volatile bar"
#564: FILE: drivers/clocksource/cyclone.c:41:
+	u32 __iomem* volatile cyclone_timer;	/* Cyclone MPMC0 register */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#564: FILE: drivers/clocksource/cyclone.c:41:
+	u32 __iomem* volatile cyclone_timer;	/* Cyclone MPMC0 register */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#565: FILE: drivers/clocksource/cyclone.c:42:
+	u32 __iomem* reg;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#572: FILE: drivers/clocksource/cyclone.c:49:
+	printk(KERN_INFO "Summit chipset: Starting Cyclone Counter.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#578: FILE: drivers/clocksource/cyclone.c:55:
+		printk(KERN_ERR "Summit chipset: Could not find valid CBAR register.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#584: FILE: drivers/clocksource/cyclone.c:61:
+		printk(KERN_ERR "Summit chipset: Could not find valid CBAR value.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#593: FILE: drivers/clocksource/cyclone.c:70:
+		printk(KERN_ERR "Summit chipset: Could not find valid PMCC register.\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#596: FILE: drivers/clocksource/cyclone.c:73:
+	writel(0x00000001,reg);
 	                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#603: FILE: drivers/clocksource/cyclone.c:80:
+		printk(KERN_ERR "Summit chipset: Could not find valid MPCS register.\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#606: FILE: drivers/clocksource/cyclone.c:83:
+	writel(0x00000001,reg);
 	                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#613: FILE: drivers/clocksource/cyclone.c:90:
+		printk(KERN_ERR "Summit chipset: Could not find valid MPMC register.\n");

ERROR:SPACING: space required before the open brace '{'
#618: FILE: drivers/clocksource/cyclone.c:95:
+	for (i = 0; i < 3; i++){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#626: FILE: drivers/clocksource/cyclone.c:103:
+			printk(KERN_ERR "Summit chipset: Counter not counting! DISABLED\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#637: FILE: drivers/clocksource/cyclone.c:114:
+	clocksource_cyclone.mult = clocksource_hz2mult(CYCLONE_TIMER_FREQ,
+						clocksource_cyclone.shift);

WARNING:TYPO_SPELLING: 'depricated' may be misspelled - perhaps 'deprecated'?
#654: FILE: kernel/time/clocksource.c:339:
+		printk("Warning: clock=pmtmr is depricated. "
 		                                ^^^^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#654: FILE: kernel/time/clocksource.c:339:
+		printk("Warning: clock=pmtmr is depricated. "

WARNING:SPLIT_STRING: quoted string split across lines
#655: FILE: kernel/time/clocksource.c:340:
+		printk("Warning: clock=pmtmr is depricated. "
+			"Use clocksource=acpi_pm.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#658: FILE: kernel/time/clocksource.c:343:
+	printk("Warning! clock= boot option is deprecated. "

WARNING:SPLIT_STRING: quoted string split across lines
#659: FILE: kernel/time/clocksource.c:344:
+	printk("Warning! clock= boot option is deprecated. "
+		"Use clocksource=xyz\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091531.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 35 warnings, 14 checks, 549 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091531.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
