ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#69: FILE: include/linux/topology.h:139:
+#define SD_ALLNODES_INIT (struct sched_domain) {	\
+	.span			= CPU_MASK_NONE,	\
+	.parent			= NULL,			\
+	.groups			= NULL,			\
+	.min_interval		= 64,			\
+	.max_interval		= 64*num_online_cpus(),	\
+	.busy_factor		= 128,			\
+	.imbalance_pct		= 133,			\
+	.cache_hot_time		= (10*1000000),		\
+	.cache_nice_tries	= 1,			\
+	.busy_idx		= 3,			\
+	.idle_idx		= 3,			\
+	.newidle_idx		= 0, /* unused */	\
+	.wake_idx		= 0, /* unused */	\
+	.forkexec_idx		= 0, /* unused */	\
+	.per_cpu_gain		= 100,			\
+	.flags			= SD_LOAD_BALANCE,	\
+	.last_balance		= jiffies,		\
+	.balance_interval	= 64,			\
+	.nr_balance_failed	= 0,			\
+}

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#74: FILE: include/linux/topology.h:144:
+	.max_interval		= 64*num_online_cpus(),	\
 	             		    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#77: FILE: include/linux/topology.h:147:
+	.cache_hot_time		= (10*1000000),		\
 	               		     ^

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#112: FILE: kernel/sched.c:5140:
+static cpumask_t __devinitdata cpu_isolated_map = CPU_MASK_NONE;

WARNING:MISPLACED_INIT: __devinitdata should be placed after cpu_isolated_map
#112: FILE: kernel/sched.c:5140:
+static cpumask_t __devinitdata cpu_isolated_map = CPU_MASK_NONE;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:LINE_SPACING: Missing a blank line after declarations
#203: FILE: kernel/sched.c:5269:
+		int next_node = find_next_best_node(node, used_nodes);
+		nodemask = node_to_cpumask(next_node);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#279: FILE: kernel/sched.c:5338:
+		if (num_online_cpus()
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#280: FILE: kernel/sched.c:5339:
+				> SD_NODES_PER_DOMAIN*cpus_weight(nodemask)) {
 				                     ^

CHECK:BRACES: Unbalanced braces around else statement
#287: FILE: kernel/sched.c:5346:
+		} else

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sg)...) over kmalloc(sizeof(struct sched_group)...)
#334: FILE: kernel/sched.c:5421:
+		sg = kmalloc(sizeof(struct sched_group), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LINE_SPACING: Missing a blank line after declarations
#338: FILE: kernel/sched.c:5425:
+			struct sched_domain *sd;
+			sd = &per_cpu(node_domains, j);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sd->groups"
#340: FILE: kernel/sched.c:5427:
+			if (sd->groups == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#346: FILE: kernel/sched.c:5433:
+			printk(KERN_WARNING

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sg)...) over kmalloc(sizeof(struct sched_group)...)
#370: FILE: kernel/sched.c:5457:
+			sg = kmalloc(sizeof(struct sched_group), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#372: FILE: kernel/sched.c:5459:
+				printk(KERN_WARNING

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#372: FILE: kernel/sched.c:5459:
+			if (!sg) {
+				printk(KERN_WARNING

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#398: FILE: kernel/sched.c:5492:
+				(cpus_weight(sd->groups->cpumask)-1) / 10;
 				                                 ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sg"
#409: FILE: kernel/sched.c:5503:
+		if (sg == NULL)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#425: FILE: kernel/sched.c:5519:
+				(cpus_weight(sd->groups->cpumask)-1) / 10;
 				                                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#461: FILE: kernel/sched.c:5561:
+	int i;
+	for (i = 0; i < MAX_NUMNODES; i++) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sg"
#470: FILE: kernel/sched.c:5569:
+		if (sg == NULL)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000154962.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 8 warnings, 12 checks, 465 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000154962.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
