WARNING:TYPO_SPELLING: 'alot' may be misspelled - perhaps 'a lot'?
#44: 
Basically it configs in the NEWTOD code and cuts alot of code out of the
                                                 ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#68: 
--- a/arch/i386/Kconfig	2005-03-11 17:02:30 -08:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:SPACING: No space is necessary after a cast
#195: FILE: arch/i386/kernel/time.c:371:
+			>= USEC_AFTER - ((unsigned) TICK_SIZE) / 2 &&

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#195: FILE: arch/i386/kernel/time.c:371:
+			>= USEC_AFTER - ((unsigned) TICK_SIZE) / 2 &&

CHECK:SPACING: No space is necessary after a cast
#197: FILE: arch/i386/kernel/time.c:373:
+			<= USEC_BEFORE + ((unsigned) TICK_SIZE) / 2) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#197: FILE: arch/i386/kernel/time.c:373:
+			<= USEC_BEFORE + ((unsigned) TICK_SIZE) / 2) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#199: FILE: arch/i386/kernel/time.c:375:
+		if (efi_enabled) {
[...]
+		} else if (set_rtc_mmss(ts.tv_sec) == 0)
[...]
+		else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: arch/i386/kernel/time.c:376:
+^I ^I^Iif (efi_set_rtc_mmss(ts.tv_sec) == 0)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#200: FILE: arch/i386/kernel/time.c:376:
+^I ^I^Iif (efi_set_rtc_mmss(ts.tv_sec) == 0)$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#211: FILE: arch/i386/kernel/time.c:387:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#299: FILE: arch/i386/lib/delay.c:39:
+	int d0;
+	__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#299: FILE: arch/i386/lib/delay.c:39:
+	__asm__ __volatile__(

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#305: FILE: arch/i386/lib/delay.c:45:
+		:"=&a" (d0)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#306: FILE: arch/i386/lib/delay.c:46:
+		:"0" (loops));
 		^

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: arch/ia64/kernel/time.c:265:
+        struct timespec ts;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: arch/ia64/kernel/time.c:265:
+        struct timespec ts;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: arch/ia64/kernel/time.c:266:
+        efi_gettimeofday(&ts);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#462: FILE: arch/ia64/kernel/time.c:266:
+        struct timespec ts;
+        efi_gettimeofday(&ts);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: arch/ia64/kernel/time.c:266:
+        efi_gettimeofday(&ts);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: arch/ia64/kernel/time.c:267:
+        return (nsec_t)(ts.tv_sec * NSEC_PER_SEC + ts.tv_nsec);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: arch/ia64/kernel/time.c:267:
+        return (nsec_t)(ts.tv_sec * NSEC_PER_SEC + ts.tv_nsec);$

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#525: FILE: arch/ppc/kernel/time.c:104:
+		return (nsec_t)ppc_md.get_rtc_time() * NSEC_PER_SEC;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#526: FILE: arch/ppc/kernel/time.c:105:
+		printk(KERN_ERR "ppc_md.get_rtc_time does not exist???\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#549: FILE: arch/ppc/kernel/time.c:128:
+	if ( ppc_md.set_rtc_time && ts.tv_sec - last_rtc_update >= 659 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: arch/ppc/kernel/time.c:129:
+	if ( ppc_md.set_rtc_time && ts.tv_sec - last_rtc_update >= 659 &&
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#550: FILE: arch/ppc/kernel/time.c:129:
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {
 		               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#550: FILE: arch/ppc/kernel/time.c:129:
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {
 		                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#550: FILE: arch/ppc/kernel/time.c:129:
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {
 		                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#550: FILE: arch/ppc/kernel/time.c:129:
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {
 		                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#552: FILE: arch/ppc/kernel/time.c:131:
+			last_rtc_update = ts.tv_sec+1;
 			                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#671: FILE: arch/ppc64/kernel/time.c:156:
+	sec = mktime(tm.tm_year + 1900, tm.tm_mon + 1, tm.tm_mday,
+			      tm.tm_hour, tm.tm_min, tm.tm_sec);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#674: FILE: arch/ppc64/kernel/time.c:159:
+}
+void sync_persistent_clock(struct timespec ts)

ERROR:SPACING: space prohibited after that open parenthesis '('
#692: FILE: arch/ppc64/kernel/time.c:177:
+	if ( ts.tv_sec - last_rtc_update >= 659 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#693: FILE: arch/ppc64/kernel/time.c:178:
+	if ( ts.tv_sec - last_rtc_update >= 659 &&
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#693: FILE: arch/ppc64/kernel/time.c:178:
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {
 		               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#693: FILE: arch/ppc64/kernel/time.c:178:
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {
 		                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#693: FILE: arch/ppc64/kernel/time.c:178:
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {
 		                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#693: FILE: arch/ppc64/kernel/time.c:178:
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {
 		                                                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#695: FILE: arch/ppc64/kernel/time.c:180:
+		struct rtc_time tm;
+		to_tm(ts.tv_sec+1, &tm);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#695: FILE: arch/ppc64/kernel/time.c:180:
+		to_tm(ts.tv_sec+1, &tm);
 		               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#699: FILE: arch/ppc64/kernel/time.c:184:
+			last_rtc_update = ts.tv_sec+1;
 			                           ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#744: FILE: arch/ppc64/kernel/time.c:453:
 }
+#ifndef CONFIG_NEWTOD

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#886: FILE: arch/x86_64/kernel/time.c:581:
+	static unsigned long rtc_update = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#896: FILE: arch/x86_64/kernel/time.c:591:
+	if (ts.tv_sec > rtc_update &&
+		abs(ts.tv_nsec - 500000000) <= tick_nsec / 2) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#960: FILE: include/asm-generic/div64.h:59:
+#define div_long_long_rem(dividend,divisor,remainder) \
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#960: FILE: include/asm-generic/div64.h:59:
+#define div_long_long_rem(dividend,divisor,remainder) \
                                           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'remainder' may be better as '(remainder)' to avoid precedence issues
#960: FILE: include/asm-generic/div64.h:59:
+#define div_long_long_rem(dividend,divisor,remainder) \
+({							\
+	u64 result = dividend;				\
+	*remainder = do_div(result,divisor);		\
+	result;						\
+})

ERROR:SPACING: space required after that ',' (ctx:VxV)
#963: FILE: include/asm-generic/div64.h:62:
+	*remainder = do_div(result,divisor);		\
 	                          ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000199728.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 12 warnings, 23 checks, 776 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000199728.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
