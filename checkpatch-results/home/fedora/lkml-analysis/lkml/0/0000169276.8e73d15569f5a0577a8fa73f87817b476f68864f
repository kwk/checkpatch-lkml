WARNING:TYPO_SPELLING: 'notifcation' may be misspelled - perhaps 'notification'?
#30: 
Add fsnotify as infrastructure for various fs notifcation schemes.
                                              ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type == READ'
#128: FILE: fs/compat.c:1310:
+	if ((ret + (type == READ)) > 0) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LINE_SPACING: Missing a blank line after declarations
#130: FILE: fs/compat.c:1312:
+		struct dentry *dentry = file->f_dentry;
+		if (type == READ)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#264: FILE: fs/namei.c:2221:
+		const char *new_name = old_dentry->d_name.name;
+		fsnotify_move(old_dir, new_dir, old_name, new_name, is_dir);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type == READ'
#361: FILE: fs/read_write.c:542:
+	if ((ret + (type == READ)) > 0) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#443: FILE: include/linux/fsnotify.h:1:
+#ifndef _LINUX_FS_NOTIFY_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#447: FILE: include/linux/fsnotify.h:5:
+ * include/linux/fsnotify.h - generic hooks for filesystem notification, to

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#570: FILE: include/linux/dnotify.h:37:
+static inline void dnotify_move(struct inode *old_dir, struct inode *new_dir,
+				 const char *old_name, const char *new_name,

CHECK:BRACES: braces {} should be used on all arms of this statement
#573: FILE: include/linux/dnotify.h:40:
+	if (old_dir == new_dir)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#575: FILE: include/linux/dnotify.h:42:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#587: FILE: include/linux/dnotify.h:54:
+static inline void dnotify_rmdir(struct dentry *dentry, struct inode *inode,
+				  struct inode *dir)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#638: FILE: include/linux/dnotify.h:105:
+static inline void dnotify_move(struct inode *old_dir, struct inode *new_dir,
+				 const char *old_name, const char *new_name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#648: FILE: include/linux/dnotify.h:115:
+static inline void dnotify_rmdir(struct dentry *dentry, struct inode *inode,
+				  struct inode *dir)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000169276.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 5 warnings, 8 checks, 545 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000169276.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
