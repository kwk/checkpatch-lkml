WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#15: 
Subject: [PATCH-RFC] arch/i386/kernel/: kill some sparse warnings

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'cheched' may be misspelled - perhaps 'checked'?
#32: 
sparse. I've cheched the generated code and with -O2 the code does not
             ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'implmentation' may be misspelled - perhaps 'implementation'?
#39: 
implmentation - they were undefined per definition.
^^^^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#60: FILE: arch/i386/kernel/ioport.c:132:
+	volatile struct pt_regs * regs = (struct pt_regs *) RELOC_HIDE(&unused, 0);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#60: FILE: arch/i386/kernel/ioport.c:132:
+	volatile struct pt_regs * regs = (struct pt_regs *) RELOC_HIDE(&unused, 0);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#60: FILE: arch/i386/kernel/ioport.c:132:
+	volatile struct pt_regs * regs = (struct pt_regs *) RELOC_HIDE(&unused, 0);

CHECK:SPACING: No space is necessary after a cast
#72: FILE: arch/i386/kernel/signal.c:123:
+	struct pt_regs *regs = (struct pt_regs *) RELOC_HIDE(&ebx, 0);

WARNING:TABSTOP: Statements should start on a tabstop
#80: FILE: arch/i386/kernel/signal.c:157:
+	  unsigned int tmp2;						\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: arch/i386/kernel/signal.c:160:
+	  loadsegment(seg,tmp2); }
 	                 ^

CHECK:SPACING: No space is necessary after a cast
#93: FILE: arch/i386/kernel/signal.c:213:
+	struct pt_regs *regs = (struct pt_regs *) RELOC_HIDE(&__unused, 0);

CHECK:SPACING: No space is necessary after a cast
#102: FILE: arch/i386/kernel/signal.c:243:
+	struct pt_regs *regs = (struct pt_regs *) RELOC_HIDE(&__unused, 0);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214898.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 5 warnings, 4 checks, 43 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214898.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
