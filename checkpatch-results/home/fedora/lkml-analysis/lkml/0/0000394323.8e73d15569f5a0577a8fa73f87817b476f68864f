WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#73: 
--- linux-2.5.60~ext2_ext3_listxattr-bug/fs/ext2/acl.c	2003-02-11 12:30:30.000000000 +0100

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#361: FILE: fs/ext3/xattr.h:76:
+extern int ext3_xattr_set(struct inode *, int, const char *, const void *, size_t, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#361: FILE: fs/ext3/xattr.h:76:
+extern int ext3_xattr_set(struct inode *, int, const char *, const void *, size_t, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#361: FILE: fs/ext3/xattr.h:76:
+extern int ext3_xattr_set(struct inode *, int, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#361: FILE: fs/ext3/xattr.h:76:
+extern int ext3_xattr_set(struct inode *, int, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void *' should also have an identifier name
#361: FILE: fs/ext3/xattr.h:76:
+extern int ext3_xattr_set(struct inode *, int, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#361: FILE: fs/ext3/xattr.h:76:
+extern int ext3_xattr_set(struct inode *, int, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#361: FILE: fs/ext3/xattr.h:76:
+extern int ext3_xattr_set(struct inode *, int, const char *, const void *, size_t, int);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#362: FILE: fs/ext3/xattr.h:77:
+extern int ext3_xattr_set_handle(handle_t *, struct inode *, int, const char *, const void *, size_t, int);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#362: FILE: fs/ext3/xattr.h:77:
+extern int ext3_xattr_set_handle(handle_t *, struct inode *, int, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'handle_t *' should also have an identifier name
#362: FILE: fs/ext3/xattr.h:77:
+extern int ext3_xattr_set_handle(handle_t *, struct inode *, int, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#362: FILE: fs/ext3/xattr.h:77:
+extern int ext3_xattr_set_handle(handle_t *, struct inode *, int, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#362: FILE: fs/ext3/xattr.h:77:
+extern int ext3_xattr_set_handle(handle_t *, struct inode *, int, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#362: FILE: fs/ext3/xattr.h:77:
+extern int ext3_xattr_set_handle(handle_t *, struct inode *, int, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void *' should also have an identifier name
#362: FILE: fs/ext3/xattr.h:77:
+extern int ext3_xattr_set_handle(handle_t *, struct inode *, int, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#362: FILE: fs/ext3/xattr.h:77:
+extern int ext3_xattr_set_handle(handle_t *, struct inode *, int, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#362: FILE: fs/ext3/xattr.h:77:
+extern int ext3_xattr_set_handle(handle_t *, struct inode *, int, const char *, const void *, size_t, int);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#379: FILE: fs/ext3/xattr.h:113:
+ext3_xattr_set_handle(handle_t *handle, struct inode *inode, int name_index,
 	       const char *name, const void *value, size_t size, int flags)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#514: FILE: fs/ext2/xattr_trusted.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#515: FILE: fs/ext2/xattr_trusted.c:2:
+ * linux/fs/ext2/xattr_trusted.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#534: FILE: fs/ext2/xattr_trusted.c:21:
+	const int prefix_len = sizeof(XATTR_TRUSTED_PREFIX)-1;
 	                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#541: FILE: fs/ext2/xattr_trusted.c:28:
+		memcpy(list+prefix_len, name, name_len);
 		           ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#663: FILE: fs/ext3/xattr_trusted.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#664: FILE: fs/ext3/xattr_trusted.c:2:
+ * linux/fs/ext3/xattr_trusted.c

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#684: FILE: fs/ext3/xattr_trusted.c:22:
+	const int prefix_len = sizeof(XATTR_TRUSTED_PREFIX)-1;
 	                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#691: FILE: fs/ext3/xattr_trusted.c:29:
+		memcpy(list+prefix_len, name, name_len);
 		           ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1075: FILE: fs/ext2/xattr.h:71:
+extern ssize_t ext2_getxattr(struct dentry *, const char *, void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1075: FILE: fs/ext2/xattr.h:71:
+extern ssize_t ext2_getxattr(struct dentry *, const char *, void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1075: FILE: fs/ext2/xattr.h:71:
+extern ssize_t ext2_getxattr(struct dentry *, const char *, void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1075: FILE: fs/ext2/xattr.h:71:
+extern ssize_t ext2_getxattr(struct dentry *, const char *, void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1075: FILE: fs/ext2/xattr.h:71:
+extern ssize_t ext2_getxattr(struct dentry *, const char *, void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1075: FILE: fs/ext2/xattr.h:71:
+extern ssize_t ext2_getxattr(struct dentry *, const char *, void *, size_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1076: FILE: fs/ext2/xattr.h:72:
+extern ssize_t ext2_listxattr(struct dentry *, char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1076: FILE: fs/ext2/xattr.h:72:
+extern ssize_t ext2_listxattr(struct dentry *, char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1076: FILE: fs/ext2/xattr.h:72:
+extern ssize_t ext2_listxattr(struct dentry *, char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1076: FILE: fs/ext2/xattr.h:72:
+extern ssize_t ext2_listxattr(struct dentry *, char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1076: FILE: fs/ext2/xattr.h:72:
+extern ssize_t ext2_listxattr(struct dentry *, char *, size_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1077: FILE: fs/ext2/xattr.h:73:
+extern int ext2_removexattr(struct dentry *, const char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1077: FILE: fs/ext2/xattr.h:73:
+extern int ext2_removexattr(struct dentry *, const char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1077: FILE: fs/ext2/xattr.h:73:
+extern int ext2_removexattr(struct dentry *, const char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1077: FILE: fs/ext2/xattr.h:73:
+extern int ext2_removexattr(struct dentry *, const char *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1081: FILE: fs/ext2/xattr.h:76:
+extern int ext2_xattr_list(struct inode *, char *, size_t, int flags);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1081: FILE: fs/ext2/xattr.h:76:
+extern int ext2_xattr_list(struct inode *, char *, size_t, int flags);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1081: FILE: fs/ext2/xattr.h:76:
+extern int ext2_xattr_list(struct inode *, char *, size_t, int flags);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1081: FILE: fs/ext2/xattr.h:76:
+extern int ext2_xattr_list(struct inode *, char *, size_t, int flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1256: FILE: fs/ext3/xattr.h:70:
+extern ssize_t ext3_getxattr(struct dentry *, const char *, void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1256: FILE: fs/ext3/xattr.h:70:
+extern ssize_t ext3_getxattr(struct dentry *, const char *, void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1256: FILE: fs/ext3/xattr.h:70:
+extern ssize_t ext3_getxattr(struct dentry *, const char *, void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1256: FILE: fs/ext3/xattr.h:70:
+extern ssize_t ext3_getxattr(struct dentry *, const char *, void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1256: FILE: fs/ext3/xattr.h:70:
+extern ssize_t ext3_getxattr(struct dentry *, const char *, void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1256: FILE: fs/ext3/xattr.h:70:
+extern ssize_t ext3_getxattr(struct dentry *, const char *, void *, size_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1257: FILE: fs/ext3/xattr.h:71:
+extern ssize_t ext3_listxattr(struct dentry *, char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1257: FILE: fs/ext3/xattr.h:71:
+extern ssize_t ext3_listxattr(struct dentry *, char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1257: FILE: fs/ext3/xattr.h:71:
+extern ssize_t ext3_listxattr(struct dentry *, char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1257: FILE: fs/ext3/xattr.h:71:
+extern ssize_t ext3_listxattr(struct dentry *, char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1257: FILE: fs/ext3/xattr.h:71:
+extern ssize_t ext3_listxattr(struct dentry *, char *, size_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1258: FILE: fs/ext3/xattr.h:72:
+extern int ext3_removexattr(struct dentry *, const char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1258: FILE: fs/ext3/xattr.h:72:
+extern int ext3_removexattr(struct dentry *, const char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1258: FILE: fs/ext3/xattr.h:72:
+extern int ext3_removexattr(struct dentry *, const char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1258: FILE: fs/ext3/xattr.h:72:
+extern int ext3_removexattr(struct dentry *, const char *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1262: FILE: fs/ext3/xattr.h:75:
+extern int ext3_xattr_list(struct inode *, char *, size_t, int flags);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1262: FILE: fs/ext3/xattr.h:75:
+extern int ext3_xattr_list(struct inode *, char *, size_t, int flags);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1262: FILE: fs/ext3/xattr.h:75:
+extern int ext3_xattr_list(struct inode *, char *, size_t, int flags);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1262: FILE: fs/ext3/xattr.h:75:
+extern int ext3_xattr_list(struct inode *, char *, size_t, int flags);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1327: FILE: include/linux/fs.h:746:
+	ssize_t (*getxattr) (struct dentry *, const char *, void *, size_t,int);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1327: FILE: include/linux/fs.h:746:
+	ssize_t (*getxattr) (struct dentry *, const char *, void *, size_t,int);
 	                                                                  ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1327: FILE: include/linux/fs.h:746:
+	ssize_t (*getxattr) (struct dentry *, const char *, void *, size_t,int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1327: FILE: include/linux/fs.h:746:
+	ssize_t (*getxattr) (struct dentry *, const char *, void *, size_t,int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1327: FILE: include/linux/fs.h:746:
+	ssize_t (*getxattr) (struct dentry *, const char *, void *, size_t,int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1327: FILE: include/linux/fs.h:746:
+	ssize_t (*getxattr) (struct dentry *, const char *, void *, size_t,int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1327: FILE: include/linux/fs.h:746:
+	ssize_t (*getxattr) (struct dentry *, const char *, void *, size_t,int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1328: FILE: include/linux/fs.h:747:
+	ssize_t (*listxattr) (struct dentry *, char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1328: FILE: include/linux/fs.h:747:
+	ssize_t (*listxattr) (struct dentry *, char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1328: FILE: include/linux/fs.h:747:
+	ssize_t (*listxattr) (struct dentry *, char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1328: FILE: include/linux/fs.h:747:
+	ssize_t (*listxattr) (struct dentry *, char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1328: FILE: include/linux/fs.h:747:
+	ssize_t (*listxattr) (struct dentry *, char *, size_t, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1329: FILE: include/linux/fs.h:748:
+	int (*removexattr) (struct dentry *, const char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1329: FILE: include/linux/fs.h:748:
+	int (*removexattr) (struct dentry *, const char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1329: FILE: include/linux/fs.h:748:
+	int (*removexattr) (struct dentry *, const char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1329: FILE: include/linux/fs.h:748:
+	int (*removexattr) (struct dentry *, const char *, int);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1347: FILE: fs/jfs/xattr.c:970:
+ssize_t jfs_listxattr(struct dentry * dentry, char *data, size_t buf_size,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1371: FILE: fs/jfs/jfs_xattr.h:60:
+extern ssize_t jfs_getxattr(struct dentry *, const char *, void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1371: FILE: fs/jfs/jfs_xattr.h:60:
+extern ssize_t jfs_getxattr(struct dentry *, const char *, void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1371: FILE: fs/jfs/jfs_xattr.h:60:
+extern ssize_t jfs_getxattr(struct dentry *, const char *, void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1371: FILE: fs/jfs/jfs_xattr.h:60:
+extern ssize_t jfs_getxattr(struct dentry *, const char *, void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1371: FILE: fs/jfs/jfs_xattr.h:60:
+extern ssize_t jfs_getxattr(struct dentry *, const char *, void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1371: FILE: fs/jfs/jfs_xattr.h:60:
+extern ssize_t jfs_getxattr(struct dentry *, const char *, void *, size_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1372: FILE: fs/jfs/jfs_xattr.h:61:
+extern ssize_t jfs_listxattr(struct dentry *, char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1372: FILE: fs/jfs/jfs_xattr.h:61:
+extern ssize_t jfs_listxattr(struct dentry *, char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1372: FILE: fs/jfs/jfs_xattr.h:61:
+extern ssize_t jfs_listxattr(struct dentry *, char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1372: FILE: fs/jfs/jfs_xattr.h:61:
+extern ssize_t jfs_listxattr(struct dentry *, char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1372: FILE: fs/jfs/jfs_xattr.h:61:
+extern ssize_t jfs_listxattr(struct dentry *, char *, size_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1373: FILE: fs/jfs/jfs_xattr.h:62:
+extern int jfs_removexattr(struct dentry *, const char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1373: FILE: fs/jfs/jfs_xattr.h:62:
+extern int jfs_removexattr(struct dentry *, const char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1373: FILE: fs/jfs/jfs_xattr.h:62:
+extern int jfs_removexattr(struct dentry *, const char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1373: FILE: fs/jfs/jfs_xattr.h:62:
+extern int jfs_removexattr(struct dentry *, const char *, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000394323.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 76 warnings, 18 checks, 1099 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000394323.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
