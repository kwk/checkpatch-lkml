WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#82: FILE: drivers/i2c/busses/i2c-mpc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: drivers/i2c/busses/i2c-mpc.c:4:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: drivers/i2c/busses/i2c-mpc.c:7:
+ * the same I2C unit (8240, 8245, 85xx). $

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#103: FILE: drivers/i2c/busses/i2c-mpc.c:22:
+#include <asm/io.h>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#109: FILE: drivers/i2c/busses/i2c-mpc.c:28:
+#define MPC_I2C_FDR ^I0x04$

WARNING:INLINE: plain inline is preferred over __inline__
#139: FILE: drivers/i2c/busses/i2c-mpc.c:58:
+static __inline__ void writeccr(struct mpc_i2c *i2c, u32 x)

WARNING:LINE_SPACING: Missing a blank line after declarations
#147: FILE: drivers/i2c/busses/i2c-mpc.c:66:
+	struct mpc_i2c *i2c = dev_id;
+	if (readb(i2c->base + MPC_I2C_SR) & CSR_MIF) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#156: FILE: drivers/i2c/busses/i2c-mpc.c:75:
+static int i2c_wait(struct mpc_i2c *i2c, unsigned timeout, int writing)

CHECK:BRACES: braces {} should be used on all arms of this statement
#222: FILE: drivers/i2c/busses/i2c-mpc.c:141:
+	if (i2c_data && (i2c_data->flags & FS_I2C_SEPARATE_DFSRR)) {
[...]
+	} else if (i2c_data && (i2c_data->flags & FS_I2C_CLOCK_5200))
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#245: FILE: drivers/i2c/busses/i2c-mpc.c:164:
+		     const u8 * data, int length, int restart)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#248: FILE: drivers/i2c/busses/i2c-mpc.c:167:
+	unsigned timeout = HZ;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#274: FILE: drivers/i2c/busses/i2c-mpc.c:193:
+		    u8 * data, int length, int restart)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#276: FILE: drivers/i2c/busses/i2c-mpc.c:195:
+	unsigned timeout = HZ;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#377: FILE: drivers/i2c/busses/i2c-mpc.c:296:
+static int __devinit mpc_i2c_probe(struct ocp_device *ocp)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#382: FILE: drivers/i2c/busses/i2c-mpc.c:301:
+	if (!(i2c = kmalloc(sizeof(*i2c), GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#382: FILE: drivers/i2c/busses/i2c-mpc.c:301:
+	if (!(i2c = kmalloc(sizeof(*i2c), GFP_KERNEL))) {
+		return -ENOMEM;
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#389: FILE: drivers/i2c/busses/i2c-mpc.c:308:
+		printk(KERN_ERR "i2c-mpc - resource unavailable\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#396: FILE: drivers/i2c/busses/i2c-mpc.c:315:
+		printk(KERN_ERR "i2c-mpc - failed to map controller\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#402: FILE: drivers/i2c/busses/i2c-mpc.c:321:
+		if ((result = request_irq(ocp->def->irq, mpc_i2c_isr,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#404: FILE: drivers/i2c/busses/i2c-mpc.c:323:
+			printk(KERN_ERR

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#411: FILE: drivers/i2c/busses/i2c-mpc.c:330:
+	if ((result = i2c_add_adapter(&i2c->adap)) < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#412: FILE: drivers/i2c/busses/i2c-mpc.c:331:
+		printk(KERN_ERR "i2c-mpc - failed to add adapter\n");

WARNING:INDENTED_LABEL: labels should not be indented
#420: FILE: drivers/i2c/busses/i2c-mpc.c:339:
+      fail_add:

WARNING:INDENTED_LABEL: labels should not be indented
#423: FILE: drivers/i2c/busses/i2c-mpc.c:342:
+      fail_irq:

WARNING:INDENTED_LABEL: labels should not be indented
#425: FILE: drivers/i2c/busses/i2c-mpc.c:344:
+      fail_map:

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#430: FILE: drivers/i2c/busses/i2c-mpc.c:349:
+}
+static void __devexit mpc_i2c_remove(struct ocp_device *ocp)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#430: FILE: drivers/i2c/busses/i2c-mpc.c:349:
+static void __devexit mpc_i2c_remove(struct ocp_device *ocp)

WARNING:LINE_SPACING: Missing a blank line after declarations
#433: FILE: drivers/i2c/busses/i2c-mpc.c:352:
+	struct mpc_i2c *i2c = ocp_get_drvdata(ocp);
+	ocp_set_drvdata(ocp, NULL);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#443: FILE: drivers/i2c/busses/i2c-mpc.c:362:
+static struct ocp_device_id mpc_iic_ids[] __devinitdata = {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: drivers/i2c/busses/i2c-mpc.c:363:
+	{.vendor = OCP_VENDOR_FREESCALE,.function = OCP_FUNC_IIC},
 	                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: drivers/i2c/busses/i2c-mpc.c:391:
+    ("I2C-Bus adapter for MPC107 bridge and MPC824x/85xx/52xx processors");$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257473.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 21 warnings, 2 checks, 423 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257473.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
