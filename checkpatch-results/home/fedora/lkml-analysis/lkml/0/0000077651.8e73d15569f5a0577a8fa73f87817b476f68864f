WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
[Sorry if this is a duplicate. I tried sending this mail two days back and I don't

ERROR:SPACING: space prohibited before that close parenthesis ')'
#55: FILE: arch/i386/kernel/cpu/intel.c:125:
+	if (c->cpuid_level > 9 ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#56: FILE: arch/i386/kernel/cpu/intel.c:126:
+		unsigned eax = cpuid_eax(10);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#58: FILE: arch/i386/kernel/cpu/intel.c:128:
+		if ((eax & 0xff) && (((eax>>8) & 0xff) > 1))
 		                          ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#111: FILE: arch/i386/kernel/nmi.c:464:
+	unsigned ebx;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#126: FILE: arch/i386/kernel/nmi.c:479:
+	unsigned ebx;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: arch/i386/kernel/nmi.c:626:
+^I^Ielse if (nmi_perfctr_msr == MSR_P6_PERFCTR0 || $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#176: FILE: arch/i386/kernel/nmi.c:626:
 		}
+		else if (nmi_perfctr_msr == MSR_P6_PERFCTR0 || 

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: arch/i386/kernel/nmi.c:627:
+^I^I         nmi_perfctr_msr == MSR_ARCH_PERFMON_PERFCTR0) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#238: FILE: arch/x86_64/kernel/nmi.c:391:
+	unsigned ebx;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#253: FILE: arch/x86_64/kernel/nmi.c:406:
+	unsigned ebx;

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: arch/x86_64/kernel/nmi.c:583:
+ ^I^I} else if (nmi_perfctr_msr == MSR_ARCH_PERFMON_PERFCTR0) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#311: FILE: arch/x86_64/kernel/nmi.c:583:
+ ^I^I} else if (nmi_perfctr_msr == MSR_ARCH_PERFMON_PERFCTR0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: arch/x86_64/kernel/nmi.c:583:
+ ^I^I} else if (nmi_perfctr_msr == MSR_ARCH_PERFMON_PERFCTR0) {$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#329: FILE: arch/x86_64/kernel/setup.c:1068:
+	if (c->cpuid_level > 9 ) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#330: FILE: arch/x86_64/kernel/setup.c:1069:
+		unsigned eax = cpuid_eax(10);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#332: FILE: arch/x86_64/kernel/setup.c:1071:
+		if ((eax & 0xff) && (((eax>>8) & 0xff) > 1))
 		                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#346: FILE: include/asm-i386/cpufeature.h:75:
+#define X86_FEATURE_ARCH_PERFMON (3*32+11) /* Intel Architectural PerfMon */
                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#346: FILE: include/asm-i386/cpufeature.h:75:
+#define X86_FEATURE_ARCH_PERFMON (3*32+11) /* Intel Architectural PerfMon */
                                       ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#354: FILE: include/asm-i386/intel_arch_perfmon.h:1:
+#ifndef X86_INTEL_ARCH_PERFMON_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BIT_MACRO: Prefer using the BIT macro
#363: FILE: include/asm-i386/intel_arch_perfmon.h:10:
+#define ARCH_PERFMON_EVENTSEL0_ENABLE      (1 << 22)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#364: FILE: include/asm-i386/intel_arch_perfmon.h:11:
+#define ARCH_PERFMON_EVENTSEL_INT          (1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#365: FILE: include/asm-i386/intel_arch_perfmon.h:12:
+#define ARCH_PERFMON_EVENTSEL_OS           (1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#366: FILE: include/asm-i386/intel_arch_perfmon.h:13:
+#define ARCH_PERFMON_EVENTSEL_USR          (1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#370: FILE: include/asm-i386/intel_arch_perfmon.h:17:
+#define ARCH_PERFMON_UNHALTED_CORE_CYCLES_PRESENT (1 << 0)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#380: FILE: include/asm-x86_64/cpufeature.h:68:
+#define X86_FEATURE_ARCH_PERFMON (3*32+8) /* Intel Architectural PerfMon */
                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#380: FILE: include/asm-x86_64/cpufeature.h:68:
+#define X86_FEATURE_ARCH_PERFMON (3*32+8) /* Intel Architectural PerfMon */
                                       ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#388: FILE: include/asm-x86_64/intel_arch_perfmon.h:1:
+#ifndef X86_64_INTEL_ARCH_PERFMON_H

CHECK:BIT_MACRO: Prefer using the BIT macro
#397: FILE: include/asm-x86_64/intel_arch_perfmon.h:10:
+#define ARCH_PERFMON_EVENTSEL0_ENABLE      (1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#398: FILE: include/asm-x86_64/intel_arch_perfmon.h:11:
+#define ARCH_PERFMON_EVENTSEL_INT          (1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#399: FILE: include/asm-x86_64/intel_arch_perfmon.h:12:
+#define ARCH_PERFMON_EVENTSEL_OS           (1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#400: FILE: include/asm-x86_64/intel_arch_perfmon.h:13:
+#define ARCH_PERFMON_EVENTSEL_USR          (1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#404: FILE: include/asm-x86_64/intel_arch_perfmon.h:17:
+#define ARCH_PERFMON_UNHALTED_CORE_CYCLES_PRESENT (1 << 0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000077651.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 11 warnings, 16 checks, 314 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000077651.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
