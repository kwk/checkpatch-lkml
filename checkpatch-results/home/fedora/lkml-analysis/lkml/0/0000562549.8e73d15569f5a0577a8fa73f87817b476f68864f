ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: fs/exec.c:153:
+        dput(dentry);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: fs/exec.c:153:
+        dput(dentry);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: fs/exec.c:374:
+        dput(file.f_dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: fs/exec.c:374:
+        dput(file.f_dentry);$

CHECK:BRACES: braces {} should be used on all arms of this statement
#121: FILE: fs/file_table.c:128:
+	if (filp->f_op->open) {
[...]
+        } else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#122: FILE: fs/file_table.c:129:
+		err = filp->f_op->open(dentry->d_inode, filp);
 		                                        ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: fs/file_table.c:130:
+                if (err)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: fs/file_table.c:130:
+                if (err)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#123: FILE: fs/file_table.c:130:
+                if (err)
+                    dput(dentry);

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: fs/file_table.c:131:
+                    dput(dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: fs/file_table.c:131:
+                    dput(dentry);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: fs/file_table.c:133:
+        } else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: fs/file_table.c:133:
+        } else$

CHECK:BRACES: Unbalanced braces around else statement
#126: FILE: fs/file_table.c:133:
+        } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: fs/nfsd/nfsfh.c:399:
+        dput(file.f_dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: fs/nfsd/nfsfh.c:399:
+        dput(file.f_dentry);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: mm/mmap.c:324:
+                if (vma->vm_file == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: mm/mmap.c:324:
+                if (vma->vm_file == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#150: FILE: mm/mmap.c:324:
+                if (vma->vm_file == NULL) {
[...]
+                    vma->vm_file = file;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vma->vm_file"
#150: FILE: mm/mmap.c:324:
+                if (vma->vm_file == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: mm/mmap.c:325:
+                    /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: mm/mmap.c:326:
+                     * underlying FS may have attached it differently--only$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: mm/mmap.c:327:
+                     * attach it if they didn't.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: mm/mmap.c:328:
+                     */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: mm/mmap.c:329:
+                    vma->vm_file = file;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: mm/mmap.c:329:
+                    vma->vm_file = file;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: mm/mmap.c:330:
+                    file->f_count++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: mm/mmap.c:330:
+                    file->f_count++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: mm/mmap.c:331:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: mm/mmap.c:331:
+                }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000562549.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 13 warnings, 3 checks, 74 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000562549.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
