WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
their own files instead of being buried (almost hidden) in readme/txt files.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#52: FILE: Documentation/mtrr-add.c:1:
+/*  mtrr-add.c

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#53: FILE: Documentation/mtrr-add.c:2:
+/*  mtrr-add.c
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#69: FILE: Documentation/mtrr-add.c:18:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#70: FILE: Documentation/mtrr-add.c:19:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#78: FILE: Documentation/mtrr-add.c:27:
+/*
+    This programme will use an ioctl() on /proc/mtrr to add an entry. The first

CHECK:LINE_SPACING: Please don't use multiple blank lines
#81: FILE: Documentation/mtrr-add.c:30:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#86: FILE: Documentation/mtrr-add.c:35:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#101: FILE: Documentation/mtrr-add.c:50:
+#define ERRSTRING strerror (errno)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#101: FILE: Documentation/mtrr-add.c:50:
+#define ERRSTRING strerror (errno)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#104: FILE: Documentation/mtrr-add.c:53:
+static char *mtrr_strings[MTRR_NUM_TYPES] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: Documentation/mtrr-add.c:54:
+    "uncachable",               /* 0 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: Documentation/mtrr-add.c:55:
+    "write-combining",          /* 1 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: Documentation/mtrr-add.c:56:
+    "?",                        /* 2 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: Documentation/mtrr-add.c:57:
+    "?",                        /* 3 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: Documentation/mtrr-add.c:58:
+    "write-through",            /* 4 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: Documentation/mtrr-add.c:59:
+    "write-protect",            /* 5 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: Documentation/mtrr-add.c:60:
+    "write-back",               /* 6 */$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#114: FILE: Documentation/mtrr-add.c:63:
+int main (int argc, char **argv)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: Documentation/mtrr-add.c:65:
+    int fd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: Documentation/mtrr-add.c:66:
+    struct mtrr_sentry sentry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: Documentation/mtrr-add.c:68:
+    if (argc != 4)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#119: FILE: Documentation/mtrr-add.c:68:
+    if (argc != 4)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: Documentation/mtrr-add.c:69:
+    {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#121: FILE: Documentation/mtrr-add.c:70:
+	fprintf (stderr, "Usage:\tmtrr-add base size type\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#122: FILE: Documentation/mtrr-add.c:71:
+	exit (1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: Documentation/mtrr-add.c:72:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: Documentation/mtrr-add.c:73:
+    sentry.base = strtoul (argv[1], NULL, 0);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#124: FILE: Documentation/mtrr-add.c:73:
+    sentry.base = strtoul (argv[1], NULL, 0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: Documentation/mtrr-add.c:74:
+    sentry.size = strtoul (argv[2], NULL, 0);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#125: FILE: Documentation/mtrr-add.c:74:
+    sentry.size = strtoul (argv[2], NULL, 0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: Documentation/mtrr-add.c:75:
+    for (sentry.type = 0; sentry.type < MTRR_NUM_TYPES; ++sentry.type)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#126: FILE: Documentation/mtrr-add.c:75:
+    for (sentry.type = 0; sentry.type < MTRR_NUM_TYPES; ++sentry.type)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: Documentation/mtrr-add.c:76:
+    {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#128: FILE: Documentation/mtrr-add.c:77:
+	if (strcmp (argv[3], mtrr_strings[sentry.type]) == 0) break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#128: FILE: Documentation/mtrr-add.c:77:
+	if (strcmp (argv[3], mtrr_strings[sentry.type]) == 0) break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: Documentation/mtrr-add.c:78:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: Documentation/mtrr-add.c:79:
+    if (sentry.type >= MTRR_NUM_TYPES)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#130: FILE: Documentation/mtrr-add.c:79:
+    if (sentry.type >= MTRR_NUM_TYPES)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: Documentation/mtrr-add.c:80:
+    {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: Documentation/mtrr-add.c:81:
+	fprintf (stderr, "Illegal type: \"%s\"\n", argv[3]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#133: FILE: Documentation/mtrr-add.c:82:
+	exit (2);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: Documentation/mtrr-add.c:83:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: Documentation/mtrr-add.c:84:
+    if ( ( fd = open ("/proc/mtrr", O_WRONLY, 0) ) == -1 )$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#135: FILE: Documentation/mtrr-add.c:84:
+    if ( ( fd = open ("/proc/mtrr", O_WRONLY, 0) ) == -1 )
+    {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#135: FILE: Documentation/mtrr-add.c:84:
+    if ( ( fd = open ("/proc/mtrr", O_WRONLY, 0) ) == -1 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#135: FILE: Documentation/mtrr-add.c:84:
+    if ( ( fd = open ("/proc/mtrr", O_WRONLY, 0) ) == -1 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#135: FILE: Documentation/mtrr-add.c:84:
+    if ( ( fd = open ("/proc/mtrr", O_WRONLY, 0) ) == -1 )

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#135: FILE: Documentation/mtrr-add.c:84:
+    if ( ( fd = open ("/proc/mtrr", O_WRONLY, 0) ) == -1 )

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: Documentation/mtrr-add.c:85:
+    {$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#137: FILE: Documentation/mtrr-add.c:86:
+	if (errno == ENOENT)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#137: FILE: Documentation/mtrr-add.c:86:
+	if (errno == ENOENT)
+	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#139: FILE: Documentation/mtrr-add.c:88:
+	    fputs ("/proc/mtrr not found: not supported or you don't have a PPro?\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#141: FILE: Documentation/mtrr-add.c:90:
+	    exit (3);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#143: FILE: Documentation/mtrr-add.c:92:
+	fprintf (stderr, "Error opening /proc/mtrr\t%s\n", ERRSTRING);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#144: FILE: Documentation/mtrr-add.c:93:
+	exit (4);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: Documentation/mtrr-add.c:94:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: Documentation/mtrr-add.c:95:
+    if (ioctl (fd, MTRRIOC_ADD_ENTRY, &sentry) == -1)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#146: FILE: Documentation/mtrr-add.c:95:
+    if (ioctl (fd, MTRRIOC_ADD_ENTRY, &sentry) == -1)
+    {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#146: FILE: Documentation/mtrr-add.c:95:
+    if (ioctl (fd, MTRRIOC_ADD_ENTRY, &sentry) == -1)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: Documentation/mtrr-add.c:96:
+    {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#148: FILE: Documentation/mtrr-add.c:97:
+	fprintf (stderr, "Error doing ioctl(2) on /dev/mtrr\t%s\n", ERRSTRING);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#149: FILE: Documentation/mtrr-add.c:98:
+	exit (5);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: Documentation/mtrr-add.c:99:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: Documentation/mtrr-add.c:100:
+    fprintf (stderr, "Sleeping for 5 seconds so you can see the new entry\n");$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#151: FILE: Documentation/mtrr-add.c:100:
+    fprintf (stderr, "Sleeping for 5 seconds so you can see the new entry\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: Documentation/mtrr-add.c:101:
+    sleep (5);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#152: FILE: Documentation/mtrr-add.c:101:
+    sleep (5);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: Documentation/mtrr-add.c:102:
+    close (fd);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: Documentation/mtrr-add.c:102:
+    close (fd);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: Documentation/mtrr-add.c:103:
+    fputs ("I've just closed /proc/mtrr so now the new entry should be gone\n",$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#154: FILE: Documentation/mtrr-add.c:103:
+    fputs ("I've just closed /proc/mtrr so now the new entry should be gone\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#160: FILE: Documentation/mtrr-show.c:1:
+/*  mtrr-show.c

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#161: FILE: Documentation/mtrr-show.c:2:
+/*  mtrr-show.c
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#177: FILE: Documentation/mtrr-show.c:18:
+    along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#178: FILE: Documentation/mtrr-show.c:19:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#186: FILE: Documentation/mtrr-show.c:27:
+/*
+    This program will use an ioctl() on /proc/mtrr to show the current MTRR

CHECK:LINE_SPACING: Please don't use multiple blank lines
#189: FILE: Documentation/mtrr-show.c:30:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#194: FILE: Documentation/mtrr-show.c:35:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#208: FILE: Documentation/mtrr-show.c:49:
+#define ERRSTRING strerror (errno)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#208: FILE: Documentation/mtrr-show.c:49:
+#define ERRSTRING strerror (errno)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#211: FILE: Documentation/mtrr-show.c:52:
+static char *mtrr_strings[MTRR_NUM_TYPES] =
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: Documentation/mtrr-show.c:53:
+    "uncachable",               /* 0 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: Documentation/mtrr-show.c:54:
+    "write-combining",          /* 1 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: Documentation/mtrr-show.c:55:
+    "?",                        /* 2 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: Documentation/mtrr-show.c:56:
+    "?",                        /* 3 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: Documentation/mtrr-show.c:57:
+    "write-through",            /* 4 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: Documentation/mtrr-show.c:58:
+    "write-protect",            /* 5 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: Documentation/mtrr-show.c:59:
+    "write-back",               /* 6 */$

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int main() should probably be int main(void)
#221: FILE: Documentation/mtrr-show.c:62:
+int main ()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#221: FILE: Documentation/mtrr-show.c:62:
+int main ()

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: Documentation/mtrr-show.c:64:
+    int fd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: Documentation/mtrr-show.c:65:
+    struct mtrr_gentry gentry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: Documentation/mtrr-show.c:67:
+    if ( ( fd = open ("/proc/mtrr", O_RDONLY, 0) ) == -1 )$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#226: FILE: Documentation/mtrr-show.c:67:
+    if ( ( fd = open ("/proc/mtrr", O_RDONLY, 0) ) == -1 )
+    {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#226: FILE: Documentation/mtrr-show.c:67:
+    if ( ( fd = open ("/proc/mtrr", O_RDONLY, 0) ) == -1 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#226: FILE: Documentation/mtrr-show.c:67:
+    if ( ( fd = open ("/proc/mtrr", O_RDONLY, 0) ) == -1 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#226: FILE: Documentation/mtrr-show.c:67:
+    if ( ( fd = open ("/proc/mtrr", O_RDONLY, 0) ) == -1 )

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#226: FILE: Documentation/mtrr-show.c:67:
+    if ( ( fd = open ("/proc/mtrr", O_RDONLY, 0) ) == -1 )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: Documentation/mtrr-show.c:68:
+    {$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#228: FILE: Documentation/mtrr-show.c:69:
+	if (errno == ENOENT)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#228: FILE: Documentation/mtrr-show.c:69:
+	if (errno == ENOENT)
+	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#230: FILE: Documentation/mtrr-show.c:71:
+	    fputs ("/proc/mtrr not found: not supported or you don't have a PPro?\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#232: FILE: Documentation/mtrr-show.c:73:
+	    exit (1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#234: FILE: Documentation/mtrr-show.c:75:
+	fprintf (stderr, "Error opening /proc/mtrr\t%s\n", ERRSTRING);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#235: FILE: Documentation/mtrr-show.c:76:
+	exit (2);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: Documentation/mtrr-show.c:77:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: Documentation/mtrr-show.c:78:
+    for (gentry.regnum = 0; ioctl (fd, MTRRIOC_GET_ENTRY, &gentry) == 0;$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#237: FILE: Documentation/mtrr-show.c:78:
+    for (gentry.regnum = 0; ioctl (fd, MTRRIOC_GET_ENTRY, &gentry) == 0;
+	 ++gentry.regnum)
+    {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#237: FILE: Documentation/mtrr-show.c:78:
+    for (gentry.regnum = 0; ioctl (fd, MTRRIOC_GET_ENTRY, &gentry) == 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: Documentation/mtrr-show.c:80:
+    {$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#240: FILE: Documentation/mtrr-show.c:81:
+	if (gentry.size < 1)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#240: FILE: Documentation/mtrr-show.c:81:
+	if (gentry.size < 1)
+	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#242: FILE: Documentation/mtrr-show.c:83:
+	    fprintf (stderr, "Register: %u disabled\n", gentry.regnum);

WARNING:TABSTOP: Statements should start on a tabstop
#243: FILE: Documentation/mtrr-show.c:84:
+	    continue;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#245: FILE: Documentation/mtrr-show.c:86:
+	fprintf (stderr, "Register: %u base: 0x%lx size: 0x%lx type: %s\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: Documentation/mtrr-show.c:89:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: Documentation/mtrr-show.c:90:
+    if (errno == EINVAL) exit (0);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#249: FILE: Documentation/mtrr-show.c:90:
+    if (errno == EINVAL) exit (0);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#249: FILE: Documentation/mtrr-show.c:90:
+    if (errno == EINVAL) exit (0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: Documentation/mtrr-show.c:91:
+    fprintf (stderr, "Error doing ioctl(2) on /dev/mtrr\t%s\n", ERRSTRING);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#250: FILE: Documentation/mtrr-show.c:91:
+    fprintf (stderr, "Error doing ioctl(2) on /dev/mtrr\t%s\n", ERRSTRING);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: Documentation/mtrr-show.c:92:
+    exit (3);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#251: FILE: Documentation/mtrr-show.c:92:
+    exit (3);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000075542.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 93 warnings, 4 checks, 407 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000075542.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
