CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#68: FILE: fs/proc/base.c:204:
+	E(PROC_TGID_EMAPS,     "emaps",   S_IFREG|S_IRUGO),
 	                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#68: FILE: fs/proc/base.c:204:
+	E(PROC_TGID_EMAPS,     "emaps",   S_IFREG|S_IRUGO),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#77: FILE: fs/proc/base.c:247:
+	E(PROC_TID_EMAPS,      "emaps",   S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#77: FILE: fs/proc/base.c:247:
+	E(PROC_TID_EMAPS,      "emaps",   S_IFREG|S_IRUGO),

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#87: FILE: fs/proc/base.c:599:
+extern struct seq_operations proc_pid_emaps_op;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#102: FILE: fs/proc/base.c:611:
+static struct file_operations proc_emaps_operations = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: fs/proc/task_mmu.c:168:
+static void emaps_pte_range(struct vm_area_struct *vma, pmd_t *pmd,
 				unsigned long addr, unsigned long end,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: fs/proc/task_mmu.c:214:
+static inline void emaps_pmd_range(struct vm_area_struct *vma, pud_t *pud,
 				unsigned long addr, unsigned long end,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: fs/proc/task_mmu.c:230:
+static inline void emaps_pud_range(struct vm_area_struct *vma, pgd_t *pgd,
 				unsigned long addr, unsigned long end,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: fs/proc/task_mmu.c:246:
+static inline void emaps_pgd_range(struct vm_area_struct *vma,
 				unsigned long addr, unsigned long end,

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#198: FILE: fs/proc/task_mmu.c:402:
+struct seq_operations proc_pid_emaps_op = {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000164339.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 5 warnings, 6 checks, 153 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000164339.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
