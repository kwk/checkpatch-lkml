WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
diff -Nru a/Documentation/kernel-parameters.txt b/Documentation/kernel-para=

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#48: 
--- a/Documentation/kernel-parameters.txt	Wed Mar 19 14:50:33 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#51: FILE: Documentation/kernel-parameters.txt:206:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:TYPO_SPELLING: 'avaliable' may be misspelled - perhaps 'available'?
#55: FILE: Documentation/kernel-parameters.txt:210:
+			Forces specified timesource (if avaliable) to be used
 			                                ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'avalible' may be misspelled - perhaps 'available'?
#57: FILE: Documentation/kernel-parameters.txt:212:
+			is not avalible, it defaults to PIT.=20
 			       ^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#89: FILE: arch/i386/kernel/timers/timer.c:1:
+#include <linux/init.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#99: FILE: arch/i386/kernel/timers/timer.c:21:
 };
+static char clock_override[10];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#101: FILE: arch/i386/kernel/timers/timer.c:23:
+static int clock_setup(char* str)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#103: FILE: arch/i386/kernel/timers/timer.c:25:
+	if(str){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#103: FILE: arch/i386/kernel/timers/timer.c:25:
+	if(str){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#104: FILE: arch/i386/kernel/timers/timer.c:26:
+		strncpy(clock_override, str,10);
 		                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#105: FILE: arch/i386/kernel/timers/timer.c:27:
+		str[9] =3D '\0';
 		       ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#109: FILE: arch/i386/kernel/timers/timer.c:31:
+__setup("clock=3D", clock_setup);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#118: FILE: arch/i386/kernel/timers/timer.c:44:
+			if (timers[i]->init(clock_override) =3D=3D 0)
 			                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#118: FILE: arch/i386/kernel/timers/timer.c:44:
+			if (timers[i]->init(clock_override) =3D=3D 0)
 			                                       ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#118: FILE: arch/i386/kernel/timers/timer.c:44:
+			if (timers[i]->init(clock_override) =3D=3D 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#139: FILE: arch/i386/kernel/timers/timer_cyclone.c:76:
 }
+static int init_cyclone(char* override)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#139: FILE: arch/i386/kernel/timers/timer_cyclone.c:76:
+static int init_cyclone(char* override)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#148: FILE: arch/i386/kernel/timers/timer_cyclone.c:86:
+	if(override[0] && strncmp(override,"cyclone",7))
+			return -ENODEV;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#148: FILE: arch/i386/kernel/timers/timer_cyclone.c:86:
+	if(override[0] && strncmp(override,"cyclone",7))
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#148: FILE: arch/i386/kernel/timers/timer_cyclone.c:86:
+	if(override[0] && strncmp(override,"cyclone",7))
 	                                            ^

ERROR:SPACING: space required before the open parenthesis '('
#148: FILE: arch/i386/kernel/timers/timer_cyclone.c:86:
+	if(override[0] && strncmp(override,"cyclone",7))

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#164: FILE: arch/i386/kernel/timers/timer_none.c:2:
+static int init_none(char* override)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#177: FILE: arch/i386/kernel/timers/timer_pit.c:19:
+static int init_pit(char* override)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#180: FILE: arch/i386/kernel/timers/timer_pit.c:22:
+	if(override[0] && strncmp(override,"pit",3)){
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#180: FILE: arch/i386/kernel/timers/timer_pit.c:22:
+	if(override[0] && strncmp(override,"pit",3)){
 	                                        ^

ERROR:SPACING: space required before the open brace '{'
#180: FILE: arch/i386/kernel/timers/timer_pit.c:22:
+	if(override[0] && strncmp(override,"pit",3)){

ERROR:SPACING: space required before the open parenthesis '('
#180: FILE: arch/i386/kernel/timers/timer_pit.c:22:
+	if(override[0] && strncmp(override,"pit",3)){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#181: FILE: arch/i386/kernel/timers/timer_pit.c:23:
+		printk(KERN_ERR "Warning: clock=3D override failed. Defaulting to PIT\n"=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#181: FILE: arch/i386/kernel/timers/timer_pit.c:23:
+		printk(KERN_ERR "Warning: clock=3D override failed. Defaulting to PIT\n"=
 		                                                                        ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#204: FILE: arch/i386/kernel/timers/timer_tsc.c:244:
+static int init_tsc(char* override)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#206: FILE: arch/i386/kernel/timers/timer_tsc.c:246:
 {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#208: FILE: arch/i386/kernel/timers/timer_tsc.c:248:
+	if(override[0] && strncmp(override,"tsc",3))
+			return -ENODEV;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#208: FILE: arch/i386/kernel/timers/timer_tsc.c:248:
+	if(override[0] && strncmp(override,"tsc",3))
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#208: FILE: arch/i386/kernel/timers/timer_tsc.c:248:
+	if(override[0] && strncmp(override,"tsc",3))
 	                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#208: FILE: arch/i386/kernel/timers/timer_tsc.c:248:
+	if(override[0] && strncmp(override,"tsc",3))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#222: FILE: arch/i386/kernel/timers/timer_tsc.c:14:
+	int (*init)(char*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char*' should also have an identifier name
#222: FILE: arch/i386/kernel/timers/timer_tsc.c:14:
+	int (*init)(char*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000384518.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 8 warnings, 4 checks, 150 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000384518.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
