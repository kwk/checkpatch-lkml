ERROR:SPACING: space required after that ',' (ctx:VxV)
#31: FILE: arch/m68k/apollo/config.c:29:
+extern void dn_sched_init(irqreturn_t (*handler)(int,void *,struct pt_regs *));
                                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:OxV)
#31: FILE: arch/m68k/apollo/config.c:29:
+extern void dn_sched_init(irqreturn_t (*handler)(int,void *,struct pt_regs *));
                                                            ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#31: FILE: arch/m68k/apollo/config.c:29:
+extern void dn_sched_init(irqreturn_t (*handler)(int,void *,struct pt_regs *));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 155 exceeds 100 columns
#34: FILE: arch/m68k/apollo/config.c:31:
+extern int dn_request_irq(unsigned int irq, irqreturn_t (*handler)(int, void *, struct pt_regs *), unsigned long flags, const char *devname, void *dev_id);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#34: FILE: arch/m68k/apollo/config.c:31:
+extern int dn_request_irq(unsigned int irq, irqreturn_t (*handler)(int, void *, struct pt_regs *), unsigned long flags, const char *devname, void *dev_id);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#43: FILE: arch/m68k/apollo/config.c:44:
+extern irqreturn_t dn_process_int(int irq, struct pt_regs *fp);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#49: FILE: arch/m68k/apollo/config.c:48:
+static irqreturn_t dn_timer_int(int irq,void *, struct pt_regs *);
                                        ^

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#50: FILE: arch/m68k/apollo/config.c:49:
+static irqreturn_t (*sched_timer_handler)(int, void *, struct pt_regs *)=NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#50: FILE: arch/m68k/apollo/config.c:49:
+static irqreturn_t (*sched_timer_handler)(int, void *, struct pt_regs *)=NULL;
                                                                         ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#59: FILE: arch/m68k/apollo/config.c:198:
+irqreturn_t dn_timer_int(int irq, void *dev_id, struct pt_regs *fp) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#71: FILE: arch/m68k/apollo/config.c:210:
+void dn_sched_init(irqreturn_t (*timer_routine)(int, void *, struct pt_regs *)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: arch/m68k/apollo/dn_ints.c:19:
+  irqreturn_t res = IRQ_NONE;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#87: FILE: arch/m68k/apollo/dn_ints.c:21:
   if(dn_irqs[irq-160].handler) {
+    res = dn_irqs[irq-160].handler(irq,dn_irqs[irq-160].dev_id,fp);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: arch/m68k/apollo/dn_ints.c:22:
+    res = dn_irqs[irq-160].handler(irq,dn_irqs[irq-160].dev_id,fp);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#91: FILE: arch/m68k/apollo/dn_ints.c:22:
+    res = dn_irqs[irq-160].handler(irq,dn_irqs[irq-160].dev_id,fp);
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#91: FILE: arch/m68k/apollo/dn_ints.c:22:
+    res = dn_irqs[irq-160].handler(irq,dn_irqs[irq-160].dev_id,fp);
                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#91: FILE: arch/m68k/apollo/dn_ints.c:22:
+    res = dn_irqs[irq-160].handler(irq,dn_irqs[irq-160].dev_id,fp);
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#91: FILE: arch/m68k/apollo/dn_ints.c:22:
+    res = dn_irqs[irq-160].handler(irq,dn_irqs[irq-160].dev_id,fp);
                                                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: arch/m68k/apollo/dn_ints.c:23:
+  } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#92: FILE: arch/m68k/apollo/dn_ints.c:23:
+  } else {
     printk("spurious irq %d occurred\n",irq);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: arch/m68k/apollo/dn_ints.c:30:
+  return res;$

WARNING:LONG_LINE: line length of 149 exceeds 100 columns
#108: FILE: arch/m68k/apollo/dn_ints.c:46:
+int dn_request_irq(unsigned int irq, irqreturn_t (*handler)(int, void *, struct pt_regs *), unsigned long flags, const char *devname, void *dev_id) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#108: FILE: arch/m68k/apollo/dn_ints.c:46:
+int dn_request_irq(unsigned int irq, irqreturn_t (*handler)(int, void *, struct pt_regs *), unsigned long flags, const char *devname, void *dev_id) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000371129.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 11 warnings, 2 checks, 78 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000371129.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
