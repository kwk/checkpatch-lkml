WARNING:TYPO_SPELLING: 'interrups' may be misspelled - perhaps 'interrupts'?
#39: 
io_apic that delivers isa interrups is always known to the kernel
                          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mp_irqs[i].mpc_irqtype == type'
#85: FILE: arch/x86_64/kernel/io_apic.c:390:
+		if ((mp_bus_id_to_type[lbus] == MP_BUS_ISA ||
+		     mp_bus_id_to_type[lbus] == MP_BUS_EISA ||
+		     mp_bus_id_to_type[lbus] == MP_BUS_MCA) &&
+		    (mp_irqs[i].mpc_irqtype == type) &&
+		    (mp_irqs[i].mpc_srcbusirq == irq))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mp_irqs[i].mpc_srcbusirq == irq'
#85: FILE: arch/x86_64/kernel/io_apic.c:390:
+		if ((mp_bus_id_to_type[lbus] == MP_BUS_ISA ||
+		     mp_bus_id_to_type[lbus] == MP_BUS_EISA ||
+		     mp_bus_id_to_type[lbus] == MP_BUS_MCA) &&
+		    (mp_irqs[i].mpc_irqtype == type) &&
+		    (mp_irqs[i].mpc_srcbusirq == irq))

WARNING:LINE_SPACING: Missing a blank line after declarations
#94: FILE: arch/x86_64/kernel/io_apic.c:399:
+		int apic;
+		for(apic = 0; apic < nr_ioapics; apic++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#94: FILE: arch/x86_64/kernel/io_apic.c:399:
+		for(apic = 0; apic < nr_ioapics; apic++) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: arch/x86_64/kernel/io_apic.c:400:
+^I^I^Iif (mp_ioapics[apic].mpc_apicid == mp_irqs[i].mpc_dstapic) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <setup_ExtINT_IRQ0_pin>
#111: FILE: arch/x86_64/kernel/io_apic.c:840:
+static void __init setup_ExtINT_IRQ0_pin(unsigned int apic, unsigned int pin, int vector)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#121: FILE: arch/x86_64/kernel/io_apic.c:874:
+	io_apic_write(apic, 0x11+2*pin, *(((int *)&entry)+1));
 	                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#121: FILE: arch/x86_64/kernel/io_apic.c:874:
+	io_apic_write(apic, 0x11+2*pin, *(((int *)&entry)+1));
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#121: FILE: arch/x86_64/kernel/io_apic.c:874:
+	io_apic_write(apic, 0x11+2*pin, *(((int *)&entry)+1));
 	                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#122: FILE: arch/x86_64/kernel/io_apic.c:875:
+	io_apic_write(apic, 0x10+2*pin, *(((int *)&entry)+0));
 	                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#122: FILE: arch/x86_64/kernel/io_apic.c:875:
+	io_apic_write(apic, 0x10+2*pin, *(((int *)&entry)+0));
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#122: FILE: arch/x86_64/kernel/io_apic.c:875:
+	io_apic_write(apic, 0x10+2*pin, *(((int *)&entry)+0));
 	                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#147: FILE: arch/x86_64/kernel/io_apic.c:1173:
+		nr_ioapic_registers[apic] = reg_01.bits.entries+1;
 		                                               ^

ERROR:SPACING: space required before the open parenthesis '('
#149: FILE: arch/x86_64/kernel/io_apic.c:1175:
+	for(apic = 0; apic < nr_ioapics; apic++) {

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#151: FILE: arch/x86_64/kernel/io_apic.c:1177:
+		/* See if any of the pins is in ExtINT mode */
 		                                ^^^^^^

ERROR:SPACING: space required before the open parenthesis '('
#152: FILE: arch/x86_64/kernel/io_apic.c:1178:
+		for(pin = 0; pin < nr_ioapic_registers[i]; pin++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#154: FILE: arch/x86_64/kernel/io_apic.c:1180:
+			struct IO_APIC_route_entry entry;
+			spin_lock_irqsave(&ioapic_lock, flags);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#159: FILE: arch/x86_64/kernel/io_apic.c:1185:
+
+

WARNING:TYPO_SPELLING: 'ExtInt' may be misspelled - perhaps 'Extinct'?
#160: FILE: arch/x86_64/kernel/io_apic.c:1186:
+			/* If the interrupt line is enabled and in ExtInt mode 
 			                                           ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: arch/x86_64/kernel/io_apic.c:1186:
+^I^I^I/* If the interrupt line is enabled and in ExtInt mode $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry.mask == 0'
#163: FILE: arch/x86_64/kernel/io_apic.c:1189:
+			if ((entry.mask == 0) && (entry.delivery_mode == dest_ExtINT)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry.delivery_mode == dest_ExtINT'
#163: FILE: arch/x86_64/kernel/io_apic.c:1189:
+			if ((entry.mask == 0) && (entry.delivery_mode == dest_ExtINT)) {

CHECK:CAMELCASE: Avoid CamelCase: <dest_ExtINT>
#163: FILE: arch/x86_64/kernel/io_apic.c:1189:
+			if ((entry.mask == 0) && (entry.delivery_mode == dest_ExtINT)) {

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#171: FILE: arch/x86_64/kernel/io_apic.c:1197:
+	/* Look to see what if the MP table has reported the ExtINT */
 	                                                     ^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <mp_ExtINT>
#172: FILE: arch/x86_64/kernel/io_apic.c:1198:
+	i8259_pin  = find_isa_irq_pin(0, mp_ExtINT);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i8259_pin >= 0'
#175: FILE: arch/x86_64/kernel/io_apic.c:1201:
+	if ((ioapic_i8259.pin == -1) && (i8259_pin >= 0)) {

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#176: FILE: arch/x86_64/kernel/io_apic.c:1202:
+		printk(KERN_WARNING "ExtINT not setup in hardware but reported by MP table\n");
 		                     ^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#176: FILE: arch/x86_64/kernel/io_apic.c:1202:
+		printk(KERN_WARNING "ExtINT not setup in hardware but reported by MP table\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#181: FILE: arch/x86_64/kernel/io_apic.c:1207:
+	if (((ioapic_i8259.apic != i8259_apic) || (ioapic_i8259.pin != i8259_pin)) &&
+		(i8259_pin >= 0) && (ioapic_i8259.pin >= 0))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ioapic_i8259.apic != i8259_apic'
#181: FILE: arch/x86_64/kernel/io_apic.c:1207:
+	if (((ioapic_i8259.apic != i8259_apic) || (ioapic_i8259.pin != i8259_pin)) &&
+		(i8259_pin >= 0) && (ioapic_i8259.pin >= 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ioapic_i8259.pin != i8259_pin'
#181: FILE: arch/x86_64/kernel/io_apic.c:1207:
+	if (((ioapic_i8259.apic != i8259_apic) || (ioapic_i8259.pin != i8259_pin)) &&
+		(i8259_pin >= 0) && (ioapic_i8259.pin >= 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i8259_pin >= 0'
#181: FILE: arch/x86_64/kernel/io_apic.c:1207:
+	if (((ioapic_i8259.apic != i8259_apic) || (ioapic_i8259.pin != i8259_pin)) &&
+		(i8259_pin >= 0) && (ioapic_i8259.pin >= 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ioapic_i8259.pin >= 0'
#181: FILE: arch/x86_64/kernel/io_apic.c:1207:
+	if (((ioapic_i8259.apic != i8259_apic) || (ioapic_i8259.pin != i8259_pin)) &&
+		(i8259_pin >= 0) && (ioapic_i8259.pin >= 0))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: arch/x86_64/kernel/io_apic.c:1208:
+	if (((ioapic_i8259.apic != i8259_apic) || (ioapic_i8259.pin != i8259_pin)) &&
+		(i8259_pin >= 0) && (ioapic_i8259.pin >= 0))

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#184: FILE: arch/x86_64/kernel/io_apic.c:1210:
+		printk(KERN_WARNING "ExtINT in hardware and MP table differ\n");
 		                     ^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#184: FILE: arch/x86_64/kernel/io_apic.c:1210:
+		printk(KERN_WARNING "ExtINT in hardware and MP table differ\n");

WARNING:TYPO_SPELLING: 'ExtInt' may be misspelled - perhaps 'Extinct'?
#211: FILE: arch/x86_64/kernel/io_apic.c:1245:
+		entry.delivery_mode   = dest_ExtINT; /* ExtInt */
 		                                        ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: arch/x86_64/kernel/io_apic.c:1253:
+^I^Iio_apic_write(ioapic_i8259.apic, 0x11+2*ioapic_i8259.pin, $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#222: FILE: arch/x86_64/kernel/io_apic.c:1253:
+		io_apic_write(ioapic_i8259.apic, 0x11+2*ioapic_i8259.pin, 
 		                                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#222: FILE: arch/x86_64/kernel/io_apic.c:1253:
+		io_apic_write(ioapic_i8259.apic, 0x11+2*ioapic_i8259.pin, 
 		                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: arch/x86_64/kernel/io_apic.c:1254:
+		io_apic_write(ioapic_i8259.apic, 0x11+2*ioapic_i8259.pin, 
+			*(((int *)&entry)+1));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#223: FILE: arch/x86_64/kernel/io_apic.c:1254:
+			*(((int *)&entry)+1));
 			                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: arch/x86_64/kernel/io_apic.c:1255:
+^I^Iio_apic_write(ioapic_i8259.apic, 0x10+2*ioapic_i8259.pin, $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#224: FILE: arch/x86_64/kernel/io_apic.c:1255:
+		io_apic_write(ioapic_i8259.apic, 0x10+2*ioapic_i8259.pin, 
 		                                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#224: FILE: arch/x86_64/kernel/io_apic.c:1255:
+		io_apic_write(ioapic_i8259.apic, 0x10+2*ioapic_i8259.pin, 
 		                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: arch/x86_64/kernel/io_apic.c:1256:
+		io_apic_write(ioapic_i8259.apic, 0x10+2*ioapic_i8259.pin, 
+			*(((int *)&entry)+0));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#225: FILE: arch/x86_64/kernel/io_apic.c:1256:
+			*(((int *)&entry)+0));
 			                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: arch/x86_64/kernel/io_apic.c:1712:
+^Ipin1  = find_isa_irq_pin(0, mp_INT); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: arch/x86_64/kernel/io_apic.c:1717:
+^Iapic_printk(APIC_VERBOSE,KERN_INFO "..TIMER: vector=0x%02X apic1=%d pin1=%d apic2=%d pin2=%d\n", $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#308: FILE: arch/x86_64/kernel/io_apic.c:1717:
+	apic_printk(APIC_VERBOSE,KERN_INFO "..TIMER: vector=0x%02X apic1=%d pin1=%d apic2=%d pin2=%d\n", 
 	                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#309: FILE: arch/x86_64/kernel/io_apic.c:1718:
+	apic_printk(APIC_VERBOSE,KERN_INFO "..TIMER: vector=0x%02X apic1=%d pin1=%d apic2=%d pin2=%d\n", 
+		vector, apic1, pin1, apic2, pin2);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: arch/x86_64/kernel/io_apic.c:1742:
+^I^Iapic_printk(APIC_VERBOSE,"\n..... (found apic %d pin %d) ...", $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#329: FILE: arch/x86_64/kernel/io_apic.c:1742:
+		apic_printk(APIC_VERBOSE,"\n..... (found apic %d pin %d) ...", 
 		                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: arch/x86_64/kernel/io_apic.c:1743:
+		apic_printk(APIC_VERBOSE,"\n..... (found apic %d pin %d) ...", 
+			apic2, pin2);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000145919.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 11 warnings, 31 checks, 276 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000145919.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
