WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#56: 
Content-Type: text/x-patch; name=patch-linux-2.6.15-rc2-git6-ipmisysfs.diff; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: drivers/char/ipmi/ipmi_bt_sm.c:109:
+/** $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#125: FILE: drivers/char/ipmi/ipmi_devintf.c:792:
+extern struct class *ipmi_class;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: drivers/char/ipmi/ipmi_kcs_sm.c:124:
+/** $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#204: FILE: drivers/char/ipmi/ipmi_msghandler.c:30:
  *  with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#205: FILE: drivers/char/ipmi/ipmi_msghandler.c:31:
  *  675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: drivers/char/ipmi/ipmi_msghandler.c:33:
+/* $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'man_id' - possible side-effects?
#218: FILE: drivers/char/ipmi/ipmi_msghandler.c:73:
+#define IPMI_DEVICE_MANUFACTURER_ID(man_id) \
+	((long unsigned int) (man_id[2] << 16 | man_id[1] << 8 | man_id[0]))

CHECK:SPACING: No space is necessary after a cast
#219: FILE: drivers/char/ipmi/ipmi_msghandler.c:74:
+	((long unsigned int) (man_id[2] << 16 | man_id[1] << 8 | man_id[0]))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MISORDERED_TYPE: type 'long unsigned int' should be specified in [[un]signed] [short|int|long|long long] order
#219: FILE: drivers/char/ipmi/ipmi_msghandler.c:74:
+	((long unsigned int) (man_id[2] << 16 | man_id[1] << 8 | man_id[0]))

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'long unsigned int' as the int is unnecessary
#219: FILE: drivers/char/ipmi/ipmi_msghandler.c:74:
+	((long unsigned int) (man_id[2] << 16 | man_id[1] << 8 | man_id[0]))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'product_id' - possible side-effects?
#221: FILE: drivers/char/ipmi/ipmi_msghandler.c:76:
+#define IPMI_DEVICE_PRODUCT_ID(product_id) \
+	((long unsigned int) (product_id[1] << 8 | product_id[0]))

CHECK:SPACING: No space is necessary after a cast
#222: FILE: drivers/char/ipmi/ipmi_msghandler.c:77:
+	((long unsigned int) (product_id[1] << 8 | product_id[0]))

WARNING:MISORDERED_TYPE: type 'long unsigned int' should be specified in [[un]signed] [short|int|long|long long] order
#222: FILE: drivers/char/ipmi/ipmi_msghandler.c:77:
+	((long unsigned int) (product_id[1] << 8 | product_id[0]))

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'long unsigned int' as the int is unnecessary
#222: FILE: drivers/char/ipmi/ipmi_msghandler.c:77:
+	((long unsigned int) (product_id[1] << 8 | product_id[0]))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#224: FILE: drivers/char/ipmi/ipmi_msghandler.c:79:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: drivers/char/ipmi/ipmi_msghandler.c:335:
+/** $

CHECK:SPACING: No space is necessary after a cast
#254: FILE: drivers/char/ipmi/ipmi_msghandler.c:407:
+	unsigned char *id = (unsigned char *) data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: drivers/char/ipmi/ipmi_msghandler.c:408:
+^Istruct ipmi_bmc_device *bmc = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: drivers/char/ipmi/ipmi_msghandler.c:410:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: drivers/char/ipmi/ipmi_msghandler.c:414:
+struct ipmi_bmc_device * ipmi_find_bmc_guid(struct ipmi_driver *drv, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#261: FILE: drivers/char/ipmi/ipmi_msghandler.c:414:
+struct ipmi_bmc_device * ipmi_find_bmc_guid(struct ipmi_driver *drv, 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: drivers/char/ipmi/ipmi_msghandler.c:415:
+struct ipmi_bmc_device * ipmi_find_bmc_guid(struct ipmi_driver *drv, 
+		unsigned char* guid)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#262: FILE: drivers/char/ipmi/ipmi_msghandler.c:415:
+		unsigned char* guid)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#264: FILE: drivers/char/ipmi/ipmi_msghandler.c:417:
+^Istruct device *dev = driver_find_device(&drv->driver, NULL, guid, $

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#266: FILE: drivers/char/ipmi/ipmi_msghandler.c:419:
+	return (dev?to_ipmi_bmc_device(to_platform_device(dev)):NULL);
 	           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#266: FILE: drivers/char/ipmi/ipmi_msghandler.c:419:
+	return (dev?to_ipmi_bmc_device(to_platform_device(dev)):NULL);
 	                                                       ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#266: FILE: drivers/char/ipmi/ipmi_msghandler.c:419:
+	return (dev?to_ipmi_bmc_device(to_platform_device(dev)):NULL);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:SPACING: missing space after struct definition
#269: FILE: drivers/char/ipmi/ipmi_msghandler.c:422:
+struct prod_dev_id{

CHECK:SPACING: No space is necessary after a cast
#276: FILE: drivers/char/ipmi/ipmi_msghandler.c:429:
+	struct prod_dev_id *id = (struct prod_dev_id *) data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: drivers/char/ipmi/ipmi_msghandler.c:430:
+^Istruct ipmi_bmc_device *bmc = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#279: FILE: drivers/char/ipmi/ipmi_msghandler.c:432:
+^I$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#281: FILE: drivers/char/ipmi/ipmi_msghandler.c:434:
+	return bmc->id.product_id[0] == id->product_id[0]
+		&& bmc->id.product_id[1] == id->product_id[1]

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#282: FILE: drivers/char/ipmi/ipmi_msghandler.c:435:
+		&& bmc->id.product_id[1] == id->product_id[1]
+		&& bmc->id.device_id == id->device_id;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: drivers/char/ipmi/ipmi_msghandler.c:438:
+struct ipmi_bmc_device * ipmi_find_bmc_prod_dev_id(struct ipmi_driver *drv, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#285: FILE: drivers/char/ipmi/ipmi_msghandler.c:438:
+struct ipmi_bmc_device * ipmi_find_bmc_prod_dev_id(struct ipmi_driver *drv, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: drivers/char/ipmi/ipmi_msghandler.c:439:
+struct ipmi_bmc_device * ipmi_find_bmc_prod_dev_id(struct ipmi_driver *drv, 
+		unsigned char *product_id, unsigned char *device_id)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: drivers/char/ipmi/ipmi_msghandler.c:445:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: drivers/char/ipmi/ipmi_msghandler.c:446:
+^Istruct device *dev = driver_find_device(&drv->driver, NULL, &id, $

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#295: FILE: drivers/char/ipmi/ipmi_msghandler.c:448:
+	return (dev?to_ipmi_bmc_device(to_platform_device(dev)):NULL);
 	           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#295: FILE: drivers/char/ipmi/ipmi_msghandler.c:448:
+	return (dev?to_ipmi_bmc_device(to_platform_device(dev)):NULL);
 	                                                       ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#295: FILE: drivers/char/ipmi/ipmi_msghandler.c:448:
+	return (dev?to_ipmi_bmc_device(to_platform_device(dev)):NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#300: FILE: drivers/char/ipmi/ipmi_msghandler.c:453:
+	printk(KERN_DEBUG "ipmi_bmc release\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: drivers/char/ipmi/ipmi_msghandler.c:456:
+static ssize_t device_id_show(struct device *dev, struct device_attribute *attr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: drivers/char/ipmi/ipmi_msghandler.c:457:
+static ssize_t device_id_show(struct device *dev, struct device_attribute *attr, 
+		char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#307: FILE: drivers/char/ipmi/ipmi_msghandler.c:460:
+	struct ipmi_bmc_device *bmc = to_ipmi_bmc_device(to_platform_device(dev));
+	return snprintf(buf, 10, "%u\n", bmc->id.device_id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: drivers/char/ipmi/ipmi_msghandler.c:463:
+static ssize_t provides_dev_sdrs_show(struct device *dev, struct device_attribute *attr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: drivers/char/ipmi/ipmi_msghandler.c:464:
+static ssize_t provides_dev_sdrs_show(struct device *dev, struct device_attribute *attr, 
+		char *buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: drivers/char/ipmi/ipmi_msghandler.c:467:
+^Ireturn snprintf(buf, 10, "%u\n", $

WARNING:LINE_SPACING: Missing a blank line after declarations
#314: FILE: drivers/char/ipmi/ipmi_msghandler.c:467:
+	struct ipmi_bmc_device *bmc = to_ipmi_bmc_device(to_platform_device(dev));
+	return snprintf(buf, 10, "%u\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: drivers/char/ipmi/ipmi_msghandler.c:471:
+static ssize_t revision_show(struct device *dev, struct device_attribute *attr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: drivers/char/ipmi/ipmi_msghandler.c:472:
+static ssize_t revision_show(struct device *dev, struct device_attribute *attr, 
+		char *buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#322: FILE: drivers/char/ipmi/ipmi_msghandler.c:475:
+^Ireturn snprintf(buf, 20, "%u\n", $

WARNING:LINE_SPACING: Missing a blank line after declarations
#322: FILE: drivers/char/ipmi/ipmi_msghandler.c:475:
+	struct ipmi_bmc_device *bmc = to_ipmi_bmc_device(to_platform_device(dev));
+	return snprintf(buf, 20, "%u\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: drivers/char/ipmi/ipmi_msghandler.c:479:
+static ssize_t firmware_rev_show(struct device *dev, struct device_attribute *attr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#327: FILE: drivers/char/ipmi/ipmi_msghandler.c:480:
+static ssize_t firmware_rev_show(struct device *dev, struct device_attribute *attr, 
+		char *buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: drivers/char/ipmi/ipmi_msghandler.c:483:
+^Ireturn snprintf(buf, 20, "%u.%x\n", bmc->id.firmware_rev_1, $

WARNING:LINE_SPACING: Missing a blank line after declarations
#330: FILE: drivers/char/ipmi/ipmi_msghandler.c:483:
+	struct ipmi_bmc_device *bmc = to_ipmi_bmc_device(to_platform_device(dev));
+	return snprintf(buf, 20, "%u.%x\n", bmc->id.firmware_rev_1, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: drivers/char/ipmi/ipmi_msghandler.c:487:
+static ssize_t ipmi_version_show(struct device *dev, struct device_attribute *attr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#335: FILE: drivers/char/ipmi/ipmi_msghandler.c:488:
+static ssize_t ipmi_version_show(struct device *dev, struct device_attribute *attr, 
+		char *buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: drivers/char/ipmi/ipmi_msghandler.c:491:
+^Ireturn snprintf(buf, 20, "%u.%u\n", $

WARNING:LINE_SPACING: Missing a blank line after declarations
#338: FILE: drivers/char/ipmi/ipmi_msghandler.c:491:
+	struct ipmi_bmc_device *bmc = to_ipmi_bmc_device(to_platform_device(dev));
+	return snprintf(buf, 20, "%u.%u\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: drivers/char/ipmi/ipmi_msghandler.c:496:
+static ssize_t add_dev_support_show(struct device *dev, struct device_attribute *attr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: drivers/char/ipmi/ipmi_msghandler.c:497:
+static ssize_t add_dev_support_show(struct device *dev, struct device_attribute *attr, 
+		char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#347: FILE: drivers/char/ipmi/ipmi_msghandler.c:500:
+	struct ipmi_bmc_device *bmc = to_ipmi_bmc_device(to_platform_device(dev));
+	return snprintf(buf, 10, "0x%02x\n",  bmc->id.additional_device_support);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: drivers/char/ipmi/ipmi_msghandler.c:503:
+static ssize_t manufacturer_id_show(struct device *dev, struct device_attribute *attr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: drivers/char/ipmi/ipmi_msghandler.c:504:
+static ssize_t manufacturer_id_show(struct device *dev, struct device_attribute *attr, 
+		char *buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: drivers/char/ipmi/ipmi_msghandler.c:507:
+^Ireturn snprintf(buf, 20, "%lu\n",  $

WARNING:LINE_SPACING: Missing a blank line after declarations
#354: FILE: drivers/char/ipmi/ipmi_msghandler.c:507:
+	struct ipmi_bmc_device *bmc = to_ipmi_bmc_device(to_platform_device(dev));
+	return snprintf(buf, 20, "%lu\n",  

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: drivers/char/ipmi/ipmi_msghandler.c:511:
+static ssize_t product_id_show(struct device *dev, struct device_attribute *attr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: drivers/char/ipmi/ipmi_msghandler.c:512:
+static ssize_t product_id_show(struct device *dev, struct device_attribute *attr, 
+		char *buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: drivers/char/ipmi/ipmi_msghandler.c:515:
+^Ireturn snprintf(buf, 10, "%lu\n", $

WARNING:LINE_SPACING: Missing a blank line after declarations
#362: FILE: drivers/char/ipmi/ipmi_msghandler.c:515:
+	struct ipmi_bmc_device *bmc = to_ipmi_bmc_device(to_platform_device(dev));
+	return snprintf(buf, 10, "%lu\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: drivers/char/ipmi/ipmi_msghandler.c:519:
+static ssize_t aux_firmware_rev_show(struct device *dev, struct device_attribute *attr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: drivers/char/ipmi/ipmi_msghandler.c:520:
+static ssize_t aux_firmware_rev_show(struct device *dev, struct device_attribute *attr, 
+		char *buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: drivers/char/ipmi/ipmi_msghandler.c:523:
+^Ireturn snprintf(buf, 21, "0x%02x 0x%02x 0x%02x 0x%02x\n", $

WARNING:LINE_SPACING: Missing a blank line after declarations
#370: FILE: drivers/char/ipmi/ipmi_msghandler.c:523:
+	struct ipmi_bmc_device *bmc = to_ipmi_bmc_device(to_platform_device(dev));
+	return snprintf(buf, 21, "0x%02x 0x%02x 0x%02x 0x%02x\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: drivers/char/ipmi/ipmi_msghandler.c:524:
+^I^I^Ibmc->id.aux_firmware_revision[3], $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#372: FILE: drivers/char/ipmi/ipmi_msghandler.c:525:
+^I^I^Ibmc->id.aux_firmware_revision[2], $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: drivers/char/ipmi/ipmi_msghandler.c:526:
+^I^I^Ibmc->id.aux_firmware_revision[1], $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: drivers/char/ipmi/ipmi_msghandler.c:530:
+static ssize_t guid_show(struct device *dev, struct device_attribute *attr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#378: FILE: drivers/char/ipmi/ipmi_msghandler.c:531:
+static ssize_t guid_show(struct device *dev, struct device_attribute *attr, 
+		char *buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#381: FILE: drivers/char/ipmi/ipmi_msghandler.c:534:
+^Ireturn snprintf(buf, 100, "%Lx%Lx\n", $

WARNING:LINE_SPACING: Missing a blank line after declarations
#381: FILE: drivers/char/ipmi/ipmi_msghandler.c:534:
+	struct ipmi_bmc_device *bmc = to_ipmi_bmc_device(to_platform_device(dev));
+	return snprintf(buf, 100, "%Lx%Lx\n", 

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#381: FILE: drivers/char/ipmi/ipmi_msghandler.c:534:
+	return snprintf(buf, 100, "%Lx%Lx\n", 

CHECK:SPACING: No space is necessary after a cast
#382: FILE: drivers/char/ipmi/ipmi_msghandler.c:535:
+			(long long) bmc->guid[0],

CHECK:SPACING: No space is necessary after a cast
#383: FILE: drivers/char/ipmi/ipmi_msghandler.c:536:
+			(long long) bmc->guid[8]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#386: FILE: drivers/char/ipmi/ipmi_msghandler.c:539:
+void ipmi_bmc_unregister(struct ipmi_si_device *si, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: drivers/char/ipmi/ipmi_msghandler.c:540:
+void ipmi_bmc_unregister(struct ipmi_si_device *si, 
+		struct ipmi_bmc_device *bmc)

ERROR:SPACING: space required before the open brace '{'
#389: FILE: drivers/char/ipmi/ipmi_msghandler.c:542:
+	if(--bmc->interfaces == 0){

ERROR:SPACING: space required before the open parenthesis '('
#389: FILE: drivers/char/ipmi/ipmi_msghandler.c:542:
+	if(--bmc->interfaces == 0){

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: drivers/char/ipmi/ipmi_msghandler.c:545:
+		device_remove_file(&bmc->dev.dev,
+				&bmc->device_id_attr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: drivers/char/ipmi/ipmi_msghandler.c:547:
+		device_remove_file(&bmc->dev.dev,
+				&bmc->provides_dev_sdrs_attr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#396: FILE: drivers/char/ipmi/ipmi_msghandler.c:549:
+		device_remove_file(&bmc->dev.dev,
+				&bmc->revision_attr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#398: FILE: drivers/char/ipmi/ipmi_msghandler.c:551:
+		device_remove_file(&bmc->dev.dev,
+				&bmc->firmware_rev_attr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: drivers/char/ipmi/ipmi_msghandler.c:553:
+		device_remove_file(&bmc->dev.dev,
+				&bmc->version_attr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#402: FILE: drivers/char/ipmi/ipmi_msghandler.c:555:
+		device_remove_file(&bmc->dev.dev,
+				&bmc->add_dev_support_attr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#404: FILE: drivers/char/ipmi/ipmi_msghandler.c:557:
+		device_remove_file(&bmc->dev.dev,
+				&bmc->manufacturer_id_attr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#406: FILE: drivers/char/ipmi/ipmi_msghandler.c:559:
+		device_remove_file(&bmc->dev.dev,
+				&bmc->product_id_attr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: drivers/char/ipmi/ipmi_msghandler.c:561:
+		device_remove_file(&bmc->dev.dev,
+				&bmc->aux_firmware_rev_attr);

ERROR:SPACING: space required before the open parenthesis '('
#409: FILE: drivers/char/ipmi/ipmi_msghandler.c:562:
+		if(bmc->guid_present)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#411: FILE: drivers/char/ipmi/ipmi_msghandler.c:564:
+			device_remove_file(&bmc->dev.dev,
+					&bmc->guid_attr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#416: FILE: drivers/char/ipmi/ipmi_msghandler.c:569:
+int ipmi_bmc_register(struct ipmi_si_device *si, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#417: FILE: drivers/char/ipmi/ipmi_msghandler.c:570:
+int ipmi_bmc_register(struct ipmi_si_device *si, 
+		struct ipmi_bmc_device **bmcref)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: drivers/char/ipmi/ipmi_msghandler.c:576:
+^I/* Try to find if there is an ipmi_bmc_device struct $

ERROR:SPACING: space required before the open brace '{'
#426: FILE: drivers/char/ipmi/ipmi_msghandler.c:579:
+	if(bmc->guid_present){

ERROR:SPACING: space required before the open parenthesis '('
#426: FILE: drivers/char/ipmi/ipmi_msghandler.c:579:
+	if(bmc->guid_present){

ERROR:SPACING: space required before the open brace '{'
#428: FILE: drivers/char/ipmi/ipmi_msghandler.c:581:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#428: FILE: drivers/char/ipmi/ipmi_msghandler.c:581:
+	}else{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#429: FILE: drivers/char/ipmi/ipmi_msghandler.c:582:
+^I^Inew_bmc = ipmi_find_bmc_prod_dev_id(&ipmidriver, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#430: FILE: drivers/char/ipmi/ipmi_msghandler.c:583:
+^I^I^I^Ibmc->id.product_id, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#430: FILE: drivers/char/ipmi/ipmi_msghandler.c:583:
+		new_bmc = ipmi_find_bmc_prod_dev_id(&ipmidriver, 
+				bmc->id.product_id, 

ERROR:SPACING: space required before the open brace '{'
#436: FILE: drivers/char/ipmi/ipmi_msghandler.c:589:
+	if(new_bmc){

ERROR:SPACING: space required before the open parenthesis '('
#436: FILE: drivers/char/ipmi/ipmi_msghandler.c:589:
+	if(new_bmc){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#437: FILE: drivers/char/ipmi/ipmi_msghandler.c:590:
+^I^Ikfree(bmc); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#438: FILE: drivers/char/ipmi/ipmi_msghandler.c:591:
+^I^I*bmcref = new_bmc; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: drivers/char/ipmi/ipmi_msghandler.c:593:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#442: FILE: drivers/char/ipmi/ipmi_msghandler.c:595:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#443: FILE: drivers/char/ipmi/ipmi_msghandler.c:596:
+^I^Iprintk(KERN_INFO $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#443: FILE: drivers/char/ipmi/ipmi_msghandler.c:596:
+		printk(KERN_INFO 

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#444: FILE: drivers/char/ipmi/ipmi_msghandler.c:597:
+			"ipmi_si: interfacing existing BMC (man_id: %lu, \

ERROR:SPACING: space required before the open brace '{'
#449: FILE: drivers/char/ipmi/ipmi_msghandler.c:602:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#449: FILE: drivers/char/ipmi/ipmi_msghandler.c:602:
+	}else{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#455: FILE: drivers/char/ipmi/ipmi_msghandler.c:608:
+^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#458: FILE: drivers/char/ipmi/ipmi_msghandler.c:611:
+			printk(KERN_ERR

ERROR:TRAILING_WHITESPACE: trailing whitespace
#459: FILE: drivers/char/ipmi/ipmi_msghandler.c:612:
+^I^I^I^I"ipmi_si: Unable to register bmc device: %d\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#463: FILE: drivers/char/ipmi/ipmi_msghandler.c:616:
+^I^I$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#466: FILE: drivers/char/ipmi/ipmi_msghandler.c:619:
+		bmc->device_id_attr.attr.mode = S_IRUGO;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#468: FILE: drivers/char/ipmi/ipmi_msghandler.c:621:
+^I^I$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#471: FILE: drivers/char/ipmi/ipmi_msghandler.c:624:
+		bmc->provides_dev_sdrs_attr.attr.mode = S_IRUGO;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: drivers/char/ipmi/ipmi_msghandler.c:626:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#474: FILE: drivers/char/ipmi/ipmi_msghandler.c:627:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#474: FILE: drivers/char/ipmi/ipmi_msghandler.c:627:
+		
+	

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#477: FILE: drivers/char/ipmi/ipmi_msghandler.c:630:
+		bmc->revision_attr.attr.mode = S_IRUGO;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#479: FILE: drivers/char/ipmi/ipmi_msghandler.c:632:
+^I^I$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#482: FILE: drivers/char/ipmi/ipmi_msghandler.c:635:
+		bmc->firmware_rev_attr.attr.mode = S_IRUGO;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#484: FILE: drivers/char/ipmi/ipmi_msghandler.c:637:
+^I^I$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#487: FILE: drivers/char/ipmi/ipmi_msghandler.c:640:
+		bmc->version_attr.attr.mode = S_IRUGO;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: drivers/char/ipmi/ipmi_msghandler.c:642:
+^I$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#492: FILE: drivers/char/ipmi/ipmi_msghandler.c:645:
+		bmc->add_dev_support_attr.attr.mode = S_IRUGO;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#494: FILE: drivers/char/ipmi/ipmi_msghandler.c:647:
+^I^I$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#497: FILE: drivers/char/ipmi/ipmi_msghandler.c:650:
+		bmc->manufacturer_id_attr.attr.mode = S_IRUGO;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#498: FILE: drivers/char/ipmi/ipmi_msghandler.c:651:
+^I^Ibmc->manufacturer_id_attr.show = manufacturer_id_show;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#499: FILE: drivers/char/ipmi/ipmi_msghandler.c:652:
+^I^I$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#502: FILE: drivers/char/ipmi/ipmi_msghandler.c:655:
+		bmc->product_id_attr.attr.mode = S_IRUGO;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#504: FILE: drivers/char/ipmi/ipmi_msghandler.c:657:
+^I^I$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#507: FILE: drivers/char/ipmi/ipmi_msghandler.c:660:
+		bmc->guid_attr.attr.mode = S_IRUGO;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#509: FILE: drivers/char/ipmi/ipmi_msghandler.c:662:
+^I^I$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#512: FILE: drivers/char/ipmi/ipmi_msghandler.c:665:
+		bmc->aux_firmware_rev_attr.attr.mode = S_IRUGO;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#514: FILE: drivers/char/ipmi/ipmi_msghandler.c:667:
+^I^I^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#516: FILE: drivers/char/ipmi/ipmi_msghandler.c:669:
+		device_create_file(&bmc->dev.dev,
+				&bmc->device_id_attr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: drivers/char/ipmi/ipmi_msghandler.c:671:
+		device_create_file(&bmc->dev.dev,
+				&bmc->provides_dev_sdrs_attr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: drivers/char/ipmi/ipmi_msghandler.c:673:
+		device_create_file(&bmc->dev.dev,
+				&bmc->revision_attr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: drivers/char/ipmi/ipmi_msghandler.c:675:
+		device_create_file(&bmc->dev.dev,
+				&bmc->firmware_rev_attr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#524: FILE: drivers/char/ipmi/ipmi_msghandler.c:677:
+		device_create_file(&bmc->dev.dev,
+				&bmc->version_attr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#526: FILE: drivers/char/ipmi/ipmi_msghandler.c:679:
+		device_create_file(&bmc->dev.dev,
+				&bmc->add_dev_support_attr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#528: FILE: drivers/char/ipmi/ipmi_msghandler.c:681:
+		device_create_file(&bmc->dev.dev,
+				&bmc->manufacturer_id_attr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: drivers/char/ipmi/ipmi_msghandler.c:683:
+		device_create_file(&bmc->dev.dev,
+				&bmc->product_id_attr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: drivers/char/ipmi/ipmi_msghandler.c:685:
+		device_create_file(&bmc->dev.dev,
+				&bmc->aux_firmware_rev_attr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#533: FILE: drivers/char/ipmi/ipmi_msghandler.c:686:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#534: FILE: drivers/char/ipmi/ipmi_msghandler.c:687:
+		if(bmc->guid_present)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#536: FILE: drivers/char/ipmi/ipmi_msghandler.c:689:
+			device_create_file(&bmc->dev.dev,
+					&bmc->guid_attr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#537: FILE: drivers/char/ipmi/ipmi_msghandler.c:690:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#538: FILE: drivers/char/ipmi/ipmi_msghandler.c:691:
+^I^Ibmc->class_dev = $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#541: FILE: drivers/char/ipmi/ipmi_msghandler.c:694:
+			printk(KERN_ERR "ipmi_msghandler: Could not allocate class_device memory\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#546: FILE: drivers/char/ipmi/ipmi_msghandler.c:699:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#547: FILE: drivers/char/ipmi/ipmi_msghandler.c:700:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#547: FILE: drivers/char/ipmi/ipmi_msghandler.c:700:
+	
+	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#550: FILE: drivers/char/ipmi/ipmi_msghandler.c:703:
+^I^Isnprintf(bmc->class_dev->class_id, BUS_ID_SIZE, "bmc%d", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#551: FILE: drivers/char/ipmi/ipmi_msghandler.c:704:
+		snprintf(bmc->class_dev->class_id, BUS_ID_SIZE, "bmc%d", 
+				bmc->id.device_id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#552: FILE: drivers/char/ipmi/ipmi_msghandler.c:705:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#554: FILE: drivers/char/ipmi/ipmi_msghandler.c:707:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: drivers/char/ipmi/ipmi_msghandler.c:708:
+^I^Iprintk(KERN_INFO $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#555: FILE: drivers/char/ipmi/ipmi_msghandler.c:708:
+		printk(KERN_INFO 

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#556: FILE: drivers/char/ipmi/ipmi_msghandler.c:709:
+			"ipmi_si: Found new BMC (man_id: %lu, prod_id: %lu, \

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: drivers/char/ipmi/ipmi_msghandler.c:717:
+^Irv = sysfs_create_link(&si->dev.dev.kobj, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#565: FILE: drivers/char/ipmi/ipmi_msghandler.c:718:
+	rv = sysfs_create_link(&si->dev.dev.kobj, 
+			&bmc->dev.dev.kobj, "bmc");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#567: FILE: drivers/char/ipmi/ipmi_msghandler.c:720:
+		printk(KERN_ERR

ERROR:TRAILING_WHITESPACE: trailing whitespace
#589: FILE: drivers/char/ipmi/ipmi_msghandler.c:3549:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#592: FILE: drivers/char/ipmi/ipmi_msghandler.c:3552:
+		printk(KERN_ERR "ipmi: can't register device class\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#595: FILE: drivers/char/ipmi/ipmi_msghandler.c:3555:
+^I$

WARNING:TYPO_SPELLING: 'Could'nt' may be misspelled - perhaps 'Couldn't'?
#598: FILE: drivers/char/ipmi/ipmi_msghandler.c:3558:
+		printk(KERN_ERR PFX "Could'nt register IPMI driver\n");
 		                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#598: FILE: drivers/char/ipmi/ipmi_msghandler.c:3558:
+		printk(KERN_ERR PFX "Could'nt register IPMI driver\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#601: FILE: drivers/char/ipmi/ipmi_msghandler.c:3561:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#610: FILE: drivers/char/ipmi/ipmi_msghandler.c:3619:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#612: FILE: drivers/char/ipmi/ipmi_msghandler.c:3621:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#621: FILE: drivers/char/ipmi/ipmi_msghandler.c:3668:
+EXPORT_SYMBOL(ipmi_find_bmc_guid);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#622: FILE: drivers/char/ipmi/ipmi_msghandler.c:3669:
+EXPORT_SYMBOL(ipmi_find_bmc_prod_dev_id);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#623: FILE: drivers/char/ipmi/ipmi_msghandler.c:3670:
+EXPORT_SYMBOL(ipmi_bmc_register);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#624: FILE: drivers/char/ipmi/ipmi_msghandler.c:3671:
+EXPORT_SYMBOL(ipmi_bmc_unregister);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#625: FILE: drivers/char/ipmi/ipmi_msghandler.c:3672:
+EXPORT_SYMBOL(ipmi_class);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#634: FILE: drivers/char/ipmi/ipmi_si_intf.c:41:
+/* $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#683: FILE: drivers/char/ipmi/ipmi_si_intf.c:225:
+extern struct class *ipmi_class;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#684: FILE: drivers/char/ipmi/ipmi_si_intf.c:226:
+extern int ipmi_bmc_register(struct ipmi_si_device *si, $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#684: FILE: drivers/char/ipmi/ipmi_si_intf.c:226:
+extern int ipmi_bmc_register(struct ipmi_si_device *si, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#685: FILE: drivers/char/ipmi/ipmi_si_intf.c:227:
+extern int ipmi_bmc_register(struct ipmi_si_device *si, 
+		struct ipmi_bmc_device **bmcref);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#686: FILE: drivers/char/ipmi/ipmi_si_intf.c:228:
+extern void ipmi_bmc_unregister(struct ipmi_si_device *si, $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#686: FILE: drivers/char/ipmi/ipmi_si_intf.c:228:
+extern void ipmi_bmc_unregister(struct ipmi_si_device *si, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#687: FILE: drivers/char/ipmi/ipmi_si_intf.c:229:
+extern void ipmi_bmc_unregister(struct ipmi_si_device *si, 
+		struct ipmi_bmc_device *bmc);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#705: FILE: drivers/char/ipmi/ipmi_si_intf.c:1942:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#710: FILE: drivers/char/ipmi/ipmi_si_intf.c:1947:
+^I/* Do a Get Device GUID command, since it might come back with a $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#711: FILE: drivers/char/ipmi/ipmi_si_intf.c:1948:
+	 * useful globally unique BMC ID. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#717: FILE: drivers/char/ipmi/ipmi_si_intf.c:1954:
+	for (;;)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#719: FILE: drivers/char/ipmi/ipmi_si_intf.c:1956:
+		if (smi_result == SI_SM_CALL_WITH_DELAY) {
[...]
+		else if (smi_result == SI_SM_CALL_WITHOUT_DELAY)
[...]
+		else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#722: FILE: drivers/char/ipmi/ipmi_si_intf.c:1959:
+			smi_result = smi_info->handlers->event(

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#725: FILE: drivers/char/ipmi/ipmi_si_intf.c:1962:
+		else if (smi_result == SI_SM_CALL_WITHOUT_DELAY)
+		{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#725: FILE: drivers/char/ipmi/ipmi_si_intf.c:1962:
+		}
+		else if (smi_result == SI_SM_CALL_WITHOUT_DELAY)

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#727: FILE: drivers/char/ipmi/ipmi_si_intf.c:1964:
+			smi_result = smi_info->handlers->event(

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#730: FILE: drivers/char/ipmi/ipmi_si_intf.c:1967:
+		}
+		else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#735: FILE: drivers/char/ipmi/ipmi_si_intf.c:1972:
+		/* We couldn't get the state machine to run, so whatever's at
+		   the port is probably not an IPMI SMI interface. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#735: FILE: drivers/char/ipmi/ipmi_si_intf.c:1972:
+		   the port is probably not an IPMI SMI interface. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'resp[1] != IPMI_GET_DEVICE_GUID_CMD'
#749: FILE: drivers/char/ipmi/ipmi_si_intf.c:1986:
+	if ((resp[1] != IPMI_GET_DEVICE_GUID_CMD) || (resp[2] != 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'resp[2] != 0'
#749: FILE: drivers/char/ipmi/ipmi_si_intf.c:1986:
+	if ((resp[1] != IPMI_GET_DEVICE_GUID_CMD) || (resp[2] != 0)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#755: FILE: drivers/char/ipmi/ipmi_si_intf.c:1992:
+^I/* Record info from the get device guid, if none returned, null $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#756: FILE: drivers/char/ipmi/ipmi_si_intf.c:1993:
+	 * terminate first char */

ERROR:SPACING: space required before the open brace '{'
#757: FILE: drivers/char/ipmi/ipmi_si_intf.c:1994:
+	if(resp[2]){

ERROR:SPACING: space required before the open parenthesis '('
#757: FILE: drivers/char/ipmi/ipmi_si_intf.c:1994:
+	if(resp[2]){

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#775: FILE: drivers/char/ipmi/ipmi_si_intf.c:2062:
+	       min_t(unsigned long, resp_len-3, sizeof(struct bmc_device_id)));
 	                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#803: FILE: drivers/char/ipmi/ipmi_si_intf.c:2278:
+^Istruct ipmi_si_device *si = to_ipmi_si_device(to_platform_device(dev)); $

WARNING:LINE_SPACING: Missing a blank line after declarations
#804: FILE: drivers/char/ipmi/ipmi_si_intf.c:2279:
+	struct ipmi_si_device *si = to_ipmi_si_device(to_platform_device(dev)); 
+	ipmi_bmc_unregister(si, si->bmc);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#805: FILE: drivers/char/ipmi/ipmi_si_intf.c:2280:
+	printk(KERN_DEBUG "ipmi_si release\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#815: FILE: drivers/char/ipmi/ipmi_si_intf.c:2370:
+^I$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_smi->dev)...) over kmalloc(sizeof(struct ipmi_si_device)...)
#816: FILE: drivers/char/ipmi/ipmi_si_intf.c:2371:
+	new_smi->dev = kmalloc(sizeof(struct ipmi_si_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#818: FILE: drivers/char/ipmi/ipmi_si_intf.c:2373:
+		printk(KERN_ERR "ipmi_si: Could not allocate ipmi_si_device memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#818: FILE: drivers/char/ipmi/ipmi_si_intf.c:2373:
+	if (!new_smi->dev) {
+		printk(KERN_ERR "ipmi_si: Could not allocate ipmi_si_device memory\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#824: FILE: drivers/char/ipmi/ipmi_si_intf.c:2379:
+^Inew_smi->dev->class_dev = $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#827: FILE: drivers/char/ipmi/ipmi_si_intf.c:2382:
+		printk(KERN_ERR "ipmi_si: Could not allocate class_device memory\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#833: FILE: drivers/char/ipmi/ipmi_si_intf.c:2388:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_smi->dev->bmc)...) over kmalloc(sizeof(struct ipmi_bmc_device)...)
#835: FILE: drivers/char/ipmi/ipmi_si_intf.c:2390:
+	new_smi->dev->bmc = kmalloc(sizeof(struct ipmi_bmc_device), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#837: FILE: drivers/char/ipmi/ipmi_si_intf.c:2392:
+		printk(KERN_ERR "ipmi_si: Could not allocate ipmi_bmc_device memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#837: FILE: drivers/char/ipmi/ipmi_si_intf.c:2392:
+	if (!new_smi->dev->bmc) {
+		printk(KERN_ERR "ipmi_si: Could not allocate ipmi_bmc_device memory\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#842: FILE: drivers/char/ipmi/ipmi_si_intf.c:2397:
+^I$

ERROR:SPACING: space required before the open brace '{'
#847: FILE: drivers/char/ipmi/ipmi_si_intf.c:2401:
+	if (rv){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#848: FILE: drivers/char/ipmi/ipmi_si_intf.c:2402:
+		printk(KERN_ERR "ipmi_si: Error while trying to get device id.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#851: FILE: drivers/char/ipmi/ipmi_si_intf.c:2405:
+^I$

ERROR:SPACING: space required before the open brace '{'
#854: FILE: drivers/char/ipmi/ipmi_si_intf.c:2408:
+	if (rv){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#855: FILE: drivers/char/ipmi/ipmi_si_intf.c:2409:
+		printk(KERN_ERR " Error while trying to get GUID.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#878: FILE: drivers/char/ipmi/ipmi_si_intf.c:2486:
+		printk(KERN_ERR

ERROR:TRAILING_WHITESPACE: trailing whitespace
#885: FILE: drivers/char/ipmi/ipmi_si_intf.c:2493:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#891: FILE: drivers/char/ipmi/ipmi_si_intf.c:2499:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#894: FILE: drivers/char/ipmi/ipmi_si_intf.c:2502:
+		printk(KERN_ERR

ERROR:TRAILING_WHITESPACE: trailing whitespace
#902: FILE: drivers/char/ipmi/ipmi_si_intf.c:2510:
+^Isnprintf(new_smi->dev->class_dev->class_id, BUS_ID_SIZE, "smi%d", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#903: FILE: drivers/char/ipmi/ipmi_si_intf.c:2511:
+	snprintf(new_smi->dev->class_dev->class_id, BUS_ID_SIZE, "smi%d", 
+			intf_num);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#905: FILE: drivers/char/ipmi/ipmi_si_intf.c:2513:
+^I$

WARNING:TYPO_SPELLING: 'attatched' may be misspelled - perhaps 'attached'?
#906: FILE: drivers/char/ipmi/ipmi_si_intf.c:2514:
+	/* register the attatched IPMI BMC */
 	                ^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#909: FILE: drivers/char/ipmi/ipmi_si_intf.c:2517:
+		printk(KERN_ERR

ERROR:TRAILING_WHITESPACE: trailing whitespace
#915: FILE: drivers/char/ipmi/ipmi_si_intf.c:2523:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#915: FILE: drivers/char/ipmi/ipmi_si_intf.c:2523:
+
+	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#926: FILE: drivers/char/ipmi/ipmi_si_intf.c:2636:
+^I$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#935: FILE: drivers/char/ipmi/ipmi_si_sm.h:34:
  *  675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#951: FILE: drivers/char/ipmi/ipmi_si_sm.h:79:
+	/* The driver model view of the system interface state machine so it can be
+	   registered/unregistered, also access to the version number so the upper

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#952: FILE: drivers/char/ipmi/ipmi_si_sm.h:80:
+	   layer can print it. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#973: FILE: drivers/char/ipmi/ipmi_smic_sm.c:123:
+/** $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1000: FILE: include/linux/ipmi.h:30:
  *  with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1001: FILE: include/linux/ipmi.h:31:
  *  675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1003: FILE: include/linux/ipmi.h:33:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1005: FILE: include/linux/ipmi.h:35:
+ * Copyright (C) 2005 Yani Ioannou <yani.ioannou@gmail.com> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1022: FILE: include/linux/ipmi.h:79:
+ * struct ipmi_si_driver - represents a ipmi system interface $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1023: FILE: include/linux/ipmi.h:80:
+ * ^Idriver in the kernel.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1028: FILE: include/linux/ipmi.h:85:
+ * An IPMI baseboard management controller (BMC) may be accessed directly by $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1034: FILE: include/linux/ipmi.h:91:
+struct ipmi_si_driver
+{

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1039: FILE: include/linux/ipmi.h:96:
+};
+#define to_ipmi_si_driver(drv) container_of(drv, struct ipmi_si_driver, driver)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1042: FILE: include/linux/ipmi.h:99:
+ * struct ipmi_driver - represents the ipmi messaging interface $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1043: FILE: include/linux/ipmi.h:100:
+ * ^Idriver in the kernel.$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1049: FILE: include/linux/ipmi.h:106:
+struct ipmi_driver
+{

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1053: FILE: include/linux/ipmi.h:110:
+};
+#define to_ipmi_driver(drv) container_of(drv, struct ipmi_driver, driver)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1056: FILE: include/linux/ipmi.h:113:
+ * struct ipmi_si_device - represents ipmi an IPMI system interface in $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1057: FILE: include/linux/ipmi.h:114:
+ * ^Ithe kernel.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1063: FILE: include/linux/ipmi.h:120:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1064: FILE: include/linux/ipmi.h:121:
+ * An IPMI baseboard management controller (BMC) may be accessed directly by $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1069: FILE: include/linux/ipmi.h:126:
+struct ipmi_si_device
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1072: FILE: include/linux/ipmi.h:129:
+^Istruct ipmi_si_driver *driver; $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1076: FILE: include/linux/ipmi.h:133:
+#define to_ipmi_si_device(device) ^I^I^I\$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1076: FILE: include/linux/ipmi.h:133:
+};
+#define to_ipmi_si_device(device) 			\

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1080: FILE: include/linux/ipmi.h:137:
+ * struct bmc_device_id - represents an IPMI BMC's response to an $

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1102: FILE: include/linux/ipmi.h:159:
+} __attribute__((packed));

WARNING:TYPO_SPELLING: 'attatched' may be misspelled - perhaps 'attached'?
#1110: FILE: include/linux/ipmi.h:167:
+ * 	(BMC) attatched to one or more system interfaces.
    	      ^^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1110: FILE: include/linux/ipmi.h:167:
+ * ^I(BMC) attatched to one or more system interfaces.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1115: FILE: include/linux/ipmi.h:172:
+ * @interfaces: the number of system interfaces currently interfacing $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1116: FILE: include/linux/ipmi.h:173:
+ * ^I^Ito this BMC.$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1119: FILE: include/linux/ipmi.h:176:
+struct ipmi_bmc_device
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1139: FILE: include/linux/ipmi.h:196:
+#define to_ipmi_bmc_device(device) ^I^I^I\$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1139: FILE: include/linux/ipmi.h:196:
+};
+#define to_ipmi_bmc_device(device) 			\

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1164: FILE: include/linux/ipmi_smi.h:46:
+typedef struct smi_info *smi_info_t;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000130842.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 137 errors, 76 warnings, 71 checks, 1011 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000130842.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
