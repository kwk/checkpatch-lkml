WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#47: FILE: drivers/infiniband/core/cm.c:35:
+ * $Id: cm.c 4311 2005-12-05 18:42:01Z sean.hefty $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:SPACING: No space is necessary after a cast
#68: FILE: drivers/infiniband/core/cm.c:364:
+		((unsigned long *) dst)[i] = ((unsigned long *) src)[i] &

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#69: FILE: drivers/infiniband/core/cm.c:365:
+					     ((unsigned long *) mask)[i];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: drivers/infiniband/core/cm.c:376:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: drivers/infiniband/core/cm.c:389:
+^I$

WARNING:SIZEOF_PARENTHESIS: sizeof *compare_data should be sizeof(*compare_data)
#195: FILE: drivers/infiniband/core/cm.c:807:
+		cm_id_priv->compare_data = kzalloc(sizeof *compare_data,

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#284: FILE: include/rdma/ib_cm.h:35:
+ * $Id: ib_cm.h 4311 2005-12-05 18:42:01Z sean.hefty $

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be64 should be cpu_to_be64
#310: FILE: include/rdma/ib_cm.h:320:
+#define IB_CMA_SERVICE_ID	__constant_cpu_to_be64(0x0000000001000000ULL)

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be64 should be cpu_to_be64
#311: FILE: include/rdma/ib_cm.h:321:
+#define IB_CMA_SERVICE_ID_MASK	__constant_cpu_to_be64(0xFFFFFFFFFF000000ULL)

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be64 should be cpu_to_be64
#312: FILE: include/rdma/ib_cm.h:322:
+#define IB_SDP_SERVICE_ID	__constant_cpu_to_be64(0x0000000000010000ULL)

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be64 should be cpu_to_be64
#313: FILE: include/rdma/ib_cm.h:323:
+#define IB_SDP_SERVICE_ID_MASK	__constant_cpu_to_be64(0xFFFFFFFFFFFF0000ULL)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000109139.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 7 warnings, 2 checks, 267 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000109139.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
